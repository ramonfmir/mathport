{"min_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n#print min_def /-\ntheorem min_def [K : linear_order β] (x y : «exprβ*») : min x y = map₂ min x y :=\n  induction_on₂ x y fun a b => by\n    cases le_total (a : «exprβ*») b\n    · rw [min_eq_left h, map₂_coe, coe_eq]\n      exact h.mono fun i hi => (min_eq_left hi).symm\n    · rw [min_eq_right h, map₂_coe, coe_eq]\n      exact h.mono fun i hi => (min_eq_right hi).symm\n#align min_def min_def\n-/\n\n",
 "max_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n#print max_def /-\ntheorem max_def [linear_order β] (x y : «exprβ*») : max x y = map₂ max x y :=\n  induction_on₂ x y fun a b => by\n    cases le_total (a : «exprβ*») b\n    · rw [max_eq_right h, map₂_coe, coe_eq]\n      exact h.mono fun i hi => (max_eq_right hi).symm\n    · rw [max_eq_left h, map₂_coe, coe_eq]\n      exact h.mono fun i hi => (max_eq_left hi).symm\n#align max_def max_def\n-/\n\n",
 "lt_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\ntheorem lt_def [preorder β] : ((· < ·) : «exprβ*» → «exprβ*» → Prop) = lift_rel (· < ·) :=\n  by\n  ext (⟨f⟩⟨g⟩)\n  exact coe_lt\n#align lt_def lt_def\n\n",
 "const_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n@[simp, norm_cast]\ntheorem const_sup [HasSup β] (a b : β) : ↑(«expr ⊔ » a b) = («expr ⊔ » ↑a ↑b : «exprβ*») :=\n  rfl\n#align const_sup const_sup\n\n",
 "const_min":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n@[simp]\ntheorem const_min [linear_order β] (x y : β) : (↑(min x y : β) : «exprβ*») = min ↑x ↑y := by rw [min_def, map₂_const]\n#align const_min const_min\n\n",
 "const_max":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n@[simp]\ntheorem const_max [linear_order β] (x y : β) : (↑(max x y : β) : «exprβ*») = max ↑x ↑y := by rw [max_def, map₂_const]\n#align const_max const_max\n\n",
 "const_lt_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\ntheorem const_lt_iff [preorder β] {x y : β} : (↑x : «exprβ*») < ↑y ↔ x < y :=\n  coe_lt.trans lift_rel_const_iff\n#align const_lt_iff const_lt_iff\n\n",
 "const_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\ntheorem const_lt [preorder β] {x y : β} : x ≤ y → (↑x : «exprβ*») ≤ ↑y :=\n  lift_rel_const\n#align const_lt const_lt\n\n",
 "const_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n@[simp, norm_cast]\ntheorem const_inf [HasInf β] (a b : β) : ↑(«expr ⊓ » a b) = («expr ⊓ » ↑a ↑b : «exprβ*») :=\n  rfl\n#align const_inf const_inf\n\n",
 "const_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n@[simp]\ntheorem const_abs [LinearOrderedAddCommGroup β] (x : β) : (↑(|x|) : «exprβ*») = |↑x| := by rw [abs_def, map_const]\n#align const_abs const_abs\n\n",
 "coe_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀* , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀* , » -/\ntheorem coe_pos [preorder β] [Zero β] {f : α → β} :\n    0 < (f : «exprβ*») ↔\n      «expr∀* , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀* , »\" (0 < f x) :=\n  coe_lt\n#align coe_pos coe_pos\n\n",
 "coe_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀* , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀* , » -/\n/-\nCopyright (c) 2019 Abhimanyu Pallavi Sudhir. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Abhimanyu Pallavi Sudhir, Yury Kudryashov\n-/\ntheorem coe_lt [preorder β] {f g : α → β} :\n    (f : «exprβ*») < g ↔\n      «expr∀* , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀* , »\" (f x < g x) :=\n  by simp only [lt_iff_le_not_le, eventually_and, coe_le, eventually_not, eventually_le]\n#align coe_lt coe_lt\n\n",
 "abs_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprβ*» -/\ntheorem abs_def [LinearOrderedAddCommGroup β] (x : «exprβ*») : |x| = map abs x :=\n  induction_on x fun a => rfl\n#align abs_def abs_def\n\n"}