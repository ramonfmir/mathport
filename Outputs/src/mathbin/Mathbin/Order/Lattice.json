{"toDual_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print toDual_sup /-\n@[simp]\ntheorem toDual_sup [HasSup α] (a b : α) : toDual («expr ⊔ » a b) = «expr ⊓ » (toDual a) (toDual b) :=\n  rfl\n#align to_dual_sup toDual_sup\n-/\n\n",
 "toDual_min":
 "#print toDual_min /-\n@[simp]\ntheorem toDual_min (a b : α) : toDual (min a b) = max (toDual a) (toDual b) :=\n  rfl\n#align to_dual_min toDual_min\n-/\n\n",
 "toDual_max":
 "#print toDual_max /-\n@[simp]\ntheorem toDual_max (a b : α) : toDual (max a b) = min (toDual a) (toDual b) :=\n  rfl\n#align to_dual_max toDual_max\n-/\n\n",
 "toDual_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print toDual_inf /-\n@[simp]\ntheorem toDual_inf [HasInf α] (a b : α) : toDual («expr ⊓ » a b) = «expr ⊔ » (toDual a) (toDual b) :=\n  rfl\n#align to_dual_inf toDual_inf\n-/\n\n",
 "swap_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem swap_sup [HasSup α] [HasSup β] (p q : α × β) : («expr ⊔ » p q).swap = «expr ⊔ » p.swap q.swap :=\n  rfl\n#align swap_sup swap_sup\n\n",
 "swap_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem swap_inf [HasInf α] [HasInf β] (p q : α × β) : («expr ⊓ » p q).swap = «expr ⊓ » p.swap q.swap :=\n  rfl\n#align swap_inf swap_inf\n\n",
 "sup_sup_sup_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sup_sup_comm /-\ntheorem sup_sup_sup_comm (a b c d : α) :\n    «expr ⊔ » («expr ⊔ » a b) («expr ⊔ » c d) = «expr ⊔ » («expr ⊔ » a c) («expr ⊔ » b d) := by\n  rw [sup_assoc, sup_left_comm b, ← sup_assoc]\n#align sup_sup_sup_comm sup_sup_sup_comm\n-/\n\n",
 "sup_sup_distrib_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sup_distrib_right /-\ntheorem sup_sup_distrib_right (a b c : α) : «expr ⊔ » («expr ⊔ » a b) c = «expr ⊔ » («expr ⊔ » a c) («expr ⊔ » b c) :=\n  by rw [sup_sup_sup_comm, sup_idem]\n#align sup_sup_distrib_right sup_sup_distrib_right\n-/\n\n",
 "sup_sup_distrib_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sup_distrib_left /-\ntheorem sup_sup_distrib_left (a b c : α) : «expr ⊔ » a («expr ⊔ » b c) = «expr ⊔ » («expr ⊔ » a b) («expr ⊔ » a c) := by\n  rw [sup_sup_sup_comm, sup_idem]\n#align sup_sup_distrib_left sup_sup_distrib_left\n-/\n\n",
 "sup_right_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_right_idem /-\n@[simp]\ntheorem sup_right_idem : «expr ⊔ » («expr ⊔ » a b) b = «expr ⊔ » a b := by rw [sup_assoc, sup_idem]\n#align sup_right_idem sup_right_idem\n-/\n\n",
 "sup_right_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_right_comm /-\ntheorem sup_right_comm (a b c : α) : «expr ⊔ » («expr ⊔ » a b) c = «expr ⊔ » («expr ⊔ » a c) b := by\n  rw [sup_assoc, sup_assoc, @sup_comm _ _ b]\n#align sup_right_comm sup_right_comm\n-/\n\n",
 "sup_lt_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_lt_iff /-\n@[simp]\ntheorem sup_lt_iff : «expr ⊔ » b c < a ↔ b < a ∧ c < a :=\n  ⟨fun h => ⟨le_sup_left.trans_lt h, le_sup_right.trans_lt h⟩, fun h => sup_ind b c h.1 h.2⟩\n#align sup_lt_iff sup_lt_iff\n-/\n\n",
 "sup_left_right_swap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_left_right_swap /-\ntheorem sup_left_right_swap (a b c : α) : «expr ⊔ » («expr ⊔ » a b) c = «expr ⊔ » («expr ⊔ » c b) a := by\n  rw [sup_comm, @sup_comm _ _ a, sup_assoc]\n#align sup_left_right_swap sup_left_right_swap\n-/\n\n",
 "sup_left_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_left_idem /-\n@[simp]\ntheorem sup_left_idem : «expr ⊔ » a («expr ⊔ » a b) = «expr ⊔ » a b := by rw [← sup_assoc, sup_idem]\n#align sup_left_idem sup_left_idem\n-/\n\n",
 "sup_left_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_left_comm /-\ntheorem sup_left_comm (a b c : α) : «expr ⊔ » a («expr ⊔ » b c) = «expr ⊔ » b («expr ⊔ » a c) := by\n  rw [← sup_assoc, ← sup_assoc, @sup_comm α _ a]\n#align sup_left_comm sup_left_comm\n-/\n\n",
 "sup_le_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_le_sup_right /-\ntheorem sup_le_sup_right (h₁ : a ≤ b) (c) : «expr ⊔ » a c ≤ «expr ⊔ » b c :=\n  sup_le_sup h₁ le_rfl\n#align sup_le_sup_right sup_le_sup_right\n-/\n\n",
 "sup_le_sup_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_le_sup_left /-\ntheorem sup_le_sup_left (h₁ : a ≤ b) (c) : «expr ⊔ » c a ≤ «expr ⊔ » c b :=\n  sup_le_sup le_rfl h₁\n#align sup_le_sup_left sup_le_sup_left\n-/\n\n",
 "sup_le_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_le_sup /-\ntheorem sup_le_sup (h₁ : a ≤ b) (h₂ : c ≤ d) : «expr ⊔ » a c ≤ «expr ⊔ » b d :=\n  sup_le (le_sup_of_le_left h₁) (le_sup_of_le_right h₂)\n#align sup_le_sup sup_le_sup\n-/\n\n",
 "sup_le_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print sup_le_inf /-\n@[simp]\ntheorem sup_le_inf : «expr ⊔ » a b ≤ «expr ⊓ » a b ↔ a = b :=\n  ⟨fun h => le_antisymm (le_sup_left.trans <| h.trans inf_le_right) (le_sup_right.trans <| h.trans inf_le_left),\n    by\n    rintro rfl\n    simp⟩\n#align sup_le_inf sup_le_inf\n-/\n\n",
 "sup_le_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_le_iff /-\n@[simp]\ntheorem sup_le_iff : «expr ⊔ » a b ≤ c ↔ a ≤ c ∧ b ≤ c :=\n  ⟨fun h : «expr ⊔ » a b ≤ c => ⟨le_trans le_sup_left h, le_trans le_sup_right h⟩, fun ⟨h₁, h₂⟩ => sup_le h₁ h₂⟩\n#align sup_le_iff sup_le_iff\n-/\n\n",
 "sup_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_le /-\ntheorem sup_le : a ≤ c → b ≤ c → «expr ⊔ » a b ≤ c :=\n  semilattice_sup.sup_le a b c\n#align sup_le sup_le\n-/\n\n",
 "sup_inf_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print sup_inf_self /-\ntheorem sup_inf_self : «expr ⊔ » a («expr ⊓ » a b) = a := by simp\n#align sup_inf_self sup_inf_self\n-/\n\n",
 "sup_inf_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_inf_right /-\ntheorem sup_inf_right : «expr ⊔ » («expr ⊓ » y z) x = «expr ⊓ » («expr ⊔ » y x) («expr ⊔ » z x) := by\n  simp only [sup_inf_left, fun y : α => @sup_comm α _ y x, eq_self_iff_true]\n#align sup_inf_right sup_inf_right\n-/\n\n",
 "sup_inf_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_inf_left /-\ntheorem sup_inf_left : «expr ⊔ » x («expr ⊓ » y z) = «expr ⊓ » («expr ⊔ » x y) («expr ⊔ » x z) :=\n  le_antisymm sup_inf_le le_sup_inf\n#align sup_inf_left sup_inf_left\n-/\n\n",
 "sup_inf_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_inf_le /-\n-- TODO: better names?\ntheorem sup_inf_le : «expr ⊔ » a («expr ⊓ » b c) ≤ «expr ⊓ » («expr ⊔ » a b) («expr ⊔ » a c) :=\n  le_inf (sup_le_sup_left inf_le_left _) (sup_le_sup_left inf_le_right _)\n#align sup_inf_le sup_inf_le\n-/\n\n",
 "sup_ind":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_ind /-\ntheorem sup_ind (a b : α) {p : α → Prop} (ha : p a) (hb : p b) : p («expr ⊔ » a b) :=\n  (is_total.total a b).elim (fun h : a ≤ b => by rwa [sup_eq_right.2 h]) fun h => by rwa [sup_eq_left.2 h]\n#align sup_ind sup_ind\n-/\n\n",
 "sup_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_idem /-\n@[simp]\ntheorem sup_idem : «expr ⊔ » a a = a := by apply le_antisymm <;> simp\n#align sup_idem sup_idem\n-/\n\n",
 "sup_eq_sup_iff_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_eq_sup_iff_right /-\ntheorem sup_eq_sup_iff_right : «expr ⊔ » a c = «expr ⊔ » b c ↔ a ≤ «expr ⊔ » b c ∧ b ≤ «expr ⊔ » a c :=\n  ⟨fun h => ⟨h ▸ le_sup_left, h.symm ▸ le_sup_left⟩, fun h => sup_congr_right h.1 h.2⟩\n#align sup_eq_sup_iff_right sup_eq_sup_iff_right\n-/\n\n",
 "sup_eq_sup_iff_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_eq_sup_iff_left /-\ntheorem sup_eq_sup_iff_left : «expr ⊔ » a b = «expr ⊔ » a c ↔ b ≤ «expr ⊔ » a c ∧ c ≤ «expr ⊔ » a b :=\n  ⟨fun h => ⟨h ▸ le_sup_right, h.symm ▸ le_sup_right⟩, fun h => sup_congr_left h.1 h.2⟩\n#align sup_eq_sup_iff_left sup_eq_sup_iff_left\n-/\n\n",
 "sup_eq_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_eq_right /-\n@[simp]\ntheorem sup_eq_right : «expr ⊔ » a b = b ↔ a ≤ b :=\n  le_antisymm_iff.trans <| by simp [le_rfl]\n#align sup_eq_right sup_eq_right\n-/\n\n",
 "sup_eq_maxDefault":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr ⊔ » -/\n#print sup_eq_maxDefault /-\ntheorem sup_eq_maxDefault [SemilatticeSup α] [decidable_rel ((· ≤ ·) : α → α → Prop)] [is_total α (· ≤ ·)] :\n    («expr ⊔ » · ·) = (max_default : α → α → α) := by\n  ext (x y)\n  dsimp only [max_default]\n  split_ifs with h'\n  exacts[sup_of_le_right h', sup_of_le_left <| (total_of (· ≤ ·) x y).resolve_left h']\n#align sup_eq_max_default sup_eq_maxDefault\n-/\n\n",
 "sup_eq_max":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_eq_max /-\n-- See note [reducible non-instances]\n-- see Note [lower instance priority]\ntheorem sup_eq_max : «expr ⊔ » a b = max a b :=\n  rfl\n#align sup_eq_max sup_eq_max\n-/\n\n",
 "sup_eq_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_eq_left /-\n@[simp]\ntheorem sup_eq_left : «expr ⊔ » a b = a ↔ b ≤ a :=\n  le_antisymm_iff.trans <| by simp [le_rfl]\n#align sup_eq_left sup_eq_left\n-/\n\n",
 "sup_eq_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print sup_eq_inf /-\n@[simp]\ntheorem sup_eq_inf : «expr ⊔ » a b = «expr ⊓ » a b ↔ a = b :=\n  eq_comm.trans inf_eq_sup\n#align sup_eq_inf sup_eq_inf\n-/\n\n",
 "sup_eq_iff_inf_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print sup_eq_iff_inf_eq /-\ntheorem sup_eq_iff_inf_eq : «expr ⊔ » a b = b ↔ «expr ⊓ » a b = a := by rw [sup_eq_right, ← inf_eq_left]\n#align sup_eq_iff_inf_eq sup_eq_iff_inf_eq\n-/\n\n",
 "sup_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem sup_def [HasSup α] [HasSup β] (p q : α × β) : «expr ⊔ » p q = («expr ⊔ » p.fst q.fst, «expr ⊔ » p.snd q.snd) :=\n  rfl\n#align sup_def sup_def\n\n",
 "sup_congr_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_congr_right /-\ntheorem sup_congr_right (ha : a ≤ «expr ⊔ » b c) (hb : b ≤ «expr ⊔ » a c) : «expr ⊔ » a c = «expr ⊔ » b c :=\n  (sup_le ha le_sup_right).antisymm <| sup_le hb le_sup_right\n#align sup_congr_right sup_congr_right\n-/\n\n",
 "sup_congr_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_congr_left /-\ntheorem sup_congr_left (hb : b ≤ «expr ⊔ » a c) (hc : c ≤ «expr ⊔ » a b) : «expr ⊔ » a b = «expr ⊔ » a c :=\n  (sup_le le_sup_left hb).antisymm <| sup_le le_sup_left hc\n#align sup_congr_left sup_congr_left\n-/\n\n",
 "sup_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_comm /-\ntheorem sup_comm : «expr ⊔ » a b = «expr ⊔ » b a := by apply le_antisymm <;> simp\n#align sup_comm sup_comm\n-/\n\n",
 "sup_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_assoc /-\ntheorem sup_assoc : «expr ⊔ » («expr ⊔ » a b) c = «expr ⊔ » a («expr ⊔ » b c) :=\n  eq_of_forall_ge_iff fun x => by simp only [sup_le_iff, and_assoc']\n#align sup_assoc sup_assoc\n-/\n\n",
 "sup_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem sup_apply [∀ i, HasSup (α' i)] (f g : ∀ i, α' i) (i : ι) : («expr ⊔ » f g) i = «expr ⊔ » (f i) (g i) :=\n  rfl\n#align sup_apply sup_apply\n\n",
 "sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/-- Pointwise supremum of two antitone functions is a antitone function. -/\nprotected theorem sup [preorder α] [SemilatticeSup β] {f g : α → β} {s : set α} (hf : antitone_on f s)\n    (hg : antitone_on g s) : antitone_on («expr ⊔ » f g) s := fun x hx y hy h => sup_le_sup (hf hx hy h) (hg hx hy h)\n#align sup sup\n\n",
 "snd_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem snd_sup [HasSup α] [HasSup β] (p q : α × β) : («expr ⊔ » p q).snd = «expr ⊔ » p.snd q.snd :=\n  rfl\n#align snd_sup snd_sup\n\n",
 "snd_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem snd_inf [HasInf α] [HasInf β] (p q : α × β) : («expr ⊓ » p q).snd = «expr ⊓ » p.snd q.snd :=\n  rfl\n#align snd_inf snd_inf\n\n",
 "semilatticeSup_mk'_partialOrder_eq_semilatticeInf_mk'_partialOrder":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print semilatticeSup_mk'_partialOrder_eq_semilatticeInf_mk'_partialOrder /-\n/-- The partial orders from `semilattice_sup_mk'` and `semilattice_inf_mk'` agree\nif `sup` and `inf` satisfy the lattice absorption laws `sup_inf_self` (`a ⊔ a ⊓ b = a`)\nand `inf_sup_self` (`a ⊓ (a ⊔ b) = a`). -/\ntheorem semilatticeSup_mk'_partialOrder_eq_semilatticeInf_mk'_partialOrder {α : Type _} [HasSup α] [HasInf α]\n    (sup_comm : ∀ a b : α, «expr ⊔ » a b = «expr ⊔ » b a)\n    (sup_assoc : ∀ a b c : α, «expr ⊔ » («expr ⊔ » a b) c = «expr ⊔ » a («expr ⊔ » b c))\n    (sup_idem : ∀ a : α, «expr ⊔ » a a = a) (inf_comm : ∀ a b : α, «expr ⊓ » a b = «expr ⊓ » b a)\n    (inf_assoc : ∀ a b c : α, «expr ⊓ » («expr ⊓ » a b) c = «expr ⊓ » a («expr ⊓ » b c))\n    (inf_idem : ∀ a : α, «expr ⊓ » a a = a) (sup_inf_self : ∀ a b : α, «expr ⊔ » a («expr ⊓ » a b) = a)\n    (inf_sup_self : ∀ a b : α, «expr ⊓ » a («expr ⊔ » a b) = a) :\n    @semilattice_sup.to_partial_order _ (SemilatticeSup.mk' sup_comm sup_assoc sup_idem) =\n      @semilattice_inf.to_partial_order _ (SemilatticeInf.mk' inf_comm inf_assoc inf_idem) :=\n  PartialOrder.ext fun a b =>\n    show «expr ⊔ » a b = b ↔ «expr ⊓ » b a = a from\n      ⟨fun h => by rw [← h, inf_comm, inf_sup_self], fun h => by rw [← h, sup_comm, sup_inf_self]⟩\n#align\n  semilattice_sup_mk'_partial_order_eq_semilattice_inf_mk'_partial_order semilatticeSup_mk'_partialOrder_eq_semilatticeInf_mk'_partialOrder\n-/\n\n",
 "right_lt_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print right_lt_sup /-\n@[simp]\ntheorem right_lt_sup : b < «expr ⊔ » a b ↔ ¬a ≤ b :=\n  le_sup_right.lt_iff_ne.trans <| not_congr right_eq_sup\n#align right_lt_sup right_lt_sup\n-/\n\n",
 "right_eq_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print right_eq_sup /-\n@[simp]\ntheorem right_eq_sup : b = «expr ⊔ » a b ↔ a ≤ b :=\n  eq_comm.trans sup_eq_right\n#align right_eq_sup right_eq_sup\n-/\n\n",
 "right_eq_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print right_eq_inf /-\n@[simp]\ntheorem right_eq_inf : b = «expr ⊓ » a b ↔ b ≤ a :=\n  eq_comm.trans inf_eq_right\n#align right_eq_inf right_eq_inf\n-/\n\n",
 "of_map_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem of_map_sup [SemilatticeSup α] [SemilatticeSup β] {f : α → β}\n    (h : ∀ x y, f («expr ⊔ » x y) = «expr ⊔ » (f x) (f y)) : monotone f :=\n  (@of_map_inf (OrderDual α) (OrderDual β) _ _ _ h).dual\n#align of_map_sup of_map_sup\n\n",
 "of_map_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem of_map_inf [SemilatticeInf α] [SemilatticeInf β] {f : α → β}\n    (h : ∀ x y, f («expr ⊓ » x y) = «expr ⊓ » (f x) (f y)) : monotone f := fun x y hxy =>\n  inf_eq_left.1 <| by rw [← h, inf_eq_left.2 hxy]\n#align of_map_inf of_map_inf\n\n",
 "ofDual_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print ofDual_sup /-\n@[simp]\ntheorem ofDual_sup [HasInf α] (a b : «expr ᵒᵈ» α) : ofDual («expr ⊔ » a b) = «expr ⊓ » (ofDual a) (ofDual b) :=\n  rfl\n#align of_dual_sup ofDual_sup\n-/\n\n",
 "ofDual_min":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print ofDual_min /-\n@[simp]\ntheorem ofDual_min (a b : «expr ᵒᵈ» α) : ofDual (min a b) = max (ofDual a) (ofDual b) :=\n  rfl\n#align of_dual_min ofDual_min\n-/\n\n",
 "ofDual_max":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print ofDual_max /-\n@[simp]\ntheorem ofDual_max (a b : «expr ᵒᵈ» α) : ofDual (max a b) = min (ofDual a) (ofDual b) :=\n  rfl\n#align of_dual_max ofDual_max\n-/\n\n",
 "ofDual_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print ofDual_inf /-\n-- see Note [lower instance priority]\n@[simp]\ntheorem ofDual_inf [HasSup α] (a b : «expr ᵒᵈ» α) : ofDual («expr ⊓ » a b) = «expr ⊔ » (ofDual a) (ofDual b) :=\n  rfl\n#align of_dual_inf ofDual_inf\n-/\n\n",
 "mk_sup_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem mk_sup_mk [SemilatticeSup α] {P : α → Prop} (Psup : ∀ ⦃x y⦄, P x → P y → P («expr ⊔ » x y)) {x y : α} (hx : P x)\n    (hy : P y) :\n    (haveI := Subtype.semilatticeSup Psup\n      («expr ⊔ » ⟨x, hx⟩ ⟨y, hy⟩ : subtype P)) =\n      ⟨«expr ⊔ » x y, Psup hx hy⟩ :=\n  rfl\n#align mk_sup_mk mk_sup_mk\n\n",
 "mk_inf_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem mk_inf_mk [SemilatticeInf α] {P : α → Prop} (Pinf : ∀ ⦃x y⦄, P x → P y → P («expr ⊓ » x y)) {x y : α} (hx : P x)\n    (hy : P y) :\n    (haveI := Subtype.semilatticeInf Pinf\n      («expr ⊓ » ⟨x, hx⟩ ⟨y, hy⟩ : subtype P)) =\n      ⟨«expr ⊓ » x y, Pinf hx hy⟩ :=\n  rfl\n#align mk_inf_mk mk_inf_mk\n\n",
 "min_min_min_comm":
 "#print min_min_min_comm /-\ntheorem min_min_min_comm : min (min a b) (min c d) = min (min a c) (min b d) :=\n  inf_inf_inf_comm _ _ _ _\n#align min_min_min_comm min_min_min_comm\n-/\n\n",
 "min":
 "/-- Pointwise minimum of two antitone functions is a antitone function. -/\nprotected theorem min [preorder α] [linear_order β] {f g : α → β} {s : set α} (hf : antitone_on f s)\n    (hg : antitone_on g s) : antitone_on (fun x => min (f x) (g x)) s :=\n  hf.inf hg\n#align min min\n\n",
 "max_max_max_comm":
 "#print max_max_max_comm /-\ntheorem max_max_max_comm : max (max a b) (max c d) = max (max a c) (max b d) :=\n  sup_sup_sup_comm _ _ _ _\n#align max_max_max_comm max_max_max_comm\n-/\n\n",
 "max":
 "/-- Pointwise maximum of two antitone functions is a antitone function. -/\nprotected theorem max [preorder α] [linear_order β] {f g : α → β} {s : set α} (hf : antitone_on f s)\n    (hg : antitone_on g s) : antitone_on (fun x => max (f x) (g x)) s :=\n  hf.sup hg\n#align max max\n\n",
 "map_sup_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem map_sup_le [SemilatticeSup α] [SemilatticeInf β] {f : α → β} (h : antitone f) (x y : α) :\n    f («expr ⊔ » x y) ≤ «expr ⊓ » (f x) (f y) :=\n  h.dual_right.le_map_sup x y\n#align map_sup_le map_sup_le\n\n",
 "map_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem map_sup [SemilatticeInf β] {f : α → β} (hf : antitone f) (x y : α) :\n    f («expr ⊔ » x y) = «expr ⊓ » (f x) (f y) :=\n  hf.dual_right.map_sup x y\n#align map_sup map_sup\n\n",
 "map_inf_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem map_inf_le [SemilatticeInf α] [SemilatticeInf β] {f : α → β} (h : monotone f) (x y : α) :\n    f («expr ⊓ » x y) ≤ «expr ⊓ » (f x) (f y) :=\n  le_inf (h inf_le_left) (h inf_le_right)\n#align map_inf_le map_inf_le\n\n",
 "map_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem map_inf [SemilatticeSup β] {f : α → β} (hf : antitone f) (x y : α) :\n    f («expr ⊓ » x y) = «expr ⊔ » (f x) (f y) :=\n  hf.dual_right.map_inf x y\n#align map_inf map_inf\n\n",
 "lt_sup_or_lt_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print Ne.lt_sup_or_lt_sup /-\ntheorem Ne.lt_sup_or_lt_sup (hab : a ≠ b) : a < «expr ⊔ » a b ∨ b < «expr ⊔ » a b :=\n  hab.symm.not_le_or_not_le.imp left_lt_sup.2 right_lt_sup.2\n#align ne.lt_sup_or_lt_sup Ne.lt_sup_or_lt_sup\n-/\n\n",
 "lt_sup_of_lt_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print lt_sup_of_lt_right /-\ntheorem lt_sup_of_lt_right (h : c < b) : c < «expr ⊔ » a b :=\n  h.trans_le le_sup_right\n#align lt_sup_of_lt_right lt_sup_of_lt_right\n-/\n\n",
 "lt_sup_of_lt_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print lt_sup_of_lt_left /-\ntheorem lt_sup_of_lt_left (h : c < a) : c < «expr ⊔ » a b :=\n  h.trans_le le_sup_left\n#align lt_sup_of_lt_left lt_sup_of_lt_left\n-/\n\n",
 "lt_sup_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print lt_sup_iff /-\n@[simp]\ntheorem lt_sup_iff : a < «expr ⊔ » b c ↔ a < b ∨ a < c :=\n  ⟨fun h =>\n    (total_of (· ≤ ·) c b).imp (fun bc => by rwa [sup_eq_left.2 bc] at h) fun bc => by rwa [sup_eq_right.2 bc] at h,\n    fun h => h.elim lt_sup_of_lt_left lt_sup_of_lt_right⟩\n#align lt_sup_iff lt_sup_iff\n-/\n\n",
 "lt_inf_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print lt_inf_iff /-\n@[simp]\ntheorem lt_inf_iff : a < «expr ⊓ » b c ↔ a < b ∧ a < c :=\n  @sup_lt_iff («expr ᵒᵈ» α) _ _ _ _\n#align lt_inf_iff lt_inf_iff\n-/\n\n",
 "left_or_right_lt_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print left_or_right_lt_sup /-\ntheorem left_or_right_lt_sup (h : a ≠ b) : a < «expr ⊔ » a b ∨ b < «expr ⊔ » a b :=\n  h.not_le_or_not_le.symm.imp left_lt_sup.2 right_lt_sup.2\n#align left_or_right_lt_sup left_or_right_lt_sup\n-/\n\n",
 "left_lt_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print left_lt_sup /-\n@[simp]\ntheorem left_lt_sup : a < «expr ⊔ » a b ↔ ¬b ≤ a :=\n  le_sup_left.lt_iff_ne.trans <| not_congr left_eq_sup\n#align left_lt_sup left_lt_sup\n-/\n\n",
 "left_eq_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print left_eq_sup /-\n@[simp]\ntheorem left_eq_sup : a = «expr ⊔ » a b ↔ b ≤ a :=\n  eq_comm.trans sup_eq_left\n#align left_eq_sup left_eq_sup\n-/\n\n",
 "left_eq_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print left_eq_inf /-\n@[simp]\ntheorem left_eq_inf : a = «expr ⊓ » a b ↔ a ≤ b :=\n  eq_comm.trans inf_eq_left\n#align left_eq_inf left_eq_inf\n-/\n\n",
 "le_sup_right'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_sup_right' /-\n@[ematch]\ntheorem le_sup_right' : b ≤ «expr ⊔ » a b :=\n  le_sup_right\n#align le_sup_right' le_sup_right'\n-/\n\n",
 "le_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_sup_right /-\n@[simp]\ntheorem le_sup_right : b ≤ «expr ⊔ » a b :=\n  semilattice_sup.le_sup_right a b\n#align le_sup_right le_sup_right\n-/\n\n",
 "le_sup_of_le_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_sup_of_le_right /-\ntheorem le_sup_of_le_right (h : c ≤ b) : c ≤ «expr ⊔ » a b :=\n  le_trans h le_sup_right\n#align le_sup_of_le_right le_sup_of_le_right\n-/\n\n",
 "le_sup_of_le_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_sup_of_le_left /-\ntheorem le_sup_of_le_left (h : c ≤ a) : c ≤ «expr ⊔ » a b :=\n  le_trans h le_sup_left\n#align le_sup_of_le_left le_sup_of_le_left\n-/\n\n",
 "le_sup_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_sup_left' /-\n@[ematch]\ntheorem le_sup_left' : a ≤ «expr ⊔ » a b :=\n  le_sup_left\n#align le_sup_left' le_sup_left'\n-/\n\n",
 "le_sup_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_sup_left /-\n-- TODO: automatic construction of dual definitions / theorems\n@[simp]\ntheorem le_sup_left : a ≤ «expr ⊔ » a b :=\n  semilattice_sup.le_sup_left a b\n#align le_sup_left le_sup_left\n-/\n\n",
 "le_sup_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print le_sup_inf /-\ntheorem le_sup_inf : ∀ {x y z : α}, «expr ⊓ » («expr ⊔ » x y) («expr ⊔ » x z) ≤ «expr ⊔ » x («expr ⊓ » y z) :=\n  distrib_lattice.le_sup_inf\n#align le_sup_inf le_sup_inf\n-/\n\n",
 "le_sup_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_sup_iff /-\n@[simp]\ntheorem le_sup_iff : a ≤ «expr ⊔ » b c ↔ a ≤ b ∨ a ≤ c :=\n  ⟨fun h =>\n    (total_of (· ≤ ·) c b).imp (fun bc => by rwa [sup_eq_left.2 bc] at h) fun bc => by rwa [sup_eq_right.2 bc] at h,\n    fun h => h.elim le_sup_of_le_left le_sup_of_le_right⟩\n#align le_sup_iff le_sup_iff\n-/\n\n",
 "le_of_inf_le_sup_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_of_inf_le_sup_le /-\ntheorem le_of_inf_le_sup_le (h₁ : «expr ⊓ » x z ≤ «expr ⊓ » y z) (h₂ : «expr ⊔ » x z ≤ «expr ⊔ » y z) : x ≤ y :=\n  calc\n    x ≤ «expr ⊔ » («expr ⊓ » y z) x := le_sup_right\n    _ = «expr ⊓ » («expr ⊔ » y x) («expr ⊔ » x z) := by rw [sup_inf_right, @sup_comm _ _ x]\n    _ ≤ «expr ⊓ » («expr ⊔ » y x) («expr ⊔ » y z) := inf_le_inf_left _ h₂\n    _ = «expr ⊔ » y («expr ⊓ » x z) := sup_inf_left.symm\n    _ ≤ «expr ⊔ » y («expr ⊓ » y z) := sup_le_sup_left h₁ _\n    _ ≤ _ := sup_le (le_refl y) inf_le_left\n    \n#align le_of_inf_le_sup_le le_of_inf_le_sup_le\n-/\n\n",
 "le_map_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem le_map_sup [SemilatticeSup α] [SemilatticeSup β] {f : α → β} (h : monotone f) (x y : α) :\n    «expr ⊔ » (f x) (f y) ≤ f («expr ⊔ » x y) :=\n  sup_le (h le_sup_left) (h le_sup_right)\n#align le_map_sup le_map_sup\n\n",
 "le_map_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem le_map_inf [SemilatticeInf α] [SemilatticeSup β] {f : α → β} (h : antitone f) (x y : α) :\n    «expr ⊔ » (f x) (f y) ≤ f («expr ⊓ » x y) :=\n  h.dual_right.map_inf_le x y\n#align le_map_inf le_map_inf\n\n",
 "le_inf_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_inf_sup /-\ntheorem le_inf_sup : «expr ⊔ » («expr ⊓ » a b) («expr ⊓ » a c) ≤ «expr ⊓ » a («expr ⊔ » b c) :=\n  sup_le (inf_le_inf_left _ le_sup_left) (inf_le_inf_left _ le_sup_right)\n#align le_inf_sup le_inf_sup\n-/\n\n",
 "le_inf_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print le_inf_iff /-\n@[simp]\ntheorem le_inf_iff : a ≤ «expr ⊓ » b c ↔ a ≤ b ∧ a ≤ c :=\n  @sup_le_iff («expr ᵒᵈ» α) _ _ _ _\n#align le_inf_iff le_inf_iff\n-/\n\n",
 "le_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print le_inf /-\ntheorem le_inf : a ≤ b → a ≤ c → a ≤ «expr ⊓ » b c :=\n  semilattice_inf.le_inf a b c\n#align le_inf le_inf\n-/\n\n",
 "le_iff_exists_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_iff_exists_sup /-\ntheorem le_iff_exists_sup : a ≤ b ↔ ∃ c, b = «expr ⊔ » a c :=\n  by\n  constructor\n  · intro h\n    exact ⟨b, (sup_eq_right.mpr h).symm⟩\n  · rintro ⟨c, rfl : _ = «expr ⊔ » _ _⟩\n    exact le_sup_left\n#align le_iff_exists_sup le_iff_exists_sup\n-/\n\n",
 "le_antisymm'":
 "#print le_antisymm' /-\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl\n-/\n-- TODO: move this eventually, if we decide to use them\n-- TODO: this seems crazy, but it also seems to work reasonably well\n@[ematch]\ntheorem le_antisymm' [partial_order α] : ∀ {a b : α}, a ≤ b → b ≤ a → a = b :=\n  @le_antisymm _ _\n#align le_antisymm' le_antisymm'\n-/\n\n",
 "ite_le_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print ite_le_sup /-\ntheorem ite_le_sup (s s' : α) (P : Prop) [decidable P] : ite P s s' ≤ «expr ⊔ » s s' :=\n  if h : P then (if_pos h).trans_le le_sup_left else (if_neg h).trans_le le_sup_right\n#align ite_le_sup ite_le_sup\n-/\n\n",
 "inf_sup_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print inf_sup_self /-\ntheorem inf_sup_self : «expr ⊓ » a («expr ⊔ » a b) = a := by simp\n#align inf_sup_self inf_sup_self\n-/\n\n",
 "inf_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_sup_right /-\ntheorem inf_sup_right : «expr ⊓ » («expr ⊔ » y z) x = «expr ⊔ » («expr ⊓ » y x) («expr ⊓ » z x) := by\n  simp only [inf_sup_left, fun y : α => @inf_comm α _ y x, eq_self_iff_true]\n#align inf_sup_right inf_sup_right\n-/\n\n",
 "inf_sup_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_sup_left /-\ntheorem inf_sup_left : «expr ⊓ » x («expr ⊔ » y z) = «expr ⊔ » («expr ⊓ » x y) («expr ⊓ » x z) :=\n  calc\n    «expr ⊓ » x («expr ⊔ » y z) = «expr ⊓ » («expr ⊓ » x («expr ⊔ » x z)) («expr ⊔ » y z) := by rw [inf_sup_self]\n    _ = «expr ⊓ » x («expr ⊔ » («expr ⊓ » x y) z) := by simp only [inf_assoc, sup_inf_right, eq_self_iff_true]\n    _ = «expr ⊓ » («expr ⊔ » x («expr ⊓ » x y)) («expr ⊔ » («expr ⊓ » x y) z) := by rw [sup_inf_self]\n    _ = «expr ⊓ » («expr ⊔ » («expr ⊓ » x y) x) («expr ⊔ » («expr ⊓ » x y) z) := by rw [sup_comm]\n    _ = «expr ⊔ » («expr ⊓ » x y) («expr ⊓ » x z) := by rw [sup_inf_left]\n    \n#align inf_sup_left inf_sup_left\n-/\n\n",
 "inf_right_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_right_idem /-\n@[simp]\ntheorem inf_right_idem : «expr ⊓ » («expr ⊓ » a b) b = «expr ⊓ » a b :=\n  @sup_right_idem («expr ᵒᵈ» α) _ a b\n#align inf_right_idem inf_right_idem\n-/\n\n",
 "inf_right_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_right_comm /-\ntheorem inf_right_comm (a b c : α) : «expr ⊓ » («expr ⊓ » a b) c = «expr ⊓ » («expr ⊓ » a c) b :=\n  @sup_right_comm («expr ᵒᵈ» α) _ a b c\n#align inf_right_comm inf_right_comm\n-/\n\n",
 "inf_lt_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print inf_lt_sup /-\n@[simp]\ntheorem inf_lt_sup : «expr ⊓ » a b < «expr ⊔ » a b ↔ a ≠ b := by rw [inf_le_sup.lt_iff_ne, ne.def, inf_eq_sup]\n#align inf_lt_sup inf_lt_sup\n-/\n\n",
 "inf_lt_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_lt_right /-\n@[simp]\ntheorem inf_lt_right : «expr ⊓ » a b < b ↔ ¬b ≤ a :=\n  @right_lt_sup («expr ᵒᵈ» α) _ _ _\n#align inf_lt_right inf_lt_right\n-/\n\n",
 "inf_lt_or_inf_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print Ne.inf_lt_or_inf_lt /-\ntheorem Ne.inf_lt_or_inf_lt : a ≠ b → «expr ⊓ » a b < a ∨ «expr ⊓ » a b < b :=\n  @Ne.lt_sup_or_lt_sup («expr ᵒᵈ» α) _ _ _\n#align ne.inf_lt_or_inf_lt Ne.inf_lt_or_inf_lt\n-/\n\n",
 "inf_lt_of_right_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_lt_of_right_lt /-\ntheorem inf_lt_of_right_lt (h : b < c) : «expr ⊓ » a b < c :=\n  lt_of_le_of_lt inf_le_right h\n#align inf_lt_of_right_lt inf_lt_of_right_lt\n-/\n\n",
 "inf_lt_of_left_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_lt_of_left_lt /-\ntheorem inf_lt_of_left_lt (h : a < c) : «expr ⊓ » a b < c :=\n  lt_of_le_of_lt inf_le_left h\n#align inf_lt_of_left_lt inf_lt_of_left_lt\n-/\n\n",
 "inf_lt_left_or_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_lt_left_or_right /-\ntheorem inf_lt_left_or_right (h : a ≠ b) : «expr ⊓ » a b < a ∨ «expr ⊓ » a b < b :=\n  @left_or_right_lt_sup («expr ᵒᵈ» α) _ _ _ h\n#align inf_lt_left_or_right inf_lt_left_or_right\n-/\n\n",
 "inf_lt_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_lt_left /-\n@[simp]\ntheorem inf_lt_left : «expr ⊓ » a b < a ↔ ¬a ≤ b :=\n  @left_lt_sup («expr ᵒᵈ» α) _ _ _\n#align inf_lt_left inf_lt_left\n-/\n\n",
 "inf_lt_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_lt_iff /-\n@[simp]\ntheorem inf_lt_iff : «expr ⊓ » b c < a ↔ b < a ∨ c < a :=\n  @lt_sup_iff («expr ᵒᵈ» α) _ _ _ _\n#align inf_lt_iff inf_lt_iff\n-/\n\n",
 "inf_left_right_swap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_left_right_swap /-\ntheorem inf_left_right_swap (a b c : α) : «expr ⊓ » («expr ⊓ » a b) c = «expr ⊓ » («expr ⊓ » c b) a :=\n  @sup_left_right_swap («expr ᵒᵈ» α) _ _ _ _\n#align inf_left_right_swap inf_left_right_swap\n-/\n\n",
 "inf_left_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_left_idem /-\n@[simp]\ntheorem inf_left_idem : «expr ⊓ » a («expr ⊓ » a b) = «expr ⊓ » a b :=\n  @sup_left_idem («expr ᵒᵈ» α) _ a b\n#align inf_left_idem inf_left_idem\n-/\n\n",
 "inf_left_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_left_comm /-\ntheorem inf_left_comm (a b c : α) : «expr ⊓ » a («expr ⊓ » b c) = «expr ⊓ » b («expr ⊓ » a c) :=\n  @sup_left_comm («expr ᵒᵈ» α) _ a b c\n#align inf_left_comm inf_left_comm\n-/\n\n",
 "inf_le_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print inf_le_sup /-\n-- here we help Lean to see that the two partial orders are equal\ntheorem inf_le_sup : «expr ⊓ » a b ≤ «expr ⊔ » a b :=\n  inf_le_left.trans le_sup_left\n#align inf_le_sup inf_le_sup\n-/\n\n",
 "inf_le_right'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_right' /-\n@[ematch]\ntheorem inf_le_right' : «expr ⊓ » a b ≤ b :=\n  semilattice_inf.inf_le_right a b\n#align inf_le_right' inf_le_right'\n-/\n\n",
 "inf_le_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_right /-\n@[simp]\ntheorem inf_le_right : «expr ⊓ » a b ≤ b :=\n  semilattice_inf.inf_le_right a b\n#align inf_le_right inf_le_right\n-/\n\n",
 "inf_le_of_right_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_of_right_le /-\ntheorem inf_le_of_right_le (h : b ≤ c) : «expr ⊓ » a b ≤ c :=\n  le_trans inf_le_right h\n#align inf_le_of_right_le inf_le_of_right_le\n-/\n\n",
 "inf_le_of_left_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_of_left_le /-\ntheorem inf_le_of_left_le (h : a ≤ c) : «expr ⊓ » a b ≤ c :=\n  le_trans inf_le_left h\n#align inf_le_of_left_le inf_le_of_left_le\n-/\n\n",
 "inf_le_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_left' /-\n@[ematch]\ntheorem inf_le_left' : «expr ⊓ » a b ≤ a :=\n  semilattice_inf.inf_le_left a b\n#align inf_le_left' inf_le_left'\n-/\n\n",
 "inf_le_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_left /-\n@[simp]\ntheorem inf_le_left : «expr ⊓ » a b ≤ a :=\n  semilattice_inf.inf_le_left a b\n#align inf_le_left inf_le_left\n-/\n\n",
 "inf_le_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_ite /-\ntheorem inf_le_ite (s s' : α) (P : Prop) [decidable P] : «expr ⊓ » s s' ≤ ite P s s' :=\n  @ite_le_sup («expr ᵒᵈ» α) _ _ _ _ _\n#align inf_le_ite inf_le_ite\n-/\n\n",
 "inf_le_inf_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_inf_right /-\ntheorem inf_le_inf_right (a : α) {b c : α} (h : b ≤ c) : «expr ⊓ » b a ≤ «expr ⊓ » c a :=\n  inf_le_inf h le_rfl\n#align inf_le_inf_right inf_le_inf_right\n-/\n\n",
 "inf_le_inf_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_inf_left /-\ntheorem inf_le_inf_left (a : α) {b c : α} (h : b ≤ c) : «expr ⊓ » a b ≤ «expr ⊓ » a c :=\n  inf_le_inf le_rfl h\n#align inf_le_inf_left inf_le_inf_left\n-/\n\n",
 "inf_le_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_inf /-\ntheorem inf_le_inf (h₁ : a ≤ b) (h₂ : c ≤ d) : «expr ⊓ » a c ≤ «expr ⊓ » b d :=\n  @sup_le_sup («expr ᵒᵈ» α) _ _ _ _ _ h₁ h₂\n#align inf_le_inf inf_le_inf\n-/\n\n",
 "inf_le_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_le_iff /-\n@[simp]\ntheorem inf_le_iff : «expr ⊓ » b c ≤ a ↔ b ≤ a ∨ c ≤ a :=\n  @le_sup_iff («expr ᵒᵈ» α) _ _ _ _\n#align inf_le_iff inf_le_iff\n-/\n\n",
 "inf_inf_inf_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_inf_inf_comm /-\ntheorem inf_inf_inf_comm (a b c d : α) :\n    «expr ⊓ » («expr ⊓ » a b) («expr ⊓ » c d) = «expr ⊓ » («expr ⊓ » a c) («expr ⊓ » b d) :=\n  @sup_sup_sup_comm («expr ᵒᵈ» α) _ _ _ _ _\n#align inf_inf_inf_comm inf_inf_inf_comm\n-/\n\n",
 "inf_inf_distrib_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_inf_distrib_right /-\ntheorem inf_inf_distrib_right (a b c : α) : «expr ⊓ » («expr ⊓ » a b) c = «expr ⊓ » («expr ⊓ » a c) («expr ⊓ » b c) :=\n  @sup_sup_distrib_right («expr ᵒᵈ» α) _ _ _ _\n#align inf_inf_distrib_right inf_inf_distrib_right\n-/\n\n",
 "inf_inf_distrib_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_inf_distrib_left /-\ntheorem inf_inf_distrib_left (a b c : α) : «expr ⊓ » a («expr ⊓ » b c) = «expr ⊓ » («expr ⊓ » a b) («expr ⊓ » a c) :=\n  @sup_sup_distrib_left («expr ᵒᵈ» α) _ _ _ _\n#align inf_inf_distrib_left inf_inf_distrib_left\n-/\n\n",
 "inf_ind":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_ind /-\ntheorem inf_ind (a b : α) {p : α → Prop} : p a → p b → p («expr ⊓ » a b) :=\n  @sup_ind («expr ᵒᵈ» α) _ _ _ _\n#align inf_ind inf_ind\n-/\n\n",
 "inf_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_idem /-\n@[simp]\ntheorem inf_idem : «expr ⊓ » a a = a :=\n  @sup_idem («expr ᵒᵈ» α) _ _\n#align inf_idem inf_idem\n-/\n\n",
 "inf_eq_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print inf_eq_sup /-\n@[simp]\ntheorem inf_eq_sup : «expr ⊓ » a b = «expr ⊔ » a b ↔ a = b := by rw [← inf_le_sup.ge_iff_eq, sup_le_inf]\n#align inf_eq_sup inf_eq_sup\n-/\n\n",
 "inf_eq_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_eq_right /-\n@[simp]\ntheorem inf_eq_right : «expr ⊓ » a b = b ↔ b ≤ a :=\n  le_antisymm_iff.trans <| by simp [le_rfl]\n#align inf_eq_right inf_eq_right\n-/\n\n",
 "inf_eq_minDefault":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr ⊓ » -/\n#print inf_eq_minDefault /-\ntheorem inf_eq_minDefault [SemilatticeInf α] [decidable_rel ((· ≤ ·) : α → α → Prop)] [is_total α (· ≤ ·)] :\n    («expr ⊓ » · ·) = (min_default : α → α → α) := by\n  ext (x y)\n  dsimp only [min_default]\n  split_ifs with h'\n  exacts[inf_of_le_left h', inf_of_le_right <| (total_of (· ≤ ·) x y).resolve_left h']\n#align inf_eq_min_default inf_eq_minDefault\n-/\n\n",
 "inf_eq_min":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_eq_min /-\ntheorem inf_eq_min : «expr ⊓ » a b = min a b :=\n  rfl\n#align inf_eq_min inf_eq_min\n-/\n\n",
 "inf_eq_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_eq_left /-\n@[simp]\ntheorem inf_eq_left : «expr ⊓ » a b = a ↔ a ≤ b :=\n  le_antisymm_iff.trans <| by simp [le_rfl]\n#align inf_eq_left inf_eq_left\n-/\n\n",
 "inf_eq_inf_iff_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_eq_inf_iff_right /-\ntheorem inf_eq_inf_iff_right : «expr ⊓ » a c = «expr ⊓ » b c ↔ «expr ⊓ » b c ≤ a ∧ «expr ⊓ » a c ≤ b :=\n  @sup_eq_sup_iff_right («expr ᵒᵈ» α) _ _ _ _\n#align inf_eq_inf_iff_right inf_eq_inf_iff_right\n-/\n\n",
 "inf_eq_inf_iff_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_eq_inf_iff_left /-\ntheorem inf_eq_inf_iff_left : «expr ⊓ » a b = «expr ⊓ » a c ↔ «expr ⊓ » a c ≤ b ∧ «expr ⊓ » a b ≤ c :=\n  @sup_eq_sup_iff_left («expr ᵒᵈ» α) _ _ _ _\n#align inf_eq_inf_iff_left inf_eq_inf_iff_left\n-/\n\n",
 "inf_eq_and_sup_eq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print inf_eq_and_sup_eq_iff /-\ntheorem inf_eq_and_sup_eq_iff : «expr ⊓ » a b = c ∧ «expr ⊔ » a b = c ↔ a = c ∧ b = c :=\n  by\n  refine' ⟨fun h => _, _⟩\n  · obtain rfl := sup_eq_inf.1 (h.2.trans h.1.symm)\n    simpa using h\n  · rintro ⟨rfl, rfl⟩\n    exact ⟨inf_idem, sup_idem⟩\n#align inf_eq_and_sup_eq_iff inf_eq_and_sup_eq_iff\n-/\n\n",
 "inf_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem inf_def [HasInf α] [HasInf β] (p q : α × β) : «expr ⊓ » p q = («expr ⊓ » p.fst q.fst, «expr ⊓ » p.snd q.snd) :=\n  rfl\n#align inf_def inf_def\n\n",
 "inf_congr_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_congr_right /-\ntheorem inf_congr_right (h1 : «expr ⊓ » b c ≤ a) (h2 : «expr ⊓ » a c ≤ b) : «expr ⊓ » a c = «expr ⊓ » b c :=\n  @sup_congr_right («expr ᵒᵈ» α) _ _ _ _ h1 h2\n#align inf_congr_right inf_congr_right\n-/\n\n",
 "inf_congr_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_congr_left /-\ntheorem inf_congr_left (hb : «expr ⊓ » a c ≤ b) (hc : «expr ⊓ » a b ≤ c) : «expr ⊓ » a b = «expr ⊓ » a c :=\n  @sup_congr_left («expr ᵒᵈ» α) _ _ _ _ hb hc\n#align inf_congr_left inf_congr_left\n-/\n\n",
 "inf_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_comm /-\ntheorem inf_comm : «expr ⊓ » a b = «expr ⊓ » b a :=\n  @sup_comm («expr ᵒᵈ» α) _ _ _\n#align inf_comm inf_comm\n-/\n\n",
 "inf_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_assoc /-\ntheorem inf_assoc : «expr ⊓ » («expr ⊓ » a b) c = «expr ⊓ » a («expr ⊓ » b c) :=\n  @sup_assoc («expr ᵒᵈ» α) _ a b c\n#align inf_assoc inf_assoc\n-/\n\n",
 "inf_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem inf_apply [∀ i, HasInf (α' i)] (f g : ∀ i, α' i) (i : ι) : («expr ⊓ » f g) i = «expr ⊓ » (f i) (g i) :=\n  rfl\n#align inf_apply inf_apply\n\n",
 "inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/-- Pointwise infimum of two antitone functions is a antitone function. -/\nprotected theorem inf [preorder α] [SemilatticeInf β] {f g : α → β} {s : set α} (hf : antitone_on f s)\n    (hg : antitone_on g s) : antitone_on («expr ⊓ » f g) s :=\n  (hf.dual.sup hg.dual).dual\n#align inf inf\n\n",
 "fst_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem fst_sup [HasSup α] [HasSup β] (p q : α × β) : («expr ⊔ » p q).fst = «expr ⊔ » p.fst q.fst :=\n  rfl\n#align fst_sup fst_sup\n\n",
 "fst_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem fst_inf [HasInf α] [HasInf β] (p q : α × β) : («expr ⊓ » p q).fst = «expr ⊓ » p.fst q.fst :=\n  rfl\n#align fst_inf fst_inf\n\n",
 "forall_le_of_antitone":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print Monotone.forall_le_of_antitone /-\n/-- If `f` is monotone, `g` is antitone, and `f ≤ g`, then for all `a`, `b` we have `f a ≤ g b`. -/\ntheorem Monotone.forall_le_of_antitone {β : Type _} [preorder β] {f g : α → β} (hf : monotone f) (hg : antitone g)\n    (h : f ≤ g) (m n : α) : f m ≤ g n :=\n  calc\n    f m ≤ f («expr ⊔ » m n) := hf le_sup_left\n    _ ≤ g («expr ⊔ » m n) := h _\n    _ ≤ g n := hg le_sup_right\n    \n#align monotone.forall_le_of_antitone Monotone.forall_le_of_antitone\n-/\n\n",
 "ext_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print SemilatticeSup.ext_sup /-\ntheorem SemilatticeSup.ext_sup {α} {A B : SemilatticeSup α}\n    (H :\n      ∀ x y : α,\n        (haveI := A\n          x ≤ y) ↔\n          x ≤ y)\n    (x y : α) :\n    (haveI := A\n      «expr ⊔ » x y) =\n      «expr ⊔ » x y :=\n  eq_of_forall_ge_iff fun c => by simp only [sup_le_iff] <;> rw [← H, @sup_le_iff α A, H, H]\n#align semilattice_sup.ext_sup SemilatticeSup.ext_sup\n-/\n\n",
 "ext_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print SemilatticeInf.ext_inf /-\ntheorem SemilatticeInf.ext_inf {α} {A B : SemilatticeInf α}\n    (H :\n      ∀ x y : α,\n        (haveI := A\n          x ≤ y) ↔\n          x ≤ y)\n    (x y : α) :\n    (haveI := A\n      «expr ⊓ » x y) =\n      «expr ⊓ » x y :=\n  eq_of_forall_le_iff fun c => by simp only [le_inf_iff] <;> rw [← H, @le_inf_iff α A, H, H]\n#align semilattice_inf.ext_inf SemilatticeInf.ext_inf\n-/\n\n",
 "ext":
 "#print Lattice.ext /-\ntheorem Lattice.ext {α} {A B : Lattice α}\n    (H :\n      ∀ x y : α,\n        (haveI := A\n          x ≤ y) ↔\n          x ≤ y) :\n    A = B :=\n  by\n  have SS : @lattice.to_semilattice_sup α A = @lattice.to_semilattice_sup α B := SemilatticeSup.ext H\n  have II := SemilatticeInf.ext H\n  cases A; cases B\n  injection SS <;> injection II <;> congr\n#align lattice.ext Lattice.ext\n-/\n\n",
 "eq_of_inf_eq_sup_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print eq_of_inf_eq_sup_eq /-\ntheorem eq_of_inf_eq_sup_eq {α : Type u} [DistribLattice α] {a b c : α} (h₁ : «expr ⊓ » b a = «expr ⊓ » c a)\n    (h₂ : «expr ⊔ » b a = «expr ⊔ » c a) : b = c :=\n  le_antisymm (le_of_inf_le_sup_le (le_of_eq h₁) (le_of_eq h₂))\n    (le_of_inf_le_sup_le (le_of_eq h₁.symm) (le_of_eq h₂.symm))\n#align eq_of_inf_eq_sup_eq eq_of_inf_eq_sup_eq\n-/\n\n",
 "dual_dual":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print SemilatticeInf.dual_dual /-\ntheorem SemilatticeInf.dual_dual (α : Type _) [H : SemilatticeInf α] : order_dual.semilattice_inf («expr ᵒᵈ» α) = H :=\n  SemilatticeInf.ext fun _ _ => iff.rfl\n#align semilattice_inf.dual_dual SemilatticeInf.dual_dual\n-/\n\n",
 "coe_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp, norm_cast]\ntheorem coe_sup [SemilatticeSup α] {P : α → Prop} (Psup : ∀ ⦃x y⦄, P x → P y → P («expr ⊔ » x y)) (x y : subtype P) :\n    (haveI := Subtype.semilatticeSup Psup\n        («expr ⊔ » x y : subtype P) :\n        α) =\n      «expr ⊔ » x y :=\n  rfl\n#align coe_sup coe_sup\n\n",
 "coe_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp, norm_cast]\ntheorem coe_inf [SemilatticeInf α] {P : α → Prop} (Pinf : ∀ ⦃x y⦄, P x → P y → P («expr ⊓ » x y)) (x y : subtype P) :\n    (haveI := Subtype.semilatticeInf Pinf\n        («expr ⊓ » x y : subtype P) :\n        α) =\n      «expr ⊓ » x y :=\n  rfl\n#align coe_inf coe_inf\n\n"}