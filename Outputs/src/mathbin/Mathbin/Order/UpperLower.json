{"upper_closure_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem upper_closure_univ : upper_closure (univ : set α) = «expr⊥» :=\n  le_bot_iff.1 subset_upper_closure\n#align upper_closure_univ upper_closure_univ\n\n",
 "upper_closure_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem upper_closure_union (s t : set α) : upper_closure (s ∪ t) = «expr ⊓ » (upper_closure s) (upper_closure t) :=\n  by\n  ext\n  simp [or_and_right, exists_or]\n#align upper_closure_union upper_closure_union\n\n",
 "upper_closure_singleton":
 "@[simp]\ntheorem upper_closure_singleton (a : α) : upper_closure ({a} : set α) = upper_set.Ici a :=\n  by\n  ext\n  simp\n#align upper_closure_singleton upper_closure_singleton\n\n",
 "upper_closure_sUnion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem upper_closure_sUnion (S : set (set α)) :\n    upper_closure (⋃₀ S) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (upper_closure s) :=\n  by simp_rw [sUnion_eq_bUnion, upper_closure_Union]\n#align upper_closure_sUnion upper_closure_sUnion\n\n",
 "upper_closure_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem upper_closure_prod (s : set α) (t : set β) :\n    upper_closure (lower_set.prod s t) = lower_set.prod (upper_closure s) (upper_closure t) :=\n  by\n  ext\n  simp [Prod.le_def, and_and_and_comm _ (_ ∈ t)]\n#align upper_closure_prod upper_closure_prod\n\n",
 "upper_closure_min":
 "theorem upper_closure_min (h : s ⊆ t) (ht : is_upper_set t) : ↑(upper_closure s) ⊆ t := fun a ⟨b, hb, hba⟩ =>\n  ht hba <| h hb\n#align upper_closure_min upper_closure_min\n\n",
 "upper_closure_inter_lower_closure":
 "theorem set.ord_connected.upper_closure_inter_lower_closure (h : s.ord_connected) :\n    ↑(upper_closure s) ∩ ↑(lower_closure s) = s :=\n  (subset_inter subset_upper_closure subset_lower_closure).antisymm' fun a ⟨⟨b, hb, hba⟩, c, hc, hac⟩ =>\n    h.out hb hc ⟨hba, hac⟩\n#align set.ord_connected.upper_closure_inter_lower_closure set.ord_connected.upper_closure_inter_lower_closure\n\n",
 "upper_closure_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem upper_closure_image (f : «expr ≃o » α β) : upper_closure («expr '' » f s) = upper_set.map f (upper_closure s) :=\n  by\n  rw [← f.symm_symm, ← upper_set.symm_map, f.symm_symm]\n  ext\n  simp [-upper_set.symm_map, upper_set.map, OrderIso.symm, ← f.le_symm_apply]\n#align upper_closure_image upper_closure_image\n\n",
 "upper_closure_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem upper_closure_eq_top_iff : upper_closure s = «expr⊤» ↔ s = ∅ :=\n  ⟨fun h => subset_empty_iff.1 <| subset_upper_closure.trans (congr_arg coe h).subset,\n    by\n    rintro rfl\n    exact upper_closure_empty⟩\n#align upper_closure_eq_top_iff upper_closure_eq_top_iff\n\n",
 "upper_closure_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem upper_closure_empty : upper_closure (∅ : set α) = «expr⊤» :=\n  by\n  ext\n  simp\n#align upper_closure_empty upper_closure_empty\n\n",
 "upper_closure_anti":
 "theorem upper_closure_anti : antitone (upper_closure : set α → upper_set α) :=\n  gc_upper_closure_coe.monotone_l\n#align upper_closure_anti upper_closure_anti\n\n",
 "upper_closure_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem upper_closure_Union (f : ι → set α) :\n    upper_closure\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (upper_closure (f i)) :=\n  by\n  ext\n  simp [← exists_and_right, @exists_comm α]\n#align upper_closure_Union upper_closure_Union\n\n",
 "upper_closure":
 "@[simp]\nprotected theorem upper_set.upper_closure (s : upper_set α) : upper_closure (s : set α) = s :=\n  SetLike.coe_injective s.2.upper_closure\n#align upper_set.upper_closure upper_set.upper_closure\n\n",
 "upper":
 "protected theorem upper (s : upper_set α) : is_upper_set (s : set α) :=\n  s.upper'\n#align upper upper\n\n",
 "union":
 "theorem is_lower_set.union (hs : is_lower_set s) (ht : is_lower_set t) : is_lower_set (s ∪ t) := fun a b h =>\n  Or.imp (hs h) (ht h)\n#align is_lower_set.union is_lower_set.union\n\n",
 "top_prod_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem top_prod_top : lower_set.prod («expr⊤» : lower_set α) («expr⊤» : lower_set β) = «expr⊤» :=\n  ext univ_prod_univ\n#align top_prod_top top_prod_top\n\n",
 "top_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem top_prod : upper_set.prod («expr⊤» : upper_set α) t = «expr⊤» :=\n  ext empty_prod\n#align top_prod top_prod\n\n",
 "top_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem is_upper_set.top_mem (hs : is_upper_set s) : «expr⊤» ∈ s ↔ s.nonempty :=\n  ⟨fun h => ⟨_, h⟩, fun ⟨a, ha⟩ => hs le_top ha⟩\n#align is_upper_set.top_mem is_upper_set.top_mem\n\n",
 "symm_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n@[simp]\ntheorem symm_map (f : «expr ≃o » α β) : (map f).symm = map f.symm :=\n  fun_like.ext _ _ fun s => SetLike.coe_injective <| Set.preimage_equiv_eq_image_symm _ _\n#align symm_map symm_map\n\n",
 "supr_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\ntheorem lower_set.supr_Iic (s : set α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (lower_set.Iic a) =\n      lower_closure s :=\n  by\n  ext\n  simp\n#align lower_set.supr_Iic lower_set.supr_Iic\n\n",
 "sup_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem sup_prod : lower_set.prod («expr ⊔ » s₁ s₂) t = «expr ⊔ » (lower_set.prod s₁ t) (lower_set.prod s₂ t) :=\n  ext union_prod\n#align sup_prod sup_prod\n\n",
 "subset_upper_closure":
 "theorem subset_upper_closure : s ⊆ upper_closure s := fun x hx => ⟨x, hx, le_rfl⟩\n#align subset_upper_closure subset_upper_closure\n\n",
 "subset_lower_closure":
 "theorem subset_lower_closure : s ⊆ lower_closure s := fun x hx => ⟨x, hx, le_rfl⟩\n#align subset_lower_closure subset_lower_closure\n\n",
 "prod_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem prod_top : upper_set.prod s («expr⊤» : upper_set β) = «expr⊤» :=\n  ext prod_empty\n#align prod_top prod_top\n\n",
 "prod_sup_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem prod_sup_prod :\n    «expr ⊔ » (upper_set.prod s₁ t₁) (upper_set.prod s₂ t₂) = upper_set.prod («expr ⊔ » s₁ s₂) («expr ⊔ » t₁ t₂) :=\n  ext prod_inter_prod\n#align prod_sup_prod prod_sup_prod\n\n",
 "prod_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem prod_sup : lower_set.prod s («expr ⊔ » t₁ t₂) = «expr ⊔ » (lower_set.prod s t₁) (lower_set.prod s t₂) :=\n  ext prod_union\n#align prod_sup prod_sup\n\n",
 "prod_self_lt_prod_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem prod_self_lt_prod_self : lower_set.prod s₁ s₁ < lower_set.prod s₂ s₂ ↔ s₁ < s₂ :=\n  prod_self_ssubset_prod_self\n#align prod_self_lt_prod_self prod_self_lt_prod_self\n\n",
 "prod_self_le_prod_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem prod_self_le_prod_self : lower_set.prod s₁ s₁ ≤ lower_set.prod s₂ s₂ ↔ s₁ ≤ s₂ :=\n  prod_self_subset_prod_self\n#align prod_self_le_prod_self prod_self_le_prod_self\n\n",
 "prod_mono_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\ntheorem prod_mono_right : t₁ ≤ t₂ → lower_set.prod s t₁ ≤ lower_set.prod s t₂ :=\n  prod_mono_right\n#align prod_mono_right prod_mono_right\n\n",
 "prod_mono_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\ntheorem prod_mono_left : s₁ ≤ s₂ → lower_set.prod s₁ t ≤ lower_set.prod s₂ t :=\n  prod_mono_left\n#align prod_mono_left prod_mono_left\n\n",
 "prod_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\ntheorem prod_mono : s₁ ≤ s₂ → t₁ ≤ t₂ → lower_set.prod s₁ t₁ ≤ lower_set.prod s₂ t₂ :=\n  prod_mono\n#align prod_mono prod_mono\n\n",
 "prod_le_prod_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem prod_le_prod_iff :\n    lower_set.prod s₁ t₁ ≤ lower_set.prod s₂ t₂ ↔ s₁ ≤ s₂ ∧ t₁ ≤ t₂ ∨ s₁ = «expr⊥» ∨ t₁ = «expr⊥» :=\n  prod_subset_prod_iff.trans <| by simp\n#align prod_le_prod_iff prod_le_prod_iff\n\n",
 "prod_inf_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem prod_inf_prod :\n    «expr ⊓ » (lower_set.prod s₁ t₁) (lower_set.prod s₂ t₂) = lower_set.prod («expr ⊓ » s₁ s₂) («expr ⊓ » t₁ t₂) :=\n  ext prod_inter_prod\n#align prod_inf_prod prod_inf_prod\n\n",
 "prod_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem prod_inf : lower_set.prod s («expr ⊓ » t₁ t₂) = «expr ⊓ » (lower_set.prod s t₁) (lower_set.prod s t₂) :=\n  ext prod_inter\n#align prod_inf prod_inf\n\n",
 "prod_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem prod_eq_top : upper_set.prod s t = «expr⊤» ↔ s = «expr⊤» ∨ t = «expr⊤» :=\n  by\n  simp_rw [SetLike.ext'_iff]\n  exact prod_eq_empty_iff\n#align prod_eq_top prod_eq_top\n\n",
 "prod_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem prod_eq_bot : lower_set.prod s t = «expr⊥» ↔ s = «expr⊥» ∨ t = «expr⊥» :=\n  by\n  simp_rw [SetLike.ext'_iff]\n  exact prod_eq_empty_iff\n#align prod_eq_bot prod_eq_bot\n\n",
 "prod_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem prod_bot : lower_set.prod s («expr⊥» : lower_set β) = «expr⊥» :=\n  ext prod_empty\n#align prod_bot prod_bot\n\n",
 "prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.product -/\ntheorem is_lower_set.prod (hs : is_lower_set s) (ht : is_lower_set t) : is_lower_set (finset.product s t) :=\n  fun a b h ha => ⟨hs h.1 ha.1, ht h.2 ha.2⟩\n#align is_lower_set.prod is_lower_set.prod\n\n",
 "preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem is_lower_set.preimage (hs : is_lower_set s) {f : β → α} (hf : monotone f) :\n    is_lower_set («expr ⁻¹' » f s : set β) := fun x y hxy => hs <| hf hxy\n#align is_lower_set.preimage is_lower_set.preimage\n\n",
 "ord_connected_iff_upper_closure_inter_lower_closure":
 "theorem ord_connected_iff_upper_closure_inter_lower_closure :\n    s.ord_connected ↔ ↑(upper_closure s) ∩ ↑(lower_closure s) = s :=\n  by\n  refine' ⟨set.ord_connected.upper_closure_inter_lower_closure, fun h => _⟩\n  rw [← h]\n  exact (upper_set.upper _).ord_connected.inter (lower_set.lower _).ord_connected\n#align ord_connected_iff_upper_closure_inter_lower_closure ord_connected_iff_upper_closure_inter_lower_closure\n\n",
 "ord_connected":
 "theorem is_lower_set.ord_connected (h : is_lower_set s) : s.ord_connected :=\n  ⟨fun a _ b hb => Icc_subset_Iic_self.trans <| h.Iic_subset hb⟩\n#align is_lower_set.ord_connected is_lower_set.ord_connected\n\n",
 "not_top_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem is_upper_set.not_top_mem (hs : is_upper_set s) : «expr⊤» ∉ s ↔ s = ∅ :=\n  hs.top_mem.not.trans not_nonempty_iff_eq_empty\n#align is_upper_set.not_top_mem is_upper_set.not_top_mem\n\n",
 "not_mem_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem not_mem_top : a ∉ («expr⊤» : upper_set α) :=\n  id\n#align not_mem_top not_mem_top\n\n",
 "not_mem_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem not_mem_bot : a ∉ («expr⊥» : lower_set α) :=\n  id\n#align not_mem_bot not_mem_bot\n\n",
 "not_bot_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem is_lower_set.not_bot_mem (hs : is_lower_set s) : «expr⊥» ∉ s ↔ s = ∅ :=\n  hs.bot_mem.not.trans not_nonempty_iff_eq_empty\n#align is_lower_set.not_bot_mem is_lower_set.not_bot_mem\n\n",
 "not_bdd_below_Iio":
 "theorem not_bdd_below_Iio : ¬BddBelow (Iio a) :=\n  (is_lower_set_Iio _).not_bdd_below nonempty_Iio\n#align not_bdd_below_Iio not_bdd_below_Iio\n\n",
 "not_bdd_below_Iic":
 "theorem not_bdd_below_Iic : ¬BddBelow (Iic a) :=\n  (is_lower_set_Iic _).not_bdd_below nonempty_Iic\n#align not_bdd_below_Iic not_bdd_below_Iic\n\n",
 "not_bdd_below":
 "theorem is_lower_set.not_bdd_below (hs : is_lower_set s) : s.nonempty → ¬BddBelow s :=\n  by\n  rintro ⟨a, ha⟩ ⟨b, hb⟩\n  obtain ⟨c, hc⟩ := exists_lt b\n  exact hc.not_le (hb <| hs (hc.le.trans <| hb ha) ha)\n#align is_lower_set.not_bdd_below is_lower_set.not_bdd_below\n\n",
 "not_bdd_above_Ioi":
 "theorem not_bdd_above_Ioi : ¬BddAbove (Ioi a) :=\n  (is_upper_set_Ioi _).not_bdd_above nonempty_Ioi\n#align not_bdd_above_Ioi not_bdd_above_Ioi\n\n",
 "not_bdd_above_Ici":
 "theorem not_bdd_above_Ici : ¬BddAbove (Ici a) :=\n  (is_upper_set_Ici _).not_bdd_above nonempty_Ici\n#align not_bdd_above_Ici not_bdd_above_Ici\n\n",
 "not_bdd_above":
 "theorem is_upper_set.not_bdd_above (hs : is_upper_set s) : s.nonempty → ¬BddAbove s :=\n  by\n  rintro ⟨a, ha⟩ ⟨b, hb⟩\n  obtain ⟨c, hc⟩ := exists_gt b\n  exact hc.not_le (hb <| hs ((hb ha).trans hc.le) ha)\n#align is_upper_set.not_bdd_above is_upper_set.not_bdd_above\n\n",
 "monotone_mem":
 "@[simp]\ntheorem set.monotone_mem : monotone (· ∈ s) ↔ is_upper_set s :=\n  iff.rfl\n#align set.monotone_mem set.monotone_mem\n\n",
 "mem_upper_closure":
 "@[simp]\ntheorem mem_upper_closure : x ∈ upper_closure s ↔ ∃ a ∈ s, a ≤ x :=\n  iff.rfl\n#align mem_upper_closure mem_upper_closure\n\n",
 "mem_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem mem_top : a ∈ («expr⊤» : lower_set α) :=\n  trivial\n#align mem_top mem_top\n\n",
 "mem_supr₂_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\ntheorem mem_supr₂_iff {f : ∀ i, κ i → lower_set α} :\n    a ∈ «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) ↔\n      ∃ i j, a ∈ f i j :=\n  by simp_rw [mem_supr_iff]\n#align mem_supr₂_iff mem_supr₂_iff\n\n",
 "mem_supr_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\ntheorem mem_supr_iff {f : ι → lower_set α} :\n    a ∈ «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) ↔\n      ∃ i, a ∈ f i :=\n  by\n  rw [← SetLike.mem_coe, coe_supr]\n  exact mem_Union\n#align mem_supr_iff mem_supr_iff\n\n",
 "mem_sup_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem mem_sup_iff : a ∈ «expr ⊔ » s t ↔ a ∈ s ∨ a ∈ t :=\n  iff.rfl\n#align mem_sup_iff mem_sup_iff\n\n",
 "mem_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem mem_prod {s : lower_set α} {t : lower_set β} : x ∈ lower_set.prod s t ↔ x.1 ∈ s ∧ x.2 ∈ t :=\n  iff.rfl\n#align mem_prod mem_prod\n\n",
 "mem_mk":
 "@[simp]\ntheorem mem_mk (carrier : set α) (lower') {a : α} : a ∈ mk carrier lower' ↔ a ∈ carrier :=\n  iff.rfl\n#align mem_mk mem_mk\n\n",
 "mem_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n@[simp]\ntheorem mem_map {f : «expr ≃o » α β} {b : β} : b ∈ map f s ↔ f.symm b ∈ s :=\n  by\n  rw [← f.symm_symm, ← symm_map, f.symm_symm]\n  rfl\n#align mem_map mem_map\n\n",
 "mem_lower_closure":
 "@[simp]\ntheorem mem_lower_closure : x ∈ lower_closure s ↔ ∃ a ∈ s, x ≤ a :=\n  iff.rfl\n#align mem_lower_closure mem_lower_closure\n\n",
 "mem_infi₂_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem mem_infi₂_iff {f : ∀ i, κ i → lower_set α} :\n    a ∈ «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) ↔\n      ∀ i j, a ∈ f i j :=\n  by simp_rw [mem_infi_iff]\n#align mem_infi₂_iff mem_infi₂_iff\n\n",
 "mem_infi_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem mem_infi_iff {f : ι → lower_set α} :\n    a ∈ «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) ↔\n      ∀ i, a ∈ f i :=\n  by\n  rw [← SetLike.mem_coe, coe_infi]\n  exact mem_Inter\n#align mem_infi_iff mem_infi_iff\n\n",
 "mem_inf_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem mem_inf_iff : a ∈ «expr ⊓ » s t ↔ a ∈ s ∧ a ∈ t :=\n  iff.rfl\n#align mem_inf_iff mem_inf_iff\n\n",
 "mem_compl_iff":
 "@[simp]\ntheorem mem_compl_iff : a ∈ s.compl ↔ a ∉ s :=\n  iff.rfl\n#align mem_compl_iff mem_compl_iff\n\n",
 "mem_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem mem_bot : a ∈ («expr⊥» : upper_set α) :=\n  trivial\n#align mem_bot mem_bot\n\n",
 "mem_Sup_iff":
 "@[simp]\ntheorem mem_Sup_iff : a ∈ supₛ S ↔ ∃ s ∈ S, a ∈ s :=\n  mem_Union₂\n#align mem_Sup_iff mem_Sup_iff\n\n",
 "mem_Ioi_iff":
 "@[simp]\ntheorem mem_Ioi_iff : b ∈ Ioi a ↔ a < b :=\n  iff.rfl\n#align mem_Ioi_iff mem_Ioi_iff\n\n",
 "mem_Inf_iff":
 "@[simp]\ntheorem mem_Inf_iff : a ∈ infₛ S ↔ ∀ s ∈ S, a ∈ s :=\n  mem_Inter₂\n#align mem_Inf_iff mem_Inf_iff\n\n",
 "mem_Iio_iff":
 "@[simp]\ntheorem mem_Iio_iff : b ∈ Iio a ↔ b < a :=\n  iff.rfl\n#align mem_Iio_iff mem_Iio_iff\n\n",
 "mem_Iic_iff":
 "@[simp]\ntheorem mem_Iic_iff : b ∈ Iic a ↔ b ≤ a :=\n  iff.rfl\n#align mem_Iic_iff mem_Iic_iff\n\n",
 "mem_Ici_iff":
 "@[simp]\ntheorem mem_Ici_iff : b ∈ Ici a ↔ a ≤ b :=\n  iff.rfl\n#align mem_Ici_iff mem_Ici_iff\n\n",
 "map_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\nprotected theorem map_top : map f («expr⊤») = «expr⊤» :=\n  ext <| image_univ_of_surjective f.surjective\n#align map_top map_top\n\n",
 "map_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\nprotected theorem map_supr (g : ι → lower_set α) :\n    map f («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (map f (g i)) :=\n  ext <| by\n    push_cast\n    exact image_Union\n#align map_supr map_supr\n\n",
 "map_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\nprotected theorem map_sup : map f («expr ⊔ » s t) = «expr ⊔ » (map f s) (map f t) :=\n  ext <| image_union _ _ _\n#align map_sup map_sup\n\n",
 "map_refl":
 "@[simp]\ntheorem map_refl : map (OrderIso.refl α) = OrderIso.refl _ :=\n  by\n  ext\n  simp\n#align map_refl map_refl\n\n",
 "map_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n@[simp]\ntheorem map_map (g : «expr ≃o » β γ) (f : «expr ≃o » α β) : map g (map f s) = map (f.trans g) s :=\n  by\n  ext\n  simp\n#align map_map map_map\n\n",
 "map_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\nprotected theorem map_infi (g : ι → lower_set α) :\n    map f («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (map f (g i)) :=\n  ext <| by\n    push_cast\n    exact image_Inter f.bijective _\n#align map_infi map_infi\n\n",
 "map_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\nprotected theorem map_inf : map f («expr ⊓ » s t) = «expr ⊓ » (map f s) (map f t) :=\n  ext <| image_inter f.injective\n#align map_inf map_inf\n\n",
 "map_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\nprotected theorem map_bot : map f («expr⊥») = «expr⊥» :=\n  ext <| image_empty _\n#align map_bot map_bot\n\n",
 "map_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\nprotected theorem map_Sup (S : set (lower_set α)) :\n    map f (supₛ S) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (map f s) :=\n  ext <| by\n    push_cast\n    exact image_Union₂ _ _\n#align map_Sup map_Sup\n\n",
 "map_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n@[simp]\ntheorem map_Ioi (f : «expr ≃o » α β) (a : α) : map f (Ioi a) = Ioi (f a) :=\n  by\n  ext\n  simp\n#align map_Ioi map_Ioi\n\n",
 "map_Inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\nprotected theorem map_Inf (S : set (lower_set α)) :\n    map f (infₛ S) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (map f s) :=\n  ext <| by\n    push_cast\n    exact image_Inter₂ f.bijective _\n#align map_Inf map_Inf\n\n",
 "map_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n@[simp]\ntheorem map_Iio (f : «expr ≃o » α β) (a : α) : map f (Iio a) = Iio (f a) :=\n  by\n  ext\n  simp\n#align map_Iio map_Iio\n\n",
 "map_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n@[simp]\ntheorem map_Iic (f : «expr ≃o » α β) (a : α) : map f (Iic a) = Iic (f a) :=\n  by\n  ext\n  simp\n#align map_Iic map_Iic\n\n",
 "map_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n@[simp]\ntheorem map_Ici (f : «expr ≃o » α β) (a : α) : map f (Ici a) = Ici (f a) :=\n  by\n  ext\n  simp\n#align map_Ici map_Ici\n\n",
 "lower_closure_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem lower_closure_univ : lower_closure (univ : set α) = «expr⊤» :=\n  top_le_iff.1 subset_lower_closure\n#align lower_closure_univ lower_closure_univ\n\n",
 "lower_closure_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem lower_closure_union (s t : set α) : lower_closure (s ∪ t) = «expr ⊔ » (lower_closure s) (lower_closure t) :=\n  by\n  ext\n  simp [or_and_right, exists_or]\n#align lower_closure_union lower_closure_union\n\n",
 "lower_closure_singleton":
 "@[simp]\ntheorem lower_closure_singleton (a : α) : lower_closure ({a} : set α) = lower_set.Iic a :=\n  by\n  ext\n  simp\n#align lower_closure_singleton lower_closure_singleton\n\n",
 "lower_closure_sUnion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\ntheorem lower_closure_sUnion (S : set (set α)) :\n    lower_closure (⋃₀ S) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (lower_closure s) :=\n  by simp_rw [sUnion_eq_bUnion, lower_closure_Union]\n#align lower_closure_sUnion lower_closure_sUnion\n\n",
 "lower_closure_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem lower_closure_prod (s : set α) (t : set β) :\n    lower_closure (lower_set.prod s t) = lower_set.prod (lower_closure s) (lower_closure t) :=\n  by\n  ext\n  simp [Prod.le_def, and_and_and_comm _ (_ ∈ t)]\n#align lower_closure_prod lower_closure_prod\n\n",
 "lower_closure_mono":
 "theorem lower_closure_mono : monotone (lower_closure : set α → lower_set α) :=\n  gc_lower_closure_coe.monotone_l\n#align lower_closure_mono lower_closure_mono\n\n",
 "lower_closure_min":
 "theorem lower_closure_min (h : s ⊆ t) (ht : is_lower_set t) : ↑(lower_closure s) ⊆ t := fun a ⟨b, hb, hab⟩ =>\n  ht hab <| h hb\n#align lower_closure_min lower_closure_min\n\n",
 "lower_closure_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem lower_closure_image (f : «expr ≃o » α β) : lower_closure («expr '' » f s) = lower_set.map f (lower_closure s) :=\n  by\n  rw [← f.symm_symm, ← lower_set.symm_map, f.symm_symm]\n  ext\n  simp [-lower_set.symm_map, lower_set.map, OrderIso.symm, ← f.symm_apply_le]\n#align lower_closure_image lower_closure_image\n\n",
 "lower_closure_eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem lower_closure_eq_bot_iff : lower_closure s = «expr⊥» ↔ s = ∅ :=\n  ⟨fun h => subset_empty_iff.1 <| subset_lower_closure.trans (congr_arg coe h).subset,\n    by\n    rintro rfl\n    exact lower_closure_empty⟩\n#align lower_closure_eq_bot_iff lower_closure_eq_bot_iff\n\n",
 "lower_closure_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem lower_closure_empty : lower_closure (∅ : set α) = «expr⊥» :=\n  by\n  ext\n  simp\n#align lower_closure_empty lower_closure_empty\n\n",
 "lower_closure_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\ntheorem lower_closure_Union (f : ι → set α) :\n    lower_closure\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (lower_closure (f i)) :=\n  by\n  ext\n  simp [← exists_and_right, @exists_comm α]\n#align lower_closure_Union lower_closure_Union\n\n",
 "lower_closure":
 "@[simp]\nprotected theorem lower_set.lower_closure (s : lower_set α) : lower_closure (s : set α) = s :=\n  SetLike.coe_injective s.2.lower_closure\n#align lower_set.lower_closure lower_set.lower_closure\n\n",
 "lower":
 "protected theorem lower (s : lower_set α) : is_lower_set (s : set α) :=\n  s.lower'\n#align lower lower\n\n",
 "is_upper_set_univ":
 "theorem is_upper_set_univ : is_upper_set (univ : set α) := fun _ _ _ => id\n#align is_upper_set_univ is_upper_set_univ\n\n",
 "is_upper_set_set_of":
 "@[simp]\ntheorem is_upper_set_set_of : is_upper_set { a | p a } ↔ monotone p :=\n  iff.rfl\n#align is_upper_set_set_of is_upper_set_set_of\n\n",
 "is_upper_set_sUnion":
 "theorem is_upper_set_sUnion {S : set (set α)} (hf : ∀ s ∈ S, is_upper_set s) : is_upper_set (⋃₀ S) := fun a b h =>\n  Exists₂.imp fun s hs => hf s hs h\n#align is_upper_set_sUnion is_upper_set_sUnion\n\n",
 "is_upper_set_sInter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂₀ » -/\ntheorem is_upper_set_sInter {S : set (set α)} (hf : ∀ s ∈ S, is_upper_set s) : is_upper_set («expr⋂₀ » S) :=\n  fun a b h => forall₂_imp fun s hs => hf s hs h\n#align is_upper_set_sInter is_upper_set_sInter\n\n",
 "is_upper_set_preimage_to_dual_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem is_upper_set_preimage_to_dual_iff {s : set («expr ᵒᵈ» α)} :\n    is_upper_set («expr ⁻¹' » to_dual s) ↔ is_lower_set s :=\n  iff.rfl\n#align is_upper_set_preimage_to_dual_iff is_upper_set_preimage_to_dual_iff\n\n",
 "is_upper_set_preimage_of_dual_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem is_upper_set_preimage_of_dual_iff : is_upper_set («expr ⁻¹' » of_dual s) ↔ is_lower_set s :=\n  iff.rfl\n#align is_upper_set_preimage_of_dual_iff is_upper_set_preimage_of_dual_iff\n\n",
 "is_upper_set_iff_forall_lt":
 "theorem is_upper_set_iff_forall_lt : is_upper_set s ↔ ∀ ⦃a b : α⦄, a < b → a ∈ s → b ∈ s :=\n  forall_congr' fun a => by simp [le_iff_eq_or_lt, or_imp, forall_and]\n#align is_upper_set_iff_forall_lt is_upper_set_iff_forall_lt\n\n",
 "is_upper_set_iff_Ioi_subset":
 "theorem is_upper_set_iff_Ioi_subset : is_upper_set s ↔ ∀ ⦃a⦄, a ∈ s → Ioi a ⊆ s := by\n  simp [is_upper_set_iff_forall_lt, subset_def, @forall_swap (_ ∈ s)]\n#align is_upper_set_iff_Ioi_subset is_upper_set_iff_Ioi_subset\n\n",
 "is_upper_set_iff_Ici_subset":
 "theorem is_upper_set_iff_Ici_subset : is_upper_set s ↔ ∀ ⦃a⦄, a ∈ s → Ici a ⊆ s := by\n  simp [is_upper_set, subset_def, @forall_swap (_ ∈ s)]\n#align is_upper_set_iff_Ici_subset is_upper_set_iff_Ici_subset\n\n",
 "is_upper_set_empty":
 "/-\nCopyright (c) 2022 Yaël Dillies, Sara Rousta. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies, Sara Rousta\n-/\ntheorem is_upper_set_empty : is_upper_set (∅ : set α) := fun _ _ _ => id\n#align is_upper_set_empty is_upper_set_empty\n\n",
 "is_upper_set_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem is_upper_set_compl : is_upper_set («expr ᶜ» s) ↔ is_lower_set s :=\n  ⟨fun h => by\n    convert h.compl\n    rw [compl_compl], is_lower_set.compl⟩\n#align is_upper_set_compl is_upper_set_compl\n\n",
 "is_upper_set_Union₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem is_upper_set_Union₂ {f : ∀ i, κ i → set α} (hf : ∀ i j, is_upper_set (f i j)) :\n    is_upper_set\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i j)) :=\n  is_upper_set_Union fun i => is_upper_set_Union <| hf i\n#align is_upper_set_Union₂ is_upper_set_Union₂\n\n",
 "is_upper_set_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem is_upper_set_Union {f : ι → set α} (hf : ∀ i, is_upper_set (f i)) :\n    is_upper_set\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) :=\n  fun a b h => Exists₂.imp <| forall_range_iff.2 fun i => hf i h\n#align is_upper_set_Union is_upper_set_Union\n\n",
 "is_upper_set_Ioi":
 "theorem is_upper_set_Ioi : is_upper_set (Ioi a) := fun _ _ => flip lt_of_lt_of_le\n#align is_upper_set_Ioi is_upper_set_Ioi\n\n",
 "is_upper_set_Inter₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem is_upper_set_Inter₂ {f : ∀ i, κ i → set α} (hf : ∀ i j, is_upper_set (f i j)) :\n    is_upper_set\n      («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f i j)) :=\n  is_upper_set_Inter fun i => is_upper_set_Inter <| hf i\n#align is_upper_set_Inter₂ is_upper_set_Inter₂\n\n",
 "is_upper_set_Inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem is_upper_set_Inter {f : ι → set α} (hf : ∀ i, is_upper_set (f i)) :\n    is_upper_set\n      («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f i)) :=\n  fun a b h => forall₂_imp <| forall_range_iff.2 fun i => hf i h\n#align is_upper_set_Inter is_upper_set_Inter\n\n",
 "is_upper_set_Ici":
 "theorem is_upper_set_Ici : is_upper_set (Ici a) := fun _ _ => ge_trans\n#align is_upper_set_Ici is_upper_set_Ici\n\n",
 "is_lower_set_univ":
 "theorem is_lower_set_univ : is_lower_set (univ : set α) := fun _ _ _ => id\n#align is_lower_set_univ is_lower_set_univ\n\n",
 "is_lower_set_set_of":
 "@[simp]\ntheorem is_lower_set_set_of : is_lower_set { a | p a } ↔ antitone p :=\n  forall_swap\n#align is_lower_set_set_of is_lower_set_set_of\n\n",
 "is_lower_set_sUnion":
 "theorem is_lower_set_sUnion {S : set (set α)} (hf : ∀ s ∈ S, is_lower_set s) : is_lower_set (⋃₀ S) := fun a b h =>\n  Exists₂.imp fun s hs => hf s hs h\n#align is_lower_set_sUnion is_lower_set_sUnion\n\n",
 "is_lower_set_sInter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂₀ » -/\ntheorem is_lower_set_sInter {S : set (set α)} (hf : ∀ s ∈ S, is_lower_set s) : is_lower_set («expr⋂₀ » S) :=\n  fun a b h => forall₂_imp fun s hs => hf s hs h\n#align is_lower_set_sInter is_lower_set_sInter\n\n",
 "is_lower_set_preimage_to_dual_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem is_lower_set_preimage_to_dual_iff {s : set («expr ᵒᵈ» α)} :\n    is_lower_set («expr ⁻¹' » to_dual s) ↔ is_upper_set s :=\n  iff.rfl\n#align is_lower_set_preimage_to_dual_iff is_lower_set_preimage_to_dual_iff\n\n",
 "is_lower_set_preimage_of_dual_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem is_lower_set_preimage_of_dual_iff : is_lower_set («expr ⁻¹' » of_dual s) ↔ is_upper_set s :=\n  iff.rfl\n#align is_lower_set_preimage_of_dual_iff is_lower_set_preimage_of_dual_iff\n\n",
 "is_lower_set_iff_forall_lt":
 "theorem is_lower_set_iff_forall_lt : is_lower_set s ↔ ∀ ⦃a b : α⦄, b < a → a ∈ s → b ∈ s :=\n  forall_congr' fun a => by simp [le_iff_eq_or_lt, or_imp, forall_and]\n#align is_lower_set_iff_forall_lt is_lower_set_iff_forall_lt\n\n",
 "is_lower_set_iff_Iio_subset":
 "theorem is_lower_set_iff_Iio_subset : is_lower_set s ↔ ∀ ⦃a⦄, a ∈ s → Iio a ⊆ s := by\n  simp [is_lower_set_iff_forall_lt, subset_def, @forall_swap (_ ∈ s)]\n#align is_lower_set_iff_Iio_subset is_lower_set_iff_Iio_subset\n\n",
 "is_lower_set_iff_Iic_subset":
 "theorem is_lower_set_iff_Iic_subset : is_lower_set s ↔ ∀ ⦃a⦄, a ∈ s → Iic a ⊆ s := by\n  simp [is_lower_set, subset_def, @forall_swap (_ ∈ s)]\n#align is_lower_set_iff_Iic_subset is_lower_set_iff_Iic_subset\n\n",
 "is_lower_set_empty":
 "theorem is_lower_set_empty : is_lower_set (∅ : set α) := fun _ _ _ => id\n#align is_lower_set_empty is_lower_set_empty\n\n",
 "is_lower_set_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem is_lower_set_compl : is_lower_set («expr ᶜ» s) ↔ is_upper_set s :=\n  ⟨fun h => by\n    convert h.compl\n    rw [compl_compl], is_upper_set.compl⟩\n#align is_lower_set_compl is_lower_set_compl\n\n",
 "is_lower_set_Union₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem is_lower_set_Union₂ {f : ∀ i, κ i → set α} (hf : ∀ i j, is_lower_set (f i j)) :\n    is_lower_set\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i j)) :=\n  is_lower_set_Union fun i => is_lower_set_Union <| hf i\n#align is_lower_set_Union₂ is_lower_set_Union₂\n\n",
 "is_lower_set_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem is_lower_set_Union {f : ι → set α} (hf : ∀ i, is_lower_set (f i)) :\n    is_lower_set\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) :=\n  fun a b h => Exists₂.imp <| forall_range_iff.2 fun i => hf i h\n#align is_lower_set_Union is_lower_set_Union\n\n",
 "is_lower_set_Inter₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem is_lower_set_Inter₂ {f : ∀ i, κ i → set α} (hf : ∀ i j, is_lower_set (f i j)) :\n    is_lower_set\n      («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f i j)) :=\n  is_lower_set_Inter fun i => is_lower_set_Inter <| hf i\n#align is_lower_set_Inter₂ is_lower_set_Inter₂\n\n",
 "is_lower_set_Inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem is_lower_set_Inter {f : ι → set α} (hf : ∀ i, is_lower_set (f i)) :\n    is_lower_set\n      («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f i)) :=\n  fun a b h => forall₂_imp <| forall_range_iff.2 fun i => hf i h\n#align is_lower_set_Inter is_lower_set_Inter\n\n",
 "is_lower_set_Iio":
 "theorem is_lower_set_Iio : is_lower_set (Iio a) := fun _ _ => lt_of_le_of_lt\n#align is_lower_set_Iio is_lower_set_Iio\n\n",
 "is_lower_set_Iic":
 "theorem is_lower_set_Iic : is_lower_set (Iic a) := fun _ _ => le_trans\n#align is_lower_set_Iic is_lower_set_Iic\n\n",
 "inter":
 "theorem is_lower_set.inter (hs : is_lower_set s) (ht : is_lower_set t) : is_lower_set (s ∩ t) := fun a b h =>\n  and.imp (hs h) (ht h)\n#align is_lower_set.inter is_lower_set.inter\n\n",
 "infi_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem upper_set.infi_Ici (s : set α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (upper_set.Ici a) =\n      upper_closure s :=\n  by\n  ext\n  simp\n#align upper_set.infi_Ici upper_set.infi_Ici\n\n",
 "inf_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem inf_prod : lower_set.prod («expr ⊓ » s₁ s₂) t = «expr ⊓ » (lower_set.prod s₁ t) (lower_set.prod s₂ t) :=\n  ext inter_prod\n#align inf_prod inf_prod\n\n",
 "image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem is_lower_set.image (hs : is_lower_set s) (f : «expr ≃o » α β) : is_lower_set («expr '' » f s : set β) :=\n  by\n  change is_lower_set («expr '' » (f : «expr ≃ » α β) s)\n  rw [Set.image_equiv_eq_preimage_symm]\n  exact hs.preimage f.symm.monotone\n#align is_lower_set.image is_lower_set.image\n\n",
 "gc_upper_closure_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\ntheorem gc_upper_closure_coe :\n    GaloisConnection (to_dual ∘ upper_closure : set α → «expr ᵒᵈ» (upper_set α)) (coe ∘ of_dual) := fun s t =>\n  ⟨fun h => subset_upper_closure.trans <| upper_set.coe_subset_coe.2 h, fun h => upper_closure_min h t.upper⟩\n#align gc_upper_closure_coe gc_upper_closure_coe\n\n",
 "gc_lower_closure_coe":
 "theorem gc_lower_closure_coe : GaloisConnection (lower_closure : set α → lower_set α) coe := fun s t =>\n  ⟨fun h => subset_lower_closure.trans <| lower_set.coe_subset_coe.2 h, fun h => lower_closure_min h t.lower⟩\n#align gc_lower_closure_coe gc_lower_closure_coe\n\n",
 "ext":
 "@[ext]\ntheorem ext {s t : lower_set α} : (s : set α) = t → s = t :=\n  SetLike.ext'\n#align ext ext\n\n",
 "disjoint_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem disjoint_prod : Disjoint (lower_set.prod s₁ t₁) (lower_set.prod s₂ t₂) ↔ Disjoint s₁ s₂ ∨ Disjoint t₁ t₂ := by\n  simp_rw [disjoint_iff, prod_inf_prod, prod_eq_bot]\n#align disjoint_prod disjoint_prod\n\n",
 "disjoint_coe":
 "@[simp, norm_cast]\ntheorem disjoint_coe : Disjoint (s : set α) t ↔ Disjoint s t := by simp [disjoint_iff, SetLike.ext'_iff]\n#align disjoint_coe disjoint_coe\n\n",
 "compl_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print compl_top /-\nprotected theorem compl_top : («expr⊤» : lower_set α).compl = «expr⊤» :=\n  upper_set.ext compl_univ\n#align compl_top compl_top\n-/\n\n",
 "compl_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print compl_supₛ /-\nprotected theorem compl_supₛ (S : set (lower_set α)) :\n    (supₛ S).compl =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (lower_set.compl s) :=\n  upper_set.ext <| by simp only [coe_compl, coe_Sup, compl_Union₂, upper_set.coe_supr₂]\n#align compl_Sup compl_supₛ\n-/\n\n",
 "compl_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print compl_supᵢ /-\nprotected theorem compl_supᵢ (f : ι → lower_set α) :\n    («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)).compl =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i).compl :=\n  upper_set.ext <| by simp only [coe_compl, coe_supr, compl_Union, upper_set.coe_supr]\n#align compl_supr compl_supᵢ\n-/\n\n",
 "compl_supr₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\ntheorem compl_supr₂ (f : ∀ i, κ i → lower_set α) :\n    («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j)).compl =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j).compl :=\n  by simp_rw [lower_set.compl_supr]\n#align compl_supr₂ compl_supr₂\n\n",
 "compl_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print compl_sup /-\nprotected theorem compl_sup (s t : lower_set α) : («expr ⊔ » s t).compl = «expr ⊔ » s.compl t.compl :=\n  upper_set.ext compl_sup\n#align compl_sup compl_sup\n-/\n\n",
 "compl_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n@[simp]\ntheorem compl_map (f : «expr ≃o » α β) (s : lower_set α) : (map f s).compl = upper_set.map f s.compl :=\n  SetLike.coe_injective (Set.image_compl_eq f.bijective).symm\n#align compl_map compl_map\n\n",
 "compl_le_compl":
 "#print compl_le_compl /-\n@[simp]\ntheorem compl_le_compl : s.compl ≤ t.compl ↔ s ≤ t :=\n  compl_subset_compl\n#align compl_le_compl compl_le_compl\n-/\n\n",
 "compl_infₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print compl_infₛ /-\nprotected theorem compl_infₛ (S : set (lower_set α)) :\n    (infₛ S).compl =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (lower_set.compl s) :=\n  upper_set.ext <| by simp only [coe_compl, coe_Inf, compl_Inter₂, upper_set.coe_infi₂]\n#align compl_Inf compl_infₛ\n-/\n\n",
 "compl_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print compl_infᵢ /-\nprotected theorem compl_infᵢ (f : ι → lower_set α) :\n    («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)).compl =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i).compl :=\n  upper_set.ext <| by simp only [coe_compl, coe_infi, compl_Inter, upper_set.coe_infi]\n#align compl_infi compl_infᵢ\n-/\n\n",
 "compl_infi₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem compl_infi₂ (f : ∀ i, κ i → lower_set α) :\n    («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j)).compl =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j).compl :=\n  by simp_rw [lower_set.compl_infi]\n#align compl_infi₂ compl_infi₂\n\n",
 "compl_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print compl_inf /-\nprotected theorem compl_inf (s t : lower_set α) : («expr ⊓ » s t).compl = «expr ⊓ » s.compl t.compl :=\n  upper_set.ext compl_inf\n#align compl_inf compl_inf\n-/\n\n",
 "compl_compl":
 "#print compl_compl /-\n@[simp]\ntheorem compl_compl (s : lower_set α) : s.compl.compl = s :=\n  lower_set.ext <| compl_compl _\n#align compl_compl compl_compl\n-/\n\n",
 "compl_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print compl_bot /-\nprotected theorem compl_bot : («expr⊥» : lower_set α).compl = «expr⊥» :=\n  upper_set.ext compl_empty\n#align compl_bot compl_bot\n-/\n\n",
 "compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem is_lower_set.compl (hs : is_lower_set s) : is_upper_set («expr ᶜ» s) := fun a b h hb ha => hb <| hs h ha\n#align is_lower_set.compl is_lower_set.compl\n\n",
 "coe_upper_closure":
 "-- We do not tag those two as `simp` to respect the abstraction.\n@[norm_cast]\ntheorem coe_upper_closure (s : set α) : ↑(upper_closure s) = { x | ∃ a ∈ s, a ≤ x } :=\n  rfl\n#align coe_upper_closure coe_upper_closure\n\n",
 "coe_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp, norm_cast]\ntheorem coe_top : ((«expr⊤» : lower_set α) : set α) = univ :=\n  rfl\n#align coe_top coe_top\n\n",
 "coe_supr₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n@[simp, norm_cast]\ntheorem coe_supr₂ (f : ∀ i, κ i → lower_set α) :\n    (↑(«expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j)) :\n        set α) =\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i j) :=\n  by simp_rw [coe_supr]\n#align coe_supr₂ coe_supr₂\n\n",
 "coe_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n@[simp, norm_cast]\ntheorem coe_supr (f : ι → lower_set α) :\n    (↑(«expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)) : set α) =\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i) :=\n  by simp_rw [supᵢ, coe_Sup, mem_range, Union_exists, Union_Union_eq']\n#align coe_supr coe_supr\n\n",
 "coe_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp, norm_cast]\ntheorem coe_sup (s t : lower_set α) : (↑(«expr ⊔ » s t) : set α) = s ∪ t :=\n  rfl\n#align coe_sup coe_sup\n\n",
 "coe_subset_coe":
 "@[simp, norm_cast]\ntheorem coe_subset_coe : (s : set α) ⊆ t ↔ s ≤ t :=\n  iff.rfl\n#align coe_subset_coe coe_subset_coe\n\n",
 "coe_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp, norm_cast]\ntheorem coe_prod : (↑(lower_set.prod s t) : set (α × β)) = lower_set.prod s t :=\n  rfl\n#align coe_prod coe_prod\n\n",
 "coe_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp, norm_cast]\ntheorem coe_map : (map f s : set β) = «expr '' » f s :=\n  rfl\n#align coe_map coe_map\n\n",
 "coe_lower_closure":
 "@[norm_cast]\ntheorem coe_lower_closure (s : set α) : ↑(lower_closure s) = { x | ∃ a ∈ s, x ≤ a } :=\n  rfl\n#align coe_lower_closure coe_lower_closure\n\n",
 "coe_infi₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n@[simp, norm_cast]\ntheorem coe_infi₂ (f : ∀ i, κ i → lower_set α) :\n    (↑(«expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j)) :\n        set α) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f i j) :=\n  by simp_rw [coe_infi]\n#align coe_infi₂ coe_infi₂\n\n",
 "coe_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n@[simp, norm_cast]\ntheorem coe_infi (f : ι → lower_set α) :\n    (↑(«expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) : set α) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f i) :=\n  by simp_rw [infᵢ, coe_Inf, mem_range, Inter_exists, Inter_Inter_eq']\n#align coe_infi coe_infi\n\n",
 "coe_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp, norm_cast]\ntheorem coe_inf (s t : lower_set α) : (↑(«expr ⊓ » s t) : set α) = s ∩ t :=\n  rfl\n#align coe_inf coe_inf\n\n",
 "coe_eq_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp, norm_cast]\ntheorem coe_eq_univ : (s : set α) = univ ↔ s = «expr⊤» := by simp [SetLike.ext'_iff]\n#align coe_eq_univ coe_eq_univ\n\n",
 "coe_eq_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp, norm_cast]\ntheorem coe_eq_empty : (s : set α) = ∅ ↔ s = «expr⊥» := by simp [SetLike.ext'_iff]\n#align coe_eq_empty coe_eq_empty\n\n",
 "coe_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem coe_compl (s : lower_set α) : (s.compl : set α) = «expr ᶜ» s :=\n  rfl\n#align coe_compl coe_compl\n\n",
 "coe_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp, norm_cast]\ntheorem coe_bot : ((«expr⊥» : lower_set α) : set α) = ∅ :=\n  rfl\n#align coe_bot coe_bot\n\n",
 "coe_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n@[simp, norm_cast]\ntheorem coe_Sup (S : set (lower_set α)) :\n    (↑(supₛ S) : set α) =\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" ↑s :=\n  rfl\n#align coe_Sup coe_Sup\n\n",
 "coe_Ioi":
 "@[simp]\ntheorem coe_Ioi (a : α) : ↑(Ioi a) = Set.Ioi a :=\n  rfl\n#align coe_Ioi coe_Ioi\n\n",
 "coe_Inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n@[simp, norm_cast]\ntheorem coe_Inf (S : set (lower_set α)) :\n    (↑(infₛ S) : set α) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" ↑s :=\n  rfl\n#align coe_Inf coe_Inf\n\n",
 "coe_Iio":
 "@[simp]\ntheorem coe_Iio (a : α) : ↑(Iio a) = Set.Iio a :=\n  rfl\n#align coe_Iio coe_Iio\n\n",
 "coe_Iic_inf_hom":
 "@[simp]\ntheorem coe_Iic_inf_hom : (Iic_inf_hom : α → lower_set α) = Iic :=\n  rfl\n#align coe_Iic_inf_hom coe_Iic_inf_hom\n\n",
 "coe_Iic_Inf_hom":
 "@[simp]\ntheorem coe_Iic_Inf_hom : (Iic_Inf_hom : α → lower_set α) = Iic :=\n  rfl\n#align coe_Iic_Inf_hom coe_Iic_Inf_hom\n\n",
 "coe_Iic":
 "@[simp]\ntheorem coe_Iic (a : α) : ↑(Iic a) = Set.Iic a :=\n  rfl\n#align coe_Iic coe_Iic\n\n",
 "coe_Ici":
 "@[simp]\ntheorem coe_Ici (a : α) : ↑(Ici a) = Set.Ici a :=\n  rfl\n#align coe_Ici coe_Ici\n\n",
 "codisjoint_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\n@[simp]\ntheorem codisjoint_prod :\n    Codisjoint (upper_set.prod s₁ t₁) (upper_set.prod s₂ t₂) ↔ Codisjoint s₁ s₂ ∨ Codisjoint t₁ t₂ := by\n  simp_rw [codisjoint_iff, prod_sup_prod, prod_eq_top]\n#align codisjoint_prod codisjoint_prod\n\n",
 "codisjoint_coe":
 "@[simp, norm_cast]\ntheorem codisjoint_coe : Codisjoint (s : set α) t ↔ Disjoint s t := by\n  simp [disjoint_iff, codisjoint_iff, SetLike.ext'_iff]\n#align codisjoint_coe codisjoint_coe\n\n",
 "carrier_eq_coe":
 "@[simp]\ntheorem carrier_eq_coe (s : lower_set α) : s.carrier = s :=\n  rfl\n#align carrier_eq_coe carrier_eq_coe\n\n",
 "bot_prod_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot_prod_bot : upper_set.prod («expr⊥» : upper_set α) («expr⊥» : upper_set β) = «expr⊥» :=\n  ext univ_prod_univ\n#align bot_prod_bot bot_prod_bot\n\n",
 "bot_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot_prod : lower_set.prod («expr⊥» : lower_set α) t = «expr⊥» :=\n  ext empty_prod\n#align bot_prod bot_prod\n\n",
 "bot_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem is_lower_set.bot_mem (hs : is_lower_set s) : «expr⊥» ∈ s ↔ s.nonempty :=\n  ⟨fun h => ⟨_, h⟩, fun ⟨a, ha⟩ => hs bot_le ha⟩\n#align is_lower_set.bot_mem is_lower_set.bot_mem\n\n",
 "antitone_mem":
 "@[simp]\ntheorem set.antitone_mem : antitone (· ∈ s) ↔ is_lower_set s :=\n  forall_swap\n#align set.antitone_mem set.antitone_mem\n\n",
 "Ioi_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem Ioi_top [OrderTop α] : Ioi («expr⊤» : α) = «expr⊤» :=\n  SetLike.coe_injective Ioi_top\n#align Ioi_top Ioi_top\n\n",
 "Ioi_le_Ici":
 "theorem Ioi_le_Ici (a : α) : Ioi a ≤ Ici a :=\n  Ioi_subset_Ici_self\n#align Ioi_le_Ici Ioi_le_Ici\n\n",
 "Iio_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem Iio_bot [OrderBot α] : Iio («expr⊥» : α) = «expr⊥» :=\n  SetLike.coe_injective Iio_bot\n#align Iio_bot Iio_bot\n\n",
 "Iic_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem Iic_top [OrderTop α] : Iic («expr⊤» : α) = «expr⊤» :=\n  SetLike.coe_injective Iic_top\n#align Iic_top Iic_top\n\n",
 "Iic_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\ntheorem Iic_prod (x : α × β) : Iic x = lower_set.prod (Iic x.1) (Iic x.2) :=\n  rfl\n#align Iic_prod Iic_prod\n\n",
 "Iic_infi₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem Iic_infi₂ (f : ∀ i, κ i → α) :\n    Iic («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (Iic (f i j)) :=\n  by simp_rw [Iic_infi]\n#align Iic_infi₂ Iic_infi₂\n\n",
 "Iic_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem Iic_infi (f : ι → α) :\n    Iic («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (Iic (f i)) :=\n  SetLike.ext fun c => by simp only [mem_Iic_iff, mem_infi_iff, le_infᵢ_iff]\n#align Iic_infi Iic_infi\n\n",
 "Iic_inf_hom_apply":
 "@[simp]\ntheorem Iic_inf_hom_apply (a : α) : Iic_inf_hom a = Iic a :=\n  rfl\n#align Iic_inf_hom_apply Iic_inf_hom_apply\n\n",
 "Iic_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem Iic_inf (a b : α) : Iic («expr ⊓ » a b) = «expr ⊓ » (Iic a) (Iic b) :=\n  SetLike.coe_injective Iic_inter_Iic.symm\n#align Iic_inf Iic_inf\n\n",
 "Iic_Inf_hom_apply":
 "@[simp]\ntheorem Iic_Inf_hom_apply (a : α) : Iic_Inf_hom a = Iic a :=\n  rfl\n#align Iic_Inf_hom_apply Iic_Inf_hom_apply\n\n",
 "Iic_Inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem Iic_Inf (S : set α) :\n    Iic (infₛ S) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (Iic a) :=\n  SetLike.ext fun c => by simp only [mem_Iic_iff, mem_infi₂_iff, le_infₛ_iff]\n#align Iic_Inf Iic_Inf\n\n",
 "Ici_supr₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\ntheorem Ici_supr₂ (f : ∀ i, κ i → α) :\n    Ici («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (Ici (f i j)) :=\n  by simp_rw [Ici_supr]\n#align Ici_supr₂ Ici_supr₂\n\n",
 "Ici_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\ntheorem Ici_supr (f : ι → α) :\n    Ici («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (Ici (f i)) :=\n  SetLike.ext fun c => by simp only [mem_Ici_iff, mem_supr_iff, supᵢ_le_iff]\n#align Ici_supr Ici_supr\n\n",
 "Ici_sup_hom_apply":
 "@[simp]\ntheorem Ici_sup_hom_apply (a : α) : Ici_sup_hom a = Ici a :=\n  rfl\n#align Ici_sup_hom_apply Ici_sup_hom_apply\n\n",
 "Ici_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem Ici_sup (a b : α) : Ici («expr ⊔ » a b) = «expr ⊔ » (Ici a) (Ici b) :=\n  ext Ici_inter_Ici.symm\n#align Ici_sup Ici_sup\n\n",
 "Ici_prod_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n@[simp]\ntheorem Ici_prod_Ici (a : α) (b : β) : lower_set.prod (Iic a) (Iic b) = Iic (a, b) :=\n  rfl\n#align Ici_prod_Ici Ici_prod_Ici\n\n",
 "Ici_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_set.prod -/\ntheorem Ici_prod (x : α × β) : Ici x = upper_set.prod (Ici x.1) (Ici x.2) :=\n  rfl\n#align Ici_prod Ici_prod\n\n",
 "Ici_le_Ioi":
 "theorem Ici_le_Ioi (a : α) : Ici a ≤ Ioi a :=\n  Ioi_subset_Ici_self\n#align Ici_le_Ioi Ici_le_Ioi\n\n",
 "Ici_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem Ici_bot [OrderBot α] : Ici («expr⊥» : α) = «expr⊥» :=\n  SetLike.coe_injective Ici_bot\n#align Ici_bot Ici_bot\n\n",
 "Ici_Sup_hom_apply":
 "@[simp]\ntheorem Ici_Sup_hom_apply (a : α) : Ici_Sup_hom a = toDual (Ici a) :=\n  rfl\n#align Ici_Sup_hom_apply Ici_Sup_hom_apply\n\n",
 "Ici_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n@[simp]\ntheorem Ici_Sup (S : set α) :\n    Ici (supₛ S) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (Ici a) :=\n  SetLike.ext fun c => by simp only [mem_Ici_iff, mem_supr_iff, supₛ_le_iff]\n#align Ici_Sup Ici_Sup\n\n"}