{"wellFounded_lt_exact_sequence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print wellFounded_lt_exact_sequence /-\n/-- A generalization of the theorem that if `N` is a submodule of `M` and\n  `N` and `M / N` are both Artinian, then `M` is Artinian. -/\ntheorem wellFounded_lt_exact_sequence {β γ : Type _} [partial_order β] [preorder γ]\n    (h₁ : well_founded ((· < ·) : β → β → Prop)) (h₂ : well_founded ((· < ·) : γ → γ → Prop)) (K : α) (f₁ : β → α)\n    (f₂ : α → β) (g₁ : γ → α) (g₂ : α → γ) (gci : GaloisCoinsertion f₁ f₂) (gi : GaloisInsertion g₂ g₁)\n    (hf : ∀ a, f₁ (f₂ a) = «expr ⊓ » a K) (hg : ∀ a, g₁ (g₂ a) = «expr ⊔ » a K) :\n    well_founded ((· < ·) : α → α → Prop) :=\n  subrelation.wf\n    (fun A B hAB =>\n      show prod.lex (· < ·) (· < ·) (f₂ A, g₂ A) (f₂ B, g₂ B)\n        by\n        simp only [prod.lex_def, lt_iff_le_not_le, ← gci.l_le_l_iff, ← gi.u_le_u_iff, hf, hg, le_antisymm_iff]\n        simp only [gci.l_le_l_iff, gi.u_le_u_iff, ← lt_iff_le_not_le, ← le_antisymm_iff]\n        cases' lt_or_eq_of_le (inf_le_inf_right K (le_of_lt hAB)) with h h\n        · exact or.inl h\n        · exact or.inr ⟨h, sup_lt_sup_of_lt_of_inf_le_inf hAB (le_of_eq h.symm)⟩)\n    (inv_image.wf _ (prod.lex_wf h₁ h₂))\n#align well_founded_lt_exact_sequence wellFounded_lt_exact_sequence\n-/\n\n",
 "wellFounded_gt_exact_sequence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print wellFounded_gt_exact_sequence /-\n/-- A generalization of the theorem that if `N` is a submodule of `M` and\n  `N` and `M / N` are both Noetherian, then `M` is Noetherian.  -/\ntheorem wellFounded_gt_exact_sequence {β γ : Type _} [preorder β] [partial_order γ]\n    (h₁ : well_founded ((· > ·) : β → β → Prop)) (h₂ : well_founded ((· > ·) : γ → γ → Prop)) (K : α) (f₁ : β → α)\n    (f₂ : α → β) (g₁ : γ → α) (g₂ : α → γ) (gci : GaloisCoinsertion f₁ f₂) (gi : GaloisInsertion g₂ g₁)\n    (hf : ∀ a, f₁ (f₂ a) = «expr ⊓ » a K) (hg : ∀ a, g₁ (g₂ a) = «expr ⊔ » a K) :\n    well_founded ((· > ·) : α → α → Prop) :=\n  @wellFounded_lt_exact_sequence («expr ᵒᵈ» α) _ _ («expr ᵒᵈ» γ) («expr ᵒᵈ» β) _ _ h₂ h₁ K g₁ g₂ f₁ f₂ gi.dual gci.dual\n    hg hf\n#align well_founded_gt_exact_sequence wellFounded_gt_exact_sequence\n-/\n\n",
 "sup_strictMonoOn_Icc_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print sup_strictMonoOn_Icc_inf /-\ntheorem sup_strictMonoOn_Icc_inf {a b : α} : strict_mono_on (fun c => «expr ⊔ » c b) (Icc («expr ⊓ » a b) a) :=\n  strict_mono.of_restrict (infIccOrderIsoIccSup a b).strict_mono\n#align sup_strict_mono_on_Icc_inf sup_strictMonoOn_Icc_inf\n-/\n\n",
 "sup_lt_sup_of_lt_of_inf_le_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_lt_sup_of_lt_of_inf_le_inf /-\ntheorem sup_lt_sup_of_lt_of_inf_le_inf (hxy : x < y) (hinf : «expr ⊓ » y z ≤ «expr ⊓ » x z) :\n    «expr ⊔ » x z < «expr ⊔ » y z :=\n  lt_of_le_of_ne (sup_le_sup_right (le_of_lt hxy) _) fun hsup =>\n    ne_of_lt hxy <| eq_of_le_of_inf_le_of_sup_le (le_of_lt hxy) hinf (le_of_eq hsup.symm)\n#align sup_lt_sup_of_lt_of_inf_le_inf sup_lt_sup_of_lt_of_inf_le_inf\n-/\n\n",
 "sup_inf_sup_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print IsModularLattice.sup_inf_sup_assoc /-\ntheorem IsModularLattice.sup_inf_sup_assoc :\n    «expr ⊓ » («expr ⊔ » x z) («expr ⊔ » y z) = «expr ⊔ » («expr ⊓ » («expr ⊔ » x z) y) z :=\n  @IsModularLattice.inf_sup_inf_assoc («expr ᵒᵈ» α) _ _ _ _ _\n#align is_modular_lattice.sup_inf_sup_assoc IsModularLattice.sup_inf_sup_assoc\n-/\n\n",
 "sup_inf_assoc_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print sup_inf_assoc_of_le /-\n-- See note [lower instance priority]\ntheorem sup_inf_assoc_of_le {x : α} (y : α) {z : α} (h : x ≤ z) :\n    «expr ⊓ » («expr ⊔ » x y) z = «expr ⊔ » x («expr ⊓ » y z) :=\n  le_antisymm (is_modular_lattice.sup_inf_le_assoc_of_le y h)\n    (le_inf (sup_le_sup_left inf_le_left _) (sup_le h inf_le_right))\n#align sup_inf_assoc_of_le sup_inf_assoc_of_le\n-/\n\n",
 "isModularLattice_iff_inf_sup_inf_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print isModularLattice_iff_inf_sup_inf_assoc /-\n-- See note [lower instance priority]\n-- See note [lower instance priority]\ntheorem isModularLattice_iff_inf_sup_inf_assoc [Lattice α] :\n    IsModularLattice α ↔\n      ∀ x y z : α, «expr ⊔ » («expr ⊓ » x z) («expr ⊓ » y z) = «expr ⊓ » («expr ⊔ » («expr ⊓ » x z) y) z :=\n  ⟨fun h => @IsModularLattice.inf_sup_inf_assoc _ _ h, fun h => ⟨fun x y z xz => by rw [← inf_eq_left.2 xz, h]⟩⟩\n#align is_modular_lattice_iff_inf_sup_inf_assoc isModularLattice_iff_inf_sup_inf_assoc\n-/\n\n",
 "inf_sup_inf_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print IsModularLattice.inf_sup_inf_assoc /-\ntheorem IsModularLattice.inf_sup_inf_assoc {x y z : α} :\n    «expr ⊔ » («expr ⊓ » x z) («expr ⊓ » y z) = «expr ⊓ » («expr ⊔ » («expr ⊓ » x z) y) z :=\n  (sup_inf_assoc_of_le y inf_le_right).symm\n#align is_modular_lattice.inf_sup_inf_assoc IsModularLattice.inf_sup_inf_assoc\n-/\n\n",
 "inf_sup_assoc_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print inf_sup_assoc_of_le /-\ntheorem inf_sup_assoc_of_le {x : α} (y : α) {z : α} (h : z ≤ x) :\n    «expr ⊔ » («expr ⊓ » x y) z = «expr ⊓ » x («expr ⊔ » y z) := by\n  rw [inf_comm, sup_comm, ← sup_inf_assoc_of_le y h, inf_comm, sup_comm]\n#align inf_sup_assoc_of_le inf_sup_assoc_of_le\n-/\n\n",
 "inf_strictMonoOn_Icc_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print inf_strictMonoOn_Icc_sup /-\ntheorem inf_strictMonoOn_Icc_sup {a b : α} : strict_mono_on (fun c => «expr ⊓ » a c) (Icc b («expr ⊔ » a b)) :=\n  strict_mono.of_restrict (infIccOrderIsoIccSup a b).symm.strict_mono\n#align inf_strict_mono_on_Icc_sup inf_strictMonoOn_Icc_sup\n-/\n\n",
 "inf_lt_inf_of_lt_of_sup_le_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_lt_inf_of_lt_of_sup_le_sup /-\ntheorem inf_lt_inf_of_lt_of_sup_le_sup (hxy : x < y) (hinf : «expr ⊔ » y z ≤ «expr ⊔ » x z) :\n    «expr ⊓ » x z < «expr ⊓ » y z :=\n  @sup_lt_sup_of_lt_of_inf_le_inf («expr ᵒᵈ» α) _ _ _ _ _ hxy hinf\n#align inf_lt_inf_of_lt_of_sup_le_sup inf_lt_inf_of_lt_of_sup_le_sup\n-/\n\n",
 "inf_covby_of_covby_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_covby_of_covby_sup_right /-\ntheorem inf_covby_of_covby_sup_right : «expr ⋖ » b («expr ⊔ » a b) → «expr ⋖ » («expr ⊓ » a b) a :=\n  by\n  rw [inf_comm, sup_comm]\n  exact inf_covby_of_covby_sup_left\n#align inf_covby_of_covby_sup_right inf_covby_of_covby_sup_right\n-/\n\n",
 "inf_covby_of_covby_sup_of_covby_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_covby_of_covby_sup_of_covby_sup_right /-\ntheorem inf_covby_of_covby_sup_of_covby_sup_right :\n    «expr ⋖ » a («expr ⊔ » a b) → «expr ⋖ » b («expr ⊔ » a b) → «expr ⋖ » («expr ⊓ » a b) b :=\n  by\n  rw [sup_comm, inf_comm]\n  exact fun ha hb => inf_covby_of_covby_sup_of_covby_sup_left hb ha\n#align inf_covby_of_covby_sup_of_covby_sup_right inf_covby_of_covby_sup_of_covby_sup_right\n-/\n\n",
 "inf_covby_of_covby_sup_of_covby_sup_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_covby_of_covby_sup_of_covby_sup_left /-\ntheorem inf_covby_of_covby_sup_of_covby_sup_left :\n    «expr ⋖ » a («expr ⊔ » a b) → «expr ⋖ » b («expr ⊔ » a b) → «expr ⋖ » («expr ⊓ » a b) a :=\n  is_weak_lower_modular_lattice.inf_covby_of_covby_covby_sup\n#align inf_covby_of_covby_sup_of_covby_sup_left inf_covby_of_covby_sup_of_covby_sup_left\n-/\n\n",
 "inf_covby_of_covby_sup_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_covby_of_covby_sup_left /-\n-- See note [lower instance priority]\ntheorem inf_covby_of_covby_sup_left : «expr ⋖ » a («expr ⊔ » a b) → «expr ⋖ » («expr ⊓ » a b) b :=\n  is_lower_modular_lattice.inf_covby_of_covby_sup\n#align inf_covby_of_covby_sup_left inf_covby_of_covby_sup_left\n-/\n\n",
 "eq_of_le_of_inf_le_of_sup_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print eq_of_le_of_inf_le_of_sup_le /-\ntheorem eq_of_le_of_inf_le_of_sup_le (hxy : x ≤ y) (hinf : «expr ⊓ » y z ≤ «expr ⊓ » x z)\n    (hsup : «expr ⊔ » y z ≤ «expr ⊔ » x z) : x = y :=\n  le_antisymm hxy <|\n    have h : y ≤ «expr ⊔ » x z :=\n      calc\n        y ≤ «expr ⊔ » y z := le_sup_left\n        _ ≤ «expr ⊔ » x z := hsup\n        \n    calc\n      y ≤ «expr ⊓ » («expr ⊔ » x z) y := le_inf h le_rfl\n      _ = «expr ⊔ » x («expr ⊓ » z y) := sup_inf_assoc_of_le _ hxy\n      _ ≤ «expr ⊔ » x («expr ⊓ » z x) := sup_le_sup_left (by rw [inf_comm, @inf_comm _ _ z] <;> exact hinf) _\n      _ ≤ x := sup_le le_rfl inf_le_right\n      \n#align eq_of_le_of_inf_le_of_sup_le eq_of_le_of_inf_le_of_sup_le\n-/\n\n",
 "disjoint_sup_right_of_disjoint_sup_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print Disjoint.disjoint_sup_right_of_disjoint_sup_left /-\ntheorem Disjoint.disjoint_sup_right_of_disjoint_sup_left [Lattice α] [OrderBot α] [IsModularLattice α] {a b c : α}\n    (h : Disjoint a b) (hsup : Disjoint («expr ⊔ » a b) c) : Disjoint a («expr ⊔ » b c) :=\n  by\n  rw [disjoint_iff_inf_le, ← h.eq_bot, sup_comm]\n  apply le_inf inf_le_left\n  apply (inf_le_inf_right («expr ⊔ » c b) le_sup_right).trans\n  rw [sup_comm, IsModularLattice.sup_inf_sup_assoc, hsup.eq_bot, bot_sup_eq]\n#align disjoint.disjoint_sup_right_of_disjoint_sup_left Disjoint.disjoint_sup_right_of_disjoint_sup_left\n-/\n\n",
 "disjoint_sup_left_of_disjoint_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print Disjoint.disjoint_sup_left_of_disjoint_sup_right /-\ntheorem Disjoint.disjoint_sup_left_of_disjoint_sup_right [Lattice α] [OrderBot α] [IsModularLattice α] {a b c : α}\n    (h : Disjoint b c) (hsup : Disjoint a («expr ⊔ » b c)) : Disjoint («expr ⊔ » a b) c :=\n  by\n  rw [disjoint_comm, sup_comm]\n  apply Disjoint.disjoint_sup_right_of_disjoint_sup_left h.symm\n  rwa [sup_comm, disjoint_comm] at hsup\n#align disjoint.disjoint_sup_left_of_disjoint_sup_right Disjoint.disjoint_sup_left_of_disjoint_sup_right\n-/\n\n",
 "covby_sup_of_inf_covby_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print covby_sup_of_inf_covby_right /-\ntheorem covby_sup_of_inf_covby_right : «expr ⋖ » («expr ⊓ » a b) b → «expr ⋖ » a («expr ⊔ » a b) :=\n  by\n  rw [sup_comm, inf_comm]\n  exact covby_sup_of_inf_covby_left\n#align covby_sup_of_inf_covby_right covby_sup_of_inf_covby_right\n-/\n\n",
 "covby_sup_of_inf_covby_of_inf_covby_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print covby_sup_of_inf_covby_of_inf_covby_right /-\ntheorem covby_sup_of_inf_covby_of_inf_covby_right :\n    «expr ⋖ » («expr ⊓ » a b) a → «expr ⋖ » («expr ⊓ » a b) b → «expr ⋖ » b («expr ⊔ » a b) :=\n  by\n  rw [inf_comm, sup_comm]\n  exact fun ha hb => covby_sup_of_inf_covby_of_inf_covby_left hb ha\n#align covby_sup_of_inf_covby_of_inf_covby_right covby_sup_of_inf_covby_of_inf_covby_right\n-/\n\n",
 "covby_sup_of_inf_covby_of_inf_covby_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print covby_sup_of_inf_covby_of_inf_covby_left /-\n/-\nCopyright (c) 2020 Aaron Anderson. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Aaron Anderson, Yaël Dillies\n-/\ntheorem covby_sup_of_inf_covby_of_inf_covby_left :\n    «expr ⋖ » («expr ⊓ » a b) a → «expr ⋖ » («expr ⊓ » a b) b → «expr ⋖ » a («expr ⊔ » a b) :=\n  is_weak_upper_modular_lattice.covby_sup_of_inf_covby_covby\n#align covby_sup_of_inf_covby_of_inf_covby_left covby_sup_of_inf_covby_of_inf_covby_left\n-/\n\n",
 "covby_sup_of_inf_covby_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print covby_sup_of_inf_covby_left /-\ntheorem covby_sup_of_inf_covby_left : «expr ⋖ » («expr ⊓ » a b) a → «expr ⋖ » b («expr ⊔ » a b) :=\n  is_upper_modular_lattice.covby_sup_of_inf_covby\n#align covby_sup_of_inf_covby_left covby_sup_of_inf_covby_left\n-/\n\n"}