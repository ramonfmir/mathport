{"upper_bounds_l_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem upper_bounds_l_image (s : Set α) : upperBounds («expr '' » l s) = «expr ⁻¹' » u (upperBounds s) :=\n  Set.ext fun b => by simp [upperBounds, gc _ _]\n#align upper_bounds_l_image upper_bounds_l_image\n\n",
 "u_unique":
 "theorem u_unique {l' : α → β} {u' : β → α} (gc' : GaloisConnection l' u') (hl : ∀ a, l a = l' a) {b : β} : u b = u' b :=\n  le_antisymm (gc'.le_u <| hl (u b) ▸ gc.l_u_le _) (gc.le_u <| (hl (u' b)).symm ▸ gc'.l_u_le _)\n#align u_unique u_unique\n\n",
 "u_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem u_top [OrderTop β] {l : α → β} {u : β → α} (gc : GaloisConnection l u) : u («expr⊤») = «expr⊤» :=\n  gc.u_eq_top.2 le_top\n#align u_top u_top\n\n",
 "u_surjective":
 "theorem u_surjective [partial_order α] [preorder β] (gi : GaloisCoinsertion l u) : surjective u :=\n  gi.dual.l_surjective\n#align u_surjective u_surjective\n\n",
 "u_supr_of_lu_eq_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem u_supr_of_lu_eq_self [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) {ι : Sort x}\n    (f : ι → β) (hf : ∀ i, l (u (f i)) = f i) :\n    u («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u (f i)) :=\n  gi.dual.l_infi_of_ul_eq_self _ hf\n#align u_supr_of_lu_eq_self u_supr_of_lu_eq_self\n\n",
 "u_supr_l":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem u_supr_l [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) {ι : Sort x} (f : ι → α) :\n    u («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (l (f i))) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n  gi.dual.l_infi_u _\n#align u_supr_l u_supr_l\n\n",
 "u_sup_l":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem u_sup_l [SemilatticeSup α] [SemilatticeSup β] (gi : GaloisCoinsertion l u) (a b : α) :\n    u («expr ⊔ » (l a) (l b)) = «expr ⊔ » a b :=\n  gi.dual.l_inf_u _ _\n#align u_sup_l u_sup_l\n\n",
 "u_le_u_iff":
 "theorem u_le_u_iff [preorder α] [preorder β] (gi : GaloisInsertion l u) {a b} : u a ≤ u b ↔ a ≤ b :=\n  ⟨fun h => (gi.le_l_u _).trans (gi.gc.l_le h), fun h => gi.gc.monotone_u h⟩\n#align u_le_u_iff u_le_u_iff\n\n",
 "u_l_u_eq_u'":
 "theorem u_l_u_eq_u' : u ∘ l ∘ u = u :=\n  funext gc.u_l_u_eq_u\n#align u_l_u_eq_u' u_l_u_eq_u'\n\n",
 "u_l_u_eq_u":
 "theorem u_l_u_eq_u (b : β) : u (l (u b)) = u b :=\n  (gc.monotone_u (gc.l_u_le _)).antisymm (gc.le_u_l _)\n#align u_l_u_eq_u u_l_u_eq_u\n\n",
 "u_l_left_inverse":
 "theorem u_l_left_inverse [partial_order α] [preorder β] (gi : GaloisCoinsertion l u) : left_inverse u l :=\n  gi.u_l_eq\n#align u_l_left_inverse u_l_left_inverse\n\n",
 "u_l_eq":
 "-- See note [reducible non instances]\n-- See note [reducible non instances]\n-- See note [reducible non instances]\n-- See note [reducible non instances]\n-- See note [reducible non instances]\n-- See note [reducible non instances]\ntheorem u_l_eq [partial_order α] [preorder β] (gi : GaloisCoinsertion l u) (a : α) : u (l a) = a :=\n  gi.dual.l_u_eq a\n#align u_l_eq u_l_eq\n\n",
 "u_injective":
 "theorem u_injective [preorder α] [partial_order β] (gi : GaloisInsertion l u) : injective u :=\n  gi.left_inverse_l_u.injective\n#align u_injective u_injective\n\n",
 "u_infi₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem u_infi₂ {f : ∀ i, κ i → β} :\n    u («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u (f i j)) :=\n  gc.dual.l_supr₂\n#align u_infi₂ u_infi₂\n\n",
 "u_infi_l":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem u_infi_l [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) {ι : Sort x} (f : ι → α) :\n    u («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (l (f i))) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n  gi.dual.l_supr_u _\n#align u_infi_l u_infi_l\n\n",
 "u_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem u_infi {f : ι → β} :\n    u (infᵢ f) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u (f i)) :=\n  gc.dual.l_supr\n#align u_infi u_infi\n\n",
 "u_inf_l":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem u_inf_l [SemilatticeInf α] [SemilatticeInf β] (gi : GaloisCoinsertion l u) (a b : α) :\n    u («expr ⊓ » (l a) (l b)) = «expr ⊓ » a b :=\n  gi.dual.l_sup_u a b\n#align u_inf_l u_inf_l\n\n",
 "u_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem u_inf : u («expr ⊓ » b₁ b₂) = «expr ⊓ » (u b₁) (u b₂) :=\n  gc.dual.l_sup\n#align u_inf u_inf\n\n",
 "u_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem u_eq_top {l : α → β} {u : β → α} (gc : GaloisConnection l u) {x} : u x = «expr⊤» ↔ l («expr⊤») ≤ x :=\n  top_le_iff.symm.trans gc.le_iff_le.symm\n#align u_eq_top u_eq_top\n\n",
 "u_eq":
 "theorem u_eq {z : α} {y : β} : u y = z ↔ ∀ x, x ≤ z ↔ l x ≤ y :=\n  by\n  constructor\n  · rintro rfl x\n    exact (gc x y).symm\n  · intro H\n    exact ((H <| u y).mpr (gc.l_u_le y)).antisymm ((gc _ _).mp <| (H z).mp le_rfl)\n#align u_eq u_eq\n\n",
 "u_comm_of_l_comm":
 "theorem u_comm_of_l_comm {X : Type _} [partial_order X] {Y : Type _} [preorder Y] {Z : Type _} [preorder Z] {W : Type _}\n    [preorder W] {lYX : X → Y} {uXY : Y → X} (hXY : GaloisConnection lYX uXY) {lWZ : Z → W} {uZW : W → Z}\n    (hZW : GaloisConnection lWZ uZW) {lWY : Y → W} {uYW : W → Y} (hWY : GaloisConnection lWY uYW) {lZX : X → Z}\n    {uXZ : Z → X} (hXZ : GaloisConnection lZX uXZ) (h : ∀ x, lWZ (lZX x) = lWY (lYX x)) {w : W} :\n    uXZ (uZW w) = uXY (uYW w) :=\n  (hXZ.compose hZW).u_unique (hXY.compose hWY) h\n#align u_comm_of_l_comm u_comm_of_l_comm\n\n",
 "u_bsupr_of_lu_eq_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem u_bsupr_of_lu_eq_self [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) {ι : Sort x}\n    {p : ι → Prop} (f : ∀ (i) (hi : p i), β) (hf : ∀ i hi, l (u (f i hi)) = f i hi) :\n    u («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i hi)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u (f i hi)) :=\n  gi.dual.l_binfi_of_ul_eq_self _ hf\n#align u_bsupr_of_lu_eq_self u_bsupr_of_lu_eq_self\n\n",
 "u_bsupr_l":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem u_bsupr_l [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) {ι : Sort x} {p : ι → Prop}\n    (f : ∀ (i) (hi : p i), α) :\n    u («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (l (f i hi))) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i hi) :=\n  gi.dual.l_binfi_u _\n#align u_bsupr_l u_bsupr_l\n\n",
 "u_Sup_l_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem u_Sup_l_image [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) (s : Set α) :\n    u (supₛ («expr '' » l s)) = supₛ s :=\n  gi.dual.l_Inf_u_image _\n#align u_Sup_l_image u_Sup_l_image\n\n",
 "u_Inf_l_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem u_Inf_l_image [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) (s : Set α) :\n    u (infₛ («expr '' » l s)) = infₛ s :=\n  gi.dual.l_Sup_u_image _\n#align u_Inf_l_image u_Inf_l_image\n\n",
 "u_Inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem u_Inf {s : Set β} :\n    u (infₛ s) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u a) :=\n  gc.dual.l_Sup\n#align u_Inf u_Inf\n\n",
 "to_galoisConnection":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n#print OrderIso.to_galoisConnection /-\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl\n-/\n/-- Makes a Galois connection from an order-preserving bijection. -/\ntheorem OrderIso.to_galoisConnection [preorder α] [preorder β] (oi : «expr ≃o » α β) : GaloisConnection oi oi.symm :=\n  fun b g => oi.rel_symm_apply.symm\n#align order_iso.to_galois_connection OrderIso.to_galoisConnection\n-/\n\n",
 "supₛ_image2_eq_supₛ_supₛ":
 "#print supₛ_image2_eq_supₛ_supₛ /-\ntheorem supₛ_image2_eq_supₛ_supₛ (h₁ : ∀ b, GaloisConnection (swap l b) (u₁ b))\n    (h₂ : ∀ a, GaloisConnection (l a) (u₂ a)) : supₛ (image2 l s t) = l (supₛ s) (supₛ t) := by\n  simp_rw [supₛ_image2, ← (h₂ _).l_Sup, ← (h₁ _).l_Sup]\n#align Sup_image2_eq_Sup_Sup supₛ_image2_eq_supₛ_supₛ\n-/\n\n",
 "supₛ_image2_eq_supₛ_infₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print supₛ_image2_eq_supₛ_infₛ /-\ntheorem supₛ_image2_eq_supₛ_infₛ (h₁ : ∀ b, GaloisConnection (swap l b) (u₁ b))\n    (h₂ : ∀ a, GaloisConnection (l a ∘ ofDual) (toDual ∘ u₂ a)) : supₛ (image2 l s t) = l (supₛ s) (infₛ t) :=\n  @supₛ_image2_eq_supₛ_supₛ _ («expr ᵒᵈ» β) _ _ _ _ _ _ _ _ _ h₁ h₂\n#align Sup_image2_eq_Sup_Inf supₛ_image2_eq_supₛ_infₛ\n-/\n\n",
 "supₛ_image2_eq_infₛ_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print supₛ_image2_eq_infₛ_supₛ /-\ntheorem supₛ_image2_eq_infₛ_supₛ (h₁ : ∀ b, GaloisConnection (swap l b ∘ ofDual) (toDual ∘ u₁ b))\n    (h₂ : ∀ a, GaloisConnection (l a) (u₂ a)) : supₛ (image2 l s t) = l (infₛ s) (supₛ t) :=\n  @supₛ_image2_eq_supₛ_supₛ («expr ᵒᵈ» α) _ _ _ _ _ _ _ _ _ _ h₁ h₂\n#align Sup_image2_eq_Inf_Sup supₛ_image2_eq_infₛ_supₛ\n-/\n\n",
 "supₛ_image2_eq_infₛ_infₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print supₛ_image2_eq_infₛ_infₛ /-\ntheorem supₛ_image2_eq_infₛ_infₛ (h₁ : ∀ b, GaloisConnection (swap l b ∘ ofDual) (toDual ∘ u₁ b))\n    (h₂ : ∀ a, GaloisConnection (l a ∘ ofDual) (toDual ∘ u₂ a)) : supₛ (image2 l s t) = l (infₛ s) (infₛ t) :=\n  @supₛ_image2_eq_supₛ_supₛ («expr ᵒᵈ» α) («expr ᵒᵈ» β) _ _ _ _ _ _ _ _ _ h₁ h₂\n#align Sup_image2_eq_Inf_Inf supₛ_image2_eq_infₛ_infₛ\n-/\n\n",
 "strict_mono_u":
 "theorem strict_mono_u [preorder α] [preorder β] (gi : GaloisInsertion l u) : StrictMono u :=\n  strictMono_of_le_iff_le fun _ _ => gi.u_le_u_iff.symm\n#align strict_mono_u strict_mono_u\n\n",
 "strict_mono_l":
 "theorem strict_mono_l [preorder α] [preorder β] (gi : GaloisCoinsertion l u) : StrictMono l := fun a b h =>\n  gi.dual.strict_mono_u h\n#align strict_mono_l strict_mono_l\n\n",
 "monotone_u":
 "theorem monotone_u : Monotone u := fun a b H => gc.le_u ((gc.l_u_le a).trans H)\n#align monotone_u monotone_u\n\n",
 "monotone_l":
 "theorem monotone_l : Monotone l :=\n  gc.dual.monotone_u.dual\n#align monotone_l monotone_l\n\n",
 "monotone_intro":
 "theorem monotone_intro (hu : Monotone u) (hl : Monotone l) (hul : ∀ a, a ≤ u (l a)) (hlu : ∀ a, l (u a) ≤ a) :\n    GaloisConnection l u := fun a b => ⟨fun h => (hul _).trans (hu h), fun h => (hl h).trans (hlu _)⟩\n#align monotone_intro monotone_intro\n\n",
 "lt_iff_lt":
 "theorem lt_iff_lt {a : α} {b : β} : b < l a ↔ u b < a :=\n  lt_iff_lt_of_le_iff_le (gc a b)\n#align lt_iff_lt lt_iff_lt\n\n",
 "lower_bounds_u_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem lower_bounds_u_image (s : Set β) : lowerBounds («expr '' » u s) = «expr ⁻¹' » l (lowerBounds s) :=\n  gc.dual.upper_bounds_l_image s\n#align lower_bounds_u_image lower_bounds_u_image\n\n",
 "left_inverse_l_u":
 "theorem left_inverse_l_u [preorder α] [partial_order β] (gi : GaloisInsertion l u) : left_inverse l u :=\n  gi.l_u_eq\n#align left_inverse_l_u left_inverse_l_u\n\n",
 "le_u_l_trans":
 "/-- If `(l, u)` is a Galois connection, then the relation `x ≤ u (l y)` is a transitive relation.\nIf `l` is a closure operator (`submodule.span`, `subgroup.closure`, ...) and `u` is the coercion to\n`set`, this reads as \"if `U` is in the closure of `V` and `V` is in the closure of `W` then `U` is\nin the closure of `W`\". -/\ntheorem le_u_l_trans {x y z : α} (hxy : x ≤ u (l y)) (hyz : y ≤ u (l z)) : x ≤ u (l z) :=\n  hxy.trans (gc.monotone_u <| gc.l_le hyz)\n#align le_u_l_trans le_u_l_trans\n\n",
 "le_u_l":
 "theorem le_u_l (a) : a ≤ u (l a) :=\n  gc.le_u <| le_rfl\n#align le_u_l le_u_l\n\n",
 "le_u":
 "theorem le_u {a : α} {b : β} : l a ≤ b → a ≤ u b :=\n  (gc _ _).mp\n#align le_u le_u\n\n",
 "le_iff_le":
 "theorem le_iff_le {a : α} {b : β} : l a ≤ b ↔ a ≤ u b :=\n  gc _ _\n#align le_iff_le le_iff_le\n\n",
 "l_unique":
 "theorem l_unique {l' : α → β} {u' : β → α} (gc' : GaloisConnection l' u') (hu : ∀ b, u b = u' b) {a : α} : l a = l' a :=\n  le_antisymm (gc.l_le <| (hu (l' a)).symm ▸ gc'.le_u_l _) (gc'.l_le <| hu (l a) ▸ gc.le_u_l _)\n#align l_unique l_unique\n\n",
 "l_u_le_trans":
 "theorem l_u_le_trans {x y z : β} (hxy : l (u x) ≤ y) (hyz : l (u y) ≤ z) : l (u x) ≤ z :=\n  (gc.monotone_l <| gc.le_u hxy).trans hyz\n#align l_u_le_trans l_u_le_trans\n\n",
 "l_u_le":
 "theorem l_u_le (a) : l (u a) ≤ a :=\n  gc.l_le <| le_rfl\n#align l_u_le l_u_le\n\n",
 "l_u_l_eq_l'":
 "theorem l_u_l_eq_l' : l ∘ u ∘ l = l :=\n  funext gc.l_u_l_eq_l\n#align l_u_l_eq_l' l_u_l_eq_l'\n\n",
 "l_u_l_eq_l":
 "theorem l_u_l_eq_l (a : α) : l (u (l a)) = l a :=\n  (gc.l_u_le _).antisymm (gc.monotone_l (gc.le_u_l _))\n#align l_u_l_eq_l l_u_l_eq_l\n\n",
 "l_u_eq":
 "theorem l_u_eq [preorder α] [partial_order β] (gi : GaloisInsertion l u) (b : β) : l (u b) = b :=\n  (gi.gc.l_u_le _).antisymm (gi.le_l_u _)\n#align l_u_eq l_u_eq\n\n",
 "l_surjective":
 "theorem l_surjective [preorder α] [partial_order β] (gi : GaloisInsertion l u) : surjective l :=\n  gi.left_inverse_l_u.surjective\n#align l_surjective l_surjective\n\n",
 "l_supr₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem l_supr₂ {f : ∀ i, κ i → α} :\n    l («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (l (f i j)) :=\n  by simp_rw [gc.l_supr]\n#align l_supr₂ l_supr₂\n\n",
 "l_supr_u":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem l_supr_u [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x} (f : ι → β) :\n    l («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u (f i))) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n  calc\n    l («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u (f i))) =\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (l (u (f i))) :=\n      gi.gc.l_supr\n    _ = «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n      congr_arg _ <| funext fun i => gi.l_u_eq (f i)\n    \n#align l_supr_u l_supr_u\n\n",
 "l_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem l_supr {f : ι → α} :\n    l (supᵢ f) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (l (f i)) :=\n  Eq.symm <|\n    IsLUB.supᵢ_eq <|\n      show IsLUB (range (l ∘ f)) (l (supᵢ f)) by\n        rw [range_comp, ← supₛ_range] <;> exact gc.is_lub_l_image (isLUB_supₛ _)\n#align l_supr l_supr\n\n",
 "l_sup_u":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem l_sup_u [SemilatticeSup α] [SemilatticeSup β] (gi : GaloisInsertion l u) (a b : β) :\n    l («expr ⊔ » (u a) (u b)) = «expr ⊔ » a b :=\n  calc\n    l («expr ⊔ » (u a) (u b)) = «expr ⊔ » (l (u a)) (l (u b)) := gi.gc.l_sup\n    _ = «expr ⊔ » a b := by simp only [gi.l_u_eq]\n    \n#align l_sup_u l_sup_u\n\n",
 "l_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem l_sup : l («expr ⊔ » a₁ a₂) = «expr ⊔ » (l a₁) (l a₂) :=\n  (gc.is_lub_l_image isLUB_pair).unique <| by simp only [image_pair, isLUB_pair]\n#align l_sup l_sup\n\n",
 "l_le_l_iff":
 "theorem l_le_l_iff [preorder α] [preorder β] (gi : GaloisCoinsertion l u) {a b} : l a ≤ l b ↔ a ≤ b :=\n  gi.dual.u_le_u_iff\n#align l_le_l_iff l_le_l_iff\n\n",
 "l_le":
 "theorem l_le {a : α} {b : β} : a ≤ u b → l a ≤ b :=\n  (gc _ _).mpr\n#align l_le l_le\n\n",
 "l_injective":
 "theorem l_injective [partial_order α] [preorder β] (gi : GaloisCoinsertion l u) : injective l :=\n  gi.dual.u_injective\n#align l_injective l_injective\n\n",
 "l_infi_u":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem l_infi_u [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x} (f : ι → β) :\n    l («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u (f i))) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n  calc\n    l («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u (f i))) =\n        l (u («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i))) :=\n      congr_arg l gi.gc.u_infi.symm\n    _ = «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n      gi.l_u_eq _\n    \n#align l_infi_u l_infi_u\n\n",
 "l_infi_of_ul_eq_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem l_infi_of_ul_eq_self [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x} (f : ι → α)\n    (hf : ∀ i, u (l (f i)) = f i) :\n    l («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (l (f i)) :=\n  calc\n    l («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) =\n        l\n          («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n            (u (l (f i)))) :=\n      by simp [hf]\n    _ = «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (l (f i)) :=\n      gi.l_infi_u _\n    \n#align l_infi_of_ul_eq_self l_infi_of_ul_eq_self\n\n",
 "l_inf_u":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem l_inf_u [SemilatticeInf α] [SemilatticeInf β] (gi : GaloisInsertion l u) (a b : β) :\n    l («expr ⊓ » (u a) (u b)) = «expr ⊓ » a b :=\n  calc\n    l («expr ⊓ » (u a) (u b)) = l (u («expr ⊓ » a b)) := congr_arg l gi.gc.u_inf.symm\n    _ = «expr ⊓ » a b := by simp only [gi.l_u_eq]\n    \n#align l_inf_u l_inf_u\n\n",
 "l_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem l_eq_bot {l : α → β} {u : β → α} (gc : GaloisConnection l u) {x} : l x = «expr⊥» ↔ x ≤ u («expr⊥») :=\n  gc.dual.u_eq_top\n#align l_eq_bot l_eq_bot\n\n",
 "l_eq":
 "theorem l_eq {x : α} {z : β} : l x = z ↔ ∀ y, z ≤ y ↔ x ≤ u y :=\n  by\n  constructor\n  · rintro rfl y\n    exact gc x y\n  · intro H\n    exact ((gc _ _).mpr <| (H z).mp le_rfl).antisymm ((H <| l x).mpr (gc.le_u_l x))\n#align l_eq l_eq\n\n",
 "l_comm_of_u_comm":
 "theorem l_comm_of_u_comm {X : Type _} [preorder X] {Y : Type _} [preorder Y] {Z : Type _} [preorder Z] {W : Type _}\n    [partial_order W] {lYX : X → Y} {uXY : Y → X} (hXY : GaloisConnection lYX uXY) {lWZ : Z → W} {uZW : W → Z}\n    (hZW : GaloisConnection lWZ uZW) {lWY : Y → W} {uYW : W → Y} (hWY : GaloisConnection lWY uYW) {lZX : X → Z}\n    {uXZ : Z → X} (hXZ : GaloisConnection lZX uXZ) (h : ∀ w, uXZ (uZW w) = uXY (uYW w)) {x : X} :\n    lWZ (lZX x) = lWY (lYX x) :=\n  (hXZ.compose hZW).l_unique (hXY.compose hWY) h\n#align l_comm_of_u_comm l_comm_of_u_comm\n\n",
 "l_comm_iff_u_comm":
 "theorem l_comm_iff_u_comm {X : Type _} [partial_order X] {Y : Type _} [preorder Y] {Z : Type _} [preorder Z]\n    {W : Type _} [partial_order W] {lYX : X → Y} {uXY : Y → X} (hXY : GaloisConnection lYX uXY) {lWZ : Z → W}\n    {uZW : W → Z} (hZW : GaloisConnection lWZ uZW) {lWY : Y → W} {uYW : W → Y} (hWY : GaloisConnection lWY uYW)\n    {lZX : X → Z} {uXZ : Z → X} (hXZ : GaloisConnection lZX uXZ) :\n    (∀ w : W, uXZ (uZW w) = uXY (uYW w)) ↔ ∀ x : X, lWZ (lZX x) = lWY (lYX x) :=\n  ⟨hXY.l_comm_of_u_comm hZW hWY hXZ, hXY.u_comm_of_l_comm hZW hWY hXZ⟩\n#align l_comm_iff_u_comm l_comm_iff_u_comm\n\n",
 "l_bsupr_u":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem l_bsupr_u [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x} {p : ι → Prop}\n    (f : ∀ (i) (hi : p i), β) :\n    l («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u (f i hi))) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i hi) :=\n  by simp only [supᵢ_subtype', gi.l_supr_u]\n#align l_bsupr_u l_bsupr_u\n\n",
 "l_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem l_bot [OrderBot α] {l : α → β} {u : β → α} (gc : GaloisConnection l u) : l («expr⊥») = «expr⊥» :=\n  gc.dual.u_top\n#align l_bot l_bot\n\n",
 "l_binfi_u":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem l_binfi_u [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x} {p : ι → Prop}\n    (f : ∀ (i) (hi : p i), β) :\n    l («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u (f i hi))) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i hi) :=\n  by simp only [infᵢ_subtype', gi.l_infi_u]\n#align l_binfi_u l_binfi_u\n\n",
 "l_binfi_of_ul_eq_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem l_binfi_of_ul_eq_self [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x}\n    {p : ι → Prop} (f : ∀ (i) (hi : p i), α) (hf : ∀ i hi, u (l (f i hi)) = f i hi) :\n    l («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i hi)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (l (f i hi)) :=\n  by\n  rw [infᵢ_subtype', infᵢ_subtype']\n  exact gi.l_infi_of_ul_eq_self _ fun _ => hf _ _\n#align l_binfi_of_ul_eq_self l_binfi_of_ul_eq_self\n\n",
 "l_Sup_u_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem l_Sup_u_image [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) (s : Set β) :\n    l (supₛ («expr '' » u s)) = supₛ s := by rw [supₛ_image, gi.l_bsupr_u, supₛ_eq_supᵢ]\n#align l_Sup_u_image l_Sup_u_image\n\n",
 "l_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem l_Sup {s : Set α} :\n    l (supₛ s) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (l a) :=\n  by simp only [supₛ_eq_supᵢ, gc.l_supr]\n#align l_Sup l_Sup\n\n",
 "l_Inf_u_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem l_Inf_u_image [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) (s : Set β) :\n    l (infₛ («expr '' » u s)) = infₛ s := by rw [infₛ_image, gi.l_binfi_u, infₛ_eq_infᵢ]\n#align l_Inf_u_image l_Inf_u_image\n\n",
 "is_lub_u":
 "theorem is_lub_u {b : β} : IsLUB { a | l a ≤ b } (u b) :=\n  gc.is_greatest_u.is_lub\n#align is_lub_u is_lub_u\n\n",
 "is_lub_of_u_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem is_lub_of_u_image [preorder α] [preorder β] (gi : GaloisInsertion l u) {s : Set β} {a : α}\n    (hs : IsLUB («expr '' » u s) a) : IsLUB s (l a) :=\n  ⟨fun x hx => (gi.le_l_u x).trans <| gi.gc.monotone_l <| hs.1 <| mem_image_of_mem _ hx, fun x hx =>\n    gi.gc.l_le <| hs.2 <| gi.gc.monotone_u.mem_upper_bounds_image hx⟩\n#align is_lub_of_u_image is_lub_of_u_image\n\n",
 "is_lub_of_l_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem is_lub_of_l_image [preorder α] [preorder β] (gi : GaloisCoinsertion l u) {s : Set α} {a : β}\n    (hs : IsLUB («expr '' » l s) a) : IsLUB s (u a) :=\n  gi.dual.is_glb_of_u_image hs\n#align is_lub_of_l_image is_lub_of_l_image\n\n",
 "is_lub_l_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem is_lub_l_image {s : Set α} {a : α} (h : IsLUB s a) : IsLUB («expr '' » l s) (l a) :=\n  ⟨gc.monotone_l.mem_upper_bounds_image h.left, fun b hb =>\n    gc.l_le <| h.right <| by rwa [gc.upper_bounds_l_image] at hb⟩\n#align is_lub_l_image is_lub_l_image\n\n",
 "is_least_l":
 "theorem is_least_l {a : α} : IsLeast { b | a ≤ u b } (l a) :=\n  ⟨gc.le_u_l _, fun b hb => gc.l_le hb⟩\n#align is_least_l is_least_l\n\n",
 "is_greatest_u":
 "theorem is_greatest_u {b : β} : IsGreatest { a | l a ≤ b } (u b) :=\n  gc.dual.is_least_l\n#align is_greatest_u is_greatest_u\n\n",
 "is_glb_u_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem is_glb_u_image {s : Set β} {b : β} (h : IsGLB s b) : IsGLB («expr '' » u s) (u b) :=\n  gc.dual.is_lub_l_image h\n#align is_glb_u_image is_glb_u_image\n\n",
 "is_glb_of_u_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem is_glb_of_u_image [preorder α] [preorder β] (gi : GaloisInsertion l u) {s : Set β} {a : α}\n    (hs : IsGLB («expr '' » u s) a) : IsGLB s (l a) :=\n  ⟨fun x hx => gi.gc.l_le <| hs.1 <| mem_image_of_mem _ hx, fun x hx =>\n    (gi.le_l_u x).trans <| gi.gc.monotone_l <| hs.2 <| gi.gc.monotone_u.mem_lower_bounds_image hx⟩\n#align is_glb_of_u_image is_glb_of_u_image\n\n",
 "is_glb_of_l_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem is_glb_of_l_image [preorder α] [preorder β] (gi : GaloisCoinsertion l u) {s : Set α} {a : β}\n    (hs : IsGLB («expr '' » l s) a) : IsGLB s (u a) :=\n  gi.dual.is_lub_of_u_image hs\n#align is_glb_of_l_image is_glb_of_l_image\n\n",
 "is_glb_l":
 "theorem is_glb_l {a : α} : IsGLB { b | a ≤ u b } (l a) :=\n  gc.is_least_l.is_glb\n#align is_glb_l is_glb_l\n\n",
 "infₛ_image2_eq_supₛ_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print infₛ_image2_eq_supₛ_supₛ /-\ntheorem infₛ_image2_eq_supₛ_supₛ (h₁ : ∀ b, GaloisConnection (toDual ∘ l₁ b) (swap u b ∘ ofDual))\n    (h₂ : ∀ a, GaloisConnection (toDual ∘ l₂ a) (u a ∘ ofDual)) : infₛ (image2 u s t) = u (supₛ s) (supₛ t) :=\n  @infₛ_image2_eq_infₛ_infₛ («expr ᵒᵈ» α) («expr ᵒᵈ» β) _ _ _ _ _ _ _ _ _ h₁ h₂\n#align Inf_image2_eq_Sup_Sup infₛ_image2_eq_supₛ_supₛ\n-/\n\n",
 "infₛ_image2_eq_supₛ_infₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print infₛ_image2_eq_supₛ_infₛ /-\ntheorem infₛ_image2_eq_supₛ_infₛ (h₁ : ∀ b, GaloisConnection (toDual ∘ l₁ b) (swap u b ∘ ofDual))\n    (h₂ : ∀ a, GaloisConnection (l₂ a) (u a)) : infₛ (image2 u s t) = u (supₛ s) (infₛ t) :=\n  @infₛ_image2_eq_infₛ_infₛ («expr ᵒᵈ» α) _ _ _ _ _ _ _ _ _ _ h₁ h₂\n#align Inf_image2_eq_Sup_Inf infₛ_image2_eq_supₛ_infₛ\n-/\n\n",
 "infₛ_image2_eq_infₛ_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print infₛ_image2_eq_infₛ_supₛ /-\ntheorem infₛ_image2_eq_infₛ_supₛ (h₁ : ∀ b, GaloisConnection (l₁ b) (swap u b))\n    (h₂ : ∀ a, GaloisConnection (toDual ∘ l₂ a) (u a ∘ ofDual)) : infₛ (image2 u s t) = u (infₛ s) (supₛ t) :=\n  @infₛ_image2_eq_infₛ_infₛ _ («expr ᵒᵈ» β) _ _ _ _ _ _ _ _ _ h₁ h₂\n#align Inf_image2_eq_Inf_Sup infₛ_image2_eq_infₛ_supₛ\n-/\n\n",
 "infₛ_image2_eq_infₛ_infₛ":
 "#print infₛ_image2_eq_infₛ_infₛ /-\ntheorem infₛ_image2_eq_infₛ_infₛ (h₁ : ∀ b, GaloisConnection (l₁ b) (swap u b))\n    (h₂ : ∀ a, GaloisConnection (l₂ a) (u a)) : infₛ (image2 u s t) = u (infₛ s) (infₛ t) := by\n  simp_rw [infₛ_image2, ← (h₂ _).u_Inf, ← (h₁ _).u_Inf]\n#align Inf_image2_eq_Inf_Inf infₛ_image2_eq_infₛ_infₛ\n-/\n\n",
 "id":
 "#print id /-\n-- Constructing Galois connections\nprotected theorem id [pα : preorder α] : @GaloisConnection α α pα pα id id := fun a b =>\n  iff.intro (fun x => x) fun x => x\n#align id id\n-/\n\n",
 "galois_connection_mul_div":
 "theorem galois_connection_mul_div {k : ℕ} (h : 0 < k) : GaloisConnection (fun n => n * k) fun n => n / k := fun x y =>\n  (le_div_iff_mul_le h).symm\n#align galois_connection_mul_div galois_connection_mul_div\n\n",
 "exists_eq_u":
 "/-- If there exists a `b` such that `a = u a`, then `b = l a` is one such element. -/\ntheorem exists_eq_u (a : α) : (∃ b : β, a = u b) ↔ a = u (l a) :=\n  ⟨fun ⟨S, hS⟩ => hS.symm ▸ (gc.u_l_u_eq_u _).symm, fun HI => ⟨_, HI⟩⟩\n#align exists_eq_u exists_eq_u\n\n",
 "exists_eq_l":
 "/-- If there exists an `a` such that `b = l a`, then `a = u b` is one such element. -/\ntheorem exists_eq_l (b : β) : (∃ a : α, b = l a) ↔ b = l (u b) :=\n  ⟨fun ⟨S, hS⟩ => hS.symm ▸ (gc.l_u_l_eq_l _).symm, fun HI => ⟨_, HI⟩⟩\n#align exists_eq_l exists_eq_l\n\n",
 "dual":
 "protected theorem dual {l : α → β} {u : β → α} (gc : GaloisConnection l u) :\n    GaloisConnection (OrderDual.toDual ∘ u ∘ OrderDual.ofDual) (OrderDual.toDual ∘ l ∘ OrderDual.ofDual) := fun a b =>\n  (gc b a).symm\n#align dual dual\n\n",
 "dfun":
 "protected theorem dfun {ι : Type u} {α : ι → Type v} {β : ι → Type w} [∀ i, preorder (α i)] [∀ i, preorder (β i)]\n    (l : ∀ i, α i → β i) (u : ∀ i, β i → α i) (gc : ∀ i, GaloisConnection (l i) (u i)) :\n    GaloisConnection (fun (a : ∀ i, α i) i => l i (a i)) fun b i => u i (b i) := fun a b =>\n  forall_congr' fun i => gc i (a i) (b i)\n#align dfun dfun\n\n",
 "compose":
 "protected theorem compose [preorder α] [preorder β] [preorder γ] {l1 : α → β} {u1 : β → α} {l2 : β → γ} {u2 : γ → β}\n    (gc1 : GaloisConnection l1 u1) (gc2 : GaloisConnection l2 u2) : GaloisConnection (l2 ∘ l1) (u1 ∘ u2) := by\n  intro a b <;> rw [gc2, gc1]\n#align compose compose\n\n",
 "bdd_below_u_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem bdd_below_u_image {s : Set β} : BddBelow («expr '' » u s) ↔ BddBelow s :=\n  gc.dual.bdd_above_l_image\n#align bdd_below_u_image bdd_below_u_image\n\n",
 "bdd_below_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem bdd_below_preimage (e : «expr ≃o » α β) {s : Set β} : BddBelow («expr ⁻¹' » e s) ↔ BddBelow s := by\n  rw [← e.bdd_below_image, e.image_preimage]\n#align bdd_below_preimage bdd_below_preimage\n\n",
 "bdd_below_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem bdd_below_image (e : «expr ≃o » α β) {s : Set α} : BddBelow («expr '' » e s) ↔ BddBelow s :=\n  e.dual.bdd_above_image\n#align bdd_below_image bdd_below_image\n\n",
 "bdd_above_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem bdd_above_preimage (e : «expr ≃o » α β) {s : Set β} : BddAbove («expr ⁻¹' » e s) ↔ BddAbove s := by\n  rw [← e.bdd_above_image, e.image_preimage]\n#align bdd_above_preimage bdd_above_preimage\n\n",
 "bdd_above_l_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem bdd_above_l_image {s : Set α} : BddAbove («expr '' » l s) ↔ BddAbove s :=\n  ⟨fun ⟨x, hx⟩ => ⟨u x, by rwa [gc.upper_bounds_l_image] at hx⟩, gc.monotone_l.map_bdd_above⟩\n#align bdd_above_l_image bdd_above_l_image\n\n",
 "bdd_above_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem bdd_above_image (e : «expr ≃o » α β) {s : Set α} : BddAbove («expr '' » e s) ↔ BddAbove s :=\n  e.to_galois_connection.bdd_above_l_image\n#align bdd_above_image bdd_above_image\n\n"}