{"unary_relation_supₛ_iff":
 "#print unary_relation_supₛ_iff /-\ntheorem unary_relation_supₛ_iff {α : Type _} (s : Set (α → Prop)) {a : α} : supₛ s a ↔ ∃ r : α → Prop, r ∈ s ∧ r a :=\n  by\n  unfold Sup\n  simp [← eq_iff_iff]\n#align unary_relation_Sup_iff unary_relation_supₛ_iff\n-/\n\n",
 "unary_relation_infₛ_iff":
 "#print unary_relation_infₛ_iff /-\ntheorem unary_relation_infₛ_iff {α : Type _} (s : Set (α → Prop)) {a : α} : infₛ s a ↔ ∀ r : α → Prop, r ∈ s → r a :=\n  by\n  unfold Inf\n  simp [← eq_iff_iff]\n#align unary_relation_Inf_iff unary_relation_infₛ_iff\n-/\n\n",
 "toDual_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print toDual_supₛ /-\n-- see Note [lower instance priority]\n@[simp]\ntheorem toDual_supₛ (s : Set α) : toDual (supₛ s) = infₛ («expr ⁻¹' » ofDual s) :=\n  rfl\n#align to_dual_Sup toDual_supₛ\n-/\n\n",
 "toDual_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print toDual_supᵢ /-\n@[simp]\ntheorem toDual_supᵢ (f : ι → α) :\n    toDual («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (toDual (f i)) :=\n  rfl\n#align to_dual_supr toDual_supᵢ\n-/\n\n",
 "toDual_infₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print toDual_infₛ /-\n@[simp]\ntheorem toDual_infₛ (s : Set α) : toDual (infₛ s) = supₛ («expr ⁻¹' » ofDual s) :=\n  rfl\n#align to_dual_Inf toDual_infₛ\n-/\n\n",
 "toDual_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print toDual_infᵢ /-\n@[simp]\ntheorem toDual_infᵢ (f : ι → α) :\n    toDual («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (toDual (f i)) :=\n  rfl\n#align to_dual_infi toDual_infᵢ\n-/\n\n",
 "swap_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem swap_supr [SupSet α] [SupSet β] (f : ι → α × β) :\n    (supᵢ f).swap =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i).swap :=\n  by simp_rw [supᵢ, swap_Sup, range_comp]\n#align swap_supr swap_supr\n\n",
 "swap_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem swap_infi [InfSet α] [InfSet β] (f : ι → α × β) :\n    (infᵢ f).swap =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i).swap :=\n  by simp_rw [infᵢ, swap_Inf, range_comp]\n#align swap_infi swap_infi\n\n",
 "swap_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem swap_Sup [SupSet α] [SupSet β] (s : Set (α × β)) : (supₛ s).swap = supₛ («expr '' » Prod.swap s) :=\n  ext (congr_arg supₛ <| image_comp Prod.fst swap s : _) (congr_arg supₛ <| image_comp Prod.snd swap s : _)\n#align swap_Sup swap_Sup\n\n",
 "swap_Inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem swap_Inf [InfSet α] [InfSet β] (s : Set (α × β)) : (infₛ s).swap = infₛ («expr '' » Prod.swap s) :=\n  ext (congr_arg infₛ <| image_comp Prod.fst swap s : _) (congr_arg infₛ <| image_comp Prod.snd swap s : _)\n#align swap_Inf swap_Inf\n\n",
 "supₛ_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print supₛ_univ /-\n@[simp]\ntheorem supₛ_univ : supₛ univ = («expr⊤» : α) :=\n  (@isLUB_univ α _ _).Sup_eq\n#align Sup_univ supₛ_univ\n-/\n\n",
 "supₛ_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print supₛ_union /-\ntheorem supₛ_union {s t : Set α} : supₛ (s ∪ t) = «expr ⊔ » (supₛ s) (supₛ t) :=\n  ((isLUB_supₛ s).union (isLUB_supₛ t)).Sup_eq\n#align Sup_union supₛ_union\n-/\n\n",
 "supₛ_singleton":
 "#print supₛ_singleton /-\n-- We will generalize this to conditionally complete lattices in `cSup_singleton`.\ntheorem supₛ_singleton {a : α} : supₛ {a} = a :=\n  isLUB_singleton.Sup_eq\n#align Sup_singleton supₛ_singleton\n-/\n\n",
 "supₛ_range":
 "#print supₛ_range /-\n/-\n### supr & infi\n-/\ntheorem supₛ_range : supₛ (range f) = supᵢ f :=\n  rfl\n#align Sup_range supₛ_range\n-/\n\n",
 "supₛ_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.prod -/\n#print supₛ_prod /-\ntheorem supₛ_prod [SupSet α] [SupSet β] {s : Set α} {t : Set β} (hs : s.nonempty) (ht : t.nonempty) :\n    supₛ (set.prod s t) = (supₛ s, supₛ t) :=\n  congr_arg₂ prod.mk (congr_arg supₛ <| fst_image_prod _ ht) (congr_arg supₛ <| snd_image_prod hs _)\n#align Sup_prod supₛ_prod\n-/\n\n",
 "supₛ_pair":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print supₛ_pair /-\ntheorem supₛ_pair {a b : α} : supₛ {a, b} = «expr ⊔ » a b :=\n  (@isLUB_pair α _ a b).Sup_eq\n#align Sup_pair supₛ_pair\n-/\n\n",
 "supₛ_le_supₛ_of_subset_insert_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supₛ_le_supₛ_of_subset_insert_bot /-\ntheorem supₛ_le_supₛ_of_subset_insert_bot (h : s ⊆ insert («expr⊥») t) : supₛ s ≤ supₛ t :=\n  le_trans (supₛ_le_supₛ h) (le_of_eq (trans supₛ_insert bot_sup_eq))\n#align Sup_le_Sup_of_subset_insert_bot supₛ_le_supₛ_of_subset_insert_bot\n-/\n\n",
 "supₛ_le_supₛ_of_forall_exists_le":
 "#print supₛ_le_supₛ_of_forall_exists_le /-\ntheorem supₛ_le_supₛ_of_forall_exists_le (h : ∀ x ∈ s, ∃ y ∈ t, x ≤ y) : supₛ s ≤ supₛ t :=\n  le_supₛ_iff.2 fun b hb =>\n    supₛ_le fun a ha =>\n      let ⟨c, hct, hac⟩ := h a ha\n      hac.trans (hb hct)\n#align Sup_le_Sup_of_forall_exists_le supₛ_le_supₛ_of_forall_exists_le\n-/\n\n",
 "supₛ_le_supₛ":
 "#print supₛ_le_supₛ /-\ntheorem supₛ_le_supₛ (h : s ⊆ t) : supₛ s ≤ supₛ t :=\n  (isLUB_supₛ s).mono (isLUB_supₛ t) h\n#align Sup_le_Sup supₛ_le_supₛ\n-/\n\n",
 "supₛ_le_iff":
 "#print supₛ_le_iff /-\n@[simp]\ntheorem supₛ_le_iff : supₛ s ≤ a ↔ ∀ b ∈ s, b ≤ a :=\n  isLUB_le_iff (isLUB_supₛ s)\n#align Sup_le_iff supₛ_le_iff\n-/\n\n",
 "supₛ_le":
 "#print supₛ_le /-\ntheorem supₛ_le : (∀ b ∈ s, b ≤ a) → supₛ s ≤ a :=\n  complete_semilattice_Sup.Sup_le s a\n#align Sup_le supₛ_le\n-/\n\n",
 "supₛ_inter_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print supₛ_inter_le /-\ntheorem supₛ_inter_le {s t : Set α} : supₛ (s ∩ t) ≤ «expr ⊓ » (supₛ s) (supₛ t) :=\n  supₛ_le fun b hb => le_inf (le_supₛ hb.1) (le_supₛ hb.2)\n#align Sup_inter_le supₛ_inter_le\n-/\n\n",
 "supₛ_insert":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print supₛ_insert /-\n-- TODO(Jeremy): get this automatically\n@[simp]\ntheorem supₛ_insert {a : α} {s : Set α} : supₛ (insert a s) = «expr ⊔ » a (supₛ s) :=\n  ((isLUB_supₛ s).insert a).Sup_eq\n#align Sup_insert supₛ_insert\n-/\n\n",
 "supₛ_image2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supₛ_image2 /-\ntheorem supₛ_image2 {f : β → γ → α} {s : Set β} {t : Set γ} :\n    supₛ (image2 f s t) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f a b) :=\n  by rw [← image_prod, supₛ_image, bsupᵢ_prod]\n#align Sup_image2 supₛ_image2\n-/\n\n",
 "supₛ_image'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supₛ_image' /-\ntheorem supₛ_image' {s : Set β} {f : β → α} :\n    supₛ («expr '' » f s) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f a) :=\n  by rw [supᵢ, image_eq_range]\n#align Sup_image' supₛ_image'\n-/\n\n",
 "supₛ_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supₛ_image /-\ntheorem supₛ_image {s : Set β} {f : β → α} :\n    supₛ («expr '' » f s) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f a) :=\n  by rw [← supᵢ_subtype'', supₛ_image']\n#align Sup_image supₛ_image\n-/\n\n",
 "supₛ_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print supₛ_eq_top /-\ntheorem supₛ_eq_top : supₛ s = «expr⊤» ↔ ∀ b < «expr⊤», ∃ a ∈ s, b < a :=\n  ⟨fun h b hb => lt_supₛ_iff.1 <| hb.trans_eq h.symm, fun h =>\n    top_unique <|\n      le_of_not_gt fun h' =>\n        let ⟨a, ha, h⟩ := h _ h'\n        (h.trans_le <| le_supₛ ha).false⟩\n#align Sup_eq_top supₛ_eq_top\n-/\n\n",
 "supₛ_eq_supᵢ'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supₛ_eq_supᵢ' /-\ntheorem supₛ_eq_supᵢ' (s : Set α) :\n    supₛ s = «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" a := by\n  rw [supᵢ, Subtype.range_coe]\n#align Sup_eq_supr' supₛ_eq_supᵢ'\n-/\n\n",
 "supₛ_eq_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supₛ_eq_supᵢ /-\ntheorem supₛ_eq_supᵢ {s : Set α} :\n    supₛ s = «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" a :=\n  le_antisymm (supₛ_le le_supᵢ₂) (supᵢ₂_le fun b => le_supₛ)\n#align Sup_eq_supr supₛ_eq_supᵢ\n-/\n\n",
 "supₛ_eq_of_forall_le_of_forall_lt_exists_gt":
 "#print supₛ_eq_of_forall_le_of_forall_lt_exists_gt /-\n/-- Introduction rule to prove that `b` is the supremum of `s`: it suffices to check that `b`\nis larger than all elements of `s`, and that this is not the case of any `w < b`.\nSee `cSup_eq_of_forall_le_of_forall_lt_exists_gt` for a version in conditionally complete\nlattices. -/\ntheorem supₛ_eq_of_forall_le_of_forall_lt_exists_gt (h₁ : ∀ a ∈ s, a ≤ b) (h₂ : ∀ w, w < b → ∃ a ∈ s, w < a) :\n    supₛ s = b :=\n  (supₛ_le h₁).eq_of_not_lt fun h =>\n    let ⟨a, ha, ha'⟩ := h₂ _ h\n    ((le_supₛ ha).trans_lt ha').false\n#align Sup_eq_of_forall_le_of_forall_lt_exists_gt supₛ_eq_of_forall_le_of_forall_lt_exists_gt\n-/\n\n",
 "supₛ_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supₛ_eq_bot /-\n@[simp]\ntheorem supₛ_eq_bot : supₛ s = «expr⊥» ↔ ∀ a ∈ s, a = «expr⊥» :=\n  ⟨fun h a ha => bot_unique <| h ▸ le_supₛ ha, fun h => bot_unique <| supₛ_le fun a ha => le_bot_iff.2 <| h a ha⟩\n#align Sup_eq_bot supₛ_eq_bot\n-/\n\n",
 "supₛ_eq":
 "#print IsLUB.supₛ_eq /-\ntheorem IsLUB.supₛ_eq (h : IsLUB s a) : supₛ s = a :=\n  (isLUB_supₛ s).unique h\n#align is_lub.Sup_eq IsLUB.supₛ_eq\n-/\n\n",
 "supₛ_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supₛ_empty /-\n@[simp]\ntheorem supₛ_empty : supₛ ∅ = («expr⊥» : α) :=\n  (@isLUB_empty α _ _).Sup_eq\n#align Sup_empty supₛ_empty\n-/\n\n",
 "supₛ_diff_singleton_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supₛ_diff_singleton_bot /-\n@[simp]\ntheorem supₛ_diff_singleton_bot (s : Set α) : supₛ (s \\ {«expr⊥»}) = supₛ s :=\n  (supₛ_le_supₛ (diff_subset _ _)).antisymm <| supₛ_le_supₛ_of_subset_insert_bot <| subset_insert_diff_singleton _ _\n#align Sup_diff_singleton_bot supₛ_diff_singleton_bot\n-/\n\n",
 "supₛ_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supₛ_apply /-\ntheorem supₛ_apply {α : Type _} {β : α → Type _} [∀ i, SupSet (β i)] {s : Set (∀ a, β a)} {a : α} :\n    (supₛ s) a =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        ((f : ∀ a, β a) a) :=\n  rfl\n#align Sup_apply supₛ_apply\n-/\n\n",
 "supₛ_Prop_eq":
 "#print supₛ_Prop_eq /-\n@[simp]\ntheorem supₛ_Prop_eq {s : Set Prop} : supₛ s = ∃ p ∈ s, p :=\n  rfl\n#align Sup_Prop_eq supₛ_Prop_eq\n-/\n\n",
 "supᵢ₂_mono'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ₂_mono' /-\ntheorem supᵢ₂_mono' {f : ∀ i, κ i → α} {g : ∀ i', κ' i' → α} (h : ∀ i j, ∃ i' j', f i j ≤ g i' j') :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) ≤\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g i j) :=\n  supᵢ₂_le fun i j =>\n    let ⟨i', j', h⟩ := h i j\n    le_supᵢ₂_of_le i' j' h\n#align supr₂_mono' supᵢ₂_mono'\n-/\n\n",
 "supᵢ₂_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ₂_mono /-\ntheorem supᵢ₂_mono {f g : ∀ i, κ i → α} (h : ∀ i j, f i j ≤ g i j) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) ≤\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g i j) :=\n  supᵢ_mono fun i => supᵢ_mono <| h i\n#align supr₂_mono supᵢ₂_mono\n-/\n\n",
 "supᵢ₂_le_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ₂_le_supᵢ /-\ntheorem supᵢ₂_le_supᵢ (κ : ι → Sort _) (f : ι → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) ≤\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n  supᵢ₂_le fun i j => le_supᵢ f i\n#align supr₂_le_supr supᵢ₂_le_supᵢ\n-/\n\n",
 "supᵢ₂_le_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ₂_le_iff /-\n@[simp]\ntheorem supᵢ₂_le_iff {f : ∀ i, κ i → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) ≤ a ↔\n      ∀ i j, f i j ≤ a :=\n  by simp_rw [supᵢ_le_iff]\n#align supr₂_le_iff supᵢ₂_le_iff\n-/\n\n",
 "supᵢ₂_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ₂_le /-\ntheorem supᵢ₂_le {f : ∀ i, κ i → α} (h : ∀ i j, f i j ≤ a) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) ≤ a :=\n  supᵢ_le fun i => supᵢ_le <| h i\n#align supr₂_le supᵢ₂_le\n-/\n\n",
 "supᵢ₂_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supᵢ₂_eq_bot /-\n@[simp]\ntheorem supᵢ₂_eq_bot {f : ∀ i, κ i → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) = «expr⊥» ↔\n      ∀ i j, f i j = «expr⊥» :=\n  by simp_rw [supᵢ_eq_bot]\n#align supr₂_eq_bot supᵢ₂_eq_bot\n-/\n\n",
 "supᵢ₂_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ₂_comm /-\ntheorem supᵢ₂_comm {ι₁ ι₂ : Sort _} {κ₁ : ι₁ → Sort _} {κ₂ : ι₂ → Sort _} (f : ∀ i₁, κ₁ i₁ → ∀ i₂, κ₂ i₂ → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i₁ j₁ i₂ j₂) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i₁ j₁ i₂ j₂) :=\n  by simp only [@supᵢ_comm _ (κ₁ _), @supᵢ_comm _ ι₁]\n#align supr₂_comm supᵢ₂_comm\n-/\n\n",
 "supᵢ_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_univ /-\ntheorem supᵢ_univ {f : β → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) :=\n  by simp\n#align supr_univ supᵢ_univ\n-/\n\n",
 "supᵢ_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_union /-\ntheorem supᵢ_union {f : β → α} {s t : Set β} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr ⊔ » («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x))\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x)) :=\n  by simp_rw [mem_union, supᵢ_or, supᵢ_sup_eq]\n#align supr_union supᵢ_union\n-/\n\n",
 "supᵢ_true":
 "#print supᵢ_true /-\ntheorem supᵢ_true {s : True → α} : supᵢ s = s trivial :=\n  supᵢ_pos trivial\n#align supr_true supᵢ_true\n-/\n\n",
 "supᵢ_supᵢ_eq_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_supᵢ_eq_right /-\n@[simp]\ntheorem supᵢ_supᵢ_eq_right {b : β} {f : ∀ x : β, b = x → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x h)) =\n      f b rfl :=\n  (le_supᵢ₂ b rfl).antisymm'\n    (supᵢ₂_le fun c => by\n      rintro rfl\n      rfl)\n#align supr_supr_eq_right supᵢ_supᵢ_eq_right\n-/\n\n",
 "supᵢ_supᵢ_eq_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_supᵢ_eq_left /-\n/- TODO: this is strange. In the proof below, we get exactly the desired\n   among the equalities, but close does not get it.\nbegin\n  apply @le_antisymm,\n    simp, intros,\n    begin [smt]\n      ematch, ematch, ematch, trace_state, have := le_refl (f i_1 i),\n      trace_state, close\n    end\nend\n-/\n@[simp]\ntheorem supᵢ_supᵢ_eq_left {b : β} {f : ∀ x : β, x = b → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x h)) =\n      f b rfl :=\n  (@le_supᵢ₂ _ _ _ _ f b rfl).antisymm'\n    (supᵢ_le fun c =>\n      supᵢ_le <| by\n        rintro rfl\n        rfl)\n#align supr_supr_eq_left supᵢ_supᵢ_eq_left\n-/\n\n",
 "supᵢ_sup_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_sup_eq /-\ntheorem supᵢ_sup_eq :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr ⊔ » (f x) (g x)) =\n      «expr ⊔ » («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x))\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g x)) :=\n  le_antisymm (supᵢ_le fun i => sup_le_sup (le_supᵢ _ _) <| le_supᵢ _ _)\n    (sup_le (supᵢ_mono fun i => le_sup_left) <| supᵢ_mono fun i => le_sup_right)\n#align supr_sup_eq supᵢ_sup_eq\n-/\n\n",
 "supᵢ_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print supᵢ_sup /-\n/- TODO: here is another example where more flexible pattern matching\n   might help.\n\nbegin\n  apply @le_antisymm,\n  safe, pose h := f a ⊓ g a, begin [smt] ematch, ematch  end\nend\n-/\ntheorem supᵢ_sup [Nonempty ι] {f : ι → α} {a : α} :\n    «expr ⊔ » («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x))\n        a =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr ⊔ » (f x) a) :=\n  by rw [supᵢ_sup_eq, supᵢ_const]\n#align supr_sup supᵢ_sup\n-/\n\n",
 "supᵢ_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_sum /-\ntheorem supᵢ_sum {f : Sum β γ → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr ⊔ »\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          (f (Sum.inl i)))\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          (f (Sum.inr j))) :=\n  eq_of_forall_ge_iff fun c => by simp only [sup_le_iff, supᵢ_le_iff, Sum.forall]\n#align supr_sum supᵢ_sum\n-/\n\n",
 "supᵢ_subtype''":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_subtype'' /-\ntheorem supᵢ_subtype'' {ι} (s : Set ι) (f : ι → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f t) :=\n  supᵢ_subtype\n#align supr_subtype'' supᵢ_subtype''\n-/\n\n",
 "supᵢ_subtype'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_subtype' /-\ntheorem supᵢ_subtype' {p : ι → Prop} {f : ∀ i, p i → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i h) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (f x x.property) :=\n  (@supᵢ_subtype _ _ _ p fun x => f x.val x.property).symm\n#align supr_subtype' supᵢ_subtype'\n-/\n\n",
 "supᵢ_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_subtype /-\ntheorem supᵢ_subtype {p : ι → Prop} {f : Subtype p → α} :\n    supᵢ f =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f ⟨i, h⟩) :=\n  le_antisymm (supᵢ_le fun ⟨i, h⟩ => le_supᵢ₂ i h) (supᵢ₂_le fun i h => le_supᵢ _ _)\n#align supr_subtype supᵢ_subtype\n-/\n\n",
 "supᵢ_split_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_split_single /-\ntheorem supᵢ_split_single (f : β → α) (i₀ : β) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) =\n      «expr ⊔ » (f i₀)\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)) :=\n  by\n  convert supᵢ_split _ _\n  simp\n#align supr_split_single supᵢ_split_single\n-/\n\n",
 "supᵢ_split":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_split /-\ntheorem supᵢ_split (f : β → α) (p : β → Prop) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) =\n      «expr ⊔ » («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i))\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)) :=\n  by simpa [classical.em] using @supᵢ_union _ _ _ f { i | p i } { i | ¬p i }\n#align supr_split supᵢ_split\n-/\n\n",
 "supᵢ_singleton":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_singleton /-\ntheorem supᵢ_singleton {f : β → α} {b : β} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) = f b := by\n  simp\n#align supr_singleton supᵢ_singleton\n-/\n\n",
 "supᵢ_sigma":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_sigma /-\ntheorem supᵢ_sigma {p : β → Type _} {f : Sigma p → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f ⟨i, j⟩) :=\n  eq_of_forall_ge_iff fun c => by simp only [supᵢ_le_iff, Sigma.forall]\n#align supr_sigma supᵢ_sigma\n-/\n\n",
 "supᵢ_range'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_range' /-\ntheorem supᵢ_range' (g : β → α) (f : ι → β) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g b) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g (f i)) :=\n  by rw [supᵢ, supᵢ, ← image_eq_range, ← range_comp]\n#align supr_range' supᵢ_range'\n-/\n\n",
 "supᵢ_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_range /-\ntheorem supᵢ_range {g : β → α} {f : ι → β} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g b) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g (f i)) :=\n  by rw [← supᵢ_subtype'', supᵢ_range']\n#align supr_range supᵢ_range\n-/\n\n",
 "supᵢ_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_prod /-\ntheorem supᵢ_prod {f : β × γ → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (i, j)) :=\n  eq_of_forall_ge_iff fun c => by simp only [supᵢ_le_iff, Prod.forall]\n#align supr_prod supᵢ_prod\n-/\n\n",
 "supᵢ_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_pos /-\n@[simp]\ntheorem supᵢ_pos {p : Prop} {f : p → α} (hp : p) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f h) = f hp :=\n  le_antisymm (supᵢ_le fun h => le_rfl) (le_supᵢ _ _)\n#align supr_pos supᵢ_pos\n-/\n\n",
 "supᵢ_plift_up":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_plift_up /-\ntheorem supᵢ_plift_up (f : PLift ι → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (PLift.up i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n  PLift.up_surjective.supr_congr _ fun _ => rfl\n#align supr_plift_up supᵢ_plift_up\n-/\n\n",
 "supᵢ_plift_down":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_plift_down /-\ntheorem supᵢ_plift_down (f : ι → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (PLift.down i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n  PLift.down_surjective.supr_congr _ fun _ => rfl\n#align supr_plift_down supᵢ_plift_down\n-/\n\n",
 "supᵢ_pair":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print supᵢ_pair /-\ntheorem supᵢ_pair {f : β → α} {a b : β} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr ⊔ » (f a) (f b) :=\n  by rw [supᵢ_insert, supᵢ_singleton]\n#align supr_pair supᵢ_pair\n-/\n\n",
 "supᵢ_or":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_or /-\ntheorem supᵢ_or {p q : Prop} {s : p ∨ q → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s x) =\n      «expr ⊔ »\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s (or.inl i)))\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          (s (or.inr j))) :=\n  le_antisymm\n    (supᵢ_le fun i =>\n      match i with\n      | or.inl i => le_sup_of_le_left <| le_supᵢ _ i\n      | or.inr j => le_sup_of_le_right <| le_supᵢ _ j)\n    (sup_le (supᵢ_comp_le _ _) (supᵢ_comp_le _ _))\n#align supr_or supᵢ_or\n-/\n\n",
 "supᵢ_option_elim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_option_elim /-\n/-- A version of `supr_option` useful for rewriting right-to-left. -/\ntheorem supᵢ_option_elim (a : α) (f : β → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (o.elim a f) =\n      «expr ⊔ » a\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f b)) :=\n  by simp [supᵢ_option]\n#align supr_option_elim supᵢ_option_elim\n-/\n\n",
 "supᵢ_option":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_option /-\ntheorem supᵢ_option (f : Option β → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f o) =\n      «expr ⊔ » (f none)\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          (f (option.some b))) :=\n  eq_of_forall_ge_iff fun c => by simp only [supᵢ_le_iff, sup_le_iff, Option.forall]\n#align supr_option supᵢ_option\n-/\n\n",
 "supᵢ_of_empty'":
 "#print supᵢ_of_empty' /-\ntheorem supᵢ_of_empty' {α ι} [SupSet α] [IsEmpty ι] (f : ι → α) : supᵢ f = supₛ (∅ : Set α) :=\n  congr_arg supₛ (range_eq_empty f)\n#align supr_of_empty' supᵢ_of_empty'\n-/\n\n",
 "supᵢ_of_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supᵢ_of_empty /-\ntheorem supᵢ_of_empty [IsEmpty ι] (f : ι → α) : supᵢ f = «expr⊥» :=\n  (supᵢ_of_empty' f).trans supₛ_empty\n#align supr_of_empty supᵢ_of_empty\n-/\n\n",
 "supᵢ_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supᵢ_neg /-\n@[simp]\ntheorem supᵢ_neg {p : Prop} {f : p → α} (hp : ¬p) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f h) = «expr⊥» :=\n  le_antisymm (supᵢ_le fun h => (hp h).elim) bot_le\n#align supr_neg supᵢ_neg\n-/\n\n",
 "supᵢ_ne_bot_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_ne_bot_subtype /-\n/-- When taking the supremum of `f : ι → α`, the elements of `ι` on which `f` gives `⊥` can be\ndropped, without changing the result. -/\ntheorem supᵢ_ne_bot_subtype (f : ι → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n  by\n  by_cases htriv : ∀ i, f i = «expr⊥»\n  · simp only [supᵢ_bot, (funext htriv : f = _)]\n  refine' (supᵢ_comp_le f _).antisymm (supᵢ_mono' fun i => _)\n  by_cases hi : f i = «expr⊥»\n  · rw [hi]\n    obtain ⟨i₀, hi₀⟩ := not_forall.mp htriv\n    exact ⟨⟨i₀, hi₀⟩, bot_le⟩\n  · exact ⟨⟨i, hi⟩, rfl.le⟩\n#align supr_ne_bot_subtype supᵢ_ne_bot_subtype\n-/\n\n",
 "supᵢ_nat_gt_zero_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_nat_gt_zero_eq /-\ntheorem supᵢ_nat_gt_zero_eq (f : ℕ → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (i + 1)) :=\n  @infᵢ_nat_gt_zero_eq («expr ᵒᵈ» α) _ f\n#align supr_nat_gt_zero_eq supᵢ_nat_gt_zero_eq\n-/\n\n",
 "supᵢ_nat_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print Monotone.supᵢ_nat_add /-\ntheorem Monotone.supᵢ_nat_add {f : ℕ → α} (hf : Monotone f) (k : ℕ) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (n + k)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f n) :=\n  le_antisymm (supᵢ_le fun i => le_supᵢ _ (i + k)) <| supᵢ_mono fun i => hf <| nat.le_add_right i k\n#align monotone.supr_nat_add Monotone.supᵢ_nat_add\n-/\n\n",
 "supᵢ_mono'":
 "#print supᵢ_mono' /-\ntheorem supᵢ_mono' {g : ι' → α} (h : ∀ i, ∃ i', f i ≤ g i') : supᵢ f ≤ supᵢ g :=\n  supᵢ_le fun i => exists.elim (h i) le_supᵢ_of_le\n#align supr_mono' supᵢ_mono'\n-/\n\n",
 "supᵢ_mono":
 "#print supᵢ_mono /-\ntheorem supᵢ_mono (h : ∀ i, f i ≤ g i) : supᵢ f ≤ supᵢ g :=\n  supᵢ_le fun i => le_supᵢ_of_le i <| h i\n#align supr_mono supᵢ_mono\n-/\n\n",
 "supᵢ_lt_iff":
 "#print supᵢ_lt_iff /-\ntheorem supᵢ_lt_iff : supᵢ f < a ↔ ∃ b, b < a ∧ ∀ i, f i ≤ b :=\n  ⟨fun h => ⟨supᵢ f, h, le_supᵢ f⟩, fun ⟨b, h, hb⟩ => (supᵢ_le hb).trans_lt h⟩\n#align supr_lt_iff supᵢ_lt_iff\n-/\n\n",
 "supᵢ_le_supᵢ_of_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_le_supᵢ_of_subset /-\ntheorem supᵢ_le_supᵢ_of_subset {f : β → α} {s t : Set β} :\n    s ⊆ t →\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) ≤\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) :=\n  bsupᵢ_mono\n#align supr_le_supr_of_subset supᵢ_le_supᵢ_of_subset\n-/\n\n",
 "supᵢ_le_iff":
 "#print supᵢ_le_iff /-\n@[simp]\ntheorem supᵢ_le_iff : supᵢ f ≤ a ↔ ∀ i, f i ≤ a :=\n  (isLUB_le_iff isLUB_supᵢ).trans forall_range_iff\n#align supr_le_iff supᵢ_le_iff\n-/\n\n",
 "supᵢ_le":
 "#print supᵢ_le /-\ntheorem supᵢ_le (h : ∀ i, f i ≤ a) : supᵢ f ≤ a :=\n  supₛ_le fun b ⟨i, Eq⟩ => Eq ▸ h i\n#align supr_le supᵢ_le\n-/\n\n",
 "supᵢ_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_ite /-\ntheorem supᵢ_ite (f g : ι → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (if p i then f i else g i) =\n      «expr ⊔ » («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i))\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g i)) :=\n  supᵢ_dite _ _ _\n#align supr_ite supᵢ_ite\n-/\n\n",
 "supᵢ_insert":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_insert /-\ntheorem supᵢ_insert {f : β → α} {s : Set β} {b : β} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr ⊔ » (f b)\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x)) :=\n  Eq.trans supᵢ_union <|\n    congr_arg\n      (fun x =>\n        «expr ⊔ » x\n          («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x)))\n      supᵢ_supᵢ_eq_left\n#align supr_insert supᵢ_insert\n-/\n\n",
 "supᵢ_infᵢ_le_infᵢ_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_infᵢ_le_infᵢ_supᵢ /-\ntheorem supᵢ_infᵢ_le_infᵢ_supᵢ (f : ι → ι' → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j)) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j)) :=\n  supᵢ_le fun i => infᵢ_mono fun j => le_supᵢ _ i\n#align supr_infi_le_infi_supr supᵢ_infᵢ_le_infᵢ_supᵢ\n-/\n\n",
 "supᵢ_infᵢ_ge_nat_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print supᵢ_infᵢ_ge_nat_add /-\n@[simp]\ntheorem supᵢ_infᵢ_ge_nat_add (f : ℕ → α) (k : ℕ) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (i + k))) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) :=\n  by\n  have hf :\n    Monotone fun n =>\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n    fun n m h => binfᵢ_mono fun i => h.trans\n  rw [← Monotone.supᵢ_nat_add hf k]\n  · simp_rw [infᵢ_ge_eq_infᵢ_nat_add, ← nat.add_assoc]\n#align supr_infi_ge_nat_add supᵢ_infᵢ_ge_nat_add\n-/\n\n",
 "supᵢ_inf_le_supₛ_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print supᵢ_inf_le_supₛ_inf /-\n/-- This is a weaker version of `Sup_inf_eq` -/\ntheorem supᵢ_inf_le_supₛ_inf :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" («expr ⊓ » b a) ≤\n      «expr ⊓ » (supₛ s) a :=\n  @infₛ_sup_le_infᵢ_sup («expr ᵒᵈ» α) _ _ _\n#align supr_inf_le_Sup_inf supᵢ_inf_le_supₛ_inf\n-/\n\n",
 "supᵢ_inf_le_inf_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print supᵢ_inf_le_inf_supₛ /-\n/-- This is a weaker version of `inf_Sup_eq` -/\ntheorem supᵢ_inf_le_inf_supₛ :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" («expr ⊓ » a b) ≤\n      «expr ⊓ » a (supₛ s) :=\n  @sup_infₛ_le_infᵢ_sup («expr ᵒᵈ» α) _ _ _\n#align supr_inf_le_inf_Sup supᵢ_inf_le_inf_supₛ\n-/\n\n",
 "supᵢ_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_image /-\ntheorem supᵢ_image {γ} {f : β → γ} {g : γ → α} {t : Set β} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g c) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g (f b)) :=\n  by rw [← supₛ_image, ← supₛ_image, ← image_comp]\n#align supr_image supᵢ_image\n-/\n\n",
 "supᵢ_ge_eq_supᵢ_nat_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_ge_eq_supᵢ_nat_add /-\ntheorem supᵢ_ge_eq_supᵢ_nat_add (u : ℕ → α) (n : ℕ) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u i) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u (i + n)) :=\n  by\n  apply le_antisymm <;> simp only [supᵢ_le_iff]\n  ·\n    exact fun i hi =>\n      le_supₛ\n        ⟨i - n, by\n          dsimp only\n          rw [nat.sub_add_cancel hi]⟩\n  · exact fun i => le_supₛ ⟨i + n, supᵢ_pos (nat.le_add_left _ _)⟩\n#align supr_ge_eq_supr_nat_add supᵢ_ge_eq_supᵢ_nat_add\n-/\n\n",
 "supᵢ_false":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supᵢ_false /-\n@[simp]\ntheorem supᵢ_false {s : False → α} : supᵢ s = «expr⊥» :=\n  le_antisymm (supᵢ_le fun i => false.elim i) bot_le\n#align supr_false supᵢ_false\n-/\n\n",
 "supᵢ_extend_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_extend_bot /-\ntheorem supᵢ_extend_bot {e : ι → β} (he : injective e) (f : ι → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (extend e f («expr⊥») j) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n  by\n  rw [supᵢ_split _ fun j => ∃ i, e i = j]\n  simp (config := { contextual := true }) [he.extend_apply, extend_apply', @supᵢ_comm _ β ι]\n#align supr_extend_bot supᵢ_extend_bot\n-/\n\n",
 "supᵢ_exists":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_exists /-\n@[simp]\ntheorem supᵢ_exists {p : ι → Prop} {f : Exists p → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f ⟨i, h⟩) :=\n  le_antisymm (supᵢ_le fun ⟨i, h⟩ => le_supᵢ₂ i h) (supᵢ₂_le fun i h => le_supᵢ _ _)\n#align supr_exists supᵢ_exists\n-/\n\n",
 "supᵢ_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print supᵢ_eq_top /-\ntheorem supᵢ_eq_top (f : ι → α) : supᵢ f = «expr⊤» ↔ ∀ b < «expr⊤», ∃ i, b < f i := by\n  simp only [← supₛ_range, supₛ_eq_top, Set.exists_range_iff]\n#align supr_eq_top supᵢ_eq_top\n-/\n\n",
 "supᵢ_eq_of_forall_le_of_forall_lt_exists_gt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_eq_of_forall_le_of_forall_lt_exists_gt /-\n/-- Introduction rule to prove that `b` is the supremum of `f`: it suffices to check that `b`\nis larger than `f i` for all `i`, and that this is not the case of any `w<b`.\nSee `csupr_eq_of_forall_le_of_forall_lt_exists_gt` for a version in conditionally complete\nlattices. -/\ntheorem supᵢ_eq_of_forall_le_of_forall_lt_exists_gt {f : ι → α} (h₁ : ∀ i, f i ≤ b) (h₂ : ∀ w, w < b → ∃ i, w < f i) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) = b :=\n  supₛ_eq_of_forall_le_of_forall_lt_exists_gt (forall_range_iff.mpr h₁) fun w hw => exists_range_iff.mpr <| h₂ w hw\n#align supr_eq_of_forall_le_of_forall_lt_exists_gt supᵢ_eq_of_forall_le_of_forall_lt_exists_gt\n-/\n\n",
 "supᵢ_eq_if":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supᵢ_eq_if /-\ntheorem supᵢ_eq_if {p : Prop} [Decidable p] (a : α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" a =\n      if p then a else «expr⊥» :=\n  supᵢ_eq_dif fun _ => a\n#align supr_eq_if supᵢ_eq_if\n-/\n\n",
 "supᵢ_eq_dif":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supᵢ_eq_dif /-\ntheorem supᵢ_eq_dif {p : Prop} [Decidable p] (a : p → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (a h) =\n      if h : p then a h else «expr⊥» :=\n  by by_cases p <;> simp [h]\n#align supr_eq_dif supᵢ_eq_dif\n-/\n\n",
 "supᵢ_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supᵢ_eq_bot /-\n@[simp]\ntheorem supᵢ_eq_bot : supᵢ s = «expr⊥» ↔ ∀ i, s i = «expr⊥» :=\n  supₛ_eq_bot.trans forall_range_iff\n#align supr_eq_bot supᵢ_eq_bot\n-/\n\n",
 "supᵢ_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print IsLUB.supᵢ_eq /-\ntheorem IsLUB.supᵢ_eq (h : IsLUB (range f) a) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f j) = a :=\n  h.Sup_eq\n#align is_lub.supr_eq IsLUB.supᵢ_eq\n-/\n\n",
 "supᵢ_emptyset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supᵢ_emptyset /-\n/-\n### supr and infi under set constructions\n-/\ntheorem supᵢ_emptyset {f : β → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) = «expr⊥» :=\n  by simp\n#align supr_emptyset supᵢ_emptyset\n-/\n\n",
 "supᵢ_dite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_dite /-\ntheorem supᵢ_dite (f : ∀ i, p i → α) (g : ∀ i, ¬p i → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (if h : p i then f i h else g i h) =\n      «expr ⊔ »\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i h))\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g i h)) :=\n  by\n  rw [← supᵢ_sup_eq]\n  congr 1 with i\n  split_ifs with h <;> simp [h]\n#align supr_dite supᵢ_dite\n-/\n\n",
 "supᵢ_const_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_const_mono /-\ntheorem supᵢ_const_mono (h : ι → ι') :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" a ≤\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" a :=\n  supᵢ_le <| le_supᵢ _ ∘ h\n#align supr_const_mono supᵢ_const_mono\n-/\n\n",
 "supᵢ_const_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_const_le /-\ntheorem supᵢ_const_le :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" a ≤ a :=\n  supᵢ_le fun _ => le_rfl\n#align supr_const_le supᵢ_const_le\n-/\n\n",
 "supᵢ_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_const /-\n-- We generalize this to conditionally complete lattices in `csupr_const` and `cinfi_const`.\ntheorem supᵢ_const [Nonempty ι] :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" a = a := by\n  rw [supᵢ, range_const, supₛ_singleton]\n#align supr_const supᵢ_const\n-/\n\n",
 "supᵢ_congr_Prop":
 "#print supᵢ_congr_Prop /-\n@[congr]\ntheorem supᵢ_congr_Prop {p q : Prop} {f₁ : p → α} {f₂ : q → α} (pq : p ↔ q) (f : ∀ x, f₁ (pq.mpr x) = f₂ x) :\n    supᵢ f₁ = supᵢ f₂ := by\n  obtain rfl := propext pq\n  congr with x\n  apply f\n#align supr_congr_Prop supᵢ_congr_Prop\n-/\n\n",
 "supᵢ_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print Equiv.supᵢ_congr /-\nprotected theorem Equiv.supᵢ_congr {g : ι' → α} (e : «expr ≃ » ι ι') (h : ∀ x, g (e x) = f x) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g y) :=\n  e.surjective.supr_congr _ h\n#align equiv.supr_congr Equiv.supᵢ_congr\n-/\n\n",
 "supᵢ_comp_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_comp_le /-\ntheorem supᵢ_comp_le {ι' : Sort _} (f : ι' → α) (g : ι → ι') :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (g x)) ≤\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f y) :=\n  supᵢ_mono' fun x => ⟨_, le_rfl⟩\n#align supr_comp_le supᵢ_comp_le\n-/\n\n",
 "supᵢ_comp_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print Monotone.supᵢ_comp_eq /-\ntheorem Monotone.supᵢ_comp_eq [preorder β] {f : β → α} (hf : Monotone f) {s : ι → β} (hs : ∀ x, ∃ i, x ≤ s i) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (s x)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f y) :=\n  le_antisymm (supᵢ_comp_le _ _) (supᵢ_mono' fun x => (hs x).imp fun i hi => hf hi)\n#align monotone.supr_comp_eq Monotone.supᵢ_comp_eq\n-/\n\n",
 "supᵢ_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print Equiv.supᵢ_comp /-\ntheorem Equiv.supᵢ_comp {g : ι' → α} (e : «expr ≃ » ι ι') :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g (e x)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g y) :=\n  e.surjective.supr_comp _\n#align equiv.supr_comp Equiv.supᵢ_comp\n-/\n\n",
 "supᵢ_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_comm /-\ntheorem supᵢ_comm {f : ι → ι' → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) :=\n  le_antisymm (supᵢ_le fun i => supᵢ_mono fun j => le_supᵢ _ i) (supᵢ_le fun j => supᵢ_mono fun i => le_supᵢ _ _)\n#align supr_comm supᵢ_comm\n-/\n\n",
 "supᵢ_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print supᵢ_bot /-\n@[simp]\ntheorem supᵢ_bot :\n    («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" («expr⊥») : α) =\n      «expr⊥» :=\n  bot_unique supᵢ_const_le\n#align supr_bot supᵢ_bot\n-/\n\n",
 "supᵢ_bool_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print supᵢ_bool_eq /-\ntheorem supᵢ_bool_eq {f : Bool → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f b) =\n      «expr ⊔ » (f true) (f false) :=\n  by rw [supᵢ, Bool.range_eq, supₛ_pair, sup_comm]\n#align supr_bool_eq supᵢ_bool_eq\n-/\n\n",
 "supᵢ_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_apply /-\n@[simp]\ntheorem supᵢ_apply {α : Type _} {β : α → Type _} {ι : Sort _} [∀ i, SupSet (β i)] {f : ι → ∀ a, β a} {a : α} :\n    («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)) a =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i a) :=\n  by rw [supᵢ, supₛ_apply, supᵢ, supᵢ, ← image_eq_range (fun f : ∀ i, β i => f a) (range f), ← range_comp]\n#align supr_apply supᵢ_apply\n-/\n\n",
 "supᵢ_and'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_and' /-\n/-- The symmetric case of `supr_and`, useful for rewriting into a supremum over a conjunction -/\ntheorem supᵢ_and' {p q : Prop} {s : p → q → α} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s h₁ h₂) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s h.1 h.2) :=\n  Eq.symm supᵢ_and\n#align supr_and' supᵢ_and'\n-/\n\n",
 "supᵢ_and":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_and /-\ntheorem supᵢ_and {p q : Prop} {s : p ∧ q → α} :\n    supᵢ s =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s ⟨h₁, h₂⟩) :=\n  le_antisymm (supᵢ_le fun ⟨i, h⟩ => le_supᵢ₂ i h) (supᵢ₂_le fun i h => le_supᵢ _ _)\n#align supr_and supᵢ_and\n-/\n\n",
 "supᵢ_Prop_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_Prop_eq /-\n@[simp]\ntheorem supᵢ_Prop_eq {p : ι → Prop} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (p i) = ∃ i, p i :=\n  le_antisymm (fun ⟨q, ⟨i, (Eq : p i = q)⟩, hq⟩ => ⟨i, Eq.symm ▸ hq⟩) fun ⟨i, hi⟩ => ⟨p i, ⟨i, rfl⟩, hi⟩\n#align supr_Prop_eq supᵢ_Prop_eq\n-/\n\n",
 "supr_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem supr_mk [SupSet α] [SupSet β] (f : ι → α) (g : ι → β) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i, g i) =\n      («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i),\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g i)) :=\n  congr_arg₂ prod.mk (fst_supᵢ _) (snd_supᵢ _)\n#align supr_mk supr_mk\n\n",
 "sup_supᵢ_nat_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print sup_supᵢ_nat_succ /-\ntheorem sup_supᵢ_nat_succ (u : ℕ → α) :\n    «expr ⊔ » (u 0)\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u (i + 1))) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u i) :=\n  calc\n    «expr ⊔ » (u 0)\n          («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n            (u (i + 1))) =\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u x) :=\n      by rw [supᵢ_union, supᵢ_singleton, supᵢ_range]\n    _ = «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (u i) := by\n      rw [Nat.zero_union_range_succ, supᵢ_univ]\n    \n#align sup_supr_nat_succ sup_supᵢ_nat_succ\n-/\n\n",
 "sup_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_supᵢ /-\ntheorem sup_supᵢ [Nonempty ι] {f : ι → α} {a : α} :\n    «expr ⊔ » a\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr ⊔ » a (f x)) :=\n  by rw [supᵢ_sup_eq, supᵢ_const]\n#align sup_supr sup_supᵢ\n-/\n\n",
 "sup_infₛ_le_infᵢ_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_infₛ_le_infᵢ_sup /-\n/-- This is a weaker version of `sup_Inf_eq` -/\ntheorem sup_infₛ_le_infᵢ_sup :\n    «expr ⊔ » a (infₛ s) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" («expr ⊔ » a b) :=\n  le_infᵢ₂ fun i h => sup_le_sup_left (infₛ_le h) _\n#align sup_Inf_le_infi_sup sup_infₛ_le_infᵢ_sup\n-/\n\n",
 "sup_eq_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print sup_eq_supᵢ /-\ntheorem sup_eq_supᵢ (x y : α) :\n    «expr ⊔ » x y =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (cond b x y) :=\n  by rw [supᵢ_bool_eq, Bool.cond_true, Bool.cond_false]\n#align sup_eq_supr sup_eq_supᵢ\n-/\n\n",
 "sup_bsupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_bsupᵢ /-\ntheorem sup_bsupᵢ {p : ι → Prop} {f : ∀ i, p i → α} {a : α} (h : ∃ i, p i) :\n    «expr ⊔ » a\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i h)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr ⊔ » a (f i h)) :=\n  by simpa only [sup_comm] using bsupᵢ_sup h\n#align sup_bsupr sup_bsupᵢ\n-/\n\n",
 "snd_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem snd_supr [SupSet α] [SupSet β] (f : ι → α × β) :\n    (supᵢ f).snd =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i).snd :=\n  congr_arg supₛ (range_comp _ _).symm\n#align snd_supr snd_supr\n\n",
 "snd_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem snd_infi [InfSet α] [InfSet β] (f : ι → α × β) :\n    (infᵢ f).snd =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i).snd :=\n  congr_arg infₛ (range_comp _ _).symm\n#align snd_infi snd_infi\n\n",
 "snd_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem snd_Sup [SupSet α] [SupSet β] (s : Set (α × β)) : (supₛ s).snd = supₛ («expr '' » Prod.snd s) :=\n  rfl\n#align snd_Sup snd_Sup\n\n",
 "snd_Inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem snd_Inf [InfSet α] [InfSet β] (s : Set (α × β)) : (infₛ s).snd = infₛ («expr '' » Prod.snd s) :=\n  rfl\n#align snd_Inf snd_Inf\n\n",
 "ofDual_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print ofDual_supₛ /-\n@[simp]\ntheorem ofDual_supₛ (s : Set («expr ᵒᵈ» α)) : ofDual (supₛ s) = infₛ («expr ⁻¹' » toDual s) :=\n  rfl\n#align of_dual_Sup ofDual_supₛ\n-/\n\n",
 "ofDual_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print ofDual_supᵢ /-\n@[simp]\ntheorem ofDual_supᵢ (f : ι → «expr ᵒᵈ» α) :\n    ofDual («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (ofDual (f i)) :=\n  rfl\n#align of_dual_supr ofDual_supᵢ\n-/\n\n",
 "ofDual_infₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print ofDual_infₛ /-\n@[simp]\ntheorem ofDual_infₛ (s : Set («expr ᵒᵈ» α)) : ofDual (infₛ s) = supₛ («expr ⁻¹' » toDual s) :=\n  rfl\n#align of_dual_Inf ofDual_infₛ\n-/\n\n",
 "ofDual_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print ofDual_infᵢ /-\n@[simp]\ntheorem ofDual_infᵢ (f : ι → «expr ᵒᵈ» α) :\n    ofDual («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ofDual (f i)) :=\n  rfl\n#align of_dual_infi ofDual_infᵢ\n-/\n\n",
 "monotone_supₛ_of_monotone":
 "#print monotone_supₛ_of_monotone /-\ntheorem monotone_supₛ_of_monotone {s : Set (α → β)} (m_s : ∀ f ∈ s, Monotone f) : Monotone (supₛ s) := fun x y h =>\n  supᵢ_mono fun f => m_s f f.2 h\n#align monotone_Sup_of_monotone monotone_supₛ_of_monotone\n-/\n\n",
 "monotone_infₛ_of_monotone":
 "#print monotone_infₛ_of_monotone /-\ntheorem monotone_infₛ_of_monotone {s : Set (α → β)} (m_s : ∀ f ∈ s, Monotone f) : Monotone (infₛ s) := fun x y h =>\n  infᵢ_mono fun f => m_s f f.2 h\n#align monotone_Inf_of_monotone monotone_infₛ_of_monotone\n-/\n\n",
 "map_supₛ_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Antitone.map_supₛ_le /-\ntheorem Antitone.map_supₛ_le [CompleteLattice β] {s : Set α} {f : α → β} (hf : Antitone f) :\n    f (supₛ s) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f a) :=\n  by\n  rw [supₛ_eq_supᵢ]\n  exact hf.map_supr₂_le _\n#align antitone.map_Sup_le Antitone.map_supₛ_le\n-/\n\n",
 "map_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print OrderIso.map_supₛ /-\ntheorem OrderIso.map_supₛ [CompleteLattice β] (f : «expr ≃o » α β) (s : Set α) :\n    f (supₛ s) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f a) :=\n  by simp only [supₛ_eq_supᵢ, OrderIso.map_supᵢ]\n#align order_iso.map_Sup OrderIso.map_supₛ\n-/\n\n",
 "map_supᵢ₂_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Antitone.map_supᵢ₂_le /-\ntheorem Antitone.map_supᵢ₂_le [CompleteLattice β] {f : α → β} (hf : Antitone f) (s : ∀ i, κ i → α) :\n    f («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s i j)) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (s i j)) :=\n  hf.dual.le_map_infi₂ _\n#align antitone.map_supr₂_le Antitone.map_supᵢ₂_le\n-/\n\n",
 "map_supᵢ_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Antitone.map_supᵢ_le /-\ntheorem Antitone.map_supᵢ_le [CompleteLattice β] {f : α → β} (hf : Antitone f) :\n    f (supᵢ s) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (s i)) :=\n  le_infᵢ fun i => hf <| le_supᵢ _ _\n#align antitone.map_supr_le Antitone.map_supᵢ_le\n-/\n\n",
 "map_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print OrderIso.map_supᵢ /-\ntheorem OrderIso.map_supᵢ [CompleteLattice β] (f : «expr ≃o » α β) (x : ι → α) :\n    f («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (x i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (x i)) :=\n  eq_of_forall_ge_iff <| f.surjective.forall.2 fun x => by simp only [f.le_iff_le, supᵢ_le_iff]\n#align order_iso.map_supr OrderIso.map_supᵢ\n-/\n\n",
 "map_infₛ_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Monotone.map_infₛ_le /-\ntheorem Monotone.map_infₛ_le [CompleteLattice β] {s : Set α} {f : α → β} (hf : Monotone f) :\n    f (infₛ s) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f a) :=\n  hf.dual_left.map_Sup_le\n#align monotone.map_Inf_le Monotone.map_infₛ_le\n-/\n\n",
 "map_infₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print OrderIso.map_infₛ /-\ntheorem OrderIso.map_infₛ [CompleteLattice β] (f : «expr ≃o » α β) (s : Set α) :\n    f (infₛ s) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f a) :=\n  OrderIso.map_supₛ f.dual _\n#align order_iso.map_Inf OrderIso.map_infₛ\n-/\n\n",
 "map_infᵢ₂_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Monotone.map_infᵢ₂_le /-\ntheorem Monotone.map_infᵢ₂_le [CompleteLattice β] {f : α → β} (hf : Monotone f) (s : ∀ i, κ i → α) :\n    f («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (s i j)) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (s i j)) :=\n  hf.dual.le_map_supr₂ _\n#align monotone.map_infi₂_le Monotone.map_infᵢ₂_le\n-/\n\n",
 "map_infᵢ_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Monotone.map_infᵢ_le /-\ntheorem Monotone.map_infᵢ_le [CompleteLattice β] {f : α → β} (hf : Monotone f) :\n    f (infᵢ s) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (s i)) :=\n  hf.dual_left.map_supr_le\n#align monotone.map_infi_le Monotone.map_infᵢ_le\n-/\n\n",
 "map_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print OrderIso.map_infᵢ /-\ntheorem OrderIso.map_infᵢ [CompleteLattice β] (f : «expr ≃o » α β) (x : ι → α) :\n    f («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (x i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (x i)) :=\n  OrderIso.map_supᵢ f.dual _\n#align order_iso.map_infi OrderIso.map_infᵢ\n-/\n\n",
 "lt_supₛ_iff":
 "#print lt_supₛ_iff /-\ntheorem lt_supₛ_iff : b < supₛ s ↔ ∃ a ∈ s, b < a :=\n  lt_isLUB_iff <| isLUB_supₛ s\n#align lt_Sup_iff lt_supₛ_iff\n-/\n\n",
 "lt_supᵢ_iff":
 "#print lt_supᵢ_iff /-\ntheorem lt_supᵢ_iff {f : ι → α} : a < supᵢ f ↔ ∃ i, a < f i :=\n  lt_supₛ_iff.trans exists_range_iff\n#align lt_supr_iff lt_supᵢ_iff\n-/\n\n",
 "lt_infᵢ_iff":
 "#print lt_infᵢ_iff /-\ntheorem lt_infᵢ_iff : a < infᵢ f ↔ ∃ b, a < b ∧ ∀ i, b ≤ f i :=\n  ⟨fun h => ⟨infᵢ f, h, infᵢ_le f⟩, fun ⟨b, h, hb⟩ => h.trans_le <| le_infᵢ hb⟩\n#align lt_infi_iff lt_infᵢ_iff\n-/\n\n",
 "le_supₛ_of_le":
 "#print le_supₛ_of_le /-\ntheorem le_supₛ_of_le (hb : b ∈ s) (h : a ≤ b) : a ≤ supₛ s :=\n  le_trans h (le_supₛ hb)\n#align le_Sup_of_le le_supₛ_of_le\n-/\n\n",
 "le_supₛ_iff":
 "#print le_supₛ_iff /-\ntheorem le_supₛ_iff : a ≤ supₛ s ↔ ∀ b ∈ upperBounds s, a ≤ b :=\n  ⟨fun h b hb => le_trans h (supₛ_le hb), fun hb => hb _ fun x => le_supₛ⟩\n#align le_Sup_iff le_supₛ_iff\n-/\n\n",
 "le_supₛ":
 "#print le_supₛ /-\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl\n-/\n@[ematch]\ntheorem le_supₛ : a ∈ s → a ≤ supₛ s :=\n  complete_semilattice_Sup.le_Sup s a\n#align le_Sup le_supₛ\n-/\n\n",
 "le_supᵢ₂_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print le_supᵢ₂_of_le /-\ntheorem le_supᵢ₂_of_le {f : ∀ i, κ i → α} (i : ι) (j : κ i) (h : a ≤ f i j) :\n    a ≤ «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) :=\n  h.trans <| le_supᵢ₂ i j\n#align le_supr₂_of_le le_supᵢ₂_of_le\n-/\n\n",
 "le_supᵢ₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print le_supᵢ₂ /-\ntheorem le_supᵢ₂ {f : ∀ i, κ i → α} (i : ι) (j : κ i) :\n    f i j ≤ «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i j) :=\n  le_supᵢ_of_le i <| le_supᵢ (f i) j\n#align le_supr₂ le_supᵢ₂\n-/\n\n",
 "le_supᵢ_of_le":
 "#print le_supᵢ_of_le /-\ntheorem le_supᵢ_of_le (i : ι) (h : a ≤ f i) : a ≤ supᵢ f :=\n  h.trans <| le_supᵢ _ i\n#align le_supr_of_le le_supᵢ_of_le\n-/\n\n",
 "le_supᵢ_inf_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print le_supᵢ_inf_supᵢ /-\ntheorem le_supᵢ_inf_supᵢ (f g : ι → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr ⊓ » (f i) (g i)) ≤\n      «expr ⊓ » («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i))\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (g i)) :=\n  le_inf (supᵢ_mono fun i => inf_le_left) (supᵢ_mono fun i => inf_le_right)\n#align le_supr_inf_supr le_supᵢ_inf_supᵢ\n-/\n\n",
 "le_supᵢ_iff":
 "#print le_supᵢ_iff /-\ntheorem le_supᵢ_iff {s : ι → α} : a ≤ supᵢ s ↔ ∀ b, (∀ i, s i ≤ b) → a ≤ b := by simp [supᵢ, le_supₛ_iff, upperBounds]\n#align le_supr_iff le_supᵢ_iff\n-/\n\n",
 "le_supᵢ'":
 "#print le_supᵢ' /-\n@[ematch]\ntheorem le_supᵢ' (f : ι → α) (i : ι) : f i ≤ supᵢ f :=\n  le_supₛ ⟨i, rfl⟩\n#align le_supr' le_supᵢ'\n-/\n\n",
 "le_supᵢ":
 "#print le_supᵢ /-\n-- TODO: this declaration gives error when starting smt state\n--@[ematch]\ntheorem le_supᵢ (f : ι → α) (i : ι) : f i ≤ supᵢ f :=\n  le_supₛ ⟨i, rfl⟩\n#align le_supr le_supᵢ\n-/\n\n",
 "le_map_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print Monotone.le_map_supₛ /-\ntheorem Monotone.le_map_supₛ [CompleteLattice β] {s : Set α} {f : α → β} (hf : Monotone f) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f a) ≤\n      f (supₛ s) :=\n  by rw [supₛ_eq_supᵢ] <;> exact hf.le_map_supr₂ _\n#align monotone.le_map_Sup Monotone.le_map_supₛ\n-/\n\n",
 "le_map_supᵢ₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print Monotone.le_map_supᵢ₂ /-\ntheorem Monotone.le_map_supᵢ₂ [CompleteLattice β] {f : α → β} (hf : Monotone f) (s : ∀ i, κ i → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (s i j)) ≤\n      f («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s i j)) :=\n  supᵢ₂_le fun i j => hf <| le_supᵢ₂ _ _\n#align monotone.le_map_supr₂ Monotone.le_map_supᵢ₂\n-/\n\n",
 "le_map_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print Monotone.le_map_supᵢ /-\ntheorem Monotone.le_map_supᵢ [CompleteLattice β] {f : α → β} (hf : Monotone f) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (s i)) ≤\n      f (supᵢ s) :=\n  supᵢ_le fun i => hf <| le_supᵢ _ _\n#align monotone.le_map_supr Monotone.le_map_supᵢ\n-/\n\n",
 "le_map_infₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print Antitone.le_map_infₛ /-\ntheorem Antitone.le_map_infₛ [CompleteLattice β] {s : Set α} {f : α → β} (hf : Antitone f) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f a) ≤\n      f (infₛ s) :=\n  hf.dual_left.le_map_Sup\n#align antitone.le_map_Inf Antitone.le_map_infₛ\n-/\n\n",
 "le_map_infᵢ₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Antitone.le_map_infᵢ₂ /-\ntheorem Antitone.le_map_infᵢ₂ [CompleteLattice β] {f : α → β} (hf : Antitone f) (s : ∀ i, κ i → α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (s i j)) ≤\n      f («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (s i j)) :=\n  hf.dual_left.le_map_supr₂ _\n#align antitone.le_map_infi₂ Antitone.le_map_infᵢ₂\n-/\n\n",
 "le_map_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print Antitone.le_map_infᵢ /-\ntheorem Antitone.le_map_infᵢ [CompleteLattice β] {f : α → β} (hf : Antitone f) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (s i)) ≤\n      f (infᵢ s) :=\n  hf.dual_left.le_map_supr\n#align antitone.le_map_infi Antitone.le_map_infᵢ\n-/\n\n",
 "le_infₛ_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_infₛ_inter /-\ntheorem le_infₛ_inter {s t : Set α} : «expr ⊔ » (infₛ s) (infₛ t) ≤ infₛ (s ∩ t) :=\n  @supₛ_inter_le («expr ᵒᵈ» α) _ _ _\n#align le_Inf_inter le_infₛ_inter\n-/\n\n",
 "le_infₛ_iff":
 "#print le_infₛ_iff /-\n@[simp]\ntheorem le_infₛ_iff : a ≤ infₛ s ↔ ∀ b ∈ s, a ≤ b :=\n  le_isGLB_iff (isGLB_infₛ s)\n#align le_Inf_iff le_infₛ_iff\n-/\n\n",
 "le_infₛ":
 "#print le_infₛ /-\ntheorem le_infₛ : (∀ b ∈ s, a ≤ b) → a ≤ infₛ s :=\n  complete_semilattice_Inf.le_Inf s a\n#align le_Inf le_infₛ\n-/\n\n",
 "le_infᵢ₂_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print le_infᵢ₂_iff /-\n@[simp]\ntheorem le_infᵢ₂_iff {f : ∀ i, κ i → α} :\n    a ≤ «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) ↔\n      ∀ i j, a ≤ f i j :=\n  by simp_rw [le_infᵢ_iff]\n#align le_infi₂_iff le_infᵢ₂_iff\n-/\n\n",
 "le_infᵢ₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print le_infᵢ₂ /-\ntheorem le_infᵢ₂ {f : ∀ i, κ i → α} (h : ∀ i j, a ≤ f i j) :\n    a ≤ «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) :=\n  le_infᵢ fun i => le_infᵢ <| h i\n#align le_infi₂ le_infᵢ₂\n-/\n\n",
 "le_infᵢ_iff":
 "#print le_infᵢ_iff /-\n@[simp]\ntheorem le_infᵢ_iff : a ≤ infᵢ f ↔ ∀ i, a ≤ f i :=\n  (le_isGLB_iff isGLB_infᵢ).trans forall_range_iff\n#align le_infi_iff le_infᵢ_iff\n-/\n\n",
 "le_infᵢ_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print le_infᵢ_const /-\ntheorem le_infᵢ_const :\n    a ≤ «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" a :=\n  le_infᵢ fun _ => le_rfl\n#align le_infi_const le_infᵢ_const\n-/\n\n",
 "le_infᵢ_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print le_infᵢ_comp /-\ntheorem le_infᵢ_comp {ι' : Sort _} (f : ι' → α) (g : ι → ι') :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f y) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (g x)) :=\n  infᵢ_mono' fun x => ⟨_, le_rfl⟩\n#align le_infi_comp le_infᵢ_comp\n-/\n\n",
 "le_infᵢ":
 "#print le_infᵢ /-\ntheorem le_infᵢ (h : ∀ i, a ≤ f i) : a ≤ infᵢ f :=\n  le_infₛ fun b ⟨i, Eq⟩ => Eq ▸ h i\n#align le_infi le_infᵢ\n-/\n\n",
 "isLUB_supₛ":
 "#print isLUB_supₛ /-\ntheorem isLUB_supₛ (s : Set α) : IsLUB s (supₛ s) :=\n  ⟨fun x => le_supₛ, fun x => supₛ_le⟩\n#align is_lub_Sup isLUB_supₛ\n-/\n\n",
 "isLUB_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print isLUB_supᵢ /-\n/- TODO: this version would be more powerful, but, alas, the pattern matcher\n   doesn't accept it.\n@[ematch] lemma le_supr' (f : ι → α) (i : ι) : (: f i :) ≤ (: supr f :) :=\nle_Sup ⟨i, rfl⟩\n-/\ntheorem isLUB_supᵢ :\n    IsLUB (range f)\n      («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f j)) :=\n  isLUB_supₛ _\n#align is_lub_supr isLUB_supᵢ\n-/\n\n",
 "isLUB_bsupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print isLUB_bsupᵢ /-\ntheorem isLUB_bsupᵢ {s : Set β} {f : β → α} :\n    IsLUB («expr '' » f s)\n      («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x)) :=\n  by simpa only [range_comp, Subtype.range_coe, supᵢ_subtype'] using @isLUB_supᵢ α s _ (f ∘ coe)\n#align is_lub_bsupr isLUB_bsupᵢ\n-/\n\n",
 "isGLB_infₛ":
 "#print isGLB_infₛ /-\ntheorem isGLB_infₛ (s : Set α) : IsGLB s (infₛ s) :=\n  ⟨fun a => infₛ_le, fun a => le_infₛ⟩\n#align is_glb_Inf isGLB_infₛ\n-/\n\n",
 "isGLB_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print isGLB_infᵢ /-\ntheorem isGLB_infᵢ :\n    IsGLB (range f)\n      («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f j)) :=\n  isGLB_infₛ _\n#align is_glb_infi isGLB_infᵢ\n-/\n\n",
 "isGLB_binfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print isGLB_binfᵢ /-\ntheorem isGLB_binfᵢ {s : Set β} {f : β → α} :\n    IsGLB («expr '' » f s)\n      («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x)) :=\n  by simpa only [range_comp, Subtype.range_coe, infᵢ_subtype'] using @isGLB_infᵢ α s _ (f ∘ coe)\n#align is_glb_binfi isGLB_binfᵢ\n-/\n\n",
 "infₛ_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print infₛ_univ /-\n@[simp]\ntheorem infₛ_univ : infₛ univ = («expr⊥» : α) :=\n  (@isGLB_univ α _ _).Inf_eq\n#align Inf_univ infₛ_univ\n-/\n\n",
 "infₛ_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print infₛ_union /-\ntheorem infₛ_union {s t : Set α} : infₛ (s ∪ t) = «expr ⊓ » (infₛ s) (infₛ t) :=\n  ((isGLB_infₛ s).union (isGLB_infₛ t)).Inf_eq\n#align Inf_union infₛ_union\n-/\n\n",
 "infₛ_sup_le_infᵢ_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print infₛ_sup_le_infᵢ_sup /-\n/-- This is a weaker version of `Inf_sup_eq` -/\ntheorem infₛ_sup_le_infᵢ_sup :\n    «expr ⊔ » (infₛ s) a ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" («expr ⊔ » b a) :=\n  le_infᵢ₂ fun i h => sup_le_sup_right (infₛ_le h) _\n#align Inf_sup_le_infi_sup infₛ_sup_le_infᵢ_sup\n-/\n\n",
 "infₛ_singleton":
 "#print infₛ_singleton /-\n-- We will generalize this to conditionally complete lattices in `cInf_singleton`.\ntheorem infₛ_singleton {a : α} : infₛ {a} = a :=\n  isGLB_singleton.Inf_eq\n#align Inf_singleton infₛ_singleton\n-/\n\n",
 "infₛ_range":
 "#print infₛ_range /-\ntheorem infₛ_range : infₛ (range f) = infᵢ f :=\n  rfl\n#align Inf_range infₛ_range\n-/\n\n",
 "infₛ_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.prod -/\n#print infₛ_prod /-\ntheorem infₛ_prod [InfSet α] [InfSet β] {s : Set α} {t : Set β} (hs : s.nonempty) (ht : t.nonempty) :\n    infₛ (set.prod s t) = (infₛ s, infₛ t) :=\n  congr_arg₂ prod.mk (congr_arg infₛ <| fst_image_prod _ ht) (congr_arg infₛ <| snd_image_prod hs _)\n#align Inf_prod infₛ_prod\n-/\n\n",
 "infₛ_pair":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print infₛ_pair /-\ntheorem infₛ_pair {a b : α} : infₛ {a, b} = «expr ⊓ » a b :=\n  (@isGLB_pair α _ a b).Inf_eq\n#align Inf_pair infₛ_pair\n-/\n\n",
 "infₛ_lt_iff":
 "#print infₛ_lt_iff /-\ntheorem infₛ_lt_iff : infₛ s < b ↔ ∃ a ∈ s, a < b :=\n  isGLB_lt_iff <| isGLB_infₛ s\n#align Inf_lt_iff infₛ_lt_iff\n-/\n\n",
 "infₛ_le_supₛ":
 "#print infₛ_le_supₛ /-\ntheorem infₛ_le_supₛ (hs : s.nonempty) : infₛ s ≤ supₛ s :=\n  isGLB_le_isLUB (isGLB_infₛ s) (isLUB_supₛ s) hs\n#align Inf_le_Sup infₛ_le_supₛ\n-/\n\n",
 "infₛ_le_of_le":
 "#print infₛ_le_of_le /-\ntheorem infₛ_le_of_le (hb : b ∈ s) (h : b ≤ a) : infₛ s ≤ a :=\n  le_trans (infₛ_le hb) h\n#align Inf_le_of_le infₛ_le_of_le\n-/\n\n",
 "infₛ_le_infₛ_of_subset_insert_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infₛ_le_infₛ_of_subset_insert_top /-\ntheorem infₛ_le_infₛ_of_subset_insert_top (h : s ⊆ insert («expr⊤») t) : infₛ t ≤ infₛ s :=\n  le_trans (le_of_eq (trans top_inf_eq.symm infₛ_insert.symm)) (infₛ_le_infₛ h)\n#align Inf_le_Inf_of_subset_insert_top infₛ_le_infₛ_of_subset_insert_top\n-/\n\n",
 "infₛ_le_infₛ_of_forall_exists_le":
 "#print infₛ_le_infₛ_of_forall_exists_le /-\ntheorem infₛ_le_infₛ_of_forall_exists_le (h : ∀ x ∈ s, ∃ y ∈ t, y ≤ x) : infₛ t ≤ infₛ s :=\n  le_of_forall_le\n    (by\n      simp only [le_infₛ_iff]\n      introv h₀ h₁\n      rcases h _ h₁ with ⟨y, hy, hy'⟩\n      solve_by_elim [le_trans _ hy'] )\n#align Inf_le_Inf_of_forall_exists_le infₛ_le_infₛ_of_forall_exists_le\n-/\n\n",
 "infₛ_le_infₛ":
 "#print infₛ_le_infₛ /-\ntheorem infₛ_le_infₛ (h : s ⊆ t) : infₛ t ≤ infₛ s :=\n  (isGLB_infₛ s).mono (isGLB_infₛ t) h\n#align Inf_le_Inf infₛ_le_infₛ\n-/\n\n",
 "infₛ_le_iff":
 "#print infₛ_le_iff /-\ntheorem infₛ_le_iff : infₛ s ≤ a ↔ ∀ b ∈ lowerBounds s, b ≤ a :=\n  ⟨fun h b hb => le_trans (le_infₛ hb) h, fun hb => hb _ fun x => infₛ_le⟩\n#align Inf_le_iff infₛ_le_iff\n-/\n\n",
 "infₛ_le":
 "#print infₛ_le /-\n@[ematch]\ntheorem infₛ_le : a ∈ s → infₛ s ≤ a :=\n  complete_semilattice_Inf.Inf_le s a\n#align Inf_le infₛ_le\n-/\n\n",
 "infₛ_insert":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print infₛ_insert /-\n@[simp]\ntheorem infₛ_insert {a : α} {s : Set α} : infₛ (insert a s) = «expr ⊓ » a (infₛ s) :=\n  ((isGLB_infₛ s).insert a).Inf_eq\n#align Inf_insert infₛ_insert\n-/\n\n",
 "infₛ_image2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infₛ_image2 /-\ntheorem infₛ_image2 {f : β → γ → α} {s : Set β} {t : Set γ} :\n    infₛ (image2 f s t) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f a b) :=\n  by rw [← image_prod, infₛ_image, binfᵢ_prod]\n#align Inf_image2 infₛ_image2\n-/\n\n",
 "infₛ_image'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infₛ_image' /-\ntheorem infₛ_image' {s : Set β} {f : β → α} :\n    infₛ («expr '' » f s) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f a) :=\n  @supₛ_image' («expr ᵒᵈ» α) _ _ _ _\n#align Inf_image' infₛ_image'\n-/\n\n",
 "infₛ_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infₛ_image /-\ntheorem infₛ_image {s : Set β} {f : β → α} :\n    infₛ («expr '' » f s) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f a) :=\n  @supₛ_image («expr ᵒᵈ» α) _ _ _ _\n#align Inf_image infₛ_image\n-/\n\n",
 "infₛ_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infₛ_eq_top /-\n@[simp]\ntheorem infₛ_eq_top : infₛ s = «expr⊤» ↔ ∀ a ∈ s, a = «expr⊤» :=\n  @supₛ_eq_bot («expr ᵒᵈ» α) _ _\n#align Inf_eq_top infₛ_eq_top\n-/\n\n",
 "infₛ_eq_of_forall_ge_of_forall_gt_exists_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print infₛ_eq_of_forall_ge_of_forall_gt_exists_lt /-\n/-- Introduction rule to prove that `b` is the infimum of `s`: it suffices to check that `b`\nis smaller than all elements of `s`, and that this is not the case of any `w > b`.\nSee `cInf_eq_of_forall_ge_of_forall_gt_exists_lt` for a version in conditionally complete\nlattices. -/\ntheorem infₛ_eq_of_forall_ge_of_forall_gt_exists_lt : (∀ a ∈ s, b ≤ a) → (∀ w, b < w → ∃ a ∈ s, a < w) → infₛ s = b :=\n  @supₛ_eq_of_forall_le_of_forall_lt_exists_gt («expr ᵒᵈ» α) _ _ _\n#align Inf_eq_of_forall_ge_of_forall_gt_exists_lt infₛ_eq_of_forall_ge_of_forall_gt_exists_lt\n-/\n\n",
 "infₛ_eq_infᵢ'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infₛ_eq_infᵢ' /-\ntheorem infₛ_eq_infᵢ' (s : Set α) :\n    infₛ s = «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" a :=\n  @supₛ_eq_supᵢ' («expr ᵒᵈ» α) _ _\n#align Inf_eq_infi' infₛ_eq_infᵢ'\n-/\n\n",
 "infₛ_eq_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infₛ_eq_infᵢ /-\ntheorem infₛ_eq_infᵢ {s : Set α} :\n    infₛ s = «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" a :=\n  @supₛ_eq_supᵢ («expr ᵒᵈ» α) _ _\n#align Inf_eq_infi infₛ_eq_infᵢ\n-/\n\n",
 "infₛ_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print infₛ_eq_bot /-\ntheorem infₛ_eq_bot : infₛ s = «expr⊥» ↔ ∀ b > «expr⊥», ∃ a ∈ s, a < b :=\n  @supₛ_eq_top («expr ᵒᵈ» α) _ _\n#align Inf_eq_bot infₛ_eq_bot\n-/\n\n",
 "infₛ_eq":
 "#print IsGLB.infₛ_eq /-\ntheorem IsGLB.infₛ_eq (h : IsGLB s a) : infₛ s = a :=\n  (isGLB_infₛ s).unique h\n#align is_glb.Inf_eq IsGLB.infₛ_eq\n-/\n\n",
 "infₛ_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infₛ_empty /-\n@[simp]\ntheorem infₛ_empty : infₛ ∅ = («expr⊤» : α) :=\n  (@isGLB_empty α _ _).Inf_eq\n#align Inf_empty infₛ_empty\n-/\n\n",
 "infₛ_diff_singleton_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infₛ_diff_singleton_top /-\n@[simp]\ntheorem infₛ_diff_singleton_top (s : Set α) : infₛ (s \\ {«expr⊤»}) = infₛ s :=\n  @supₛ_diff_singleton_bot («expr ᵒᵈ» α) _ s\n#align Inf_diff_singleton_top infₛ_diff_singleton_top\n-/\n\n",
 "infₛ_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infₛ_apply /-\ntheorem infₛ_apply {α : Type _} {β : α → Type _} [∀ i, InfSet (β i)] {s : Set (∀ a, β a)} {a : α} :\n    infₛ s a =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        ((f : ∀ a, β a) a) :=\n  rfl\n#align Inf_apply infₛ_apply\n-/\n\n",
 "infₛ_Prop_eq":
 "#print infₛ_Prop_eq /-\n@[simp]\ntheorem infₛ_Prop_eq {s : Set Prop} : infₛ s = ∀ p ∈ s, p :=\n  rfl\n#align Inf_Prop_eq infₛ_Prop_eq\n-/\n\n",
 "infᵢ₂_mono'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ₂_mono' /-\ntheorem infᵢ₂_mono' {f : ∀ i, κ i → α} {g : ∀ i', κ' i' → α} (h : ∀ i j, ∃ i' j', f i' j' ≤ g i j) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g i j) :=\n  le_infᵢ₂ fun i j =>\n    let ⟨i', j', h⟩ := h i j\n    infᵢ₂_le_of_le i' j' h\n#align infi₂_mono' infᵢ₂_mono'\n-/\n\n",
 "infᵢ₂_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ₂_mono /-\ntheorem infᵢ₂_mono {f g : ∀ i, κ i → α} (h : ∀ i j, f i j ≤ g i j) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g i j) :=\n  infᵢ_mono fun i => infᵢ_mono <| h i\n#align infi₂_mono infᵢ₂_mono\n-/\n\n",
 "infᵢ₂_le_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ₂_le_of_le /-\ntheorem infᵢ₂_le_of_le {f : ∀ i, κ i → α} (i : ι) (j : κ i) (h : f i j ≤ a) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) ≤ a :=\n  (infᵢ₂_le i j).trans h\n#align infi₂_le_of_le infᵢ₂_le_of_le\n-/\n\n",
 "infᵢ₂_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ₂_le /-\ntheorem infᵢ₂_le {f : ∀ i, κ i → α} (i : ι) (j : κ i) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) ≤ f i j :=\n  infᵢ_le_of_le i <| infᵢ_le (f i) j\n#align infi₂_le infᵢ₂_le\n-/\n\n",
 "infᵢ₂_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ₂_eq_top /-\n@[simp]\ntheorem infᵢ₂_eq_top {f : ∀ i, κ i → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) = «expr⊤» ↔\n      ∀ i j, f i j = «expr⊤» :=\n  by simp_rw [infᵢ_eq_top]\n#align infi₂_eq_top infᵢ₂_eq_top\n-/\n\n",
 "infᵢ₂_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ₂_comm /-\ntheorem infᵢ₂_comm {ι₁ ι₂ : Sort _} {κ₁ : ι₁ → Sort _} {κ₂ : ι₂ → Sort _} (f : ∀ i₁, κ₁ i₁ → ∀ i₂, κ₂ i₂ → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i₁ j₁ i₂ j₂) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i₁ j₁ i₂ j₂) :=\n  by simp only [@infᵢ_comm _ (κ₁ _), @infᵢ_comm _ ι₁]\n#align infi₂_comm infᵢ₂_comm\n-/\n\n",
 "infᵢ_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_univ /-\ntheorem infᵢ_univ {f : β → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) :=\n  by simp\n#align infi_univ infᵢ_univ\n-/\n\n",
 "infᵢ_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_union /-\ntheorem infᵢ_union {f : β → α} {s t : Set β} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr ⊓ » («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x))\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x)) :=\n  @supᵢ_union («expr ᵒᵈ» α) _ _ _ _ _\n#align infi_union infᵢ_union\n-/\n\n",
 "infᵢ_true":
 "#print infᵢ_true /-\ntheorem infᵢ_true {s : True → α} : infᵢ s = s trivial :=\n  infᵢ_pos trivial\n#align infi_true infᵢ_true\n-/\n\n",
 "infᵢ_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ_top /-\n@[simp]\ntheorem infᵢ_top :\n    («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" («expr⊤») : α) =\n      «expr⊤» :=\n  top_unique le_infᵢ_const\n#align infi_top infᵢ_top\n-/\n\n",
 "infᵢ_supᵢ_ge_nat_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print infᵢ_supᵢ_ge_nat_add /-\n@[simp]\ntheorem infᵢ_supᵢ_ge_nat_add :\n    ∀ (f : ℕ → α) (k : ℕ),\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n            (f (i + k))) =\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i)) :=\n  @supᵢ_infᵢ_ge_nat_add («expr ᵒᵈ» α) _\n#align infi_supr_ge_nat_add infᵢ_supᵢ_ge_nat_add\n-/\n\n",
 "infᵢ_sup_infᵢ_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print infᵢ_sup_infᵢ_le /-\ntheorem infᵢ_sup_infᵢ_le (f g : ι → α) :\n    «expr ⊔ » («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i))\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g i)) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        («expr ⊔ » (f i) (g i)) :=\n  @le_supᵢ_inf_supᵢ («expr ᵒᵈ» α) ι _ f g\n#align infi_sup_infi_le infᵢ_sup_infᵢ_le\n-/\n\n",
 "infᵢ_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_sum /-\ntheorem infᵢ_sum {f : Sum β γ → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr ⊓ »\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          (f (Sum.inl i)))\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          (f (Sum.inr j))) :=\n  @supᵢ_sum («expr ᵒᵈ» α) _ _ _ _\n#align infi_sum infᵢ_sum\n-/\n\n",
 "infᵢ_subtype''":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_subtype'' /-\ntheorem infᵢ_subtype'' {ι} (s : Set ι) (f : ι → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f t) :=\n  infᵢ_subtype\n#align infi_subtype'' infᵢ_subtype''\n-/\n\n",
 "infᵢ_subtype'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_subtype' /-\ntheorem infᵢ_subtype' {p : ι → Prop} {f : ∀ i, p i → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i h) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (f x x.property) :=\n  (@infᵢ_subtype _ _ _ p fun x => f x.val x.property).symm\n#align infi_subtype' infᵢ_subtype'\n-/\n\n",
 "infᵢ_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_subtype /-\ntheorem infᵢ_subtype :\n    ∀ {p : ι → Prop} {f : Subtype p → α},\n      infᵢ f =\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f ⟨i, h⟩) :=\n  @supᵢ_subtype («expr ᵒᵈ» α) _ _\n#align infi_subtype infᵢ_subtype\n-/\n\n",
 "infᵢ_split_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_split_single /-\ntheorem infᵢ_split_single (f : β → α) (i₀ : β) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) =\n      «expr ⊓ » (f i₀)\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) :=\n  @supᵢ_split_single («expr ᵒᵈ» α) _ _ _ _\n#align infi_split_single infᵢ_split_single\n-/\n\n",
 "infᵢ_split":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_split /-\ntheorem infᵢ_split :\n    ∀ (f : β → α) (p : β → Prop),\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) =\n        «expr ⊓ »\n          («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i))\n          («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) :=\n  @supᵢ_split («expr ᵒᵈ» α) _ _\n#align infi_split infᵢ_split\n-/\n\n",
 "infᵢ_singleton":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_singleton /-\ntheorem infᵢ_singleton {f : β → α} {b : β} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) = f b := by\n  simp\n#align infi_singleton infᵢ_singleton\n-/\n\n",
 "infᵢ_sigma":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_sigma /-\ntheorem infᵢ_sigma {p : β → Type _} {f : Sigma p → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f ⟨i, j⟩) :=\n  @supᵢ_sigma («expr ᵒᵈ» α) _ _ _ _\n#align infi_sigma infᵢ_sigma\n-/\n\n",
 "infᵢ_range'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_range' /-\ntheorem infᵢ_range' (g : β → α) (f : ι → β) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g b) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g (f i)) :=\n  @supᵢ_range' («expr ᵒᵈ» α) _ _ _ _ _\n#align infi_range' infᵢ_range'\n-/\n\n",
 "infᵢ_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_range /-\ntheorem infᵢ_range :\n    ∀ {g : β → α} {f : ι → β},\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g b) =\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g (f i)) :=\n  @supᵢ_range («expr ᵒᵈ» α) _ _ _\n#align infi_range infᵢ_range\n-/\n\n",
 "infᵢ_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_prod /-\ntheorem infᵢ_prod {f : β × γ → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (i, j)) :=\n  @supᵢ_prod («expr ᵒᵈ» α) _ _ _ _\n#align infi_prod infᵢ_prod\n-/\n\n",
 "infᵢ_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_pos /-\n@[simp]\ntheorem infᵢ_pos {p : Prop} {f : p → α} (hp : p) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f h) = f hp :=\n  le_antisymm (infᵢ_le _ _) (le_infᵢ fun h => le_rfl)\n#align infi_pos infᵢ_pos\n-/\n\n",
 "infᵢ_plift_up":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_plift_up /-\ntheorem infᵢ_plift_up (f : PLift ι → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (PLift.up i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n  PLift.up_surjective.infi_congr _ fun _ => rfl\n#align infi_plift_up infᵢ_plift_up\n-/\n\n",
 "infᵢ_plift_down":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_plift_down /-\ntheorem infᵢ_plift_down (f : ι → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (PLift.down i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n  PLift.down_surjective.infi_congr _ fun _ => rfl\n#align infi_plift_down infᵢ_plift_down\n-/\n\n",
 "infᵢ_pair":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print infᵢ_pair /-\ntheorem infᵢ_pair {f : β → α} {a b : β} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr ⊓ » (f a) (f b) :=\n  by rw [infᵢ_insert, infᵢ_singleton]\n#align infi_pair infᵢ_pair\n-/\n\n",
 "infᵢ_or":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_or /-\ntheorem infᵢ_or {p q : Prop} {s : p ∨ q → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (s x) =\n      «expr ⊓ »\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (s (or.inl i)))\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          (s (or.inr j))) :=\n  @supᵢ_or («expr ᵒᵈ» α) _ _ _ _\n#align infi_or infᵢ_or\n-/\n\n",
 "infᵢ_option_elim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_option_elim /-\n/-- A version of `infi_option` useful for rewriting right-to-left. -/\ntheorem infᵢ_option_elim (a : α) (f : β → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (o.elim a f) =\n      «expr ⊓ » a\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f b)) :=\n  @supᵢ_option_elim («expr ᵒᵈ» α) _ _ _ _\n#align infi_option_elim infᵢ_option_elim\n-/\n\n",
 "infᵢ_option":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_option /-\ntheorem infᵢ_option (f : Option β → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f o) =\n      «expr ⊓ » (f none)\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          (f (option.some b))) :=\n  @supᵢ_option («expr ᵒᵈ» α) _ _ _\n#align infi_option infᵢ_option\n-/\n\n",
 "infᵢ_of_empty'":
 "#print infᵢ_of_empty' /-\ntheorem infᵢ_of_empty' {α ι} [InfSet α] [IsEmpty ι] (f : ι → α) : infᵢ f = infₛ (∅ : Set α) :=\n  congr_arg infₛ (range_eq_empty f)\n#align infi_of_empty' infᵢ_of_empty'\n-/\n\n",
 "infᵢ_of_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ_of_empty /-\ntheorem infᵢ_of_empty [IsEmpty ι] (f : ι → α) : infᵢ f = «expr⊤» :=\n  @supᵢ_of_empty («expr ᵒᵈ» α) _ _ _ f\n#align infi_of_empty infᵢ_of_empty\n-/\n\n",
 "infᵢ_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ_neg /-\n@[simp]\ntheorem infᵢ_neg {p : Prop} {f : p → α} (hp : ¬p) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f h) = «expr⊤» :=\n  le_antisymm le_top <| le_infᵢ fun h => (hp h).elim\n#align infi_neg infᵢ_neg\n-/\n\n",
 "infᵢ_ne_top_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_ne_top_subtype /-\n/-- When taking the infimum of `f : ι → α`, the elements of `ι` on which `f` gives `⊤` can be\ndropped, without changing the result. -/\ntheorem infᵢ_ne_top_subtype (f : ι → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n  @supᵢ_ne_bot_subtype («expr ᵒᵈ» α) ι _ f\n#align infi_ne_top_subtype infᵢ_ne_top_subtype\n-/\n\n",
 "infᵢ_nat_gt_zero_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_nat_gt_zero_eq /-\ntheorem infᵢ_nat_gt_zero_eq (f : ℕ → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (i + 1)) :=\n  by\n  rw [← infᵢ_range, Nat.range_succ]\n  simp only [mem_set_of]\n#align infi_nat_gt_zero_eq infᵢ_nat_gt_zero_eq\n-/\n\n",
 "infᵢ_nat_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Antitone.infᵢ_nat_add /-\ntheorem Antitone.infᵢ_nat_add {f : ℕ → α} (hf : Antitone f) (k : ℕ) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (n + k)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f n) :=\n  hf.dual_right.supr_nat_add k\n#align antitone.infi_nat_add Antitone.infᵢ_nat_add\n-/\n\n",
 "infᵢ_mono'":
 "#print infᵢ_mono' /-\ntheorem infᵢ_mono' {g : ι' → α} (h : ∀ i', ∃ i, f i ≤ g i') : infᵢ f ≤ infᵢ g :=\n  le_infᵢ fun i' => exists.elim (h i') infᵢ_le_of_le\n#align infi_mono' infᵢ_mono'\n-/\n\n",
 "infᵢ_mono":
 "#print infᵢ_mono /-\ntheorem infᵢ_mono (h : ∀ i, f i ≤ g i) : infᵢ f ≤ infᵢ g :=\n  le_infᵢ fun i => infᵢ_le_of_le i <| h i\n#align infi_mono infᵢ_mono\n-/\n\n",
 "infᵢ_lt_iff":
 "#print infᵢ_lt_iff /-\ntheorem infᵢ_lt_iff {f : ι → α} : infᵢ f < a ↔ ∃ i, f i < a :=\n  infₛ_lt_iff.trans exists_range_iff\n#align infi_lt_iff infᵢ_lt_iff\n-/\n\n",
 "infᵢ_le_of_le":
 "#print infᵢ_le_of_le /-\ntheorem infᵢ_le_of_le (i : ι) (h : f i ≤ a) : infᵢ f ≤ a :=\n  (infᵢ_le _ i).trans h\n#align infi_le_of_le infᵢ_le_of_le\n-/\n\n",
 "infᵢ_le_infᵢ₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_le_infᵢ₂ /-\ntheorem infᵢ_le_infᵢ₂ (κ : ι → Sort _) (f : ι → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n  le_infᵢ₂ fun i j => infᵢ_le f i\n#align infi_le_infi₂ infᵢ_le_infᵢ₂\n-/\n\n",
 "infᵢ_le_infᵢ_of_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_le_infᵢ_of_subset /-\ntheorem infᵢ_le_infᵢ_of_subset {f : β → α} {s t : Set β} :\n    s ⊆ t →\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) ≤\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) :=\n  binfᵢ_mono\n#align infi_le_infi_of_subset infᵢ_le_infᵢ_of_subset\n-/\n\n",
 "infᵢ_le_iff":
 "#print infᵢ_le_iff /-\ntheorem infᵢ_le_iff {s : ι → α} : infᵢ s ≤ a ↔ ∀ b, (∀ i, b ≤ s i) → b ≤ a := by simp [infᵢ, infₛ_le_iff, lowerBounds]\n#align infi_le_iff infᵢ_le_iff\n-/\n\n",
 "infᵢ_le'":
 "#print infᵢ_le' /-\n@[ematch]\ntheorem infᵢ_le' (f : ι → α) (i : ι) : infᵢ f ≤ f i :=\n  infₛ_le ⟨i, rfl⟩\n#align infi_le' infᵢ_le'\n-/\n\n",
 "infᵢ_le":
 "#print infᵢ_le /-\ntheorem infᵢ_le (f : ι → α) (i : ι) : infᵢ f ≤ f i :=\n  infₛ_le ⟨i, rfl⟩\n#align infi_le infᵢ_le\n-/\n\n",
 "infᵢ_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_ite /-\ntheorem infᵢ_ite (f g : ι → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (if p i then f i else g i) =\n      «expr ⊓ » («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i))\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g i)) :=\n  infᵢ_dite _ _ _\n#align infi_ite infᵢ_ite\n-/\n\n",
 "infᵢ_insert":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_insert /-\ntheorem infᵢ_insert {f : β → α} {s : Set β} {b : β} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr ⊓ » (f b)\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x)) :=\n  Eq.trans infᵢ_union <|\n    congr_arg\n      (fun x =>\n        «expr ⊓ » x\n          («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x)))\n      infᵢ_infᵢ_eq_left\n#align infi_insert infᵢ_insert\n-/\n\n",
 "infᵢ_infᵢ_eq_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_infᵢ_eq_right /-\n@[simp]\ntheorem infᵢ_infᵢ_eq_right {b : β} {f : ∀ x : β, b = x → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x h)) =\n      f b rfl :=\n  @supᵢ_supᵢ_eq_right («expr ᵒᵈ» α) _ _ _ _\n#align infi_infi_eq_right infᵢ_infᵢ_eq_right\n-/\n\n",
 "infᵢ_infᵢ_eq_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_infᵢ_eq_left /-\n@[simp]\ntheorem infᵢ_infᵢ_eq_left {b : β} {f : ∀ x : β, x = b → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x h)) =\n      f b rfl :=\n  @supᵢ_supᵢ_eq_left («expr ᵒᵈ» α) _ _ _ _\n#align infi_infi_eq_left infᵢ_infᵢ_eq_left\n-/\n\n",
 "infᵢ_inf_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_inf_eq /-\ntheorem infᵢ_inf_eq :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        («expr ⊓ » (f x) (g x)) =\n      «expr ⊓ » («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x))\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g x)) :=\n  @supᵢ_sup_eq («expr ᵒᵈ» α) _ _ _ _\n#align infi_inf_eq infᵢ_inf_eq\n-/\n\n",
 "infᵢ_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print infᵢ_inf /-\ntheorem infᵢ_inf [Nonempty ι] {f : ι → α} {a : α} :\n    «expr ⊓ » («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x))\n        a =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        («expr ⊓ » (f x) a) :=\n  by rw [infᵢ_inf_eq, infᵢ_const]\n#align infi_inf infᵢ_inf\n-/\n\n",
 "infᵢ_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_image /-\ntheorem infᵢ_image :\n    ∀ {γ} {f : β → γ} {g : γ → α} {t : Set β},\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g c) =\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g (f b)) :=\n  @supᵢ_image («expr ᵒᵈ» α) _ _\n#align infi_image infᵢ_image\n-/\n\n",
 "infᵢ_ge_eq_infᵢ_nat_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_ge_eq_infᵢ_nat_add /-\ntheorem infᵢ_ge_eq_infᵢ_nat_add (u : ℕ → α) (n : ℕ) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u i) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u (i + n)) :=\n  @supᵢ_ge_eq_supᵢ_nat_add («expr ᵒᵈ» α) _ _ _\n#align infi_ge_eq_infi_nat_add infᵢ_ge_eq_infᵢ_nat_add\n-/\n\n",
 "infᵢ_false":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ_false /-\n@[simp]\ntheorem infᵢ_false {s : False → α} : infᵢ s = «expr⊤» :=\n  le_antisymm le_top (le_infᵢ fun i => false.elim i)\n#align infi_false infᵢ_false\n-/\n\n",
 "infᵢ_extend_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ_extend_top /-\ntheorem infᵢ_extend_top {e : ι → β} (he : injective e) (f : ι → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (extend e f («expr⊤») j) =\n      infᵢ f :=\n  @supᵢ_extend_bot («expr ᵒᵈ» α) _ _ _ _ he _\n#align infi_extend_top infᵢ_extend_top\n-/\n\n",
 "infᵢ_exists":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_exists /-\n@[simp]\ntheorem infᵢ_exists {p : ι → Prop} {f : Exists p → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f ⟨i, h⟩) :=\n  @supᵢ_exists («expr ᵒᵈ» α) _ _ _ _\n#align infi_exists infᵢ_exists\n-/\n\n",
 "infᵢ_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ_eq_top /-\n@[simp]\ntheorem infᵢ_eq_top : infᵢ s = «expr⊤» ↔ ∀ i, s i = «expr⊤» :=\n  infₛ_eq_top.trans forall_range_iff\n#align infi_eq_top infᵢ_eq_top\n-/\n\n",
 "infᵢ_eq_of_forall_ge_of_forall_gt_exists_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_eq_of_forall_ge_of_forall_gt_exists_lt /-\n/-- Introduction rule to prove that `b` is the infimum of `f`: it suffices to check that `b`\nis smaller than `f i` for all `i`, and that this is not the case of any `w>b`.\nSee `cinfi_eq_of_forall_ge_of_forall_gt_exists_lt` for a version in conditionally complete\nlattices. -/\ntheorem infᵢ_eq_of_forall_ge_of_forall_gt_exists_lt :\n    (∀ i, b ≤ f i) →\n      (∀ w, b < w → ∃ i, f i < w) →\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) = b :=\n  @supᵢ_eq_of_forall_le_of_forall_lt_exists_gt («expr ᵒᵈ» α) _ _ _ _\n#align infi_eq_of_forall_ge_of_forall_gt_exists_lt infᵢ_eq_of_forall_ge_of_forall_gt_exists_lt\n-/\n\n",
 "infᵢ_eq_if":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ_eq_if /-\ntheorem infᵢ_eq_if {p : Prop} [Decidable p] (a : α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" a =\n      if p then a else «expr⊤» :=\n  infᵢ_eq_dif fun _ => a\n#align infi_eq_if infᵢ_eq_if\n-/\n\n",
 "infᵢ_eq_dif":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ_eq_dif /-\ntheorem infᵢ_eq_dif {p : Prop} [Decidable p] (a : p → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (a h) =\n      if h : p then a h else «expr⊤» :=\n  @supᵢ_eq_dif («expr ᵒᵈ» α) _ _ _ _\n#align infi_eq_dif infᵢ_eq_dif\n-/\n\n",
 "infᵢ_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print infᵢ_eq_bot /-\ntheorem infᵢ_eq_bot (f : ι → α) : infᵢ f = «expr⊥» ↔ ∀ b > «expr⊥», ∃ i, f i < b := by\n  simp only [← infₛ_range, infₛ_eq_bot, Set.exists_range_iff]\n#align infi_eq_bot infᵢ_eq_bot\n-/\n\n",
 "infᵢ_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print IsGLB.infᵢ_eq /-\ntheorem IsGLB.infᵢ_eq (h : IsGLB (range f) a) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f j) = a :=\n  h.Inf_eq\n#align is_glb.infi_eq IsGLB.infᵢ_eq\n-/\n\n",
 "infᵢ_emptyset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print infᵢ_emptyset /-\ntheorem infᵢ_emptyset {f : β → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) = «expr⊤» :=\n  by simp\n#align infi_emptyset infᵢ_emptyset\n-/\n\n",
 "infᵢ_dite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_dite /-\ntheorem infᵢ_dite (f : ∀ i, p i → α) (g : ∀ i, ¬p i → α) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (if h : p i then f i h else g i h) =\n      «expr ⊓ »\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i h))\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g i h)) :=\n  supᵢ_dite p (show ∀ i, p i → «expr ᵒᵈ» α from f) g\n#align infi_dite infᵢ_dite\n-/\n\n",
 "infᵢ_const_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_const_mono /-\ntheorem infᵢ_const_mono (h : ι' → ι) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" a ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" a :=\n  le_infᵢ <| infᵢ_le _ ∘ h\n#align infi_const_mono infᵢ_const_mono\n-/\n\n",
 "infᵢ_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_const /-\ntheorem infᵢ_const [Nonempty ι] :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" a = a :=\n  @supᵢ_const («expr ᵒᵈ» α) _ _ a _\n#align infi_const infᵢ_const\n-/\n\n",
 "infᵢ_congr_Prop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print infᵢ_congr_Prop /-\n@[congr]\ntheorem infᵢ_congr_Prop {p q : Prop} {f₁ : p → α} {f₂ : q → α} (pq : p ↔ q) (f : ∀ x, f₁ (pq.mpr x) = f₂ x) :\n    infᵢ f₁ = infᵢ f₂ :=\n  @supᵢ_congr_Prop («expr ᵒᵈ» α) _ p q f₁ f₂ pq f\n#align infi_congr_Prop infᵢ_congr_Prop\n-/\n\n",
 "infᵢ_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Equiv.infᵢ_congr /-\nprotected theorem Equiv.infᵢ_congr {g : ι' → α} (e : «expr ≃ » ι ι') (h : ∀ x, g (e x) = f x) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g y) :=\n  @Equiv.supᵢ_congr («expr ᵒᵈ» α) _ _ _ _ _ e h\n#align equiv.infi_congr Equiv.infᵢ_congr\n-/\n\n",
 "infᵢ_comp_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Monotone.infᵢ_comp_eq /-\ntheorem Monotone.infᵢ_comp_eq [preorder β] {f : β → α} (hf : Monotone f) {s : ι → β} (hs : ∀ x, ∃ i, s i ≤ x) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (s x)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f y) :=\n  le_antisymm (infᵢ_mono' fun x => (hs x).imp fun i hi => hf hi) (le_infᵢ_comp _ _)\n#align monotone.infi_comp_eq Monotone.infᵢ_comp_eq\n-/\n\n",
 "infᵢ_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print Equiv.infᵢ_comp /-\ntheorem Equiv.infᵢ_comp {g : ι' → α} (e : «expr ≃ » ι ι') :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g (e x)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g y) :=\n  @Equiv.supᵢ_comp («expr ᵒᵈ» α) _ _ _ _ e\n#align equiv.infi_comp Equiv.infᵢ_comp\n-/\n\n",
 "infᵢ_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_comm /-\ntheorem infᵢ_comm {f : ι → ι' → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i j) :=\n  @supᵢ_comm («expr ᵒᵈ» α) _ _ _ _\n#align infi_comm infᵢ_comm\n-/\n\n",
 "infᵢ_bool_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print infᵢ_bool_eq /-\ntheorem infᵢ_bool_eq {f : Bool → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f b) =\n      «expr ⊓ » (f true) (f false) :=\n  @supᵢ_bool_eq («expr ᵒᵈ» α) _ _\n#align infi_bool_eq infᵢ_bool_eq\n-/\n\n",
 "infᵢ_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_apply /-\n@[simp]\ntheorem infᵢ_apply {α : Type _} {β : α → Type _} {ι : Sort _} [∀ i, InfSet (β i)] {f : ι → ∀ a, β a} {a : α} :\n    («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i)) a =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i a) :=\n  @supᵢ_apply α (fun i => «expr ᵒᵈ» (β i)) _ _ _ _\n#align infi_apply infᵢ_apply\n-/\n\n",
 "infᵢ_and'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_and' /-\n/-- The symmetric case of `infi_and`, useful for rewriting into a infimum over a conjunction -/\ntheorem infᵢ_and' {p q : Prop} {s : p → q → α} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (s h₁ h₂) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (s h.1 h.2) :=\n  Eq.symm infᵢ_and\n#align infi_and' infᵢ_and'\n-/\n\n",
 "infᵢ_and":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_and /-\ntheorem infᵢ_and {p q : Prop} {s : p ∧ q → α} :\n    infᵢ s =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (s ⟨h₁, h₂⟩) :=\n  @supᵢ_and («expr ᵒᵈ» α) _ _ _ _\n#align infi_and infᵢ_and\n-/\n\n",
 "infᵢ_Prop_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_Prop_eq /-\n@[simp]\ntheorem infᵢ_Prop_eq {p : ι → Prop} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (p i) = ∀ i, p i :=\n  le_antisymm (fun h i => h _ ⟨i, rfl⟩) fun h p ⟨i, Eq⟩ => Eq ▸ h i\n#align infi_Prop_eq infᵢ_Prop_eq\n-/\n\n",
 "infi_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem infi_mk [InfSet α] [InfSet β] (f : ι → α) (g : ι → β) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i, g i) =\n      («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i),\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (g i)) :=\n  congr_arg₂ prod.mk (fst_infᵢ _) (snd_infᵢ _)\n#align infi_mk infi_mk\n\n",
 "inf_infᵢ_nat_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print inf_infᵢ_nat_succ /-\ntheorem inf_infᵢ_nat_succ (u : ℕ → α) :\n    «expr ⊓ » (u 0)\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u (i + 1))) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (u i) :=\n  @sup_supᵢ_nat_succ («expr ᵒᵈ» α) _ u\n#align inf_infi_nat_succ inf_infᵢ_nat_succ\n-/\n\n",
 "inf_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_infᵢ /-\ntheorem inf_infᵢ [Nonempty ι] {f : ι → α} {a : α} :\n    «expr ⊓ » a\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        («expr ⊓ » a (f x)) :=\n  by rw [infᵢ_inf_eq, infᵢ_const]\n#align inf_infi inf_infᵢ\n-/\n\n",
 "inf_eq_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print inf_eq_infᵢ /-\ntheorem inf_eq_infᵢ (x y : α) :\n    «expr ⊓ » x y =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (cond b x y) :=\n  @sup_eq_supᵢ («expr ᵒᵈ» α) _ _ _\n#align inf_eq_infi inf_eq_infᵢ\n-/\n\n",
 "inf_binfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_binfᵢ /-\ntheorem inf_binfᵢ {p : ι → Prop} {f : ∀ i, p i → α} {a : α} (h : ∃ i, p i) :\n    «expr ⊓ » a\n        («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i h)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        («expr ⊓ » a (f i h)) :=\n  @sup_bsupᵢ («expr ᵒᵈ» α) ι _ p f _ h\n#align inf_binfi inf_binfᵢ\n-/\n\n",
 "fst_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem fst_supr [SupSet α] [SupSet β] (f : ι → α × β) :\n    (supᵢ f).fst =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i).fst :=\n  congr_arg supₛ (range_comp _ _).symm\n#align fst_supr fst_supr\n\n",
 "fst_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem fst_infi [InfSet α] [InfSet β] (f : ι → α × β) :\n    (infᵢ f).fst =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i).fst :=\n  congr_arg infₛ (range_comp _ _).symm\n#align fst_infi fst_infi\n\n",
 "fst_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem fst_Sup [SupSet α] [SupSet β] (s : Set (α × β)) : (supₛ s).fst = supₛ («expr '' » Prod.fst s) :=\n  rfl\n#align fst_Sup fst_Sup\n\n",
 "fst_Inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem fst_Inf [InfSet α] [InfSet β] (s : Set (α × β)) : (infₛ s).fst = infₛ («expr '' » Prod.fst s) :=\n  rfl\n#align fst_Inf fst_Inf\n\n",
 "eq_singleton_top_of_infₛ_eq_top_of_nonempty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print eq_singleton_top_of_infₛ_eq_top_of_nonempty /-\ntheorem eq_singleton_top_of_infₛ_eq_top_of_nonempty : infₛ s = «expr⊤» → s.nonempty → s = {«expr⊤»} :=\n  @eq_singleton_bot_of_supₛ_eq_bot_of_nonempty («expr ᵒᵈ» α) _ _\n#align eq_singleton_top_of_Inf_eq_top_of_nonempty eq_singleton_top_of_infₛ_eq_top_of_nonempty\n-/\n\n",
 "eq_singleton_bot_of_supₛ_eq_bot_of_nonempty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print eq_singleton_bot_of_supₛ_eq_bot_of_nonempty /-\ntheorem eq_singleton_bot_of_supₛ_eq_bot_of_nonempty {s : Set α} (h_sup : supₛ s = «expr⊥») (hne : s.nonempty) :\n    s = {«expr⊥»} := by\n  rw [Set.eq_singleton_iff_nonempty_unique_mem]\n  rw [supₛ_eq_bot] at h_sup\n  exact ⟨hne, h_sup⟩\n#align eq_singleton_bot_of_Sup_eq_bot_of_nonempty eq_singleton_bot_of_supₛ_eq_bot_of_nonempty\n-/\n\n",
 "disjoint_supₛ_right":
 "#print disjoint_supₛ_right /-\ntheorem disjoint_supₛ_right {a : Set α} {b : α} (d : Disjoint b (supₛ a)) {i} (hi : i ∈ a) : Disjoint b i :=\n  disjoint_iff_inf_le.mpr (supᵢ₂_le_iff.mp (supᵢ_inf_le_inf_supₛ.trans d.le_bot) i hi : _)\n#align disjoint_Sup_right disjoint_supₛ_right\n-/\n\n",
 "disjoint_supₛ_left":
 "#print disjoint_supₛ_left /-\ntheorem disjoint_supₛ_left {a : Set α} {b : α} (d : Disjoint (supₛ a) b) {i} (hi : i ∈ a) : Disjoint i b :=\n  disjoint_iff_inf_le.mpr (supᵢ₂_le_iff.1 (supᵢ_inf_le_supₛ_inf.trans d.le_bot) i hi : _)\n#align disjoint_Sup_left disjoint_supₛ_left\n-/\n\n",
 "bsupᵢ_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print bsupᵢ_sup /-\ntheorem bsupᵢ_sup {p : ι → Prop} {f : ∀ i, p i → α} {a : α} (h : ∃ i, p i) :\n    «expr ⊔ » («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i h))\n        a =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr ⊔ » (f i h) a) :=\n  by\n  haveI : Nonempty { i // p i } :=\n      let ⟨i, hi⟩ := h\n      ⟨⟨i, hi⟩⟩ <;>\n    rw [supᵢ_subtype', supᵢ_subtype', supᵢ_sup]\n#align bsupr_sup bsupᵢ_sup\n-/\n\n",
 "bsupᵢ_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print bsupᵢ_prod /-\ntheorem bsupᵢ_prod {f : β × γ → α} {s : Set β} {t : Set γ} :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f x) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f (a, b)) :=\n  by\n  simp_rw [supᵢ_prod, mem_prod, supᵢ_and]\n  exact supᵢ_congr fun _ => supᵢ_comm\n#align bsupr_prod bsupᵢ_prod\n-/\n\n",
 "bsupᵢ_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print bsupᵢ_mono /-\ntheorem bsupᵢ_mono {p q : ι → Prop} (hpq : ∀ i, p i → q i) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) ≤\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n  supᵢ_mono fun i => supᵢ_const_mono (hpq i)\n#align bsupr_mono bsupᵢ_mono\n-/\n\n",
 "bsupᵢ_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print bsupᵢ_const /-\ntheorem bsupᵢ_const {ι : Sort _} {a : α} {s : Set ι} (hs : s.nonempty) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" a = a :=\n  by\n  haveI : Nonempty s := set.nonempty_coe_sort.mpr hs\n  rw [← supᵢ_subtype'', supᵢ_const]\n#align bsupr_const bsupᵢ_const\n-/\n\n",
 "binfᵢ_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print binfᵢ_prod /-\ntheorem binfᵢ_prod {f : β × γ → α} {s : Set β} {t : Set γ} :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f x) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f (a, b)) :=\n  @bsupᵢ_prod («expr ᵒᵈ» α) _ _ _ _ _ _\n#align binfi_prod binfᵢ_prod\n-/\n\n",
 "binfᵢ_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print binfᵢ_mono /-\ntheorem binfᵢ_mono {p q : ι → Prop} (hpq : ∀ i, p i → q i) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) ≤\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n  infᵢ_mono fun i => infᵢ_const_mono (hpq i)\n#align binfi_mono binfᵢ_mono\n-/\n\n",
 "binfᵢ_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print binfᵢ_inf /-\ntheorem binfᵢ_inf {p : ι → Prop} {f : ∀ i, p i → α} {a : α} (h : ∃ i, p i) :\n    «expr ⊓ » («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i h))\n        a =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        («expr ⊓ » (f i h) a) :=\n  @bsupᵢ_sup («expr ᵒᵈ» α) ι _ p f _ h\n#align binfi_inf binfᵢ_inf\n-/\n\n",
 "binfᵢ_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print binfᵢ_const /-\ntheorem binfᵢ_const {ι : Sort _} {a : α} {s : Set ι} (hs : s.nonempty) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" a = a :=\n  @bsupᵢ_const («expr ᵒᵈ» α) _ ι _ s hs\n#align binfi_const binfᵢ_const\n-/\n\n",
 "binary_relation_supₛ_iff":
 "#print binary_relation_supₛ_iff /-\ntheorem binary_relation_supₛ_iff {α β : Type _} (s : Set (α → β → Prop)) {a : α} {b : β} :\n    supₛ s a b ↔ ∃ r : α → β → Prop, r ∈ s ∧ r a b := by\n  unfold Sup\n  simp [← eq_iff_iff]\n#align binary_relation_Sup_iff binary_relation_supₛ_iff\n-/\n\n",
 "binary_relation_infₛ_iff":
 "#print binary_relation_infₛ_iff /-\ntheorem binary_relation_infₛ_iff {α β : Type _} (s : Set (α → β → Prop)) {a : α} {b : β} :\n    infₛ s a b ↔ ∀ r : α → β → Prop, r ∈ s → r a b := by\n  unfold Inf\n  simp [← eq_iff_iff]\n#align binary_relation_Inf_iff binary_relation_infₛ_iff\n-/\n\n"}