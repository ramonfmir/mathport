{"top_is_equipartition":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem top_is_equipartition : («expr⊤» : Finpartition s).is_equipartition :=\n  (parts_top_subsingleton _).is_equipartition\n#align top_is_equipartition top_is_equipartition\n\n",
 "is_equipartition_iff_card_parts_eq_average":
 "/-\nCopyright (c) 2022 Yaël Dillies, Bhavik Mehta. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies, Bhavik Mehta\n-/\ntheorem is_equipartition_iff_card_parts_eq_average :\n    P.is_equipartition ↔\n      ∀ a : Finset α, a ∈ P.parts → a.card = s.card / P.parts.card ∨ a.card = s.card / P.parts.card + 1 :=\n  by simp_rw [is_equipartition, Finset.equitableOn_iff, P.sum_card_parts]\n#align is_equipartition_iff_card_parts_eq_average is_equipartition_iff_card_parts_eq_average\n\n",
 "is_equipartition":
 "theorem _root_.set.subsingleton.is_equipartition (h : (P.parts : Set (Finset α)).subsingleton) : P.is_equipartition :=\n  h.equitable_on _\n#align set.subsingleton.is_equipartition set.subsingleton.is_equipartition\n\n",
 "indiscrete_is_equipartition":
 "theorem indiscrete_is_equipartition {hs : s ≠ ∅} : (indiscrete hs).is_equipartition :=\n  by\n  rw [is_equipartition, indiscrete_parts, coe_singleton]\n  exact Set.equitableOn_singleton s _\n#align indiscrete_is_equipartition indiscrete_is_equipartition\n\n",
 "card_parts_eq_average":
 "theorem is_equipartition.card_parts_eq_average (hP : P.is_equipartition) (ht : t ∈ P.parts) :\n    t.card = s.card / P.parts.card ∨ t.card = s.card / P.parts.card + 1 :=\n  P.is_equipartition_iff_card_parts_eq_average.1 hP _ ht\n#align is_equipartition.card_parts_eq_average is_equipartition.card_parts_eq_average\n\n",
 "card_part_le_average_add_one":
 "theorem is_equipartition.card_part_le_average_add_one (hP : P.is_equipartition) (ht : t ∈ P.parts) :\n    t.card ≤ s.card / P.parts.card + 1 := by\n  rw [← P.sum_card_parts]\n  exact equitable_on.le_add_one hP ht\n#align is_equipartition.card_part_le_average_add_one is_equipartition.card_part_le_average_add_one\n\n",
 "bot_is_equipartition":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem bot_is_equipartition : («expr⊥» : Finpartition s).is_equipartition :=\n  Set.equitableOn_iff_exists_eq_eq_add_one.2 ⟨1, by simp⟩\n#align bot_is_equipartition bot_is_equipartition\n\n",
 "average_le_card_part":
 "theorem is_equipartition.average_le_card_part (hP : P.is_equipartition) (ht : t ∈ P.parts) :\n    s.card / P.parts.card ≤ t.card := by\n  rw [← P.sum_card_parts]\n  exact equitable_on.le hP ht\n#align is_equipartition.average_le_card_part is_equipartition.average_le_card_part\n\n"}