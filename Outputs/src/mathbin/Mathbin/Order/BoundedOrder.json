{"top_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print top_unique /-\ntheorem top_unique (h : «expr⊤» ≤ a) : a = «expr⊤» :=\n  le_top.antisymm h\n#align top_unique top_unique\n-/\n\n",
 "top_sup_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print top_sup_eq /-\n@[simp]\ntheorem top_sup_eq : «expr ⊔ » («expr⊤») a = «expr⊤» :=\n  sup_of_le_left le_top\n#align top_sup_eq top_sup_eq\n-/\n\n",
 "top_ne_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print top_ne_bot /-\n@[simp]\ntheorem top_ne_bot : («expr⊤» : α) ≠ «expr⊥» :=\n  bot_ne_top.symm\n#align top_ne_bot top_ne_bot\n-/\n\n",
 "top_le_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print top_le_iff /-\n@[simp]\ntheorem top_le_iff : «expr⊤» ≤ a ↔ a = «expr⊤» :=\n  le_top.le_iff_eq.trans eq_comm\n#align top_le_iff top_le_iff\n-/\n\n",
 "top_inf_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print top_inf_eq /-\n@[simp]\ntheorem top_inf_eq : «expr ⊓ » («expr⊤») a = a :=\n  inf_of_le_right le_top\n#align top_inf_eq top_inf_eq\n-/\n\n",
 "top_eq_true":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print top_eq_true /-\n@[simp]\ntheorem top_eq_true : «expr⊤» = true :=\n  rfl\n#align top_eq_tt top_eq_true\n-/\n\n",
 "top_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem top_def [∀ i, Top (α' i)] : («expr⊤» : ∀ i, α' i) = fun i => «expr⊤» :=\n  rfl\n#align top_def top_def\n\n",
 "top_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem top_apply [∀ i, Top (α' i)] (i : ι) : («expr⊤» : ∀ i, α' i) i = «expr⊤» :=\n  rfl\n#align top_apply top_apply\n\n",
 "to_dual_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem to_dual_top [Top α] : toDual («expr⊤» : α) = «expr⊥» :=\n  rfl\n#align to_dual_top to_dual_top\n\n",
 "to_dual_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem to_dual_bot [Bot α] : toDual («expr⊥» : α) = «expr⊤» :=\n  rfl\n#align to_dual_bot to_dual_bot\n\n",
 "sup_top_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print sup_top_eq /-\n@[simp]\ntheorem sup_top_eq : «expr ⊔ » a («expr⊤») = «expr⊤» :=\n  sup_of_le_right le_top\n#align sup_top_eq sup_top_eq\n-/\n\n",
 "sup_eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print sup_eq_bot_iff /-\n@[simp]\ntheorem sup_eq_bot_iff : «expr ⊔ » a b = «expr⊥» ↔ a = «expr⊥» ∧ b = «expr⊥» := by rw [eq_bot_iff, sup_le_iff] <;> simp\n#align sup_eq_bot_iff sup_eq_bot_iff\n-/\n\n",
 "sup_bot_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print sup_bot_eq /-\n@[simp]\ntheorem sup_bot_eq : «expr ⊔ » a («expr⊥») = a :=\n  sup_of_le_left bot_le\n#align sup_bot_eq sup_bot_eq\n-/\n\n",
 "subsingleton_of_top_le_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print subsingleton_of_top_le_bot /-\ntheorem subsingleton_of_top_le_bot (h : («expr⊤» : α) ≤ («expr⊥» : α)) : subsingleton α :=\n  ⟨fun a b => le_antisymm (le_trans le_top <| le_trans h bot_le) (le_trans le_top <| le_trans h bot_le)⟩\n#align subsingleton_of_top_le_bot subsingleton_of_top_le_bot\n-/\n\n",
 "subsingleton_of_bot_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print subsingleton_of_bot_eq_top /-\ntheorem subsingleton_of_bot_eq_top (hα : («expr⊥» : α) = («expr⊤» : α)) : subsingleton α :=\n  subsingleton_of_top_le_bot (ge_of_eq hα)\n#align subsingleton_of_bot_eq_top subsingleton_of_bot_eq_top\n-/\n\n",
 "subsingleton_iff_bot_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print subsingleton_iff_bot_eq_top /-\ntheorem subsingleton_iff_bot_eq_top : («expr⊥» : α) = («expr⊤» : α) ↔ subsingleton α :=\n  ⟨subsingleton_of_bot_eq_top, fun h => subsingleton.elim («expr⊥») («expr⊤»)⟩\n#align subsingleton_iff_bot_eq_top subsingleton_iff_bot_eq_top\n-/\n\n",
 "of_dual_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem of_dual_top [Bot α] : ofDual («expr⊤») = («expr⊥» : α) :=\n  rfl\n#align of_dual_top of_dual_top\n\n",
 "of_dual_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem of_dual_bot [Top α] : ofDual («expr⊥») = («expr⊤» : α) :=\n  rfl\n#align of_dual_bot of_dual_bot\n\n",
 "not_top_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print not_top_lt /-\n@[simp]\ntheorem not_top_lt : ¬«expr⊤» < a :=\n  isMax_top.not_lt\n#align not_top_lt not_top_lt\n-/\n\n",
 "not_lt_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print not_lt_top_iff /-\n@[simp]\ntheorem not_lt_top_iff : ¬a < «expr⊤» ↔ a = «expr⊤» :=\n  lt_top_iff_ne_top.not_left\n#align not_lt_top_iff not_lt_top_iff\n-/\n\n",
 "not_lt_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print not_lt_bot /-\n@[simp]\ntheorem not_lt_bot : ¬a < «expr⊥» :=\n  isMin_bot.not_lt\n#align not_lt_bot not_lt_bot\n-/\n\n",
 "not_isTop_iff_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print not_isTop_iff_ne_top /-\ntheorem not_isTop_iff_ne_top : ¬IsTop a ↔ a ≠ «expr⊤» :=\n  isTop_iff_eq_top.not\n#align not_is_top_iff_ne_top not_isTop_iff_ne_top\n-/\n\n",
 "not_isMin_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print not_isMin_top /-\ntheorem not_isMin_top : ¬IsMin («expr⊤» : α) := fun h =>\n  let ⟨a, ha⟩ := exists_ne («expr⊤» : α)\n  ha <| top_le_iff.1 <| h le_top\n#align not_is_min_top not_isMin_top\n-/\n\n",
 "not_isMin_iff_ne_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print not_isMin_iff_ne_bot /-\ntheorem not_isMin_iff_ne_bot : ¬IsMin a ↔ a ≠ «expr⊥» :=\n  isMin_iff_eq_bot.not\n#align not_is_min_iff_ne_bot not_isMin_iff_ne_bot\n-/\n\n",
 "not_isMax_iff_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print not_isMax_iff_ne_top /-\ntheorem not_isMax_iff_ne_top : ¬IsMax a ↔ a ≠ «expr⊤» :=\n  isMax_iff_eq_top.not\n#align not_is_max_iff_ne_top not_isMax_iff_ne_top\n-/\n\n",
 "not_isMax_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print not_isMax_bot /-\ntheorem not_isMax_bot : ¬IsMax («expr⊥» : α) :=\n  @not_isMin_top («expr ᵒᵈ» α) _ _ _\n#align not_is_max_bot not_isMax_bot\n-/\n\n",
 "not_isBot_iff_ne_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print not_isBot_iff_ne_bot /-\ntheorem not_isBot_iff_ne_bot : ¬IsBot a ↔ a ≠ «expr⊥» :=\n  isBot_iff_eq_bot.not\n#align not_is_bot_iff_ne_bot not_isBot_iff_ne_bot\n-/\n\n",
 "not_bot_lt_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print not_bot_lt_iff /-\n@[simp]\ntheorem not_bot_lt_iff : ¬«expr⊥» < a ↔ a = «expr⊥» :=\n  bot_lt_iff_ne_bot.not_left\n#align not_bot_lt_iff not_bot_lt_iff\n-/\n\n",
 "ne_top_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print ne_top_of_lt /-\ntheorem ne_top_of_lt (h : a < b) : a ≠ «expr⊤» :=\n  (h.trans_le le_top).ne\n#align ne_top_of_lt ne_top_of_lt\n-/\n\n",
 "ne_top_of_le_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print ne_top_of_le_ne_top /-\ntheorem ne_top_of_le_ne_top (hb : b ≠ «expr⊤») (hab : a ≤ b) : a ≠ «expr⊤» :=\n  (hab.trans_lt hb.lt_top).ne\n#align ne_top_of_le_ne_top ne_top_of_le_ne_top\n-/\n\n",
 "ne_bot_of_le_ne_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print ne_bot_of_le_ne_bot /-\ntheorem ne_bot_of_le_ne_bot (hb : b ≠ «expr⊥») (hab : b ≤ a) : a ≠ «expr⊥» :=\n  (hb.bot_lt.trans_le hab).ne'\n#align ne_bot_of_le_ne_bot ne_bot_of_le_ne_bot\n-/\n\n",
 "ne_bot_of_gt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print ne_bot_of_gt /-\ntheorem ne_bot_of_gt (h : a < b) : b ≠ «expr⊥» :=\n  (bot_le.trans_lt h).ne'\n#align ne_bot_of_gt ne_bot_of_gt\n-/\n\n",
 "monotone_or":
 "#print monotone_or /-\n-- Note: by finish [monotone] doesn't work\ntheorem monotone_or {p q : α → Prop} (m_p : Monotone p) (m_q : Monotone q) : Monotone fun x => p x ∨ q x := fun a b h =>\n  Or.imp (m_p h) (m_q h)\n#align monotone_or monotone_or\n-/\n\n",
 "monotone_lt":
 "#print monotone_lt /-\ntheorem monotone_lt {x : α} : Monotone ((· < ·) x) := fun y z h' h => h.trans_le h'\n#align monotone_lt monotone_lt\n-/\n\n",
 "monotone_le":
 "#print monotone_le /-\ntheorem monotone_le {x : α} : Monotone ((· ≤ ·) x) := fun y z h' h => h.trans h'\n#align monotone_le monotone_le\n-/\n\n",
 "monotone_and":
 "#print monotone_and /-\ntheorem monotone_and {p q : α → Prop} (m_p : Monotone p) (m_q : Monotone q) : Monotone fun x => p x ∧ q x :=\n  fun a b h => and.imp (m_p h) (m_q h)\n#align monotone_and monotone_and\n-/\n\n",
 "mk_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem mk_top [OrderTop α] [OrderTop (Subtype p)] (htop : p («expr⊤»)) : mk («expr⊤») htop = «expr⊤» :=\n  top_le_iff.1 <| coe_le_coe.1 le_top\n#align mk_top mk_top\n\n",
 "mk_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem mk_eq_top_iff [OrderTop α] [OrderTop (Subtype p)] (htop : p («expr⊤»)) {x : α} (hx : p x) :\n    (⟨x, hx⟩ : Subtype p) = «expr⊤» ↔ x = «expr⊤» :=\n  (coe_eq_top_iff htop).symm\n#align mk_eq_top_iff mk_eq_top_iff\n\n",
 "mk_eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem mk_eq_bot_iff [OrderBot α] [OrderBot (Subtype p)] (hbot : p («expr⊥»)) {x : α} (hx : p x) :\n    (⟨x, hx⟩ : Subtype p) = «expr⊥» ↔ x = «expr⊥» :=\n  (coe_eq_bot_iff hbot).symm\n#align mk_eq_bot_iff mk_eq_bot_iff\n\n",
 "mk_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n@[simp]\ntheorem mk_bot [OrderBot α] [OrderBot (Subtype p)] (hbot : p («expr⊥»)) : mk («expr⊥») hbot = «expr⊥» :=\n  le_bot_iff.1 <| coe_le_coe.1 bot_le\n#align mk_bot mk_bot\n\n",
 "minimal_preimage_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print StrictMono.minimal_preimage_bot /-\ntheorem StrictMono.minimal_preimage_bot [linear_order α] [partial_order β] [OrderBot β] {f : α → β} (H : StrictMono f)\n    {a} (h_bot : f a = «expr⊥») (x : α) : a ≤ x :=\n  H.minimal_of_minimal_image\n    (fun p => by\n      rw [h_bot]\n      exact bot_le)\n    x\n#align strict_mono.minimal_preimage_bot StrictMono.minimal_preimage_bot\n-/\n\n",
 "min_top_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print min_top_right /-\ntheorem min_top_right [OrderTop α] (a : α) : min a («expr⊤») = a :=\n  inf_top_eq\n#align min_top_right min_top_right\n-/\n\n",
 "min_top_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print min_top_left /-\ntheorem min_top_left [OrderTop α] (a : α) : min («expr⊤») a = a :=\n  top_inf_eq\n#align min_top_left min_top_left\n-/\n\n",
 "min_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print min_eq_top /-\n@[simp]\ntheorem min_eq_top [OrderTop α] {a b : α} : min a b = «expr⊤» ↔ a = «expr⊤» ∧ b = «expr⊤» :=\n  inf_eq_top_iff\n#align min_eq_top min_eq_top\n-/\n\n",
 "min_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print min_eq_bot /-\n@[simp]\ntheorem min_eq_bot [OrderBot α] {a b : α} : min a b = «expr⊥» ↔ a = «expr⊥» ∨ b = «expr⊥» := by\n  simp only [← inf_eq_min, ← le_bot_iff, inf_le_iff]\n#align min_eq_bot min_eq_bot\n-/\n\n",
 "min_bot_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print min_bot_right /-\ntheorem min_bot_right [OrderBot α] (a : α) : min a («expr⊥») = «expr⊥» :=\n  inf_bot_eq\n#align min_bot_right min_bot_right\n-/\n\n",
 "min_bot_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print min_bot_left /-\n-- `simp` can prove these, so they shouldn't be simp-lemmas.\ntheorem min_bot_left [OrderBot α] (a : α) : min («expr⊥») a = «expr⊥» :=\n  bot_inf_eq\n#align min_bot_left min_bot_left\n-/\n\n",
 "maximal_preimage_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print StrictMono.maximal_preimage_top /-\ntheorem StrictMono.maximal_preimage_top [linear_order α] [preorder β] [OrderTop β] {f : α → β} (H : StrictMono f) {a}\n    (h_top : f a = «expr⊤») (x : α) : x ≤ a :=\n  H.maximal_of_maximal_image\n    (fun p => by\n      rw [h_top]\n      exact le_top)\n    x\n#align strict_mono.maximal_preimage_top StrictMono.maximal_preimage_top\n-/\n\n",
 "max_top_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print max_top_right /-\ntheorem max_top_right [OrderTop α] (a : α) : max a («expr⊤») = «expr⊤» :=\n  sup_top_eq\n#align max_top_right max_top_right\n-/\n\n",
 "max_top_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print max_top_left /-\ntheorem max_top_left [OrderTop α] (a : α) : max («expr⊤») a = «expr⊤» :=\n  top_sup_eq\n#align max_top_left max_top_left\n-/\n\n",
 "max_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print max_eq_top /-\n@[simp]\ntheorem max_eq_top [OrderTop α] {a b : α} : max a b = «expr⊤» ↔ a = «expr⊤» ∨ b = «expr⊤» :=\n  @min_eq_bot («expr ᵒᵈ» α) _ _ a b\n#align max_eq_top max_eq_top\n-/\n\n",
 "max_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print max_eq_bot /-\n@[simp]\ntheorem max_eq_bot [OrderBot α] {a b : α} : max a b = «expr⊥» ↔ a = «expr⊥» ∧ b = «expr⊥» :=\n  sup_eq_bot_iff\n#align max_eq_bot max_eq_bot\n-/\n\n",
 "max_bot_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print max_bot_right /-\ntheorem max_bot_right [OrderBot α] (a : α) : max a («expr⊥») = a :=\n  sup_bot_eq\n#align max_bot_right max_bot_right\n-/\n\n",
 "max_bot_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print max_bot_left /-\ntheorem max_bot_left [OrderBot α] (a : α) : max («expr⊥») a = a :=\n  bot_sup_eq\n#align max_bot_left max_bot_left\n-/\n\n",
 "lt_top_iff_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print lt_top_iff_ne_top /-\ntheorem lt_top_iff_ne_top : a < «expr⊤» ↔ a ≠ «expr⊤» :=\n  le_top.lt_iff_ne\n#align lt_top_iff_ne_top lt_top_iff_ne_top\n-/\n\n",
 "lt_top'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print Ne.lt_top' /-\ntheorem Ne.lt_top' (h : «expr⊤» ≠ a) : a < «expr⊤» :=\n  h.symm.lt_top\n#align ne.lt_top' Ne.lt_top'\n-/\n\n",
 "lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print Ne.lt_top /-\ntheorem Ne.lt_top (h : a ≠ «expr⊤») : a < «expr⊤» :=\n  lt_top_iff_ne_top.mpr h\n#align ne.lt_top Ne.lt_top\n-/\n\n",
 "le_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print le_top /-\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl\n-/\n@[simp]\ntheorem le_top : a ≤ «expr⊤» :=\n  order_top.le_top a\n#align le_top le_top\n-/\n\n",
 "le_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print le_bot_iff /-\n@[simp]\ntheorem le_bot_iff : a ≤ «expr⊥» ↔ a = «expr⊥» :=\n  bot_le.le_iff_eq\n#align le_bot_iff le_bot_iff\n-/\n\n",
 "isTop_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print isTop_top /-\n@[simp]\ntheorem isTop_top : IsTop («expr⊤» : α) := fun _ => le_top\n#align is_top_top isTop_top\n-/\n\n",
 "isTop_iff_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print isTop_iff_eq_top /-\n@[simp]\ntheorem isTop_iff_eq_top : IsTop a ↔ a = «expr⊤» :=\n  ⟨fun h => h.is_max.eq_of_le le_top, fun h b => h.symm ▸ le_top⟩\n#align is_top_iff_eq_top isTop_iff_eq_top\n-/\n\n",
 "isMin_iff_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print isMin_iff_eq_bot /-\n@[simp]\ntheorem isMin_iff_eq_bot : IsMin a ↔ a = «expr⊥» :=\n  ⟨fun h => h.eq_of_ge bot_le, fun h b _ => h.symm ▸ bot_le⟩\n#align is_min_iff_eq_bot isMin_iff_eq_bot\n-/\n\n",
 "isMin_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print isMin_bot /-\n@[simp]\ntheorem isMin_bot : IsMin («expr⊥» : α) :=\n  isBot_bot.is_min\n#align is_min_bot isMin_bot\n-/\n\n",
 "isMax_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print isMax_top /-\n@[simp]\ntheorem isMax_top : IsMax («expr⊤» : α) :=\n  isTop_top.is_max\n#align is_max_top isMax_top\n-/\n\n",
 "isMax_iff_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print isMax_iff_eq_top /-\n@[simp]\ntheorem isMax_iff_eq_top : IsMax a ↔ a = «expr⊤» :=\n  ⟨fun h => h.eq_of_le le_top, fun h b _ => h.symm ▸ le_top⟩\n#align is_max_iff_eq_top isMax_iff_eq_top\n-/\n\n",
 "isBot_iff_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print isBot_iff_eq_bot /-\n@[simp]\ntheorem isBot_iff_eq_bot : IsBot a ↔ a = «expr⊥» :=\n  ⟨fun h => h.is_min.eq_of_ge bot_le, fun h b => h.symm ▸ bot_le⟩\n#align is_bot_iff_eq_bot isBot_iff_eq_bot\n-/\n\n",
 "isBot_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print isBot_bot /-\n@[simp]\ntheorem isBot_bot : IsBot («expr⊥» : α) := fun _ => bot_le\n#align is_bot_bot isBot_bot\n-/\n\n",
 "inf_top_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print inf_top_eq /-\n@[simp]\ntheorem inf_top_eq : «expr ⊓ » a («expr⊤») = a :=\n  inf_of_le_left le_top\n#align inf_top_eq inf_top_eq\n-/\n\n",
 "inf_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print inf_eq_top_iff /-\n@[simp]\ntheorem inf_eq_top_iff : «expr ⊓ » a b = «expr⊤» ↔ a = «expr⊤» ∧ b = «expr⊤» :=\n  @sup_eq_bot_iff («expr ᵒᵈ» α) _ _ _ _\n#align inf_eq_top_iff inf_eq_top_iff\n-/\n\n",
 "inf_bot_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print inf_bot_eq /-\n@[simp]\ntheorem inf_bot_eq : «expr ⊓ » a («expr⊥») = «expr⊥» :=\n  inf_of_le_right bot_le\n#align inf_bot_eq inf_bot_eq\n-/\n\n",
 "forall":
 "#print Antitone.forall /-\ntheorem Antitone.forall {P : β → α → Prop} (hP : ∀ x, Antitone (P x)) : Antitone fun y => ∀ x, P x y :=\n  fun y y' hy h x => hP x hy (h x)\n#align antitone.forall Antitone.forall\n-/\n\n",
 "ext_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print OrderTop.ext_top /-\ntheorem OrderTop.ext_top {α} {hA : partial_order α} (A : OrderTop α) {hB : partial_order α} (B : OrderTop α)\n    (H :\n      ∀ x y : α,\n        (haveI := hA\n          x ≤ y) ↔\n          x ≤ y) :\n    (haveI := A\n        «expr⊤» :\n        α) =\n      «expr⊤» :=\n  top_unique <| by rw [← H] <;> apply le_top\n#align order_top.ext_top OrderTop.ext_top\n-/\n\n",
 "ext_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print OrderBot.ext_bot /-\ntheorem OrderBot.ext_bot {α} {hA : partial_order α} (A : OrderBot α) {hB : partial_order α} (B : OrderBot α)\n    (H :\n      ∀ x y : α,\n        (haveI := hA\n          x ≤ y) ↔\n          x ≤ y) :\n    (haveI := A\n        «expr⊥» :\n        α) =\n      «expr⊥» :=\n  bot_unique <| by rw [← H] <;> apply bot_le\n#align order_bot.ext_bot OrderBot.ext_bot\n-/\n\n",
 "ext":
 "#print BoundedOrder.ext /-\ntheorem BoundedOrder.ext {α} [partial_order α] {A B : BoundedOrder α} : A = B :=\n  by\n  have ht : @bounded_order.to_order_top α _ A = @bounded_order.to_order_top α _ B := OrderTop.ext\n  have hb : @bounded_order.to_order_bot α _ A = @bounded_order.to_order_bot α _ B := OrderBot.ext\n  cases A\n  cases B\n  injection ht with h\n  injection hb with h'\n  convert rfl\n  · exact h.symm\n  · exact h'.symm\n#align bounded_order.ext BoundedOrder.ext\n-/\n\n",
 "exists_le_and_iff_exists":
 "#print exists_le_and_iff_exists /-\ntheorem exists_le_and_iff_exists {P : α → Prop} {x₀ : α} (hP : Antitone P) : (∃ x, x ≤ x₀ ∧ P x) ↔ ∃ x, P x :=\n  exists_ge_and_iff_exists hP.dual_left\n#align exists_le_and_iff_exists exists_le_and_iff_exists\n-/\n\n",
 "exists_ge_and_iff_exists":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print exists_ge_and_iff_exists /-\ntheorem exists_ge_and_iff_exists {P : α → Prop} {x₀ : α} (hP : Monotone P) : (∃ x, x₀ ≤ x ∧ P x) ↔ ∃ x, P x :=\n  ⟨fun h => h.imp fun x h => h.2, fun ⟨x, hx⟩ => ⟨«expr ⊔ » x x₀, le_sup_right, hP le_sup_left hx⟩⟩\n#align exists_ge_and_iff_exists exists_ge_and_iff_exists\n-/\n\n",
 "eq_top_or_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print eq_top_or_lt_top /-\ntheorem eq_top_or_lt_top (a : α) : a = «expr⊤» ∨ a < «expr⊤» :=\n  le_top.eq_or_lt\n#align eq_top_or_lt_top eq_top_or_lt_top\n-/\n\n",
 "eq_top_of_bot_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print eq_top_of_bot_eq_top /-\ntheorem eq_top_of_bot_eq_top (hα : («expr⊥» : α) = «expr⊤») (x : α) : x = («expr⊤» : α) :=\n  eq_top_mono bot_le hα\n#align eq_top_of_bot_eq_top eq_top_of_bot_eq_top\n-/\n\n",
 "eq_top_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print eq_top_mono /-\ntheorem eq_top_mono (h : a ≤ b) (h₂ : a = «expr⊤») : b = «expr⊤» :=\n  top_unique <| h₂ ▸ h\n#align eq_top_mono eq_top_mono\n-/\n\n",
 "eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print eq_top_iff /-\ntheorem eq_top_iff : a = «expr⊤» ↔ «expr⊤» ≤ a :=\n  top_le_iff.symm\n#align eq_top_iff eq_top_iff\n-/\n\n",
 "eq_bot_or_bot_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print eq_bot_or_bot_lt /-\ntheorem eq_bot_or_bot_lt (a : α) : a = «expr⊥» ∨ «expr⊥» < a :=\n  bot_le.eq_or_gt\n#align eq_bot_or_bot_lt eq_bot_or_bot_lt\n-/\n\n",
 "eq_bot_of_minimal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print eq_bot_of_minimal /-\ntheorem eq_bot_of_minimal (h : ∀ b, ¬b < a) : a = «expr⊥» :=\n  (eq_bot_or_bot_lt a).resolve_right (h («expr⊥»))\n#align eq_bot_of_minimal eq_bot_of_minimal\n-/\n\n",
 "eq_bot_of_bot_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print eq_bot_of_bot_eq_top /-\ntheorem eq_bot_of_bot_eq_top (hα : («expr⊥» : α) = «expr⊤») (x : α) : x = («expr⊥» : α) :=\n  eq_bot_mono le_top (Eq.symm hα)\n#align eq_bot_of_bot_eq_top eq_bot_of_bot_eq_top\n-/\n\n",
 "eq_bot_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print eq_bot_mono /-\ntheorem eq_bot_mono (h : a ≤ b) (h₂ : b = «expr⊥») : a = «expr⊥» :=\n  bot_unique <| h₂ ▸ h\n#align eq_bot_mono eq_bot_mono\n-/\n\n",
 "eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print eq_bot_iff /-\ntheorem eq_bot_iff : a = «expr⊥» ↔ a ≤ «expr⊥» :=\n  le_bot_iff.symm\n#align eq_bot_iff eq_bot_iff\n-/\n\n",
 "coe_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem coe_top [OrderTop α] [OrderTop (Subtype p)] (htop : p («expr⊤»)) : ((«expr⊤» : Subtype p) : α) = «expr⊤» :=\n  congr_arg coe (mk_top htop).symm\n#align coe_top coe_top\n\n",
 "coe_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem coe_eq_top_iff [OrderTop α] [OrderTop (Subtype p)] (htop : p («expr⊤»)) {x : { x // p x }} :\n    (x : α) = «expr⊤» ↔ x = «expr⊤» := by rw [← coe_top htop, ext_iff]\n#align coe_eq_top_iff coe_eq_top_iff\n\n",
 "coe_eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem coe_eq_bot_iff [OrderBot α] [OrderBot (Subtype p)] (hbot : p («expr⊥»)) {x : { x // p x }} :\n    (x : α) = «expr⊥» ↔ x = «expr⊥» := by rw [← coe_bot hbot, ext_iff]\n#align coe_eq_bot_iff coe_eq_bot_iff\n\n",
 "coe_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem coe_bot [OrderBot α] [OrderBot (Subtype p)] (hbot : p («expr⊥»)) : ((«expr⊥» : Subtype p) : α) = «expr⊥» :=\n  congr_arg coe (mk_bot hbot).symm\n#align coe_bot coe_bot\n\n",
 "bot_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print bot_unique /-\ntheorem bot_unique (h : a ≤ «expr⊥») : a = «expr⊥» :=\n  h.antisymm bot_le\n#align bot_unique bot_unique\n-/\n\n",
 "bot_sup_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print bot_sup_eq /-\n@[simp]\ntheorem bot_sup_eq : «expr ⊔ » («expr⊥») a = a :=\n  sup_of_le_right bot_le\n#align bot_sup_eq bot_sup_eq\n-/\n\n",
 "bot_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print bot_ne_top /-\n@[simp]\ntheorem bot_ne_top : («expr⊥» : α) ≠ «expr⊤» := fun h => not_subsingleton _ <| subsingleton_of_bot_eq_top h\n#align bot_ne_top bot_ne_top\n-/\n\n",
 "bot_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print bot_lt_top /-\n@[simp]\ntheorem bot_lt_top : («expr⊥» : α) < «expr⊤» :=\n  lt_top_iff_ne_top.2 bot_ne_top\n#align bot_lt_top bot_lt_top\n-/\n\n",
 "bot_lt_iff_ne_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print bot_lt_iff_ne_bot /-\ntheorem bot_lt_iff_ne_bot : «expr⊥» < a ↔ a ≠ «expr⊥» :=\n  bot_le.lt_iff_ne.trans ne_comm\n#align bot_lt_iff_ne_bot bot_lt_iff_ne_bot\n-/\n\n",
 "bot_lt'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print Ne.bot_lt' /-\ntheorem Ne.bot_lt' (h : «expr⊥» ≠ a) : «expr⊥» < a :=\n  h.symm.bot_lt\n#align ne.bot_lt' Ne.bot_lt'\n-/\n\n",
 "bot_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print Ne.bot_lt /-\ntheorem Ne.bot_lt (h : a ≠ «expr⊥») : «expr⊥» < a :=\n  bot_lt_iff_ne_bot.mpr h\n#align ne.bot_lt Ne.bot_lt\n-/\n\n",
 "bot_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print bot_le /-\n@[simp]\ntheorem bot_le : «expr⊥» ≤ a :=\n  order_bot.bot_le a\n#align bot_le bot_le\n-/\n\n",
 "bot_inf_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print bot_inf_eq /-\n@[simp]\ntheorem bot_inf_eq : «expr ⊓ » («expr⊥») a = «expr⊥» :=\n  inf_of_le_left bot_le\n#align bot_inf_eq bot_inf_eq\n-/\n\n",
 "bot_eq_false":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print bot_eq_false /-\n@[simp]\ntheorem bot_eq_false : «expr⊥» = false :=\n  rfl\n#align bot_eq_ff bot_eq_false\n-/\n\n",
 "bot_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem bot_def [∀ i, Bot (α' i)] : («expr⊥» : ∀ i, α' i) = fun i => «expr⊥» :=\n  rfl\n#align bot_def bot_def\n\n",
 "bot_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot_apply [∀ i, Bot (α' i)] (i : ι) : («expr⊥» : ∀ i, α' i) i = «expr⊥» :=\n  rfl\n#align bot_apply bot_apply\n\n",
 "ball":
 "#print Antitone.ball /-\ntheorem Antitone.ball {P : β → α → Prop} {s : Set β} (hP : ∀ x ∈ s, Antitone (P x)) :\n    Antitone fun y => ∀ x ∈ s, P x y := fun y y' hy h x hx => hP x hx hy (h x hx)\n#align antitone.ball Antitone.ball\n-/\n\n",
 "apply_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print StrictAnti.apply_eq_top_iff /-\ntheorem StrictAnti.apply_eq_top_iff (hf : StrictAnti f) : f a = f («expr⊤») ↔ a = «expr⊤» :=\n  ⟨fun h => not_lt_top_iff.1 fun ha => (hf ha).ne' h, congr_arg _⟩\n#align strict_anti.apply_eq_top_iff StrictAnti.apply_eq_top_iff\n-/\n\n",
 "apply_eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print StrictAnti.apply_eq_bot_iff /-\ntheorem StrictAnti.apply_eq_bot_iff (hf : StrictAnti f) : f a = f («expr⊥») ↔ a = «expr⊥» :=\n  hf.dual.apply_eq_top_iff\n#align strict_anti.apply_eq_bot_iff StrictAnti.apply_eq_bot_iff\n-/\n\n",
 "antitone_lt":
 "#print antitone_lt /-\ntheorem antitone_lt {x : α} : Antitone (· < x) := fun y z h' h => h'.trans_lt h\n#align antitone_lt antitone_lt\n-/\n\n",
 "antitone_le":
 "#print antitone_le /-\ntheorem antitone_le {x : α} : Antitone (· ≤ x) := fun y z h' h => h'.trans h\n#align antitone_le antitone_le\n-/\n\n"}