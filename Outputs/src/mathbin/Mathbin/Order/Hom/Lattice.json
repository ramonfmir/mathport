{"top_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem top_apply (a : α) : («expr⊤» : inf_top_hom α β) a = «expr⊤» :=\n  rfl\n#align top_apply top_apply\n\n",
 "to_lattice_hom_apply":
 "@[simp]\ntheorem to_lattice_hom_apply (f : F) (a : α) : to_lattice_hom α β f a = f a :=\n  rfl\n#align to_lattice_hom_apply to_lattice_hom_apply\n\n",
 "to_fun_eq_coe":
 "@[simp]\ntheorem to_fun_eq_coe {f : bounded_lattice_hom α β} : f.to_fun = (f : α → β) :=\n  rfl\n#align to_fun_eq_coe to_fun_eq_coe\n\n",
 "symm_dual_id":
 "@[simp]\ntheorem symm_dual_id : bounded_lattice_hom.dual.symm (bounded_lattice_hom.id _) = bounded_lattice_hom.id α :=\n  rfl\n#align symm_dual_id symm_dual_id\n\n",
 "symm_dual_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n@[simp]\ntheorem symm_dual_comp (g : bounded_lattice_hom («expr ᵒᵈ» β) («expr ᵒᵈ» γ))\n    (f : bounded_lattice_hom («expr ᵒᵈ» α) («expr ᵒᵈ» β)) :\n    bounded_lattice_hom.dual.symm (g.comp f) =\n      (bounded_lattice_hom.dual.symm g).comp (bounded_lattice_hom.dual.symm f) :=\n  rfl\n#align symm_dual_comp symm_dual_comp\n\n",
 "sup_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem sup_apply (f g : sup_bot_hom α β) (a : α) : («expr ⊔ » f g) a = «expr ⊔ » (f a) (g a) :=\n  rfl\n#align sup_apply sup_apply\n\n",
 "map_symm_diff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∆ » -/\n/-- Special case of `map_symm_diff` for boolean algebras. -/\ntheorem map_symm_diff' (a b : α) : f («expr ∆ » a b) = «expr ∆ » (f a) (f b) := by\n  rw [symmDiff, symmDiff, map_sup, map_sdiff', map_sdiff']\n#align map_symm_diff' map_symm_diff'\n\n",
 "map_sdiff'":
 "/-- Special case of `map_sdiff` for boolean algebras. -/\ntheorem map_sdiff' (a b : α) : f (a \\ b) = f a \\ f b := by rw [sdiff_eq, sdiff_eq, map_inf, map_compl']\n#align map_sdiff' map_sdiff'\n\n",
 "map_finset_sup":
 "/-\nCopyright (c) 2022 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n@[simp]\ntheorem map_finset_sup [SemilatticeSup α] [OrderBot α] [SemilatticeSup β] [OrderBot β] [sup_bot_hom_class F α β] (f : F)\n    (s : Finset ι) (g : ι → α) : f (s.sup g) = s.sup (f ∘ g) :=\n  Finset.cons_induction_on s (map_bot f) fun i s _ h => by rw [finset.sup_cons, finset.sup_cons, map_sup, h]\n#align map_finset_sup map_finset_sup\n\n",
 "map_finset_inf":
 "@[simp]\ntheorem map_finset_inf [SemilatticeInf α] [OrderTop α] [SemilatticeInf β] [OrderTop β] [inf_top_hom_class F α β] (f : F)\n    (s : Finset ι) (g : ι → α) : f (s.inf g) = s.inf (f ∘ g) :=\n  Finset.cons_induction_on s (map_top f) fun i s _ h => by rw [finset.inf_cons, finset.inf_cons, map_inf, h]\n#align map_finset_inf map_finset_inf\n\n",
 "map_compl'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/-- Special case of `map_compl` for boolean algebras. -/\ntheorem map_compl' (a : α) : f («expr ᶜ» a) = «expr ᶜ» (f a) :=\n  (isCompl_compl.map _).compl_eq.symm\n#align map_compl' map_compl'\n\n",
 "map":
 "theorem is_compl.map (h : IsCompl a b) : IsCompl (f a) (f b) :=\n  ⟨h.1.map _, h.2.map _⟩\n#align is_compl.map is_compl.map\n\n",
 "inf_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem inf_apply (f g : inf_top_hom α β) (a : α) : («expr ⊓ » f g) a = «expr ⊓ » (f a) (g a) :=\n  rfl\n#align inf_apply inf_apply\n\n",
 "id_comp":
 "@[simp]\ntheorem id_comp (f : bounded_lattice_hom α β) : (bounded_lattice_hom.id β).comp f = f :=\n  bounded_lattice_hom.ext fun a => rfl\n#align id_comp id_comp\n\n",
 "id_apply":
 "@[simp]\ntheorem id_apply (a : α) : bounded_lattice_hom.id α a = a :=\n  rfl\n#align id_apply id_apply\n\n",
 "ext":
 "@[ext]\ntheorem ext {f g : bounded_lattice_hom α β} (h : ∀ a, f a = g a) : f = g :=\n  fun_like.ext f g h\n#align ext ext\n\n",
 "dual_id":
 "@[simp]\ntheorem dual_id : (bounded_lattice_hom.id α).dual = bounded_lattice_hom.id _ :=\n  rfl\n#align dual_id dual_id\n\n",
 "dual_comp":
 "@[simp]\ntheorem dual_comp (g : bounded_lattice_hom β γ) (f : bounded_lattice_hom α β) : (g.comp f).dual = g.dual.comp f.dual :=\n  rfl\n#align dual_comp dual_comp\n\n",
 "copy_eq":
 "theorem copy_eq (f : bounded_lattice_hom α β) (f' : α → β) (h : f' = f) : f.copy f' h = f :=\n  fun_like.ext' h\n#align copy_eq copy_eq\n\n",
 "const_apply":
 "@[simp]\ntheorem const_apply (b : β) (a : α) : const α b a = b :=\n  rfl\n#align const_apply const_apply\n\n",
 "comp_id":
 "@[simp]\ntheorem comp_id (f : bounded_lattice_hom α β) : f.comp (bounded_lattice_hom.id α) = f :=\n  bounded_lattice_hom.ext fun a => rfl\n#align comp_id comp_id\n\n",
 "comp_assoc":
 "@[simp]\ntheorem comp_assoc (f : bounded_lattice_hom γ δ) (g : bounded_lattice_hom β γ) (h : bounded_lattice_hom α β) :\n    (f.comp g).comp h = f.comp (g.comp h) :=\n  rfl\n#align comp_assoc comp_assoc\n\n",
 "comp_apply":
 "@[simp]\ntheorem comp_apply (f : bounded_lattice_hom β γ) (g : bounded_lattice_hom α β) (a : α) : (f.comp g) a = f (g a) :=\n  rfl\n#align comp_apply comp_apply\n\n",
 "coe_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem coe_top : «expr⇑ » («expr⊤» : inf_top_hom α β) = «expr⊤» :=\n  rfl\n#align coe_top coe_top\n\n",
 "coe_to_lattice_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_to_lattice_hom (f : F) : «expr⇑ » (to_lattice_hom α β f) = f :=\n  rfl\n#align coe_to_lattice_hom coe_to_lattice_hom\n\n",
 "coe_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem coe_sup (f g : sup_bot_hom α β) : «expr⇑ » («expr ⊔ » f g) = «expr ⊔ » f g :=\n  rfl\n#align coe_sup coe_sup\n\n",
 "coe_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem coe_inf (f g : inf_top_hom α β) : «expr⇑ » («expr ⊓ » f g) = «expr ⊓ » f g :=\n  rfl\n#align coe_inf coe_inf\n\n",
 "coe_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_id : «expr⇑ » (bounded_lattice_hom.id α) = id :=\n  rfl\n#align coe_id coe_id\n\n",
 "coe_copy":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_copy (f : bounded_lattice_hom α β) (f' : α → β) (h : f' = f) : «expr⇑ » (f.copy f' h) = f' :=\n  rfl\n#align coe_copy coe_copy\n\n",
 "coe_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_const (b : β) : «expr⇑ » (const α b) = function.const α b :=\n  rfl\n#align coe_const coe_const\n\n",
 "coe_comp_sup_hom":
 "@[simp]\ntheorem coe_comp_sup_hom (f : bounded_lattice_hom β γ) (g : bounded_lattice_hom α β) :\n    (f.comp g : sup_hom α γ) = (f : sup_hom β γ).comp g :=\n  rfl\n#align coe_comp_sup_hom coe_comp_sup_hom\n\n",
 "coe_comp_lattice_hom":
 "@[simp]\ntheorem coe_comp_lattice_hom (f : bounded_lattice_hom β γ) (g : bounded_lattice_hom α β) :\n    (f.comp g : lattice_hom α γ) = (f : lattice_hom β γ).comp g :=\n  rfl\n#align coe_comp_lattice_hom coe_comp_lattice_hom\n\n",
 "coe_comp_inf_hom":
 "@[simp]\ntheorem coe_comp_inf_hom (f : bounded_lattice_hom β γ) (g : bounded_lattice_hom α β) :\n    (f.comp g : inf_hom α γ) = (f : inf_hom β γ).comp g :=\n  rfl\n#align coe_comp_inf_hom coe_comp_inf_hom\n\n",
 "coe_comp":
 "@[simp]\ntheorem coe_comp (f : bounded_lattice_hom β γ) (g : bounded_lattice_hom α β) : (f.comp g : α → γ) = f ∘ g :=\n  rfl\n#align coe_comp coe_comp\n\n",
 "coe_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem coe_bot : «expr⇑ » («expr⊥» : sup_bot_hom α β) = «expr⊥» :=\n  rfl\n#align coe_bot coe_bot\n\n",
 "cancel_right":
 "theorem cancel_right {g₁ g₂ : bounded_lattice_hom β γ} {f : bounded_lattice_hom α β} (hf : surjective f) :\n    g₁.comp f = g₂.comp f ↔ g₁ = g₂ :=\n  ⟨fun h => bounded_lattice_hom.ext <| hf.forall.2 <| fun_like.ext_iff.1 h, congr_arg _⟩\n#align cancel_right cancel_right\n\n",
 "cancel_left":
 "theorem cancel_left {g : bounded_lattice_hom β γ} {f₁ f₂ : bounded_lattice_hom α β} (hg : injective g) :\n    g.comp f₁ = g.comp f₂ ↔ f₁ = f₂ :=\n  ⟨fun h => ext fun a => hg <| by rw [← comp_apply, h, comp_apply], congr_arg _⟩\n#align cancel_left cancel_left\n\n",
 "bot_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot_apply (a : α) : («expr⊥» : sup_bot_hom α β) a = «expr⊥» :=\n  rfl\n#align bot_apply bot_apply\n\n"}