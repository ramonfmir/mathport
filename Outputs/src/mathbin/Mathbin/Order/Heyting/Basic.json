{"top_sdiff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print top_sdiff' /-\n@[simp]\ntheorem top_sdiff' (a : α) : «expr⊤» \\ a = «expr￢ » a :=\n  coheyting_algebra.top_sdiff _\n#align top_sdiff' top_sdiff'\n-/\n\n",
 "top_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print top_himp /-\n@[simp]\ntheorem top_himp : «expr ⇨ » («expr⊤») a = a :=\n  eq_of_forall_le_iff fun b => by rw [le_himp_iff, inf_top_eq]\n#align top_himp top_himp\n-/\n\n",
 "top_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n@[simp]\ntheorem top_eq : («expr⊤» : PUnit) = unit :=\n  rfl\n#align top_eq top_eq\n\n",
 "toDual_sdiff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print toDual_sdiff /-\n@[simp]\ntheorem toDual_sdiff (a b : α) : toDual (a \\ b) = «expr ⇨ » (toDual b) (toDual a) :=\n  rfl\n#align to_dual_sdiff toDual_sdiff\n-/\n\n",
 "toDual_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print toDual_hnot /-\n@[simp]\ntheorem toDual_hnot (a : α) : toDual («expr￢ » a) = «expr ᶜ» (toDual a) :=\n  rfl\n#align to_dual_hnot toDual_hnot\n-/\n\n",
 "toDual_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print toDual_compl /-\n@[simp]\ntheorem toDual_compl (a : α) : toDual («expr ᶜ» a) = «expr￢ » (toDual a) :=\n  rfl\n#align to_dual_compl toDual_compl\n-/\n\n",
 "sup_sdiff_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sdiff_self /-\n@[simp]\ntheorem sup_sdiff_self (a b : α) : «expr ⊔ » a (b \\ a) = «expr ⊔ » a b :=\n  le_antisymm (sup_le_sup_left sdiff_le _) (sup_le le_sup_left le_sup_sdiff)\n#align sup_sdiff_self sup_sdiff_self\n-/\n\n",
 "sup_sdiff_right_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sdiff_right_self /-\n@[simp]\ntheorem sup_sdiff_right_self : «expr ⊔ » a b \\ b = a \\ b := by rw [sup_sdiff, sdiff_self, sup_bot_eq]\n#align sup_sdiff_right_self sup_sdiff_right_self\n-/\n\n",
 "sup_sdiff_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sdiff_right /-\n@[simp]\ntheorem sup_sdiff_right : «expr ⊔ » (a \\ b) a = a :=\n  sup_of_le_right sdiff_le\n#align sup_sdiff_right sup_sdiff_right\n-/\n\n",
 "sup_sdiff_left_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sdiff_left_self /-\n@[simp]\ntheorem sup_sdiff_left_self : «expr ⊔ » a b \\ a = b \\ a := by rw [sup_comm, sup_sdiff_right_self]\n#align sup_sdiff_left_self sup_sdiff_left_self\n-/\n\n",
 "sup_sdiff_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sdiff_left /-\n@[simp]\ntheorem sup_sdiff_left : «expr ⊔ » a (a \\ b) = a :=\n  sup_of_le_left sdiff_le\n#align sup_sdiff_left sup_sdiff_left\n-/\n\n",
 "sup_sdiff_eq_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sdiff_eq_sup /-\ntheorem sup_sdiff_eq_sup (h : c ≤ a) : «expr ⊔ » a (b \\ c) = «expr ⊔ » a b :=\n  sup_congr_left (sdiff_le.trans le_sup_right) <| le_sup_sdiff.trans <| sup_le_sup_right h _\n#align sup_sdiff_eq_sup sup_sdiff_eq_sup\n-/\n\n",
 "sup_sdiff_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sdiff_distrib /-\ntheorem sup_sdiff_distrib (a b c : α) : «expr ⊔ » a b \\ c = «expr ⊔ » (a \\ c) (b \\ c) :=\n  eq_of_forall_ge_iff fun d => by simp_rw [sdiff_le_iff, sup_le_iff, sdiff_le_iff]\n#align sup_sdiff_distrib sup_sdiff_distrib\n-/\n\n",
 "sup_sdiff_cancel_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print Disjoint.sup_sdiff_cancel_right /-\ntheorem Disjoint.sup_sdiff_cancel_right (h : Disjoint a b) : «expr ⊔ » a b \\ b = a := by\n  rw [sup_sdiff, sdiff_self, sup_bot_eq, h.sdiff_eq_left]\n#align disjoint.sup_sdiff_cancel_right Disjoint.sup_sdiff_cancel_right\n-/\n\n",
 "sup_sdiff_cancel_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print Disjoint.sup_sdiff_cancel_left /-\ntheorem Disjoint.sup_sdiff_cancel_left (h : Disjoint a b) : «expr ⊔ » a b \\ a = b := by\n  rw [sup_sdiff, sdiff_self, bot_sup_eq, h.sdiff_eq_right]\n#align disjoint.sup_sdiff_cancel_left Disjoint.sup_sdiff_cancel_left\n-/\n\n",
 "sup_sdiff_cancel'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sdiff_cancel' /-\n-- cf. `set.union_diff_cancel'`\ntheorem sup_sdiff_cancel' (hab : a ≤ b) (hbc : b ≤ c) : «expr ⊔ » b (c \\ a) = c := by\n  rw [sup_sdiff_eq_sup hab, sup_of_le_right hbc]\n#align sup_sdiff_cancel' sup_sdiff_cancel'\n-/\n\n",
 "sup_sdiff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_sdiff /-\ntheorem sup_sdiff : «expr ⊔ » a b \\ c = «expr ⊔ » (a \\ c) (b \\ c) :=\n  sup_sdiff_distrib _ _ _\n#align sup_sdiff sup_sdiff\n-/\n\n",
 "sup_le_of_le_sdiff_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_le_of_le_sdiff_right /-\ntheorem sup_le_of_le_sdiff_right (h : a ≤ c \\ b) (hbc : b ≤ c) : «expr ⊔ » a b ≤ c :=\n  sup_le (h.trans sdiff_le) hbc\n#align sup_le_of_le_sdiff_right sup_le_of_le_sdiff_right\n-/\n\n",
 "sup_le_of_le_sdiff_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sup_le_of_le_sdiff_left /-\ntheorem sup_le_of_le_sdiff_left (h : b ≤ c \\ a) (hac : a ≤ c) : «expr ⊔ » a b ≤ c :=\n  sup_le hac <| h.trans sdiff_le\n#align sup_le_of_le_sdiff_left sup_le_of_le_sdiff_left\n-/\n\n",
 "sup_hnot_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print sup_hnot_self /-\n@[simp]\ntheorem sup_hnot_self (a : α) : «expr ⊔ » a («expr￢ » a) = «expr⊤» :=\n  Codisjoint.eq_top codisjoint_hnot_right\n#align sup_hnot_self sup_hnot_self\n-/\n\n",
 "sup_himp_self_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print sup_himp_self_right /-\n@[simp]\ntheorem sup_himp_self_right (a b : α) : «expr ⇨ » («expr ⊔ » a b) b = «expr ⇨ » a b := by\n  rw [sup_himp_distrib, himp_self, inf_top_eq]\n#align sup_himp_self_right sup_himp_self_right\n-/\n\n",
 "sup_himp_self_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print sup_himp_self_left /-\n@[simp]\ntheorem sup_himp_self_left (a b : α) : «expr ⇨ » («expr ⊔ » a b) a = «expr ⇨ » b a := by\n  rw [sup_himp_distrib, himp_self, top_inf_eq]\n#align sup_himp_self_left sup_himp_self_left\n-/\n\n",
 "sup_himp_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print sup_himp_distrib /-\ntheorem sup_himp_distrib (a b c : α) : «expr ⇨ » («expr ⊔ » a b) c = «expr ⊓ » («expr ⇨ » a c) («expr ⇨ » b c) :=\n  eq_of_forall_le_iff fun d => by\n    rw [le_inf_iff, le_himp_comm, sup_le_iff]\n    simp_rw [le_himp_comm]\n#align sup_himp_distrib sup_himp_distrib\n-/\n\n",
 "sup_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem sup_eq : «expr ⊔ » a b = unit :=\n  rfl\n#align sup_eq sup_eq\n\n",
 "sup_compl_le_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print sup_compl_le_himp /-\ntheorem sup_compl_le_himp : «expr ⊔ » b («expr ᶜ» a) ≤ «expr ⇨ » a b :=\n  sup_le le_himp compl_le_himp\n#align sup_compl_le_himp sup_compl_le_himp\n-/\n\n",
 "snd_sdiff":
 "#print snd_sdiff /-\n@[simp]\ntheorem snd_sdiff [SDiff α] [SDiff β] (a b : α × β) : (a \\ b).2 = a.2 \\ b.2 :=\n  rfl\n#align snd_sdiff snd_sdiff\n-/\n\n",
 "snd_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print snd_hnot /-\n@[simp]\ntheorem snd_hnot [HNot α] [HNot β] (a : α × β) : («expr￢ » a).2 = «expr￢ » a.2 :=\n  rfl\n#align snd_hnot snd_hnot\n-/\n\n",
 "snd_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print snd_himp /-\n@[simp]\ntheorem snd_himp [HImp α] [HImp β] (a b : α × β) : («expr ⇨ » a b).2 = «expr ⇨ » a.2 b.2 :=\n  rfl\n#align snd_himp snd_himp\n-/\n\n",
 "snd_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print snd_compl /-\n@[simp]\ntheorem snd_compl [HasCompl α] [HasCompl β] (a : α × β) : («expr ᶜ» a).2 = «expr ᶜ» a.2 :=\n  rfl\n#align snd_compl snd_compl\n-/\n\n",
 "sdiff_triangle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_triangle /-\ntheorem sdiff_triangle (a b c : α) : a \\ c ≤ «expr ⊔ » (a \\ b) (b \\ c) :=\n  by\n  rw [sdiff_le_iff, sup_left_comm, ← sdiff_le_iff]\n  exact sdiff_sdiff_le.trans le_sup_sdiff\n#align sdiff_triangle sdiff_triangle\n-/\n\n",
 "sdiff_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print sdiff_top /-\n@[simp]\ntheorem sdiff_top (a : α) : a \\ «expr⊤» = «expr⊥» :=\n  sdiff_eq_bot_iff.2 le_top\n#align sdiff_top sdiff_top\n-/\n\n",
 "sdiff_sup_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_sup_self /-\n@[simp]\ntheorem sdiff_sup_self (a b : α) : «expr ⊔ » (b \\ a) a = «expr ⊔ » b a := by rw [sup_comm, sup_sdiff_self, sup_comm]\n#align sdiff_sup_self sdiff_sup_self\n-/\n\n",
 "sdiff_sup_sdiff_cancel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_sup_sdiff_cancel /-\ntheorem sdiff_sup_sdiff_cancel (hba : b ≤ a) (hcb : c ≤ b) : «expr ⊔ » (a \\ b) (b \\ c) = a \\ c :=\n  (sdiff_triangle _ _ _).antisymm' <| sup_le (sdiff_le_sdiff_left hcb) (sdiff_le_sdiff_right hba)\n#align sdiff_sup_sdiff_cancel sdiff_sup_sdiff_cancel\n-/\n\n",
 "sdiff_sup_cancel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_sup_cancel /-\ntheorem sdiff_sup_cancel (h : b ≤ a) : «expr ⊔ » (a \\ b) b = a := by rw [sup_comm, sup_sdiff_cancel_right h]\n#align sdiff_sup_cancel sdiff_sup_cancel\n-/\n\n",
 "sdiff_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print sdiff_self /-\n@[simp]\ntheorem sdiff_self : a \\ a = «expr⊥» :=\n  le_bot_iff.1 <| sdiff_le_iff.2 le_sup_left\n#align sdiff_self sdiff_self\n-/\n\n",
 "sdiff_sdiff_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print sdiff_sdiff_self /-\n@[simp]\ntheorem sdiff_sdiff_self : (a \\ b) \\ a = «expr⊥» := by rw [sdiff_sdiff_comm, sdiff_self, bot_sdiff]\n#align sdiff_sdiff_self sdiff_sdiff_self\n-/\n\n",
 "sdiff_sdiff_sdiff_le_sdiff":
 "#print sdiff_sdiff_sdiff_le_sdiff /-\n@[simp]\ntheorem sdiff_sdiff_sdiff_le_sdiff : (a \\ b) \\ (a \\ c) ≤ c \\ b :=\n  by\n  rw [sdiff_le_iff, sdiff_le_iff, sup_left_comm, sup_sdiff_self, sup_left_comm, sdiff_sup_self, sup_left_comm]\n  exact le_sup_left\n#align sdiff_sdiff_sdiff_le_sdiff sdiff_sdiff_sdiff_le_sdiff\n-/\n\n",
 "sdiff_sdiff_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_sdiff_left /-\ntheorem sdiff_sdiff_left : (a \\ b) \\ c = a \\ «expr ⊔ » b c :=\n  sdiff_sdiff _ _ _\n#align sdiff_sdiff_left sdiff_sdiff_left\n-/\n\n",
 "sdiff_sdiff_le":
 "#print sdiff_sdiff_le /-\ntheorem sdiff_sdiff_le : a \\ (a \\ b) ≤ b :=\n  sdiff_le_iff.2 le_sdiff_sup\n#align sdiff_sdiff_le sdiff_sdiff_le\n-/\n\n",
 "sdiff_sdiff_comm":
 "#print sdiff_sdiff_comm /-\ntheorem sdiff_sdiff_comm : (a \\ b) \\ c = (a \\ c) \\ b :=\n  sdiff_right_comm _ _ _\n#align sdiff_sdiff_comm sdiff_sdiff_comm\n-/\n\n",
 "sdiff_sdiff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_sdiff /-\ntheorem sdiff_sdiff (a b c : α) : (a \\ b) \\ c = a \\ «expr ⊔ » b c :=\n  eq_of_forall_ge_iff fun d => by simp_rw [sdiff_le_iff, sup_assoc]\n#align sdiff_sdiff sdiff_sdiff\n-/\n\n",
 "sdiff_right_comm":
 "#print sdiff_right_comm /-\ntheorem sdiff_right_comm (a b c : α) : (a \\ b) \\ c = (a \\ c) \\ b := by simp_rw [sdiff_sdiff, sup_comm]\n#align sdiff_right_comm sdiff_right_comm\n-/\n\n",
 "sdiff_le_sdiff_right":
 "#print sdiff_le_sdiff_right /-\ntheorem sdiff_le_sdiff_right (h : a ≤ b) : a \\ c ≤ b \\ c :=\n  sdiff_le_iff.2 <| h.trans <| le_sup_sdiff\n#align sdiff_le_sdiff_right sdiff_le_sdiff_right\n-/\n\n",
 "sdiff_le_sdiff_of_sup_le_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_le_sdiff_of_sup_le_sup_right /-\ntheorem sdiff_le_sdiff_of_sup_le_sup_right (h : «expr ⊔ » a c ≤ «expr ⊔ » b c) : a \\ c ≤ b \\ c :=\n  by\n  rw [← sup_sdiff_right_self, ← @sup_sdiff_right_self _ _ b]\n  exact sdiff_le_sdiff_right h\n#align sdiff_le_sdiff_of_sup_le_sup_right sdiff_le_sdiff_of_sup_le_sup_right\n-/\n\n",
 "sdiff_le_sdiff_of_sup_le_sup_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_le_sdiff_of_sup_le_sup_left /-\ntheorem sdiff_le_sdiff_of_sup_le_sup_left (h : «expr ⊔ » c a ≤ «expr ⊔ » c b) : a \\ c ≤ b \\ c :=\n  by\n  rw [← sup_sdiff_left_self, ← @sup_sdiff_left_self _ _ _ b]\n  exact sdiff_le_sdiff_right h\n#align sdiff_le_sdiff_of_sup_le_sup_left sdiff_le_sdiff_of_sup_le_sup_left\n-/\n\n",
 "sdiff_le_sdiff_left":
 "#print sdiff_le_sdiff_left /-\ntheorem sdiff_le_sdiff_left (h : a ≤ b) : c \\ b ≤ c \\ a :=\n  sdiff_le_iff.2 <| le_sup_sdiff.trans <| sup_le_sup_right h _\n#align sdiff_le_sdiff_left sdiff_le_sdiff_left\n-/\n\n",
 "sdiff_le_sdiff":
 "#print sdiff_le_sdiff /-\ntheorem sdiff_le_sdiff (hab : a ≤ b) (hcd : c ≤ d) : a \\ d ≤ b \\ c :=\n  (sdiff_le_sdiff_right hab).trans <| sdiff_le_sdiff_left hcd\n#align sdiff_le_sdiff sdiff_le_sdiff\n-/\n\n",
 "sdiff_le_inf_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print sdiff_le_inf_hnot /-\ntheorem sdiff_le_inf_hnot : a \\ b ≤ «expr ⊓ » a («expr￢ » b) :=\n  le_inf sdiff_le sdiff_le_hnot\n#align sdiff_le_inf_hnot sdiff_le_inf_hnot\n-/\n\n",
 "sdiff_le_iff_left":
 "#print sdiff_le_iff_left /-\n@[simp]\ntheorem sdiff_le_iff_left : a \\ b ≤ b ↔ a ≤ b := by rw [sdiff_le_iff, sup_idem]\n#align sdiff_le_iff_left sdiff_le_iff_left\n-/\n\n",
 "sdiff_le_iff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_le_iff' /-\ntheorem sdiff_le_iff' : a \\ b ≤ c ↔ a ≤ «expr ⊔ » c b := by rw [sdiff_le_iff, sup_comm]\n#align sdiff_le_iff' sdiff_le_iff'\n-/\n\n",
 "sdiff_le_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_le_iff /-\n-- See note [lower instance priority]\n@[simp]\ntheorem sdiff_le_iff : a \\ b ≤ c ↔ a ≤ «expr ⊔ » b c :=\n  generalized_coheyting_algebra.sdiff_le_iff _ _ _\n#align sdiff_le_iff sdiff_le_iff\n-/\n\n",
 "sdiff_le_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print sdiff_le_hnot /-\ntheorem sdiff_le_hnot : a \\ b ≤ «expr￢ » b :=\n  (sdiff_le_sdiff_right le_top).trans_eq <| top_sdiff' _\n#align sdiff_le_hnot sdiff_le_hnot\n-/\n\n",
 "sdiff_le_comm":
 "#print sdiff_le_comm /-\ntheorem sdiff_le_comm : a \\ b ≤ c ↔ a \\ c ≤ b := by rw [sdiff_le_iff, sdiff_le_iff']\n#align sdiff_le_comm sdiff_le_comm\n-/\n\n",
 "sdiff_le":
 "#print sdiff_le /-\ntheorem sdiff_le : a \\ b ≤ a :=\n  sdiff_le_iff.2 le_sup_right\n#align sdiff_le sdiff_le\n-/\n\n",
 "sdiff_inf_self_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print sdiff_inf_self_right /-\n@[simp]\ntheorem sdiff_inf_self_right (a b : α) : b \\ «expr ⊓ » a b = b \\ a := by rw [sdiff_inf, sdiff_self, sup_bot_eq]\n#align sdiff_inf_self_right sdiff_inf_self_right\n-/\n\n",
 "sdiff_inf_self_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print sdiff_inf_self_left /-\n@[simp]\ntheorem sdiff_inf_self_left (a b : α) : a \\ «expr ⊓ » a b = a \\ b := by rw [sdiff_inf, sdiff_self, bot_sup_eq]\n#align sdiff_inf_self_left sdiff_inf_self_left\n-/\n\n",
 "sdiff_inf_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_inf_distrib /-\ntheorem sdiff_inf_distrib (a b c : α) : a \\ «expr ⊓ » b c = «expr ⊔ » (a \\ b) (a \\ c) :=\n  eq_of_forall_ge_iff fun d => by\n    rw [sup_le_iff, sdiff_le_comm, le_inf_iff]\n    simp_rw [sdiff_le_comm]\n#align sdiff_inf_distrib sdiff_inf_distrib\n-/\n\n",
 "sdiff_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print sdiff_inf /-\n-- cf. `is_compl.inf_sup`\ntheorem sdiff_inf : a \\ «expr ⊓ » b c = «expr ⊔ » (a \\ b) (a \\ c) :=\n  sdiff_inf_distrib _ _ _\n#align sdiff_inf sdiff_inf\n-/\n\n",
 "sdiff_idem":
 "#print sdiff_idem /-\n@[simp]\ntheorem sdiff_idem : (a \\ b) \\ b = a \\ b := by rw [sdiff_sdiff_left, sup_idem]\n#align sdiff_idem sdiff_idem\n-/\n\n",
 "sdiff_eq_right":
 "#print Disjoint.sdiff_eq_right /-\ntheorem Disjoint.sdiff_eq_right (h : Disjoint a b) : b \\ a = b :=\n  h.symm.sdiff_eq_left\n#align disjoint.sdiff_eq_right Disjoint.sdiff_eq_right\n-/\n\n",
 "sdiff_eq_left":
 "#print Disjoint.sdiff_eq_left /-\ntheorem Disjoint.sdiff_eq_left (h : Disjoint a b) : a \\ b = a :=\n  by\n  conv_rhs => rw [← @sdiff_bot _ _ a]\n  rw [← h.eq_bot, sdiff_inf_self_left]\n#align disjoint.sdiff_eq_left Disjoint.sdiff_eq_left\n-/\n\n",
 "sdiff_eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print sdiff_eq_bot_iff /-\n@[simp]\ntheorem sdiff_eq_bot_iff : a \\ b = «expr⊥» ↔ a ≤ b := by rw [← le_bot_iff, sdiff_le_iff, sup_bot_eq]\n#align sdiff_eq_bot_iff sdiff_eq_bot_iff\n-/\n\n",
 "sdiff_eq":
 "#print sdiff_eq /-\n@[simp]\ntheorem sdiff_eq : a \\ b = unit :=\n  rfl\n#align sdiff_eq sdiff_eq\n-/\n\n",
 "sdiff_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print sdiff_bot /-\n@[simp]\ntheorem sdiff_bot : a \\ «expr⊥» = a :=\n  eq_of_forall_ge_iff fun b => by rw [sdiff_le_iff, bot_sup_eq]\n#align sdiff_bot sdiff_bot\n-/\n\n",
 "ofDual_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print ofDual_hnot /-\n@[simp]\ntheorem ofDual_hnot (a : «expr ᵒᵈ» α) : ofDual («expr￢ » a) = «expr ᶜ» (ofDual a) :=\n  rfl\n#align of_dual_hnot ofDual_hnot\n-/\n\n",
 "ofDual_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print ofDual_himp /-\n@[simp]\ntheorem ofDual_himp (a b : «expr ᵒᵈ» α) : ofDual («expr ⇨ » a b) = ofDual b \\ ofDual a :=\n  rfl\n#align of_dual_himp ofDual_himp\n-/\n\n",
 "ofDual_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print ofDual_compl /-\n@[simp]\ntheorem ofDual_compl (a : «expr ᵒᵈ» α) : ofDual («expr ᶜ» a) = «expr￢ » (ofDual a) :=\n  rfl\n#align of_dual_compl ofDual_compl\n-/\n\n",
 "le_sup_sdiff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_sup_sdiff /-\ntheorem le_sup_sdiff : a ≤ «expr ⊔ » b (a \\ b) :=\n  sdiff_le_iff.1 le_rfl\n#align le_sup_sdiff le_sup_sdiff\n-/\n\n",
 "le_sdiff_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print le_sdiff_sup /-\ntheorem le_sdiff_sup : a ≤ «expr ⊔ » (a \\ b) b := by rw [sup_comm, ← sdiff_le_iff]\n#align le_sdiff_sup le_sdiff_sup\n-/\n\n",
 "le_sdiff_of_le_left":
 "#print Disjoint.le_sdiff_of_le_left /-\n/-- See `le_sdiff` for a stronger version in generalised Boolean algebras. -/\ntheorem Disjoint.le_sdiff_of_le_left (hac : Disjoint a c) (hab : a ≤ b) : a ≤ b \\ c :=\n  hac.sdiff_eq_left.ge.trans <| sdiff_le_sdiff_right hab\n#align disjoint.le_sdiff_of_le_left Disjoint.le_sdiff_of_le_left\n-/\n\n",
 "le_hnot_inf_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print le_hnot_inf_hnot /-\ntheorem le_hnot_inf_hnot : «expr￢ » («expr ⊔ » a b) ≤ «expr ⊓ » («expr￢ » a) («expr￢ » b) :=\n  le_inf (hnot_anti le_sup_left) <| hnot_anti le_sup_right\n#align le_hnot_inf_hnot le_hnot_inf_hnot\n-/\n\n",
 "le_himp_iff_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print le_himp_iff_left /-\n-- `p → p → q ↔ p → q`\n@[simp]\ntheorem le_himp_iff_left : a ≤ «expr ⇨ » a b ↔ a ≤ b := by rw [le_himp_iff, inf_idem]\n#align le_himp_iff_left le_himp_iff_left\n-/\n\n",
 "le_himp_iff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print le_himp_iff' /-\n-- `p → q → r ↔ q ∧ p → r`\ntheorem le_himp_iff' : a ≤ «expr ⇨ » b c ↔ «expr ⊓ » b a ≤ c := by rw [le_himp_iff, inf_comm]\n#align le_himp_iff' le_himp_iff'\n-/\n\n",
 "le_himp_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print le_himp_iff /-\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [lower instance priority]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n-- See note [reducible non-instances]\n/- In this section, we'll give interpretations of these results in the Heyting algebra model of\nintuitionistic logic,- where `≤` can be interpreted as \"validates\", `⇨` as \"implies\", `⊓` as \"and\",\n`⊔` as \"or\", `⊥` as \"false\" and `⊤` as \"true\". Note that we confuse `→` and `⊢` because those are\nthe same in this logic.\n\nSee also `Prop.heyting_algebra`. -/\n-- `p → q → r ↔ p ∧ q → r`\n@[simp]\ntheorem le_himp_iff : a ≤ «expr ⇨ » b c ↔ «expr ⊓ » a b ≤ c :=\n  generalized_heyting_algebra.le_himp_iff _ _ _\n#align le_himp_iff le_himp_iff\n-/\n\n",
 "le_himp_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print le_himp_himp /-\ntheorem le_himp_himp : a ≤ «expr ⇨ » («expr ⇨ » a b) b :=\n  le_himp_iff.2 inf_himp_le\n#align le_himp_himp le_himp_himp\n-/\n\n",
 "le_himp_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print le_himp_comm /-\n-- `p → q → r ↔ q → p → r`\ntheorem le_himp_comm : a ≤ «expr ⇨ » b c ↔ b ≤ «expr ⇨ » a c := by rw [le_himp_iff, le_himp_iff']\n#align le_himp_comm le_himp_comm\n-/\n\n",
 "le_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print le_himp /-\n-- `p → q → p`\ntheorem le_himp : a ≤ «expr ⇨ » b a :=\n  le_himp_iff.2 inf_le_left\n#align le_himp le_himp\n-/\n\n",
 "le_compl_iff_disjoint_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print le_compl_iff_disjoint_right /-\ntheorem le_compl_iff_disjoint_right : a ≤ «expr ᶜ» b ↔ Disjoint a b := by\n  rw [← himp_bot, le_himp_iff, disjoint_iff_inf_le]\n#align le_compl_iff_disjoint_right le_compl_iff_disjoint_right\n-/\n\n",
 "le_compl_iff_disjoint_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print le_compl_iff_disjoint_left /-\ntheorem le_compl_iff_disjoint_left : a ≤ «expr ᶜ» b ↔ Disjoint b a :=\n  le_compl_iff_disjoint_right.trans disjoint_comm\n#align le_compl_iff_disjoint_left le_compl_iff_disjoint_left\n-/\n\n",
 "le_compl_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print le_compl_compl /-\ntheorem le_compl_compl : a ≤ «expr ᶜ» («expr ᶜ» a) :=\n  disjoint_compl_right.le_compl_right\n#align le_compl_compl le_compl_compl\n-/\n\n",
 "le_compl_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print le_compl_comm /-\ntheorem le_compl_comm : a ≤ «expr ᶜ» b ↔ b ≤ «expr ᶜ» a := by\n  rw [le_compl_iff_disjoint_right, le_compl_iff_disjoint_left]\n#align le_compl_comm le_compl_comm\n-/\n\n",
 "inf_sdiff_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print inf_sdiff_sup_right /-\n@[simp]\ntheorem inf_sdiff_sup_right : «expr ⊓ » (a \\ c) («expr ⊔ » b a) = a \\ c :=\n  inf_of_le_left <| sdiff_le.trans le_sup_right\n#align inf_sdiff_sup_right inf_sdiff_sup_right\n-/\n\n",
 "inf_sdiff_sup_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print inf_sdiff_sup_left /-\n@[simp]\ntheorem inf_sdiff_sup_left : «expr ⊓ » (a \\ c) («expr ⊔ » a b) = a \\ c :=\n  inf_of_le_left <| sdiff_le.trans le_sup_left\n#align inf_sdiff_sup_left inf_sdiff_sup_left\n-/\n\n",
 "inf_sdiff_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_sdiff_right /-\n@[simp]\ntheorem inf_sdiff_right : «expr ⊓ » a (a \\ b) = a \\ b :=\n  inf_of_le_right sdiff_le\n#align inf_sdiff_right inf_sdiff_right\n-/\n\n",
 "inf_sdiff_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_sdiff_left /-\n@[simp]\ntheorem inf_sdiff_left : «expr ⊓ » (a \\ b) a = a \\ b :=\n  inf_of_le_left sdiff_le\n#align inf_sdiff_left inf_sdiff_left\n-/\n\n",
 "inf_himp_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print inf_himp_le /-\n-- `p ∧ (p → q) → q`\ntheorem inf_himp_le : «expr ⊓ » a («expr ⇨ » a b) ≤ b := by rw [inf_comm, ← le_himp_iff]\n#align inf_himp_le inf_himp_le\n-/\n\n",
 "inf_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print inf_himp /-\n-- `p ∧ (p → q) ↔ p ∧ q`\n@[simp]\ntheorem inf_himp (a b : α) : «expr ⊓ » a («expr ⇨ » a b) = «expr ⊓ » a b :=\n  le_antisymm (le_inf inf_le_left <| by rw [inf_comm, ← le_himp_iff]) <| inf_le_inf_left _ le_himp\n#align inf_himp inf_himp\n-/\n\n",
 "inf_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem inf_eq : «expr ⊓ » a b = unit :=\n  rfl\n#align inf_eq inf_eq\n\n",
 "inf_compl_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print inf_compl_self /-\n@[simp]\ntheorem inf_compl_self (a : α) : «expr ⊓ » a («expr ᶜ» a) = «expr⊥» :=\n  disjoint_compl_right.eq_bot\n#align inf_compl_self inf_compl_self\n-/\n\n",
 "inf_compl_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print inf_compl_eq_bot /-\ntheorem inf_compl_eq_bot : «expr ⊓ » a («expr ᶜ» a) = «expr⊥» :=\n  inf_compl_self _\n#align inf_compl_eq_bot inf_compl_eq_bot\n-/\n\n",
 "hnot_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print hnot_top /-\n@[simp]\ntheorem hnot_top : «expr￢ » («expr⊤» : α) = «expr⊥» := by rw [← top_sdiff', sdiff_self]\n#align hnot_top hnot_top\n-/\n\n",
 "hnot_sup_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print hnot_sup_self /-\n@[simp]\ntheorem hnot_sup_self (a : α) : «expr ⊔ » («expr￢ » a) a = «expr⊤» :=\n  Codisjoint.eq_top codisjoint_hnot_left\n#align hnot_sup_self hnot_sup_self\n-/\n\n",
 "hnot_sdiff_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_sdiff_comm /-\ntheorem hnot_sdiff_comm (a b : α) : «expr￢ » a \\ b = «expr￢ » b \\ a := by simp_rw [← top_sdiff', sdiff_right_comm]\n#align hnot_sdiff_comm hnot_sdiff_comm\n-/\n\n",
 "hnot_sdiff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_sdiff /-\n-- See note [lower instance priority]\n@[simp]\ntheorem hnot_sdiff (a : α) : «expr￢ » a \\ a = «expr￢ » a := by rw [← top_sdiff', sdiff_sdiff, sup_idem]\n#align hnot_sdiff hnot_sdiff\n-/\n\n",
 "hnot_le_iff_codisjoint_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_le_iff_codisjoint_right /-\ntheorem hnot_le_iff_codisjoint_right : «expr￢ » a ≤ b ↔ Codisjoint a b := by\n  rw [← top_sdiff', sdiff_le_iff, codisjoint_iff_le_sup]\n#align hnot_le_iff_codisjoint_right hnot_le_iff_codisjoint_right\n-/\n\n",
 "hnot_le_iff_codisjoint_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_le_iff_codisjoint_left /-\ntheorem hnot_le_iff_codisjoint_left : «expr￢ » a ≤ b ↔ Codisjoint b a :=\n  hnot_le_iff_codisjoint_right.trans Codisjoint_comm\n#align hnot_le_iff_codisjoint_left hnot_le_iff_codisjoint_left\n-/\n\n",
 "hnot_le_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_le_hnot /-\ntheorem hnot_le_hnot (h : a ≤ b) : «expr￢ » b ≤ «expr￢ » a :=\n  hnot_anti h\n#align hnot_le_hnot hnot_le_hnot\n-/\n\n",
 "hnot_le_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_le_comm /-\ntheorem hnot_le_comm : «expr￢ » a ≤ b ↔ «expr￢ » b ≤ a := by\n  rw [hnot_le_iff_codisjoint_right, hnot_le_iff_codisjoint_left]\n#align hnot_le_comm hnot_le_comm\n-/\n\n",
 "hnot_inf_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_inf_distrib /-\ntheorem hnot_inf_distrib (a b : α) : «expr￢ » («expr ⊓ » a b) = «expr ⊔ » («expr￢ » a) («expr￢ » b) := by\n  simp_rw [← top_sdiff', sdiff_inf_distrib]\n#align hnot_inf_distrib hnot_inf_distrib\n-/\n\n",
 "hnot_hnot_sup_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_hnot_sup_distrib /-\ntheorem hnot_hnot_sup_distrib (a b : α) :\n    «expr￢ » («expr￢ » («expr ⊔ » a b)) = «expr ⊔ » («expr￢ » («expr￢ » a)) («expr￢ » («expr￢ » b)) :=\n  by\n  refine' ((hnot_inf_distrib _ _).ge.trans <| hnot_anti le_hnot_inf_hnot).antisymm' _\n  rw [hnot_le_iff_codisjoint_left, codisjoint_assoc, codisjoint_hnot_hnot_left_iff, codisjoint_left_comm,\n    codisjoint_hnot_hnot_left_iff, ← codisjoint_assoc, sup_comm]\n  exact codisjoint_hnot_right\n#align hnot_hnot_sup_distrib hnot_hnot_sup_distrib\n-/\n\n",
 "hnot_hnot_sdiff_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_hnot_sdiff_distrib /-\ntheorem hnot_hnot_sdiff_distrib (a b : α) :\n    «expr￢ » («expr￢ » (a \\ b)) = «expr￢ » («expr￢ » a) \\ «expr￢ » («expr￢ » b) :=\n  by\n  refine' le_antisymm _ _\n  · refine' hnot_le_comm.1 ((hnot_anti sdiff_le_inf_hnot).trans' _)\n    rw [hnot_inf_distrib, hnot_le_iff_codisjoint_right, codisjoint_left_comm, ← hnot_le_iff_codisjoint_right]\n    exact le_sdiff_sup\n  · rw [sdiff_le_iff, ← hnot_hnot_sup_distrib]\n    exact hnot_anti (hnot_anti le_sup_sdiff)\n#align hnot_hnot_sdiff_distrib hnot_hnot_sdiff_distrib\n-/\n\n",
 "hnot_hnot_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_hnot_le /-\ntheorem hnot_hnot_le : «expr￢ » («expr￢ » a) ≤ a :=\n  codisjoint_hnot_right.hnot_le_left\n#align hnot_hnot_le hnot_hnot_le\n-/\n\n",
 "hnot_hnot_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print hnot_hnot_hnot /-\n@[simp]\ntheorem hnot_hnot_hnot (a : α) : «expr￢ » («expr￢ » («expr￢ » a)) = «expr￢ » a :=\n  hnot_hnot_le.antisymm <| hnot_anti hnot_hnot_le\n#align hnot_hnot_hnot hnot_hnot_hnot\n-/\n\n",
 "hnot_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n@[simp, nolint simp_nf]\ntheorem hnot_eq : «expr￢ » a = unit :=\n  rfl\n#align hnot_eq hnot_eq\n\n",
 "hnot_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\ntheorem hnot_def [∀ i, HNot (π i)] (a : ∀ i, π i) : «expr￢ » a = fun i => «expr￢ » (a i) :=\n  rfl\n#align hnot_def hnot_def\n\n",
 "hnot_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print hnot_bot /-\n@[simp]\ntheorem hnot_bot : «expr￢ » («expr⊥» : α) = «expr⊤» :=\n  eq_of_forall_ge_iff fun a => by rw [hnot_le_iff_codisjoint_left, codisjoint_bot, top_le_iff]\n#align hnot_bot hnot_bot\n-/\n\n",
 "hnot_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n@[simp]\ntheorem hnot_apply [∀ i, HNot (π i)] (a : ∀ i, π i) (i : ι) : («expr￢ » a) i = «expr￢ » (a i) :=\n  rfl\n#align hnot_apply hnot_apply\n\n",
 "hnot_anti":
 "#print hnot_anti /-\ntheorem hnot_anti : Antitone (hnot : α → α) := fun a b h => hnot_le_comm.1 <| hnot_hnot_le.trans h\n#align hnot_anti hnot_anti\n-/\n\n",
 "himp_triangle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_triangle /-\ntheorem himp_triangle (a b c : α) : «expr ⊓ » («expr ⇨ » a b) («expr ⇨ » b c) ≤ «expr ⇨ » a c :=\n  by\n  rw [le_himp_iff, inf_right_comm, ← le_himp_iff]\n  exact himp_inf_le.trans le_himp_himp\n#align himp_triangle himp_triangle\n-/\n\n",
 "himp_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print himp_top /-\n-- `p → true`, `true → p ↔ p`\n@[simp]\ntheorem himp_top : «expr ⇨ » a («expr⊤») = «expr⊤» :=\n  himp_eq_top_iff.2 le_top\n#align himp_top himp_top\n-/\n\n",
 "himp_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print himp_self /-\n-- `p → p`\n@[simp]\ntheorem himp_self : «expr ⇨ » a a = «expr⊤» :=\n  top_le_iff.1 <| le_himp_iff.2 inf_le_right\n#align himp_self himp_self\n-/\n\n",
 "himp_left_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_left_comm /-\n-- `p → q → r ↔ q → p → r`\ntheorem himp_left_comm (a b c : α) : «expr ⇨ » a («expr ⇨ » b c) = «expr ⇨ » b («expr ⇨ » a c) := by\n  simp_rw [himp_himp, inf_comm]\n#align himp_left_comm himp_left_comm\n-/\n\n",
 "himp_le_of_right_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print Codisjoint.himp_le_of_right_le /-\n/-- See `himp_le` for a stronger version in Boolean algebras. -/\ntheorem Codisjoint.himp_le_of_right_le (hac : Codisjoint a c) (hba : b ≤ a) : «expr ⇨ » c b ≤ a :=\n  (himp_le_himp_left hba).trans_eq hac.himp_eq_right\n#align codisjoint.himp_le_of_right_le Codisjoint.himp_le_of_right_le\n-/\n\n",
 "himp_le_himp_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_le_himp_right /-\ntheorem himp_le_himp_right (h : a ≤ b) : «expr ⇨ » b c ≤ «expr ⇨ » a c :=\n  le_himp_iff.2 <| (inf_le_inf_left _ h).trans himp_inf_le\n#align himp_le_himp_right himp_le_himp_right\n-/\n\n",
 "himp_le_himp_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_le_himp_left /-\ntheorem himp_le_himp_left (h : a ≤ b) : «expr ⇨ » c a ≤ «expr ⇨ » c b :=\n  le_himp_iff.2 <| himp_inf_le.trans h\n#align himp_le_himp_left himp_le_himp_left\n-/\n\n",
 "himp_le_himp_himp_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_le_himp_himp_himp /-\n-- `(q → r) → (p → q) → q → r`\n@[simp]\ntheorem himp_le_himp_himp_himp : «expr ⇨ » b c ≤ «expr ⇨ » («expr ⇨ » a b) («expr ⇨ » a c) :=\n  by\n  rw [le_himp_iff, le_himp_iff, inf_assoc, himp_inf_self, ← inf_assoc, himp_inf_self, inf_assoc]\n  exact inf_le_left\n#align himp_le_himp_himp_himp himp_le_himp_himp_himp\n-/\n\n",
 "himp_le_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_le_himp /-\ntheorem himp_le_himp (hab : a ≤ b) (hcd : c ≤ d) : «expr ⇨ » b c ≤ «expr ⇨ » a d :=\n  (himp_le_himp_right hab).trans <| himp_le_himp_left hcd\n#align himp_le_himp himp_le_himp\n-/\n\n",
 "himp_inf_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print himp_inf_self /-\n-- `(p → q) ∧ p ↔ q ∧ p`\n@[simp]\ntheorem himp_inf_self (a b : α) : «expr ⊓ » («expr ⇨ » a b) a = «expr ⊓ » b a := by rw [inf_comm, inf_himp, inf_comm]\n#align himp_inf_self himp_inf_self\n-/\n\n",
 "himp_inf_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_inf_le /-\n-- `(p → q) ∧ p → q`\ntheorem himp_inf_le : «expr ⊓ » («expr ⇨ » a b) a ≤ b :=\n  le_himp_iff.1 le_rfl\n#align himp_inf_le himp_inf_le\n-/\n\n",
 "himp_inf_himp_cancel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_inf_himp_cancel /-\ntheorem himp_inf_himp_cancel (hba : b ≤ a) (hcb : c ≤ b) : «expr ⊓ » («expr ⇨ » a b) («expr ⇨ » b c) = «expr ⇨ » a c :=\n  (himp_triangle _ _ _).antisymm <| le_inf (himp_le_himp_left hcb) (himp_le_himp_right hba)\n#align himp_inf_himp_cancel himp_inf_himp_cancel\n-/\n\n",
 "himp_inf_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_inf_distrib /-\ntheorem himp_inf_distrib (a b c : α) : «expr ⇨ » a («expr ⊓ » b c) = «expr ⊓ » («expr ⇨ » a b) («expr ⇨ » a c) :=\n  eq_of_forall_le_iff fun d => by simp_rw [le_himp_iff, le_inf_iff, le_himp_iff]\n#align himp_inf_distrib himp_inf_distrib\n-/\n\n",
 "himp_inf_cancel_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print Codisjoint.himp_inf_cancel_right /-\ntheorem Codisjoint.himp_inf_cancel_right (h : Codisjoint a b) : «expr ⇨ » a («expr ⊓ » a b) = b := by\n  rw [himp_inf_distrib, himp_self, top_inf_eq, h.himp_eq_left]\n#align codisjoint.himp_inf_cancel_right Codisjoint.himp_inf_cancel_right\n-/\n\n",
 "himp_inf_cancel_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print Codisjoint.himp_inf_cancel_left /-\ntheorem Codisjoint.himp_inf_cancel_left (h : Codisjoint a b) : «expr ⇨ » b («expr ⊓ » a b) = a := by\n  rw [himp_inf_distrib, himp_self, inf_top_eq, h.himp_eq_right]\n#align codisjoint.himp_inf_cancel_left Codisjoint.himp_inf_cancel_left\n-/\n\n",
 "himp_iff_imp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_iff_imp /-\n@[simp]\ntheorem himp_iff_imp (p q : Prop) : «expr ⇨ » p q ↔ p → q :=\n  iff.rfl\n#align himp_iff_imp himp_iff_imp\n-/\n\n",
 "himp_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_idem /-\n@[simp]\ntheorem himp_idem : «expr ⇨ » b («expr ⇨ » b a) = «expr ⇨ » b a := by rw [himp_himp, inf_idem]\n#align himp_idem himp_idem\n-/\n\n",
 "himp_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print himp_himp /-\n-- `p → q → r ↔ p ∧ q → r`\ntheorem himp_himp (a b c : α) : «expr ⇨ » a («expr ⇨ » b c) = «expr ⇨ » («expr ⊓ » a b) c :=\n  eq_of_forall_le_iff fun d => by simp_rw [le_himp_iff, inf_assoc]\n#align himp_himp himp_himp\n-/\n\n",
 "himp_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print himp_eq_top_iff /-\n/-- The **deduction theorem** in the Heyting algebra model of intuitionistic logic:\nan implication holds iff the conclusion follows from the hypothesis. -/\n@[simp]\ntheorem himp_eq_top_iff : «expr ⇨ » a b = «expr⊤» ↔ a ≤ b := by rw [← top_le_iff, le_himp_iff, top_inf_eq]\n#align himp_eq_top_iff himp_eq_top_iff\n-/\n\n",
 "himp_eq_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print Codisjoint.himp_eq_right /-\ntheorem Codisjoint.himp_eq_right (h : Codisjoint a b) : «expr ⇨ » b a = a :=\n  by\n  conv_rhs => rw [← @top_himp _ _ a]\n  rw [← h.eq_top, sup_himp_self_left]\n#align codisjoint.himp_eq_right Codisjoint.himp_eq_right\n-/\n\n",
 "himp_eq_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print Codisjoint.himp_eq_left /-\ntheorem Codisjoint.himp_eq_left (h : Codisjoint a b) : «expr ⇨ » a b = b :=\n  h.symm.himp_eq_right\n#align codisjoint.himp_eq_left Codisjoint.himp_eq_left\n-/\n\n",
 "himp_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print himp_eq /-\n-- eligible for `dsimp`\n@[simp]\ntheorem himp_eq : «expr ⇨ » a b = unit :=\n  rfl\n#align himp_eq himp_eq\n-/\n\n",
 "himp_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\ntheorem himp_def [∀ i, HImp (π i)] (a b : ∀ i, π i) : «expr ⇨ » a b = fun i => «expr ⇨ » (a i) (b i) :=\n  rfl\n#align himp_def himp_def\n\n",
 "himp_compl_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print himp_compl_comm /-\n-- `p → ¬ q ↔ q → ¬ p`\ntheorem himp_compl_comm (a b : α) : «expr ⇨ » a («expr ᶜ» b) = «expr ⇨ » b («expr ᶜ» a) := by\n  simp_rw [← himp_bot, himp_left_comm]\n#align himp_compl_comm himp_compl_comm\n-/\n\n",
 "himp_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print himp_compl /-\n-- `p → ¬ p ↔ ¬ p`\n@[simp]\ntheorem himp_compl (a : α) : «expr ⇨ » a («expr ᶜ» a) = «expr ᶜ» a := by rw [← himp_bot, himp_himp, inf_idem]\n#align himp_compl himp_compl\n-/\n\n",
 "himp_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print himp_bot /-\n-- See note [lower instance priority]\n@[simp]\ntheorem himp_bot (a : α) : «expr ⇨ » a («expr⊥») = «expr ᶜ» a :=\n  heyting_algebra.himp_bot _\n#align himp_bot himp_bot\n-/\n\n",
 "himp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n@[simp]\ntheorem himp_apply [∀ i, HImp (π i)] (a b : ∀ i, π i) (i : ι) : («expr ⇨ » a b) i = «expr ⇨ » (a i) (b i) :=\n  rfl\n#align himp_apply himp_apply\n\n",
 "fst_sdiff":
 "#print fst_sdiff /-\n@[simp]\ntheorem fst_sdiff [SDiff α] [SDiff β] (a b : α × β) : (a \\ b).1 = a.1 \\ b.1 :=\n  rfl\n#align fst_sdiff fst_sdiff\n-/\n\n",
 "fst_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print fst_hnot /-\n@[simp]\ntheorem fst_hnot [HNot α] [HNot β] (a : α × β) : («expr￢ » a).1 = «expr￢ » a.1 :=\n  rfl\n#align fst_hnot fst_hnot\n-/\n\n",
 "fst_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print fst_himp /-\n/-\nCopyright (c) 2022 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\n@[simp]\ntheorem fst_himp [HImp α] [HImp β] (a b : α × β) : («expr ⇨ » a b).1 = «expr ⇨ » a.1 b.1 :=\n  rfl\n#align fst_himp fst_himp\n-/\n\n",
 "fst_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print fst_compl /-\n@[simp]\ntheorem fst_compl [HasCompl α] [HasCompl β] (a : α × β) : («expr ᶜ» a).1 = «expr ᶜ» a.1 :=\n  rfl\n#align fst_compl fst_compl\n-/\n\n",
 "eq_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print IsCompl.eq_hnot /-\ntheorem IsCompl.eq_hnot (h : IsCompl a b) : a = «expr￢ » b :=\n  h.2.hnot_le_left.antisymm' <| Disjoint.le_of_codisjoint h.1 codisjoint_hnot_right\n#align is_compl.eq_hnot IsCompl.eq_hnot\n-/\n\n",
 "eq_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print IsCompl.eq_compl /-\ntheorem IsCompl.eq_compl (h : IsCompl a b) : a = «expr ᶜ» b :=\n  h.1.le_compl_right.antisymm <| Disjoint.le_of_codisjoint disjoint_compl_left h.2.symm\n#align is_compl.eq_compl IsCompl.eq_compl\n-/\n\n",
 "disjoint_sdiff_right":
 "#print Disjoint.disjoint_sdiff_right /-\ntheorem Disjoint.disjoint_sdiff_right (h : Disjoint a b) : Disjoint a (b \\ c) :=\n  h.mono_right sdiff_le\n#align disjoint.disjoint_sdiff_right Disjoint.disjoint_sdiff_right\n-/\n\n",
 "disjoint_sdiff_left":
 "#print Disjoint.disjoint_sdiff_left /-\ntheorem Disjoint.disjoint_sdiff_left (h : Disjoint a b) : Disjoint (a \\ c) b :=\n  h.mono_left sdiff_le\n#align disjoint.disjoint_sdiff_left Disjoint.disjoint_sdiff_left\n-/\n\n",
 "disjoint_compl_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print LE.le.disjoint_compl_right /-\ntheorem LE.le.disjoint_compl_right (h : a ≤ b) : Disjoint a («expr ᶜ» b) :=\n  disjoint_compl_right.mono_left h\n#align has_le.le.disjoint_compl_right LE.le.disjoint_compl_right\n-/\n\n",
 "disjoint_compl_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print LE.le.disjoint_compl_left /-\ntheorem LE.le.disjoint_compl_left (h : b ≤ a) : Disjoint («expr ᶜ» a) b :=\n  disjoint_compl_left.mono_right h\n#align has_le.le.disjoint_compl_left LE.le.disjoint_compl_left\n-/\n\n",
 "disjoint_compl_compl_right_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print disjoint_compl_compl_right_iff /-\n@[simp]\ntheorem disjoint_compl_compl_right_iff : Disjoint a («expr ᶜ» («expr ᶜ» b)) ↔ Disjoint a b := by\n  simp_rw [← le_compl_iff_disjoint_right, compl_compl_compl]\n#align disjoint_compl_compl_right_iff disjoint_compl_compl_right_iff\n-/\n\n",
 "disjoint_compl_compl_left_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print disjoint_compl_compl_left_iff /-\n@[simp]\ntheorem disjoint_compl_compl_left_iff : Disjoint («expr ᶜ» («expr ᶜ» a)) b ↔ Disjoint a b := by\n  simp_rw [← le_compl_iff_disjoint_left, compl_compl_compl]\n#align disjoint_compl_compl_left_iff disjoint_compl_compl_left_iff\n-/\n\n",
 "compl_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print compl_unique /-\ntheorem compl_unique (h₀ : «expr ⊓ » a b = «expr⊥») (h₁ : «expr ⊔ » a b = «expr⊤») : «expr ᶜ» a = b :=\n  (IsCompl.of_eq h₀ h₁).compl_eq\n#align compl_unique compl_unique\n-/\n\n",
 "compl_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print compl_top /-\n@[simp]\ntheorem compl_top : «expr ᶜ» («expr⊤» : α) = «expr⊥» :=\n  eq_of_forall_le_iff fun a => by rw [le_compl_iff_disjoint_right, disjoint_top, le_bot_iff]\n#align compl_top compl_top\n-/\n\n",
 "compl_sup_le_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print compl_sup_le_himp /-\ntheorem compl_sup_le_himp : «expr ⊔ » («expr ᶜ» a) b ≤ «expr ⇨ » a b :=\n  sup_le compl_le_himp le_himp\n#align compl_sup_le_himp compl_sup_le_himp\n-/\n\n",
 "compl_sup_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print compl_sup_distrib /-\ntheorem compl_sup_distrib (a b : α) : «expr ᶜ» («expr ⊔ » a b) = «expr ⊓ » («expr ᶜ» a) («expr ᶜ» b) := by\n  simp_rw [← himp_bot, sup_himp_distrib]\n#align compl_sup_distrib compl_sup_distrib\n-/\n\n",
 "compl_sup_compl_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print compl_sup_compl_le /-\ntheorem compl_sup_compl_le : «expr ⊔ » («expr ᶜ» a) («expr ᶜ» b) ≤ «expr ᶜ» («expr ⊓ » a b) :=\n  sup_le (compl_anti inf_le_left) <| compl_anti inf_le_right\n#align compl_sup_compl_le compl_sup_compl_le\n-/\n\n",
 "compl_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print compl_sup /-\n@[simp]\ntheorem compl_sup : «expr ᶜ» («expr ⊔ » a b) = «expr ⊓ » («expr ᶜ» a) («expr ᶜ» b) :=\n  compl_sup_distrib _ _\n#align compl_sup compl_sup\n-/\n\n",
 "compl_le_hnot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print compl_le_hnot /-\ntheorem compl_le_hnot : «expr ᶜ» a ≤ «expr￢ » a :=\n  (disjoint_compl_left : Disjoint _ a).le_of_codisjoint codisjoint_hnot_right\n#align compl_le_hnot compl_le_hnot\n-/\n\n",
 "compl_le_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n#print compl_le_himp /-\ntheorem compl_le_himp : «expr ᶜ» a ≤ «expr ⇨ » a b :=\n  (himp_bot _).ge.trans <| himp_le_himp_left bot_le\n#align compl_le_himp compl_le_himp\n-/\n\n",
 "compl_le_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print compl_le_compl /-\ntheorem compl_le_compl (h : a ≤ b) : «expr ᶜ» b ≤ «expr ᶜ» a :=\n  compl_anti h\n#align compl_le_compl compl_le_compl\n-/\n\n",
 "compl_inf_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print compl_inf_self /-\n@[simp]\ntheorem compl_inf_self (a : α) : «expr ⊓ » («expr ᶜ» a) a = «expr⊥» :=\n  disjoint_compl_left.eq_bot\n#align compl_inf_self compl_inf_self\n-/\n\n",
 "compl_inf_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print compl_inf_eq_bot /-\ntheorem compl_inf_eq_bot : «expr ⊓ » («expr ᶜ» a) a = «expr⊥» :=\n  compl_inf_self _\n#align compl_inf_eq_bot compl_inf_eq_bot\n-/\n\n",
 "compl_iff_not":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print compl_iff_not /-\n@[simp]\ntheorem compl_iff_not (p : Prop) : «expr ᶜ» p ↔ ¬p :=\n  iff.rfl\n#align compl_iff_not compl_iff_not\n-/\n\n",
 "compl_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem compl_eq : «expr ᶜ» a = unit :=\n  rfl\n#align compl_eq compl_eq\n\n",
 "compl_compl_inf_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print compl_compl_inf_distrib /-\ntheorem compl_compl_inf_distrib (a b : α) :\n    «expr ᶜ» («expr ᶜ» («expr ⊓ » a b)) = «expr ⊓ » («expr ᶜ» («expr ᶜ» a)) («expr ᶜ» («expr ᶜ» b)) :=\n  by\n  refine' ((compl_anti compl_sup_compl_le).trans (compl_sup_distrib _ _).le).antisymm _\n  rw [le_compl_iff_disjoint_right, disjoint_assoc, disjoint_compl_compl_left_iff, disjoint_left_comm,\n    disjoint_compl_compl_left_iff, ← disjoint_assoc, inf_comm]\n  exact disjoint_compl_right\n#align compl_compl_inf_distrib compl_compl_inf_distrib\n-/\n\n",
 "compl_compl_himp_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print compl_compl_himp_distrib /-\ntheorem compl_compl_himp_distrib (a b : α) :\n    «expr ᶜ» («expr ᶜ» («expr ⇨ » a b)) = «expr ⇨ » («expr ᶜ» («expr ᶜ» a)) («expr ᶜ» («expr ᶜ» b)) :=\n  by\n  refine' le_antisymm _ _\n  · rw [le_himp_iff, ← compl_compl_inf_distrib]\n    exact compl_anti (compl_anti himp_inf_le)\n  · refine' le_compl_comm.1 ((compl_anti compl_sup_le_himp).trans _)\n    rw [compl_sup_distrib, le_compl_iff_disjoint_right, disjoint_right_comm, ← le_compl_iff_disjoint_right]\n    exact inf_himp_le\n#align compl_compl_himp_distrib compl_compl_himp_distrib\n-/\n\n",
 "compl_compl_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print compl_compl_compl /-\n@[simp]\ntheorem compl_compl_compl (a : α) : «expr ᶜ» («expr ᶜ» («expr ᶜ» a)) = «expr ᶜ» a :=\n  (compl_anti le_compl_compl).antisymm le_compl_compl\n#align compl_compl_compl compl_compl_compl\n-/\n\n",
 "compl_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print compl_bot /-\n@[simp]\ntheorem compl_bot : «expr ᶜ» («expr⊥» : α) = «expr⊤» := by rw [← himp_bot, himp_self]\n#align compl_bot compl_bot\n-/\n\n",
 "compl_anti":
 "#print compl_anti /-\ntheorem compl_anti : Antitone (compl : α → α) := fun a b h => le_compl_comm.1 <| h.trans le_compl_compl\n#align compl_anti compl_anti\n-/\n\n",
 "codisjoint_hnot_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print LE.le.codisjoint_hnot_right /-\ntheorem LE.le.codisjoint_hnot_right (h : b ≤ a) : Codisjoint a («expr￢ » b) :=\n  codisjoint_hnot_right.mono_left h\n#align has_le.le.codisjoint_hnot_right LE.le.codisjoint_hnot_right\n-/\n\n",
 "codisjoint_hnot_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print LE.le.codisjoint_hnot_left /-\ntheorem LE.le.codisjoint_hnot_left (h : a ≤ b) : Codisjoint («expr￢ » a) b :=\n  codisjoint_hnot_left.mono_right h\n#align has_le.le.codisjoint_hnot_left LE.le.codisjoint_hnot_left\n-/\n\n",
 "codisjoint_hnot_hnot_right_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print codisjoint_hnot_hnot_right_iff /-\n@[simp]\ntheorem codisjoint_hnot_hnot_right_iff : Codisjoint a («expr￢ » («expr￢ » b)) ↔ Codisjoint a b := by\n  simp_rw [← hnot_le_iff_codisjoint_left, hnot_hnot_hnot]\n#align codisjoint_hnot_hnot_right_iff codisjoint_hnot_hnot_right_iff\n-/\n\n",
 "codisjoint_hnot_hnot_left_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr￢ » -/\n#print codisjoint_hnot_hnot_left_iff /-\n@[simp]\ntheorem codisjoint_hnot_hnot_left_iff : Codisjoint («expr￢ » («expr￢ » a)) b ↔ Codisjoint a b := by\n  simp_rw [← hnot_le_iff_codisjoint_right, hnot_hnot_hnot]\n#align codisjoint_hnot_hnot_left_iff codisjoint_hnot_hnot_left_iff\n-/\n\n",
 "bot_sdiff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print bot_sdiff /-\n@[simp]\ntheorem bot_sdiff : «expr⊥» \\ a = «expr⊥» :=\n  sdiff_eq_bot_iff.2 bot_le\n#align bot_sdiff bot_sdiff\n-/\n\n",
 "bot_himp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇨ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print bot_himp /-\n@[simp]\ntheorem bot_himp (a : α) : «expr ⇨ » («expr⊥») a = «expr⊤» :=\n  himp_eq_top_iff.2 bot_le\n#align bot_himp bot_himp\n-/\n\n",
 "bot_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot_eq : («expr⊥» : PUnit) = unit :=\n  rfl\n#align bot_eq bot_eq\n\n"}