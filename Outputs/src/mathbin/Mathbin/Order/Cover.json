{"wcovby_of_le_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print wcovby_of_le_of_le /-\ntheorem wcovby_of_le_of_le (h1 : a ≤ b) (h2 : b ≤ a) : «expr ⩿ » a b :=\n  ⟨h1, fun c hac hcb => (hac.trans hcb).not_le h2⟩\n#align wcovby_of_le_of_le wcovby_of_le_of_le\n-/\n\n",
 "wcovby_of_eq_or_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print wcovby_of_eq_or_eq /-\ntheorem wcovby_of_eq_or_eq (hab : a ≤ b) (h : ∀ c, a ≤ c → c ≤ b → c = a ∨ c = b) : «expr ⩿ » a b :=\n  ⟨hab, fun c ha hb => (h c ha.le hb.le).elim ha.ne' hb.ne⟩\n#align wcovby_of_eq_or_eq wcovby_of_eq_or_eq\n-/\n\n",
 "wcovby_insert":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\ntheorem wcovby_insert (x : α) (s : set α) : «expr ⩿ » s (insert x s) :=\n  by\n  refine' wcovby_of_eq_or_eq (subset_insert x s) fun t hst h2t => _\n  by_cases h : x ∈ t\n  · exact or.inr (subset_antisymm h2t <| insert_subset.mpr ⟨h, hst⟩)\n  · refine' or.inl (subset_antisymm _ hst)\n    rwa [← diff_singleton_eq_self h, diff_singleton_subset_iff]\n#align wcovby_insert wcovby_insert\n\n",
 "wcovby_iff_le_and_eq_or_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print wcovby_iff_le_and_eq_or_eq /-\n/-- An `iff` version of `wcovby.eq_or_eq` and `wcovby_of_eq_or_eq`. -/\ntheorem wcovby_iff_le_and_eq_or_eq : «expr ⩿ » a b ↔ a ≤ b ∧ ∀ c, a ≤ c → c ≤ b → c = a ∨ c = b :=\n  ⟨fun h => ⟨h.le, fun c => h.eq_or_eq⟩, and.rec wcovby_of_eq_or_eq⟩\n#align wcovby_iff_le_and_eq_or_eq wcovby_iff_le_and_eq_or_eq\n-/\n\n",
 "wcovby_iff_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Wcovby.wcovby_iff_le /-\ntheorem Wcovby.wcovby_iff_le (hab : «expr ⩿ » a b) : «expr ⩿ » b a ↔ b ≤ a :=\n  ⟨fun h => h.le, fun h => h.wcovby_of_le hab.le⟩\n#align wcovby.wcovby_iff_le Wcovby.wcovby_iff_le\n-/\n\n",
 "wcovby_iff_eq_or_covby":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print wcovby_iff_eq_or_covby /-\ntheorem wcovby_iff_eq_or_covby : «expr ⩿ » a b ↔ a = b ∨ «expr ⋖ » a b :=\n  wcovby_iff_covby_or_eq.trans or_comm\n#align wcovby_iff_eq_or_covby wcovby_iff_eq_or_covby\n-/\n\n",
 "wcovby_iff_covby_or_le_and_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print wcovby_iff_covby_or_le_and_le /-\ntheorem wcovby_iff_covby_or_le_and_le : «expr ⩿ » a b ↔ «expr ⋖ » a b ∨ a ≤ b ∧ b ≤ a :=\n  ⟨fun h => or_iff_not_imp_right.mpr fun h' => h.covby_of_not_le fun hba => h' ⟨h.le, hba⟩, fun h' =>\n    h'.elim (fun h => h.wcovby) fun h => h.1.wcovby_of_le h.2⟩\n#align wcovby_iff_covby_or_le_and_le wcovby_iff_covby_or_le_and_le\n-/\n\n",
 "wcovby_iff_covby_or_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print wcovby_iff_covby_or_eq /-\ntheorem wcovby_iff_covby_or_eq : «expr ⩿ » a b ↔ «expr ⋖ » a b ∨ a = b := by\n  rw [le_antisymm_iff, wcovby_iff_covby_or_le_and_le]\n#align wcovby_iff_covby_or_eq wcovby_iff_covby_or_eq\n-/\n\n",
 "wcovby_iff_Ioo_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print wcovby_iff_Ioo_eq /-\ntheorem wcovby_iff_Ioo_eq : «expr ⩿ » a b ↔ a ≤ b ∧ Ioo a b = ∅ :=\n  and_congr_right' <| by simp [eq_empty_iff_forall_not_mem]\n#align wcovby_iff_Ioo_eq wcovby_iff_Ioo_eq\n-/\n\n",
 "wcovby_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\ntheorem wcovby_iff : «expr ⩿ » x y ↔ «expr ⩿ » x.1 y.1 ∧ x.2 = y.2 ∨ «expr ⩿ » x.2 y.2 ∧ x.1 = y.1 :=\n  by\n  cases x\n  cases y\n  exact mk_wcovby_mk_iff\n#align wcovby_iff wcovby_iff\n\n",
 "wcovby_congr_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print wcovby_congr_right /-\ntheorem wcovby_congr_right (hab : AntisymmRel (· ≤ ·) a b) : «expr ⩿ » c a ↔ «expr ⩿ » c b :=\n  ⟨fun h => h.trans_antisymm_rel hab, fun h => h.trans_antisymm_rel hab.symm⟩\n#align wcovby_congr_right wcovby_congr_right\n-/\n\n",
 "wcovby_congr_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print wcovby_congr_left /-\ntheorem wcovby_congr_left (hab : AntisymmRel (· ≤ ·) a b) : «expr ⩿ » a c ↔ «expr ⩿ » b c :=\n  ⟨hab.symm.trans_wcovby, hab.trans_wcovby⟩\n#align wcovby_congr_left wcovby_congr_left\n-/\n\n",
 "wcovby":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Covby.wcovby /-\nprotected theorem Covby.wcovby (h : «expr ⋖ » a b) : «expr ⩿ » a b :=\n  ⟨h.le, h.2⟩\n#align covby.wcovby Covby.wcovby\n-/\n\n",
 "unique_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.unique_right /-\ntheorem Covby.unique_right (hb : «expr ⋖ » a b) (hc : «expr ⋖ » a c) : b = c :=\n  (hb.ge_of_gt hc.lt).antisymm <| hc.ge_of_gt hb.lt\n#align covby.unique_right Covby.unique_right\n-/\n\n",
 "unique_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.unique_left /-\ntheorem Covby.unique_left (ha : «expr ⋖ » a c) (hb : «expr ⋖ » b c) : a = b :=\n  (hb.le_of_lt ha.lt).antisymm <| ha.le_of_lt hb.lt\n#align covby.unique_left Covby.unique_left\n-/\n\n",
 "trans_wcovby":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print AntisymmRel.trans_wcovby /-\ntheorem AntisymmRel.trans_wcovby (hab : AntisymmRel (· ≤ ·) a b) (hbc : «expr ⩿ » b c) : «expr ⩿ » a c :=\n  ⟨hab.1.trans hbc.le, fun d had hdc => hbc.2 (hab.2.trans_lt had) hdc⟩\n#align antisymm_rel.trans_wcovby AntisymmRel.trans_wcovby\n-/\n\n",
 "trans_covby":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print AntisymmRel.trans_covby /-\ntheorem AntisymmRel.trans_covby (hab : AntisymmRel (· ≤ ·) a b) (hbc : «expr ⋖ » b c) : «expr ⋖ » a c :=\n  ⟨hab.1.trans_lt hbc.lt, fun d had hdc => hbc.2 (hab.2.trans_lt had) hdc⟩\n#align antisymm_rel.trans_covby AntisymmRel.trans_covby\n-/\n\n",
 "trans_antisymm_rel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Wcovby.trans_antisymm_rel /-\ntheorem Wcovby.trans_antisymm_rel (hab : «expr ⩿ » a b) (hbc : AntisymmRel (· ≤ ·) b c) : «expr ⩿ » a c :=\n  ⟨hab.le.trans hbc.1, fun d had hdc => hab.2 had <| hdc.trans_le hbc.2⟩\n#align wcovby.trans_antisymm_rel Wcovby.trans_antisymm_rel\n-/\n\n",
 "trans_antisymmRel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.trans_antisymmRel /-\ntheorem Covby.trans_antisymmRel (hab : «expr ⋖ » a b) (hbc : AntisymmRel (· ≤ ·) b c) : «expr ⋖ » a c :=\n  ⟨hab.lt.trans_le hbc.1, fun d had hdb => hab.2 had <| hdb.trans_le hbc.2⟩\n#align covby.trans_antisymm_rel Covby.trans_antisymmRel\n-/\n\n",
 "toDual_wcovby_toDual_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print toDual_wcovby_toDual_iff /-\n@[simp]\ntheorem toDual_wcovby_toDual_iff : «expr ⩿ » (toDual b) (toDual a) ↔ «expr ⩿ » a b :=\n  and_congr_right' <| forall_congr' fun c => forall_swap\n#align to_dual_wcovby_to_dual_iff toDual_wcovby_toDual_iff\n-/\n\n",
 "toDual_covby_toDual_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print toDual_covby_toDual_iff /-\n@[simp]\ntheorem toDual_covby_toDual_iff : «expr ⋖ » (toDual b) (toDual a) ↔ «expr ⋖ » a b :=\n  and_congr_right' <| forall_congr' fun c => forall_swap\n#align to_dual_covby_to_dual_iff toDual_covby_toDual_iff\n-/\n\n",
 "swap_wcovby_swap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n@[simp]\ntheorem swap_wcovby_swap : «expr ⩿ » x.swap y.swap ↔ «expr ⩿ » x y :=\n  apply_wcovby_apply_iff (OrderIso.prodComm : «expr ≃o » (α × β) (β × α))\n#align swap_wcovby_swap swap_wcovby_swap\n\n",
 "swap_covby_swap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n@[simp]\ntheorem swap_covby_swap : «expr ⋖ » x.swap y.swap ↔ «expr ⋖ » x y :=\n  apply_covby_apply_iff (OrderIso.prodComm : «expr ≃o » (α × β) (β × α))\n#align swap_covby_swap swap_covby_swap\n\n",
 "sup_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print Wcovby.sup_eq /-\ntheorem Wcovby.sup_eq (hac : «expr ⩿ » a c) (hbc : «expr ⩿ » b c) (hab : a ≠ b) : «expr ⊔ » a b = c :=\n  (sup_le hac.le hbc.le).eq_of_not_lt fun h => hab.lt_sup_or_lt_sup.elim (fun h' => hac.2 h' h) fun h' => hbc.2 h' h\n#align wcovby.sup_eq Wcovby.sup_eq\n-/\n\n",
 "snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Wcovby.snd /-\ntheorem Wcovby.snd (h : «expr ⩿ » x y) : «expr ⩿ » x.2 y.2 :=\n  ⟨h.1.2, fun c h₁ h₂ => h.2 (mk_lt_mk_iff_right.2 h₁) ⟨⟨h.1.1, h₂.le⟩, fun hc => h₂.not_le hc.2⟩⟩\n#align wcovby.snd Wcovby.snd\n-/\n\n",
 "rfl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Wcovby.rfl /-\ntheorem Wcovby.rfl : «expr ⩿ » a a :=\n  Wcovby.refl a\n#align wcovby.rfl Wcovby.rfl\n-/\n\n",
 "refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Wcovby.refl /-\ntheorem Wcovby.refl (a : α) : «expr ⩿ » a a :=\n  ⟨le_rfl, fun c hc => hc.not_lt⟩\n#align wcovby.refl Wcovby.refl\n-/\n\n",
 "of_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.of_image /-\ntheorem Covby.of_image (f : «expr ↪o » α β) (h : «expr ⋖ » (f a) (f b)) : «expr ⋖ » a b :=\n  ⟨f.lt_iff_lt.mp h.lt, fun c hac hcb => h.2 (f.lt_iff_lt.mpr hac) (f.lt_iff_lt.mpr hcb)⟩\n#align covby.of_image Covby.of_image\n-/\n\n",
 "ofDual_wcovby_ofDual_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print ofDual_wcovby_ofDual_iff /-\n@[simp]\ntheorem ofDual_wcovby_ofDual_iff {a b : «expr ᵒᵈ» α} : «expr ⩿ » (ofDual a) (ofDual b) ↔ «expr ⩿ » b a :=\n  and_congr_right' <| forall_congr' fun c => forall_swap\n#align of_dual_wcovby_of_dual_iff ofDual_wcovby_ofDual_iff\n-/\n\n",
 "ofDual_covby_ofDual_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print ofDual_covby_ofDual_iff /-\n@[simp]\ntheorem ofDual_covby_ofDual_iff {a b : «expr ᵒᵈ» α} : «expr ⋖ » (ofDual a) (ofDual b) ↔ «expr ⋖ » b a :=\n  and_congr_right' <| forall_congr' fun c => forall_swap\n#align of_dual_covby_of_dual_iff ofDual_covby_ofDual_iff\n-/\n\n",
 "not_wcovby_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print not_wcovby_iff /-\n/-- If `a ≤ b`, then `b` does not cover `a` iff there's an element in between. -/\ntheorem not_wcovby_iff (h : a ≤ b) : ¬«expr ⩿ » a b ↔ ∃ c, a < c ∧ c < b := by\n  simp_rw [Wcovby, h, true_and_iff, not_forall, exists_prop, not_not]\n#align not_wcovby_iff not_wcovby_iff\n-/\n\n",
 "not_covby_of_lt_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print not_covby_of_lt_of_lt /-\ntheorem not_covby_of_lt_of_lt (h₁ : a < b) (h₂ : b < c) : ¬«expr ⋖ » a c :=\n  (not_covby_iff (h₁.trans h₂)).2 ⟨b, h₁, h₂⟩\n#align not_covby_of_lt_of_lt not_covby_of_lt_of_lt\n-/\n\n",
 "not_covby_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print not_covby_iff /-\n/-- If `a < b`, then `b` does not cover `a` iff there's an element in between. -/\ntheorem not_covby_iff (h : a < b) : ¬«expr ⋖ » a b ↔ ∃ c, a < c ∧ c < b := by\n  simp_rw [Covby, h, true_and_iff, not_forall, exists_prop, not_not]\n#align not_covby_iff not_covby_iff\n-/\n\n",
 "not_covby":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print not_covby /-\n/-- In a dense order, nothing covers anything. -/\ntheorem not_covby [DenselyOrdered α] : ¬«expr ⋖ » a b := fun h =>\n  let ⟨c, hc⟩ := exists_between h.1\n  h.2 hc.1 hc.2\n#align not_covby not_covby\n-/\n\n",
 "ne'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.ne' /-\ntheorem Covby.ne' (h : «expr ⋖ » a b) : b ≠ a :=\n  h.lt.ne'\n#align covby.ne' Covby.ne'\n-/\n\n",
 "ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.ne /-\nprotected theorem Covby.ne (h : «expr ⋖ » a b) : a ≠ b :=\n  h.lt.ne\n#align covby.ne Covby.ne\n-/\n\n",
 "mk_wcovby_mk_iff_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\ntheorem mk_wcovby_mk_iff_right : «expr ⩿ » (a, b₁) (a, b₂) ↔ «expr ⩿ » b₁ b₂ :=\n  swap_wcovby_swap.trans mk_wcovby_mk_iff_left\n#align mk_wcovby_mk_iff_right mk_wcovby_mk_iff_right\n\n",
 "mk_wcovby_mk_iff_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\ntheorem mk_wcovby_mk_iff_left : «expr ⩿ » (a₁, b) (a₂, b) ↔ «expr ⩿ » a₁ a₂ :=\n  by\n  refine' ⟨Wcovby.fst, and.imp mk_le_mk_iff_left.2 fun h c h₁ h₂ => _⟩\n  have : c.2 = b := h₂.le.2.antisymm h₁.le.2\n  rw [← @prod.mk.eta _ _ c, this, mk_lt_mk_iff_left] at h₁ h₂\n  exact h h₁ h₂\n#align mk_wcovby_mk_iff_left mk_wcovby_mk_iff_left\n\n",
 "mk_wcovby_mk_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\ntheorem mk_wcovby_mk_iff : «expr ⩿ » (a₁, b₁) (a₂, b₂) ↔ «expr ⩿ » a₁ a₂ ∧ b₁ = b₂ ∨ «expr ⩿ » b₁ b₂ ∧ a₁ = a₂ :=\n  by\n  refine' ⟨fun h => _, _⟩\n  · obtain rfl | rfl : a₁ = a₂ ∨ b₁ = b₂ := fst_eq_or_snd_eq_of_wcovby h\n    · exact or.inr ⟨mk_wcovby_mk_iff_right.1 h, rfl⟩\n    · exact or.inl ⟨mk_wcovby_mk_iff_left.1 h, rfl⟩\n  · rintro (⟨h, rfl⟩ | ⟨h, rfl⟩)\n    · exact mk_wcovby_mk_iff_left.2 h\n    · exact mk_wcovby_mk_iff_right.2 h\n#align mk_wcovby_mk_iff mk_wcovby_mk_iff\n\n",
 "mk_covby_mk_iff_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\ntheorem mk_covby_mk_iff_right : «expr ⋖ » (a, b₁) (a, b₂) ↔ «expr ⋖ » b₁ b₂ := by\n  simp_rw [covby_iff_wcovby_and_lt, mk_wcovby_mk_iff_right, mk_lt_mk_iff_right]\n#align mk_covby_mk_iff_right mk_covby_mk_iff_right\n\n",
 "mk_covby_mk_iff_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\ntheorem mk_covby_mk_iff_left : «expr ⋖ » (a₁, b) (a₂, b) ↔ «expr ⋖ » a₁ a₂ := by\n  simp_rw [covby_iff_wcovby_and_lt, mk_wcovby_mk_iff_left, mk_lt_mk_iff_left]\n#align mk_covby_mk_iff_left mk_covby_mk_iff_left\n\n",
 "mk_covby_mk_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\ntheorem mk_covby_mk_iff : «expr ⋖ » (a₁, b₁) (a₂, b₂) ↔ «expr ⋖ » a₁ a₂ ∧ b₁ = b₂ ∨ «expr ⋖ » b₁ b₂ ∧ a₁ = a₂ :=\n  by\n  refine' ⟨fun h => _, _⟩\n  · obtain rfl | rfl : a₁ = a₂ ∨ b₁ = b₂ := fst_eq_or_snd_eq_of_wcovby h.wcovby\n    · exact or.inr ⟨mk_covby_mk_iff_right.1 h, rfl⟩\n    · exact or.inl ⟨mk_covby_mk_iff_left.1 h, rfl⟩\n  · rintro (⟨h, rfl⟩ | ⟨h, rfl⟩)\n    · exact mk_covby_mk_iff_left.2 h\n    · exact mk_covby_mk_iff_right.2 h\n#align mk_covby_mk_iff mk_covby_mk_iff\n\n",
 "lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.lt /-\ntheorem Covby.lt (h : «expr ⋖ » a b) : a < b :=\n  h.1\n#align covby.lt Covby.lt\n-/\n\n",
 "le_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.le_of_lt /-\ntheorem Covby.le_of_lt (hab : «expr ⋖ » a b) : c < b → c ≤ a :=\n  hab.wcovby.le_of_lt\n#align covby.le_of_lt Covby.le_of_lt\n-/\n\n",
 "le_and_le_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Wcovby.le_and_le_iff /-\ntheorem Wcovby.le_and_le_iff (h : «expr ⩿ » a b) : a ≤ c ∧ c ≤ b ↔ c = a ∨ c = b := by\n  refine' ⟨fun h2 => h.eq_or_eq h2.1 h2.2, _⟩; rintro (rfl | rfl); exacts[⟨le_rfl, h.le⟩, ⟨h.le, le_rfl⟩]\n#align wcovby.le_and_le_iff Wcovby.le_and_le_iff\n-/\n\n",
 "le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.le /-\ntheorem Covby.le (h : «expr ⋖ » a b) : a ≤ b :=\n  h.1.le\n#align covby.le Covby.le\n-/\n\n",
 "inf_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print Wcovby.inf_eq /-\ntheorem Wcovby.inf_eq (hca : «expr ⩿ » c a) (hcb : «expr ⩿ » c b) (hab : a ≠ b) : «expr ⊓ » a b = c :=\n  (le_inf hca.le hcb.le).eq_of_not_gt fun h => hab.inf_lt_or_inf_lt.elim (hca.2 h) (hcb.2 h)\n#align wcovby.inf_eq Wcovby.inf_eq\n-/\n\n",
 "image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.image /-\ntheorem Covby.image (f : «expr ↪o » α β) (hab : «expr ⋖ » a b) (h : (range f).ord_connected) : «expr ⋖ » (f a) (f b) :=\n  (hab.wcovby.image f h).covby_of_lt <| f.strict_mono hab.lt\n#align covby.image Covby.image\n-/\n\n",
 "ge_of_gt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.ge_of_gt /-\ntheorem Covby.ge_of_gt (hab : «expr ⋖ » a b) : a < c → b ≤ c :=\n  hab.wcovby.ge_of_gt\n#align covby.ge_of_gt Covby.ge_of_gt\n-/\n\n",
 "fst_eq_or_snd_eq_of_wcovby":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\ntheorem fst_eq_or_snd_eq_of_wcovby : «expr ⩿ » x y → x.1 = y.1 ∨ x.2 = y.2 :=\n  by\n  refine' fun h => of_not_not fun hab => _\n  push_neg  at hab\n  exact h.2 (mk_lt_mk.2 <| or.inl ⟨hab.1.lt_of_le h.1.1, le_rfl⟩) (mk_lt_mk.2 <| or.inr ⟨le_rfl, hab.2.lt_of_le h.1.2⟩)\n#align fst_eq_or_snd_eq_of_wcovby fst_eq_or_snd_eq_of_wcovby\n\n",
 "fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Wcovby.fst /-\ntheorem Wcovby.fst (h : «expr ⩿ » x y) : «expr ⩿ » x.1 y.1 :=\n  ⟨h.1.1, fun c h₁ h₂ => h.2 (mk_lt_mk_iff_left.2 h₁) ⟨⟨h₂.le, h.1.2⟩, fun hc => h₂.not_le hc.1⟩⟩\n#align wcovby.fst Wcovby.fst\n-/\n\n",
 "eq_or_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.eq_or_eq /-\ntheorem Covby.eq_or_eq (h : «expr ⋖ » a b) (h2 : a ≤ c) (h3 : c ≤ b) : c = a ∨ c = b :=\n  h.wcovby.eq_or_eq h2 h3\n#align covby.eq_or_eq Covby.eq_or_eq\n-/\n\n",
 "eq_of_between":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.eq_of_between /-\n/-- If `a`, `b`, `c` are consecutive and `a < x < c` then `x = b`. -/\ntheorem Covby.eq_of_between {x : α} (hab : «expr ⋖ » a b) (hbc : «expr ⋖ » b c) (hax : a < x) (hxc : x < c) : x = b :=\n  le_antisymm (le_of_not_lt fun h => hbc.2 h hxc) (le_of_not_lt <| hab.2 hax)\n#align covby.eq_of_between Covby.eq_of_between\n-/\n\n",
 "densely_ordered_iff_forall_not_covby":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print densely_ordered_iff_forall_not_covby /-\ntheorem densely_ordered_iff_forall_not_covby : DenselyOrdered α ↔ ∀ a b : α, ¬«expr ⋖ » a b :=\n  ⟨fun h a b => @not_covby _ _ _ _ h, fun h => ⟨fun a b hab => exists_lt_lt_of_not_covby hab <| h _ _⟩⟩\n#align densely_ordered_iff_forall_not_covby densely_ordered_iff_forall_not_covby\n-/\n\n",
 "covby_of_not_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Wcovby.covby_of_not_le /-\ntheorem Wcovby.covby_of_not_le (h : «expr ⩿ » a b) (h2 : ¬b ≤ a) : «expr ⋖ » a b :=\n  ⟨h.le.lt_of_not_le h2, h.2⟩\n#align wcovby.covby_of_not_le Wcovby.covby_of_not_le\n-/\n\n",
 "covby_of_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Wcovby.covby_of_ne /-\ntheorem Wcovby.covby_of_ne (h : «expr ⩿ » a b) (h2 : a ≠ b) : «expr ⋖ » a b :=\n  ⟨h.le.lt_of_ne h2, h.2⟩\n#align wcovby.covby_of_ne Wcovby.covby_of_ne\n-/\n\n",
 "covby_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Wcovby.covby_of_lt /-\ntheorem Wcovby.covby_of_lt (h : «expr ⩿ » a b) (h2 : a < b) : «expr ⋖ » a b :=\n  ⟨h2, h.2⟩\n#align wcovby.covby_of_lt Wcovby.covby_of_lt\n-/\n\n",
 "covby_of_eq_or_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print covby_of_eq_or_eq /-\ntheorem covby_of_eq_or_eq (hab : a < b) (h : ∀ c, a ≤ c → c ≤ b → c = a ∨ c = b) : «expr ⋖ » a b :=\n  ⟨hab, fun c ha hb => (h c ha.le hb.le).elim ha.ne' hb.ne⟩\n#align covby_of_eq_or_eq covby_of_eq_or_eq\n-/\n\n",
 "covby_insert":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\ntheorem covby_insert {x : α} {s : set α} (hx : x ∉ s) : «expr ⋖ » s (insert x s) :=\n  (wcovby_insert x s).covby_of_lt <| ssubset_insert hx\n#align covby_insert covby_insert\n\n",
 "covby_iff_wcovby_and_not_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print covby_iff_wcovby_and_not_le /-\ntheorem covby_iff_wcovby_and_not_le : «expr ⋖ » a b ↔ «expr ⩿ » a b ∧ ¬b ≤ a :=\n  ⟨fun h => ⟨h.wcovby, h.lt.not_le⟩, fun h => h.1.covby_of_not_le h.2⟩\n#align covby_iff_wcovby_and_not_le covby_iff_wcovby_and_not_le\n-/\n\n",
 "covby_iff_wcovby_and_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print covby_iff_wcovby_and_ne /-\ntheorem covby_iff_wcovby_and_ne : «expr ⋖ » a b ↔ «expr ⩿ » a b ∧ a ≠ b :=\n  ⟨fun h => ⟨h.wcovby, h.ne⟩, fun h => h.1.covby_of_ne h.2⟩\n#align covby_iff_wcovby_and_ne covby_iff_wcovby_and_ne\n-/\n\n",
 "covby_iff_wcovby_and_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print covby_iff_wcovby_and_lt /-\ntheorem covby_iff_wcovby_and_lt : «expr ⋖ » a b ↔ «expr ⩿ » a b ∧ a < b :=\n  ⟨fun h => ⟨h.wcovby, h.lt⟩, fun h => h.1.covby_of_lt h.2⟩\n#align covby_iff_wcovby_and_lt covby_iff_wcovby_and_lt\n-/\n\n",
 "covby_iff_lt_and_eq_or_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print covby_iff_lt_and_eq_or_eq /-\n/-- An `iff` version of `covby.eq_or_eq` and `covby_of_eq_or_eq`. -/\ntheorem covby_iff_lt_and_eq_or_eq : «expr ⋖ » a b ↔ a < b ∧ ∀ c, a ≤ c → c ≤ b → c = a ∨ c = b :=\n  ⟨fun h => ⟨h.lt, fun c => h.eq_or_eq⟩, and.rec covby_of_eq_or_eq⟩\n#align covby_iff_lt_and_eq_or_eq covby_iff_lt_and_eq_or_eq\n-/\n\n",
 "covby_iff_Ioo_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print covby_iff_Ioo_eq /-\ntheorem covby_iff_Ioo_eq : «expr ⋖ » a b ↔ a < b ∧ Ioo a b = ∅ :=\n  and_congr_right' <| by simp [eq_empty_iff_forall_not_mem]\n#align covby_iff_Ioo_eq covby_iff_Ioo_eq\n-/\n\n",
 "covby_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\ntheorem covby_iff : «expr ⋖ » x y ↔ «expr ⋖ » x.1 y.1 ∧ x.2 = y.2 ∨ «expr ⋖ » x.2 y.2 ∧ x.1 = y.1 :=\n  by\n  cases x\n  cases y\n  exact mk_covby_mk_iff\n#align covby_iff covby_iff\n\n",
 "covby_congr_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print covby_congr_right /-\ntheorem covby_congr_right (hab : AntisymmRel (· ≤ ·) a b) : «expr ⋖ » c a ↔ «expr ⋖ » c b :=\n  ⟨fun h => h.trans_antisymm_rel hab, fun h => h.trans_antisymm_rel hab.symm⟩\n#align covby_congr_right covby_congr_right\n-/\n\n",
 "covby_congr_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print covby_congr_left /-\ntheorem covby_congr_left (hab : AntisymmRel (· ≤ ·) a b) : «expr ⋖ » a c ↔ «expr ⋖ » b c :=\n  ⟨hab.symm.trans_covby, hab.trans_covby⟩\n#align covby_congr_left covby_congr_left\n-/\n\n",
 "apply_wcovby_apply_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print apply_wcovby_apply_iff /-\n@[simp]\ntheorem apply_wcovby_apply_iff {E : Type _} [OrderIsoClass E α β] (e : E) : «expr ⩿ » (e a) (e b) ↔ «expr ⩿ » a b :=\n  (ordConnected_range (e : «expr ≃o » α β)).apply_wcovby_apply_iff ((e : «expr ≃o » α β) : «expr ↪o » α β)\n#align apply_wcovby_apply_iff apply_wcovby_apply_iff\n-/\n\n",
 "apply_covby_apply_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print apply_covby_apply_iff /-\n@[simp]\ntheorem apply_covby_apply_iff {E : Type _} [OrderIsoClass E α β] (e : E) : «expr ⋖ » (e a) (e b) ↔ «expr ⋖ » a b :=\n  (ordConnected_range (e : «expr ≃o » α β)).apply_covby_apply_iff ((e : «expr ≃o » α β) : «expr ↪o » α β)\n#align apply_covby_apply_iff apply_covby_apply_iff\n-/\n\n",
 "Ioo_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.Ioo_eq /-\ntheorem Covby.Ioo_eq (h : «expr ⋖ » a b) : Ioo a b = ∅ :=\n  h.wcovby.Ioo_eq\n#align covby.Ioo_eq Covby.Ioo_eq\n-/\n\n",
 "Ioi_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.Ioi_eq /-\ntheorem Covby.Ioi_eq (h : «expr ⋖ » a b) : Ioi a = Ici b := by rw [← Ioo_union_Ici_eq_Ioi h.lt, h.Ioo_eq, empty_union]\n#align covby.Ioi_eq Covby.Ioi_eq\n-/\n\n",
 "Ioc_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Wcovby.Ioc_subset /-\ntheorem Wcovby.Ioc_subset (h : «expr ⩿ » a b) : Ioc a b ⊆ {b} := by\n  rw [← Icc_diff_left, h.Icc_eq, diff_singleton_subset_iff]\n#align wcovby.Ioc_subset Wcovby.Ioc_subset\n-/\n\n",
 "Ioc_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.Ioc_eq /-\ntheorem Covby.Ioc_eq (h : «expr ⋖ » a b) : Ioc a b = {b} := by rw [← Ioo_union_right h.lt, h.Ioo_eq, empty_union]\n#align covby.Ioc_eq Covby.Ioc_eq\n-/\n\n",
 "Iio_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.Iio_eq /-\ntheorem Covby.Iio_eq (h : «expr ⋖ » a b) : Iio b = Iic a := by rw [← Iic_union_Ioo_eq_Iio h.lt, h.Ioo_eq, union_empty]\n#align covby.Iio_eq Covby.Iio_eq\n-/\n\n",
 "Ico_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⩿ » -/\n#print Wcovby.Ico_subset /-\ntheorem Wcovby.Ico_subset (h : «expr ⩿ » a b) : Ico a b ⊆ {a} := by\n  rw [← Icc_diff_right, h.Icc_eq, diff_singleton_subset_iff, pair_comm]\n#align wcovby.Ico_subset Wcovby.Ico_subset\n-/\n\n",
 "Ico_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.Ico_eq /-\ntheorem Covby.Ico_eq (h : «expr ⋖ » a b) : Ico a b = {a} := by rw [← Ioo_union_left h.lt, h.Ioo_eq, empty_union]\n#align covby.Ico_eq Covby.Ico_eq\n-/\n\n",
 "Icc_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Covby.Icc_eq /-\ntheorem Covby.Icc_eq (h : «expr ⋖ » a b) : Icc a b = {a, b} :=\n  h.wcovby.Icc_eq\n#align covby.Icc_eq Covby.Icc_eq\n-/\n\n"}