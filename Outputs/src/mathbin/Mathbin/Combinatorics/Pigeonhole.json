{"exists_sum_fiber_lt_of_sum_lt_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons of different weights, strict inequality\nversion: there is a pigeonhole with the total weight of pigeons in it less than `b` provided that\nthe total number of pigeonholes times `b` is greater than the total weight of all pigeons. -/\ntheorem exists_sum_fiber_lt_of_sum_lt_nsmul\n    (hb :\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\" (w x) <\n        «expr • » (card β) b) :\n    ∃ y,\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (univ.filter fun x => f x = y) (w x) <\n        b :=\n  @exists_lt_sum_fiber_of_nsmul_lt_sum α β («expr ᵒᵈ» M) _ _ _ _ _ _ _ hb\n#align exists_sum_fiber_lt_of_sum_lt_nsmul exists_sum_fiber_lt_of_sum_lt_nsmul\n\n",
 "exists_sum_fiber_lt_of_sum_fiber_nonneg_of_sum_lt_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (y «expr ∉ » t) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons counted by weight, strict inequality version:\nif the total weight of a finite set of pigeons is less than `n • b`, they are sorted into some\npigeonholes, and for all but `n` pigeonholes the total weight of the pigeons there is nonnegative,\nthen for at least one of these `n` pigeonholes, the total weight of the pigeons in this pigeonhole\nis less than `b`. -/\ntheorem exists_sum_fiber_lt_of_sum_fiber_nonneg_of_sum_lt_nsmul\n    (ht :\n      ∀ (y) (_ : y ∉ t),\n        (0 : M) ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (s.filter fun x => f x = y) (w x))\n    (hb :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x) <\n        «expr • » t.card b) :\n    ∃ y ∈ t,\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter fun x => f x = y) (w x) <\n        b :=\n  @exists_lt_sum_fiber_of_sum_fiber_nonpos_of_nsmul_lt_sum α β («expr ᵒᵈ» M) _ _ _ _ _ _ _ ht hb\n#align exists_sum_fiber_lt_of_sum_fiber_nonneg_of_sum_lt_nsmul exists_sum_fiber_lt_of_sum_fiber_nonneg_of_sum_lt_nsmul\n\n",
 "exists_sum_fiber_lt_of_maps_to_of_sum_lt_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons counted by weight, strict inequality version:\nif the total weight of a finite set of pigeons is less than `n • b`, and they are sorted into `n`\npigeonholes, then for some pigeonhole, the total weight of the pigeons in this pigeonhole is less\nthan `b`. -/\ntheorem exists_sum_fiber_lt_of_maps_to_of_sum_lt_nsmul (hf : ∀ a ∈ s, f a ∈ t)\n    (hb :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x) <\n        «expr • » t.card b) :\n    ∃ y ∈ t,\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter fun x => f x = y) (w x) <\n        b :=\n  @exists_lt_sum_fiber_of_maps_to_of_nsmul_lt_sum α β («expr ᵒᵈ» M) _ _ _ _ _ _ _ hf hb\n#align exists_sum_fiber_lt_of_maps_to_of_sum_lt_nsmul exists_sum_fiber_lt_of_maps_to_of_sum_lt_nsmul\n\n",
 "exists_sum_fiber_le_of_sum_le_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons of different weights, non-strict inequality\nversion: there is a pigeonhole with the total weight of pigeons in it less than or equal to `b`\nprovided that the total number of pigeonholes times `b` is greater than or equal to the total weight\nof all pigeons. -/\ntheorem exists_sum_fiber_le_of_sum_le_nsmul [Nonempty β]\n    (hb :\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\" (w x) ≤\n        «expr • » (card β) b) :\n    ∃ y,\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (univ.filter fun x => f x = y) (w x) ≤\n        b :=\n  @exists_le_sum_fiber_of_nsmul_le_sum α β («expr ᵒᵈ» M) _ _ _ _ _ _ _ _ hb\n#align exists_sum_fiber_le_of_sum_le_nsmul exists_sum_fiber_le_of_sum_le_nsmul\n\n",
 "exists_sum_fiber_le_of_sum_fiber_nonneg_of_sum_le_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (y «expr ∉ » t) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons counted by weight, non-strict inequality\nversion: if the total weight of a finite set of pigeons is less than or equal to `n • b`, they are\nsorted into some pigeonholes, and for all but `n > 0` pigeonholes the total weight of the pigeons\nthere is nonnegative, then for at least one of these `n` pigeonholes, the total weight of the\npigeons in this pigeonhole is less than or equal to `b`. -/\ntheorem exists_sum_fiber_le_of_sum_fiber_nonneg_of_sum_le_nsmul\n    (hf :\n      ∀ (y) (_ : y ∉ t),\n        (0 : M) ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (s.filter fun x => f x = y) (w x))\n    (ht : t.nonempty)\n    (hb :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x) ≤\n        «expr • » t.card b) :\n    ∃ y ∈ t,\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter fun x => f x = y) (w x) ≤\n        b :=\n  @exists_le_sum_fiber_of_sum_fiber_nonpos_of_nsmul_le_sum α β («expr ᵒᵈ» M) _ _ _ _ _ _ _ hf ht hb\n#align exists_sum_fiber_le_of_sum_fiber_nonneg_of_sum_le_nsmul exists_sum_fiber_le_of_sum_fiber_nonneg_of_sum_le_nsmul\n\n",
 "exists_sum_fiber_le_of_maps_to_of_sum_le_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons counted by weight, non-strict inequality\nversion: if the total weight of a finite set of pigeons is less than or equal to `n • b`, and they\nare sorted into `n > 0` pigeonholes, then for some pigeonhole, the total weight of the pigeons in\nthis pigeonhole is less than or equal to `b`. -/\ntheorem exists_sum_fiber_le_of_maps_to_of_sum_le_nsmul (hf : ∀ a ∈ s, f a ∈ t) (ht : t.nonempty)\n    (hb :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x) ≤\n        «expr • » t.card b) :\n    ∃ y ∈ t,\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter fun x => f x = y) (w x) ≤\n        b :=\n  @exists_le_sum_fiber_of_maps_to_of_nsmul_le_sum α β («expr ᵒᵈ» M) _ _ _ _ _ _ _ hf ht hb\n#align exists_sum_fiber_le_of_maps_to_of_sum_le_nsmul exists_sum_fiber_le_of_maps_to_of_sum_le_nsmul\n\n",
 "exists_lt_sum_fiber_of_sum_fiber_nonpos_of_nsmul_lt_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (y «expr ∉ » t) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons counted by weight, strict inequality version:\nif the total weight of a finite set of pigeons is greater than `n • b`, they are sorted into some\npigeonholes, and for all but `n` pigeonholes the total weight of the pigeons there is nonpositive,\nthen for at least one of these `n` pigeonholes, the total weight of the pigeons in this pigeonhole\nis greater than `b`. -/\ntheorem exists_lt_sum_fiber_of_sum_fiber_nonpos_of_nsmul_lt_sum\n    (ht :\n      ∀ (y) (_ : y ∉ t),\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (s.filter fun x => f x = y) (w x) ≤\n          0)\n    (hb :\n      «expr • » t.card b <\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x)) :\n    ∃ y ∈ t,\n      b <\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter fun x => f x = y) (w x) :=\n  exists_lt_of_sum_lt <|\n    calc\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t b <\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x) :=\n        by simpa\n      _ ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (s.filter fun x => f x = y) (w x)) :=\n        sum_le_sum_fiberwise_of_sum_fiber_nonpos ht\n      \n#align exists_lt_sum_fiber_of_sum_fiber_nonpos_of_nsmul_lt_sum exists_lt_sum_fiber_of_sum_fiber_nonpos_of_nsmul_lt_sum\n\n",
 "exists_lt_sum_fiber_of_nsmul_lt_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons of different weights, strict inequality\nversion: there is a pigeonhole with the total weight of pigeons in it greater than `b` provided that\nthe total number of pigeonholes times `b` is less than the total weight of all pigeons. -/\ntheorem exists_lt_sum_fiber_of_nsmul_lt_sum\n    (hb :\n      «expr • » (card β) b <\n        finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (w x)) :\n    ∃ y,\n      b <\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (univ.filter fun x => f x = y) (w x) :=\n  let ⟨y, _, hy⟩ := exists_lt_sum_fiber_of_maps_to_of_nsmul_lt_sum (fun _ _ => mem_univ _) hb\n  ⟨y, hy⟩\n#align exists_lt_sum_fiber_of_nsmul_lt_sum exists_lt_sum_fiber_of_nsmul_lt_sum\n\n",
 "exists_lt_sum_fiber_of_maps_to_of_nsmul_lt_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-\nCopyright (c) 2020 Kyle Miller. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kyle Miller, Yury Kudryashov\n-/\n/-- The pigeonhole principle for finitely many pigeons counted by weight, strict inequality version:\nif the total weight of a finite set of pigeons is greater than `n • b`, and they are sorted into\n`n` pigeonholes, then for some pigeonhole, the total weight of the pigeons in this pigeonhole is\ngreater than `b`. -/\ntheorem exists_lt_sum_fiber_of_maps_to_of_nsmul_lt_sum (hf : ∀ a ∈ s, f a ∈ t)\n    (hb :\n      «expr • » t.card b <\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x)) :\n    ∃ y ∈ t,\n      b <\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter fun x => f x = y) (w x) :=\n  exists_lt_of_sum_lt <| by simpa only [sum_fiberwise_of_maps_to hf, sum_const]\n#align exists_lt_sum_fiber_of_maps_to_of_nsmul_lt_sum exists_lt_sum_fiber_of_maps_to_of_nsmul_lt_sum\n\n",
 "exists_lt_modeq_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [MOD ]» -/\n/-- If `s` is an infinite set of natural numbers and `k > 0`, then `s` contains two elements `m < n`\nthat are equal mod `k`. -/\ntheorem exists_lt_modeq_of_infinite {s : Set ℕ} (hs : s.infinite) {k : ℕ} (hk : 0 < k) :\n    ∃ m ∈ s, ∃ n ∈ s, m < n ∧ «expr ≡ [MOD ]» m n k :=\n  (hs.exists_lt_map_eq_of_maps_to fun n _ => show n % k ∈ Iio k from nat.mod_lt n hk) <| finite_lt_nat k\n#align exists_lt_modeq_of_infinite exists_lt_modeq_of_infinite\n\n",
 "exists_lt_card_fiber_of_nsmul_lt_card_of_maps_to":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The pigeonhole principle for finitely many pigeons counted by heads: there is a pigeonhole with\nat least as many pigeons as the ceiling of the average number of pigeons across all pigeonholes. -/\ntheorem exists_lt_card_fiber_of_nsmul_lt_card_of_maps_to (hf : ∀ a ∈ s, f a ∈ t) (ht : «expr • » t.card b < s.card) :\n    ∃ y ∈ t, b < (s.filter fun x => f x = y).card :=\n  by\n  simp_rw [cast_card] at ht⊢\n  exact exists_lt_sum_fiber_of_maps_to_of_nsmul_lt_sum hf ht\n#align exists_lt_card_fiber_of_nsmul_lt_card_of_maps_to exists_lt_card_fiber_of_nsmul_lt_card_of_maps_to\n\n",
 "exists_lt_card_fiber_of_nsmul_lt_card":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The strong pigeonhole principle for finitely many pigeons and pigeonholes. There is a pigeonhole\nwith at least as many pigeons as the ceiling of the average number of pigeons across all\npigeonholes. -/\ntheorem exists_lt_card_fiber_of_nsmul_lt_card (hb : «expr • » (card β) b < card α) :\n    ∃ y : β, b < (univ.filter fun x => f x = y).card :=\n  let ⟨y, _, h⟩ := exists_lt_card_fiber_of_nsmul_lt_card_of_maps_to (fun _ _ => mem_univ _) hb\n  ⟨y, h⟩\n#align exists_lt_card_fiber_of_nsmul_lt_card exists_lt_card_fiber_of_nsmul_lt_card\n\n",
 "exists_lt_card_fiber_of_mul_lt_card_of_maps_to":
 "/-- The pigeonhole principle for finitely many pigeons counted by heads: there is a pigeonhole with\nat least as many pigeons as the ceiling of the average number of pigeons across all pigeonholes.\n(\"The maximum is at least the mean\" specialized to integers.)\n\nMore formally, given a function between finite sets `s` and `t` and a natural number `n` such that\n`card t * n < card s`, there exists `y ∈ t` such that its preimage in `s` has more than `n`\nelements. -/\ntheorem exists_lt_card_fiber_of_mul_lt_card_of_maps_to (hf : ∀ a ∈ s, f a ∈ t) (hn : t.card * n < s.card) :\n    ∃ y ∈ t, n < (s.filter fun x => f x = y).card :=\n  exists_lt_card_fiber_of_nsmul_lt_card_of_maps_to hf hn\n#align exists_lt_card_fiber_of_mul_lt_card_of_maps_to exists_lt_card_fiber_of_mul_lt_card_of_maps_to\n\n",
 "exists_lt_card_fiber_of_mul_lt_card":
 "/-- The strong pigeonhole principle for finitely many pigeons and pigeonholes.\nThere is a pigeonhole with at least as many pigeons as\nthe ceiling of the average number of pigeons across all pigeonholes.\n(\"The maximum is at least the mean\" specialized to integers.)\n\nMore formally, given a function `f` between finite types `α` and `β` and a number `n` such that\n`card β * n < card α`, there exists an element `y : β` such that its preimage has more than `n`\nelements. -/\ntheorem exists_lt_card_fiber_of_mul_lt_card (hn : card β * n < card α) :\n    ∃ y : β, n < (univ.filter fun x => f x = y).card :=\n  exists_lt_card_fiber_of_nsmul_lt_card _ hn\n#align exists_lt_card_fiber_of_mul_lt_card exists_lt_card_fiber_of_mul_lt_card\n\n",
 "exists_le_sum_fiber_of_sum_fiber_nonpos_of_nsmul_le_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (y «expr ∉ » t) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons counted by weight, non-strict inequality\nversion: if the total weight of a finite set of pigeons is greater than or equal to `n • b`, they\nare sorted into some pigeonholes, and for all but `n > 0` pigeonholes the total weight of the\npigeons there is nonpositive, then for at least one of these `n` pigeonholes, the total weight of\nthe pigeons in this pigeonhole is greater than or equal to `b`. -/\ntheorem exists_le_sum_fiber_of_sum_fiber_nonpos_of_nsmul_le_sum\n    (hf :\n      ∀ (y) (_ : y ∉ t),\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (s.filter fun x => f x = y) (w x) ≤\n          0)\n    (ht : t.nonempty)\n    (hb :\n      «expr • » t.card b ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x)) :\n    ∃ y ∈ t,\n      b ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter fun x => f x = y) (w x) :=\n  exists_le_of_sum_le ht <|\n    calc\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t b ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x) :=\n        by simpa\n      _ ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (s.filter fun x => f x = y) (w x)) :=\n        sum_le_sum_fiberwise_of_sum_fiber_nonpos hf\n      \n#align exists_le_sum_fiber_of_sum_fiber_nonpos_of_nsmul_le_sum exists_le_sum_fiber_of_sum_fiber_nonpos_of_nsmul_le_sum\n\n",
 "exists_le_sum_fiber_of_nsmul_le_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons of different weights, non-strict inequality\nversion: there is a pigeonhole with the total weight of pigeons in it greater than or equal to `b`\nprovided that the total number of pigeonholes times `b` is less than or equal to the total weight of\nall pigeons. -/\ntheorem exists_le_sum_fiber_of_nsmul_le_sum [Nonempty β]\n    (hb :\n      «expr • » (card β) b ≤\n        finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (w x)) :\n    ∃ y,\n      b ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (univ.filter fun x => f x = y) (w x) :=\n  let ⟨y, _, hy⟩ := exists_le_sum_fiber_of_maps_to_of_nsmul_le_sum (fun _ _ => mem_univ _) univ_nonempty hb\n  ⟨y, hy⟩\n#align exists_le_sum_fiber_of_nsmul_le_sum exists_le_sum_fiber_of_nsmul_le_sum\n\n",
 "exists_le_sum_fiber_of_maps_to_of_nsmul_le_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The pigeonhole principle for finitely many pigeons counted by weight, non-strict inequality\nversion: if the total weight of a finite set of pigeons is greater than or equal to `n • b`, and\nthey are sorted into `n > 0` pigeonholes, then for some pigeonhole, the total weight of the pigeons\nin this pigeonhole is greater than or equal to `b`. -/\ntheorem exists_le_sum_fiber_of_maps_to_of_nsmul_le_sum (hf : ∀ a ∈ s, f a ∈ t) (ht : t.nonempty)\n    (hb :\n      «expr • » t.card b ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w x)) :\n    ∃ y ∈ t,\n      b ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter fun x => f x = y) (w x) :=\n  exists_le_of_sum_le ht <| by simpa only [sum_fiberwise_of_maps_to hf, sum_const]\n#align exists_le_sum_fiber_of_maps_to_of_nsmul_le_sum exists_le_sum_fiber_of_maps_to_of_nsmul_le_sum\n\n",
 "exists_le_card_fiber_of_nsmul_le_card_of_maps_to":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The pigeonhole principle for finitely many pigeons counted by heads: given a function between\nfinite sets `s` and `t` and a number `b` such that `card t • b ≤ card s`, there exists `y ∈ t` such\nthat its preimage in `s` has at least `b` elements.\nSee also `finset.exists_lt_card_fiber_of_nsmul_lt_card_of_maps_to` for a stronger statement. -/\ntheorem exists_le_card_fiber_of_nsmul_le_card_of_maps_to (hf : ∀ a ∈ s, f a ∈ t) (ht : t.nonempty)\n    (hb : «expr • » t.card b ≤ s.card) : ∃ y ∈ t, b ≤ (s.filter fun x => f x = y).card :=\n  by\n  simp_rw [cast_card] at hb⊢\n  exact exists_le_sum_fiber_of_maps_to_of_nsmul_le_sum hf ht hb\n#align exists_le_card_fiber_of_nsmul_le_card_of_maps_to exists_le_card_fiber_of_nsmul_le_card_of_maps_to\n\n",
 "exists_le_card_fiber_of_nsmul_le_card":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The strong pigeonhole principle for finitely many pigeons and pigeonholes.  Given a function `f`\nbetween finite types `α` and `β` and a number `b` such that `card β • b ≤ card α`, there exists an\nelement `y : β` such that its preimage has at least `b` elements.\nSee also `fintype.exists_lt_card_fiber_of_nsmul_lt_card` for a stronger statement. -/\ntheorem exists_le_card_fiber_of_nsmul_le_card [Nonempty β] (hb : «expr • » (card β) b ≤ card α) :\n    ∃ y : β, b ≤ (univ.filter fun x => f x = y).card :=\n  let ⟨y, _, h⟩ := exists_le_card_fiber_of_nsmul_le_card_of_maps_to (fun _ _ => mem_univ _) univ_nonempty hb\n  ⟨y, h⟩\n#align exists_le_card_fiber_of_nsmul_le_card exists_le_card_fiber_of_nsmul_le_card\n\n",
 "exists_le_card_fiber_of_mul_le_card_of_maps_to":
 "/-- The pigeonhole principle for finitely many pigeons counted by heads: given a function between\nfinite sets `s` and `t` and a natural number `b` such that `card t * n ≤ card s`, there exists `y ∈\nt` such that its preimage in `s` has at least `n` elements. See also\n`finset.exists_lt_card_fiber_of_mul_lt_card_of_maps_to` for a stronger statement. -/\ntheorem exists_le_card_fiber_of_mul_le_card_of_maps_to (hf : ∀ a ∈ s, f a ∈ t) (ht : t.nonempty)\n    (hn : t.card * n ≤ s.card) : ∃ y ∈ t, n ≤ (s.filter fun x => f x = y).card :=\n  exists_le_card_fiber_of_nsmul_le_card_of_maps_to hf ht hn\n#align exists_le_card_fiber_of_mul_le_card_of_maps_to exists_le_card_fiber_of_mul_le_card_of_maps_to\n\n",
 "exists_le_card_fiber_of_mul_le_card":
 "/-- The strong pigeonhole principle for finitely many pigeons and pigeonholes.  Given a function `f`\nbetween finite types `α` and `β` and a number `n` such that `card β * n ≤ card α`, there exists an\nelement `y : β` such that its preimage has at least `n` elements. See also\n`fintype.exists_lt_card_fiber_of_mul_lt_card` for a stronger statement. -/\ntheorem exists_le_card_fiber_of_mul_le_card [Nonempty β] (hn : card β * n ≤ card α) :\n    ∃ y : β, n ≤ (univ.filter fun x => f x = y).card :=\n  exists_le_card_fiber_of_nsmul_le_card _ hn\n#align exists_le_card_fiber_of_mul_le_card exists_le_card_fiber_of_mul_le_card\n\n",
 "exists_card_fiber_lt_of_card_lt_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The strong pigeonhole principle for finitely many pigeons and pigeonholes. There is a pigeonhole\nwith at most as many pigeons as the floor of the average number of pigeons across all pigeonholes.\n-/\ntheorem exists_card_fiber_lt_of_card_lt_nsmul (hb : ↑(card α) < «expr • » (card β) b) :\n    ∃ y : β, ↑(univ.filter fun x => f x = y).card < b :=\n  let ⟨y, _, h⟩ := exists_card_fiber_lt_of_card_lt_nsmul hb\n  ⟨y, h⟩\n#align exists_card_fiber_lt_of_card_lt_nsmul exists_card_fiber_lt_of_card_lt_nsmul\n\n",
 "exists_card_fiber_lt_of_card_lt_mul":
 "/-- The strong pigeonhole principle for finitely many pigeons and pigeonholes.\nThere is a pigeonhole with at most as many pigeons as\nthe floor of the average number of pigeons across all pigeonholes.\n(\"The minimum is at most the mean\" specialized to integers.)\n\nMore formally, given a function `f` between finite types `α` and `β` and a number `n` such that\n`card α < card β * n`, there exists an element `y : β` such that its preimage has less than `n`\nelements. -/\ntheorem exists_card_fiber_lt_of_card_lt_mul (hn : card α < card β * n) :\n    ∃ y : β, (univ.filter fun x => f x = y).card < n :=\n  exists_card_fiber_lt_of_card_lt_nsmul _ hn\n#align exists_card_fiber_lt_of_card_lt_mul exists_card_fiber_lt_of_card_lt_mul\n\n",
 "exists_card_fiber_le_of_card_le_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The strong pigeonhole principle for finitely many pigeons and pigeonholes.  Given a function `f`\nbetween finite types `α` and `β` and a number `b` such that `card α ≤ card β • b`, there exists an\nelement `y : β` such that its preimage has at most `b` elements.\nSee also `fintype.exists_card_fiber_lt_of_card_lt_nsmul` for a stronger statement. -/\ntheorem exists_card_fiber_le_of_card_le_nsmul [Nonempty β] (hb : ↑(card α) ≤ «expr • » (card β) b) :\n    ∃ y : β, ↑(univ.filter fun x => f x = y).card ≤ b :=\n  let ⟨y, _, h⟩ := exists_card_fiber_le_of_card_le_nsmul univ_nonempty hb\n  ⟨y, h⟩\n#align exists_card_fiber_le_of_card_le_nsmul exists_card_fiber_le_of_card_le_nsmul\n\n",
 "exists_card_fiber_le_of_card_le_mul":
 "/-- The strong pigeonhole principle for finitely many pigeons and pigeonholes.  Given a function `f`\nbetween finite types `α` and `β` and a number `n` such that `card α ≤ card β * n`, there exists an\nelement `y : β` such that its preimage has at most `n` elements. See also\n`fintype.exists_card_fiber_lt_of_card_lt_mul` for a stronger statement. -/\ntheorem exists_card_fiber_le_of_card_le_mul [Nonempty β] (hn : card α ≤ card β * n) :\n    ∃ y : β, (univ.filter fun x => f x = y).card ≤ n :=\n  exists_card_fiber_le_of_card_le_nsmul _ hn\n#align exists_card_fiber_le_of_card_le_mul exists_card_fiber_le_of_card_le_mul\n\n"}