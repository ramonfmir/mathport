{"sum_card_bipartite_above_eq_sum_card_bipartite_below":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_card_bipartite_above_eq_sum_card_bipartite_below [∀ a b, decidable (r a b)] :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (t.bipartite_above r a).card =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t\n        (s.bipartite_below r b).card :=\n  by\n  simp_rw [card_eq_sum_ones, bipartite_above, bipartite_below, sum_filter]\n  exact sum_comm\n#align sum_card_bipartite_above_eq_sum_card_bipartite_below sum_card_bipartite_above_eq_sum_card_bipartite_below\n\n",
 "mem_bipartite_below":
 "@[simp]\ntheorem mem_bipartite_below {a : α} : a ∈ s.bipartite_below r b ↔ a ∈ s ∧ r a b :=\n  mem_filter\n#align mem_bipartite_below mem_bipartite_below\n\n",
 "mem_bipartite_above":
 "@[simp]\ntheorem mem_bipartite_above {b : β} : b ∈ t.bipartite_above r a ↔ b ∈ t ∧ r a b :=\n  mem_filter\n#align mem_bipartite_above mem_bipartite_above\n\n",
 "coe_bipartite_below":
 "@[simp, norm_cast]\ntheorem coe_bipartite_below : (s.bipartite_below r b : set α) = { a ∈ s | r a b } :=\n  coe_filter _ _\n#align coe_bipartite_below coe_bipartite_below\n\n",
 "coe_bipartite_above":
 "@[simp, norm_cast]\ntheorem coe_bipartite_above : (t.bipartite_above r a : set β) = { b ∈ t | r a b } :=\n  coe_filter _ _\n#align coe_bipartite_above coe_bipartite_above\n\n",
 "card_mul_le_card_mul'":
 "theorem card_mul_le_card_mul' [∀ a b, decidable (r a b)] (hn : ∀ b ∈ t, n ≤ (s.bipartite_below r b).card)\n    (hm : ∀ a ∈ s, (t.bipartite_above r a).card ≤ m) : t.card * n ≤ s.card * m :=\n  card_mul_le_card_mul (swap r) hn hm\n#align card_mul_le_card_mul' card_mul_le_card_mul'\n\n",
 "card_mul_le_card_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- Double counting argument. Considering `r` as a bipartite graph, the LHS is a lower bound on the\nnumber of edges while the RHS is an upper bound. -/\ntheorem card_mul_le_card_mul [∀ a b, decidable (r a b)] (hm : ∀ a ∈ s, m ≤ (t.bipartite_above r a).card)\n    (hn : ∀ b ∈ t, (s.bipartite_below r b).card ≤ n) : s.card * m ≤ t.card * n :=\n  calc\n    _ ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          (t.bipartite_above r a).card :=\n      s.card_nsmul_le_sum _ _ hm\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t\n          (s.bipartite_below r b).card :=\n      sum_card_bipartite_above_eq_sum_card_bipartite_below _\n    _ ≤ _ := t.sum_le_card_nsmul _ _ hn\n    \n#align card_mul_le_card_mul card_mul_le_card_mul\n\n",
 "card_mul_eq_card_mul":
 "theorem card_mul_eq_card_mul [∀ a b, decidable (r a b)] (hm : ∀ a ∈ s, (t.bipartite_above r a).card = m)\n    (hn : ∀ b ∈ t, (s.bipartite_below r b).card = n) : s.card * m = t.card * n :=\n  (card_mul_le_card_mul _ (fun a ha => (hm a ha).ge) fun b hb => (hn b hb).le).antisymm <|\n    card_mul_le_card_mul' _ (fun a ha => (hn a ha).ge) fun b hb => (hm b hb).le\n#align card_mul_eq_card_mul card_mul_eq_card_mul\n\n",
 "card_le_card_of_right_total_unique":
 "theorem card_le_card_of_right_total_unique (h₁ : right_total r) (h₂ : right_unique r) :\n    fintype.card β ≤ fintype.card α :=\n  card_le_card_of_forall_subsingleton' r (by simpa using h₁) fun b _ a₁ ha₁ a₂ ha₂ => h₂ ha₁.2 ha₂.2\n#align card_le_card_of_right_total_unique card_le_card_of_right_total_unique\n\n",
 "card_le_card_of_left_total_unique":
 "theorem card_le_card_of_left_total_unique (h₁ : left_total r) (h₂ : left_unique r) : fintype.card α ≤ fintype.card β :=\n  card_le_card_of_forall_subsingleton r (by simpa using h₁) fun b _ a₁ ha₁ a₂ ha₂ => h₂ ha₁.2 ha₂.2\n#align card_le_card_of_left_total_unique card_le_card_of_left_total_unique\n\n",
 "card_le_card_of_forall_subsingleton'":
 "theorem card_le_card_of_forall_subsingleton' (ht : ∀ b ∈ t, ∃ a, a ∈ s ∧ r a b)\n    (hs : ∀ a ∈ s, ({ b ∈ t | r a b } : set β).subsingleton) : t.card ≤ s.card :=\n  card_le_card_of_forall_subsingleton (swap r) ht hs\n#align card_le_card_of_forall_subsingleton' card_le_card_of_forall_subsingleton'\n\n",
 "card_le_card_of_forall_subsingleton":
 "theorem card_le_card_of_forall_subsingleton (hs : ∀ a ∈ s, ∃ b, b ∈ t ∧ r a b)\n    (ht : ∀ b ∈ t, ({ a ∈ s | r a b } : set α).subsingleton) : s.card ≤ t.card := by\n  classical simpa using\n      card_mul_le_card_mul _\n        (fun a h =>\n          card_pos.2 <|\n            (by\n              rw [← coe_nonempty, coe_bipartite_above]\n              exact hs _ h : (t.bipartite_above r a).nonempty))\n        fun b h =>\n        card_le_one.2 <| by\n          simp_rw [mem_bipartite_below]\n          exact ht _ h\n#align card_le_card_of_forall_subsingleton card_le_card_of_forall_subsingleton\n\n",
 "bipartite_below_swap":
 "/-\nCopyright (c) 2022 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\ntheorem bipartite_below_swap : t.bipartite_below (swap r) a = t.bipartite_above r a :=\n  rfl\n#align bipartite_below_swap bipartite_below_swap\n\n",
 "bipartite_above_swap":
 "theorem bipartite_above_swap : s.bipartite_above (swap r) b = s.bipartite_below r b :=\n  rfl\n#align bipartite_above_swap bipartite_above_swap\n\n"}