{"nonMemberSubfamily":
 "#print IsLowerSet.nonMemberSubfamily /-\n/-\nCopyright (c) 2022 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\ntheorem IsLowerSet.nonMemberSubfamily (h : IsLowerSet (𝒜 : Set (Finset α))) :\n    IsLowerSet (𝒜.non_member_subfamily a : Set (Finset α)) := fun s t hts =>\n  by\n  simp_rw [mem_coe, mem_non_member_subfamily]\n  exact and.imp (h hts) (mt <| @hts _)\n#align is_lower_set.non_member_subfamily IsLowerSet.nonMemberSubfamily\n-/\n\n",
 "memberSubfamily_subset_nonMemberSubfamily":
 "#print IsLowerSet.memberSubfamily_subset_nonMemberSubfamily /-\ntheorem IsLowerSet.memberSubfamily_subset_nonMemberSubfamily (h : IsLowerSet (𝒜 : Set (Finset α))) :\n    𝒜.member_subfamily a ⊆ 𝒜.non_member_subfamily a := fun s =>\n  by\n  rw [mem_member_subfamily, mem_non_member_subfamily]\n  exact And.imp_left (h <| subset_insert _ _)\n#align is_lower_set.member_subfamily_subset_non_member_subfamily IsLowerSet.memberSubfamily_subset_nonMemberSubfamily\n-/\n\n",
 "memberSubfamily":
 "#print IsLowerSet.memberSubfamily /-\ntheorem IsLowerSet.memberSubfamily (h : IsLowerSet (𝒜 : Set (Finset α))) :\n    IsLowerSet (𝒜.member_subfamily a : Set (Finset α)) :=\n  by\n  rintro s t hts\n  simp_rw [mem_coe, mem_member_subfamily]\n  exact and.imp (h <| insert_subset_insert _ hts) (mt <| @hts _)\n#align is_lower_set.member_subfamily IsLowerSet.memberSubfamily\n-/\n\n",
 "le_card_inter_finset'":
 "#print IsLowerSet.le_card_inter_finset' /-\n/-- **Harris-Kleitman inequality**: Any two lower sets of finsets correlate. -/\ntheorem IsLowerSet.le_card_inter_finset' (h𝒜 : IsLowerSet (𝒜 : Set (Finset α))) (hℬ : IsLowerSet (ℬ : Set (Finset α)))\n    (h𝒜s : ∀ t ∈ 𝒜, t ⊆ s) (hℬs : ∀ t ∈ ℬ, t ⊆ s) : 𝒜.card * ℬ.card ≤ 2 ^ s.card * (𝒜 ∩ ℬ).card :=\n  by\n  induction' s using Finset.induction with a s hs ih generalizing 𝒜 ℬ\n  · simp_rw [subset_empty, ← subset_singleton_iff', subset_singleton_iff] at h𝒜s hℬs\n    obtain rfl | rfl := h𝒜s\n    · simp only [card_empty, empty_inter, MulZeroClass.mul_zero, MulZeroClass.zero_mul]\n    obtain rfl | rfl := hℬs\n    · simp only [card_empty, inter_empty, MulZeroClass.mul_zero, MulZeroClass.zero_mul]\n    · simp only [card_empty, pow_zero, inter_singleton_of_mem, mem_singleton, card_singleton]\n  rw [card_insert_of_not_mem hs, ← card_member_subfamily_add_card_non_member_subfamily a 𝒜, ←\n    card_member_subfamily_add_card_non_member_subfamily a ℬ, add_mul, mul_add, mul_add, add_comm (_ * _),\n    add_add_add_comm]\n  refine'\n    (add_le_add_right\n          (mul_add_mul_le_mul_add_mul (card_le_of_subset h𝒜.member_subfamily_subset_non_member_subfamily) <|\n            card_le_of_subset hℬ.member_subfamily_subset_non_member_subfamily)\n          _).trans\n      _\n  rw [← two_mul, pow_succ, mul_assoc]\n  have h₀ : ∀ 𝒞 : Finset (Finset α), (∀ t ∈ 𝒞, t ⊆ insert a s) → ∀ t ∈ 𝒞.non_member_subfamily a, t ⊆ s :=\n    by\n    rintro 𝒞 h𝒞 t ht\n    rw [mem_non_member_subfamily] at ht\n    exact (subset_insert_iff_of_not_mem ht.2).1 (h𝒞 _ ht.1)\n  have h₁ : ∀ 𝒞 : Finset (Finset α), (∀ t ∈ 𝒞, t ⊆ insert a s) → ∀ t ∈ 𝒞.member_subfamily a, t ⊆ s :=\n    by\n    rintro 𝒞 h𝒞 t ht\n    rw [mem_member_subfamily] at ht\n    exact (subset_insert_iff_of_not_mem ht.2).1 ((subset_insert _ _).trans <| h𝒞 _ ht.1)\n  refine' mul_le_mul_left' _ _\n  refine'\n    (add_le_add (ih h𝒜.member_subfamily hℬ.member_subfamily (h₁ _ h𝒜s) <| h₁ _ hℬs) <|\n          ih h𝒜.non_member_subfamily hℬ.non_member_subfamily (h₀ _ h𝒜s) <| h₀ _ hℬs).trans_eq\n      _\n  rw [← mul_add, ← member_subfamily_inter, ← non_member_subfamily_inter,\n    card_member_subfamily_add_card_non_member_subfamily]\n#align is_lower_set.le_card_inter_finset' IsLowerSet.le_card_inter_finset'\n-/\n\n",
 "le_card_inter_finset":
 "#print IsUpperSet.le_card_inter_finset /-\n/-- **Harris-Kleitman inequality**: Any two upper sets of finsets correlate. -/\ntheorem IsUpperSet.le_card_inter_finset (h𝒜 : IsUpperSet (𝒜 : Set (Finset α))) (hℬ : IsUpperSet (ℬ : Set (Finset α))) :\n    𝒜.card * ℬ.card ≤ 2 ^ Fintype.card α * (𝒜 ∩ ℬ).card :=\n  by\n  rw [← isLowerSet_compl, ← coe_compl] at h𝒜\n  have := h𝒜.card_inter_le_finset hℬ\n  rwa [card_compl, Fintype.card_finset, tsub_mul, le_tsub_iff_le_tsub, ← mul_tsub, ←\n    card_sdiff (inter_subset_right _ _), sdiff_inter_self_right, sdiff_compl, _root_.inf_comm] at this\n  · exact mul_le_mul_left' (card_le_of_subset <| inter_subset_right _ _) _\n  · rw [← Fintype.card_finset]\n    exact mul_le_mul_right' (card_le_univ _) _\n#align is_upper_set.le_card_inter_finset IsUpperSet.le_card_inter_finset\n-/\n\n",
 "card_inter_le_finset":
 "#print IsLowerSet.card_inter_le_finset /-\n/-- **Harris-Kleitman inequality**: Lower sets and upper sets of finsets anticorrelate. -/\ntheorem IsLowerSet.card_inter_le_finset (h𝒜 : IsLowerSet (𝒜 : Set (Finset α))) (hℬ : IsUpperSet (ℬ : Set (Finset α))) :\n    2 ^ Fintype.card α * (𝒜 ∩ ℬ).card ≤ 𝒜.card * ℬ.card :=\n  by\n  rw [inter_comm, mul_comm 𝒜.card]\n  exact hℬ.card_inter_le_finset h𝒜\n#align is_lower_set.card_inter_le_finset IsLowerSet.card_inter_le_finset\n-/\n\n"}