{"trees_of_nodes_eq_zero":
 "@[simp]\ntheorem trees_of_nodes_eq_zero : treesOfNumNodesEq 0 = {nil} := by rw [trees_of_num_nodes_eq]\n#align trees_of_nodes_eq_zero trees_of_nodes_eq_zero\n\n",
 "trees_of_nodes_eq_succ":
 "theorem trees_of_nodes_eq_succ (n : ℕ) :\n    treesOfNumNodesEq (n + 1) =\n      (Nat.antidiagonal n).bUnion fun ij => pairwiseNode (treesOfNumNodesEq ij.1) (treesOfNumNodesEq ij.2) :=\n  by\n  rw [trees_of_num_nodes_eq]\n  ext\n  simp\n#align trees_of_nodes_eq_succ trees_of_nodes_eq_succ\n\n",
 "trees_of_nodes_eq_card_eq_catalan":
 "theorem trees_of_nodes_eq_card_eq_catalan (n : ℕ) : (treesOfNumNodesEq n).card = catalan n :=\n  by\n  induction' n using nat.case_strong_induction_on with n ih\n  · simp\n  rw [trees_of_nodes_eq_succ, card_bUnion, catalan_succ']\n  · apply sum_congr rfl\n    rintro ⟨i, j⟩ H\n    simp [ih _ (fst_le H), ih _ (snd_le H)]\n  · simp_rw [disjoint_left]\n    rintro ⟨i, j⟩ _ ⟨i', j'⟩ _\n    clear * -\n    tidy\n#align trees_of_nodes_eq_card_eq_catalan trees_of_nodes_eq_card_eq_catalan\n\n",
 "succ_mul_catalan_eq_centralBinom":
 "#print succ_mul_catalan_eq_centralBinom /-\ntheorem succ_mul_catalan_eq_centralBinom (n : ℕ) : (n + 1) * catalan n = n.central_binom :=\n  (Nat.eq_mul_of_div_eq_right n.succ_dvd_central_binom (catalan_eq_centralBinom_div n).symm).symm\n#align succ_mul_catalan_eq_central_binom succ_mul_catalan_eq_centralBinom\n-/\n\n",
 "mem_trees_of_nodes_eq_num_nodes":
 "theorem mem_trees_of_nodes_eq_num_nodes (x : Tree Unit) : x ∈ treesOfNumNodesEq x.num_nodes :=\n  mem_treesOfNumNodesEq.mpr rfl\n#align mem_trees_of_nodes_eq_num_nodes mem_trees_of_nodes_eq_num_nodes\n\n",
 "mem_trees_of_nodes_eq":
 "@[simp]\ntheorem mem_trees_of_nodes_eq {x : Tree Unit} {n : ℕ} : x ∈ treesOfNumNodesEq n ↔ x.num_nodes = n :=\n  by\n  induction x using Tree.unitRecOn generalizing n <;> cases n <;> simp [trees_of_nodes_eq_succ, nat.succ_eq_add_one, *]\n  trivial\n#align mem_trees_of_nodes_eq mem_trees_of_nodes_eq\n\n",
 "gosper_trick":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\nprivate theorem gosper_trick {n i : ℕ} (h : i ≤ n) :\n    gosper_catalan (n + 1) (i + 1) - gosper_catalan (n + 1) i =\n      Nat.centralBinom i / (i + 1) * Nat.centralBinom (n - i) / (n - i + 1) :=\n  by\n  have : (n : exprℚ) + 1 ≠ 0 := by exact_mod_cast n.succ_ne_zero\n  have : (n : exprℚ) + 1 + 1 ≠ 0 := by exact_mod_cast (n + 1).succ_ne_zero\n  have : (i : exprℚ) + 1 ≠ 0 := by exact_mod_cast i.succ_ne_zero\n  have : (n : exprℚ) - i + 1 ≠ 0 := by exact_mod_cast (n - i).succ_ne_zero\n  have h₁ : ((i : exprℚ) + 1) * (i + 1).central_binom = 2 * (2 * i + 1) * i.central_binom := by\n    exact_mod_cast Nat.succ_mul_centralBinom_succ i\n  have h₂ : ((n : exprℚ) - i + 1) * (n - i + 1).central_binom = 2 * (2 * (n - i) + 1) * (n - i).central_binom := by\n    exact_mod_cast Nat.succ_mul_centralBinom_succ (n - i)\n  simp only [gosper_catalan]\n  push_cast\n  field_simp\n  rw [nat.succ_sub h]\n  linear_combination\n    (2 : exprℚ) * (n - i).central_binom * (i + 1 - (n - i)) * (n + 1) * (n + 2) * (n - i + 1) * h₁ -\n      2 * i.central_binom * (n + 1) * (n + 2) * (i - (n - i) - 1) * (i + 1) * h₂\n#align gosper_trick gosper_trick\n\n",
 "gosper_catalan_sub_eq_central_binom_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\nprivate theorem gosper_catalan_sub_eq_central_binom_div (n : ℕ) :\n    gosper_catalan (n + 1) (n + 1) - gosper_catalan (n + 1) 0 = Nat.centralBinom (n + 1) / (n + 2) :=\n  by\n  have : (n : exprℚ) + 1 ≠ 0 := by exact_mod_cast n.succ_ne_zero\n  have : (n : exprℚ) + 1 + 1 ≠ 0 := by exact_mod_cast (n + 1).succ_ne_zero\n  have h : (n : exprℚ) + 2 ≠ 0 := by exact_mod_cast (n + 1).succ_ne_zero\n  simp only [gosper_catalan, nat.sub_zero, Nat.centralBinom_zero, nat.sub_self]\n  field_simp\n  ring\n#align gosper_catalan_sub_eq_central_binom_div gosper_catalan_sub_eq_central_binom_div\n\n",
 "coe_trees_of_nodes_eq":
 "@[simp, norm_cast]\ntheorem coe_trees_of_nodes_eq (n : ℕ) : ↑(treesOfNumNodesEq n) = { x : Tree Unit | x.num_nodes = n } :=\n  Set.ext (by simp)\n#align coe_trees_of_nodes_eq coe_trees_of_nodes_eq\n\n",
 "catalan_zero":
 "#print catalan_zero /-\n/-\nCopyright (c) 2022 Julian Kuelshammer. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Julian Kuelshammer\n-/\n@[simp]\ntheorem catalan_zero : catalan 0 = 1 := by rw [catalan]\n#align catalan_zero catalan_zero\n-/\n\n",
 "catalan_two":
 "#print catalan_two /-\ntheorem catalan_two : catalan 2 = 2 := by norm_num [catalan_eq_centralBinom_div, Nat.centralBinom, Nat.choose]\n#align catalan_two catalan_two\n-/\n\n",
 "catalan_three":
 "#print catalan_three /-\ntheorem catalan_three : catalan 3 = 5 := by norm_num [catalan_eq_centralBinom_div, Nat.centralBinom, Nat.choose]\n#align catalan_three catalan_three\n-/\n\n",
 "catalan_succ'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print catalan_succ' /-\ntheorem catalan_succ' (n : ℕ) :\n    catalan (n + 1) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (Nat.antidiagonal n) (catalan ij.1 * catalan ij.2) :=\n  by rw [catalan_succ, nat.sum_antidiagonal_eq_sum_range_succ (fun x y => catalan x * catalan y) n, sum_range]\n#align catalan_succ' catalan_succ'\n-/\n\n",
 "catalan_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n#print catalan_succ /-\ntheorem catalan_succ (n : ℕ) :\n    catalan (n + 1) =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (catalan i * catalan (n - i)) :=\n  by rw [catalan]\n#align catalan_succ catalan_succ\n-/\n\n",
 "catalan_one":
 "#print catalan_one /-\n@[simp]\ntheorem catalan_one : catalan 1 = 1 := by simp [catalan_succ]\n#align catalan_one catalan_one\n-/\n\n",
 "catalan_eq_centralBinom_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n#print catalan_eq_centralBinom_div /-\ntheorem catalan_eq_centralBinom_div (n : ℕ) : catalan n = n.central_binom / (n + 1) :=\n  by\n  suffices (catalan n : exprℚ) = Nat.centralBinom n / (n + 1)\n    by\n    have h := Nat.succ_dvd_centralBinom n\n    exact_mod_cast this\n  induction' n using nat.case_strong_induction_on with d hd\n  · simp\n  · simp_rw [catalan_succ, Nat.cast_sum, Nat.cast_mul]\n    trans\n      (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (Nat.centralBinom i / (i + 1) * (Nat.centralBinom (d - i) / (d - i + 1))) :\n        exprℚ)\n    · refine' sum_congr rfl fun i _ => _\n      congr\n      · exact_mod_cast hd i i.is_le\n      · rw_mod_cast [hd (d - i)]\n        push_cast\n        rw [Nat.cast_sub i.is_le]\n        exact tsub_le_self\n    · trans\n        finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (gosper_catalan (d + 1) (i + 1) - gosper_catalan (d + 1) i)\n      · refine' sum_congr rfl fun i _ => _\n        rw_mod_cast [gosper_trick i.is_le, mul_div]\n      · rw [← sum_range fun i => gosper_catalan (d + 1) (i + 1) - gosper_catalan (d + 1) i, sum_range_sub,\n          nat.succ_eq_add_one]\n        exact_mod_cast gosper_catalan_sub_eq_central_binom_div d\n#align catalan_eq_central_binom_div catalan_eq_centralBinom_div\n-/\n\n"}