{"of_obj":
 "/-\nCopyright (c) 2022 Rémi Bottinelli. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Rémi Bottinelli\n-/\n@[simp]\ntheorem of_obj : (of σ).obj = σ :=\n  rfl\n#align of_obj of_obj\n\n",
 "lift_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤q » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙q » -/\ntheorem lift_unique (Φ : «expr ⥤q » (Push σ) W') (Φ₀ : Φ.obj = τ) (Φcomp : «expr ⋙q » (of σ) Φ = φ) :\n    Φ = lift σ φ τ h := by\n  dsimp only [of, lift]\n  fapply Prefunctor.ext\n  · rintro\n    simp_rw [← Φ₀]\n  · rintro _ _ ⟨⟩\n    subst_vars\n    simp only [Prefunctor.comp_map, cast_eq]\n    rfl\n#align lift_unique lift_unique\n\n",
 "lift_obj":
 "theorem lift_obj : (lift σ φ τ h).obj = τ :=\n  rfl\n#align lift_obj lift_obj\n\n",
 "lift_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙q » -/\ntheorem lift_comp : «expr ⋙q » (of σ) (lift σ φ τ h) = φ :=\n  by\n  fapply Prefunctor.ext\n  · rintro\n    simp only [Prefunctor.comp_obj]\n    symm\n    exact h X\n  · rintro _ _ f\n    simp only [Prefunctor.comp_map]\n    apply eq_of_heq\n    iterate 2 apply (cast_heq _ _).trans\n    symm\n    iterate 2 apply (eq_rec_heq _ _).trans\n    rfl\n#align lift_comp lift_comp\n\n"}