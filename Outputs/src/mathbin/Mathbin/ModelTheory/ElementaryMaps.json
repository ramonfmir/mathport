{"to_embedding_to_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[simp]\ntheorem to_embedding_to_hom (f : elementary_embedding M L N) : f.to_embedding.to_hom = f.to_hom :=\n  rfl\n#align to_embedding_to_hom to_embedding_to_hom\n\n",
 "to_elementary_embedding_to_embedding":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `language.equiv -/\n@[simp]\ntheorem to_elementary_embedding_to_embedding (f : language.equiv M L N) :\n    f.to_elementary_embedding.to_embedding = f.to_embedding :=\n  rfl\n#align to_elementary_embedding_to_embedding to_elementary_embedding_to_embedding\n\n",
 "refl_apply":
 "@[simp]\ntheorem refl_apply (x : M) : refl L M x = x :=\n  rfl\n#align refl_apply refl_apply\n\n",
 "realize_term_substructure":
 "@[simp]\ntheorem realize_term_substructure {α : Type _} {S : L.substructure M} (v : α → S) (t : L.term α) :\n    t.realize (coe ∘ v) = (↑(t.realize v) : M) :=\n  S.subtype.realize_term t\n#align realize_term_substructure realize_term_substructure\n\n",
 "realize_sentence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `Theory.model -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `Theory.model -/\n@[simp]\ntheorem realize_sentence (S : L.elementary_substructure M) (φ : L.sentence) : Theory.model S φ ↔ Theory.model M φ :=\n  S.subtype.map_sentence φ\n#align realize_sentence realize_sentence\n\n",
 "realize_formula_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem realize_formula_top {α : Type _} {φ : L.formula α} {v : α → («expr⊤» : L.substructure M)} :\n    φ.realize v ↔ φ.realize ((coe : («expr⊤» : L.substructure M) → M) ∘ v) :=\n  by\n  rw [← substructure.top_equiv.realize_formula φ]\n  simp\n#align realize_formula_top realize_formula_top\n\n",
 "realize_bounded_formula_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem realize_bounded_formula_top {α : Type _} {n : ℕ} {φ : L.bounded_formula α n}\n    {v : α → («expr⊤» : L.substructure M)} {xs : Fin n → («expr⊤» : L.substructure M)} :\n    φ.realize v xs ↔ φ.realize ((coe : _ → M) ∘ v) (coe ∘ xs) :=\n  by\n  rw [← substructure.top_equiv.realize_bounded_formula φ]\n  simp\n#align realize_bounded_formula_top realize_bounded_formula_top\n\n",
 "mem_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem mem_top (x : M) : x ∈ («expr⊤» : L.elementary_substructure M) :=\n  Set.mem_univ x\n#align mem_top mem_top\n\n",
 "map_sentence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `Theory.model -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `Theory.model -/\ntheorem map_sentence (f : elementary_embedding M L N) (φ : L.sentence) : Theory.model M φ ↔ Theory.model N φ := by\n  rw [sentence.realize, sentence.realize, ← f.map_formula, Unique.eq_default (f ∘ default)]\n#align map_sentence map_sentence\n\n",
 "map_rel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[simp]\ntheorem map_rel (φ : elementary_embedding M L N) {n : ℕ} (r : L.relations n) (x : Fin n → M) :\n    RelMap r (φ ∘ x) ↔ RelMap r x :=\n  haveI h := φ.map_formula (r.formula var) x\n  h\n#align map_rel map_rel\n\n",
 "map_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[simp]\ntheorem map_fun (φ : elementary_embedding M L N) {n : ℕ} (f : L.functions n) (x : Fin n → M) :\n    φ (funMap f x) = funMap f (φ ∘ x) :=\n  by\n  have h := φ.map_formula (formula.graph f) (Fin.cons (fun_map f x) x)\n  rw [formula.realize_graph, Fin.comp_cons, formula.realize_graph] at h\n  rw [eq_comm, h]\n#align map_fun map_fun\n\n",
 "map_formula":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[simp]\ntheorem map_formula (f : elementary_embedding M L N) {α : Type _} (φ : L.formula α) (x : α → M) :\n    φ.realize (f ∘ x) ↔ φ.realize x := by\n  rw [formula.realize, formula.realize, ← f.map_bounded_formula, Unique.eq_default (f ∘ default)]\n#align map_formula map_formula\n\n",
 "map_constants":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[simp]\ntheorem map_constants (φ : elementary_embedding M L N) (c : L.constants) : φ c = c :=\n  HomClass.map_constants φ c\n#align map_constants map_constants\n\n",
 "map_bounded_formula":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n/-\nCopyright (c) 2022 Aaron Anderson. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Aaron Anderson\n-/\n@[simp]\ntheorem map_bounded_formula (f : elementary_embedding M L N) {α : Type _} {n : ℕ} (φ : L.bounded_formula α n)\n    (v : α → M) (xs : Fin n → M) : φ.realize (f ∘ v) (f ∘ xs) ↔ φ.realize v xs := by\n  classical\n    rw [← bounded_formula.realize_restrict_free_var Set.Subset.rfl, Set.inclusion_eq_id, iff_eq_eq]\n    swap\n    · infer_instance\n    have h :=\n      f.map_formula' ((φ.restrict_free_var id).to_formula.relabel (Fintype.equivFin _))\n        (Sum.elim (v ∘ coe) xs ∘ (Fintype.equivFin _).symm)\n    simp only [formula.realize_relabel, bounded_formula.realize_to_formula, iff_eq_eq] at h\n    rw [← function.comp.assoc _ _ (Fintype.equivFin _).symm,\n      function.comp.assoc _ (Fintype.equivFin _).symm (Fintype.equivFin _), Equiv.symm_comp_self,\n      function.comp.right_id, function.comp.assoc, Sum.elim_comp_inl, function.comp.assoc _ _ Sum.inr,\n      Sum.elim_comp_inr, ← function.comp.assoc] at h\n    refine' h.trans _\n    rw [function.comp.assoc _ _ (Fintype.equivFin _), Equiv.symm_comp_self, function.comp.right_id, Sum.elim_comp_inl,\n      Sum.elim_comp_inr, ← Set.inclusion_eq_id, bounded_formula.realize_restrict_free_var Set.Subset.rfl]\n#align map_bounded_formula map_bounded_formula\n\n",
 "is_elementary_of_exists":
 "/-- The Tarski-Vaught test for elementarity of a substructure. -/\ntheorem is_elementary_of_exists (S : L.substructure M)\n    (htv :\n      ∀ (n : ℕ) (φ : L.bounded_formula Empty (n + 1)) (x : Fin n → S) (a : M),\n        φ.realize default (Fin.snoc (coe ∘ x) a : _ → M) → ∃ b : S, φ.realize default (Fin.snoc (coe ∘ x) b : _ → M)) :\n    S.is_elementary := fun n => S.subtype.is_elementary_of_exists htv\n#align is_elementary_of_exists is_elementary_of_exists\n\n",
 "is_elementary":
 "@[simp]\ntheorem is_elementary (S : L.elementary_substructure M) : (S : L.substructure M).is_elementary :=\n  S.is_elementary'\n#align is_elementary is_elementary\n\n",
 "injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[simp]\ntheorem injective (φ : elementary_embedding M L N) : function.injective φ :=\n  by\n  intro x y\n  have h := φ.map_formula ((var 0).equal (var 1) : L.formula (Fin 2)) fun i => if i = 0 then x else y\n  rw [formula.realize_equal, formula.realize_equal] at h\n  simp only [nat.one_ne_zero, term.realize, Fin.one_eq_zero_iff, if_true, eq_self_iff_true, Function.comp_apply,\n    if_false] at h\n  exact h.1\n#align injective injective\n\n",
 "ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\ntheorem ext_iff {f g : elementary_embedding M L N} : f = g ↔ ∀ x, f x = g x :=\n  FunLike.ext_iff\n#align ext_iff ext_iff\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[ext]\ntheorem ext ⦃f g : elementary_embedding M L N⦄ (h : ∀ x, f x = g x) : f = g :=\n  FunLike.ext f g h\n#align ext ext\n\n",
 "elementarily_equivalent":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementarily_equivalent -/\ntheorem elementarily_equivalent (S : L.elementary_substructure M) : elementarily_equivalent S L M :=\n  S.subtype.elementarily_equivalent\n#align elementarily_equivalent elementarily_equivalent\n\n",
 "comp_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n/-- Composition of elementary embeddings is associative. -/\ntheorem comp_assoc (f : elementary_embedding M L N) (g : elementary_embedding N L P) (h : elementary_embedding P L Q) :\n    (h.comp g).comp f = h.comp (g.comp f) :=\n  rfl\n#align comp_assoc comp_assoc\n\n",
 "comp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[simp]\ntheorem comp_apply (g : elementary_embedding N L P) (f : elementary_embedding M L N) (x : M) : g.comp f x = g (f x) :=\n  rfl\n#align comp_apply comp_apply\n\n",
 "coe_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem coe_top : ((«expr⊤» : L.elementary_substructure M) : Set M) = Set.univ :=\n  rfl\n#align coe_top coe_top\n\n",
 "coe_to_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[simp]\ntheorem coe_to_hom {f : elementary_embedding M L N} : (f.to_hom : M → N) = (f : M → N) :=\n  rfl\n#align coe_to_hom coe_to_hom\n\n",
 "coe_to_embedding":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\n@[simp]\ntheorem coe_to_embedding (f : elementary_embedding M L N) : (f.to_embedding : M → N) = (f : M → N) :=\n  rfl\n#align coe_to_embedding coe_to_embedding\n\n",
 "coe_to_elementary_embedding":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `language.equiv -/\n@[simp]\ntheorem coe_to_elementary_embedding (f : language.equiv M L N) : (f.to_elementary_embedding : M → N) = (f : M → N) :=\n  rfl\n#align coe_to_elementary_embedding coe_to_elementary_embedding\n\n",
 "coe_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_subtype {S : L.elementary_substructure M} : «expr⇑ » S.subtype = coe :=\n  rfl\n#align coe_subtype coe_subtype\n\n",
 "coe_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `elementary_embedding -/\ntheorem coe_injective : @function.injective (elementary_embedding M L N) (M → N) coe_fn :=\n  FunLike.coe_injective\n#align coe_injective coe_injective\n\n",
 "Theory_model_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `Theory.model -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `Theory.model -/\n@[simp]\ntheorem Theory_model_iff (S : L.elementary_substructure M) (T : L.Theory) : Theory.model S T ↔ Theory.model M T := by\n  simp only [Theory.model_iff, realize_sentence]\n#align Theory_model_iff Theory_model_iff\n\n"}