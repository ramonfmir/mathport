{"mul_norm_eq_abs_sub_sq_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-\nCopyright (c) 2021 Manuel Candales. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Manuel Candales, Benjamin Davidson\n-/\ntheorem mul_norm_eq_abs_sub_sq_norm {x y z : V} (h₁ : ∃ k : exprℝ, k ≠ 1 ∧ x + y = «expr • » k (x - y))\n    (h₂ : «expr‖ ‖» (z - y) = «expr‖ ‖» (z + y)) :\n    «expr‖ ‖» (x - y) * «expr‖ ‖» (x + y) = |«expr‖ ‖» (z + y) ^ 2 - «expr‖ ‖» (z - x) ^ 2| :=\n  by\n  obtain ⟨k, hk_ne_one, hk⟩ := h₁\n  let r := (k - 1)⁻¹ * (k + 1)\n  have hxy : x = «expr • » r y :=\n    by\n    rw [← smul_smul, eq_inv_smul_iff₀ (sub_ne_zero.mpr hk_ne_one), ← sub_eq_zero]\n    calc\n      «expr • » (k - 1) x - «expr • » (k + 1) y = «expr • » k x - x - («expr • » k y + y) := by\n        simp_rw [sub_smul, add_smul, one_smul]\n      _ = «expr • » k x - «expr • » k y - (x + y) := by simp_rw [← sub_sub, sub_right_comm]\n      _ = «expr • » k (x - y) - (x + y) := by rw [← smul_sub k x y]\n      _ = 0 := sub_eq_zero.mpr hk.symm\n      \n  have hzy : inner.real z y = 0 := by\n    rwa [inner_eq_zero_iff_angle_eq_pi_div_two, ← norm_add_eq_norm_sub_iff_angle_eq_pi_div_two, eq_comm]\n  have hzx : inner.real z x = 0 := by rw [hxy, inner_smul_right, hzy, mul_zero]\n  calc\n    «expr‖ ‖» (x - y) * «expr‖ ‖» (x + y) = «expr‖ ‖» («expr • » (r - 1) y) * «expr‖ ‖» («expr • » (r + 1) y) := by\n      simp [sub_smul, add_smul, hxy]\n    _ = «expr‖ ‖» (r - 1) * «expr‖ ‖» y * («expr‖ ‖» (r + 1) * «expr‖ ‖» y) := by simp_rw [norm_smul]\n    _ = «expr‖ ‖» (r - 1) * «expr‖ ‖» (r + 1) * «expr‖ ‖» y ^ 2 := by ring\n    _ = |(r - 1) * (r + 1) * «expr‖ ‖» y ^ 2| := by simp [abs_mul]\n    _ = |r ^ 2 * «expr‖ ‖» y ^ 2 - «expr‖ ‖» y ^ 2| := by ring_nf\n    _ = |«expr‖ ‖» x ^ 2 - «expr‖ ‖» y ^ 2| := by simp [hxy, norm_smul, mul_pow, sq_abs]\n    _ = |«expr‖ ‖» (z + y) ^ 2 - «expr‖ ‖» (z - x) ^ 2| := by\n      simp [norm_add_sq_real, norm_sub_sq_real, hzy, hzx, abs_sub_comm]\n    \n#align mul_norm_eq_abs_sub_sq_norm mul_norm_eq_abs_sub_sq_norm\n\n",
 "mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `angle -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `angle -/\n/-- **Intersecting Secants Theorem**. -/\ntheorem mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_zero {a b c d p : P} (h : cospherical ({a, b, c, d} : set P))\n    (hab : a ≠ b) (hcd : c ≠ d) (hapb : (angle) a p b = 0) (hcpd : (angle) c p d = 0) :\n    dist a p * dist b p = dist c p * dist d p :=\n  by\n  obtain ⟨-, k₁, -, hab₁⟩ := angle_eq_zero_iff.mp hapb\n  obtain ⟨-, k₂, -, hcd₁⟩ := angle_eq_zero_iff.mp hcpd\n  refine' mul_dist_eq_mul_dist_of_cospherical h ⟨k₁, _, hab₁⟩ ⟨k₂, _, hcd₁⟩ <;> by_contra hnot <;>\n    simp_all only [not_not, one_smul]\n  exacts[hab (vsub_left_cancel hab₁).symm, hcd (vsub_left_cancel hcd₁).symm]\n#align mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_zero mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_zero\n\n",
 "mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `angle -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `angle -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- **Intersecting Chords Theorem**. -/\ntheorem mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_pi {a b c d p : P} (h : cospherical ({a, b, c, d} : set P))\n    (hapb : (angle) a p b = real.pi) (hcpd : (angle) c p d = real.pi) : dist a p * dist b p = dist c p * dist d p :=\n  by\n  obtain ⟨-, k₁, _, hab⟩ := angle_eq_pi_iff.mp hapb\n  obtain ⟨-, k₂, _, hcd⟩ := angle_eq_pi_iff.mp hcpd\n  exact mul_dist_eq_mul_dist_of_cospherical h ⟨k₁, by linarith, hab⟩ ⟨k₂, by linarith, hcd⟩\n#align mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_pi mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_pi\n\n",
 "mul_dist_eq_mul_dist_of_cospherical":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- If `A`, `B`, `C`, `D` are cospherical and `P` is on both lines `AB` and `CD`, then\n`AP * BP = CP * DP`. -/\ntheorem mul_dist_eq_mul_dist_of_cospherical {a b c d p : P} (h : cospherical ({a, b, c, d} : set P))\n    (hapb : ∃ k₁ : exprℝ, k₁ ≠ 1 ∧ «expr -ᵥ » b p = «expr • » k₁ («expr -ᵥ » a p))\n    (hcpd : ∃ k₂ : exprℝ, k₂ ≠ 1 ∧ «expr -ᵥ » d p = «expr • » k₂ («expr -ᵥ » c p)) :\n    dist a p * dist b p = dist c p * dist d p :=\n  by\n  obtain ⟨q, r, h'⟩ := (cospherical_def {a, b, c, d}).mp h\n  obtain ⟨ha, hb, hc, hd⟩ := h' a _, h' b _, h' c _, h' d _\n  · rw [← hd] at hc\n    rw [← hb] at ha\n    rw [mul_dist_eq_abs_sub_sq_dist hapb ha, hb, mul_dist_eq_abs_sub_sq_dist hcpd hc, hd]\n  all_goals simp\n#align mul_dist_eq_mul_dist_of_cospherical mul_dist_eq_mul_dist_of_cospherical\n\n",
 "mul_dist_eq_abs_sub_sq_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- If `P` is a point on the line `AB` and `Q` is equidistant from `A` and `B`, then\n`AP * BP = abs (BQ ^ 2 - PQ ^ 2)`. -/\ntheorem mul_dist_eq_abs_sub_sq_dist {a b p q : P}\n    (hp : ∃ k : exprℝ, k ≠ 1 ∧ «expr -ᵥ » b p = «expr • » k («expr -ᵥ » a p)) (hq : dist a q = dist b q) :\n    dist a p * dist b p = |dist b q ^ 2 - dist p q ^ 2| :=\n  by\n  let m : P := midpoint (exprℝ) a b\n  obtain ⟨v, h1, h2, h3⟩ := vsub_sub_vsub_cancel_left, v a p m, v p q m, v a q m\n  have h : ∀ r, «expr -ᵥ » b r = «expr -ᵥ » m r + «expr -ᵥ » m a := fun r => by\n    rw [midpoint_vsub_left, ← right_vsub_midpoint, add_comm, vsub_add_vsub_cancel]\n  iterate 4 rw [dist_eq_norm_vsub V]\n  rw [← h1, ← h2, h, h]\n  rw [← h1, h] at hp\n  rw [dist_eq_norm_vsub V a q, dist_eq_norm_vsub V b q, ← h3, h] at hq\n  exact mul_norm_eq_abs_sub_sq_norm hp hq\n#align mul_dist_eq_abs_sub_sq_dist mul_dist_eq_abs_sub_sq_dist\n\n",
 "mul_dist_add_mul_dist_eq_mul_dist_of_cospherical":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `angle -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `angle -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- **Ptolemy’s Theorem**. -/\ntheorem mul_dist_add_mul_dist_eq_mul_dist_of_cospherical {a b c d p : P} (h : cospherical ({a, b, c, d} : set P))\n    (hapc : (angle) a p c = real.pi) (hbpd : (angle) b p d = real.pi) :\n    dist a b * dist c d + dist b c * dist d a = dist a c * dist b d :=\n  by\n  have h' : cospherical ({a, c, b, d} : set P) := by rwa [Set.insert_comm c b {d}]\n  have hmul := mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_pi h' hapc hbpd\n  have hbp := left_dist_ne_zero_of_angle_eq_pi hbpd\n  have h₁ : dist c d = dist c p / dist b p * dist a b :=\n    by\n    rw [dist_mul_of_eq_angle_of_dist_mul b p a c p d, dist_comm a b]\n    · rw [angle_eq_angle_of_angle_eq_pi_of_angle_eq_pi hbpd hapc, angle_comm]\n    all_goals field_simp [mul_comm, hmul]\n  have h₂ : dist d a = dist a p / dist b p * dist b c :=\n    by\n    rw [dist_mul_of_eq_angle_of_dist_mul c p b d p a, dist_comm c b]\n    · rwa [angle_comm, angle_eq_angle_of_angle_eq_pi_of_angle_eq_pi]\n      rwa [angle_comm]\n    all_goals field_simp [mul_comm, hmul]\n  have h₃ : dist d p = dist a p * dist c p / dist b p := by field_simp [mul_comm, hmul]\n  have h₄ : ∀ x y : exprℝ, x * (y * x) = x * x * y := fun x y => by rw [mul_left_comm, mul_comm]\n  field_simp [h₁, h₂, dist_eq_add_dist_of_angle_eq_pi hbpd, h₃, hbp, dist_comm a b, h₄, ← sq,\n    dist_sq_mul_dist_add_dist_sq_mul_dist b, hapc]\n#align mul_dist_add_mul_dist_eq_mul_dist_of_cospherical mul_dist_add_mul_dist_eq_mul_dist_of_cospherical\n\n"}