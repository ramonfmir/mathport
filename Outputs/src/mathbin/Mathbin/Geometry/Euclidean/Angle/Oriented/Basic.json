{"two_zsmul_oangle_smul_smul_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Twice the angle between two multiples of a vector is 0. -/\n@[simp]\ntheorem two_zsmul_oangle_smul_smul_self (x : V) {r₁ r₂ : exprℝ} :\n    «expr • » (2 : ℤ) (o.oangle («expr • » r₁ x) («expr • » r₂ x)) = 0 := by by_cases h : r₁ = 0 <;> simp [h]\n#align two_zsmul_oangle_smul_smul_self two_zsmul_oangle_smul_smul_self\n\n",
 "two_zsmul_oangle_smul_right_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Twice the angle between a vector and a multiple of that vector is 0. -/\n@[simp]\ntheorem two_zsmul_oangle_smul_right_self (x : V) {r : exprℝ} : «expr • » (2 : ℤ) (o.oangle x («expr • » r x)) = 0 := by\n  rcases lt_or_le r 0 with (h | h) <;> simp [h]\n#align two_zsmul_oangle_smul_right_self two_zsmul_oangle_smul_right_self\n\n",
 "two_zsmul_oangle_smul_right_of_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Multiplying the second vector passed to `oangle` by a nonzero real does not change twice the\nangle. -/\n@[simp]\ntheorem two_zsmul_oangle_smul_right_of_ne_zero (x y : V) {r : exprℝ} (hr : r ≠ 0) :\n    «expr • » (2 : ℤ) (o.oangle x («expr • » r y)) = «expr • » (2 : ℤ) (o.oangle x y) := by\n  rcases hr.lt_or_lt with (h | h) <;> simp [h]\n#align two_zsmul_oangle_smul_right_of_ne_zero two_zsmul_oangle_smul_right_of_ne_zero\n\n",
 "two_zsmul_oangle_smul_left_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Twice the angle between a multiple of a vector and that vector is 0. -/\n@[simp]\ntheorem two_zsmul_oangle_smul_left_self (x : V) {r : exprℝ} : «expr • » (2 : ℤ) (o.oangle («expr • » r x) x) = 0 := by\n  rcases lt_or_le r 0 with (h | h) <;> simp [h]\n#align two_zsmul_oangle_smul_left_self two_zsmul_oangle_smul_left_self\n\n",
 "two_zsmul_oangle_smul_left_of_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Multiplying the first vector passed to `oangle` by a nonzero real does not change twice the\nangle. -/\n@[simp]\ntheorem two_zsmul_oangle_smul_left_of_ne_zero (x y : V) {r : exprℝ} (hr : r ≠ 0) :\n    «expr • » (2 : ℤ) (o.oangle («expr • » r x) y) = «expr • » (2 : ℤ) (o.oangle x y) := by\n  rcases hr.lt_or_lt with (h | h) <;> simp [h]\n#align two_zsmul_oangle_smul_left_of_ne_zero two_zsmul_oangle_smul_left_of_ne_zero\n\n",
 "two_zsmul_oangle_right_of_span_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- If the spans of two vectors are equal, twice angles with those vectors on the right are\nequal. -/\ntheorem two_zsmul_oangle_right_of_span_eq (x : V) {y z : V} (h : «expr ∙ » (exprℝ) y = «expr ∙ » (exprℝ) z) :\n    «expr • » (2 : ℤ) (o.oangle x y) = «expr • » (2 : ℤ) (o.oangle x z) :=\n  by\n  rw [Submodule.span_singleton_eq_span_singleton] at h\n  rcases h with ⟨r, rfl⟩\n  exact (o.two_zsmul_oangle_smul_right_of_ne_zero _ _ (Units.ne_zero _)).symm\n#align two_zsmul_oangle_right_of_span_eq two_zsmul_oangle_right_of_span_eq\n\n",
 "two_zsmul_oangle_of_span_eq_of_span_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- If the spans of two pairs of vectors are equal, twice angles between those vectors are\nequal. -/\ntheorem two_zsmul_oangle_of_span_eq_of_span_eq {w x y z : V} (hwx : «expr ∙ » (exprℝ) w = «expr ∙ » (exprℝ) x)\n    (hyz : «expr ∙ » (exprℝ) y = «expr ∙ » (exprℝ) z) :\n    «expr • » (2 : ℤ) (o.oangle w y) = «expr • » (2 : ℤ) (o.oangle x z) := by\n  rw [o.two_zsmul_oangle_left_of_span_eq y hwx, o.two_zsmul_oangle_right_of_span_eq x hyz]\n#align two_zsmul_oangle_of_span_eq_of_span_eq two_zsmul_oangle_of_span_eq_of_span_eq\n\n",
 "two_zsmul_oangle_neg_self_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Twice the angle between a vector and its negation is 0. -/\n@[simp]\ntheorem two_zsmul_oangle_neg_self_right (x : V) : «expr • » (2 : ℤ) (o.oangle x (-x)) = 0 := by\n  by_cases hx : x = 0 <;> simp [hx]\n#align two_zsmul_oangle_neg_self_right two_zsmul_oangle_neg_self_right\n\n",
 "two_zsmul_oangle_neg_self_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Twice the angle between the negation of a vector and that vector is 0. -/\n@[simp]\ntheorem two_zsmul_oangle_neg_self_left (x : V) : «expr • » (2 : ℤ) (o.oangle (-x) x) = 0 := by\n  by_cases hx : x = 0 <;> simp [hx]\n#align two_zsmul_oangle_neg_self_left two_zsmul_oangle_neg_self_left\n\n",
 "two_zsmul_oangle_neg_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Negating the second vector passed to `oangle` does not change twice the angle. -/\n@[simp]\ntheorem two_zsmul_oangle_neg_right (x y : V) : «expr • » (2 : ℤ) (o.oangle x (-y)) = «expr • » (2 : ℤ) (o.oangle x y) :=\n  by\n  by_cases hx : x = 0\n  · simp [hx]\n  · by_cases hy : y = 0\n    · simp [hy]\n    · simp [o.oangle_neg_right hx hy]\n#align two_zsmul_oangle_neg_right two_zsmul_oangle_neg_right\n\n",
 "two_zsmul_oangle_neg_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Negating the first vector passed to `oangle` does not change twice the angle. -/\n@[simp]\ntheorem two_zsmul_oangle_neg_left (x y : V) : «expr • » (2 : ℤ) (o.oangle (-x) y) = «expr • » (2 : ℤ) (o.oangle x y) :=\n  by\n  by_cases hx : x = 0\n  · simp [hx]\n  · by_cases hy : y = 0\n    · simp [hy]\n    · simp [o.oangle_neg_left hx hy]\n#align two_zsmul_oangle_neg_left two_zsmul_oangle_neg_left\n\n",
 "two_zsmul_oangle_left_of_span_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- If the spans of two vectors are equal, twice angles with those vectors on the left are\nequal. -/\ntheorem two_zsmul_oangle_left_of_span_eq {x y : V} (z : V) (h : «expr ∙ » (exprℝ) x = «expr ∙ » (exprℝ) y) :\n    «expr • » (2 : ℤ) (o.oangle x z) = «expr • » (2 : ℤ) (o.oangle y z) :=\n  by\n  rw [Submodule.span_singleton_eq_span_singleton] at h\n  rcases h with ⟨r, rfl⟩\n  exact (o.two_zsmul_oangle_smul_left_of_ne_zero _ _ (Units.ne_zero _)).symm\n#align two_zsmul_oangle_left_of_span_eq two_zsmul_oangle_left_of_span_eq\n\n",
 "right_ne_zero_of_oangle_sign_ne_zero":
 "/-- If the sign of the angle between two vectors is nonzero, the second vector is nonzero. -/\ntheorem right_ne_zero_of_oangle_sign_ne_zero {x y : V} (h : (o.oangle x y).sign ≠ 0) : y ≠ 0 :=\n  o.right_ne_zero_of_oangle_ne_zero (real.angle.sign_ne_zero_iff.1 h).1\n#align right_ne_zero_of_oangle_sign_ne_zero right_ne_zero_of_oangle_sign_ne_zero\n\n",
 "right_ne_zero_of_oangle_sign_eq_one":
 "/-- If the sign of the angle between two vectors is positive, the second vector is nonzero. -/\ntheorem right_ne_zero_of_oangle_sign_eq_one {x y : V} (h : (o.oangle x y).sign = 1) : y ≠ 0 :=\n  o.right_ne_zero_of_oangle_sign_ne_zero (h.symm ▸ by decide : (o.oangle x y).sign ≠ 0)\n#align right_ne_zero_of_oangle_sign_eq_one right_ne_zero_of_oangle_sign_eq_one\n\n",
 "right_ne_zero_of_oangle_sign_eq_neg_one":
 "/-- If the sign of the angle between two vectors is negative, the second vector is nonzero. -/\ntheorem right_ne_zero_of_oangle_sign_eq_neg_one {x y : V} (h : (o.oangle x y).sign = -1) : y ≠ 0 :=\n  o.right_ne_zero_of_oangle_sign_ne_zero (h.symm ▸ by decide : (o.oangle x y).sign ≠ 0)\n#align right_ne_zero_of_oangle_sign_eq_neg_one right_ne_zero_of_oangle_sign_eq_neg_one\n\n",
 "right_ne_zero_of_oangle_ne_zero":
 "/-- If the angle between two vectors is nonzero, the second vector is nonzero. -/\ntheorem right_ne_zero_of_oangle_ne_zero {x y : V} (h : o.oangle x y ≠ 0) : y ≠ 0 :=\n  by\n  rintro rfl\n  simpa using h\n#align right_ne_zero_of_oangle_ne_zero right_ne_zero_of_oangle_ne_zero\n\n",
 "right_ne_zero_of_oangle_eq_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If the angle between two vectors is `π / 2`, the second vector is nonzero. -/\ntheorem right_ne_zero_of_oangle_eq_pi_div_two {x y : V} (h : o.oangle x y = (real.pi / 2 : exprℝ)) : y ≠ 0 :=\n  o.right_ne_zero_of_oangle_ne_zero (h.symm ▸ real.angle.pi_div_two_ne_zero : o.oangle x y ≠ 0)\n#align right_ne_zero_of_oangle_eq_pi_div_two right_ne_zero_of_oangle_eq_pi_div_two\n\n",
 "right_ne_zero_of_oangle_eq_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- If the angle between two vectors is `π`, the second vector is nonzero. -/\ntheorem right_ne_zero_of_oangle_eq_pi {x y : V} (h : o.oangle x y = real.pi) : y ≠ 0 :=\n  o.right_ne_zero_of_oangle_ne_zero (h.symm ▸ real.angle.pi_ne_zero : o.oangle x y ≠ 0)\n#align right_ne_zero_of_oangle_eq_pi right_ne_zero_of_oangle_eq_pi\n\n",
 "right_ne_zero_of_oangle_eq_neg_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If the angle between two vectors is `-π / 2`, the second vector is nonzero. -/\ntheorem right_ne_zero_of_oangle_eq_neg_pi_div_two {x y : V} (h : o.oangle x y = (-real.pi / 2 : exprℝ)) : y ≠ 0 :=\n  o.right_ne_zero_of_oangle_ne_zero (h.symm ▸ real.angle.neg_pi_div_two_ne_zero : o.oangle x y ≠ 0)\n#align right_ne_zero_of_oangle_eq_neg_pi_div_two right_ne_zero_of_oangle_eq_neg_pi_div_two\n\n",
 "oangle_zero_right":
 "/-- If the second vector passed to `oangle` is 0, the result is 0. -/\n@[simp]\ntheorem oangle_zero_right (x : V) : o.oangle x 0 = 0 := by simp [oangle]\n#align oangle_zero_right oangle_zero_right\n\n",
 "oangle_zero_left":
 "/-- If the first vector passed to `oangle` is 0, the result is 0. -/\n@[simp]\ntheorem oangle_zero_left (x : V) : o.oangle 0 x = 0 := by simp [oangle]\n#align oangle_zero_left oangle_zero_left\n\n",
 "oangle_sub_right":
 "/-- Given three nonzero vectors, the angle between the first and the third minus the angle\nbetween the second and the third equals the angle between the first and the second. -/\n@[simp]\ntheorem oangle_sub_right {x y z : V} (hx : x ≠ 0) (hy : y ≠ 0) (hz : z ≠ 0) :\n    o.oangle x z - o.oangle y z = o.oangle x y := by rw [sub_eq_iff_eq_add, o.oangle_add hx hy hz]\n#align oangle_sub_right oangle_sub_right\n\n",
 "oangle_sub_left":
 "/-- Given three nonzero vectors, the angle between the first and the third minus the angle\nbetween the first and the second equals the angle between the second and the third. -/\n@[simp]\ntheorem oangle_sub_left {x y z : V} (hx : x ≠ 0) (hy : y ≠ 0) (hz : z ≠ 0) :\n    o.oangle x z - o.oangle x y = o.oangle y z := by rw [sub_eq_iff_eq_add, o.oangle_add_swap hx hy hz]\n#align oangle_sub_left oangle_sub_left\n\n",
 "oangle_sub_eq_oangle_sub_rev_of_norm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Pons asinorum, oriented vector angle form. -/\ntheorem oangle_sub_eq_oangle_sub_rev_of_norm_eq {x y : V} (h : «expr‖ ‖» x = «expr‖ ‖» y) :\n    o.oangle x (x - y) = o.oangle (y - x) y := by simp [oangle, h]\n#align oangle_sub_eq_oangle_sub_rev_of_norm_eq oangle_sub_eq_oangle_sub_rev_of_norm_eq\n\n",
 "oangle_smul_smul_self_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The angle between two nonnegative multiples of the same vector is 0. -/\n@[simp]\ntheorem oangle_smul_smul_self_of_nonneg (x : V) {r₁ r₂ : exprℝ} (hr₁ : 0 ≤ r₁) (hr₂ : 0 ≤ r₂) :\n    o.oangle («expr • » r₁ x) («expr • » r₂ x) = 0 :=\n  by\n  rcases hr₁.lt_or_eq with (h | h)\n  · simp [h, hr₂]\n  · simp [h.symm]\n#align oangle_smul_smul_self_of_nonneg oangle_smul_smul_self_of_nonneg\n\n",
 "oangle_smul_right_self_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The angle between a vector and a nonnegative multiple of that vector is 0. -/\n@[simp]\ntheorem oangle_smul_right_self_of_nonneg (x : V) {r : exprℝ} (hr : 0 ≤ r) : o.oangle x («expr • » r x) = 0 :=\n  by\n  rcases hr.lt_or_eq with (h | h)\n  · simp [h]\n  · simp [h.symm]\n#align oangle_smul_right_self_of_nonneg oangle_smul_right_self_of_nonneg\n\n",
 "oangle_smul_right_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Multiplying the second vector passed to `oangle` by a positive real does not change the\nangle. -/\n@[simp]\ntheorem oangle_smul_right_of_pos (x y : V) {r : exprℝ} (hr : 0 < r) : o.oangle x («expr • » r y) = o.oangle x y := by\n  simp [oangle, complex.arg_real_mul _ hr]\n#align oangle_smul_right_of_pos oangle_smul_right_of_pos\n\n",
 "oangle_smul_right_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Multiplying the second vector passed to `oangle` by a negative real produces the same angle\nas negating that vector. -/\n@[simp]\ntheorem oangle_smul_right_of_neg (x y : V) {r : exprℝ} (hr : r < 0) : o.oangle x («expr • » r y) = o.oangle x (-y) := by\n  rw [← neg_neg r, neg_smul, ← smul_neg, o.oangle_smul_right_of_pos _ _ (neg_pos_of_neg hr)]\n#align oangle_smul_right_of_neg oangle_smul_right_of_neg\n\n",
 "oangle_smul_left_self_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The angle between a nonnegative multiple of a vector and that vector is 0. -/\n@[simp]\ntheorem oangle_smul_left_self_of_nonneg (x : V) {r : exprℝ} (hr : 0 ≤ r) : o.oangle («expr • » r x) x = 0 :=\n  by\n  rcases hr.lt_or_eq with (h | h)\n  · simp [h]\n  · simp [h.symm]\n#align oangle_smul_left_self_of_nonneg oangle_smul_left_self_of_nonneg\n\n",
 "oangle_smul_left_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Multiplying the first vector passed to `oangle` by a positive real does not change the\nangle. -/\n@[simp]\ntheorem oangle_smul_left_of_pos (x y : V) {r : exprℝ} (hr : 0 < r) : o.oangle («expr • » r x) y = o.oangle x y := by\n  simp [oangle, complex.arg_real_mul _ hr]\n#align oangle_smul_left_of_pos oangle_smul_left_of_pos\n\n",
 "oangle_smul_left_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Multiplying the first vector passed to `oangle` by a negative real produces the same angle\nas negating that vector. -/\n@[simp]\ntheorem oangle_smul_left_of_neg (x y : V) {r : exprℝ} (hr : r < 0) : o.oangle («expr • » r x) y = o.oangle (-x) y := by\n  rw [← neg_neg r, neg_smul, ← smul_neg, o.oangle_smul_left_of_pos _ _ (neg_pos_of_neg hr)]\n#align oangle_smul_left_of_neg oangle_smul_left_of_neg\n\n",
 "oangle_smul_add_right_eq_zero_or_eq_pi_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- Auxiliary lemma for the proof of `oangle_sign_smul_add_right`; not intended to be used\noutside of that proof. -/\ntheorem oangle_smul_add_right_eq_zero_or_eq_pi_iff {x y : V} (r : exprℝ) :\n    o.oangle x («expr • » r x + y) = 0 ∨ o.oangle x («expr • » r x + y) = real.pi ↔\n      o.oangle x y = 0 ∨ o.oangle x y = real.pi :=\n  by\n  simp_rw [oangle_eq_zero_or_eq_pi_iff_not_linear_independent, Fintype.not_linearIndependent_iff, Fin.sum_univ_two,\n    Fin.exists_fin_two]\n  refine' ⟨fun h => _, fun h => _⟩\n  · rcases h with ⟨m, h, hm⟩\n    change «expr • » (m 0) x + «expr • » (m 1) («expr • » r x + y) = 0 at h\n    refine' ⟨«expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\", _⟩\n    change «expr • » (m 0 + m 1 * r) x + «expr • » (m 1) y = 0 ∧ (m 0 + m 1 * r ≠ 0 ∨ m 1 ≠ 0)\n    rw [smul_add, smul_smul, ← add_assoc, ← add_smul] at h\n    refine' ⟨h, not_and_or.1 fun h0 => _⟩\n    obtain ⟨h0, h1⟩ := h0\n    rw [h1] at h0 hm\n    rw [MulZeroClass.zero_mul, add_zero] at h0\n    simpa [h0] using hm\n  · rcases h with ⟨m, h, hm⟩\n    change «expr • » (m 0) x + «expr • » (m 1) y = 0 at h\n    refine' ⟨«expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\", _⟩\n    change «expr • » (m 0 - m 1 * r) x + «expr • » (m 1) («expr • » r x + y) = 0 ∧ (m 0 - m 1 * r ≠ 0 ∨ m 1 ≠ 0)\n    rw [sub_smul, smul_add, smul_smul, ← add_assoc, sub_add_cancel]\n    refine' ⟨h, not_and_or.1 fun h0 => _⟩\n    obtain ⟨h0, h1⟩ := h0\n    rw [h1] at h0 hm\n    rw [MulZeroClass.zero_mul, sub_zero] at h0\n    simpa [h0] using hm\n#align oangle_smul_add_right_eq_zero_or_eq_pi_iff oangle_smul_add_right_eq_zero_or_eq_pi_iff\n\n",
 "oangle_sign_sub_smul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Subtracting a multiple of the first vector passed to `oangle` from the second vector does\nnot change the sign of the angle. -/\n@[simp]\ntheorem oangle_sign_sub_smul_right (x y : V) (r : exprℝ) :\n    (o.oangle x (y - «expr • » r x)).sign = (o.oangle x y).sign := by\n  rw [sub_eq_add_neg, ← neg_smul, add_comm, oangle_sign_smul_add_right]\n#align oangle_sign_sub_smul_right oangle_sign_sub_smul_right\n\n",
 "oangle_sign_sub_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Subtracting a multiple of the second vector passed to `oangle` from the first vector does\nnot change the sign of the angle. -/\n@[simp]\ntheorem oangle_sign_sub_smul_left (x y : V) (r : exprℝ) : (o.oangle (x - «expr • » r y) y).sign = (o.oangle x y).sign :=\n  by rw [sub_eq_add_neg, ← neg_smul, oangle_sign_add_smul_left]\n#align oangle_sign_sub_smul_left oangle_sign_sub_smul_left\n\n",
 "oangle_sign_sub_right_swap":
 "/-- Subtracting the first vector passed to `oangle` from the second vector then swapping the\nvectors does not change the sign of the angle. -/\n@[simp]\ntheorem oangle_sign_sub_right_swap (x y : V) : (o.oangle y (y - x)).sign = (o.oangle x y).sign := by\n  rw [oangle_sign_sub_right_eq_neg, o.oangle_rev y x, real.angle.sign_neg]\n#align oangle_sign_sub_right_swap oangle_sign_sub_right_swap\n\n",
 "oangle_sign_sub_right_eq_neg":
 "/-- Subtracting the second vector passed to `oangle` from the first vector negates the sign of\nthe angle. -/\ntheorem oangle_sign_sub_right_eq_neg (x y : V) : (o.oangle x (x - y)).sign = -(o.oangle x y).sign := by\n  rw [← o.oangle_sign_smul_sub_right x y 1, one_smul]\n#align oangle_sign_sub_right_eq_neg oangle_sign_sub_right_eq_neg\n\n",
 "oangle_sign_sub_right":
 "/-- Subtracting the first vector passed to `oangle` from the second vector does not change the\nsign of the angle. -/\n@[simp]\ntheorem oangle_sign_sub_right (x y : V) : (o.oangle x (y - x)).sign = (o.oangle x y).sign := by\n  rw [← o.oangle_sign_sub_smul_right x y 1, one_smul]\n#align oangle_sign_sub_right oangle_sign_sub_right\n\n",
 "oangle_sign_sub_left_swap":
 "/-- Subtracting the second vector passed to `oangle` from the first vector then swapping the\nvectors does not change the sign of the angle. -/\n@[simp]\ntheorem oangle_sign_sub_left_swap (x y : V) : (o.oangle (x - y) x).sign = (o.oangle x y).sign := by\n  rw [oangle_sign_sub_left_eq_neg, o.oangle_rev y x, real.angle.sign_neg]\n#align oangle_sign_sub_left_swap oangle_sign_sub_left_swap\n\n",
 "oangle_sign_sub_left_eq_neg":
 "/-- Subtracting the first vector passed to `oangle` from the second vector negates the sign of\nthe angle. -/\ntheorem oangle_sign_sub_left_eq_neg (x y : V) : (o.oangle (y - x) y).sign = -(o.oangle x y).sign := by\n  rw [← o.oangle_sign_smul_sub_left x y 1, one_smul]\n#align oangle_sign_sub_left_eq_neg oangle_sign_sub_left_eq_neg\n\n",
 "oangle_sign_sub_left":
 "/-- Subtracting the second vector passed to `oangle` from the first vector does not change the\nsign of the angle. -/\n@[simp]\ntheorem oangle_sign_sub_left (x y : V) : (o.oangle (x - y) y).sign = (o.oangle x y).sign := by\n  rw [← o.oangle_sign_sub_smul_left x y 1, one_smul]\n#align oangle_sign_sub_left oangle_sign_sub_left\n\n",
 "oangle_sign_smul_sub_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Subtracting the second vector passed to `oangle` from a multiple of the first vector negates\nthe sign of the angle. -/\n@[simp]\ntheorem oangle_sign_smul_sub_right (x y : V) (r : exprℝ) :\n    (o.oangle x («expr • » r x - y)).sign = -(o.oangle x y).sign := by\n  rw [← oangle_sign_neg_right, sub_eq_add_neg, oangle_sign_smul_add_right]\n#align oangle_sign_smul_sub_right oangle_sign_smul_sub_right\n\n",
 "oangle_sign_smul_sub_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Subtracting the first vector passed to `oangle` from a multiple of the second vector negates\nthe sign of the angle. -/\n@[simp]\ntheorem oangle_sign_smul_sub_left (x y : V) (r : exprℝ) :\n    (o.oangle («expr • » r y - x) y).sign = -(o.oangle x y).sign := by\n  rw [← oangle_sign_neg_left, sub_eq_neg_add, oangle_sign_add_smul_left]\n#align oangle_sign_smul_sub_left oangle_sign_smul_sub_left\n\n",
 "oangle_sign_smul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Multiplying the second vector passed to `oangle` by a real multiplies the sign of the angle by\nthe sign of the real. -/\n@[simp]\ntheorem oangle_sign_smul_right (x y : V) (r : exprℝ) :\n    (o.oangle x («expr • » r y)).sign = SignType.sign r * (o.oangle x y).sign := by\n  rcases lt_trichotomy r 0 with (h | h | h) <;> simp [h]\n#align oangle_sign_smul_right oangle_sign_smul_right\n\n",
 "oangle_sign_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Multiplying the first vector passed to `oangle` by a real multiplies the sign of the angle by\nthe sign of the real. -/\n@[simp]\ntheorem oangle_sign_smul_left (x y : V) (r : exprℝ) :\n    (o.oangle («expr • » r x) y).sign = SignType.sign r * (o.oangle x y).sign := by\n  rcases lt_trichotomy r 0 with (h | h | h) <;> simp [h]\n#align oangle_sign_smul_left oangle_sign_smul_left\n\n",
 "oangle_sign_smul_add_smul_smul_add_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The sign of the angle between two linear combinations of two vectors is the sign of the\ndeterminant of the factors in those combinations multiplied by the sign of the angle between the\ntwo vectors. -/\ntheorem oangle_sign_smul_add_smul_smul_add_smul (x y : V) (r₁ r₂ r₃ r₄ : exprℝ) :\n    (o.oangle («expr • » r₁ x + «expr • » r₂ y) («expr • » r₃ x + «expr • » r₄ y)).sign =\n      SignType.sign (r₁ * r₄ - r₂ * r₃) * (o.oangle x y).sign :=\n  by\n  by_cases hr₁ : r₁ = 0\n  ·\n    rw [hr₁, zero_smul, MulZeroClass.zero_mul, zero_add, zero_sub, Left.sign_neg, oangle_sign_smul_left, add_comm,\n      oangle_sign_smul_add_smul_right, oangle_rev, real.angle.sign_neg, sign_mul, mul_neg, mul_neg, neg_mul, mul_assoc]\n  ·\n    rw [← o.oangle_sign_smul_add_right («expr • » r₁ x + «expr • » r₂ y) («expr • » r₃ x + «expr • » r₄ y) (-r₃ / r₁),\n      smul_add, smul_smul, smul_smul, div_mul_cancel _ hr₁, neg_smul, ← add_assoc, add_comm (-«expr • » r₃ x), ←\n      sub_eq_add_neg, sub_add_cancel, ← add_smul, oangle_sign_smul_right, oangle_sign_smul_add_smul_left, ← mul_assoc, ←\n      sign_mul, add_mul, mul_assoc, mul_comm r₂ r₁, ← mul_assoc, div_mul_cancel _ hr₁, add_comm, neg_mul, ←\n      sub_eq_add_neg, mul_comm r₄, mul_comm r₃]\n#align oangle_sign_smul_add_smul_smul_add_smul oangle_sign_smul_add_smul_smul_add_smul\n\n",
 "oangle_sign_smul_add_smul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The sign of the angle between a vector, and a linear combination of that vector with a second\nvector, is the sign of the factor by which the second vector is multiplied in that combination\nmultiplied by the sign of the angle between the two vectors. -/\n@[simp]\ntheorem oangle_sign_smul_add_smul_right (x y : V) (r₁ r₂ : exprℝ) :\n    (o.oangle x («expr • » r₁ x + «expr • » r₂ y)).sign = SignType.sign r₂ * (o.oangle x y).sign :=\n  by\n  rw [← o.oangle_sign_smul_add_right x («expr • » r₁ x + «expr • » r₂ y) (-r₁)]\n  simp\n#align oangle_sign_smul_add_smul_right oangle_sign_smul_add_smul_right\n\n",
 "oangle_sign_smul_add_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The sign of the angle between a linear combination of two vectors and the second vector is\nthe sign of the factor by which the first vector is multiplied in that combination multiplied by\nthe sign of the angle between the two vectors. -/\n@[simp]\ntheorem oangle_sign_smul_add_smul_left (x y : V) (r₁ r₂ : exprℝ) :\n    (o.oangle («expr • » r₁ x + «expr • » r₂ y) y).sign = SignType.sign r₁ * (o.oangle x y).sign := by\n  simp_rw [o.oangle_rev y, real.angle.sign_neg, add_comm («expr • » r₁ x), oangle_sign_smul_add_smul_right, mul_neg]\n#align oangle_sign_smul_add_smul_left oangle_sign_smul_add_smul_left\n\n",
 "oangle_sign_smul_add_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Adding a multiple of the first vector passed to `oangle` to the second vector does not change\nthe sign of the angle. -/\n@[simp]\ntheorem oangle_sign_smul_add_right (x y : V) (r : exprℝ) :\n    (o.oangle x («expr • » r x + y)).sign = (o.oangle x y).sign :=\n  by\n  by_cases h : o.oangle x y = 0 ∨ o.oangle x y = real.pi\n  · rwa [real.angle.sign_eq_zero_iff.2 h, real.angle.sign_eq_zero_iff, oangle_smul_add_right_eq_zero_or_eq_pi_iff]\n  have h' : ∀ r' : exprℝ, o.oangle x («expr • » r' x + y) ≠ 0 ∧ o.oangle x («expr • » r' x + y) ≠ real.pi :=\n    by\n    intro r'\n    rwa [← o.oangle_smul_add_right_eq_zero_or_eq_pi_iff r', not_or] at h\n  let s : Set (V × V) := «expr '' » (fun r' : exprℝ => (x, «expr • » r' x + y)) Set.univ\n  have hc : IsConnected s :=\n    is_connected_univ.image _\n      (continuous_const.prod_mk ((continuous_id.smul continuous_const).add continuous_const)).continuous_on\n  have hf : ContinuousOn (fun z : V × V => o.oangle z.1 z.2) s :=\n    by\n    refine' ContinuousAt.continuousOn fun z hz => o.continuous_at_oangle _ _\n    all_goals\n      simp_rw [s, Set.mem_image] at hz\n      obtain ⟨r', -, rfl⟩ := hz\n      simp only [Prod.fst, Prod.snd]\n      intro hz\n    · simpa [hz] using (h' 0).1\n    · simpa [hz] using (h' r').1\n  have hs : ∀ z : V × V, z ∈ s → o.oangle z.1 z.2 ≠ 0 ∧ o.oangle z.1 z.2 ≠ real.pi :=\n    by\n    intro z hz\n    simp_rw [s, Set.mem_image] at hz\n    obtain ⟨r', -, rfl⟩ := hz\n    exact h' r'\n  have hx : (x, y) ∈ s :=\n    by\n    convert Set.mem_image_of_mem (fun r' : exprℝ => (x, «expr • » r' x + y)) (Set.mem_univ 0)\n    simp\n  have hy : (x, «expr • » r x + y) ∈ s := Set.mem_image_of_mem _ (Set.mem_univ _)\n  convert real.angle.sign_eq_of_continuous_on hc hf hs hx hy\n#align oangle_sign_smul_add_right oangle_sign_smul_add_right\n\n",
 "oangle_sign_neg_right":
 "/-- Negating the second vector passed to `oangle` negates the sign of the angle. -/\n@[simp]\ntheorem oangle_sign_neg_right (x y : V) : (o.oangle x (-y)).sign = -(o.oangle x y).sign :=\n  by\n  by_cases hx : x = 0; · simp [hx]\n  by_cases hy : y = 0; · simp [hy]\n  rw [o.oangle_neg_right hx hy, real.angle.sign_add_pi]\n#align oangle_sign_neg_right oangle_sign_neg_right\n\n",
 "oangle_sign_neg_left":
 "/-- Negating the first vector passed to `oangle` negates the sign of the angle. -/\n@[simp]\ntheorem oangle_sign_neg_left (x y : V) : (o.oangle (-x) y).sign = -(o.oangle x y).sign :=\n  by\n  by_cases hx : x = 0; · simp [hx]\n  by_cases hy : y = 0; · simp [hy]\n  rw [o.oangle_neg_left hx hy, real.angle.sign_add_pi]\n#align oangle_sign_neg_left oangle_sign_neg_left\n\n",
 "oangle_sign_add_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Adding a multiple of the second vector passed to `oangle` to the first vector does not change\nthe sign of the angle. -/\n@[simp]\ntheorem oangle_sign_add_smul_left (x y : V) (r : exprℝ) : (o.oangle (x + «expr • » r y) y).sign = (o.oangle x y).sign :=\n  by simp_rw [o.oangle_rev y, real.angle.sign_neg, add_comm x, oangle_sign_smul_add_right]\n#align oangle_sign_add_smul_left oangle_sign_add_smul_left\n\n",
 "oangle_sign_add_right":
 "/-- Adding the first vector passed to `oangle` to the second vector does not change the sign of\nthe angle. -/\n@[simp]\ntheorem oangle_sign_add_right (x y : V) : (o.oangle x (x + y)).sign = (o.oangle x y).sign := by\n  rw [← o.oangle_sign_smul_add_right x y 1, one_smul]\n#align oangle_sign_add_right oangle_sign_add_right\n\n",
 "oangle_sign_add_left":
 "/-- Adding the second vector passed to `oangle` to the first vector does not change the sign of\nthe angle. -/\n@[simp]\ntheorem oangle_sign_add_left (x y : V) : (o.oangle (x + y) y).sign = (o.oangle x y).sign := by\n  rw [← o.oangle_sign_add_smul_left x y 1, one_smul]\n#align oangle_sign_add_left oangle_sign_add_left\n\n",
 "oangle_self":
 "/-- If the two vectors passed to `oangle` are the same, the result is 0. -/\n@[simp]\ntheorem oangle_self (x : V) : o.oangle x x = 0 :=\n  by\n  simp only [oangle, kahler_apply_self, ← Complex.ofReal_pow]\n  convert QuotientAddGroup.mk_zero _\n  apply arg_of_real_of_nonneg\n  positivity\n#align oangle_self oangle_self\n\n",
 "oangle_rev":
 "/-- Swapping the two vectors passed to `oangle` negates the angle. -/\ntheorem oangle_rev (x y : V) : o.oangle y x = -o.oangle x y := by\n  simp only [oangle, o.kahler_swap y x, complex.arg_conj_coe_angle]\n#align oangle_rev oangle_rev\n\n",
 "oangle_neg_self_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- The angle between a nonzero vector and its negation is `π`. -/\n@[simp]\ntheorem oangle_neg_self_right {x : V} (hx : x ≠ 0) : o.oangle x (-x) = real.pi := by simp [oangle_neg_right, hx]\n#align oangle_neg_self_right oangle_neg_self_right\n\n",
 "oangle_neg_self_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- The angle between the negation of a nonzero vector and that vector is `π`. -/\n@[simp]\ntheorem oangle_neg_self_left {x : V} (hx : x ≠ 0) : o.oangle (-x) x = real.pi := by simp [oangle_neg_left, hx]\n#align oangle_neg_self_left oangle_neg_self_left\n\n",
 "oangle_neg_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- Negating the second vector passed to `oangle` adds `π` to the angle. -/\ntheorem oangle_neg_right {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) : o.oangle x (-y) = o.oangle x y + real.pi :=\n  by\n  simp only [oangle, map_neg]\n  convert complex.arg_neg_coe_angle _\n  exact o.kahler_ne_zero hx hy\n#align oangle_neg_right oangle_neg_right\n\n",
 "oangle_neg_orientation_eq_neg":
 "/-- Negating the orientation negates the value of `oangle`. -/\ntheorem oangle_neg_orientation_eq_neg (x y : V) : (-o).oangle x y = -o.oangle x y := by simp [oangle]\n#align oangle_neg_orientation_eq_neg oangle_neg_orientation_eq_neg\n\n",
 "oangle_neg_neg":
 "/-- Negating both vectors passed to `oangle` does not change the angle. -/\n@[simp]\ntheorem oangle_neg_neg (x y : V) : o.oangle (-x) (-y) = o.oangle x y := by simp [oangle]\n#align oangle_neg_neg oangle_neg_neg\n\n",
 "oangle_neg_left_eq_neg_right":
 "/-- Negating the first vector produces the same angle as negating the second vector. -/\ntheorem oangle_neg_left_eq_neg_right (x y : V) : o.oangle (-x) y = o.oangle x (-y) := by\n  rw [← neg_neg y, oangle_neg_neg, neg_neg]\n#align oangle_neg_left_eq_neg_right oangle_neg_left_eq_neg_right\n\n",
 "oangle_neg_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- Negating the first vector passed to `oangle` adds `π` to the angle. -/\ntheorem oangle_neg_left {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) : o.oangle (-x) y = o.oangle x y + real.pi :=\n  by\n  simp only [oangle, map_neg]\n  convert complex.arg_neg_coe_angle _\n  exact o.kahler_ne_zero hx hy\n#align oangle_neg_left oangle_neg_left\n\n",
 "oangle_ne_zero_and_ne_pi_iff_linear_independent":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/-- The oriented angle between two vectors is not zero or `π` if and only if those two vectors\nare linearly independent. -/\ntheorem oangle_ne_zero_and_ne_pi_iff_linear_independent {x y : V} :\n    o.oangle x y ≠ 0 ∧ o.oangle x y ≠ real.pi ↔\n      LinearIndependent (exprℝ)\n        («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\") :=\n  by rw [← not_or, ← not_iff_not, Classical.not_not, oangle_eq_zero_or_eq_pi_iff_not_linear_independent]\n#align oangle_ne_zero_and_ne_pi_iff_linear_independent oangle_ne_zero_and_ne_pi_iff_linear_independent\n\n",
 "oangle_map_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- The oriented angle on an oriented real inner product space of dimension 2 can be evaluated in\nterms of a complex-number representation of the space. -/\ntheorem oangle_map_complex (f : «expr ≃ₗᵢ[ ] » V (exprℝ) (exprℂ))\n    (hf : Orientation.map (Fin 2) f.to_linear_equiv o = Complex.orientation) (x y : V) :\n    o.oangle x y = complex.arg ((star_ring_end) (f x) * f y) :=\n  by\n  rw [← complex.oangle, ← hf, o.oangle_map]\n  simp\n#align oangle_map_complex oangle_map_complex\n\n",
 "oangle_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The angle between two vectors, with respect to an orientation given by `orientation.map`\nwith a linear isometric equivalence, equals the angle between those two vectors, transformed by\nthe inverse of that equivalence, with respect to the original orientation. -/\n@[simp]\ntheorem oangle_map (x y : V') (f : «expr ≃ₗᵢ[ ] » V (exprℝ) V') :\n    (Orientation.map (Fin 2) f.to_linear_equiv o).oangle x y = o.oangle (f.symm x) (f.symm y) := by\n  simp [oangle, o.kahler_map]\n#align oangle_map oangle_map\n\n",
 "oangle_eq_zero_or_eq_pi_iff_right_eq_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The oriented angle between two vectors is zero or `π` if and only if the first vector is zero\nor the second is a multiple of the first. -/\ntheorem oangle_eq_zero_or_eq_pi_iff_right_eq_smul {x y : V} :\n    o.oangle x y = 0 ∨ o.oangle x y = real.pi ↔ x = 0 ∨ ∃ r : exprℝ, y = «expr • » r x :=\n  by\n  rw [oangle_eq_zero_iff_same_ray, oangle_eq_pi_iff_same_ray_neg]\n  refine' ⟨fun h => _, fun h => _⟩\n  · rcases h with (h | ⟨-, -, h⟩)\n    · by_cases hx : x = 0\n      · simp [hx]\n      obtain ⟨r, -, rfl⟩ := h.exists_nonneg_left hx\n      exact or.inr ⟨r, rfl⟩\n    · by_cases hx : x = 0\n      · simp [hx]\n      obtain ⟨r, -, hy⟩ := h.exists_nonneg_left hx\n      refine' or.inr ⟨-r, _⟩\n      simp [hy]\n  · rcases h with (rfl | ⟨r, rfl⟩)\n    · simp\n    by_cases hx : x = 0\n    · simp [hx]\n    rcases lt_trichotomy r 0 with (hr | hr | hr)\n    · rw [← neg_smul]\n      exact or.inr ⟨hx, smul_ne_zero hr.ne hx, SameRay.sameRay_pos_smul_right x (Left.neg_pos_iff.2 hr)⟩\n    · simp [hr]\n    · exact or.inl (SameRay.sameRay_pos_smul_right x hr)\n#align oangle_eq_zero_or_eq_pi_iff_right_eq_smul oangle_eq_zero_or_eq_pi_iff_right_eq_smul\n\n",
 "oangle_eq_zero_or_eq_pi_iff_not_linear_independent":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/-- The oriented angle between two vectors is zero or `π` if and only if those two vectors are\nnot linearly independent. -/\ntheorem oangle_eq_zero_or_eq_pi_iff_not_linear_independent {x y : V} :\n    o.oangle x y = 0 ∨ o.oangle x y = real.pi ↔\n      ¬LinearIndependent (exprℝ)\n          («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\") :=\n  by\n  rw [oangle_eq_zero_iff_same_ray, oangle_eq_pi_iff_same_ray_neg,\n    sameRay_or_ne_zero_and_sameRay_neg_iff_not_linearIndependent]\n#align oangle_eq_zero_or_eq_pi_iff_not_linear_independent oangle_eq_zero_or_eq_pi_iff_not_linear_independent\n\n",
 "oangle_eq_zero_iff_same_ray":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The oriented angle between two vectors is zero if and only if they are on the same ray. -/\ntheorem oangle_eq_zero_iff_same_ray {x y : V} : o.oangle x y = 0 ↔ SameRay (exprℝ) x y :=\n  by\n  rw [oangle, kahler_apply_apply, complex.arg_coe_angle_eq_iff_eq_to_real, real.angle.to_real_zero,\n    complex.arg_eq_zero_iff]\n  simpa using o.nonneg_inner_and_area_form_eq_zero_iff_same_ray x y\n#align oangle_eq_zero_iff_same_ray oangle_eq_zero_iff_same_ray\n\n",
 "oangle_eq_zero_iff_oangle_rev_eq_zero":
 "/-- The oriented angle between two vectors is zero if and only if the angle with the vectors\nswapped is zero. -/\ntheorem oangle_eq_zero_iff_oangle_rev_eq_zero {x y : V} : o.oangle x y = 0 ↔ o.oangle y x = 0 := by\n  rw [oangle_rev, neg_eq_zero]\n#align oangle_eq_zero_iff_oangle_rev_eq_zero oangle_eq_zero_iff_oangle_rev_eq_zero\n\n",
 "oangle_eq_zero_iff_angle_eq_zero":
 "/-- The oriented angle between two nonzero vectors is zero if and only if the unoriented angle\nis zero. -/\ntheorem oangle_eq_zero_iff_angle_eq_zero {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    o.oangle x y = 0 ↔ inner_product_geometry.angle x y = 0 :=\n  by\n  refine' ⟨fun h => _, fun h => _⟩\n  · simpa [o.angle_eq_abs_oangle_to_real hx hy]\n  · have ha := o.oangle_eq_angle_or_eq_neg_angle hx hy\n    rw [h] at ha\n    simpa using ha\n#align oangle_eq_zero_iff_angle_eq_zero oangle_eq_zero_iff_angle_eq_zero\n\n",
 "oangle_eq_pi_sub_two_zsmul_oangle_sub_of_norm_eq":
 "/- ./././Mathport/Syntax/Translate/Tactic/Lean3.lean:132:4: warning: unsupported: rw with cfg: { occs := occurrences.pos[occurrences.pos] «expr[ ,]»([1]) } -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The angle at the apex of an isosceles triangle is `π` minus twice a base angle, oriented\nvector angle form. -/\ntheorem oangle_eq_pi_sub_two_zsmul_oangle_sub_of_norm_eq {x y : V} (hn : x ≠ y) (h : «expr‖ ‖» x = «expr‖ ‖» y) :\n    o.oangle y x = real.pi - «expr • » (2 : ℤ) (o.oangle (y - x) y) :=\n  by\n  rw [two_zsmul]\n  rw [← o.oangle_sub_eq_oangle_sub_rev_of_norm_eq h]\n  rw [eq_sub_iff_add_eq, ← oangle_neg_neg, ← add_assoc]\n  have hy : y ≠ 0 := by\n    rintro rfl\n    rw [norm_zero, norm_eq_zero] at h\n    exact hn h\n  have hx : x ≠ 0 := norm_ne_zero_iff.1 (h.symm ▸ norm_ne_zero_iff.2 hy)\n  convert o.oangle_add_cyc3_neg_right (neg_ne_zero.2 hy) hx (sub_ne_zero_of_ne hn.symm) <;> simp\n#align oangle_eq_pi_sub_two_zsmul_oangle_sub_of_norm_eq oangle_eq_pi_sub_two_zsmul_oangle_sub_of_norm_eq\n\n",
 "oangle_eq_pi_iff_same_ray_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The oriented angle between two vectors is `π` if and only they are nonzero and the first is\non the same ray as the negation of the second. -/\ntheorem oangle_eq_pi_iff_same_ray_neg {x y : V} : o.oangle x y = real.pi ↔ x ≠ 0 ∧ y ≠ 0 ∧ SameRay (exprℝ) x (-y) :=\n  by\n  rw [← o.oangle_eq_zero_iff_same_ray]\n  constructor\n  · intro h\n    by_cases hx : x = 0\n    · simpa [hx, real.angle.pi_ne_zero.symm] using h\n    by_cases hy : y = 0\n    · simpa [hy, real.angle.pi_ne_zero.symm] using h\n    refine' ⟨hx, hy, _⟩\n    rw [o.oangle_neg_right hx hy, h, real.angle.coe_pi_add_coe_pi]\n  · rintro ⟨hx, hy, h⟩\n    rwa [o.oangle_neg_right hx hy, ← real.angle.sub_coe_pi_eq_add_coe_pi, sub_eq_zero] at h\n#align oangle_eq_pi_iff_same_ray_neg oangle_eq_pi_iff_same_ray_neg\n\n",
 "oangle_eq_pi_iff_oangle_rev_eq_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- The oriented angle between two vectors is `π` if and only if the angle with the vectors\nswapped is `π`. -/\ntheorem oangle_eq_pi_iff_oangle_rev_eq_pi {x y : V} : o.oangle x y = real.pi ↔ o.oangle y x = real.pi := by\n  rw [oangle_rev, neg_eq_iff_eq_neg, real.angle.neg_coe_pi]\n#align oangle_eq_pi_iff_oangle_rev_eq_pi oangle_eq_pi_iff_oangle_rev_eq_pi\n\n",
 "oangle_eq_pi_iff_angle_eq_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- The oriented angle between two vectors is `π` if and only if the unoriented angle is `π`. -/\ntheorem oangle_eq_pi_iff_angle_eq_pi {x y : V} : o.oangle x y = real.pi ↔ inner_product_geometry.angle x y = real.pi :=\n  by\n  by_cases hx : x = 0;\n  · simp [hx, real.angle.pi_ne_zero.symm, div_eq_mul_inv, mul_right_eq_self₀, not_or, real.pi_ne_zero]\n    norm_num\n  by_cases hy : y = 0;\n  · simp [hy, real.angle.pi_ne_zero.symm, div_eq_mul_inv, mul_right_eq_self₀, not_or, real.pi_ne_zero]\n    norm_num\n  refine' ⟨fun h => _, fun h => _⟩\n  · rw [o.angle_eq_abs_oangle_to_real hx hy, h]\n    simp [real.pi_pos.le]\n  · have ha := o.oangle_eq_angle_or_eq_neg_angle hx hy\n    rw [h] at ha\n    simpa using ha\n#align oangle_eq_pi_iff_angle_eq_pi oangle_eq_pi_iff_angle_eq_pi\n\n",
 "oangle_eq_of_angle_eq_of_sign_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- If two unoriented angles are equal, and the signs of the corresponding oriented angles are\nequal, then the oriented angles are equal (even in degenerate cases). -/\ntheorem oangle_eq_of_angle_eq_of_sign_eq {w x y z : V}\n    (h : inner_product_geometry.angle w x = inner_product_geometry.angle y z)\n    (hs : (o.oangle w x).sign = (o.oangle y z).sign) : o.oangle w x = o.oangle y z :=\n  by\n  by_cases h0 : (w = 0 ∨ x = 0) ∨ y = 0 ∨ z = 0\n  · have hs' : (o.oangle w x).sign = 0 ∧ (o.oangle y z).sign = 0 :=\n      by\n      rcases h0 with ((rfl | rfl) | rfl | rfl)\n      · simpa using hs.symm\n      · simpa using hs.symm\n      · simpa using hs\n      · simpa using hs\n    rcases hs' with ⟨hswx, hsyz⟩\n    have h' : inner_product_geometry.angle w x = real.pi / 2 ∧ inner_product_geometry.angle y z = real.pi / 2 :=\n      by\n      rcases h0 with ((rfl | rfl) | rfl | rfl)\n      · simpa using h.symm\n      · simpa using h.symm\n      · simpa using h\n      · simpa using h\n    rcases h' with ⟨hwx, hyz⟩\n    have hpi : real.pi / 2 ≠ real.pi := by\n      intro hpi\n      rw [div_eq_iff, eq_comm, ← sub_eq_zero, mul_two, add_sub_cancel] at hpi\n      · exact real.pi_pos.ne.symm hpi\n      · exact two_ne_zero\n    have h0wx : w = 0 ∨ x = 0 :=\n      by\n      have h0' := o.eq_zero_or_angle_eq_zero_or_pi_of_sign_oangle_eq_zero hswx\n      simpa [hwx, real.pi_pos.ne.symm, hpi] using h0'\n    have h0yz : y = 0 ∨ z = 0 :=\n      by\n      have h0' := o.eq_zero_or_angle_eq_zero_or_pi_of_sign_oangle_eq_zero hsyz\n      simpa [hyz, real.pi_pos.ne.symm, hpi] using h0'\n    rcases h0wx with (h0wx | h0wx) <;> rcases h0yz with (h0yz | h0yz) <;> simp [h0wx, h0yz]\n  · push_neg  at h0\n    rw [real.angle.eq_iff_abs_to_real_eq_of_sign_eq hs]\n    rwa [o.angle_eq_abs_oangle_to_real h0.1.1 h0.1.2, o.angle_eq_abs_oangle_to_real h0.2.1 h0.2.2] at h\n#align oangle_eq_of_angle_eq_of_sign_eq oangle_eq_of_angle_eq_of_sign_eq\n\n",
 "oangle_eq_neg_angle_of_sign_eq_neg_one":
 "/-- The oriented angle between two vectors equals minus the unoriented angle if the sign is\nnegative. -/\ntheorem oangle_eq_neg_angle_of_sign_eq_neg_one {x y : V} (h : (o.oangle x y).sign = -1) :\n    o.oangle x y = -inner_product_geometry.angle x y :=\n  by\n  by_cases hx : x = 0;\n  · exfalso\n    simpa [hx] using h\n  by_cases hy : y = 0;\n  · exfalso\n    simpa [hy] using h\n  refine' (o.oangle_eq_angle_or_eq_neg_angle hx hy).resolve_left _\n  intro hxy\n  rw [hxy, ← SignType.neg_iff, ← not_le] at h\n  exact\n    h\n      (real.angle.sign_coe_nonneg_of_nonneg_of_le_pi (inner_product_geometry.angle_nonneg _ _)\n        (inner_product_geometry.angle_le_pi _ _))\n#align oangle_eq_neg_angle_of_sign_eq_neg_one oangle_eq_neg_angle_of_sign_eq_neg_one\n\n",
 "oangle_eq_angle_or_eq_neg_angle":
 "/-- The oriented angle between two nonzero vectors is plus or minus the unoriented angle. -/\ntheorem oangle_eq_angle_or_eq_neg_angle {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    o.oangle x y = inner_product_geometry.angle x y ∨ o.oangle x y = -inner_product_geometry.angle x y :=\n  real.angle.cos_eq_real_cos_iff_eq_or_eq_neg.1 <| o.cos_oangle_eq_cos_angle hx hy\n#align oangle_eq_angle_or_eq_neg_angle oangle_eq_angle_or_eq_neg_angle\n\n",
 "oangle_eq_angle_of_sign_eq_one":
 "/-- The oriented angle between two vectors equals the unoriented angle if the sign is positive. -/\ntheorem oangle_eq_angle_of_sign_eq_one {x y : V} (h : (o.oangle x y).sign = 1) :\n    o.oangle x y = inner_product_geometry.angle x y :=\n  by\n  by_cases hx : x = 0;\n  · exfalso\n    simpa [hx] using h\n  by_cases hy : y = 0;\n  · exfalso\n    simpa [hy] using h\n  refine' (o.oangle_eq_angle_or_eq_neg_angle hx hy).resolve_right _\n  intro hxy\n  rw [hxy, real.angle.sign_neg, neg_eq_iff_eq_neg, ← SignType.neg_iff, ← not_le] at h\n  exact\n    h\n      (real.angle.sign_coe_nonneg_of_nonneg_of_le_pi (inner_product_geometry.angle_nonneg _ _)\n        (inner_product_geometry.angle_le_pi _ _))\n#align oangle_eq_angle_of_sign_eq_one oangle_eq_angle_of_sign_eq_one\n\n",
 "oangle_add_swap":
 "/-- Given three nonzero vectors, the angle between the second and the third plus the angle\nbetween the first and the second equals the angle between the first and the third. -/\n@[simp]\ntheorem oangle_add_swap {x y z : V} (hx : x ≠ 0) (hy : y ≠ 0) (hz : z ≠ 0) :\n    o.oangle y z + o.oangle x y = o.oangle x z := by rw [add_comm, o.oangle_add hx hy hz]\n#align oangle_add_swap oangle_add_swap\n\n",
 "oangle_add_oangle_rev_neg_right":
 "/-- Adding the angles between two vectors in each order, with the second vector in each angle\nnegated, results in 0. -/\n@[simp]\ntheorem oangle_add_oangle_rev_neg_right (x y : V) : o.oangle x (-y) + o.oangle y (-x) = 0 := by\n  rw [o.oangle_rev (-x), oangle_neg_left_eq_neg_right, add_neg_self]\n#align oangle_add_oangle_rev_neg_right oangle_add_oangle_rev_neg_right\n\n",
 "oangle_add_oangle_rev_neg_left":
 "/-- Adding the angles between two vectors in each order, with the first vector in each angle\nnegated, results in 0. -/\n@[simp]\ntheorem oangle_add_oangle_rev_neg_left (x y : V) : o.oangle (-x) y + o.oangle (-y) x = 0 := by\n  rw [oangle_neg_left_eq_neg_right, oangle_rev, add_left_neg]\n#align oangle_add_oangle_rev_neg_left oangle_add_oangle_rev_neg_left\n\n",
 "oangle_add_oangle_rev":
 "/-- Adding the angles between two vectors in each order results in 0. -/\n@[simp]\ntheorem oangle_add_oangle_rev (x y : V) : o.oangle x y + o.oangle y x = 0 := by simp [o.oangle_rev y x]\n#align oangle_add_oangle_rev oangle_add_oangle_rev\n\n",
 "oangle_add_cyc3_neg_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- Given three nonzero vectors, adding the angles between them in cyclic order, with the second\nvector in each angle negated, results in π. If the vectors add to 0, this is a version of the\nsum of the angles of a triangle. -/\n@[simp]\ntheorem oangle_add_cyc3_neg_right {x y z : V} (hx : x ≠ 0) (hy : y ≠ 0) (hz : z ≠ 0) :\n    o.oangle x (-y) + o.oangle y (-z) + o.oangle z (-x) = real.pi := by\n  simp_rw [← oangle_neg_left_eq_neg_right, o.oangle_add_cyc3_neg_left hx hy hz]\n#align oangle_add_cyc3_neg_right oangle_add_cyc3_neg_right\n\n",
 "oangle_add_cyc3_neg_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- Given three nonzero vectors, adding the angles between them in cyclic order, with the first\nvector in each angle negated, results in π. If the vectors add to 0, this is a version of the\nsum of the angles of a triangle. -/\n@[simp]\ntheorem oangle_add_cyc3_neg_left {x y z : V} (hx : x ≠ 0) (hy : y ≠ 0) (hz : z ≠ 0) :\n    o.oangle (-x) y + o.oangle (-y) z + o.oangle (-z) x = real.pi := by\n  rw [o.oangle_neg_left hx hy, o.oangle_neg_left hy hz, o.oangle_neg_left hz hx,\n    show\n      o.oangle x y + real.pi + (o.oangle y z + real.pi) + (o.oangle z x + real.pi) =\n        o.oangle x y + o.oangle y z + o.oangle z x + (real.pi + real.pi + real.pi : real.angle)\n      by abel,\n    o.oangle_add_cyc3 hx hy hz, real.angle.coe_pi_add_coe_pi, zero_add, zero_add]\n#align oangle_add_cyc3_neg_left oangle_add_cyc3_neg_left\n\n",
 "oangle_add_cyc3":
 "/-- Given three nonzero vectors, adding the angles between them in cyclic order results in 0. -/\n@[simp]\ntheorem oangle_add_cyc3 {x y z : V} (hx : x ≠ 0) (hy : y ≠ 0) (hz : z ≠ 0) :\n    o.oangle x y + o.oangle y z + o.oangle z x = 0 := by simp [hx, hy, hz]\n#align oangle_add_cyc3 oangle_add_cyc3\n\n",
 "oangle_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Given three nonzero vectors, the angle between the first and the second plus the angle\nbetween the second and the third equals the angle between the first and the third. -/\n@[simp]\ntheorem oangle_add {x y z : V} (hx : x ≠ 0) (hy : y ≠ 0) (hz : z ≠ 0) : o.oangle x y + o.oangle y z = o.oangle x z :=\n  by\n  simp_rw [oangle]\n  rw [← complex.arg_mul_coe_angle, o.kahler_mul y x z]\n  congr 1\n  convert complex.arg_real_mul _ (_ : 0 < «expr‖ ‖» y ^ 2) using 2\n  · norm_cast\n  · have : 0 < «expr‖ ‖» y := by simpa using hy\n    positivity\n  · exact o.kahler_ne_zero hx hy\n  · exact o.kahler_ne_zero hy hz\n#align oangle_add oangle_add\n\n",
 "oangle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\nprotected theorem _root_.complex.oangle (w z : exprℂ) :\n    Complex.orientation.oangle w z = complex.arg ((star_ring_end) w * z) := by simp [oangle]\n#align complex.oangle complex.oangle\n\n",
 "ne_of_oangle_sign_ne_zero":
 "/-- If the sign of the angle between two vectors is nonzero, the vectors are not equal. -/\ntheorem ne_of_oangle_sign_ne_zero {x y : V} (h : (o.oangle x y).sign ≠ 0) : x ≠ y :=\n  o.ne_of_oangle_ne_zero (real.angle.sign_ne_zero_iff.1 h).1\n#align ne_of_oangle_sign_ne_zero ne_of_oangle_sign_ne_zero\n\n",
 "ne_of_oangle_sign_eq_one":
 "/-- If the sign of the angle between two vectors is positive, the vectors are not equal. -/\ntheorem ne_of_oangle_sign_eq_one {x y : V} (h : (o.oangle x y).sign = 1) : x ≠ y :=\n  o.ne_of_oangle_sign_ne_zero (h.symm ▸ by decide : (o.oangle x y).sign ≠ 0)\n#align ne_of_oangle_sign_eq_one ne_of_oangle_sign_eq_one\n\n",
 "ne_of_oangle_sign_eq_neg_one":
 "/-- If the sign of the angle between two vectors is negative, the vectors are not equal. -/\ntheorem ne_of_oangle_sign_eq_neg_one {x y : V} (h : (o.oangle x y).sign = -1) : x ≠ y :=\n  o.ne_of_oangle_sign_ne_zero (h.symm ▸ by decide : (o.oangle x y).sign ≠ 0)\n#align ne_of_oangle_sign_eq_neg_one ne_of_oangle_sign_eq_neg_one\n\n",
 "ne_of_oangle_ne_zero":
 "/-- If the angle between two vectors is nonzero, the vectors are not equal. -/\ntheorem ne_of_oangle_ne_zero {x y : V} (h : o.oangle x y ≠ 0) : x ≠ y :=\n  by\n  rintro rfl\n  simpa using h\n#align ne_of_oangle_ne_zero ne_of_oangle_ne_zero\n\n",
 "ne_of_oangle_eq_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If the angle between two vectors is `π / 2`, the vectors are not equal. -/\ntheorem ne_of_oangle_eq_pi_div_two {x y : V} (h : o.oangle x y = (real.pi / 2 : exprℝ)) : x ≠ y :=\n  o.ne_of_oangle_ne_zero (h.symm ▸ real.angle.pi_div_two_ne_zero : o.oangle x y ≠ 0)\n#align ne_of_oangle_eq_pi_div_two ne_of_oangle_eq_pi_div_two\n\n",
 "ne_of_oangle_eq_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- If the angle between two vectors is `π`, the vectors are not equal. -/\ntheorem ne_of_oangle_eq_pi {x y : V} (h : o.oangle x y = real.pi) : x ≠ y :=\n  o.ne_of_oangle_ne_zero (h.symm ▸ real.angle.pi_ne_zero : o.oangle x y ≠ 0)\n#align ne_of_oangle_eq_pi ne_of_oangle_eq_pi\n\n",
 "ne_of_oangle_eq_neg_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If the angle between two vectors is `-π / 2`, the vectors are not equal. -/\ntheorem ne_of_oangle_eq_neg_pi_div_two {x y : V} (h : o.oangle x y = (-real.pi / 2 : exprℝ)) : x ≠ y :=\n  o.ne_of_oangle_ne_zero (h.symm ▸ real.angle.neg_pi_div_two_ne_zero : o.oangle x y ≠ 0)\n#align ne_of_oangle_eq_neg_pi_div_two ne_of_oangle_eq_neg_pi_div_two\n\n",
 "left_ne_zero_of_oangle_sign_ne_zero":
 "/-- If the sign of the angle between two vectors is nonzero, the first vector is nonzero. -/\ntheorem left_ne_zero_of_oangle_sign_ne_zero {x y : V} (h : (o.oangle x y).sign ≠ 0) : x ≠ 0 :=\n  o.left_ne_zero_of_oangle_ne_zero (real.angle.sign_ne_zero_iff.1 h).1\n#align left_ne_zero_of_oangle_sign_ne_zero left_ne_zero_of_oangle_sign_ne_zero\n\n",
 "left_ne_zero_of_oangle_sign_eq_one":
 "/-- If the sign of the angle between two vectors is positive, the first vector is nonzero. -/\ntheorem left_ne_zero_of_oangle_sign_eq_one {x y : V} (h : (o.oangle x y).sign = 1) : x ≠ 0 :=\n  o.left_ne_zero_of_oangle_sign_ne_zero (h.symm ▸ by decide : (o.oangle x y).sign ≠ 0)\n#align left_ne_zero_of_oangle_sign_eq_one left_ne_zero_of_oangle_sign_eq_one\n\n",
 "left_ne_zero_of_oangle_sign_eq_neg_one":
 "/-- If the sign of the angle between two vectors is negative, the first vector is nonzero. -/\ntheorem left_ne_zero_of_oangle_sign_eq_neg_one {x y : V} (h : (o.oangle x y).sign = -1) : x ≠ 0 :=\n  o.left_ne_zero_of_oangle_sign_ne_zero (h.symm ▸ by decide : (o.oangle x y).sign ≠ 0)\n#align left_ne_zero_of_oangle_sign_eq_neg_one left_ne_zero_of_oangle_sign_eq_neg_one\n\n",
 "left_ne_zero_of_oangle_ne_zero":
 "/-- If the angle between two vectors is nonzero, the first vector is nonzero. -/\ntheorem left_ne_zero_of_oangle_ne_zero {x y : V} (h : o.oangle x y ≠ 0) : x ≠ 0 :=\n  by\n  rintro rfl\n  simpa using h\n#align left_ne_zero_of_oangle_ne_zero left_ne_zero_of_oangle_ne_zero\n\n",
 "left_ne_zero_of_oangle_eq_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If the angle between two vectors is `π / 2`, the first vector is nonzero. -/\ntheorem left_ne_zero_of_oangle_eq_pi_div_two {x y : V} (h : o.oangle x y = (real.pi / 2 : exprℝ)) : x ≠ 0 :=\n  o.left_ne_zero_of_oangle_ne_zero (h.symm ▸ real.angle.pi_div_two_ne_zero : o.oangle x y ≠ 0)\n#align left_ne_zero_of_oangle_eq_pi_div_two left_ne_zero_of_oangle_eq_pi_div_two\n\n",
 "left_ne_zero_of_oangle_eq_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- If the angle between two vectors is `π`, the first vector is nonzero. -/\ntheorem left_ne_zero_of_oangle_eq_pi {x y : V} (h : o.oangle x y = real.pi) : x ≠ 0 :=\n  o.left_ne_zero_of_oangle_ne_zero (h.symm ▸ real.angle.pi_ne_zero : o.oangle x y ≠ 0)\n#align left_ne_zero_of_oangle_eq_pi left_ne_zero_of_oangle_eq_pi\n\n",
 "left_ne_zero_of_oangle_eq_neg_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If the angle between two vectors is `-π / 2`, the first vector is nonzero. -/\ntheorem left_ne_zero_of_oangle_eq_neg_pi_div_two {x y : V} (h : o.oangle x y = (-real.pi / 2 : exprℝ)) : x ≠ 0 :=\n  o.left_ne_zero_of_oangle_ne_zero (h.symm ▸ real.angle.neg_pi_div_two_ne_zero : o.oangle x y ≠ 0)\n#align left_ne_zero_of_oangle_eq_neg_pi_div_two left_ne_zero_of_oangle_eq_neg_pi_div_two\n\n",
 "inner_rev_eq_zero_of_oangle_eq_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/-- If the oriented angle between two vectors is `π / 2`, the inner product of those vectors\n(reversed) is zero. -/\ntheorem inner_rev_eq_zero_of_oangle_eq_pi_div_two {x y : V} (h : o.oangle x y = (real.pi / 2 : exprℝ)) :\n    inner.real y x = 0 := by rw [real_inner_comm, o.inner_eq_zero_of_oangle_eq_pi_div_two h]\n#align inner_rev_eq_zero_of_oangle_eq_pi_div_two inner_rev_eq_zero_of_oangle_eq_pi_div_two\n\n",
 "inner_rev_eq_zero_of_oangle_eq_neg_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/-- If the oriented angle between two vectors is `-π / 2`, the inner product of those vectors\n(reversed) is zero. -/\ntheorem inner_rev_eq_zero_of_oangle_eq_neg_pi_div_two {x y : V} (h : o.oangle x y = (-real.pi / 2 : exprℝ)) :\n    inner.real y x = 0 := by rw [real_inner_comm, o.inner_eq_zero_of_oangle_eq_neg_pi_div_two h]\n#align inner_rev_eq_zero_of_oangle_eq_neg_pi_div_two inner_rev_eq_zero_of_oangle_eq_neg_pi_div_two\n\n",
 "inner_eq_zero_of_oangle_eq_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/-- If the oriented angle between two vectors is `π / 2`, the inner product of those vectors\nis zero. -/\ntheorem inner_eq_zero_of_oangle_eq_pi_div_two {x y : V} (h : o.oangle x y = (real.pi / 2 : exprℝ)) :\n    inner.real x y = 0 :=\n  o.eq_zero_or_oangle_eq_iff_inner_eq_zero.1 <| or.inr <| or.inr <| or.inl h\n#align inner_eq_zero_of_oangle_eq_pi_div_two inner_eq_zero_of_oangle_eq_pi_div_two\n\n",
 "inner_eq_zero_of_oangle_eq_neg_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/-- If the oriented angle between two vectors is `-π / 2`, the inner product of those vectors\nis zero. -/\ntheorem inner_eq_zero_of_oangle_eq_neg_pi_div_two {x y : V} (h : o.oangle x y = (-real.pi / 2 : exprℝ)) :\n    inner.real x y = 0 :=\n  o.eq_zero_or_oangle_eq_iff_inner_eq_zero.1 <| or.inr <| or.inr <| or.inr h\n#align inner_eq_zero_of_oangle_eq_neg_pi_div_two inner_eq_zero_of_oangle_eq_neg_pi_div_two\n\n",
 "inner_eq_norm_mul_norm_mul_cos_oangle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The inner product of two vectors is the product of the norms and the cosine of the oriented\nangle between the vectors. -/\ntheorem inner_eq_norm_mul_norm_mul_cos_oangle (x y : V) :\n    inner.real x y = «expr‖ ‖» x * «expr‖ ‖» y * real.angle.cos (o.oangle x y) :=\n  by\n  by_cases hx : x = 0; · simp [hx]\n  by_cases hy : y = 0; · simp [hy]\n  have : «expr‖ ‖» x ≠ 0 := by simpa using hx\n  have : «expr‖ ‖» y ≠ 0 := by simpa using hy\n  rw [oangle, real.angle.cos_coe, complex.cos_arg, o.abs_kahler]\n  · simp only [kahler_apply_apply, real_smul, add_re, of_real_re, mul_re, I_re, of_real_im]\n    field_simp\n    ring\n  · exact o.kahler_ne_zero hx hy\n#align inner_eq_norm_mul_norm_mul_cos_oangle inner_eq_norm_mul_norm_mul_cos_oangle\n\n",
 "eq_zero_or_oangle_eq_iff_inner_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/-- One of two vectors is zero or the oriented angle between them is plus or minus `π / 2` if\nand only if the inner product of those vectors is zero. -/\ntheorem eq_zero_or_oangle_eq_iff_inner_eq_zero {x y : V} :\n    x = 0 ∨ y = 0 ∨ o.oangle x y = (real.pi / 2 : exprℝ) ∨ o.oangle x y = (-real.pi / 2 : exprℝ) ↔ inner.real x y = 0 :=\n  by\n  by_cases hx : x = 0; · simp [hx]\n  by_cases hy : y = 0; · simp [hy]\n  rw [inner_product_geometry.inner_eq_zero_iff_angle_eq_pi_div_two, or_iff_right hx, or_iff_right hy]\n  refine' ⟨fun h => _, fun h => _⟩\n  · rwa [o.angle_eq_abs_oangle_to_real hx hy, real.angle.abs_to_real_eq_pi_div_two_iff]\n  · convert o.oangle_eq_angle_or_eq_neg_angle hx hy <;> rw [h]\n    exact neg_div _ _\n#align eq_zero_or_oangle_eq_iff_inner_eq_zero eq_zero_or_oangle_eq_iff_inner_eq_zero\n\n",
 "eq_zero_or_angle_eq_zero_or_pi_of_sign_oangle_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- If the sign of the oriented angle between two vectors is zero, either one of the vectors is\nzero or the unoriented angle is 0 or π. -/\ntheorem eq_zero_or_angle_eq_zero_or_pi_of_sign_oangle_eq_zero {x y : V} (h : (o.oangle x y).sign = 0) :\n    x = 0 ∨ y = 0 ∨ inner_product_geometry.angle x y = 0 ∨ inner_product_geometry.angle x y = real.pi :=\n  by\n  by_cases hx : x = 0; · simp [hx]\n  by_cases hy : y = 0; · simp [hy]\n  rw [o.angle_eq_abs_oangle_to_real hx hy]\n  rw [real.angle.sign_eq_zero_iff] at h\n  rcases h with (h | h) <;> simp [h, real.pi_pos.le]\n#align eq_zero_or_angle_eq_zero_or_pi_of_sign_oangle_eq_zero eq_zero_or_angle_eq_zero_or_pi_of_sign_oangle_eq_zero\n\n",
 "eq_iff_oangle_eq_zero_of_norm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Two vectors with equal norms are equal if and only if they have zero angle between them. -/\ntheorem eq_iff_oangle_eq_zero_of_norm_eq {x y : V} (h : «expr‖ ‖» x = «expr‖ ‖» y) : x = y ↔ o.oangle x y = 0 :=\n  ⟨fun he => ((o.eq_iff_norm_eq_and_oangle_eq_zero x y).1 he).2, fun ha =>\n    (o.eq_iff_norm_eq_and_oangle_eq_zero x y).2 ⟨h, ha⟩⟩\n#align eq_iff_oangle_eq_zero_of_norm_eq eq_iff_oangle_eq_zero_of_norm_eq\n\n",
 "eq_iff_norm_eq_of_oangle_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Two vectors with zero angle between them are equal if and only if they have equal norms. -/\ntheorem eq_iff_norm_eq_of_oangle_eq_zero {x y : V} (h : o.oangle x y = 0) : x = y ↔ «expr‖ ‖» x = «expr‖ ‖» y :=\n  ⟨fun he => ((o.eq_iff_norm_eq_and_oangle_eq_zero x y).1 he).1, fun hn =>\n    (o.eq_iff_norm_eq_and_oangle_eq_zero x y).2 ⟨hn, h⟩⟩\n#align eq_iff_norm_eq_of_oangle_eq_zero eq_iff_norm_eq_of_oangle_eq_zero\n\n",
 "eq_iff_norm_eq_and_oangle_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Two vectors are equal if and only if they have equal norms and zero angle between them. -/\ntheorem eq_iff_norm_eq_and_oangle_eq_zero (x y : V) : x = y ↔ «expr‖ ‖» x = «expr‖ ‖» y ∧ o.oangle x y = 0 :=\n  by\n  rw [oangle_eq_zero_iff_same_ray]\n  constructor\n  · rintro rfl\n    simp\n  · rcases eq_or_ne y 0 with (rfl | hy)\n    · simp\n    rintro ⟨h₁, h₂⟩\n    obtain ⟨r, hr, rfl⟩ := h₂.exists_nonneg_right hy\n    have : «expr‖ ‖» y ≠ 0 := by simpa using hy\n    obtain rfl : r = 1 := by\n      apply mul_right_cancel₀ this\n      simpa [norm_smul, _root_.abs_of_nonneg hr] using h₁\n    simp\n#align eq_iff_norm_eq_and_oangle_eq_zero eq_iff_norm_eq_and_oangle_eq_zero\n\n",
 "cos_oangle_eq_inner_div_norm_mul_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The cosine of the oriented angle between two nonzero vectors is the inner product divided by\nthe product of the norms. -/\ntheorem cos_oangle_eq_inner_div_norm_mul_norm {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    real.angle.cos (o.oangle x y) = inner.real x y / («expr‖ ‖» x * «expr‖ ‖» y) :=\n  by\n  rw [o.inner_eq_norm_mul_norm_mul_cos_oangle]\n  field_simp [norm_ne_zero_iff.2 hx, norm_ne_zero_iff.2 hy]\n  ring\n#align cos_oangle_eq_inner_div_norm_mul_norm cos_oangle_eq_inner_div_norm_mul_norm\n\n",
 "cos_oangle_eq_cos_angle":
 "/-- The cosine of the oriented angle between two nonzero vectors equals that of the unoriented\nangle. -/\ntheorem cos_oangle_eq_cos_angle {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    real.angle.cos (o.oangle x y) = Real.cos (inner_product_geometry.angle x y) := by\n  rw [o.cos_oangle_eq_inner_div_norm_mul_norm hx hy, inner_product_geometry.cos_angle]\n#align cos_oangle_eq_cos_angle cos_oangle_eq_cos_angle\n\n",
 "continuous_at_oangle":
 "/-\nCopyright (c) 2022 Joseph Myers. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Joseph Myers, Heather Macbeth\n-/\n/-- Oriented angles are continuous when the vectors involved are nonzero. -/\ntheorem continuous_at_oangle {x : V × V} (hx1 : x.1 ≠ 0) (hx2 : x.2 ≠ 0) :\n    ContinuousAt (fun y : V × V => o.oangle y.1 y.2) x :=\n  by\n  refine' (complex.continuous_at_arg_coe_angle _).comp _\n  · exact o.kahler_ne_zero hx1 hx2\n  exact\n    ((continuous_of_real.comp continuous_inner).add\n        ((continuous_of_real.comp o.area_form'.continuous₂).mul continuous_const)).continuous_at\n#align continuous_at_oangle continuous_at_oangle\n\n",
 "angle_eq_iff_oangle_eq_of_sign_eq":
 "/-- If the signs of two oriented angles between nonzero vectors are equal, the oriented angles are\nequal if and only if the unoriented angles are equal. -/\ntheorem angle_eq_iff_oangle_eq_of_sign_eq {w x y z : V} (hw : w ≠ 0) (hx : x ≠ 0) (hy : y ≠ 0) (hz : z ≠ 0)\n    (hs : (o.oangle w x).sign = (o.oangle y z).sign) :\n    inner_product_geometry.angle w x = inner_product_geometry.angle y z ↔ o.oangle w x = o.oangle y z :=\n  by\n  refine' ⟨fun h => o.oangle_eq_of_angle_eq_of_sign_eq h hs, fun h => _⟩\n  rw [o.angle_eq_abs_oangle_to_real hw hx, o.angle_eq_abs_oangle_to_real hy hz, h]\n#align angle_eq_iff_oangle_eq_of_sign_eq angle_eq_iff_oangle_eq_of_sign_eq\n\n",
 "angle_eq_abs_oangle_to_real":
 "/-- The unoriented angle between two nonzero vectors is the absolute value of the oriented angle,\nconverted to a real. -/\ntheorem angle_eq_abs_oangle_to_real {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    inner_product_geometry.angle x y = |(o.oangle x y).to_real| :=\n  by\n  have h0 := inner_product_geometry.angle_nonneg x y\n  have hpi := inner_product_geometry.angle_le_pi x y\n  rcases o.oangle_eq_angle_or_eq_neg_angle hx hy with (h | h)\n  · rw [h, eq_comm, real.angle.abs_to_real_coe_eq_self_iff]\n    exact ⟨h0, hpi⟩\n  · rw [h, eq_comm, real.angle.abs_to_real_neg_coe_eq_self_iff]\n    exact ⟨h0, hpi⟩\n#align angle_eq_abs_oangle_to_real angle_eq_abs_oangle_to_real\n\n",
 "abs_oangle_sub_right_to_real_lt_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- A base angle of an isosceles triangle is acute, oriented vector angle form. -/\ntheorem abs_oangle_sub_right_to_real_lt_pi_div_two {x y : V} (h : «expr‖ ‖» x = «expr‖ ‖» y) :\n    |(o.oangle x (x - y)).to_real| < real.pi / 2 :=\n  (o.oangle_sub_eq_oangle_sub_rev_of_norm_eq h).symm ▸ o.abs_oangle_sub_left_to_real_lt_pi_div_two h\n#align abs_oangle_sub_right_to_real_lt_pi_div_two abs_oangle_sub_right_to_real_lt_pi_div_two\n\n",
 "abs_oangle_sub_left_to_real_lt_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- A base angle of an isosceles triangle is acute, oriented vector angle form. -/\ntheorem abs_oangle_sub_left_to_real_lt_pi_div_two {x y : V} (h : «expr‖ ‖» x = «expr‖ ‖» y) :\n    |(o.oangle (y - x) y).to_real| < real.pi / 2 :=\n  by\n  by_cases hn : x = y\n  · simp [hn, div_pos, real.pi_pos]\n  have hs : («expr • » (2 : ℤ) (o.oangle (y - x) y)).sign = (o.oangle (y - x) y).sign :=\n    by\n    conv_rhs => rw [oangle_sign_sub_left_swap]\n    rw [o.oangle_eq_pi_sub_two_zsmul_oangle_sub_of_norm_eq hn h, real.angle.sign_pi_sub]\n  rw [real.angle.sign_two_zsmul_eq_sign_iff] at hs\n  rcases hs with (hs | hs)\n  · rw [oangle_eq_pi_iff_oangle_rev_eq_pi, oangle_eq_pi_iff_same_ray_neg, neg_sub] at hs\n    rcases hs with ⟨hy, -, hr⟩\n    rw [← exists_nonneg_left_iff_sameRay hy] at hr\n    rcases hr with ⟨r, hr0, hr⟩\n    rw [eq_sub_iff_add_eq] at hr\n    nth_rw 2 [← one_smul (exprℝ) y] at hr\n    rw [← add_smul] at hr\n    rw [← hr, norm_smul, Real.norm_eq_abs, abs_of_pos (Left.add_pos_of_nonneg_of_pos hr0 one_pos), mul_left_eq_self₀,\n      or_iff_left (norm_ne_zero_iff.2 hy), add_left_eq_self] at h\n    rw [h, zero_add, one_smul] at hr\n    exact false.elim (hn hr.symm)\n  · exact hs\n#align abs_oangle_sub_left_to_real_lt_pi_div_two abs_oangle_sub_left_to_real_lt_pi_div_two\n\n"}