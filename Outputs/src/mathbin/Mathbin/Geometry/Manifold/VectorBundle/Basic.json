{"smooth_zero_section":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\ntheorem smooth_zero_section : smooth IB (IB.prod (model_with_corners_self ùïú F)) (zero_section E) :=\n  by\n  intro x\n  rw [bundle.cont_mdiff_at_total_space]\n  refine' ‚ü®cont_mdiff_at_id, cont_mdiff_at_const.congr_of_eventually_eq _‚ü©\n  ¬∑ exact 0\n  refine'\n    eventually_of_mem ((trivialization_at F E x).open_base_set.mem_nhds (mem_base_set_trivialization_at F E x))\n      fun x' hx' => _\n  simp_rw [zero_section_proj, (trivialization_at F E x).zero_section ùïú hx']\n#align smooth_zero_section smooth_zero_section\n\n",
 "smooth_within_at_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprœÄ -/\ntheorem smooth_within_at_proj {s : Set (TotalSpace E)} {p : TotalSpace E} :\n    smooth_within_at (IB.prod (model_with_corners_self ùïú F)) IB ((exprœÄ) E) s p :=\n  bundle.cont_mdiff_within_at_proj E\n#align smooth_within_at_proj smooth_within_at_proj\n\n",
 "smooth_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprœÄ -/\ntheorem smooth_proj : smooth (IB.prod (model_with_corners_self ùïú F)) IB ((exprœÄ) E) :=\n  cont_mdiff_proj E\n#align smooth_proj smooth_proj\n\n",
 "smooth_on_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprœÄ -/\ntheorem smooth_on_proj {s : Set (TotalSpace E)} : smooth_on (IB.prod (model_with_corners_self ùïú F)) IB ((exprœÄ) E) s :=\n  cont_mdiff_on_proj E\n#align smooth_on_proj smooth_on_proj\n\n",
 "smooth_at_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprœÄ -/\ntheorem smooth_at_proj {p : TotalSpace E} : smooth_at (IB.prod (model_with_corners_self ùïú F)) IB ((exprœÄ) E) p :=\n  bundle.cont_mdiff_at_proj E\n#align smooth_at_proj smooth_at_proj\n\n",
 "ext_chart_at":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `local_equiv.trans -/\nprotected theorem fiber_bundle.ext_chart_at (x : TotalSpace E) :\n    ext_chart_at (IB.prod (model_with_corners_self ùïú F)) x =\n      local_equiv.trans (trivialization_at F E x.proj).to_local_equiv\n        ((ext_chart_at IB x.proj).prod (LocalEquiv.refl F)) :=\n  by\n  simp_rw [ext_chart_at, fiber_bundle.charted_space_chart_at, extend]\n  simp only [LocalEquiv.trans_assoc, mfld_simps]\n#align fiber_bundle.ext_chart_at fiber_bundle.ext_chart_at\n\n",
 "cont_mdiff_within_at_total_space":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Åª¬π' ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/-- Characterization of C^n functions into a smooth vector bundle. -/\ntheorem cont_mdiff_within_at_total_space (f : M ‚Üí TotalSpace E) {s : Set M} {x‚ÇÄ : M} :\n    cont_mdiff_within_at IM (IB.prod (model_with_corners_self ùïú F)) n f s x‚ÇÄ ‚Üî\n      cont_mdiff_within_at IM IB n (fun x => (f x).proj) s x‚ÇÄ ‚àß\n        cont_mdiff_within_at IM (model_with_corners_self ùïú F) n (fun x => (trivialization_at F E (f x‚ÇÄ).proj (f x)).2) s\n          x‚ÇÄ :=\n  by\n  simp (config := { singlePass := true }) only [cont_mdiff_within_at_iff_target]\n  rw [and_and_and_comm, ‚Üê continuous_within_at_total_space, and_congr_right_iff]\n  intro hf\n  simp_rw [model_with_corners_self_prod, fiber_bundle.ext_chart_at, Function.comp, LocalEquiv.trans_apply,\n    LocalEquiv.prod_coe, LocalEquiv.refl_coe, ext_chart_at_self_apply, model_with_corners_self_coe, id_def]\n  refine' (cont_mdiff_within_at_prod_iff _).trans _\n  -- rw doesn't do this?\n  have h1 : ¬´expr ‚Åª¬π' ¬ª (fun x => (f x).proj) (trivialization_at F E (f x‚ÇÄ).proj).base_set ‚àà nhds_within s x‚ÇÄ :=\n    ((continuous_proj F E).continuous_within_at.comp hf (maps_to_image f s)).preimage_mem_nhds_within\n      ((trivialization.open_base_set _).mem_nhds (mem_base_set_trivialization_at F E _))\n  refine' and_congr (eventually_eq.cont_mdiff_within_at_iff (eventually_of_mem h1 fun x hx => _) _) iff.rfl\n  ¬∑ simp_rw [Function.comp, LocalHomeomorph.coe_coe, Trivialization.coe_coe]\n    rw [Trivialization.coe_fst']\n    exact hx\n  ¬∑ simp only [mfld_simps]\n#align cont_mdiff_within_at_total_space cont_mdiff_within_at_total_space\n\n",
 "cont_mdiff_within_at_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprœÄ -/\ntheorem cont_mdiff_within_at_proj {s : Set (TotalSpace E)} {p : TotalSpace E} :\n    cont_mdiff_within_at (IB.prod (model_with_corners_self ùïú F)) IB n ((exprœÄ) E) s p :=\n  (bundle.cont_mdiff_at_proj E).cont_mdiff_within_at\n#align cont_mdiff_within_at_proj cont_mdiff_within_at_proj\n\n",
 "cont_mdiff_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprœÄ -/\ntheorem cont_mdiff_proj : cont_mdiff (IB.prod (model_with_corners_self ùïú F)) IB n ((exprœÄ) E) :=\n  by\n  intro x\n  rw [cont_mdiff_at, cont_mdiff_within_at_iff']\n  refine' ‚ü®(continuous_proj F E).continuous_within_at, _‚ü©\n  simp_rw [(¬∑ ‚àò ¬∑), fiber_bundle.ext_chart_at]\n  apply cont_diff_within_at_fst.congr\n  ¬∑ rintro ‚ü®a, b‚ü© hab\n    simp only [mfld_simps] at hab\n    have : ((chart_at HB x.1).symm (IB.symm a), b) ‚àà (trivialization_at F E x.fst).target := by\n      simp only [hab, mfld_simps]\n    simp only [Trivialization.proj_symm_apply _ this, hab, mfld_simps]\n  ¬∑ simp only [mfld_simps]\n#align cont_mdiff_proj cont_mdiff_proj\n\n",
 "cont_mdiff_on_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprœÄ -/\ntheorem cont_mdiff_on_proj {s : Set (TotalSpace E)} :\n    cont_mdiff_on (IB.prod (model_with_corners_self ùïú F)) IB n ((exprœÄ) E) s :=\n  (bundle.cont_mdiff_proj E).cont_mdiff_on\n#align cont_mdiff_on_proj cont_mdiff_on_proj\n\n",
 "cont_mdiff_at_total_space":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/-- Characterization of C^n functions into a smooth vector bundle. -/\ntheorem cont_mdiff_at_total_space (f : M ‚Üí TotalSpace E) (x‚ÇÄ : M) :\n    cont_mdiff_at IM (IB.prod (model_with_corners_self ùïú F)) n f x‚ÇÄ ‚Üî\n      cont_mdiff_at IM IB n (fun x => (f x).proj) x‚ÇÄ ‚àß\n        cont_mdiff_at IM (model_with_corners_self ùïú F) n (fun x => (trivialization_at F E (f x‚ÇÄ).proj (f x)).2) x‚ÇÄ :=\n  by\n  simp_rw [‚Üê cont_mdiff_within_at_univ]\n  exact cont_mdiff_within_at_total_space f\n#align cont_mdiff_at_total_space cont_mdiff_at_total_space\n\n",
 "cont_mdiff_at_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprœÄ -/\ntheorem cont_mdiff_at_proj {p : TotalSpace E} :\n    cont_mdiff_at (IB.prod (model_with_corners_self ùïú F)) IB n ((exprœÄ) E) p :=\n  (bundle.cont_mdiff_proj E).cont_mdiff_at\n#align cont_mdiff_at_proj cont_mdiff_at_proj\n\n",
 "charted_space_chart_at_symm_fst":
 "theorem fiber_bundle.charted_space_chart_at_symm_fst (x : TotalSpace E) (y : ModelProd HB F)\n    (hy : y ‚àà (chart_at (ModelProd HB F) x).target) :\n    ((chart_at (ModelProd HB F) x).symm y).proj = (chart_at HB x.proj).symm y.1 :=\n  by\n  simp only [fiber_bundle.charted_space_chart_at, mfld_simps] at hy‚ä¢\n  exact (trivialization_at F E x.proj).proj_symm_apply hy.2\n#align fiber_bundle.charted_space_chart_at_symm_fst fiber_bundle.charted_space_chart_at_symm_fst\n\n",
 "charted_space_chart_at":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `local_homeomorph.trans -/\n/-\nCopyright (c) 2022 Floris van Doorn, Heather Macbeth. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Floris van Doorn, Heather Macbeth\n-/\ntheorem fiber_bundle.charted_space_chart_at (x : TotalSpace E) :\n    chart_at (ModelProd HB F) x =\n      local_homeomorph.trans (trivialization_at F E x.proj).to_local_homeomorph\n        ((chart_at HB x.proj).prod (LocalHomeomorph.refl F)) :=\n  by\n  dsimp only [fiber_bundle.charted_space', ChartedSpace.comp, fiber_bundle.charted_space, prodChartedSpace,\n    chartedSpaceSelf]\n  rw [Trivialization.coe_coe, Trivialization.coe_fst' _ (mem_base_set_trivialization_at F E x.proj)]\n#align fiber_bundle.charted_space_chart_at fiber_bundle.charted_space_chart_at\n\n"}