{"stereographic_target":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem stereographic_target (hv : «expr‖ ‖» v = 1) : (stereographic hv).target = Set.univ :=\n  rfl\n#align stereographic_target stereographic_target\n\n",
 "stereographic_source":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem stereographic_source (hv : «expr‖ ‖» v = 1) : (stereographic hv).source = «expr ᶜ» {⟨v, by simp [hv]⟩} :=\n  rfl\n#align stereographic_source stereographic_source\n\n",
 "stereographic_neg_apply":
 "@[simp]\ntheorem stereographic_neg_apply (v : sphere (0 : E) 1) : stereographic (norm_eq_of_mem_sphere (-v)) v = 0 :=\n  by\n  convert stereographic_apply_neg (-v)\n  ext1\n  simp\n#align stereographic_neg_apply stereographic_neg_apply\n\n",
 "stereographic_apply_neg":
 "@[simp]\ntheorem stereographic_apply_neg (v : sphere (0 : E) 1) : stereographic (norm_eq_of_mem_sphere v) (-v) = 0 := by\n  simp [stereographic_apply, orthogonal_projection_orthogonal_complement_singleton_eq_zero]\n#align stereographic_apply_neg stereographic_apply_neg\n\n",
 "stereographic_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem stereographic_apply (hv : «expr‖ ‖» v = 1) (x : sphere (0 : E) 1) :\n    stereographic hv x =\n      «expr • » (2 / ((1 : exprℝ) - inner v x)) (orthogonal_projection («expr ᗮ» («expr ∙ » (exprℝ) v)) x) :=\n  rfl\n#align stereographic_apply stereographic_apply\n\n",
 "stereographic'_target":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem stereographic'_target {n : ℕ} [Fact (finrank (exprℝ) E = n + 1)] (v : sphere (0 : E) 1) :\n    (stereographic' n v).target = Set.univ := by simp [stereographic']\n#align stereographic'_target stereographic'_target\n\n",
 "stereographic'_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem stereographic'_symm_apply {n : ℕ} [Fact (finrank (exprℝ) E = n + 1)] (v : sphere (0 : E) 1)\n    (x : euclidean_space (exprℝ) (Fin n)) :\n    ((stereographic' n v).symm x : E) =\n      let U : «expr ≃ₗᵢ[ ] » («expr ᗮ» («expr ∙ » (exprℝ) (v : E))) (exprℝ) (euclidean_space (exprℝ) (Fin n)) :=\n        (orthonormal_basis.from_orthogonal_span_singleton n (ne_zero_of_mem_unit_sphere v)).repr\n      «expr • » («expr‖ ‖» (U.symm x : E) ^ 2 + 4)⁻¹ («expr • » (4 : exprℝ) (U.symm x : E)) +\n        «expr • » («expr‖ ‖» (U.symm x : E) ^ 2 + 4)⁻¹ («expr • » («expr‖ ‖» (U.symm x : E) ^ 2 - 4) v) :=\n  by simp [real_inner_comm, stereographic, stereographic', ← Submodule.coe_norm]\n#align stereographic'_symm_apply stereographic'_symm_apply\n\n",
 "stereographic'_source":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem stereographic'_source {n : ℕ} [Fact (finrank (exprℝ) E = n + 1)] (v : sphere (0 : E) 1) :\n    (stereographic' n v).source = «expr ᶜ» {v} := by simp [stereographic']\n#align stereographic'_source stereographic'_source\n\n",
 "stereo_to_fun_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2021 Heather Macbeth. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Heather Macbeth\n-/\n@[simp]\ntheorem stereo_to_fun_apply [CompleteSpace E] (x : E) :\n    stereo_to_fun v x =\n      «expr • » (2 / ((1 : exprℝ) - innerSL _ v x)) (orthogonal_projection («expr ᗮ» («expr ∙ » (exprℝ) v)) x) :=\n  rfl\n#align stereo_to_fun_apply stereo_to_fun_apply\n\n",
 "stereo_right_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem stereo_right_inv (hv : «expr‖ ‖» v = 1) (w : «expr ᗮ» («expr ∙ » (exprℝ) v)) :\n    stereo_to_fun v (stereo_inv_fun hv w) = w :=\n  by\n  have :\n    2 / (1 - («expr‖ ‖» (w : E) ^ 2 + 4)⁻¹ * («expr‖ ‖» (w : E) ^ 2 - 4)) * («expr‖ ‖» (w : E) ^ 2 + 4)⁻¹ * 4 = 1 :=\n    by\n    have : «expr‖ ‖» (w : E) ^ 2 + 4 ≠ 0 := by nlinarith\n    have : (4 : exprℝ) + 4 ≠ 0 := by nlinarith\n    field_simp\n    ring\n  convert congr_arg (fun c => «expr • » c w) this\n  · have h₁ : orthogonal_projection («expr ᗮ» («expr ∙ » (exprℝ) v)) v = 0 :=\n      orthogonal_projection_orthogonal_complement_singleton_eq_zero v\n    have h₂ : orthogonal_projection («expr ᗮ» («expr ∙ » (exprℝ) v)) w = w :=\n      orthogonal_projection_mem_subspace_eq_self w\n    have h₃ : innerSL _ v w = (0 : exprℝ) := submodule.mem_orthogonal_singleton_iff_inner_right.mp w.2\n    have h₄ : innerSL _ v v = (1 : exprℝ) := by simp [real_inner_self_eq_norm_mul_norm, hv]\n    simp [h₁, h₂, h₃, h₄, ContinuousLinearMap.map_add, ContinuousLinearMap.map_smul, mul_smul]\n  · simp\n#align stereo_right_inv stereo_right_inv\n\n",
 "stereo_left_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem stereo_left_inv (hv : «expr‖ ‖» v = 1) {x : sphere (0 : E) 1} (hx : (x : E) ≠ v) :\n    stereo_inv_fun hv (stereo_to_fun v x) = x := by\n  ext\n  simp only [stereo_to_fun_apply, stereo_inv_fun_apply, smul_add]\n  -- name two frequently-occuring quantities and write down their basic properties\n  set a : exprℝ := innerSL _ v x\n  set y := orthogonal_projection («expr ᗮ» («expr ∙ » (exprℝ) v)) x\n  have split : ↑x = «expr • » a v + ↑y :=\n    by\n    convert eq_sum_orthogonal_projection_self_orthogonal_complement («expr ∙ » (exprℝ) v) x\n    exact (orthogonal_projection_unit_singleton (exprℝ) hv x).symm\n  have hvy : «expr⟪ , ⟫_ℝ» v y = 0 := submodule.mem_orthogonal_singleton_iff_inner_right.mp y.2\n  have pythag : 1 = a ^ 2 + «expr‖ ‖» y ^ 2 :=\n    by\n    have hvy' : «expr⟪ , ⟫_ℝ» («expr • » a v) y = 0 := by simp [inner_smul_left, hvy]\n    convert norm_add_sq_eq_norm_sq_add_norm_sq_of_inner_eq_zero _ _ hvy' using 2\n    · simp [← split]\n    · simp [norm_smul, hv, ← sq, sq_abs]\n    · exact sq _\n  -- two facts which will be helpful for clearing denominators in the main calculation\n  have ha : 1 - a ≠ 0 :=\n    by\n    have : a < 1 := (inner_lt_one_iff_real_of_norm_one hv (by simp)).mpr hx.symm\n    linarith\n  have : 2 ^ 2 * «expr‖ ‖» y ^ 2 + 4 * (1 - a) ^ 2 ≠ 0 :=\n    by\n    refine' ne_of_gt _\n    have := norm_nonneg (y : E)\n    have : 0 < (1 - a) ^ 2 := sq_pos_of_ne_zero (1 - a) ha\n    nlinarith\n  -- the core of the problem is these two algebraic identities:\n  have h₁ : (2 ^ 2 / (1 - a) ^ 2 * «expr‖ ‖» y ^ 2 + 4)⁻¹ * 4 * (2 / (1 - a)) = 1 :=\n    by\n    field_simp\n    simp only [Submodule.coe_norm] at *\n    nlinarith\n  have h₂ : (2 ^ 2 / (1 - a) ^ 2 * «expr‖ ‖» y ^ 2 + 4)⁻¹ * (2 ^ 2 / (1 - a) ^ 2 * «expr‖ ‖» y ^ 2 - 4) = a :=\n    by\n    field_simp\n    trans (1 - a) ^ 2 * (a * (2 ^ 2 * «expr‖ ‖» y ^ 2 + 4 * (1 - a) ^ 2))\n    · congr\n      simp only [Submodule.coe_norm] at *\n      nlinarith\n    ring\n  -- deduce the result\n  convert congr_arg₂ has_add.add (congr_arg (fun t => «expr • » t (y : E)) h₁)\n      (congr_arg (fun t => «expr • » t v) h₂) using\n    1\n  ·\n    simp [inner_add_right, inner_smul_right, hvy, real_inner_self_eq_norm_mul_norm, hv, mul_smul, mul_pow,\n      Real.norm_eq_abs, sq_abs, norm_smul]\n  · simp [split, add_comm]\n#align stereo_left_inv stereo_left_inv\n\n",
 "stereo_inv_fun_ne_north_pole":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem stereo_inv_fun_ne_north_pole (hv : «expr‖ ‖» v = 1) (w : «expr ᗮ» («expr ∙ » (exprℝ) v)) :\n    stereo_inv_fun hv w ≠ (⟨v, by simp [hv]⟩ : sphere (0 : E) 1) :=\n  by\n  refine' Subtype.ne_of_val_ne _\n  rw [← inner_lt_one_iff_real_of_norm_one _ hv]\n  · have hw : «expr⟪ , ⟫_ℝ» v w = 0 := submodule.mem_orthogonal_singleton_iff_inner_right.mp w.2\n    have hw' : («expr‖ ‖» (w : E) ^ 2 + 4)⁻¹ * («expr‖ ‖» (w : E) ^ 2 - 4) < 1 :=\n      by\n      refine' (inv_mul_lt_iff' _).mpr _\n      · nlinarith\n      linarith\n    simpa [real_inner_comm, inner_add_right, inner_smul_right, real_inner_self_eq_norm_mul_norm, hw, hv] using hw'\n  · simpa using stereo_inv_fun_aux_mem hv w.2\n#align stereo_inv_fun_ne_north_pole stereo_inv_fun_ne_north_pole\n\n",
 "stereo_inv_fun_aux_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem stereo_inv_fun_aux_mem (hv : «expr‖ ‖» v = 1) {w : E} (hw : w ∈ «expr ᗮ» («expr ∙ » (exprℝ) v)) :\n    stereo_inv_fun_aux v w ∈ sphere (0 : E) 1 :=\n  by\n  have h₁ : 0 ≤ «expr‖ ‖» w ^ 2 + 4 := by nlinarith\n  suffices «expr‖ ‖» («expr • » (4 : exprℝ) w + «expr • » («expr‖ ‖» w ^ 2 - 4) v) = «expr‖ ‖» w ^ 2 + 4\n    by\n    have h₂ : «expr‖ ‖» w ^ 2 + 4 ≠ 0 := by nlinarith\n    simp only [mem_sphere_zero_iff_norm, norm_smul, Real.norm_eq_abs, abs_inv, this, abs_of_nonneg h₁,\n      stereo_inv_fun_aux_apply]\n    field_simp\n  suffices «expr‖ ‖» («expr • » (4 : exprℝ) w + «expr • » («expr‖ ‖» w ^ 2 - 4) v) ^ 2 = («expr‖ ‖» w ^ 2 + 4) ^ 2\n    by\n    have h₃ : 0 ≤ «expr‖ ‖» (stereo_inv_fun_aux v w) := norm_nonneg _\n    simpa [h₁, h₃, -one_pow] using this\n  rw [submodule.mem_orthogonal_singleton_iff_inner_left] at hw\n  simp [norm_add_sq_real, norm_smul, inner_smul_left, inner_smul_right, hw, mul_pow, Real.norm_eq_abs, hv]\n  ring\n#align stereo_inv_fun_aux_mem stereo_inv_fun_aux_mem\n\n",
 "stereo_inv_fun_aux_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem stereo_inv_fun_aux_apply (w : E) :\n    stereo_inv_fun_aux v w =\n      «expr • » («expr‖ ‖» w ^ 2 + 4)⁻¹ («expr • » (4 : exprℝ) w + «expr • » («expr‖ ‖» w ^ 2 - 4) v) :=\n  rfl\n#align stereo_inv_fun_aux_apply stereo_inv_fun_aux_apply\n\n",
 "stereo_inv_fun_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem stereo_inv_fun_apply (hv : «expr‖ ‖» v = 1) (w : «expr ᗮ» («expr ∙ » (exprℝ) v)) :\n    (stereo_inv_fun hv w : E) =\n      «expr • » («expr‖ ‖» w ^ 2 + 4)⁻¹ («expr • » (4 : exprℝ) w + «expr • » («expr‖ ‖» w ^ 2 - 4) v) :=\n  rfl\n#align stereo_inv_fun_apply stereo_inv_fun_apply\n\n",
 "sphere_ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\ntheorem sphere_ext_iff (u v : sphere (0 : E) 1) : u = v ↔ «expr⟪ , ⟫_ℝ» (u : E) v = 1 := by\n  simp [Subtype.ext_iff, inner_eq_one_iff_of_norm_one]\n#align sphere_ext_iff sphere_ext_iff\n\n",
 "range_mfderiv_coe_sphere":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.euclidean -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.euclidean -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Consider the differential of the inclusion of the sphere in `E` at the point `v` as a continuous\nlinear map from `tangent_space (𝓡 n) v` to `E`.  The range of this map is the orthogonal complement\nof `v` in `E`.\n\nNote that there is an abuse here of the defeq between `E` and the tangent space to `E` at `(v:E`).\nIn general this defeq is not canonical, but in this case (the tangent space of a vector space) it is\ncanonical. -/\ntheorem range_mfderiv_coe_sphere {n : ℕ} [Fact (finrank (exprℝ) E = n + 1)] (v : sphere (0 : E) 1) :\n    (mfderiv (model_with_corners_self.euclidean n) (model_with_corners_self (exprℝ) E) (coe : sphere (0 : E) 1 → E) v :\n          «expr →L[ ] » (tangent_space (model_with_corners_self.euclidean n) v) (exprℝ) E).range =\n      «expr ᗮ» («expr ∙ » (exprℝ) (v : E)) :=\n  by\n  rw [((cont_mdiff_coe_sphere v).mdifferentiable_at le_top).mfderiv]\n  simp only [chart_at, stereographic', stereographic_neg_apply, fderiv_within_univ,\n    LinearIsometryEquiv.toHomeomorph_symm, LinearIsometryEquiv.coe_toHomeomorph, LinearIsometryEquiv.map_zero,\n    mfld_simps]\n  let U := (orthonormal_basis.from_orthogonal_span_singleton n (ne_zero_of_mem_unit_sphere (-v))).repr\n  change (fderiv (exprℝ) ((stereo_inv_fun_aux (-v : E) ∘ coe) ∘ U.symm) 0).range = «expr ᗮ» («expr ∙ » (exprℝ) (v : E))\n  have :\n    has_fderiv_at (stereo_inv_fun_aux (-v : E) ∘ (coe : «expr ᗮ» («expr ∙ » (exprℝ) (↑(-v) : E)) → E))\n      («expr ᗮ» («expr ∙ » (exprℝ) (↑(-v) : E))).subtypeL (U.symm 0) :=\n    by\n    convert has_fderiv_at_stereo_inv_fun_aux_comp_coe (-v : E)\n    simp\n  rw [(this.comp 0 U.symm.to_continuous_linear_equiv.has_fderiv_at).fderiv]\n  convert(U.symm :\n          «expr ≃ₗᵢ[ ] » (euclidean_space (exprℝ) (Fin n)) (exprℝ)\n            («expr ᗮ» («expr ∙ » (exprℝ) (↑(-v) : E)))).range_comp\n      («expr ᗮ» («expr ∙ » (exprℝ) (↑(-v) : E))).subtype using\n    1\n  simp only [Submodule.range_subtype, coe_neg_sphere]\n  congr 1\n  -- we must show `submodule.span ℝ {v} = submodule.span ℝ {-v}`\n  apply Submodule.span_eq_span\n  · simp only [Set.singleton_subset_iff, SetLike.mem_coe]\n    rw [← Submodule.neg_mem_iff]\n    exact Submodule.mem_span_singleton_self (-v)\n  · simp only [Set.singleton_subset_iff, SetLike.mem_coe]\n    rw [Submodule.neg_mem_iff]\n    exact Submodule.mem_span_singleton_self v\n#align range_mfderiv_coe_sphere range_mfderiv_coe_sphere\n\n",
 "mfderiv_coe_sphere_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.euclidean -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Consider the differential of the inclusion of the sphere in `E` at the point `v` as a continuous\nlinear map from `tangent_space (𝓡 n) v` to `E`.  This map is injective. -/\ntheorem mfderiv_coe_sphere_injective {n : ℕ} [Fact (finrank (exprℝ) E = n + 1)] (v : sphere (0 : E) 1) :\n    injective\n      (mfderiv (model_with_corners_self.euclidean n) (model_with_corners_self (exprℝ) E) (coe : sphere (0 : E) 1 → E)\n        v) :=\n  by\n  rw [((cont_mdiff_coe_sphere v).mdifferentiable_at le_top).mfderiv]\n  simp only [chart_at, stereographic', stereographic_neg_apply, fderiv_within_univ,\n    LinearIsometryEquiv.toHomeomorph_symm, LinearIsometryEquiv.coe_toHomeomorph, LinearIsometryEquiv.map_zero,\n    mfld_simps]\n  let U := (orthonormal_basis.from_orthogonal_span_singleton n (ne_zero_of_mem_unit_sphere (-v))).repr\n  change injective (fderiv (exprℝ) ((stereo_inv_fun_aux (-v : E) ∘ coe) ∘ U.symm) 0)\n  have :\n    has_fderiv_at (stereo_inv_fun_aux (-v : E) ∘ (coe : «expr ᗮ» («expr ∙ » (exprℝ) (↑(-v) : E)) → E))\n      («expr ᗮ» («expr ∙ » (exprℝ) (↑(-v) : E))).subtypeL (U.symm 0) :=\n    by\n    convert has_fderiv_at_stereo_inv_fun_aux_comp_coe (-v : E)\n    simp\n  rw [(this.comp 0 U.symm.to_continuous_linear_equiv.has_fderiv_at).fderiv]\n  simpa using Subtype.coe_injective\n#align mfderiv_coe_sphere_injective mfderiv_coe_sphere_injective\n\n",
 "has_fderiv_at_stereo_inv_fun_aux_comp_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_fderiv_at_stereo_inv_fun_aux_comp_coe (v : E) :\n    has_fderiv_at (stereo_inv_fun_aux v ∘ (coe : «expr ᗮ» («expr ∙ » (exprℝ) v) → E))\n      («expr ᗮ» («expr ∙ » (exprℝ) v)).subtypeL 0 :=\n  by\n  have :\n    has_fderiv_at (stereo_inv_fun_aux v) (ContinuousLinearMap.id (exprℝ) E)\n      ((«expr ᗮ» («expr ∙ » (exprℝ) v)).subtypeL 0) :=\n    has_fderiv_at_stereo_inv_fun_aux v\n  convert this.comp (0 : «expr ᗮ» («expr ∙ » (exprℝ) v)) (by apply continuous_linear_map.has_fderiv_at)\n#align has_fderiv_at_stereo_inv_fun_aux_comp_coe has_fderiv_at_stereo_inv_fun_aux_comp_coe\n\n",
 "has_fderiv_at_stereo_inv_fun_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_fderiv_at_stereo_inv_fun_aux (v : E) :\n    has_fderiv_at (stereo_inv_fun_aux v) (ContinuousLinearMap.id (exprℝ) E) 0 :=\n  by\n  have h₀ : has_fderiv_at (fun w : E => «expr‖ ‖» w ^ 2) (0 : «expr →L[ ] » E (exprℝ) (exprℝ)) 0 :=\n    by\n    convert(has_strict_fderiv_at_norm_sq _).has_fderiv_at\n    simp\n  have h₁ : has_fderiv_at (fun w : E => («expr‖ ‖» w ^ 2 + 4)⁻¹) (0 : «expr →L[ ] » E (exprℝ) (exprℝ)) 0 := by\n    convert(has_fderiv_at_inv _).comp _ (h₀.add (has_fderiv_at_const 4 0)) <;> simp\n  have h₂ :\n    has_fderiv_at (fun w => «expr • » (4 : exprℝ) w + «expr • » («expr‖ ‖» w ^ 2 - 4) v)\n      («expr • » (4 : exprℝ) (ContinuousLinearMap.id (exprℝ) E)) 0 :=\n    by\n    convert((has_fderiv_at_const (4 : exprℝ) 0).smul (has_fderiv_at_id 0)).add\n        ((h₀.sub (has_fderiv_at_const (4 : exprℝ) 0)).smul (has_fderiv_at_const v 0))\n    ext w\n    simp\n  convert h₁.smul h₂\n  ext w\n  simp\n#align has_fderiv_at_stereo_inv_fun_aux has_fderiv_at_stereo_inv_fun_aux\n\n",
 "continuous_stereo_inv_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem continuous_stereo_inv_fun (hv : «expr‖ ‖» v = 1) : Continuous (stereo_inv_fun hv) :=\n  continuous_induced_rng.2 (cont_diff_stereo_inv_fun_aux.continuous.comp continuous_subtype_val)\n#align continuous_stereo_inv_fun continuous_stereo_inv_fun\n\n",
 "continuous_on_stereo_to_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem continuous_on_stereo_to_fun [CompleteSpace E] :\n    ContinuousOn (stereo_to_fun v) { x : E | innerSL _ v x ≠ (1 : exprℝ) } :=\n  (@cont_diff_on_stereo_to_fun E _ _ v _).continuous_on\n#align continuous_on_stereo_to_fun continuous_on_stereo_to_fun\n\n",
 "cont_mdiff_neg_sphere":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.euclidean -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.euclidean -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `with_top.nat.top -/\n/-- The antipodal map is smooth. -/\ntheorem cont_mdiff_neg_sphere {n : ℕ} [Fact (finrank (exprℝ) E = n + 1)] :\n    cont_mdiff (model_with_corners_self.euclidean n) (model_with_corners_self.euclidean n) (with_top.nat.top)\n      fun x : sphere (0 : E) 1 => -x :=\n  by\n  -- this doesn't elaborate well in term mode\n  apply cont_mdiff.cod_restrict_sphere\n  apply cont_diff_neg.cont_mdiff.comp _\n  exact cont_mdiff_coe_sphere\n#align cont_mdiff_neg_sphere cont_mdiff_neg_sphere\n\n",
 "cont_mdiff_exp_map_circle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.euclidean -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `with_top.nat.top -/\n-- this elaborates much faster with `apply`\n/-- The map `λ t, exp (t * I)` from `ℝ` to the unit circle in `ℂ` is smooth. -/\ntheorem cont_mdiff_exp_map_circle :\n    cont_mdiff (model_with_corners_self (exprℝ) (exprℝ)) (model_with_corners_self.euclidean 1) (with_top.nat.top)\n      exp_map_circle :=\n  (cont_diff_exp.comp (cont_diff_id.smul cont_diff_const)).cont_mdiff.cod_restrict_sphere _\n#align cont_mdiff_exp_map_circle cont_mdiff_exp_map_circle\n\n",
 "cont_mdiff_coe_sphere":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.euclidean -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `with_top.nat.top -/\n-- Removed type ascription, and this helped for some reason with timeout issues?\n-- Removed type ascription, and this helped for some reason with timeout issues?\n-- squeezed from `ext, simp [sphere_ext_iff, stereographic'_symm_apply, real_inner_comm]`\n/-- The inclusion map (i.e., `coe`) from the sphere in `E` to `E` is smooth.  -/\ntheorem cont_mdiff_coe_sphere {n : ℕ} [Fact (finrank (exprℝ) E = n + 1)] :\n    cont_mdiff (model_with_corners_self.euclidean n) (model_with_corners_self (exprℝ) E) (with_top.nat.top)\n      (coe : sphere (0 : E) 1 → E) :=\n  by\n  rw [cont_mdiff_iff]\n  constructor\n  · exact continuous_subtype_val\n  · intro v _\n    let U : «expr ≃ₗᵢ[ ] » _ (exprℝ) _ :=\n      (-- Again, partially removing type ascription...\n          orthonormal_basis.from_orthogonal_span_singleton\n          n (ne_zero_of_mem_unit_sphere (-v))).repr\n    exact\n      ((cont_diff_stereo_inv_fun_aux.comp («expr ᗮ» («expr ∙ » (exprℝ) (-v : E))).subtypeL.cont_diff).comp\n          U.symm.cont_diff).cont_diff_on\n#align cont_mdiff_coe_sphere cont_mdiff_coe_sphere\n\n",
 "cont_diff_stereo_inv_fun_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem cont_diff_stereo_inv_fun_aux : cont_diff (exprℝ) («expr⊤») (stereo_inv_fun_aux v) :=\n  by\n  have h₀ : cont_diff (exprℝ) («expr⊤») fun w : E => «expr‖ ‖» w ^ 2 := cont_diff_norm_sq (exprℝ)\n  have h₁ : cont_diff (exprℝ) («expr⊤») fun w : E => («expr‖ ‖» w ^ 2 + 4)⁻¹ :=\n    by\n    refine' (h₀.add cont_diff_const).inv _\n    intro x\n    nlinarith\n  have h₂ : cont_diff (exprℝ) («expr⊤») fun w => «expr • » (4 : exprℝ) w + «expr • » («expr‖ ‖» w ^ 2 - 4) v :=\n    by\n    refine' (cont_diff_const.smul cont_diff_id).add _\n    refine' (h₀.sub cont_diff_const).smul cont_diff_const\n  exact h₁.smul h₂\n#align cont_diff_stereo_inv_fun_aux cont_diff_stereo_inv_fun_aux\n\n",
 "cont_diff_on_stereo_to_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cont_diff_on_stereo_to_fun [CompleteSpace E] :\n    cont_diff_on (exprℝ) («expr⊤») (stereo_to_fun v) { x : E | innerSL _ v x ≠ (1 : exprℝ) } :=\n  by\n  refine' cont_diff_on.smul _ (orthogonal_projection («expr ᗮ» («expr ∙ » (exprℝ) v))).cont_diff.cont_diff_on\n  refine' cont_diff_const.cont_diff_on.div _ _\n  · exact (cont_diff_const.sub (innerSL (exprℝ) v).cont_diff).cont_diff_on\n  · intro x h h'\n    exact h (sub_eq_zero.mp h').symm\n#align cont_diff_on_stereo_to_fun cont_diff_on_stereo_to_fun\n\n",
 "cod_restrict_sphere":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.euclidean -/\n/-- If a `cont_mdiff` function `f : M → E`, where `M` is some manifold, takes values in the\nsphere, then it restricts to a `cont_mdiff` function from `M` to the sphere. -/\ntheorem cont_mdiff.cod_restrict_sphere {n : ℕ} [Fact (finrank (exprℝ) E = n + 1)] {m : «exprℕ∞»} {f : M → E}\n    (hf : cont_mdiff I (model_with_corners_self (exprℝ) E) m f) (hf' : ∀ x, f x ∈ sphere (0 : E) 1) :\n    cont_mdiff I (model_with_corners_self.euclidean n) m (Set.codRestrict _ _ hf' : M → sphere (0 : E) 1) :=\n  by\n  rw [cont_mdiff_iff_target]\n  refine' ⟨continuous_induced_rng.2 hf.continuous, _⟩\n  intro v\n  let U : «expr ≃ₗᵢ[ ] » _ (exprℝ) _ :=\n    (-- Again, partially removing type ascription... Weird that this helps!\n        orthonormal_basis.from_orthogonal_span_singleton\n        n (ne_zero_of_mem_unit_sphere (-v))).repr\n  have h : cont_diff_on (exprℝ) («expr⊤») _ Set.univ := U.cont_diff.cont_diff_on\n  have H₁ := (h.comp' cont_diff_on_stereo_to_fun).cont_mdiff_on\n  have H₂ : cont_mdiff_on _ _ _ _ Set.univ := hf.cont_mdiff_on\n  convert(H₁.of_le le_top).comp' H₂ using 1\n  ext x\n  have hfxv : f x = -↑v ↔ «expr⟪ , ⟫_ℝ» (f x) (-↑v) = 1 :=\n    by\n    have hfx : «expr‖ ‖» (f x) = 1 := by simpa using hf' x\n    rw [inner_eq_one_iff_of_norm_one hfx]\n    exact norm_eq_of_mem_sphere (-v)\n  dsimp [chart_at]\n  simp [not_iff_not, Subtype.ext_iff, hfxv, real_inner_comm]\n#align cont_mdiff.cod_restrict_sphere cont_mdiff.cod_restrict_sphere\n\n"}