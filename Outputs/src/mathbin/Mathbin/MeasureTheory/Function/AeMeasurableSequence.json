{"supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ /-\ntheorem supᵢ [CompleteLattice β] [Countable ι] (hf : ∀ i, AEMeasurable (f i) μ)\n    (hp :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (p x fun n => f n x)) :\n    «expr =ᵐ[ ] »\n      («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (aeSeq hf p n)) μ\n      («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f n)) :=\n  by\n  simp_rw [Filter.EventuallyEq, ae_iff, supᵢ_apply]\n  have h_ss :\n    aeSeqSet hf p ⊆\n      { a : α |\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n            (aeSeq hf p i a) =\n          «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i a) } :=\n    by\n    intro x hx\n    congr\n    exact funext fun i => ae_seq_eq_fun_of_mem_ae_seq_set hf hx i\n  exact measure_mono_null (set.compl_subset_compl.mpr h_ss) (measure_compl_ae_seq_set_eq_zero hf hp)\n#align supr supᵢ\n-/\n\n",
 "prop_of_mem_ae_seq_set":
 "theorem prop_of_mem_ae_seq_set (hf : ∀ i, AEMeasurable (f i) μ) {x : α} (hx : x ∈ aeSeqSet hf p) :\n    p x fun n => aeSeq hf p n x := by\n  simp only [aeSeq, hx, if_true]\n  rw [funext fun n => mk_eq_fun_of_mem_ae_seq_set hf hx n]\n  have h_ss : aeSeqSet hf p ⊆ { x | p x fun n => f n x } :=\n    by\n    rw [← compl_compl { x | p x fun n => f n x }, aeSeqSet, Set.compl_subset_compl]\n    refine' Set.Subset.trans (set.compl_subset_compl.mpr _) (subset_to_measurable _ _)\n    exact fun x hx => hx.2\n  have hx' := Set.mem_of_subset_of_mem h_ss hx\n  exact hx'\n#align prop_of_mem_ae_seq_set prop_of_mem_ae_seq_set\n\n",
 "mk_eq_fun_of_mem_ae_seq_set":
 "/-\nCopyright (c) 2021 Rémy Degenne. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Rémy Degenne\n-/\ntheorem mk_eq_fun_of_mem_ae_seq_set (hf : ∀ i, AEMeasurable (f i) μ) {x : α} (hx : x ∈ aeSeqSet hf p) (i : ι) :\n    (hf i).mk (f i) x = f i x :=\n  haveI h_ss : aeSeqSet hf p ⊆ { x | ∀ i, f i x = (hf i).mk (f i) x } :=\n    by\n    rw [aeSeqSet, ← compl_compl { x | ∀ i, f i x = (hf i).mk (f i) x }, Set.compl_subset_compl]\n    refine' Set.Subset.trans (set.compl_subset_compl.mpr fun x h => _) (subset_to_measurable _ _)\n    exact h.1\n  (h_ss hx i).symm\n#align mk_eq_fun_of_mem_ae_seq_set mk_eq_fun_of_mem_ae_seq_set\n\n",
 "measure_compl_ae_seq_set_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem measure_compl_ae_seq_set_eq_zero [Countable ι] (hf : ∀ i, AEMeasurable (f i) μ)\n    (hp :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (p x fun n => f n x)) :\n    μ («expr ᶜ» (aeSeqSet hf p)) = 0 :=\n  by\n  rw [aeSeqSet, compl_compl, measure_to_measurable]\n  have hf_eq := fun i => (hf i).ae_eq_mk\n  simp_rw [Filter.EventuallyEq, ← ae_all_iff] at hf_eq\n  exact Filter.Eventually.and hf_eq hp\n#align measure_compl_ae_seq_set_eq_zero measure_compl_ae_seq_set_eq_zero\n\n",
 "fun_prop_of_mem_ae_seq_set":
 "theorem fun_prop_of_mem_ae_seq_set (hf : ∀ i, AEMeasurable (f i) μ) {x : α} (hx : x ∈ aeSeqSet hf p) :\n    p x fun n => f n x :=\n  by\n  have h_eq : (fun n => f n x) = fun n => aeSeq hf p n x :=\n    funext fun n => (ae_seq_eq_fun_of_mem_ae_seq_set hf hx n).symm\n  rw [h_eq]\n  exact prop_of_mem_ae_seq_set hf hx\n#align fun_prop_of_mem_ae_seq_set fun_prop_of_mem_ae_seq_set\n\n",
 "ae_seq_set_measurable_set":
 "theorem ae_seq_set_measurable_set {hf : ∀ i, AEMeasurable (f i) μ} : MeasurableSet (aeSeqSet hf p) :=\n  (measurableSet_toMeasurable _ _).compl\n#align ae_seq_set_measurable_set ae_seq_set_measurable_set\n\n",
 "ae_seq_n_eq_fun_n_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_seq_n_eq_fun_n_ae [Countable ι] (hf : ∀ i, AEMeasurable (f i) μ)\n    (hp :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (p x fun n => f n x))\n    (n : ι) : «expr =ᵐ[ ] » (aeSeq hf p n) μ (f n) :=\n  ae_all_iff.mp (aeSeq_eq_fun_ae hf hp) n\n#align ae_seq_n_eq_fun_n_ae ae_seq_n_eq_fun_n_ae\n\n",
 "ae_seq_eq_mk_of_mem_ae_seq_set":
 "theorem ae_seq_eq_mk_of_mem_ae_seq_set (hf : ∀ i, AEMeasurable (f i) μ) {x : α} (hx : x ∈ aeSeqSet hf p) (i : ι) :\n    aeSeq hf p i x = (hf i).mk (f i) x := by simp only [aeSeq, hx, if_true]\n#align ae_seq_eq_mk_of_mem_ae_seq_set ae_seq_eq_mk_of_mem_ae_seq_set\n\n",
 "ae_seq_eq_mk_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem ae_seq_eq_mk_ae [Countable ι] (hf : ∀ i, AEMeasurable (f i) μ)\n    (hp :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (p x fun n => f n x)) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (∀ i : ι, aeSeq hf p i a = (hf i).mk (f i) a) :=\n  haveI h_ss : aeSeqSet hf p ⊆ { a : α | ∀ i, aeSeq hf p i a = (hf i).mk (f i) a } := fun x hx i => by\n    simp only [aeSeq, hx, if_true]\n  le_antisymm\n    (le_trans (measure_mono (set.compl_subset_compl.mpr h_ss)) (le_of_eq (measure_compl_ae_seq_set_eq_zero hf hp)))\n    (zero_le _)\n#align ae_seq_eq_mk_ae ae_seq_eq_mk_ae\n\n",
 "ae_seq_eq_fun_of_mem_ae_seq_set":
 "theorem ae_seq_eq_fun_of_mem_ae_seq_set (hf : ∀ i, AEMeasurable (f i) μ) {x : α} (hx : x ∈ aeSeqSet hf p) (i : ι) :\n    aeSeq hf p i x = f i x := by simp only [ae_seq_eq_mk_of_mem_ae_seq_set hf hx i, mk_eq_fun_of_mem_ae_seq_set hf hx i]\n#align ae_seq_eq_fun_of_mem_ae_seq_set ae_seq_eq_fun_of_mem_ae_seq_set\n\n",
 "ae_seq_eq_fun_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem ae_seq_eq_fun_ae [Countable ι] (hf : ∀ i, AEMeasurable (f i) μ)\n    (hp :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (p x fun n => f n x)) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (∀ i : ι, aeSeq hf p i a = f i a) :=\n  haveI h_ss : { a : α | ¬∀ i : ι, aeSeq hf p i a = f i a } ⊆ «expr ᶜ» (aeSeqSet hf p) := fun x =>\n    mt fun hx i => ae_seq_eq_fun_of_mem_ae_seq_set hf hx i\n  measure_mono_null h_ss (measure_compl_ae_seq_set_eq_zero hf hp)\n#align ae_seq_eq_fun_ae ae_seq_eq_fun_ae\n\n",
 "Measurable":
 "#print Measurable /-\ntheorem Measurable (hf : ∀ i, AEMeasurable (f i) μ) (p : α → (ι → β) → Prop) (i : ι) : Measurable (aeSeq hf p i) :=\n  Measurable.ite aeSeqSet_measurableSet (hf i).measurable_mk <| measurable_const' fun x y => rfl\n#align measurable Measurable\n-/\n\n"}