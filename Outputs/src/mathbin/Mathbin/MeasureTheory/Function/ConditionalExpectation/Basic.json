{"tendsto_condexp_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/-- If two sequences of functions have a.e. equal conditional expectations at each step, converge\nand verify dominated convergence hypotheses, then the conditional expectations of their limits are\na.e. equal. -/\ntheorem tendsto_condexp_unique (fs gs : ℕ → α → F') (f g : α → F') (hfs_int : ∀ n, integrable (fs n) μ)\n    (hgs_int : ∀ n, integrable (gs n) μ)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (Tendsto (fun n => fs n x) atTop ((nhds) (f x))))\n    (hgs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (Tendsto (fun n => gs n x) atTop ((nhds) (g x))))\n    (bound_fs : α → exprℝ) (h_int_bound_fs : integrable bound_fs μ) (bound_gs : α → exprℝ)\n    (h_int_bound_gs : integrable bound_gs μ)\n    (hfs_bound :\n      ∀ n,\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          («expr‖ ‖» (fs n x) ≤ bound_fs x))\n    (hgs_bound :\n      ∀ n,\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          («expr‖ ‖» (gs n x) ≤ bound_gs x))\n    (hfg : ∀ n, «expr =ᵐ[ ] » (measure_theory.condexp μ (fs n) m) μ (measure_theory.condexp μ (gs n) m)) :\n    «expr =ᵐ[ ] » (measure_theory.condexp μ f m) μ (measure_theory.condexp μ g m) :=\n  by\n  by_cases hm : m ≤ m0\n  swap\n  · simp_rw [condexp_of_not_le hm]\n  by_cases hμm : sigma_finite (μ.trim hm)\n  swap\n  · simp_rw [condexp_of_not_sigma_finite hm hμm]\n  haveI : sigma_finite (μ.trim hm) := hμm\n  refine' (condexp_ae_eq_condexp_L1 hm f).trans ((condexp_ae_eq_condexp_L1 hm g).trans _).symm\n  rw [← Lp.ext_iff]\n  have hn_eq : ∀ n, condexp_L1 hm μ (gs n) = condexp_L1 hm μ (fs n) :=\n    by\n    intro n\n    ext1\n    refine' (condexp_ae_eq_condexp_L1 hm (gs n)).symm.trans ((hfg n).symm.trans _)\n    exact condexp_ae_eq_condexp_L1 hm (fs n)\n  have hcond_fs : tendsto (fun n => condexp_L1 hm μ (fs n)) at_top ((nhds) (condexp_L1 hm μ f)) :=\n    tendsto_condexp_L1_of_dominated_convergence hm _ (fun n => (hfs_int n).1) h_int_bound_fs hfs_bound hfs\n  have hcond_gs : tendsto (fun n => condexp_L1 hm μ (gs n)) at_top ((nhds) (condexp_L1 hm μ g)) :=\n    tendsto_condexp_L1_of_dominated_convergence hm _ (fun n => (hgs_int n).1) h_int_bound_gs hgs_bound hgs\n  exact tendsto_nhds_unique_of_eventuallyEq hcond_gs hcond_fs (eventually_of_forall hn_eq)\n#align tendsto_condexp_unique tendsto_condexp_unique\n\n",
 "tendsto_condexp_L1_of_dominated_convergence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- **Lebesgue dominated convergence theorem**: sufficient conditions under which almost\n  everywhere convergence of a sequence of functions implies the convergence of their image by\n  `condexp_L1`. -/\ntheorem tendsto_condexp_L1_of_dominated_convergence (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] {fs : ℕ → α → F'}\n    {f : α → F'} (bound_fs : α → exprℝ) (hfs_meas : ∀ n, ae_strongly_measurable (fs n) μ)\n    (h_int_bound_fs : integrable bound_fs μ)\n    (hfs_bound :\n      ∀ n,\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          («expr‖ ‖» (fs n x) ≤ bound_fs x))\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (Tendsto (fun n => fs n x) atTop ((nhds) (f x)))) :\n    Tendsto (fun n => condexp_L1 hm μ (fs n)) atTop ((nhds) (condexp_L1 hm μ f)) :=\n  tendsto_set_to_fun_of_dominated_convergence _ bound_fs hfs_meas h_int_bound_fs hfs_bound hfs\n#align tendsto_condexp_L1_of_dominated_convergence tendsto_condexp_L1_of_dominated_convergence\n\n",
 "sub":
 "theorem sub [AddGroup β] [TopologicalAddGroup β] {f g : α → β} (hfm : ae_strongly_measurable' m f μ)\n    (hgm : ae_strongly_measurable' m g μ) : ae_strongly_measurable' m (f - g) μ :=\n  by\n  rcases hfm with ⟨f', hf'_meas, hf_ae⟩\n  rcases hgm with ⟨g', hg'_meas, hg_ae⟩\n  refine' ⟨f' - g', hf'_meas.sub hg'_meas, hf_ae.mp (hg_ae.mono fun x hx1 hx2 => _)⟩\n  simp_rw [Pi.sub_apply]\n  rw [hx1, hx2]\n#align sub sub\n\n",
 "strongly_measurable_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\ntheorem strongly_measurable_mk {f : α → β} (hfm : ae_strongly_measurable' m f μ) :\n    (strongly_measurable_of m) (hfm.mk f) :=\n  hfm.some_spec.1\n#align strongly_measurable_mk strongly_measurable_mk\n\n",
 "strongly_measurable_condexp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem strongly_measurable_condexp : (strongly_measurable_of m) (measure_theory.condexp μ f m) :=\n  by\n  by_cases hm : m ≤ m0\n  swap;\n  · rw [condexp_of_not_le hm]\n    exact strongly_measurable_zero\n  by_cases hμm : sigma_finite (μ.trim hm)\n  swap;\n  · rw [condexp_of_not_sigma_finite hm hμm]\n    exact strongly_measurable_zero\n  haveI : sigma_finite (μ.trim hm) := hμm\n  rw [condexp_of_sigma_finite hm]\n  swap; · infer_instance\n  split_ifs with hfi hfm\n  · exact hfm\n  · exact ae_strongly_measurable'.strongly_measurable_mk _\n  · exact strongly_measurable_zero\n#align strongly_measurable_condexp strongly_measurable_condexp\n\n",
 "snorm_condexp_L2_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\ntheorem snorm_condexp_L2_le (hm : m ≤ m0) (f : measure_theory.L2 α μ E) : snorm (condexp_L2 𝕜 hm f) 2 μ ≤ snorm f 2 μ :=\n  by\n  rw [Lp_meas_coe, ← ENNReal.toReal_le_toReal (Lp.snorm_ne_top _) (Lp.snorm_ne_top _), ← Lp.norm_def, ← Lp.norm_def,\n    Submodule.norm_coe]\n  exact norm_condexp_L2_le hm f\n#align snorm_condexp_L2_le snorm_condexp_L2_le\n\n",
 "set_lintegral_nnnorm_condexp_ind_smul_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem set_lintegral_nnnorm_condexp_ind_smul_le (hm : m ≤ m0) (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : G)\n    {t : Set α} (ht : (measurable_set_of m) t) (hμt : μ t ≠ ennreal.top) :\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n        («expr‖ ‖₊» (condexp_ind_smul hm hs hμs x a)) μ ≤\n      μ (s ∩ t) * «expr‖ ‖₊» x :=\n  calc\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n          («expr‖ ‖₊» (condexp_ind_smul hm hs hμs x a)) μ =\n        «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n          («expr‖ ‖₊» («expr • » (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)) a) x)) μ :=\n      set_lintegral_congr_fun (hm t ht) ((condexp_ind_smul_ae_eq_smul hm hs hμs x).mono fun a ha hat => by rw [ha])\n    _ =\n        «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n            («expr‖ ‖₊» (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)) a)) μ *\n          «expr‖ ‖₊» x :=\n      by\n      simp_rw [nnnorm_smul, ENNReal.coe_mul]\n      rw [lintegral_mul_const, Lp_meas_coe]\n      exact (Lp.strongly_measurable _).ennnorm\n    _ ≤ μ (s ∩ t) * «expr‖ ‖₊» x := mul_le_mul_right' (lintegral_nnnorm_condexp_L2_indicator_le_real hs hμs ht hμt) _\n    \n#align set_lintegral_nnnorm_condexp_ind_smul_le set_lintegral_nnnorm_condexp_ind_smul_le\n\n",
 "set_lintegral_nnnorm_condexp_L2_indicator_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem set_lintegral_nnnorm_condexp_L2_indicator_le (hm : m ≤ m0) (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top)\n    (x : E') {t : Set α} (ht : (measurable_set_of m) t) (hμt : μ t ≠ ennreal.top) :\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n        («expr‖ ‖₊» (condexp_L2 𝕜 hm (indicator_const_Lp 2 hs hμs x) a)) μ ≤\n      μ (s ∩ t) * «expr‖ ‖₊» x :=\n  calc\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n          («expr‖ ‖₊» (condexp_L2 𝕜 hm (indicator_const_Lp 2 hs hμs x) a)) μ =\n        «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n          («expr‖ ‖₊» («expr • » (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)) a) x)) μ :=\n      set_lintegral_congr_fun (hm t ht)\n        ((condexp_L2_indicator_ae_eq_smul 𝕜 hm hs hμs x).mono fun a ha hat => by rw [ha])\n    _ =\n        «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n            («expr‖ ‖₊» (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)) a)) μ *\n          «expr‖ ‖₊» x :=\n      by\n      simp_rw [nnnorm_smul, ENNReal.coe_mul]\n      rw [lintegral_mul_const, Lp_meas_coe]\n      exact (Lp.strongly_measurable _).ennnorm\n    _ ≤ μ (s ∩ t) * «expr‖ ‖₊» x := mul_le_mul_right' (lintegral_nnnorm_condexp_L2_indicator_le_real hs hμs ht hμt) _\n    \n#align set_lintegral_nnnorm_condexp_L2_indicator_le set_lintegral_nnnorm_condexp_L2_indicator_le\n\n",
 "set_integral_condexp_ind_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_integral_condexp_ind_smul (hs : (measurable_set_of m) s) (ht : MeasurableSet t) (hμs : μ s ≠ ennreal.top)\n    (hμt : μ t ≠ ennreal.top) (x : G') :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        ((condexp_ind_smul hm ht hμt x) a) μ =\n      «expr • » (μ (t ∩ s)).to_real x :=\n  calc\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n          ((condexp_ind_smul hm ht hμt x) a) μ =\n        «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n          («expr • » (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 ht hμt (1 : exprℝ)) a) x) μ :=\n      set_integral_congr_ae (hm s hs) ((condexp_ind_smul_ae_eq_smul hm ht hμt x).mono fun x hx hxs => hx)\n    _ =\n        «expr • »\n          («expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n            (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 ht hμt (1 : exprℝ)) a) μ)\n          x :=\n      (integral_smul_const _ x)\n    _ = «expr • » (μ (t ∩ s)).to_real x := by rw [set_integral_condexp_L2_indicator hs ht hμs hμt]\n    \n#align set_integral_condexp_ind_smul set_integral_condexp_ind_smul\n\n",
 "set_integral_condexp_ind":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_integral_condexp_ind (hs : (measurable_set_of m) s) (ht : MeasurableSet t) (hμs : μ s ≠ ennreal.top)\n    (hμt : μ t ≠ ennreal.top) (x : G') :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        (condexp_ind hm μ t x a) μ =\n      «expr • » (μ (t ∩ s)).to_real x :=\n  calc\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n          (condexp_ind hm μ t x a) μ =\n        «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n          (condexp_ind_smul hm ht hμt x a) μ :=\n      set_integral_congr_ae (hm s hs) ((condexp_ind_ae_eq_condexp_ind_smul hm ht hμt x).mono fun x hx hxs => hx)\n    _ = «expr • » (μ (t ∩ s)).to_real x := set_integral_condexp_ind_smul hs ht hμs hμt x\n    \n#align set_integral_condexp_ind set_integral_condexp_ind\n\n",
 "set_integral_condexp_L2_indicator":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem set_integral_condexp_L2_indicator (hs : (measurable_set_of m) s) (ht : MeasurableSet t)\n    (hμs : μ s ≠ ennreal.top) (hμt : μ t ≠ ennreal.top) :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        ((condexp_L2 (exprℝ) hm (indicator_const_Lp 2 ht hμt (1 : exprℝ))) x) μ =\n      (μ (t ∩ s)).to_real :=\n  calc\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n          ((condexp_L2 (exprℝ) hm (indicator_const_Lp 2 ht hμt (1 : exprℝ))) x) μ =\n        «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n          (indicator_const_Lp 2 ht hμt (1 : exprℝ) x) μ :=\n      @integral_condexp_L2_eq α _ (exprℝ) _ _ _ _ _ _ _ _ _ hm (indicator_const_Lp 2 ht hμt (1 : exprℝ)) hs hμs\n    _ = «expr • » (μ (t ∩ s)).to_real 1 := (set_integral_indicator_const_Lp (hm s hs) ht hμt (1 : exprℝ))\n    _ = (μ (t ∩ s)).to_real := by rw [smul_eq_mul, mul_one]\n    \n#align set_integral_condexp_L2_indicator set_integral_condexp_L2_indicator\n\n",
 "set_integral_condexp_L1_clm_of_measure_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/-- Auxiliary lemma used in the proof of `set_integral_condexp_L1_clm`. -/\ntheorem set_integral_condexp_L1_clm_of_measure_ne_top (f : measure_theory.L1 α μ F') (hs : (measurable_set_of m) s)\n    (hμs : μ s ≠ ennreal.top) :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        (condexp_L1_clm hm μ f x) μ =\n      «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s (f x)\n        μ :=\n  by\n  refine'\n    Lp.induction ENNReal.one_ne_top\n      (fun f : measure_theory.L1 α μ F' =>\n        «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n            (condexp_L1_clm hm μ f x) μ =\n          «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n            (f x) μ)\n      _ _ (isClosed_eq _ _) f\n  · intro x t ht hμt\n    simp_rw [condexp_L1_clm_indicator_const ht hμt.ne x]\n    rw [Lp.simple_func.coe_indicator_const, set_integral_indicator_const_Lp (hm _ hs)]\n    exact set_integral_condexp_ind hs ht hμs hμt.ne x\n  · intro f g hf_Lp hg_Lp hfg_disj hf hg\n    simp_rw [(condexp_L1_clm hm μ).map_add]\n    rw [set_integral_congr_ae (hm s hs)\n        ((Lp.coe_fn_add (condexp_L1_clm hm μ (hf_Lp.to_Lp f)) (condexp_L1_clm hm μ (hg_Lp.to_Lp g))).mono\n          fun x hx hxs => hx)]\n    rw [set_integral_congr_ae (hm s hs) ((Lp.coe_fn_add (hf_Lp.to_Lp f) (hg_Lp.to_Lp g)).mono fun x hx hxs => hx)]\n    simp_rw [Pi.add_apply]\n    rw [integral_add (L1.integrable_coe_fn _).integrable_on (L1.integrable_coe_fn _).integrable_on,\n      integral_add (L1.integrable_coe_fn _).integrable_on (L1.integrable_coe_fn _).integrable_on, hf, hg]\n  · exact (continuous_set_integral s).comp (condexp_L1_clm hm μ).continuous\n  · exact continuous_set_integral s\n#align set_integral_condexp_L1_clm_of_measure_ne_top set_integral_condexp_L1_clm_of_measure_ne_top\n\n",
 "set_integral_condexp_L1_clm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/-- The integral of the conditional expectation `condexp_L1_clm` over an `m`-measurable set is equal\nto the integral of `f` on that set. See also `set_integral_condexp`, the similar statement for\n`condexp`. -/\ntheorem set_integral_condexp_L1_clm (f : measure_theory.L1 α μ F') (hs : (measurable_set_of m) s) :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        (condexp_L1_clm hm μ f x) μ =\n      «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s (f x)\n        μ :=\n  by\n  let S := spanning_sets (μ.trim hm)\n  have hS_meas : ∀ i, (measurable_set_of m) (S i) := measurable_spanning_sets (μ.trim hm)\n  have hS_meas0 : ∀ i, MeasurableSet (S i) := fun i => hm _ (hS_meas i)\n  have hs_eq :\n    s = «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (S i ∩ s) :=\n    by\n    simp_rw [Set.inter_comm]\n    rw [← Set.inter_unionᵢ, Union_spanning_sets (μ.trim hm), Set.inter_univ]\n  have hS_finite : ∀ i, μ (S i ∩ s) < ennreal.top :=\n    by\n    refine' fun i => (measure_mono (Set.inter_subset_left _ _)).trans_lt _\n    have hS_finite_trim := measure_spanning_sets_lt_top (μ.trim hm) i\n    rwa [trim_measurable_set_eq hm (hS_meas i)] at hS_finite_trim\n  have h_mono : Monotone fun i => S i ∩ s := by\n    intro i j hij x\n    simp_rw [Set.mem_inter_iff]\n    exact fun h => ⟨monotone_spanning_sets (μ.trim hm) hij h.1, h.2⟩\n  have h_eq_forall :\n    (fun i =>\n        «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\"\n          (S i ∩ s) (condexp_L1_clm hm μ f x) μ) =\n      fun i =>\n      «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\"\n        (S i ∩ s) (f x) μ :=\n    funext fun i =>\n      set_integral_condexp_L1_clm_of_measure_ne_top f (@MeasurableSet.inter α m _ _ (hS_meas i) hs) (hS_finite i).ne\n  have h_right :\n    tendsto\n      (fun i =>\n        «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\"\n          (S i ∩ s) (f x) μ)\n      at_top\n      ((nhds)\n        («expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n          (f x) μ)) :=\n    by\n    have h :=\n      tendsto_set_integral_of_monotone (fun i => (hS_meas0 i).inter (hm s hs)) h_mono\n        (L1.integrable_coe_fn f).integrable_on\n    rwa [← hs_eq] at h\n  have h_left :\n    tendsto\n      (fun i =>\n        «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\"\n          (S i ∩ s) (condexp_L1_clm hm μ f x) μ)\n      at_top\n      ((nhds)\n        («expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n          (condexp_L1_clm hm μ f x) μ)) :=\n    by\n    have h :=\n      tendsto_set_integral_of_monotone (fun i => (hS_meas0 i).inter (hm s hs)) h_mono\n        (L1.integrable_coe_fn (condexp_L1_clm hm μ f)).integrable_on\n    rwa [← hs_eq] at h\n  rw [h_eq_forall] at h_left\n  exact tendsto_nhds_unique h_left h_right\n#align set_integral_condexp_L1_clm set_integral_condexp_L1_clm\n\n",
 "set_integral_condexp_L1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/-- The integral of the conditional expectation `condexp_L1` over an `m`-measurable set is equal to\nthe integral of `f` on that set. See also `set_integral_condexp`, the similar statement for\n`condexp`. -/\ntheorem set_integral_condexp_L1 (hf : integrable f μ) (hs : (measurable_set_of m) s) :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        (condexp_L1 hm μ f x) μ =\n      «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s (f x)\n        μ :=\n  by\n  simp_rw [condexp_L1_eq hf]\n  rw [set_integral_condexp_L1_clm (hf.to_L1 f) hs]\n  exact set_integral_congr_ae (hm s hs) (hf.coe_fn_to_L1.mono fun x hx hxs => hx)\n#align set_integral_condexp_L1 set_integral_condexp_L1\n\n",
 "set_integral_condexp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/-- The integral of the conditional expectation `μ[f|hm]` over an `m`-measurable set is equal to\nthe integral of `f` on that set. -/\ntheorem set_integral_condexp (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] (hf : integrable f μ)\n    (hs : (measurable_set_of m) s) :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        ((measure_theory.condexp μ f m) x) μ =\n      «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s (f x)\n        μ :=\n  by\n  rw [set_integral_congr_ae (hm s hs) ((condexp_ae_eq_condexp_L1 hm f).mono fun x hx _ => hx)]\n  exact set_integral_condexp_L1 hf hs\n#align set_integral_condexp set_integral_condexp\n\n",
 "norm_condexp_ind_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem norm_condexp_ind_le :\n    «expr‖ ‖» (condexp_ind hm μ s : «expr →L[ ] » G (exprℝ) (measure_theory.L1 α μ G)) ≤ (μ s).to_real :=\n  continuous_linear_map.op_norm_le_bound _ ENNReal.toReal_nonneg norm_condexp_ind_apply_le\n#align norm_condexp_ind_le norm_condexp_ind_le\n\n",
 "norm_condexp_ind_apply_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_condexp_ind_apply_le (x : G) : «expr‖ ‖» (condexp_ind hm μ s x) ≤ (μ s).to_real * «expr‖ ‖» x :=\n  norm_condexp_ind_L1_le x\n#align norm_condexp_ind_apply_le norm_condexp_ind_apply_le\n\n",
 "norm_condexp_ind_L1_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_condexp_ind_L1_le (x : G) : «expr‖ ‖» (condexp_ind_L1 hm μ s x) ≤ (μ s).to_real * «expr‖ ‖» x :=\n  by\n  by_cases hs : MeasurableSet s\n  swap;\n  · simp_rw [condexp_ind_L1_of_not_measurable_set hs]\n    rw [Lp.norm_zero]\n    exact mul_nonneg ENNReal.toReal_nonneg (norm_nonneg _)\n  by_cases hμs : μ s = ennreal.top\n  · rw [condexp_ind_L1_of_measure_eq_top hμs x, Lp.norm_zero]\n    exact mul_nonneg ENNReal.toReal_nonneg (norm_nonneg _)\n  · rw [condexp_ind_L1_of_measurable_set_of_measure_ne_top hs hμs x]\n    exact norm_condexp_ind_L1_fin_le hs hμs x\n#align norm_condexp_ind_L1_le norm_condexp_ind_L1_le\n\n",
 "norm_condexp_ind_L1_fin_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_condexp_ind_L1_fin_le (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : G) :\n    «expr‖ ‖» (condexp_ind_L1_fin hm hs hμs x) ≤ (μ s).to_real * «expr‖ ‖» x :=\n  by\n  have :\n    0 ≤\n      «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\"\n        («expr‖ ‖» (condexp_ind_L1_fin hm hs hμs x a)) μ :=\n    integral_nonneg fun a => norm_nonneg _\n  rw [L1.norm_eq_integral_norm, ← ENNReal.toReal_ofReal (norm_nonneg x), ← ENNReal.toReal_mul, ←\n    ENNReal.toReal_ofReal this,\n    ENNReal.toReal_le_toReal ENNReal.ofReal_ne_top (ENNReal.mul_ne_top hμs ENNReal.ofReal_ne_top),\n    of_real_integral_norm_eq_lintegral_nnnorm]\n  swap\n  · rw [← mem_ℒp_one_iff_integrable]\n    exact Lp.mem_ℒp _\n  have h_eq :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (condexp_ind_L1_fin hm hs hμs x a)) μ =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (condexp_ind_smul hm hs hμs x a)) μ :=\n    by\n    refine' lintegral_congr_ae _\n    refine' (condexp_ind_L1_fin_ae_eq_condexp_ind_smul hm hs hμs x).mono fun z hz => _\n    dsimp only\n    rw [hz]\n  rw [h_eq, ofReal_norm_eq_coe_nnnorm]\n  exact lintegral_nnnorm_condexp_ind_smul_le hm hs hμs x\n#align norm_condexp_ind_L1_fin_le norm_condexp_ind_L1_fin_le\n\n",
 "norm_condexp_L2_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_condexp_L2_le_one (hm : m ≤ m0) : «expr‖ ‖» (@condexp_L2 α E 𝕜 _ _ _ _ _ _ μ hm) ≤ 1 :=\n  haveI : Fact (m ≤ m0) := ⟨hm⟩\n  orthogonal_projection_norm_le _\n#align norm_condexp_L2_le_one norm_condexp_L2_le_one\n\n",
 "norm_condexp_L2_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_condexp_L2_le (hm : m ≤ m0) (f : measure_theory.L2 α μ E) : «expr‖ ‖» (condexp_L2 𝕜 hm f) ≤ «expr‖ ‖» f :=\n  ((@condexp_L2 _ E 𝕜 _ _ _ _ _ _ μ hm).le_op_norm f).trans\n    (mul_le_of_le_one_left (norm_nonneg _) (norm_condexp_L2_le_one hm))\n#align norm_condexp_L2_le norm_condexp_L2_le\n\n",
 "norm_condexp_L2_coe_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_condexp_L2_coe_le (hm : m ≤ m0) (f : measure_theory.L2 α μ E) :\n    «expr‖ ‖» (condexp_L2 𝕜 hm f : measure_theory.L2 α μ E) ≤ «expr‖ ‖» f :=\n  by\n  rw [Lp.norm_def, Lp.norm_def, ← Lp_meas_coe]\n  refine' (ENNReal.toReal_le_toReal _ (Lp.snorm_ne_top _)).mpr (snorm_condexp_L2_le hm f)\n  exact Lp.snorm_ne_top _\n#align norm_condexp_L2_coe_le norm_condexp_L2_coe_le\n\n",
 "neg":
 "theorem neg [AddGroup β] [TopologicalAddGroup β] {f : α → β} (hfm : ae_strongly_measurable' m f μ) :\n    ae_strongly_measurable' m (-f) μ := by\n  rcases hfm with ⟨f', hf'_meas, hf_ae⟩\n  refine' ⟨-f', hf'_meas.neg, hf_ae.mono fun x hx => _⟩\n  simp_rw [Pi.neg_apply]\n  rw [hx]\n#align neg neg\n\n",
 "mem_ℒp_trim_of_mem_Lp_meas_subgroup":
 "/-- If `f` belongs to `Lp_meas_subgroup F m p μ`, then the measurable function it is almost\neverywhere equal to (given by `ae_measurable.mk`) belongs to `ℒp` for the measure `μ.trim hm`. -/\ntheorem mem_ℒp_trim_of_mem_Lp_meas_subgroup (hm : m ≤ m0) (f : Lp F p μ) (hf_meas : f ∈ Lp_meas_subgroup F m p μ) :\n    mem_ℒp (mem_Lp_meas_subgroup_iff_ae_strongly_measurable'.mp hf_meas).some p (μ.trim hm) :=\n  by\n  have hf : ae_strongly_measurable' m f μ := mem_Lp_meas_subgroup_iff_ae_strongly_measurable'.mp hf_meas\n  let g := hf.some\n  obtain ⟨hg, hfg⟩ := hf.some_spec\n  change mem_ℒp g p (μ.trim hm)\n  refine' ⟨hg.ae_strongly_measurable, _⟩\n  have h_snorm_fg : snorm g p (μ.trim hm) = snorm f p μ :=\n    by\n    rw [snorm_trim hm hg]\n    exact snorm_congr_ae hfg.symm\n  rw [h_snorm_fg]\n  exact Lp.snorm_lt_top f\n#align mem_ℒp_trim_of_mem_Lp_meas_subgroup mem_ℒp_trim_of_mem_Lp_meas_subgroup\n\n",
 "mem_Lp_meas_subgroup_to_Lp_of_trim":
 "/-- If `f` belongs to `Lp` for the measure `μ.trim hm`, then it belongs to the subgroup\n`Lp_meas_subgroup F m p μ`. -/\ntheorem mem_Lp_meas_subgroup_to_Lp_of_trim (hm : m ≤ m0) (f : Lp F p (μ.trim hm)) :\n    (mem_ℒp_of_mem_ℒp_trim hm (Lp.mem_ℒp f)).to_Lp f ∈ Lp_meas_subgroup F m p μ :=\n  by\n  let hf_mem_ℒp := mem_ℒp_of_mem_ℒp_trim hm (Lp.mem_ℒp f)\n  rw [mem_Lp_meas_subgroup_iff_ae_strongly_measurable']\n  refine' ae_strongly_measurable'.congr _ (mem_ℒp.coe_fn_to_Lp hf_mem_ℒp).symm\n  refine' ae_strongly_measurable'_of_ae_strongly_measurable'_trim hm _\n  exact Lp.ae_strongly_measurable f\n#align mem_Lp_meas_subgroup_to_Lp_of_trim mem_Lp_meas_subgroup_to_Lp_of_trim\n\n",
 "mem_Lp_meas_subgroup_iff_ae_strongly_measurable'":
 "-- 𝕜 for ℝ or ℂ\n-- β for a generic topological space\n-- E for an inner product space\n-- E' for an inner product space on which we compute integrals\n-- F for a Lp submodule\n-- F' for integrals on a Lp submodule\n-- G for a Lp add_subgroup\n-- G' for integrals on a Lp add_subgroup\n-- H for a normed group (hypotheses of mem_ℒp)\ntheorem mem_Lp_meas_subgroup_iff_ae_strongly_measurable' {m m0 : MeasurableSpace α} {μ : Measure α} {f : Lp F p μ} :\n    f ∈ Lp_meas_subgroup F m p μ ↔ ae_strongly_measurable' m f μ := by\n  rw [← AddSubgroup.mem_carrier, Lp_meas_subgroup, Set.mem_setOf_eq]\n#align mem_Lp_meas_subgroup_iff_ae_strongly_measurable' mem_Lp_meas_subgroup_iff_ae_strongly_measurable'\n\n",
 "mem_Lp_meas_self":
 "theorem mem_Lp_meas_self {m0 : MeasurableSpace α} (μ : Measure α) (f : Lp F p μ) : f ∈ Lp_meas F 𝕜 m0 p μ :=\n  mem_Lp_meas_iff_ae_strongly_measurable'.mpr (Lp.ae_strongly_measurable f)\n#align mem_Lp_meas_self mem_Lp_meas_self\n\n",
 "mem_Lp_meas_indicator_const_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem mem_Lp_meas_indicator_const_Lp {m m0 : MeasurableSpace α} (hm : m ≤ m0) {μ : Measure α} {s : Set α}\n    (hs : (measurable_set_of m) s) (hμs : μ s ≠ ennreal.top) {c : F} :\n    indicator_const_Lp p (hm s hs) hμs c ∈ Lp_meas F 𝕜 m p μ :=\n  ⟨s.indicator fun x : α => c, (@strongly_measurable_const _ _ m _ _).indicator hs, indicator_const_Lp_coe_fn⟩\n#align mem_Lp_meas_indicator_const_Lp mem_Lp_meas_indicator_const_Lp\n\n",
 "mem_Lp_meas_iff_ae_strongly_measurable'":
 "theorem mem_Lp_meas_iff_ae_strongly_measurable' {m m0 : MeasurableSpace α} {μ : Measure α} {f : Lp F p μ} :\n    f ∈ Lp_meas F 𝕜 m p μ ↔ ae_strongly_measurable' m f μ := by\n  rw [← SetLike.mem_coe, ← Submodule.mem_carrier, Lp_meas, Set.mem_setOf_eq]\n#align mem_Lp_meas_iff_ae_strongly_measurable' mem_Lp_meas_iff_ae_strongly_measurable'\n\n",
 "lintegral_nnnorm_le_of_forall_fin_meas_integral_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/-- Let `m` be a sub-σ-algebra of `m0`, `f` a `m0`-measurable function and `g` a `m`-measurable\nfunction, such that their integrals coincide on `m`-measurable sets with finite measure.\nThen `∫⁻ x in s, ‖g x‖₊ ∂μ ≤ ∫⁻ x in s, ‖f x‖₊ ∂μ` on all `m`-measurable sets with finite\nmeasure. -/\ntheorem lintegral_nnnorm_le_of_forall_fin_meas_integral_eq (hm : m ≤ m0) {f g : α → exprℝ} (hf : strongly_measurable f)\n    (hfi : integrable_on f s μ) (hg : (strongly_measurable_of m) g) (hgi : integrable_on g s μ)\n    (hgf :\n      ∀ t,\n        (measurable_set_of m) t →\n          μ t < ennreal.top →\n            «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" t\n                (g x) μ =\n              «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\"\n                t (f x) μ)\n    (hs : (measurable_set_of m) s) (hμs : μ s ≠ ennreal.top) :\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" s\n        («expr‖ ‖₊» (g x)) μ ≤\n      «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" s\n        («expr‖ ‖₊» (f x)) μ :=\n  by\n  rw [← of_real_integral_norm_eq_lintegral_nnnorm hfi, ← of_real_integral_norm_eq_lintegral_nnnorm hgi,\n    ENNReal.ofReal_le_ofReal_iff]\n  · exact integral_norm_le_of_forall_fin_meas_integral_eq hm hf hfi hg hgi hgf hs hμs\n  · exact integral_nonneg fun x => norm_nonneg _\n#align lintegral_nnnorm_le_of_forall_fin_meas_integral_eq lintegral_nnnorm_le_of_forall_fin_meas_integral_eq\n\n",
 "lintegral_nnnorm_condexp_ind_smul_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem lintegral_nnnorm_condexp_ind_smul_le (hm : m ≤ m0) (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : G)\n    [SigmaFinite (μ.trim hm)] :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (condexp_ind_smul hm hs hμs x a)) μ ≤\n      μ s * «expr‖ ‖₊» x :=\n  by\n  refine' lintegral_le_of_forall_fin_meas_le' hm (μ s * «expr‖ ‖₊» x) _ fun t ht hμt => _\n  · exact (Lp.ae_strongly_measurable _).ennnorm\n  refine' (set_lintegral_nnnorm_condexp_ind_smul_le hm hs hμs x ht hμt).trans _\n  exact mul_le_mul_right' (measure_mono (Set.inter_subset_left _ _)) _\n#align lintegral_nnnorm_condexp_ind_smul_le lintegral_nnnorm_condexp_ind_smul_le\n\n",
 "lintegral_nnnorm_condexp_L2_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem lintegral_nnnorm_condexp_L2_le (hs : (measurable_set_of m) s) (hμs : μ s ≠ ennreal.top) (f : Lp (exprℝ) 2 μ) :\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" s\n        («expr‖ ‖₊» (condexp_L2 (exprℝ) hm f x)) μ ≤\n      «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" s\n        («expr‖ ‖₊» (f x)) μ :=\n  by\n  let h_meas := Lp_meas.ae_strongly_measurable' (condexp_L2 (exprℝ) hm f)\n  let g := h_meas.some\n  have hg_meas : (strongly_measurable_of m) g := h_meas.some_spec.1\n  have hg_eq : «expr =ᵐ[ ] » g μ (condexp_L2 (exprℝ) hm f) := h_meas.some_spec.2.symm\n  have hg_eq_restrict : «expr =ᵐ[ ] » g (μ.restrict s) (condexp_L2 (exprℝ) hm f) := ae_restrict_of_ae hg_eq\n  have hg_nnnorm_eq :\n    «expr =ᵐ[ ] » (fun x => («expr‖ ‖₊» (g x) : ennreal)) (μ.restrict s) fun x =>\n      («expr‖ ‖₊» (condexp_L2 (exprℝ) hm f x) : ennreal) :=\n    by\n    refine' hg_eq_restrict.mono fun x hx => _\n    dsimp only\n    rw [hx]\n  rw [lintegral_congr_ae hg_nnnorm_eq.symm]\n  refine' lintegral_nnnorm_le_of_forall_fin_meas_integral_eq hm (Lp.strongly_measurable f) _ _ _ _ hs hμs\n  · exact integrable_on_Lp_of_measure_ne_top f fact_one_le_two_ennreal.elim hμs\n  · exact hg_meas\n  · rw [integrable_on, integrable_congr hg_eq_restrict]\n    exact integrable_on_condexp_L2_of_measure_ne_top hm hμs f\n  · intro t ht hμt\n    rw [← integral_condexp_L2_eq_of_fin_meas_real f ht hμt.ne]\n    exact set_integral_congr_ae (hm t ht) (hg_eq.mono fun x hx _ => hx)\n#align lintegral_nnnorm_condexp_L2_le lintegral_nnnorm_condexp_L2_le\n\n",
 "lintegral_nnnorm_condexp_L2_indicator_le_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem lintegral_nnnorm_condexp_L2_indicator_le_real (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top)\n    (ht : (measurable_set_of m) t) (hμt : μ t ≠ ennreal.top) :\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n        («expr‖ ‖₊» (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)) a)) μ ≤\n      μ (s ∩ t) :=\n  by\n  refine' (lintegral_nnnorm_condexp_L2_le ht hμt _).trans (le_of_eq _)\n  have h_eq :\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n        («expr‖ ‖₊» ((indicator_const_Lp 2 hs hμs (1 : exprℝ)) x)) μ =\n      «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" t\n        (s.indicator (fun x => (1 : ennreal)) x) μ :=\n    by\n    refine' lintegral_congr_ae (ae_restrict_of_ae _)\n    refine' (@indicator_const_Lp_coe_fn _ _ _ 2 _ _ _ hs hμs (1 : exprℝ)).mono fun x hx => _\n    rw [hx]\n    classical\n      simp_rw [Set.indicator_apply]\n      split_ifs <;> simp\n  rw [h_eq, lintegral_indicator _ hs, lintegral_const, measure.restrict_restrict hs]\n  simp only [one_mul, Set.univ_inter, MeasurableSet.univ, measure.restrict_apply]\n#align lintegral_nnnorm_condexp_L2_indicator_le_real lintegral_nnnorm_condexp_L2_indicator_le_real\n\n",
 "lintegral_nnnorm_condexp_L2_indicator_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem lintegral_nnnorm_condexp_L2_indicator_le (hm : m ≤ m0) (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : E')\n    [SigmaFinite (μ.trim hm)] :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (condexp_L2 𝕜 hm (indicator_const_Lp 2 hs hμs x) a)) μ ≤\n      μ s * «expr‖ ‖₊» x :=\n  by\n  refine' lintegral_le_of_forall_fin_meas_le' hm (μ s * «expr‖ ‖₊» x) _ fun t ht hμt => _\n  · rw [Lp_meas_coe]\n    exact (Lp.ae_strongly_measurable _).ennnorm\n  refine' (set_lintegral_nnnorm_condexp_L2_indicator_le hm hs hμs x ht hμt).trans _\n  exact mul_le_mul_right' (measure_mono (Set.inter_subset_left _ _)) _\n#align lintegral_nnnorm_condexp_L2_indicator_le lintegral_nnnorm_condexp_L2_indicator_le\n\n",
 "isometry_Lp_meas_subgroup_to_Lp_trim":
 "theorem isometry_Lp_meas_subgroup_to_Lp_trim [hp : Fact (1 ≤ p)] (hm : m ≤ m0) :\n    Isometry (Lp_meas_subgroup_to_Lp_trim F p μ hm) :=\n  Isometry.of_dist_eq fun f g => by\n    rw [dist_eq_norm, ← Lp_meas_subgroup_to_Lp_trim_sub, Lp_meas_subgroup_to_Lp_trim_norm_map, dist_eq_norm]\n#align isometry_Lp_meas_subgroup_to_Lp_trim isometry_Lp_meas_subgroup_to_Lp_trim\n\n",
 "is_complete_ae_strongly_measurable'":
 "theorem is_complete_ae_strongly_measurable' [hp : Fact (1 ≤ p)] [CompleteSpace F] (hm : m ≤ m0) :\n    IsComplete { f : Lp F p μ | ae_strongly_measurable' m f μ } :=\n  by\n  rw [← completeSpace_coe_iff_isComplete]\n  haveI : Fact (m ≤ m0) := ⟨hm⟩\n  change CompleteSpace (Lp_meas_subgroup F m p μ)\n  infer_instance\n#align is_complete_ae_strongly_measurable' is_complete_ae_strongly_measurable'\n\n",
 "is_closed_ae_strongly_measurable'":
 "theorem is_closed_ae_strongly_measurable' [hp : Fact (1 ≤ p)] [CompleteSpace F] (hm : m ≤ m0) :\n    IsClosed { f : Lp F p μ | ae_strongly_measurable' m f μ } :=\n  IsComplete.isClosed (is_complete_ae_strongly_measurable' hm)\n#align is_closed_ae_strongly_measurable' is_closed_ae_strongly_measurable'\n\n",
 "integral_norm_le_of_forall_fin_meas_integral_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Let `m` be a sub-σ-algebra of `m0`, `f` a `m0`-measurable function and `g` a `m`-measurable\nfunction, such that their integrals coincide on `m`-measurable sets with finite measure.\nThen `∫ x in s, ‖g x‖ ∂μ ≤ ∫ x in s, ‖f x‖ ∂μ` on all `m`-measurable sets with finite measure. -/\ntheorem integral_norm_le_of_forall_fin_meas_integral_eq (hm : m ≤ m0) {f g : α → exprℝ} (hf : strongly_measurable f)\n    (hfi : integrable_on f s μ) (hg : (strongly_measurable_of m) g) (hgi : integrable_on g s μ)\n    (hgf :\n      ∀ t,\n        (measurable_set_of m) t →\n          μ t < ennreal.top →\n            «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" t\n                (g x) μ =\n              «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\"\n                t (f x) μ)\n    (hs : (measurable_set_of m) s) (hμs : μ s ≠ ennreal.top) :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        («expr‖ ‖» (g x)) μ ≤\n      «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        («expr‖ ‖» (f x)) μ :=\n  by\n  rw [integral_norm_eq_pos_sub_neg hgi, integral_norm_eq_pos_sub_neg hfi]\n  have h_meas_nonneg_g : (measurable_set_of m) { x | 0 ≤ g x } :=\n    (@strongly_measurable_const _ _ m _ _).measurable_set_le hg\n  have h_meas_nonneg_f : MeasurableSet { x | 0 ≤ f x } := strongly_measurable_const.measurable_set_le hf\n  have h_meas_nonpos_g : (measurable_set_of m) { x | g x ≤ 0 } :=\n    hg.measurable_set_le (@strongly_measurable_const _ _ m _ _)\n  have h_meas_nonpos_f : MeasurableSet { x | f x ≤ 0 } := hf.measurable_set_le strongly_measurable_const\n  refine' sub_le_sub _ _\n  · rw [measure.restrict_restrict (hm _ h_meas_nonneg_g), measure.restrict_restrict h_meas_nonneg_f,\n      hgf _ (@MeasurableSet.inter α m _ _ h_meas_nonneg_g hs)\n        ((measure_mono (Set.inter_subset_right _ _)).trans_lt (lt_top_iff_ne_top.mpr hμs)),\n      ← measure.restrict_restrict (hm _ h_meas_nonneg_g), ← measure.restrict_restrict h_meas_nonneg_f]\n    exact set_integral_le_nonneg (hm _ h_meas_nonneg_g) hf hfi\n  · rw [measure.restrict_restrict (hm _ h_meas_nonpos_g), measure.restrict_restrict h_meas_nonpos_f,\n      hgf _ (@MeasurableSet.inter α m _ _ h_meas_nonpos_g hs)\n        ((measure_mono (Set.inter_subset_right _ _)).trans_lt (lt_top_iff_ne_top.mpr hμs)),\n      ← measure.restrict_restrict (hm _ h_meas_nonpos_g), ← measure.restrict_restrict h_meas_nonpos_f]\n    exact set_integral_nonpos_le (hm _ h_meas_nonpos_g) hf hfi\n#align integral_norm_le_of_forall_fin_meas_integral_eq integral_norm_le_of_forall_fin_meas_integral_eq\n\n",
 "integral_condexp_L2_eq_of_fin_meas_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\ntheorem integral_condexp_L2_eq_of_fin_meas_real (f : Lp 𝕜 2 μ) (hs : (measurable_set_of m) s)\n    (hμs : μ s ≠ ennreal.top) :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        (condexp_L2 𝕜 hm f x) μ =\n      «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s (f x)\n        μ :=\n  by\n  rw [← L2.inner_indicator_const_Lp_one (hm s hs) hμs]\n  have h_eq_inner :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        (condexp_L2 𝕜 hm f x) μ =\n      inner (indicator_const_Lp 2 (hm s hs) hμs (1 : 𝕜)) (condexp_L2 𝕜 hm f) :=\n    by\n    rw [L2.inner_indicator_const_Lp_one (hm s hs) hμs]\n    congr\n  rw [h_eq_inner, ← inner_condexp_L2_left_eq_right, condexp_L2_indicator_of_measurable hm hs hμs]\n#align integral_condexp_L2_eq_of_fin_meas_real integral_condexp_L2_eq_of_fin_meas_real\n\n",
 "integral_condexp_L2_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/-- `condexp_L2` verifies the equality of integrals defining the conditional expectation. -/\ntheorem integral_condexp_L2_eq (hm : m ≤ m0) (f : Lp E' 2 μ) (hs : (measurable_set_of m) s) (hμs : μ s ≠ ennreal.top) :\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n        (condexp_L2 𝕜 hm f x) μ =\n      «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s (f x)\n        μ :=\n  by\n  rw [← sub_eq_zero, Lp_meas_coe, ←\n    integral_sub' (integrable_on_Lp_of_measure_ne_top _ fact_one_le_two_ennreal.elim hμs)\n      (integrable_on_Lp_of_measure_ne_top _ fact_one_le_two_ennreal.elim hμs)]\n  refine' integral_eq_zero_of_forall_integral_inner_eq_zero 𝕜 _ _ _\n  · rw [integrable_congr (ae_restrict_of_ae (Lp.coe_fn_sub (↑(condexp_L2 𝕜 hm f)) f).symm)]\n    exact integrable_on_Lp_of_measure_ne_top _ fact_one_le_two_ennreal.elim hμs\n  intro c\n  simp_rw [Pi.sub_apply, inner_sub_right]\n  rw [integral_sub ((integrable_on_Lp_of_measure_ne_top _ fact_one_le_two_ennreal.elim hμs).const_inner c)\n      ((integrable_on_Lp_of_measure_ne_top _ fact_one_le_two_ennreal.elim hμs).const_inner c)]\n  have h_ae_eq_f := mem_ℒp.coe_fn_to_Lp ((Lp.mem_ℒp f).const_inner c)\n  rw [← Lp_meas_coe, sub_eq_zero, ←\n    set_integral_congr_ae (hm s hs) ((condexp_L2_const_inner hm f c).mono fun x hx _ => hx), ←\n    set_integral_congr_ae (hm s hs) (h_ae_eq_f.mono fun x hx _ => hx)]\n  exact integral_condexp_L2_eq_of_fin_meas_real _ hs hμs\n#align integral_condexp_L2_eq integral_condexp_L2_eq\n\n",
 "integral_condexp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\ntheorem integral_condexp (hm : m ≤ m0) [hμm : SigmaFinite (μ.trim hm)] (hf : integrable f μ) :\n    «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\"\n        ((measure_theory.condexp μ f m) x) μ =\n      «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (f x) μ :=\n  by\n  suffices\n    «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" Set.univ\n        ((measure_theory.condexp μ f m) x) μ =\n      «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" Set.univ\n        (f x) μ\n    by\n    simp_rw [integral_univ] at this\n    exact this\n  exact set_integral_condexp hm hf (@MeasurableSet.univ _ m)\n#align integral_condexp integral_condexp\n\n",
 "integrable_on_condexp_L2_of_measure_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\ntheorem integrable_on_condexp_L2_of_measure_ne_top (hm : m ≤ m0) (hμs : μ s ≠ ennreal.top)\n    (f : measure_theory.L2 α μ E) : integrable_on (condexp_L2 𝕜 hm f) s μ :=\n  integrable_on_Lp_of_measure_ne_top (condexp_L2 𝕜 hm f : measure_theory.L2 α μ E) fact_one_le_two_ennreal.elim hμs\n#align integrable_on_condexp_L2_of_measure_ne_top integrable_on_condexp_L2_of_measure_ne_top\n\n",
 "integrable_condexp_ind_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/-- If the measure `μ.trim hm` is sigma-finite, then the conditional expectation of a measurable set\nwith finite measure is integrable. -/\ntheorem integrable_condexp_ind_smul (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] (hs : MeasurableSet s)\n    (hμs : μ s ≠ ennreal.top) (x : G) : integrable (condexp_ind_smul hm hs hμs x) μ :=\n  by\n  refine' integrable_of_forall_fin_meas_le' hm (μ s * «expr‖ ‖₊» x) (ENNReal.mul_lt_top hμs ENNReal.coe_ne_top) _ _\n  · exact Lp.ae_strongly_measurable _\n  · refine' fun t ht hμt => (set_lintegral_nnnorm_condexp_ind_smul_le hm hs hμs x ht hμt).trans _\n    exact mul_le_mul_right' (measure_mono (Set.inter_subset_left _ _)) _\n#align integrable_condexp_ind_smul integrable_condexp_ind_smul\n\n",
 "integrable_condexp_L2_of_is_finite_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\ntheorem integrable_condexp_L2_of_is_finite_measure (hm : m ≤ m0) [FiniteMeasure μ] {f : measure_theory.L2 α μ E} :\n    integrable (condexp_L2 𝕜 hm f) μ :=\n  integrable_on_univ.mp <| integrable_on_condexp_L2_of_measure_ne_top hm (measure_ne_top _ _) f\n#align integrable_condexp_L2_of_is_finite_measure integrable_condexp_L2_of_is_finite_measure\n\n",
 "integrable_condexp_L2_indicator":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/-- If the measure `μ.trim hm` is sigma-finite, then the conditional expectation of a measurable set\nwith finite measure is integrable. -/\ntheorem integrable_condexp_L2_indicator (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] (hs : MeasurableSet s)\n    (hμs : μ s ≠ ennreal.top) (x : E') : integrable (condexp_L2 𝕜 hm (indicator_const_Lp 2 hs hμs x)) μ :=\n  by\n  refine' integrable_of_forall_fin_meas_le' hm (μ s * «expr‖ ‖₊» x) (ENNReal.mul_lt_top hμs ENNReal.coe_ne_top) _ _\n  · rw [Lp_meas_coe]\n    exact Lp.ae_strongly_measurable _\n  · refine' fun t ht hμt => (set_lintegral_nnnorm_condexp_L2_indicator_le hm hs hμs x ht hμt).trans _\n    exact mul_le_mul_right' (measure_mono (Set.inter_subset_left _ _)) _\n#align integrable_condexp_L2_indicator integrable_condexp_L2_indicator\n\n",
 "integrable_condexp_L1":
 "theorem integrable_condexp_L1 (f : α → F') : integrable (condexp_L1 hm μ f) μ :=\n  L1.integrable_coe_fn _\n#align integrable_condexp_L1 integrable_condexp_L1\n\n",
 "integrable_condexp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem integrable_condexp : integrable (measure_theory.condexp μ f m) μ :=\n  by\n  by_cases hm : m ≤ m0\n  swap;\n  · rw [condexp_of_not_le hm]\n    exact integrable_zero _ _ _\n  by_cases hμm : sigma_finite (μ.trim hm)\n  swap;\n  · rw [condexp_of_not_sigma_finite hm hμm]\n    exact integrable_zero _ _ _\n  haveI : sigma_finite (μ.trim hm) := hμm\n  exact (integrable_condexp_L1 f).congr (condexp_ae_eq_condexp_L1 hm f).symm\n#align integrable_condexp integrable_condexp\n\n",
 "inner_condexp_L2_left_eq_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫₂» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫₂» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\ntheorem inner_condexp_L2_left_eq_right (hm : m ≤ m0) {f g : measure_theory.L2 α μ E} :\n    «expr⟪ , ⟫₂» (condexp_L2 𝕜 hm f : measure_theory.L2 α μ E) g =\n      «expr⟪ , ⟫₂» f (condexp_L2 𝕜 hm g : measure_theory.L2 α μ E) :=\n  haveI : Fact (m ≤ m0) := ⟨hm⟩\n  inner_orthogonal_projection_left_eq_right _ f g\n#align inner_condexp_L2_left_eq_right inner_condexp_L2_left_eq_right\n\n",
 "inner_condexp_L2_eq_inner_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫₂» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫₂» -/\ntheorem inner_condexp_L2_eq_inner_fun (hm : m ≤ m0) (f g : measure_theory.L2 α μ E)\n    (hg : ae_strongly_measurable' m g μ) :\n    «expr⟪ , ⟫₂» (condexp_L2 𝕜 hm f : measure_theory.L2 α μ E) g = «expr⟪ , ⟫₂» f g :=\n  by\n  symm\n  rw [← sub_eq_zero, ← inner_sub_left, condexp_L2]\n  simp only [mem_Lp_meas_iff_ae_strongly_measurable'.mpr hg, orthogonal_projection_inner_eq_zero]\n#align inner_condexp_L2_eq_inner_fun inner_condexp_L2_eq_inner_fun\n\n",
 "induction_strongly_measurable_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Auxiliary lemma for `Lp.induction_strongly_measurable`. -/\n@[elab_as_elim]\ntheorem Lp.induction_strongly_measurable_aux (hm : m ≤ m0) (hp_ne_top : p ≠ ennreal.top) (P : Lp F p μ → Prop)\n    (h_ind :\n      ∀ (c : F) {s : Set α} (hs : (measurable_set_of m) s) (hμs : μ s < ennreal.top),\n        P (Lp.simple_func.indicator_const p (hm s hs) hμs.ne c))\n    (h_add :\n      ∀ ⦃f g⦄,\n        ∀ hf : mem_ℒp f p μ,\n          ∀ hg : mem_ℒp g p μ,\n            ∀ hfm : ae_strongly_measurable' m f μ,\n              ∀ hgm : ae_strongly_measurable' m g μ,\n                Disjoint (Function.support f) (Function.support g) →\n                  P (hf.to_Lp f) → P (hg.to_Lp g) → P (hf.to_Lp f + hg.to_Lp g))\n    (h_closed : IsClosed { f : Lp_meas F (exprℝ) m p μ | P f }) : ∀ f : Lp F p μ, ae_strongly_measurable' m f μ → P f :=\n  by\n  intro f hf\n  let f' := (⟨f, hf⟩ : Lp_meas F (exprℝ) m p μ)\n  let g := Lp_meas_to_Lp_trim_lie F (exprℝ) p μ hm f'\n  have hfg : f' = (Lp_meas_to_Lp_trim_lie F (exprℝ) p μ hm).symm g := by\n    simp only [LinearIsometryEquiv.symm_apply_apply]\n  change P ↑f'\n  rw [hfg]\n  refine'\n    @Lp.induction α F m _ p (μ.trim hm) _ hp_ne_top (fun g => P ((Lp_meas_to_Lp_trim_lie F (exprℝ) p μ hm).symm g)) _ _\n      _ g\n  · intro b t ht hμt\n    rw [Lp.simple_func.coe_indicator_const, Lp_meas_to_Lp_trim_lie_symm_indicator ht hμt.ne b]\n    have hμt' : μ t < ennreal.top := (le_trim hm).trans_lt hμt\n    specialize h_ind b ht hμt'\n    rwa [Lp.simple_func.coe_indicator_const] at h_ind\n  · intro f g hf hg h_disj hfP hgP\n    rw [LinearIsometryEquiv.map_add]\n    push_cast\n    have h_eq :\n      ∀ (f : α → F) (hf : mem_ℒp f p (μ.trim hm)),\n        ((Lp_meas_to_Lp_trim_lie F (exprℝ) p μ hm).symm (mem_ℒp.to_Lp f hf) : Lp F p μ) =\n          (mem_ℒp_of_mem_ℒp_trim hm hf).to_Lp f :=\n      Lp_meas_to_Lp_trim_lie_symm_to_Lp hm\n    rw [h_eq f hf] at hfP⊢\n    rw [h_eq g hg] at hgP⊢\n    exact\n      h_add (mem_ℒp_of_mem_ℒp_trim hm hf) (mem_ℒp_of_mem_ℒp_trim hm hg)\n        (ae_strongly_measurable'_of_ae_strongly_measurable'_trim hm hf.ae_strongly_measurable)\n        (ae_strongly_measurable'_of_ae_strongly_measurable'_trim hm hg.ae_strongly_measurable) h_disj hfP hgP\n  · change IsClosed («expr ⁻¹' » (Lp_meas_to_Lp_trim_lie F (exprℝ) p μ hm).symm { g : Lp_meas F (exprℝ) m p μ | P ↑g })\n    exact IsClosed.preimage (LinearIsometryEquiv.continuous _) h_closed\n#align Lp.induction_strongly_measurable_aux Lp.induction_strongly_measurable_aux\n\n",
 "induction_strongly_measurable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- To prove something for an arbitrary `mem_ℒp` function a.e. strongly measurable with respect\nto a sub-σ-algebra `m` in a normed space, it suffices to show that\n* the property holds for (multiples of) characteristic functions which are measurable w.r.t. `m`;\n* is closed under addition;\n* the set of functions in the `Lᵖ` space strongly measurable w.r.t. `m` for which the property\n  holds is closed.\n* the property is closed under the almost-everywhere equal relation.\n-/\n@[elab_as_elim]\ntheorem mem_ℒp.induction_strongly_measurable (hm : m ≤ m0) (hp_ne_top : p ≠ ennreal.top) (P : (α → F) → Prop)\n    (h_ind : ∀ (c : F) ⦃s⦄, (measurable_set_of m) s → μ s < ennreal.top → P (s.indicator fun _ => c))\n    (h_add :\n      ∀ ⦃f g : α → F⦄,\n        Disjoint (Function.support f) (Function.support g) →\n          mem_ℒp f p μ →\n            mem_ℒp g p μ → (strongly_measurable_of m) f → (strongly_measurable_of m) g → P f → P g → P (f + g))\n    (h_closed : IsClosed { f : Lp_meas F (exprℝ) m p μ | P f })\n    (h_ae : ∀ ⦃f g⦄, «expr =ᵐ[ ] » f μ g → mem_ℒp f p μ → P f → P g) :\n    ∀ ⦃f : α → F⦄ (hf : mem_ℒp f p μ) (hfm : ae_strongly_measurable' m f μ), P f :=\n  by\n  intro f hf hfm\n  let f_Lp := hf.to_Lp f\n  have hfm_Lp : ae_strongly_measurable' m f_Lp μ := hfm.congr hf.coe_fn_to_Lp.symm\n  refine' h_ae hf.coe_fn_to_Lp (Lp.mem_ℒp _) _\n  change P f_Lp\n  refine' Lp.induction_strongly_measurable hm hp_ne_top (fun f => P («expr⇑ » f)) _ _ h_closed f_Lp hfm_Lp\n  · intro c s hs hμs\n    rw [Lp.simple_func.coe_indicator_const]\n    refine' h_ae indicator_const_Lp_coe_fn.symm _ (h_ind c hs hμs)\n    exact mem_ℒp_indicator_const p (hm s hs) c (or.inr hμs.ne)\n  · intro f g hf_mem hg_mem hfm hgm h_disj hfP hgP\n    have hfP' : P f := h_ae hf_mem.coe_fn_to_Lp (Lp.mem_ℒp _) hfP\n    have hgP' : P g := h_ae hg_mem.coe_fn_to_Lp (Lp.mem_ℒp _) hgP\n    specialize h_add h_disj hf_mem hg_mem hfm hgm hfP' hgP'\n    refine' h_ae _ (hf_mem.add hg_mem) h_add\n    exact (hf_mem.coe_fn_to_Lp.symm.add hg_mem.coe_fn_to_Lp.symm).trans (Lp.coe_fn_add _ _).symm\n#align mem_ℒp.induction_strongly_measurable mem_ℒp.induction_strongly_measurable\n\n",
 "dominated_fin_meas_additive_condexp_ind":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem dominated_fin_meas_additive_condexp_ind (hm : m ≤ m0) (μ : Measure α) [SigmaFinite (μ.trim hm)] :\n    dominated_fin_meas_additive μ (condexp_ind hm μ : Set α → «expr →L[ ] » G (exprℝ) (measure_theory.L1 α μ G)) 1 :=\n  ⟨fun s t => condexp_ind_disjoint_union, fun s _ _ => norm_condexp_ind_le.trans (one_mul _).symm.le⟩\n#align dominated_fin_meas_additive_condexp_ind dominated_fin_meas_additive_condexp_ind\n\n",
 "continuous_condexp_ind_L1":
 "theorem continuous_condexp_ind_L1 : Continuous fun x : G => condexp_ind_L1 hm μ s x :=\n  continuous_of_linear_of_bound condexp_ind_L1_add condexp_ind_L1_smul norm_condexp_ind_L1_le\n#align continuous_condexp_ind_L1 continuous_condexp_ind_L1\n\n",
 "continuous_comp":
 "theorem continuous_comp {γ} [TopologicalSpace γ] {f : α → β} {g : β → γ} (hg : Continuous g)\n    (hf : ae_strongly_measurable' m f μ) : ae_strongly_measurable' m (g ∘ f) μ :=\n  ⟨fun x => g (hf.mk _ x), @continuous.comp_strongly_measurable _ _ _ m _ _ _ _ hg hf.strongly_measurable_mk,\n    hf.ae_eq_mk.mono fun x hx => by rw [Function.comp_apply, hx]⟩\n#align continuous_comp continuous_comp\n\n",
 "const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem const_smul [SMul 𝕜 β] [ContinuousConstSMul 𝕜 β] (c : 𝕜) (hf : ae_strongly_measurable' m f μ) :\n    ae_strongly_measurable' m («expr • » c f) μ :=\n  by\n  rcases hf with ⟨f', h_f'_meas, hff'⟩\n  refine' ⟨«expr • » c f', h_f'_meas.const_smul c, _⟩\n  exact eventually_eq.fun_comp hff' fun x => «expr • » c x\n#align const_smul const_smul\n\n",
 "const_inner":
 "theorem const_inner {𝕜 β} [IsROrC 𝕜] [NormedAddCommGroup β] [inner_product_space 𝕜 β] {f : α → β}\n    (hfm : ae_strongly_measurable' m f μ) (c : β) : ae_strongly_measurable' m (fun x => (inner c (f x) : 𝕜)) μ :=\n  by\n  rcases hfm with ⟨f', hf'_meas, hf_ae⟩\n  refine'\n    ⟨fun x => (inner c (f' x) : 𝕜), (@strongly_measurable_const _ _ m _ _).inner hf'_meas, hf_ae.mono fun x hx => _⟩\n  dsimp only\n  rw [hx]\n#align const_inner const_inner\n\n",
 "congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n#print congr /-\n/-\nCopyright (c) 2021 Rémy Degenne. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Rémy Degenne\n-/\ntheorem congr (hf : ae_strongly_measurable' m f μ) (hfg : «expr =ᵐ[ ] » f μ g) : ae_strongly_measurable' m g μ :=\n  by\n  obtain ⟨f', hf'_meas, hff'⟩ := hf\n  exact ⟨f', hf'_meas, hfg.symm.trans hff'⟩\n#align congr congr\n-/\n\n",
 "condexp_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n@[simp]\ntheorem condexp_zero : measure_theory.condexp μ (0 : α → F') m = 0 :=\n  by\n  by_cases hm : m ≤ m0\n  swap; · rw [condexp_of_not_le hm]\n  by_cases hμm : sigma_finite (μ.trim hm)\n  swap; · rw [condexp_of_not_sigma_finite hm hμm]\n  haveI : sigma_finite (μ.trim hm) := hμm\n  exact condexp_of_strongly_measurable hm (@strongly_measurable_zero _ _ m _ _) (integrable_zero _ _ _)\n#align condexp_zero condexp_zero\n\n",
 "condexp_undef":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_undef (hf : ¬integrable f μ) : measure_theory.condexp μ f m = 0 :=\n  by\n  by_cases hm : m ≤ m0\n  swap; · rw [condexp_of_not_le hm]\n  by_cases hμm : sigma_finite (μ.trim hm)\n  swap; · rw [condexp_of_not_sigma_finite hm hμm]\n  haveI : sigma_finite (μ.trim hm) := hμm\n  rw [condexp_of_sigma_finite, if_neg hf]\n#align condexp_undef condexp_undef\n\n",
 "condexp_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_sub (hf : integrable f μ) (hg : integrable g μ) :\n    «expr =ᵐ[ ] » (measure_theory.condexp μ (f - g) m) μ\n      (measure_theory.condexp μ f m - measure_theory.condexp μ g m) :=\n  by\n  simp_rw [sub_eq_add_neg]\n  exact (condexp_add hf hg.neg).trans (eventually_eq.rfl.add (condexp_neg g))\n#align condexp_sub condexp_sub\n\n",
 "condexp_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_smul (c : 𝕜) (f : α → F') :\n    «expr =ᵐ[ ] » (measure_theory.condexp μ («expr • » c f) m) μ («expr • » c (measure_theory.condexp μ f m)) :=\n  by\n  by_cases hm : m ≤ m0\n  swap;\n  · simp_rw [condexp_of_not_le hm]\n    simp\n  by_cases hμm : sigma_finite (μ.trim hm)\n  swap;\n  · simp_rw [condexp_of_not_sigma_finite hm hμm]\n    simp\n  haveI : sigma_finite (μ.trim hm) := hμm\n  refine' (condexp_ae_eq_condexp_L1 hm _).trans _\n  rw [condexp_L1_smul c f]\n  refine' (@condexp_ae_eq_condexp_L1 _ _ _ _ _ m _ _ hm _ f).mp _\n  refine' (coe_fn_smul c (condexp_L1 hm μ f)).mono fun x hx1 hx2 => _\n  rw [hx1, Pi.smul_apply, Pi.smul_apply, hx2]\n#align condexp_smul condexp_smul\n\n",
 "condexp_of_strongly_measurable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_of_strongly_measurable (hm : m ≤ m0) [hμm : SigmaFinite (μ.trim hm)] {f : α → F'}\n    (hf : (strongly_measurable_of m) f) (hfi : integrable f μ) : measure_theory.condexp μ f m = f :=\n  by\n  rw [condexp_of_sigma_finite hm, if_pos hfi, if_pos hf]\n  infer_instance\n#align condexp_of_strongly_measurable condexp_of_strongly_measurable\n\n",
 "condexp_of_sigma_finite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\ntheorem condexp_of_sigma_finite (hm : m ≤ m0) [hμm : SigmaFinite (μ.trim hm)] :\n    measure_theory.condexp μ f m =\n      if integrable f μ then\n        if (strongly_measurable_of m) f then f else ae_strongly_measurable'_condexp_L1.mk (condexp_L1 hm μ f)\n      else 0 :=\n  by\n  rw [condexp, dif_pos hm]\n  simp only [hμm, ne.def, true_and_iff]\n  by_cases hf : integrable f μ\n  · rw [dif_pos hf, if_pos hf]\n  · rw [dif_neg hf, if_neg hf]\n#align condexp_of_sigma_finite condexp_of_sigma_finite\n\n",
 "condexp_of_not_sigma_finite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_of_not_sigma_finite (hm : m ≤ m0) (hμm_not : ¬SigmaFinite (μ.trim hm)) :\n    measure_theory.condexp μ f m = 0 := by\n  rw [condexp, dif_pos hm, dif_neg]\n  push_neg\n  exact fun h => absurd h hμm_not\n#align condexp_of_not_sigma_finite condexp_of_not_sigma_finite\n\n",
 "condexp_of_not_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n-- We define notation `μ[f|m]` for the conditional expectation of `f` with respect to `m`.\ntheorem condexp_of_not_le (hm_not : ¬m ≤ m0) : measure_theory.condexp μ f m = 0 := by rw [condexp, dif_neg hm_not]\n#align condexp_of_not_le condexp_of_not_le\n\n",
 "condexp_of_ae_strongly_measurable'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_of_ae_strongly_measurable' (hm : m ≤ m0) [hμm : SigmaFinite (μ.trim hm)] {f : α → F'}\n    (hf : ae_strongly_measurable' m f μ) (hfi : integrable f μ) : «expr =ᵐ[ ] » (measure_theory.condexp μ f m) μ f :=\n  by\n  refine' ((condexp_congr_ae hf.ae_eq_mk).trans _).trans hf.ae_eq_mk.symm\n  rw [condexp_of_strongly_measurable hm hf.strongly_measurable_mk ((integrable_congr hf.ae_eq_mk).mp hfi)]\n#align condexp_of_ae_strongly_measurable' condexp_of_ae_strongly_measurable'\n\n",
 "condexp_nonpos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_nonpos {E} [NormedLatticeAddCommGroup E] [CompleteSpace E] [NormedSpace (exprℝ) E]\n    [OrderedSMul (exprℝ) E] {f : α → E} (hf : «expr ≤ᵐ[ ] » f μ 0) : «expr ≤ᵐ[ ] » (measure_theory.condexp μ f m) μ 0 :=\n  by\n  by_cases hfint : integrable f μ\n  · rw [(condexp_zero.symm : (0 : α → E) = measure_theory.condexp μ 0 m)]\n    exact condexp_mono hfint (integrable_zero _ _ _) hf\n  · rw [condexp_undef hfint]\n#align condexp_nonpos condexp_nonpos\n\n",
 "condexp_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_nonneg {E} [NormedLatticeAddCommGroup E] [CompleteSpace E] [NormedSpace (exprℝ) E]\n    [OrderedSMul (exprℝ) E] {f : α → E} (hf : «expr ≤ᵐ[ ] » 0 μ f) : «expr ≤ᵐ[ ] » 0 μ (measure_theory.condexp μ f m) :=\n  by\n  by_cases hfint : integrable f μ\n  · rw [(condexp_zero.symm : (0 : α → E) = measure_theory.condexp μ 0 m)]\n    exact condexp_mono (integrable_zero _ _ _) hfint hf\n  · rw [condexp_undef hfint]\n#align condexp_nonneg condexp_nonneg\n\n",
 "condexp_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_neg (f : α → F') : «expr =ᵐ[ ] » (measure_theory.condexp μ (-f) m) μ (-measure_theory.condexp μ f m) :=\n  by\n  letI : Module (exprℝ) (α → F') := @Pi.module α (fun _ => F') (exprℝ) _ _ fun _ => inferInstance <;>\n    calc\n      measure_theory.condexp μ (-f) m = measure_theory.condexp μ («expr • » (-1 : exprℝ) f) m := by\n        rw [neg_one_smul (exprℝ) f]\n      «expr =ᵐ[ ] » _ μ («expr • » (-1 : exprℝ) (measure_theory.condexp μ f m)) := (condexp_smul (-1) f)\n      _ = -measure_theory.condexp μ f m := neg_one_smul (exprℝ) (measure_theory.condexp μ f m)\n      \n#align condexp_neg condexp_neg\n\n",
 "condexp_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_mono {E} [NormedLatticeAddCommGroup E] [CompleteSpace E] [NormedSpace (exprℝ) E] [OrderedSMul (exprℝ) E]\n    {f g : α → E} (hf : integrable f μ) (hg : integrable g μ) (hfg : «expr ≤ᵐ[ ] » f μ g) :\n    «expr ≤ᵐ[ ] » (measure_theory.condexp μ f m) μ (measure_theory.condexp μ g m) :=\n  by\n  by_cases hm : m ≤ m0\n  swap; · simp_rw [condexp_of_not_le hm]\n  by_cases hμm : sigma_finite (μ.trim hm)\n  swap; · simp_rw [condexp_of_not_sigma_finite hm hμm]\n  haveI : sigma_finite (μ.trim hm) := hμm\n  exact\n    (condexp_ae_eq_condexp_L1 hm _).trans_le ((condexp_L1_mono hf hg hfg).trans_eq (condexp_ae_eq_condexp_L1 hm _).symm)\n#align condexp_mono condexp_mono\n\n",
 "condexp_ind_smul_smul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem condexp_ind_smul_smul' [NormedSpace (exprℝ) F] [SMulCommClass (exprℝ) 𝕜 F] (hs : MeasurableSet s)\n    (hμs : μ s ≠ ennreal.top) (c : 𝕜) (x : F) :\n    condexp_ind_smul hm hs hμs («expr • » c x) = «expr • » c (condexp_ind_smul hm hs hμs x) := by\n  rw [condexp_ind_smul, condexp_ind_smul, to_span_singleton_smul',\n    (to_span_singleton (exprℝ) x).smul_comp_LpL_apply c\n      ↑(condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)))]\n#align condexp_ind_smul_smul' condexp_ind_smul_smul'\n\n",
 "condexp_ind_smul_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem condexp_ind_smul_smul (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (c : exprℝ) (x : G) :\n    condexp_ind_smul hm hs hμs («expr • » c x) = «expr • » c (condexp_ind_smul hm hs hμs x) :=\n  by\n  simp_rw [condexp_ind_smul]\n  rw [to_span_singleton_smul, smul_comp_LpL, smul_apply]\n#align condexp_ind_smul_smul condexp_ind_smul_smul\n\n",
 "condexp_ind_smul_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem condexp_ind_smul_nonneg {E} [NormedLatticeAddCommGroup E] [NormedSpace (exprℝ) E] [OrderedSMul (exprℝ) E]\n    [SigmaFinite (μ.trim hm)] (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : E) (hx : 0 ≤ x) :\n    «expr ≤ᵐ[ ] » 0 μ (condexp_ind_smul hm hs hμs x) :=\n  by\n  refine' eventually_le.trans_eq _ (condexp_ind_smul_ae_eq_smul hm hs hμs x).symm\n  filter_upwards [condexp_L2_indicator_nonneg hm hs hμs]with a ha\n  exact smul_nonneg ha hx\n#align condexp_ind_smul_nonneg condexp_ind_smul_nonneg\n\n",
 "condexp_ind_smul_empty":
 "theorem condexp_ind_smul_empty {x : G} :\n    condexp_ind_smul hm MeasurableSet.empty ((@measure_empty _ _ μ).le.trans_lt ENNReal.coe_lt_top).ne x = 0 :=\n  by\n  rw [condexp_ind_smul, indicator_const_empty]\n  simp only [coe_fn_coe_base, Submodule.coe_zero, ContinuousLinearMap.map_zero]\n#align condexp_ind_smul_empty condexp_ind_smul_empty\n\n",
 "condexp_ind_smul_ae_eq_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem condexp_ind_smul_ae_eq_smul (hm : m ≤ m0) (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : G) :\n    «expr =ᵐ[ ] » (condexp_ind_smul hm hs hμs x) μ fun a =>\n      «expr • » (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)) a) x :=\n  (toSpanSingleton (exprℝ) x).coe_fn_comp_LpL _\n#align condexp_ind_smul_ae_eq_smul condexp_ind_smul_ae_eq_smul\n\n",
 "condexp_ind_smul_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_smul_add (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x y : G) :\n    condexp_ind_smul hm hs hμs (x + y) = condexp_ind_smul hm hs hμs x + condexp_ind_smul hm hs hμs y :=\n  by\n  simp_rw [condexp_ind_smul]\n  rw [to_span_singleton_add, add_comp_LpL, add_apply]\n#align condexp_ind_smul_add condexp_ind_smul_add\n\n",
 "condexp_ind_smul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem condexp_ind_smul' [NormedSpace (exprℝ) F] [SMulCommClass (exprℝ) 𝕜 F] (c : 𝕜) (x : F) :\n    condexp_ind hm μ s («expr • » c x) = «expr • » c (condexp_ind hm μ s x) :=\n  condexp_ind_L1_smul' c x\n#align condexp_ind_smul' condexp_ind_smul'\n\n",
 "condexp_ind_of_measurable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_of_measurable (hs : (measurable_set_of m) s) (hμs : μ s ≠ ennreal.top) (c : G) :\n    condexp_ind hm μ s c = indicator_const_Lp 1 (hm s hs) hμs c :=\n  by\n  ext1\n  refine' eventually_eq.trans _ indicator_const_Lp_coe_fn.symm\n  refine' (condexp_ind_ae_eq_condexp_ind_smul hm (hm s hs) hμs c).trans _\n  refine' (condexp_ind_smul_ae_eq_smul hm (hm s hs) hμs c).trans _\n  rw [Lp_meas_coe, condexp_L2_indicator_of_measurable hm hs hμs (1 : exprℝ)]\n  refine' (@indicator_const_Lp_coe_fn α _ _ 2 μ _ s (hm s hs) hμs (1 : exprℝ)).mono fun x hx => _\n  dsimp only\n  rw [hx]\n  by_cases hx_mem : x ∈ s <;> simp [hx_mem]\n#align condexp_ind_of_measurable condexp_ind_of_measurable\n\n",
 "condexp_ind_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_nonneg {E} [NormedLatticeAddCommGroup E] [NormedSpace (exprℝ) E] [OrderedSMul (exprℝ) E]\n    (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : E) (hx : 0 ≤ x) : 0 ≤ condexp_ind hm μ s x :=\n  by\n  rw [← coe_fn_le]\n  refine' eventually_le.trans_eq _ (condexp_ind_ae_eq_condexp_ind_smul hm hs hμs x).symm\n  exact (coe_fn_zero E 1 μ).trans_le (condexp_ind_smul_nonneg hs hμs x hx)\n#align condexp_ind_nonneg condexp_ind_nonneg\n\n",
 "condexp_ind_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n@[simp]\ntheorem condexp_ind_empty : condexp_ind hm μ ∅ = (0 : «expr →L[ ] » G (exprℝ) (measure_theory.L1 α μ G)) :=\n  by\n  ext1\n  ext1\n  refine' (condexp_ind_ae_eq_condexp_ind_smul hm MeasurableSet.empty (by simp) x).trans _\n  rw [condexp_ind_smul_empty]\n  refine' (Lp.coe_fn_zero G 2 μ).trans _\n  refine' eventually_eq.trans _ (Lp.coe_fn_zero G 1 μ).symm\n  rfl\n#align condexp_ind_empty condexp_ind_empty\n\n",
 "condexp_ind_disjoint_union_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_disjoint_union_apply (hs : MeasurableSet s) (ht : MeasurableSet t) (hμs : μ s ≠ ennreal.top)\n    (hμt : μ t ≠ ennreal.top) (hst : s ∩ t = ∅) (x : G) :\n    condexp_ind hm μ (s ∪ t) x = condexp_ind hm μ s x + condexp_ind hm μ t x :=\n  condexp_ind_L1_disjoint_union hs ht hμs hμt hst x\n#align condexp_ind_disjoint_union_apply condexp_ind_disjoint_union_apply\n\n",
 "condexp_ind_disjoint_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem condexp_ind_disjoint_union (hs : MeasurableSet s) (ht : MeasurableSet t) (hμs : μ s ≠ ennreal.top)\n    (hμt : μ t ≠ ennreal.top) (hst : s ∩ t = ∅) :\n    (condexp_ind hm μ (s ∪ t) : «expr →L[ ] » G (exprℝ) (measure_theory.L1 α μ G)) =\n      condexp_ind hm μ s + condexp_ind hm μ t :=\n  by\n  ext1\n  push_cast\n  exact condexp_ind_disjoint_union_apply hs ht hμs hμt hst x\n#align condexp_ind_disjoint_union condexp_ind_disjoint_union\n\n",
 "condexp_ind_ae_eq_condexp_ind_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem condexp_ind_ae_eq_condexp_ind_smul (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] (hs : MeasurableSet s)\n    (hμs : μ s ≠ ennreal.top) (x : G) : «expr =ᵐ[ ] » (condexp_ind hm μ s x) μ (condexp_ind_smul hm hs hμs x) :=\n  by\n  refine' eventually_eq.trans _ (condexp_ind_L1_fin_ae_eq_condexp_ind_smul hm hs hμs x)\n  simp [condexp_ind, condexp_ind_L1, hs, hμs]\n#align condexp_ind_ae_eq_condexp_ind_smul condexp_ind_ae_eq_condexp_ind_smul\n\n",
 "condexp_ind_L1_smul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem condexp_ind_L1_smul' [NormedSpace (exprℝ) F] [SMulCommClass (exprℝ) 𝕜 F] (c : 𝕜) (x : F) :\n    condexp_ind_L1 hm μ s («expr • » c x) = «expr • » c (condexp_ind_L1 hm μ s x) :=\n  by\n  by_cases hs : MeasurableSet s\n  swap;\n  · simp_rw [condexp_ind_L1_of_not_measurable_set hs]\n    rw [smul_zero]\n  by_cases hμs : μ s = ennreal.top\n  · simp_rw [condexp_ind_L1_of_measure_eq_top hμs]\n    rw [smul_zero]\n  · simp_rw [condexp_ind_L1_of_measurable_set_of_measure_ne_top hs hμs]\n    exact condexp_ind_L1_fin_smul' hs hμs c x\n#align condexp_ind_L1_smul' condexp_ind_L1_smul'\n\n",
 "condexp_ind_L1_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem condexp_ind_L1_smul (c : exprℝ) (x : G) :\n    condexp_ind_L1 hm μ s («expr • » c x) = «expr • » c (condexp_ind_L1 hm μ s x) :=\n  by\n  by_cases hs : MeasurableSet s\n  swap;\n  · simp_rw [condexp_ind_L1_of_not_measurable_set hs]\n    rw [smul_zero]\n  by_cases hμs : μ s = ennreal.top\n  · simp_rw [condexp_ind_L1_of_measure_eq_top hμs]\n    rw [smul_zero]\n  · simp_rw [condexp_ind_L1_of_measurable_set_of_measure_ne_top hs hμs]\n    exact condexp_ind_L1_fin_smul hs hμs c x\n#align condexp_ind_L1_smul condexp_ind_L1_smul\n\n",
 "condexp_ind_L1_of_not_measurable_set":
 "theorem condexp_ind_L1_of_not_measurable_set (hs : ¬MeasurableSet s) (x : G) : condexp_ind_L1 hm μ s x = 0 := by\n  simp only [condexp_ind_L1, hs, dif_neg, not_false_iff, false_and_iff]\n#align condexp_ind_L1_of_not_measurable_set condexp_ind_L1_of_not_measurable_set\n\n",
 "condexp_ind_L1_of_measure_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_L1_of_measure_eq_top (hμs : μ s = ennreal.top) (x : G) : condexp_ind_L1 hm μ s x = 0 := by\n  simp only [condexp_ind_L1, hμs, eq_self_iff_true, not_true, ne.def, dif_neg, not_false_iff, and_false_iff]\n#align condexp_ind_L1_of_measure_eq_top condexp_ind_L1_of_measure_eq_top\n\n",
 "condexp_ind_L1_of_measurable_set_of_measure_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_L1_of_measurable_set_of_measure_ne_top (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : G) :\n    condexp_ind_L1 hm μ s x = condexp_ind_L1_fin hm hs hμs x := by\n  simp only [condexp_ind_L1, and.intro hs hμs, dif_pos, ne.def, not_false_iff, and_self_iff]\n#align condexp_ind_L1_of_measurable_set_of_measure_ne_top condexp_ind_L1_of_measurable_set_of_measure_ne_top\n\n",
 "condexp_ind_L1_fin_smul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem condexp_ind_L1_fin_smul' [NormedSpace (exprℝ) F] [SMulCommClass (exprℝ) 𝕜 F] (hs : MeasurableSet s)\n    (hμs : μ s ≠ ennreal.top) (c : 𝕜) (x : F) :\n    condexp_ind_L1_fin hm hs hμs («expr • » c x) = «expr • » c (condexp_ind_L1_fin hm hs hμs x) :=\n  by\n  ext1\n  refine' (mem_ℒp.coe_fn_to_Lp _).trans _\n  refine' eventually_eq.trans _ (Lp.coe_fn_smul _ _).symm\n  rw [condexp_ind_smul_smul' hs hμs c x]\n  refine' (Lp.coe_fn_smul _ _).trans _\n  refine' (condexp_ind_L1_fin_ae_eq_condexp_ind_smul hm hs hμs x).mono fun y hy => _\n  rw [Pi.smul_apply, Pi.smul_apply, hy]\n#align condexp_ind_L1_fin_smul' condexp_ind_L1_fin_smul'\n\n",
 "condexp_ind_L1_fin_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem condexp_ind_L1_fin_smul (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (c : exprℝ) (x : G) :\n    condexp_ind_L1_fin hm hs hμs («expr • » c x) = «expr • » c (condexp_ind_L1_fin hm hs hμs x) :=\n  by\n  ext1\n  refine' (mem_ℒp.coe_fn_to_Lp _).trans _\n  refine' eventually_eq.trans _ (Lp.coe_fn_smul _ _).symm\n  rw [condexp_ind_smul_smul hs hμs c x]\n  refine' (Lp.coe_fn_smul _ _).trans _\n  refine' (condexp_ind_L1_fin_ae_eq_condexp_ind_smul hm hs hμs x).mono fun y hy => _\n  rw [Pi.smul_apply, Pi.smul_apply, hy]\n#align condexp_ind_L1_fin_smul condexp_ind_L1_fin_smul\n\n",
 "condexp_ind_L1_fin_disjoint_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_L1_fin_disjoint_union (hs : MeasurableSet s) (ht : MeasurableSet t) (hμs : μ s ≠ ennreal.top)\n    (hμt : μ t ≠ ennreal.top) (hst : s ∩ t = ∅) (x : G) :\n    condexp_ind_L1_fin hm (hs.union ht)\n        ((measure_union_le s t).trans_lt (lt_top_iff_ne_top.mpr (ENNReal.add_ne_top.mpr ⟨hμs, hμt⟩))).ne x =\n      condexp_ind_L1_fin hm hs hμs x + condexp_ind_L1_fin hm ht hμt x :=\n  by\n  ext1\n  have hμst := ((measure_union_le s t).trans_lt (lt_top_iff_ne_top.mpr (ennreal.add_ne_top.mpr ⟨hμs, hμt⟩))).ne\n  refine' (condexp_ind_L1_fin_ae_eq_condexp_ind_smul hm (hs.union ht) hμst x).trans _\n  refine' eventually_eq.trans _ (Lp.coe_fn_add _ _).symm\n  have hs_eq := condexp_ind_L1_fin_ae_eq_condexp_ind_smul hm hs hμs x\n  have ht_eq := condexp_ind_L1_fin_ae_eq_condexp_ind_smul hm ht hμt x\n  refine' eventually_eq.trans _ (eventually_eq.add hs_eq.symm ht_eq.symm)\n  rw [condexp_ind_smul]\n  rw [indicator_const_Lp_disjoint_union hs ht hμs hμt hst (1 : exprℝ)]\n  rw [(condexp_L2 (exprℝ) hm).map_add]\n  push_cast\n  rw [((to_span_singleton (exprℝ) x).comp_LpL 2 μ).map_add]\n  refine' (Lp.coe_fn_add _ _).trans _\n  refine' eventually_of_forall fun y => _\n  rfl\n#align condexp_ind_L1_fin_disjoint_union condexp_ind_L1_fin_disjoint_union\n\n",
 "condexp_ind_L1_fin_ae_eq_condexp_ind_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem condexp_ind_L1_fin_ae_eq_condexp_ind_smul (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] (hs : MeasurableSet s)\n    (hμs : μ s ≠ ennreal.top) (x : G) :\n    «expr =ᵐ[ ] » (condexp_ind_L1_fin hm hs hμs x) μ (condexp_ind_smul hm hs hμs x) :=\n  (integrable_condexp_ind_smul hm hs hμs x).coe_fn_to_L1\n#align condexp_ind_L1_fin_ae_eq_condexp_ind_smul condexp_ind_L1_fin_ae_eq_condexp_ind_smul\n\n",
 "condexp_ind_L1_fin_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_L1_fin_add (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x y : G) :\n    condexp_ind_L1_fin hm hs hμs (x + y) = condexp_ind_L1_fin hm hs hμs x + condexp_ind_L1_fin hm hs hμs y :=\n  by\n  ext1\n  refine' (mem_ℒp.coe_fn_to_Lp _).trans _\n  refine' eventually_eq.trans _ (Lp.coe_fn_add _ _).symm\n  refine' eventually_eq.trans _ (eventually_eq.add (mem_ℒp.coe_fn_to_Lp _).symm (mem_ℒp.coe_fn_to_Lp _).symm)\n  rw [condexp_ind_smul_add]\n  refine' (Lp.coe_fn_add _ _).trans (eventually_of_forall fun a => _)\n  rfl\n#align condexp_ind_L1_fin_add condexp_ind_L1_fin_add\n\n",
 "condexp_ind_L1_disjoint_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_L1_disjoint_union (hs : MeasurableSet s) (ht : MeasurableSet t) (hμs : μ s ≠ ennreal.top)\n    (hμt : μ t ≠ ennreal.top) (hst : s ∩ t = ∅) (x : G) :\n    condexp_ind_L1 hm μ (s ∪ t) x = condexp_ind_L1 hm μ s x + condexp_ind_L1 hm μ t x :=\n  by\n  have hμst : μ (s ∪ t) ≠ ennreal.top :=\n    ((measure_union_le s t).trans_lt (lt_top_iff_ne_top.mpr (ennreal.add_ne_top.mpr ⟨hμs, hμt⟩))).ne\n  rw [condexp_ind_L1_of_measurable_set_of_measure_ne_top hs hμs x,\n    condexp_ind_L1_of_measurable_set_of_measure_ne_top ht hμt x,\n    condexp_ind_L1_of_measurable_set_of_measure_ne_top (hs.union ht) hμst x]\n  exact condexp_ind_L1_fin_disjoint_union hs ht hμs hμt hst x\n#align condexp_ind_L1_disjoint_union condexp_ind_L1_disjoint_union\n\n",
 "condexp_ind_L1_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_ind_L1_add (x y : G) :\n    condexp_ind_L1 hm μ s (x + y) = condexp_ind_L1 hm μ s x + condexp_ind_L1 hm μ s y :=\n  by\n  by_cases hs : MeasurableSet s\n  swap;\n  · simp_rw [condexp_ind_L1_of_not_measurable_set hs]\n    rw [zero_add]\n  by_cases hμs : μ s = ennreal.top\n  · simp_rw [condexp_ind_L1_of_measure_eq_top hμs]\n    rw [zero_add]\n  · simp_rw [condexp_ind_L1_of_measurable_set_of_measure_ne_top hs hμs]\n    exact condexp_ind_L1_fin_add hs hμs x y\n#align condexp_ind_L1_add condexp_ind_L1_add\n\n",
 "condexp_finset_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_finset_sum {ι : Type _} {s : Finset ι} {f : ι → α → F'} (hf : ∀ i ∈ s, integrable (f i) μ) :\n    «expr =ᵐ[ ] »\n      (measure_theory.condexp μ\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) m)\n      μ\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (measure_theory.condexp μ (f i) m)) :=\n  by\n  induction' s using Finset.induction_on with i s his heq hf\n  · rw [Finset.sum_empty, Finset.sum_empty, condexp_zero]\n  · rw [Finset.sum_insert his, Finset.sum_insert his]\n    exact\n      (condexp_add (hf i <| Finset.mem_insert_self i s) <|\n            integrable_finset_sum' _ fun j hmem => hf j <| Finset.mem_insert_of_mem hmem).trans\n        ((eventually_eq.refl _ _).add (HEq fun j hmem => hf j <| Finset.mem_insert_of_mem hmem))\n#align condexp_finset_sum condexp_finset_sum\n\n",
 "condexp_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_const (hm : m ≤ m0) (c : F') [FiniteMeasure μ] :\n    measure_theory.condexp μ (fun x : α => c) m = fun _ => c :=\n  condexp_of_strongly_measurable hm (@strongly_measurable_const _ _ m _ _) (integrable_const c)\n#align condexp_const condexp_const\n\n",
 "condexp_congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_congr_ae (h : «expr =ᵐ[ ] » f μ g) :\n    «expr =ᵐ[ ] » (measure_theory.condexp μ f m) μ (measure_theory.condexp μ g m) :=\n  by\n  by_cases hm : m ≤ m0\n  swap; · simp_rw [condexp_of_not_le hm]\n  by_cases hμm : sigma_finite (μ.trim hm)\n  swap; · simp_rw [condexp_of_not_sigma_finite hm hμm]\n  haveI : sigma_finite (μ.trim hm) := hμm\n  exact\n    (condexp_ae_eq_condexp_L1 hm f).trans\n      (Filter.EventuallyEq.trans (by rw [condexp_L1_congr_ae hm h]) (condexp_ae_eq_condexp_L1 hm g).symm)\n#align condexp_congr_ae condexp_congr_ae\n\n",
 "condexp_condexp_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_condexp_of_le {m₁ m₂ m0 : MeasurableSpace α} {μ : Measure α} (hm₁₂ : m₁ ≤ m₂) (hm₂ : m₂ ≤ m0)\n    [SigmaFinite (μ.trim hm₂)] :\n    «expr =ᵐ[ ] » (measure_theory.condexp μ (measure_theory.condexp μ f m₂) m₁) μ (measure_theory.condexp μ f m₁) :=\n  by\n  by_cases hμm₁ : sigma_finite (μ.trim (hm₁₂.trans hm₂))\n  swap; · simp_rw [condexp_of_not_sigma_finite (hm₁₂.trans hm₂) hμm₁]\n  haveI : sigma_finite (μ.trim (hm₁₂.trans hm₂)) := hμm₁\n  by_cases hf : integrable f μ\n  swap; · simp_rw [condexp_undef hf, condexp_zero]\n  refine'\n    ae_eq_of_forall_set_integral_eq_of_sigma_finite' (hm₁₂.trans hm₂) (fun s hs hμs => integrable_condexp.integrable_on)\n      (fun s hs hμs => integrable_condexp.integrable_on) _\n      (strongly_measurable.ae_strongly_measurable' strongly_measurable_condexp)\n      (strongly_measurable.ae_strongly_measurable' strongly_measurable_condexp)\n  intro s hs hμs\n  rw [set_integral_condexp (hm₁₂.trans hm₂) integrable_condexp hs]\n  swap; · infer_instance\n  rw [set_integral_condexp (hm₁₂.trans hm₂) hf hs, set_integral_condexp hm₂ hf (hm₁₂ s hs)]\n#align condexp_condexp_of_le condexp_condexp_of_le\n\n",
 "condexp_bot_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\ntheorem condexp_bot_ae_eq (f : α → F') :\n    «expr =ᵐ[ ] » (measure_theory.condexp μ f («expr⊥»)) μ fun _ =>\n      «expr • » (μ Set.univ).to_real⁻¹\n        («expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (f x) μ) :=\n  by\n  by_cases μ.ae.ne_bot\n  · refine' eventually_of_forall fun x => _\n    rw [condexp_bot' f]\n    exact h\n  · rw [ne_bot_iff, Classical.not_not, ae_eq_bot] at h\n    simp only [h, ae_zero]\n#align condexp_bot_ae_eq condexp_bot_ae_eq\n\n",
 "condexp_bot'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\ntheorem condexp_bot' [hμ : μ.ae.ne_bot] (f : α → F') :\n    measure_theory.condexp μ f («expr⊥») = fun _ =>\n      «expr • » (μ Set.univ).to_real⁻¹\n        («expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (f x) μ) :=\n  by\n  by_cases hμ_finite : is_finite_measure μ\n  swap\n  · have h : ¬sigma_finite (μ.trim bot_le) := by rwa [sigma_finite_trim_bot_iff]\n    rw [not_is_finite_measure_iff] at hμ_finite\n    rw [condexp_of_not_sigma_finite bot_le h]\n    simp only [hμ_finite, ENNReal.top_toReal, inv_zero, zero_smul]\n    rfl\n  haveI : is_finite_measure μ := hμ_finite\n  by_cases hf : integrable f μ\n  swap;\n  · rw [integral_undef hf, smul_zero, condexp_undef hf]\n    rfl\n  have h_meas : (strongly_measurable_of («expr⊥»)) (measure_theory.condexp μ f («expr⊥»)) := strongly_measurable_condexp\n  obtain ⟨c, h_eq⟩ := strongly_measurable_bot_iff.mp h_meas\n  rw [h_eq]\n  have h_integral :\n    «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\"\n        ((measure_theory.condexp μ f («expr⊥»)) x) μ =\n      «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (f x) μ :=\n    integral_condexp bot_le hf\n  simp_rw [h_eq, integral_const] at h_integral\n  rw [← h_integral, ← smul_assoc, smul_eq_mul, inv_mul_cancel, one_smul]\n  rw [ne.def, ENNReal.toReal_eq_zero_iff, auto.not_or_eq, measure.measure_univ_eq_zero, ← ae_eq_bot, ← ne.def, ←\n    ne_bot_iff]\n  exact ⟨hμ, measure_ne_top μ Set.univ⟩\n#align condexp_bot' condexp_bot'\n\n",
 "condexp_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\ntheorem condexp_bot [ProbabilityMeasure μ] (f : α → F') :\n    measure_theory.condexp μ f («expr⊥») = fun _ =>\n      «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (f x) μ :=\n  by\n  refine' (condexp_bot' f).trans _\n  rw [measure_univ, ENNReal.one_toReal, inv_one, one_smul]\n#align condexp_bot condexp_bot\n\n",
 "condexp_ae_eq_condexp_L1_clm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_ae_eq_condexp_L1_clm (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] (hf : integrable f μ) :\n    «expr =ᵐ[ ] » (measure_theory.condexp μ f m) μ (condexp_L1_clm hm μ (hf.to_L1 f)) :=\n  by\n  refine' (condexp_ae_eq_condexp_L1 hm f).trans (eventually_of_forall fun x => _)\n  rw [condexp_L1_eq hf]\n#align condexp_ae_eq_condexp_L1_clm condexp_ae_eq_condexp_L1_clm\n\n",
 "condexp_ae_eq_condexp_L1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_ae_eq_condexp_L1 (hm : m ≤ m0) [hμm : SigmaFinite (μ.trim hm)] (f : α → F') :\n    «expr =ᵐ[ ] » (measure_theory.condexp μ f m) μ (condexp_L1 hm μ f) :=\n  by\n  rw [condexp_of_sigma_finite hm]\n  by_cases hfi : integrable f μ\n  · rw [if_pos hfi]\n    by_cases hfm : (strongly_measurable_of m) f\n    · rw [if_pos hfm]\n      exact (condexp_L1_of_ae_strongly_measurable' (strongly_measurable.ae_strongly_measurable' hfm) hfi).symm\n    · rw [if_neg hfm]\n      exact (ae_strongly_measurable'.ae_eq_mk ae_strongly_measurable'_condexp_L1).symm\n  rw [if_neg hfi, condexp_L1_undef hfi]\n  exact (coe_fn_zero _ _ _).symm\n#align condexp_ae_eq_condexp_L1 condexp_ae_eq_condexp_L1\n\n",
 "condexp_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\ntheorem condexp_add (hf : integrable f μ) (hg : integrable g μ) :\n    «expr =ᵐ[ ] » (measure_theory.condexp μ (f + g) m) μ\n      (measure_theory.condexp μ f m + measure_theory.condexp μ g m) :=\n  by\n  by_cases hm : m ≤ m0\n  swap;\n  · simp_rw [condexp_of_not_le hm]\n    simp\n  by_cases hμm : sigma_finite (μ.trim hm)\n  swap;\n  · simp_rw [condexp_of_not_sigma_finite hm hμm]\n    simp\n  haveI : sigma_finite (μ.trim hm) := hμm\n  refine' (condexp_ae_eq_condexp_L1 hm _).trans _\n  rw [condexp_L1_add hf hg]\n  exact (coe_fn_add _ _).trans ((condexp_ae_eq_condexp_L1 hm _).symm.add (condexp_ae_eq_condexp_L1 hm _).symm)\n#align condexp_add condexp_add\n\n",
 "condexp_L2_indicator_of_measurable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\ntheorem condexp_L2_indicator_of_measurable (hm : m ≤ m0) (hs : (measurable_set_of m) s) (hμs : μ s ≠ ennreal.top)\n    (c : E) :\n    (condexp_L2 𝕜 hm (indicator_const_Lp 2 (hm s hs) hμs c) : measure_theory.L2 α μ E) =\n      indicator_const_Lp 2 (hm s hs) hμs c :=\n  by\n  rw [condexp_L2]\n  haveI : Fact (m ≤ m0) := ⟨hm⟩\n  have h_mem : indicator_const_Lp 2 (hm s hs) hμs c ∈ Lp_meas E 𝕜 m 2 μ := mem_Lp_meas_indicator_const_Lp hm hs hμs\n  let ind := (⟨indicator_const_Lp 2 (hm s hs) hμs c, h_mem⟩ : Lp_meas E 𝕜 m 2 μ)\n  have h_coe_ind : (ind : measure_theory.L2 α μ E) = indicator_const_Lp 2 (hm s hs) hμs c := by rfl\n  have h_orth_mem := orthogonal_projection_mem_subspace_eq_self ind\n  rw [← h_coe_ind, h_orth_mem]\n#align condexp_L2_indicator_of_measurable condexp_L2_indicator_of_measurable\n\n",
 "condexp_L2_indicator_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem condexp_L2_indicator_nonneg (hm : m ≤ m0) (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top)\n    [SigmaFinite (μ.trim hm)] : «expr ≤ᵐ[ ] » 0 μ (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ))) :=\n  by\n  have h : ae_strongly_measurable' m (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ))) μ :=\n    ae_strongly_measurable'_condexp_L2 _ _\n  refine' eventually_le.trans_eq _ h.ae_eq_mk.symm\n  refine' @ae_le_of_ae_le_trim _ _ _ _ _ _ hm _ _ _\n  refine' ae_nonneg_of_forall_set_integral_nonneg_of_sigma_finite _ _\n  · intro t ht hμt\n    refine' @integrable.integrable_on _ _ m _ _ _ _ _\n    refine' integrable.trim hm _ _\n    · rw [integrable_congr h.ae_eq_mk.symm]\n      exact integrable_condexp_L2_indicator hm hs hμs _\n    · exact h.strongly_measurable_mk\n  · intro t ht hμt\n    rw [← set_integral_trim hm h.strongly_measurable_mk ht]\n    have h_ae :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (x ∈ t → h.mk _ x = condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)) x) :=\n      by\n      filter_upwards [h.ae_eq_mk]with x hx\n      exact fun _ => hx.symm\n    rw [set_integral_congr_ae (hm t ht) h_ae,\n      set_integral_condexp_L2_indicator ht hs ((le_trim hm).trans_lt hμt).ne hμs]\n    exact ENNReal.toReal_nonneg\n#align condexp_L2_indicator_nonneg condexp_L2_indicator_nonneg\n\n",
 "condexp_L2_indicator_eq_to_span_singleton_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem condexp_L2_indicator_eq_to_span_singleton_comp (hm : m ≤ m0) (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top)\n    (x : E') :\n    (condexp_L2 𝕜 hm (indicator_const_Lp 2 hs hμs x) : measure_theory.L2 α μ E') =\n      (toSpanSingleton (exprℝ) x).comp_Lp (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ))) :=\n  by\n  ext1\n  rw [← Lp_meas_coe]\n  refine' (condexp_L2_indicator_ae_eq_smul 𝕜 hm hs hμs x).trans _\n  have h_comp :=\n    (to_span_singleton (exprℝ) x).coe_fn_comp_Lp\n      (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)) : measure_theory.L2 α μ (exprℝ))\n  rw [← eventually_eq] at h_comp\n  refine' eventually_eq.trans _ h_comp.symm\n  refine' eventually_of_forall fun y => _\n  rfl\n#align condexp_L2_indicator_eq_to_span_singleton_comp condexp_L2_indicator_eq_to_span_singleton_comp\n\n",
 "condexp_L2_indicator_ae_eq_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem condexp_L2_indicator_ae_eq_smul (hm : m ≤ m0) (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : E') :\n    «expr =ᵐ[ ] » (condexp_L2 𝕜 hm (indicator_const_Lp 2 hs hμs x)) μ fun a =>\n      «expr • » (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ)) a) x :=\n  by\n  rw [indicator_const_Lp_eq_to_span_singleton_comp_Lp hs hμs x]\n  have h_comp :=\n    condexp_L2_comp_continuous_linear_map (exprℝ) 𝕜 hm (to_span_singleton (exprℝ) x)\n      (indicator_const_Lp 2 hs hμs (1 : exprℝ))\n  rw [← Lp_meas_coe] at h_comp\n  refine' h_comp.trans _\n  exact (to_span_singleton (exprℝ) x).coe_fn_comp_Lp _\n#align condexp_L2_indicator_ae_eq_smul condexp_L2_indicator_ae_eq_smul\n\n",
 "condexp_L2_const_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- `condexp_L2` commutes with taking inner products with constants. See the lemma\n`condexp_L2_comp_continuous_linear_map` for a more general result about commuting with continuous\nlinear maps. -/\ntheorem condexp_L2_const_inner (hm : m ≤ m0) (f : Lp E 2 μ) (c : E) :\n    «expr =ᵐ[ ] » (condexp_L2 𝕜 hm (((Lp.mem_ℒp f).const_inner c).to_Lp fun a => «expr⟪ , ⟫» c (f a))) μ fun a =>\n      «expr⟪ , ⟫» c (condexp_L2 𝕜 hm f a) :=\n  by\n  rw [Lp_meas_coe]\n  have h_mem_Lp : mem_ℒp (fun a => «expr⟪ , ⟫» c (condexp_L2 𝕜 hm f a)) 2 μ :=\n    by\n    refine' mem_ℒp.const_inner _ _\n    rw [Lp_meas_coe]\n    exact Lp.mem_ℒp _\n  have h_eq : «expr =ᵐ[ ] » (h_mem_Lp.to_Lp _) μ fun a => «expr⟪ , ⟫» c (condexp_L2 𝕜 hm f a) := h_mem_Lp.coe_fn_to_Lp\n  refine' eventually_eq.trans _ h_eq\n  refine'\n    Lp.ae_eq_of_forall_set_integral_eq' 𝕜 hm _ _ two_ne_zero ENNReal.coe_ne_top\n      (fun s hs hμs => integrable_on_condexp_L2_of_measure_ne_top hm hμs.ne _) _ _ _ _\n  · intro s hs hμs\n    rw [integrable_on, integrable_congr (ae_restrict_of_ae h_eq)]\n    exact (integrable_on_condexp_L2_of_measure_ne_top hm hμs.ne _).const_inner _\n  · intro s hs hμs\n    rw [← Lp_meas_coe, integral_condexp_L2_eq_of_fin_meas_real _ hs hμs.ne, integral_congr_ae (ae_restrict_of_ae h_eq),\n      Lp_meas_coe, ← L2.inner_indicator_const_Lp_eq_set_integral_inner 𝕜 (↑(condexp_L2 𝕜 hm f)) (hm s hs) c hμs.ne, ←\n      inner_condexp_L2_left_eq_right, condexp_L2_indicator_of_measurable,\n      L2.inner_indicator_const_Lp_eq_set_integral_inner 𝕜 f (hm s hs) c hμs.ne,\n      set_integral_congr_ae (hm s hs) ((mem_ℒp.coe_fn_to_Lp ((Lp.mem_ℒp f).const_inner c)).mono fun x hx hxs => hx)]\n  · rw [← Lp_meas_coe]\n    exact Lp_meas.ae_strongly_measurable' _\n  · refine' ae_strongly_measurable'.congr _ h_eq.symm\n    exact (Lp_meas.ae_strongly_measurable' _).const_inner _\n#align condexp_L2_const_inner condexp_L2_const_inner\n\n",
 "condexp_L2_comp_continuous_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\ntheorem condexp_L2_comp_continuous_linear_map (hm : m ≤ m0) (T : «expr →L[ ] » E' (exprℝ) E'')\n    (f : measure_theory.L2 α μ E') :\n    «expr =ᵐ[ ] » (condexp_L2 𝕜' hm (T.comp_Lp f) : measure_theory.L2 α μ E'') μ\n      (T.comp_Lp (condexp_L2 𝕜 hm f : measure_theory.L2 α μ E')) :=\n  by\n  refine'\n    Lp.ae_eq_of_forall_set_integral_eq' 𝕜' hm _ _ two_ne_zero ENNReal.coe_ne_top\n      (fun s hs hμs => integrable_on_condexp_L2_of_measure_ne_top hm hμs.ne _)\n      (fun s hs hμs => integrable_on_Lp_of_measure_ne_top _ fact_one_le_two_ennreal.elim hμs.ne) _ _ _\n  · intro s hs hμs\n    rw [T.set_integral_comp_Lp _ (hm s hs),\n      T.integral_comp_comm (integrable_on_Lp_of_measure_ne_top _ fact_one_le_two_ennreal.elim hμs.ne), ← Lp_meas_coe, ←\n      Lp_meas_coe, integral_condexp_L2_eq hm f hs hμs.ne, integral_condexp_L2_eq hm (T.comp_Lp f) hs hμs.ne,\n      T.set_integral_comp_Lp _ (hm s hs),\n      T.integral_comp_comm (integrable_on_Lp_of_measure_ne_top f fact_one_le_two_ennreal.elim hμs.ne)]\n  · rw [← Lp_meas_coe]\n    exact Lp_meas.ae_strongly_measurable' _\n  · have h_coe := T.coe_fn_comp_Lp (condexp_L2 𝕜 hm f : measure_theory.L2 α μ E')\n    rw [← eventually_eq] at h_coe\n    refine' ae_strongly_measurable'.congr _ h_coe.symm\n    exact (Lp_meas.ae_strongly_measurable' (condexp_L2 𝕜 hm f)).continuous_comp T.continuous\n#align condexp_L2_comp_continuous_linear_map condexp_L2_comp_continuous_linear_map\n\n",
 "condexp_L2_ae_eq_zero_of_ae_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem condexp_L2_ae_eq_zero_of_ae_eq_zero (hs : (measurable_set_of m) s) (hμs : μ s ≠ ennreal.top)\n    {f : Lp (exprℝ) 2 μ} (hf : «expr =ᵐ[ ] » f (μ.restrict s) 0) :\n    «expr =ᵐ[ ] » (condexp_L2 (exprℝ) hm f) (μ.restrict s) 0 :=\n  by\n  suffices h_nnnorm_eq_zero :\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" s\n        («expr‖ ‖₊» (condexp_L2 (exprℝ) hm f x)) μ =\n      0\n  · rw [lintegral_eq_zero_iff] at h_nnnorm_eq_zero\n    refine' h_nnnorm_eq_zero.mono fun x hx => _\n    dsimp only at hx\n    rw [Pi.zero_apply] at hx⊢\n    · rwa [ENNReal.coe_eq_zero, nnnorm_eq_zero] at hx\n    · refine' measurable.coe_nnreal_ennreal (measurable.nnnorm _)\n      rw [Lp_meas_coe]\n      exact (Lp.strongly_measurable _).measurable\n  refine' le_antisymm _ (zero_le _)\n  refine' (lintegral_nnnorm_condexp_L2_le hs hμs f).trans (le_of_eq _)\n  rw [lintegral_eq_zero_iff]\n  · refine' hf.mono fun x hx => _\n    dsimp only\n    rw [hx]\n    simp\n  · exact (Lp.strongly_measurable _).ennnorm\n#align condexp_L2_ae_eq_zero_of_ae_eq_zero condexp_L2_ae_eq_zero_of_ae_eq_zero\n\n",
 "condexp_L1_zero":
 "@[simp]\ntheorem condexp_L1_zero : condexp_L1 hm μ (0 : α → F') = 0 :=\n  set_to_fun_zero _\n#align condexp_L1_zero condexp_L1_zero\n\n",
 "condexp_L1_undef":
 "theorem condexp_L1_undef (hf : ¬integrable f μ) : condexp_L1 hm μ f = 0 :=\n  set_to_fun_undef (dominated_fin_meas_additive_condexp_ind F' hm μ) hf\n#align condexp_L1_undef condexp_L1_undef\n\n",
 "condexp_L1_sub":
 "theorem condexp_L1_sub (hf : integrable f μ) (hg : integrable g μ) :\n    condexp_L1 hm μ (f - g) = condexp_L1 hm μ f - condexp_L1 hm μ g :=\n  set_to_fun_sub _ hf hg\n#align condexp_L1_sub condexp_L1_sub\n\n",
 "condexp_L1_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem condexp_L1_smul (c : 𝕜) (f : α → F') : condexp_L1 hm μ («expr • » c f) = «expr • » c (condexp_L1 hm μ f) :=\n  set_to_fun_smul _ (fun c _ x => condexp_ind_smul' c x) c f\n#align condexp_L1_smul condexp_L1_smul\n\n",
 "condexp_L1_of_ae_strongly_measurable'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem condexp_L1_of_ae_strongly_measurable' (hfm : ae_strongly_measurable' m f μ) (hfi : integrable f μ) :\n    «expr =ᵐ[ ] » (condexp_L1 hm μ f) μ f := by\n  rw [condexp_L1_eq hfi]\n  refine' eventually_eq.trans _ (integrable.coe_fn_to_L1 hfi)\n  rw [condexp_L1_clm_of_ae_strongly_measurable']\n  exact ae_strongly_measurable'.congr hfm (integrable.coe_fn_to_L1 hfi).symm\n#align condexp_L1_of_ae_strongly_measurable' condexp_L1_of_ae_strongly_measurable'\n\n",
 "condexp_L1_neg":
 "theorem condexp_L1_neg (f : α → F') : condexp_L1 hm μ (-f) = -condexp_L1 hm μ f :=\n  set_to_fun_neg _ f\n#align condexp_L1_neg condexp_L1_neg\n\n",
 "condexp_L1_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem condexp_L1_mono {E} [NormedLatticeAddCommGroup E] [CompleteSpace E] [NormedSpace (exprℝ) E]\n    [OrderedSMul (exprℝ) E] {f g : α → E} (hf : integrable f μ) (hg : integrable g μ) (hfg : «expr ≤ᵐ[ ] » f μ g) :\n    «expr ≤ᵐ[ ] » (condexp_L1 hm μ f) μ (condexp_L1 hm μ g) :=\n  by\n  rw [coe_fn_le]\n  have h_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x : E, 0 ≤ x → 0 ≤ condexp_ind hm μ s x :=\n    fun s hs hμs x hx => condexp_ind_nonneg hs hμs.ne x hx\n  exact set_to_fun_mono (dominated_fin_meas_additive_condexp_ind E hm μ) h_nonneg hf hg hfg\n#align condexp_L1_mono condexp_L1_mono\n\n",
 "condexp_L1_measure_zero":
 "@[simp]\ntheorem condexp_L1_measure_zero (hm : m ≤ m0) : condexp_L1 hm (0 : Measure α) f = 0 :=\n  set_to_fun_measure_zero _ rfl\n#align condexp_L1_measure_zero condexp_L1_measure_zero\n\n",
 "condexp_L1_eq":
 "theorem condexp_L1_eq (hf : integrable f μ) : condexp_L1 hm μ f = condexp_L1_clm hm μ (hf.to_L1 f) :=\n  set_to_fun_eq (dominated_fin_meas_additive_condexp_ind F' hm μ) hf\n#align condexp_L1_eq condexp_L1_eq\n\n",
 "condexp_L1_congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem condexp_L1_congr_ae (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] (h : «expr =ᵐ[ ] » f μ g) :\n    condexp_L1 hm μ f = condexp_L1 hm μ g :=\n  set_to_fun_congr_ae _ h\n#align condexp_L1_congr_ae condexp_L1_congr_ae\n\n",
 "condexp_L1_clm_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem condexp_L1_clm_smul (c : 𝕜) (f : measure_theory.L1 α μ F') :\n    condexp_L1_clm hm μ («expr • » c f) = «expr • » c (condexp_L1_clm hm μ f) :=\n  L1.set_to_L1_smul (dominated_fin_meas_additive_condexp_ind F' hm μ) (fun c s x => condexp_ind_smul' c x) c f\n#align condexp_L1_clm_smul condexp_L1_clm_smul\n\n",
 "condexp_L1_clm_of_ae_strongly_measurable'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem condexp_L1_clm_of_ae_strongly_measurable' (f : measure_theory.L1 α μ F') (hfm : ae_strongly_measurable' m f μ) :\n    condexp_L1_clm hm μ f = f :=\n  condexp_L1_clm_Lp_meas (⟨f, hfm⟩ : Lp_meas F' (exprℝ) m 1 μ)\n#align condexp_L1_clm_of_ae_strongly_measurable' condexp_L1_clm_of_ae_strongly_measurable'\n\n",
 "condexp_L1_clm_indicator_const_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_L1_clm_indicator_const_Lp (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : F') :\n    (condexp_L1_clm hm μ) (indicator_const_Lp 1 hs hμs x) = condexp_ind hm μ s x :=\n  L1.set_to_L1_indicator_const_Lp (dominated_fin_meas_additive_condexp_ind F' hm μ) hs hμs x\n#align condexp_L1_clm_indicator_const_Lp condexp_L1_clm_indicator_const_Lp\n\n",
 "condexp_L1_clm_indicator_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem condexp_L1_clm_indicator_const (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : F') :\n    (condexp_L1_clm hm μ) ↑(simple_func.indicator_const 1 hs hμs x) = condexp_ind hm μ s x :=\n  by\n  rw [Lp.simple_func.coe_indicator_const]\n  exact condexp_L1_clm_indicator_const_Lp hs hμs x\n#align condexp_L1_clm_indicator_const condexp_L1_clm_indicator_const\n\n",
 "condexp_L1_clm_Lp_meas":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem condexp_L1_clm_Lp_meas (f : Lp_meas F' (exprℝ) m 1 μ) :\n    condexp_L1_clm hm μ (f : measure_theory.L1 α μ F') = ↑f :=\n  by\n  let g := Lp_meas_to_Lp_trim_lie F' (exprℝ) 1 μ hm f\n  have hfg : f = (Lp_meas_to_Lp_trim_lie F' (exprℝ) 1 μ hm).symm g := by\n    simp only [LinearIsometryEquiv.symm_apply_apply]\n  rw [hfg]\n  refine'\n    @Lp.induction α F' m _ 1 (μ.trim hm) _ ENNReal.coe_ne_top\n      (fun g : measure_theory.L1 α (μ.trim hm) F' =>\n        condexp_L1_clm hm μ ((Lp_meas_to_Lp_trim_lie F' (exprℝ) 1 μ hm).symm g : measure_theory.L1 α μ F') =\n          ↑((Lp_meas_to_Lp_trim_lie F' (exprℝ) 1 μ hm).symm g))\n      _ _ _ g\n  · intro c s hs hμs\n    rw [Lp.simple_func.coe_indicator_const, Lp_meas_to_Lp_trim_lie_symm_indicator hs hμs.ne c,\n      condexp_L1_clm_indicator_const_Lp]\n    exact condexp_ind_of_measurable hs ((le_trim hm).trans_lt hμs).ne c\n  · intro f g hf hg hfg_disj hf_eq hg_eq\n    rw [LinearIsometryEquiv.map_add]\n    push_cast\n    rw [map_add, hf_eq, hg_eq]\n  · refine' isClosed_eq _ _\n    · refine' (condexp_L1_clm hm μ).continuous.comp (continuous_induced_dom.comp _)\n      exact LinearIsometryEquiv.continuous _\n    · refine' continuous_induced_dom.comp _\n      exact LinearIsometryEquiv.continuous _\n#align condexp_L1_clm_Lp_meas condexp_L1_clm_Lp_meas\n\n",
 "condexp_L1_add":
 "theorem condexp_L1_add (hf : integrable f μ) (hg : integrable g μ) :\n    condexp_L1 hm μ (f + g) = condexp_L1 hm μ f + condexp_L1 hm μ g :=\n  set_to_fun_add _ hf hg\n#align condexp_L1_add condexp_L1_add\n\n",
 "ae_strongly_measurable'_of_measurable_space_le_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/-- If the restriction to a set `s` of a σ-algebra `m` is included in the restriction to `s` of\nanother σ-algebra `m₂` (hypothesis `hs`), the set `s` is `m` measurable and a function `f` almost\neverywhere supported on `s` is `m`-ae-strongly-measurable, then `f` is also\n`m₂`-ae-strongly-measurable. -/\ntheorem ae_strongly_measurable'.ae_strongly_measurable'_of_measurable_space_le_on {α E} {m m₂ m0 : MeasurableSpace α}\n    {μ : Measure α} [TopologicalSpace E] [Zero E] (hm : m ≤ m0) {s : Set α} {f : α → E} (hs_m : (measurable_set_of m) s)\n    (hs : ∀ t, (measurable_set_of m) (s ∩ t) → (measurable_set_of m₂) (s ∩ t)) (hf : ae_strongly_measurable' m f μ)\n    (hf_zero : «expr =ᵐ[ ] » f (μ.restrict («expr ᶜ» s)) 0) : ae_strongly_measurable' m₂ f μ :=\n  by\n  let f' := hf.mk f\n  have h_ind_eq : «expr =ᵐ[ ] » (s.indicator (hf.mk f)) μ f :=\n    by\n    refine' Filter.EventuallyEq.trans _ (indicator_ae_eq_of_restrict_compl_ae_eq_zero (hm _ hs_m) hf_zero)\n    filter_upwards [hf.ae_eq_mk]with x hx\n    by_cases hxs : x ∈ s\n    · simp [hxs, hx]\n    · simp [hxs]\n  suffices : (strongly_measurable_of m₂) (s.indicator (hf.mk f))\n  exact ae_strongly_measurable'.congr this.ae_strongly_measurable' h_ind_eq\n  have hf_ind : (strongly_measurable_of m) (s.indicator (hf.mk f)) := hf.strongly_measurable_mk.indicator hs_m\n  exact hf_ind.strongly_measurable_of_measurable_space_le_on hs_m hs fun x hxs => Set.indicator_of_not_mem hxs _\n#align ae_strongly_measurable'.ae_strongly_measurable'_of_measurable_space_le_on ae_strongly_measurable'.ae_strongly_measurable'_of_measurable_space_le_on\n\n",
 "ae_strongly_measurable'_of_ae_strongly_measurable'_trim":
 "theorem ae_strongly_measurable'_of_ae_strongly_measurable'_trim {α β} {m m0 m0' : MeasurableSpace α}\n    [TopologicalSpace β] (hm0 : m0 ≤ m0') {μ : Measure α} {f : α → β} (hf : ae_strongly_measurable' m f (μ.trim hm0)) :\n    ae_strongly_measurable' m f μ := by\n  obtain ⟨g, hg_meas, hfg⟩ := hf\n  exact ⟨g, hg_meas, ae_eq_of_ae_eq_trim hfg⟩\n#align ae_strongly_measurable'_of_ae_strongly_measurable'_trim ae_strongly_measurable'_of_ae_strongly_measurable'_trim\n\n",
 "ae_strongly_measurable'_condexp_ind_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem ae_strongly_measurable'_condexp_ind_smul (hm : m ≤ m0) (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top)\n    (x : G) : ae_strongly_measurable' m (condexp_ind_smul hm hs hμs x) μ :=\n  by\n  have h : ae_strongly_measurable' m (condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ))) μ :=\n    ae_strongly_measurable'_condexp_L2 _ _\n  rw [condexp_ind_smul]\n  suffices\n    ae_strongly_measurable' m\n      (to_span_singleton (exprℝ) x ∘ condexp_L2 (exprℝ) hm (indicator_const_Lp 2 hs hμs (1 : exprℝ))) μ\n    by\n    refine' ae_strongly_measurable'.congr this _\n    refine' eventually_eq.trans _ (coe_fn_comp_LpL _ _).symm\n    rw [Lp_meas_coe]\n  exact ae_strongly_measurable'.continuous_comp (to_span_singleton (exprℝ) x).continuous h\n#align ae_strongly_measurable'_condexp_ind_smul ae_strongly_measurable'_condexp_ind_smul\n\n",
 "ae_strongly_measurable'_condexp_ind":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem ae_strongly_measurable'_condexp_ind (hs : MeasurableSet s) (hμs : μ s ≠ ennreal.top) (x : G) :\n    ae_strongly_measurable' m (condexp_ind hm μ s x) μ :=\n  ae_strongly_measurable'.congr (ae_strongly_measurable'_condexp_ind_smul hm hs hμs x)\n    (condexp_ind_ae_eq_condexp_ind_smul hm hs hμs x).symm\n#align ae_strongly_measurable'_condexp_ind ae_strongly_measurable'_condexp_ind\n\n",
 "ae_strongly_measurable'_condexp_L2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L2 -/\ntheorem ae_strongly_measurable'_condexp_L2 (hm : m ≤ m0) (f : measure_theory.L2 α μ E) :\n    ae_strongly_measurable' m (condexp_L2 𝕜 hm f) μ :=\n  Lp_meas.ae_strongly_measurable' _\n#align ae_strongly_measurable'_condexp_L2 ae_strongly_measurable'_condexp_L2\n\n",
 "ae_strongly_measurable'_condexp_L1_clm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem ae_strongly_measurable'_condexp_L1_clm (f : measure_theory.L1 α μ F') :\n    ae_strongly_measurable' m (condexp_L1_clm hm μ f) μ :=\n  by\n  refine'\n    Lp.induction ENNReal.one_ne_top\n      (fun f : measure_theory.L1 α μ F' => ae_strongly_measurable' m (condexp_L1_clm hm μ f) μ) _ _ _ f\n  · intro c s hs hμs\n    rw [condexp_L1_clm_indicator_const hs hμs.ne c]\n    exact ae_strongly_measurable'_condexp_ind hs hμs.ne c\n  · intro f g hf hg h_disj hfm hgm\n    rw [(condexp_L1_clm hm μ).map_add]\n    refine' ae_strongly_measurable'.congr _ (coe_fn_add _ _).symm\n    exact ae_strongly_measurable'.add hfm hgm\n  · have :\n      { f : Lp F' 1 μ | ae_strongly_measurable' m (condexp_L1_clm hm μ f) μ } =\n        «expr ⁻¹' » (condexp_L1_clm hm μ) { f | ae_strongly_measurable' m f μ } :=\n      by rfl\n    rw [this]\n    refine' IsClosed.preimage (condexp_L1_clm hm μ).continuous _\n    exact is_closed_ae_strongly_measurable' hm\n#align ae_strongly_measurable'_condexp_L1_clm ae_strongly_measurable'_condexp_L1_clm\n\n",
 "ae_strongly_measurable'_condexp_L1":
 "theorem ae_strongly_measurable'_condexp_L1 {f : α → F'} : ae_strongly_measurable' m (condexp_L1 hm μ f) μ :=\n  by\n  by_cases hf : integrable f μ\n  · rw [condexp_L1_eq hf]\n    exact ae_strongly_measurable'_condexp_L1_clm _\n  · rw [condexp_L1_undef hf]\n    refine' ae_strongly_measurable'.congr _ (coe_fn_zero _ _ _).symm\n    exact strongly_measurable.ae_strongly_measurable' (@strongly_measurable_zero _ _ m _ _)\n#align ae_strongly_measurable'_condexp_L1 ae_strongly_measurable'_condexp_L1\n\n",
 "ae_strongly_measurable'":
 "theorem Lp_meas.ae_strongly_measurable' {m m0 : MeasurableSpace α} {μ : Measure α} (f : Lp_meas F 𝕜 m p μ) :\n    ae_strongly_measurable' m f μ :=\n  mem_Lp_meas_iff_ae_strongly_measurable'.mp f.mem\n#align Lp_meas.ae_strongly_measurable' Lp_meas.ae_strongly_measurable'\n\n",
 "ae_fin_strongly_measurable'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- We do not get `ae_fin_strongly_measurable f (μ.trim hm)`, since we don't have\n`f =ᵐ[μ.trim hm] Lp_meas_to_Lp_trim F 𝕜 p μ hm f` but only the weaker\n`f =ᵐ[μ] Lp_meas_to_Lp_trim F 𝕜 p μ hm f`. -/\ntheorem Lp_meas.ae_fin_strongly_measurable' (hm : m ≤ m0) (f : Lp_meas F 𝕜 m p μ) (hp_ne_zero : p ≠ 0)\n    (hp_ne_top : p ≠ ennreal.top) : ∃ g, fin_strongly_measurable g (μ.trim hm) ∧ «expr =ᵐ[ ] » f μ g :=\n  ⟨Lp_meas_subgroup_to_Lp_trim F p μ hm f, Lp.fin_strongly_measurable _ hp_ne_zero hp_ne_top,\n    (Lp_meas_subgroup_to_Lp_trim_ae_eq hm f).symm⟩\n#align Lp_meas.ae_fin_strongly_measurable' Lp_meas.ae_fin_strongly_measurable'\n\n",
 "ae_eq_zero_of_forall_set_integral_eq_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem Lp.ae_eq_zero_of_forall_set_integral_eq_zero' (hm : m ≤ m0) (f : Lp E' p μ) (hp_ne_zero : p ≠ 0)\n    (hp_ne_top : p ≠ ennreal.top)\n    (hf_int_finite : ∀ s, (measurable_set_of m) s → μ s < ennreal.top → integrable_on f s μ)\n    (hf_zero :\n      ∀ s : Set α,\n        (measurable_set_of m) s →\n          μ s < ennreal.top →\n            «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n                (f x) μ =\n              0)\n    (hf_meas : ae_strongly_measurable' m f μ) : «expr =ᵐ[ ] » f μ 0 :=\n  by\n  let f_meas : Lp_meas E' 𝕜 m p μ := ⟨f, hf_meas⟩\n  have hf_f_meas : «expr =ᵐ[ ] » f μ f_meas := by simp only [coe_fn_coe_base', Subtype.coe_mk]\n  refine' hf_f_meas.trans _\n  refine' Lp_meas.ae_eq_zero_of_forall_set_integral_eq_zero hm f_meas hp_ne_zero hp_ne_top _ _\n  · intro s hs hμs\n    have hfg_restrict : «expr =ᵐ[ ] » f (μ.restrict s) f_meas := ae_restrict_of_ae hf_f_meas\n    rw [integrable_on, integrable_congr hfg_restrict.symm]\n    exact hf_int_finite s hs hμs\n  · intro s hs hμs\n    have hfg_restrict : «expr =ᵐ[ ] » f (μ.restrict s) f_meas := ae_restrict_of_ae hf_f_meas\n    rw [integral_congr_ae hfg_restrict.symm]\n    exact hf_zero s hs hμs\n#align Lp.ae_eq_zero_of_forall_set_integral_eq_zero' Lp.ae_eq_zero_of_forall_set_integral_eq_zero'\n\n",
 "ae_eq_zero_of_forall_set_integral_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem Lp_meas.ae_eq_zero_of_forall_set_integral_eq_zero (hm : m ≤ m0) (f : Lp_meas E' 𝕜 m p μ) (hp_ne_zero : p ≠ 0)\n    (hp_ne_top : p ≠ ennreal.top)\n    (hf_int_finite : ∀ s, (measurable_set_of m) s → μ s < ennreal.top → integrable_on f s μ)\n    (hf_zero :\n      ∀ s : Set α,\n        (measurable_set_of m) s →\n          μ s < ennreal.top →\n            «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n                (f x) μ =\n              0) :\n    «expr =ᵐ[ ] » f μ 0 :=\n  by\n  obtain ⟨g, hg_sm, hfg⟩ := Lp_meas.ae_fin_strongly_measurable' hm f hp_ne_zero hp_ne_top\n  refine' hfg.trans _\n  refine' ae_eq_zero_of_forall_set_integral_eq_of_fin_strongly_measurable_trim hm _ _ hg_sm\n  · intro s hs hμs\n    have hfg_restrict : «expr =ᵐ[ ] » f (μ.restrict s) g := ae_restrict_of_ae hfg\n    rw [integrable_on, integrable_congr hfg_restrict.symm]\n    exact hf_int_finite s hs hμs\n  · intro s hs hμs\n    have hfg_restrict : «expr =ᵐ[ ] » f (μ.restrict s) g := ae_restrict_of_ae hfg\n    rw [integral_congr_ae hfg_restrict.symm]\n    exact hf_zero s hs hμs\n#align Lp_meas.ae_eq_zero_of_forall_set_integral_eq_zero Lp_meas.ae_eq_zero_of_forall_set_integral_eq_zero\n\n",
 "ae_eq_trim_iff_of_ae_strongly_measurable'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_trim_iff_of_ae_strongly_measurable' {α β} [TopologicalSpace β] [metrizable_space β]\n    {m m0 : MeasurableSpace α} {μ : Measure α} {f g : α → β} (hm : m ≤ m0) (hfm : ae_strongly_measurable' m f μ)\n    (hgm : ae_strongly_measurable' m g μ) : «expr =ᵐ[ ] » (hfm.mk f) (μ.trim hm) (hgm.mk g) ↔ «expr =ᵐ[ ] » f μ g :=\n  (ae_eq_trim_iff hm hfm.strongly_measurable_mk hgm.strongly_measurable_mk).trans\n    ⟨fun h => hfm.ae_eq_mk.trans (h.trans hgm.ae_eq_mk.symm), fun h => hfm.ae_eq_mk.symm.trans (h.trans hgm.ae_eq_mk)⟩\n#align ae_eq_trim_iff_of_ae_strongly_measurable' ae_eq_trim_iff_of_ae_strongly_measurable'\n\n",
 "ae_eq_of_forall_set_integral_eq_of_sigma_finite'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_of_forall_set_integral_eq_of_sigma_finite' (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] {f g : α → F'}\n    (hf_int_finite : ∀ s, (measurable_set_of m) s → μ s < ennreal.top → integrable_on f s μ)\n    (hg_int_finite : ∀ s, (measurable_set_of m) s → μ s < ennreal.top → integrable_on g s μ)\n    (hfg_eq :\n      ∀ s : Set α,\n        (measurable_set_of m) s →\n          μ s < ennreal.top →\n            «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n                (f x) μ =\n              «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\"\n                s (g x) μ)\n    (hfm : ae_strongly_measurable' m f μ) (hgm : ae_strongly_measurable' m g μ) : «expr =ᵐ[ ] » f μ g :=\n  by\n  rw [← ae_eq_trim_iff_of_ae_strongly_measurable' hm hfm hgm]\n  have hf_mk_int_finite :\n    ∀ s, (measurable_set_of m) s → μ.trim hm s < ennreal.top → @integrable_on _ _ m _ (hfm.mk f) s (μ.trim hm) :=\n    by\n    intro s hs hμs\n    rw [trim_measurable_set_eq hm hs] at hμs\n    rw [integrable_on, restrict_trim hm _ hs]\n    refine' integrable.trim hm _ hfm.strongly_measurable_mk\n    exact integrable.congr (hf_int_finite s hs hμs) (ae_restrict_of_ae hfm.ae_eq_mk)\n  have hg_mk_int_finite :\n    ∀ s, (measurable_set_of m) s → μ.trim hm s < ennreal.top → @integrable_on _ _ m _ (hgm.mk g) s (μ.trim hm) :=\n    by\n    intro s hs hμs\n    rw [trim_measurable_set_eq hm hs] at hμs\n    rw [integrable_on, restrict_trim hm _ hs]\n    refine' integrable.trim hm _ hgm.strongly_measurable_mk\n    exact integrable.congr (hg_int_finite s hs hμs) (ae_restrict_of_ae hgm.ae_eq_mk)\n  have hfg_mk_eq :\n    ∀ s : Set α,\n      (measurable_set_of m) s →\n        μ.trim hm s < ennreal.top →\n          «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n              (hfm.mk f x) (μ.trim hm) =\n            «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n              (hgm.mk g x) (μ.trim hm) :=\n    by\n    intro s hs hμs\n    rw [trim_measurable_set_eq hm hs] at hμs\n    rw [restrict_trim hm _ hs, ← integral_trim hm hfm.strongly_measurable_mk, ←\n      integral_trim hm hgm.strongly_measurable_mk, integral_congr_ae (ae_restrict_of_ae hfm.ae_eq_mk.symm),\n      integral_congr_ae (ae_restrict_of_ae hgm.ae_eq_mk.symm)]\n    exact hfg_eq s hs hμs\n  exact ae_eq_of_forall_set_integral_eq_of_sigma_finite hf_mk_int_finite hg_mk_int_finite hfg_mk_eq\n#align ae_eq_of_forall_set_integral_eq_of_sigma_finite' ae_eq_of_forall_set_integral_eq_of_sigma_finite'\n\n",
 "ae_eq_of_forall_set_integral_eq'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- **Uniqueness of the conditional expectation** -/\ntheorem Lp.ae_eq_of_forall_set_integral_eq' (hm : m ≤ m0) (f g : Lp E' p μ) (hp_ne_zero : p ≠ 0)\n    (hp_ne_top : p ≠ ennreal.top)\n    (hf_int_finite : ∀ s, (measurable_set_of m) s → μ s < ennreal.top → integrable_on f s μ)\n    (hg_int_finite : ∀ s, (measurable_set_of m) s → μ s < ennreal.top → integrable_on g s μ)\n    (hfg :\n      ∀ s : Set α,\n        (measurable_set_of m) s →\n          μ s < ennreal.top →\n            «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n                (f x) μ =\n              «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\"\n                s (g x) μ)\n    (hf_meas : ae_strongly_measurable' m f μ) (hg_meas : ae_strongly_measurable' m g μ) : «expr =ᵐ[ ] » f μ g :=\n  by\n  suffices h_sub : «expr =ᵐ[ ] » («expr⇑ » (f - g)) μ 0\n  · rw [← sub_ae_eq_zero]\n    exact (Lp.coe_fn_sub f g).symm.trans h_sub\n  have hfg' :\n    ∀ s : Set α,\n      (measurable_set_of m) s →\n        μ s < ennreal.top →\n          «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n              ((f - g) x) μ =\n            0 :=\n    by\n    intro s hs hμs\n    rw [integral_congr_ae (ae_restrict_of_ae (Lp.coe_fn_sub f g))]\n    rw [integral_sub' (hf_int_finite s hs hμs) (hg_int_finite s hs hμs)]\n    exact sub_eq_zero.mpr (hfg s hs hμs)\n  have hfg_int : ∀ s, (measurable_set_of m) s → μ s < ennreal.top → integrable_on («expr⇑ » (f - g)) s μ :=\n    by\n    intro s hs hμs\n    rw [integrable_on, integrable_congr (ae_restrict_of_ae (Lp.coe_fn_sub f g))]\n    exact (hf_int_finite s hs hμs).sub (hg_int_finite s hs hμs)\n  have hfg_meas : ae_strongly_measurable' m («expr⇑ » (f - g)) μ :=\n    ae_strongly_measurable'.congr (hf_meas.sub hg_meas) (Lp.coe_fn_sub f g).symm\n  exact Lp.ae_eq_zero_of_forall_set_integral_eq_zero' 𝕜 hm (f - g) hp_ne_zero hp_ne_top hfg_int hfg' hfg_meas\n#align Lp.ae_eq_of_forall_set_integral_eq' Lp.ae_eq_of_forall_set_integral_eq'\n\n",
 "ae_eq_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_mk {f : α → β} (hfm : ae_strongly_measurable' m f μ) : «expr =ᵐ[ ] » f μ (hfm.mk f) :=\n  hfm.some_spec.2\n#align ae_eq_mk ae_eq_mk\n\n",
 "ae_eq_condexp_of_forall_set_integral_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/-- **Uniqueness of the conditional expectation**\nIf a function is a.e. `m`-measurable, verifies an integrability condition and has same integral\nas `f` on all `m`-measurable sets, then it is a.e. equal to `μ[f|hm]`. -/\ntheorem ae_eq_condexp_of_forall_set_integral_eq (hm : m ≤ m0) [SigmaFinite (μ.trim hm)] {f g : α → F'}\n    (hf : integrable f μ) (hg_int_finite : ∀ s, (measurable_set_of m) s → μ s < ennreal.top → integrable_on g s μ)\n    (hg_eq :\n      ∀ s : Set α,\n        (measurable_set_of m) s →\n          μ s < ennreal.top →\n            «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" s\n                (g x) μ =\n              «expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\"\n                s (f x) μ)\n    (hgm : ae_strongly_measurable' m g μ) : «expr =ᵐ[ ] » g μ (measure_theory.condexp μ f m) :=\n  by\n  refine'\n    ae_eq_of_forall_set_integral_eq_of_sigma_finite' hm hg_int_finite (fun s hs hμs => integrable_condexp.integrable_on)\n      (fun s hs hμs => _) hgm (strongly_measurable.ae_strongly_measurable' strongly_measurable_condexp)\n  rw [hg_eq s hs hμs, set_integral_condexp hm hf hs]\n#align ae_eq_condexp_of_forall_set_integral_eq ae_eq_condexp_of_forall_set_integral_eq\n\n",
 "add":
 "theorem add [Add β] [ContinuousAdd β] (hf : ae_strongly_measurable' m f μ) (hg : ae_strongly_measurable' m g μ) :\n    ae_strongly_measurable' m (f + g) μ :=\n  by\n  rcases hf with ⟨f', h_f'_meas, hff'⟩\n  rcases hg with ⟨g', h_g'_meas, hgg'⟩\n  exact ⟨f' + g', h_f'_meas.add h_g'_meas, hff'.add hgg'⟩\n#align add add\n\n",
 "Lp_trim_to_Lp_meas_subgroup_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem Lp_trim_to_Lp_meas_subgroup_ae_eq (hm : m ≤ m0) (f : Lp F p (μ.trim hm)) :\n    «expr =ᵐ[ ] » (Lp_trim_to_Lp_meas_subgroup F p μ hm f) μ f :=\n  mem_ℒp.coe_fn_to_Lp _\n#align Lp_trim_to_Lp_meas_subgroup_ae_eq Lp_trim_to_Lp_meas_subgroup_ae_eq\n\n",
 "Lp_trim_to_Lp_meas_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem Lp_trim_to_Lp_meas_ae_eq (hm : m ≤ m0) (f : Lp F p (μ.trim hm)) :\n    «expr =ᵐ[ ] » (Lp_trim_to_Lp_meas F 𝕜 p μ hm f) μ f :=\n  mem_ℒp.coe_fn_to_Lp _\n#align Lp_trim_to_Lp_meas_ae_eq Lp_trim_to_Lp_meas_ae_eq\n\n",
 "Lp_meas_to_Lp_trim_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem Lp_meas_to_Lp_trim_smul (hm : m ≤ m0) (c : 𝕜) (f : Lp_meas F 𝕜 m p μ) :\n    Lp_meas_to_Lp_trim F 𝕜 p μ hm («expr • » c f) = «expr • » c (Lp_meas_to_Lp_trim F 𝕜 p μ hm f) :=\n  by\n  ext1\n  refine' eventually_eq.trans _ (Lp.coe_fn_smul _ _).symm\n  refine' ae_eq_trim_of_strongly_measurable hm (Lp.strongly_measurable _) _ _\n  · exact (Lp.strongly_measurable _).const_smul c\n  refine' (Lp_meas_to_Lp_trim_ae_eq hm _).trans _\n  refine' (Lp.coe_fn_smul _ _).trans _\n  refine' (Lp_meas_to_Lp_trim_ae_eq hm f).mono fun x hx => _\n  rw [Pi.smul_apply, Pi.smul_apply, hx]\n  rfl\n#align Lp_meas_to_Lp_trim_smul Lp_meas_to_Lp_trim_smul\n\n",
 "Lp_meas_to_Lp_trim_lie_symm_to_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem Lp_meas_to_Lp_trim_lie_symm_to_Lp [one_le_p : Fact (1 ≤ p)] [NormedSpace (exprℝ) F] (hm : m ≤ m0) (f : α → F)\n    (hf : mem_ℒp f p (μ.trim hm)) :\n    ((Lp_meas_to_Lp_trim_lie F (exprℝ) p μ hm).symm (hf.to_Lp f) : Lp F p μ) = (mem_ℒp_of_mem_ℒp_trim hm hf).to_Lp f :=\n  by\n  ext1\n  rw [← Lp_meas_coe]\n  refine' (Lp_trim_to_Lp_meas_ae_eq hm _).trans _\n  exact (ae_eq_of_ae_eq_trim (mem_ℒp.coe_fn_to_Lp hf)).trans (mem_ℒp.coe_fn_to_Lp _).symm\n#align Lp_meas_to_Lp_trim_lie_symm_to_Lp Lp_meas_to_Lp_trim_lie_symm_to_Lp\n\n",
 "Lp_meas_to_Lp_trim_lie_symm_indicator":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- When applying the inverse of `Lp_meas_to_Lp_trim_lie` (which takes a function in the Lp space of\nthe sub-sigma algebra and returns its version in the larger Lp space) to an indicator of the\nsub-sigma-algebra, we obtain an indicator in the Lp space of the larger sigma-algebra. -/\ntheorem Lp_meas_to_Lp_trim_lie_symm_indicator [one_le_p : Fact (1 ≤ p)] [NormedSpace (exprℝ) F] {hm : m ≤ m0}\n    {s : Set α} {μ : Measure α} (hs : (measurable_set_of m) s) (hμs : μ.trim hm s ≠ ennreal.top) (c : F) :\n    ((Lp_meas_to_Lp_trim_lie F (exprℝ) p μ hm).symm (indicator_const_Lp p hs hμs c) : Lp F p μ) =\n      indicator_const_Lp p (hm s hs) ((le_trim hm).trans_lt hμs.lt_top).ne c :=\n  by\n  ext1\n  rw [← Lp_meas_coe]\n  change\n    «expr =ᵐ[ ] » (Lp_trim_to_Lp_meas F (exprℝ) p μ hm (indicator_const_Lp p hs hμs c)) μ\n      (indicator_const_Lp p _ _ c : α → F)\n  refine' (Lp_trim_to_Lp_meas_ae_eq hm _).trans _\n  exact (ae_eq_of_ae_eq_trim indicator_const_Lp_coe_fn).trans indicator_const_Lp_coe_fn.symm\n#align Lp_meas_to_Lp_trim_lie_symm_indicator Lp_meas_to_Lp_trim_lie_symm_indicator\n\n",
 "Lp_meas_to_Lp_trim_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem Lp_meas_to_Lp_trim_ae_eq (hm : m ≤ m0) (f : Lp_meas F 𝕜 m p μ) :\n    «expr =ᵐ[ ] » (Lp_meas_to_Lp_trim F 𝕜 p μ hm f) μ f :=\n  (ae_eq_of_ae_eq_trim (mem_ℒp.coe_fn_to_Lp (mem_ℒp_trim_of_mem_Lp_meas_subgroup hm (↑f) f.mem))).trans\n    (mem_Lp_meas_subgroup_iff_ae_strongly_measurable'.mp f.mem).some_spec.2.symm\n#align Lp_meas_to_Lp_trim_ae_eq Lp_meas_to_Lp_trim_ae_eq\n\n",
 "Lp_meas_subgroup_to_Lp_trim_sub":
 "theorem Lp_meas_subgroup_to_Lp_trim_sub (hm : m ≤ m0) (f g : Lp_meas_subgroup F m p μ) :\n    Lp_meas_subgroup_to_Lp_trim F p μ hm (f - g) =\n      Lp_meas_subgroup_to_Lp_trim F p μ hm f - Lp_meas_subgroup_to_Lp_trim F p μ hm g :=\n  by rw [sub_eq_add_neg, sub_eq_add_neg, Lp_meas_subgroup_to_Lp_trim_add, Lp_meas_subgroup_to_Lp_trim_neg]\n#align Lp_meas_subgroup_to_Lp_trim_sub Lp_meas_subgroup_to_Lp_trim_sub\n\n",
 "Lp_meas_subgroup_to_Lp_trim_right_inv":
 "/-- `Lp_trim_to_Lp_meas_subgroup` is a right inverse of `Lp_meas_subgroup_to_Lp_trim`. -/\ntheorem Lp_meas_subgroup_to_Lp_trim_right_inv (hm : m ≤ m0) :\n    function.right_inverse (Lp_trim_to_Lp_meas_subgroup F p μ hm) (Lp_meas_subgroup_to_Lp_trim F p μ hm) :=\n  by\n  intro f\n  ext1\n  refine' ae_eq_trim_of_strongly_measurable hm (Lp.strongly_measurable _) (Lp.strongly_measurable _) _\n  exact (Lp_meas_subgroup_to_Lp_trim_ae_eq hm _).trans (Lp_trim_to_Lp_meas_subgroup_ae_eq hm _)\n#align Lp_meas_subgroup_to_Lp_trim_right_inv Lp_meas_subgroup_to_Lp_trim_right_inv\n\n",
 "Lp_meas_subgroup_to_Lp_trim_norm_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- `Lp_meas_subgroup_to_Lp_trim` preserves the norm. -/\ntheorem Lp_meas_subgroup_to_Lp_trim_norm_map [hp : Fact (1 ≤ p)] (hm : m ≤ m0) (f : Lp_meas_subgroup F m p μ) :\n    «expr‖ ‖» (Lp_meas_subgroup_to_Lp_trim F p μ hm f) = «expr‖ ‖» f :=\n  by\n  rw [Lp.norm_def, snorm_trim hm (Lp.strongly_measurable _), snorm_congr_ae (Lp_meas_subgroup_to_Lp_trim_ae_eq hm _),\n    Lp_meas_subgroup_coe, ← Lp.norm_def]\n  congr\n#align Lp_meas_subgroup_to_Lp_trim_norm_map Lp_meas_subgroup_to_Lp_trim_norm_map\n\n",
 "Lp_meas_subgroup_to_Lp_trim_neg":
 "theorem Lp_meas_subgroup_to_Lp_trim_neg (hm : m ≤ m0) (f : Lp_meas_subgroup F m p μ) :\n    Lp_meas_subgroup_to_Lp_trim F p μ hm (-f) = -Lp_meas_subgroup_to_Lp_trim F p μ hm f :=\n  by\n  ext1\n  refine' eventually_eq.trans _ (Lp.coe_fn_neg _).symm\n  refine' ae_eq_trim_of_strongly_measurable hm (Lp.strongly_measurable _) _ _\n  · exact @strongly_measurable.neg _ _ _ m _ _ _ (Lp.strongly_measurable _)\n  refine' (Lp_meas_subgroup_to_Lp_trim_ae_eq hm _).trans _\n  refine' eventually_eq.trans _ (eventually_eq.neg (Lp_meas_subgroup_to_Lp_trim_ae_eq hm f).symm)\n  refine' (Lp.coe_fn_neg _).trans _\n  simp_rw [Lp_meas_subgroup_coe]\n  exact eventually_of_forall fun x => by rfl\n#align Lp_meas_subgroup_to_Lp_trim_neg Lp_meas_subgroup_to_Lp_trim_neg\n\n",
 "Lp_meas_subgroup_to_Lp_trim_left_inv":
 "/-- `Lp_trim_to_Lp_meas_subgroup` is a left inverse of `Lp_meas_subgroup_to_Lp_trim`. -/\ntheorem Lp_meas_subgroup_to_Lp_trim_left_inv (hm : m ≤ m0) :\n    function.left_inverse (Lp_trim_to_Lp_meas_subgroup F p μ hm) (Lp_meas_subgroup_to_Lp_trim F p μ hm) :=\n  by\n  intro f\n  ext1\n  ext1\n  rw [← Lp_meas_subgroup_coe]\n  exact (Lp_trim_to_Lp_meas_subgroup_ae_eq hm _).trans (Lp_meas_subgroup_to_Lp_trim_ae_eq hm _)\n#align Lp_meas_subgroup_to_Lp_trim_left_inv Lp_meas_subgroup_to_Lp_trim_left_inv\n\n",
 "Lp_meas_subgroup_to_Lp_trim_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem Lp_meas_subgroup_to_Lp_trim_ae_eq (hm : m ≤ m0) (f : Lp_meas_subgroup F m p μ) :\n    «expr =ᵐ[ ] » (Lp_meas_subgroup_to_Lp_trim F p μ hm f) μ f :=\n  (ae_eq_of_ae_eq_trim (mem_ℒp.coe_fn_to_Lp (mem_ℒp_trim_of_mem_Lp_meas_subgroup hm (↑f) f.mem))).trans\n    (mem_Lp_meas_subgroup_iff_ae_strongly_measurable'.mp f.mem).some_spec.2.symm\n#align Lp_meas_subgroup_to_Lp_trim_ae_eq Lp_meas_subgroup_to_Lp_trim_ae_eq\n\n",
 "Lp_meas_subgroup_to_Lp_trim_add":
 "theorem Lp_meas_subgroup_to_Lp_trim_add (hm : m ≤ m0) (f g : Lp_meas_subgroup F m p μ) :\n    Lp_meas_subgroup_to_Lp_trim F p μ hm (f + g) =\n      Lp_meas_subgroup_to_Lp_trim F p μ hm f + Lp_meas_subgroup_to_Lp_trim F p μ hm g :=\n  by\n  ext1\n  refine' eventually_eq.trans _ (Lp.coe_fn_add _ _).symm\n  refine' ae_eq_trim_of_strongly_measurable hm (Lp.strongly_measurable _) _ _\n  · exact (Lp.strongly_measurable _).add (Lp.strongly_measurable _)\n  refine' (Lp_meas_subgroup_to_Lp_trim_ae_eq hm _).trans _\n  refine'\n    eventually_eq.trans _\n      (eventually_eq.add (Lp_meas_subgroup_to_Lp_trim_ae_eq hm f).symm (Lp_meas_subgroup_to_Lp_trim_ae_eq hm g).symm)\n  refine' (Lp.coe_fn_add _ _).trans _\n  simp_rw [Lp_meas_subgroup_coe]\n  exact eventually_of_forall fun x => by rfl\n#align Lp_meas_subgroup_to_Lp_trim_add Lp_meas_subgroup_to_Lp_trim_add\n\n",
 "Lp_meas_subgroup_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem Lp_meas_subgroup_coe {m m0 : MeasurableSpace α} {μ : Measure α} {f : Lp_meas_subgroup F m p μ} :\n    «expr⇑ » f = (f : Lp F p μ) :=\n  coe_fn_coe_base f\n#align Lp_meas_subgroup_coe Lp_meas_subgroup_coe\n\n",
 "Lp_meas_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem Lp_meas_coe {m m0 : MeasurableSpace α} {μ : Measure α} {f : Lp_meas F 𝕜 m p μ} : «expr⇑ » f = (f : Lp F p μ) :=\n  coe_fn_coe_base f\n#align Lp_meas_coe Lp_meas_coe\n\n"}