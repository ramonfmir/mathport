{"meas_lt_ess_inf":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\ntheorem meas_lt_ess_inf\n    (hf : IsBoundedUnder (· ≥ ·) μ.ae f := by\n      run_tac\n        is_bounded_default) :\n    μ { y | f y < ess_inf f μ } = 0 := by\n  simp_rw [← not_le]\n  exact ae_ess_inf_le hf\n#align meas_lt_ess_inf meas_lt_ess_inf\n\n",
 "meas_ess_sup_lt":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\ntheorem meas_ess_sup_lt\n    (hf : IsBoundedUnder (· ≤ ·) μ.ae f := by\n      run_tac\n        is_bounded_default) :\n    μ { y | ess_sup f μ < f y } = 0 := by\n  simp_rw [← not_le]\n  exact ae_le_ess_sup hf\n#align meas_ess_sup_lt meas_ess_sup_lt\n\n",
 "le_ess_inf_of_ae_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem le_ess_inf_of_ae_le {f : α → β} (c : β) (hf : «expr ≤ᵐ[ ] » (fun _ => c) μ f) : c ≤ ess_inf f μ :=\n  @ess_sup_le_of_ae_le α («expr ᵒᵈ» β) _ _ _ _ c hf\n#align le_ess_inf_of_ae_le le_ess_inf_of_ae_le\n\n",
 "ess_sup_smul_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem ess_sup_smul_measure {f : α → β} {c : ennreal} (hc : c ≠ 0) : ess_sup f («expr • » c μ) = ess_sup f μ :=\n  by\n  simp_rw [ess_sup]\n  suffices h_smul : («expr • » c μ).ae = μ.ae; · rw [h_smul]\n  ext1\n  simp_rw [mem_ae_iff]\n  simp [hc]\n#align ess_sup_smul_measure ess_sup_smul_measure\n\n",
 "ess_sup_mul_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem ess_sup_mul_le (f g : α → ennreal) : ess_sup (f * g) μ ≤ ess_sup f μ * ess_sup g μ :=\n  limsup_mul_le f g\n#align ess_sup_mul_le ess_sup_mul_le\n\n",
 "ess_sup_mono_measure'":
 "theorem ess_sup_mono_measure' {α : Type _} {β : Type _} {m : MeasurableSpace α} {μ ν : MeasureTheory.Measure α}\n    [CompleteLattice β] {f : α → β} (hμν : ν ≤ μ) : ess_sup f ν ≤ ess_sup f μ :=\n  ess_sup_mono_measure (Measure.absolutelyContinuous_of_le hμν)\n#align ess_sup_mono_measure' ess_sup_mono_measure'\n\n",
 "ess_sup_mono_measure":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.absolutely_continuous -/\ntheorem ess_sup_mono_measure {f : α → β} (hμν : measure.absolutely_continuous ν μ) : ess_sup f ν ≤ ess_sup f μ :=\n  by\n  refine' limsup_le_limsup_of_le (measure.ae_le_iff_absolutely_continuous.mpr hμν) _ _\n  all_goals\n    run_tac\n      is_bounded_default\n#align ess_sup_mono_measure ess_sup_mono_measure\n\n",
 "ess_sup_mono_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem ess_sup_mono_ae {f g : α → β} (hfg : «expr ≤ᵐ[ ] » f μ g) : ess_sup f μ ≤ ess_sup g μ :=\n  limsup_le_limsup hfg\n#align ess_sup_mono_ae ess_sup_mono_ae\n\n",
 "ess_sup_measure_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem ess_sup_measure_zero {m : MeasurableSpace α} {f : α → β} : ess_sup f (0 : measure α) = «expr⊥» :=\n  le_bot_iff.mp (infₛ_le (by simp [Set.mem_setOf_eq, eventually_le, ae_iff]))\n#align ess_sup_measure_zero ess_sup_measure_zero\n\n",
 "ess_sup_map_measure_of_measurable":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\ntheorem ess_sup_map_measure_of_measurable (hg : Measurable g) (hf : AEMeasurable f μ) :\n    ess_sup g (Measure.map f μ) = ess_sup (g ∘ f) μ :=\n  by\n  refine' le_antisymm _ (ess_sup_comp_le_ess_sup_map_measure hf)\n  refine'\n    Limsup_le_Limsup\n      (by\n        run_tac\n          is_bounded_default)\n      (by\n        run_tac\n          is_bounded_default)\n      fun c h_le => _\n  rw [eventually_map] at h_le⊢\n  rw [ae_map_iff hf (measurable_set_le hg measurable_const)]\n  exact h_le\n#align ess_sup_map_measure_of_measurable ess_sup_map_measure_of_measurable\n\n",
 "ess_sup_map_measure":
 "theorem ess_sup_map_measure (hg : AEMeasurable g (Measure.map f μ)) (hf : AEMeasurable f μ) :\n    ess_sup g (Measure.map f μ) = ess_sup (g ∘ f) μ :=\n  by\n  rw [ess_sup_congr_ae hg.ae_eq_mk, ess_sup_map_measure_of_measurable hg.measurable_mk hf]\n  refine' ess_sup_congr_ae _\n  have h_eq := ae_of_ae_map hf hg.ae_eq_mk\n  rw [← eventually_eq] at h_eq\n  exact h_eq.symm\n#align ess_sup_map_measure ess_sup_map_measure\n\n",
 "ess_sup_liminf_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem ess_sup_liminf_le {ι} [Countable ι] [linear_order ι] (f : ι → α → ennreal) :\n    ess_sup (fun x => atTop.liminf fun n => f n x) μ ≤ atTop.liminf fun n => ess_sup (fun x => f n x) μ :=\n  by\n  simp_rw [ess_sup]\n  exact ENNReal.limsup_liminf_le_liminf_limsup fun a b => f b a\n#align ess_sup_liminf_le ess_sup_liminf_le\n\n",
 "ess_sup_le_of_ae_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem ess_sup_le_of_ae_le {f : α → β} (c : β) (hf : «expr ≤ᵐ[ ] » f μ fun _ => c) : ess_sup f μ ≤ c :=\n  by\n  refine' (ess_sup_mono_ae hf).trans _\n  by_cases hμ : μ = 0\n  · simp [hμ]\n  · rwa [ess_sup_const]\n#align ess_sup_le_of_ae_le ess_sup_le_of_ae_le\n\n",
 "ess_sup_indicator_eq_ess_sup_restrict":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem ess_sup_indicator_eq_ess_sup_restrict [Zero β] {s : Set α} {f : α → β} (hf : «expr ≤ᵐ[ ] » 0 (μ.restrict s) f)\n    (hs : MeasurableSet s) (hs_not_null : μ s ≠ 0) : ess_sup (s.indicator f) μ = ess_sup f (μ.restrict s) :=\n  by\n  refine'\n    le_antisymm _\n      (Limsup_le_Limsup_of_le (map_restrict_ae_le_map_indicator_ae hs)\n        (by\n          run_tac\n            is_bounded_default)\n        (by\n          run_tac\n            is_bounded_default))\n  refine'\n    Limsup_le_Limsup\n      (by\n        run_tac\n          is_bounded_default)\n      (by\n        run_tac\n          is_bounded_default)\n      fun c h_restrict_le => _\n  rw [eventually_map] at h_restrict_le⊢\n  rw [ae_restrict_iff' hs] at h_restrict_le\n  have hc : 0 ≤ c := by\n    rsuffices ⟨x, hx⟩ : ∃ x, 0 ≤ f x ∧ f x ≤ c\n    exact hx.1.trans hx.2\n    refine' frequently.exists _\n    · exact μ.ae\n    rw [eventually_le, ae_restrict_iff' hs] at hf\n    have hs' :\n      «expr∃ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᵐ ∂ , »\" μ (x ∈ s) :=\n      by\n      contrapose! hs_not_null\n      rw [not_frequently, ae_iff] at hs_not_null\n      suffices { a : α | ¬a ∉ s } = s by rwa [← this]\n      simp\n    refine' hs'.mp (hf.mp (h_restrict_le.mono fun x hxs_imp_c hxf_nonneg hxs => _))\n    rw [Pi.zero_apply] at hxf_nonneg\n    exact ⟨hxf_nonneg hxs, hxs_imp_c hxs⟩\n  refine' h_restrict_le.mono fun x hxc => _\n  by_cases hxs : x ∈ s\n  · simpa [hxs] using hxc hxs\n  · simpa [hxs] using hc\n#align ess_sup_indicator_eq_ess_sup_restrict ess_sup_indicator_eq_ess_sup_restrict\n\n",
 "ess_sup_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n@[simp]\ntheorem ess_sup_eq_zero_iff : ess_sup f μ = 0 ↔ «expr =ᵐ[ ] » f μ 0 :=\n  limsup_eq_zero_iff\n#align ess_sup_eq_zero_iff ess_sup_eq_zero_iff\n\n",
 "ess_sup_eq_Inf":
 "theorem ess_sup_eq_Inf {m : MeasurableSpace α} (μ : measure α) (f : α → β) :\n    ess_sup f μ = infₛ { a | μ { x | a < f x } = 0 } :=\n  by\n  dsimp [ess_sup, limsup, Limsup]\n  simp only [ae_iff, not_le]\n#align ess_sup_eq_Inf ess_sup_eq_Inf\n\n",
 "ess_sup_const_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem ess_sup_const_mul {a : ennreal} : ess_sup (fun x : α => a * f x) μ = a * ess_sup f μ :=\n  limsup_const_mul\n#align ess_sup_const_mul ess_sup_const_mul\n\n",
 "ess_sup_const_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem ess_sup_const_bot : ess_sup (fun x : α => («expr⊥» : β)) μ = («expr⊥» : β) :=\n  limsup_const_bot\n#align ess_sup_const_bot ess_sup_const_bot\n\n",
 "ess_sup_const'":
 "@[simp]\ntheorem ess_sup_const' [μ.ae.ne_bot] (c : β) : ess_sup (fun x : α => c) μ = c :=\n  limsup_const _\n#align ess_sup_const' ess_sup_const'\n\n",
 "ess_sup_const":
 "theorem ess_sup_const (c : β) (hμ : μ ≠ 0) : ess_sup (fun x : α => c) μ = c :=\n  by\n  rw [← ae_ne_bot] at hμ\n  exact ess_sup_const' _\n#align ess_sup_const ess_sup_const\n\n",
 "ess_sup_congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-\nCopyright (c) 2021 Rémy Degenne. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Rémy Degenne\n-/\ntheorem ess_sup_congr_ae {f g : α → β} (hfg : «expr =ᵐ[ ] » f μ g) : ess_sup f μ = ess_sup g μ :=\n  limsup_congr hfg\n#align ess_sup_congr_ae ess_sup_congr_ae\n\n",
 "ess_sup_comp_le_ess_sup_map_measure":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem ess_sup_comp_le_ess_sup_map_measure (hf : AEMeasurable f μ) : ess_sup (g ∘ f) μ ≤ ess_sup g (Measure.map f μ) :=\n  by\n  refine'\n    Limsup_le_Limsup_of_le (fun t => _)\n      (by\n        run_tac\n          is_bounded_default)\n      (by\n        run_tac\n          is_bounded_default)\n  simp_rw [Filter.mem_map]\n  have : «expr ⁻¹' » (g ∘ f) t = «expr ⁻¹' » f («expr ⁻¹' » g t) :=\n    by\n    ext1 x\n    simp_rw [Set.mem_preimage]\n  rw [this]\n  exact fun h => mem_ae_of_mem_ae_map hf h\n#align ess_sup_comp_le_ess_sup_map_measure ess_sup_comp_le_ess_sup_map_measure\n\n",
 "ess_sup_apply":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\ntheorem order_iso.ess_sup_apply {m : MeasurableSpace α} {γ} [CompleteLattice γ] (f : α → β) (μ : measure α)\n    (g : «expr ≃o » β γ) : g (ess_sup f μ) = ess_sup (fun x => g (f x)) μ :=\n  by\n  refine' OrderIso.limsup_apply g _ _ _ _\n  all_goals\n    run_tac\n      is_bounded_default\n#align order_iso.ess_sup_apply order_iso.ess_sup_apply\n\n",
 "ess_sup_add_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem ess_sup_add_le (f g : α → ennreal) : ess_sup (f + g) μ ≤ ess_sup f μ + ess_sup g μ :=\n  limsup_add_le f g\n#align ess_sup_add_le ess_sup_add_le\n\n",
 "ess_inf_mono_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem ess_inf_mono_ae {f g : α → β} (hfg : «expr ≤ᵐ[ ] » f μ g) : ess_inf f μ ≤ ess_inf g μ :=\n  liminf_le_liminf hfg\n#align ess_inf_mono_ae ess_inf_mono_ae\n\n",
 "ess_inf_measure_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem ess_inf_measure_zero {m : MeasurableSpace α} {f : α → β} : ess_inf f (0 : measure α) = «expr⊤» :=\n  @ess_sup_measure_zero α («expr ᵒᵈ» β) _ _ _\n#align ess_inf_measure_zero ess_inf_measure_zero\n\n",
 "ess_inf_eq_Sup":
 "theorem ess_inf_eq_Sup {m : MeasurableSpace α} (μ : measure α) (f : α → β) :\n    ess_inf f μ = supₛ { a | μ { x | f x < a } = 0 } :=\n  by\n  dsimp [ess_inf, liminf, Liminf]\n  simp only [ae_iff, not_le]\n#align ess_inf_eq_Sup ess_inf_eq_Sup\n\n",
 "ess_inf_const_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem ess_inf_const_top : ess_inf (fun x : α => («expr⊤» : β)) μ = («expr⊤» : β) :=\n  liminf_const_top\n#align ess_inf_const_top ess_inf_const_top\n\n",
 "ess_inf_const'":
 "@[simp]\ntheorem ess_inf_const' [μ.ae.ne_bot] (c : β) : ess_inf (fun x : α => c) μ = c :=\n  liminf_const _\n#align ess_inf_const' ess_inf_const'\n\n",
 "ess_inf_const":
 "theorem ess_inf_const (c : β) (hμ : μ ≠ 0) : ess_inf (fun x : α => c) μ = c :=\n  by\n  rw [← ae_ne_bot] at hμ\n  exact ess_inf_const' _\n#align ess_inf_const ess_inf_const\n\n",
 "ess_inf_congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ess_inf_congr_ae {f g : α → β} (hfg : «expr =ᵐ[ ] » f μ g) : ess_inf f μ = ess_inf g μ :=\n  @ess_sup_congr_ae α («expr ᵒᵈ» β) _ _ _ _ _ hfg\n#align ess_inf_congr_ae ess_inf_congr_ae\n\n",
 "ess_inf_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\ntheorem order_iso.ess_inf_apply {m : MeasurableSpace α} {γ} [CompleteLattice γ] (f : α → β) (μ : measure α)\n    (g : «expr ≃o » β γ) : g (ess_inf f μ) = ess_inf (fun x => g (f x)) μ :=\n  @order_iso.ess_sup_apply α («expr ᵒᵈ» β) _ _ («expr ᵒᵈ» γ) _ _ _ g.dual\n#align order_iso.ess_inf_apply order_iso.ess_inf_apply\n\n",
 "ess_inf_antitone_measure":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.absolutely_continuous -/\ntheorem ess_inf_antitone_measure {f : α → β} (hμν : measure.absolutely_continuous μ ν) : ess_inf f ν ≤ ess_inf f μ :=\n  by\n  refine' liminf_le_liminf_of_le (measure.ae_le_iff_absolutely_continuous.mpr hμν) _ _\n  all_goals\n    run_tac\n      is_bounded_default\n#align ess_inf_antitone_measure ess_inf_antitone_measure\n\n",
 "coe_ess_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem coe_ess_sup {f : α → nnreal} (hf : IsBoundedUnder (· ≤ ·) μ.ae f) :\n    (↑(ess_sup f μ) : ennreal) = ess_sup (fun x => f x) μ :=\n  (ENNReal.coe_infₛ <| hf).trans <|\n    eq_of_forall_le_iff fun r => by simp [ess_sup, limsup, Limsup, eventually_map, ENNReal.forall_ennreal]\n#align coe_ess_sup coe_ess_sup\n\n",
 "ae_lt_of_lt_ess_inf":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem ae_lt_of_lt_ess_inf (hx : x < ess_inf f μ)\n    (hf : IsBoundedUnder (· ≥ ·) μ.ae f := by\n      run_tac\n        is_bounded_default) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (x < f y) :=\n  eventually_lt_of_lt_liminf hx hf\n#align ae_lt_of_lt_ess_inf ae_lt_of_lt_ess_inf\n\n",
 "ae_lt_of_ess_sup_lt":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem ae_lt_of_ess_sup_lt (hx : ess_sup f μ < x)\n    (hf : IsBoundedUnder (· ≤ ·) μ.ae f := by\n      run_tac\n        is_bounded_default) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f y < x) :=\n  eventually_lt_of_limsup_lt hx hf\n#align ae_lt_of_ess_sup_lt ae_lt_of_ess_sup_lt\n\n",
 "ae_le_ess_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem ae_le_ess_sup (f : α → ennreal) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (f y ≤ ess_sup f μ) :=\n  eventually_le_limsup f\n#align ae_le_ess_sup ae_le_ess_sup\n\n",
 "ae_ess_inf_le":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem ae_ess_inf_le\n    (hf : IsBoundedUnder (· ≥ ·) μ.ae f := by\n      run_tac\n        is_bounded_default) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (ess_inf f μ ≤ f y) :=\n  eventually_liminf_le hf\n#align ae_ess_inf_le ae_ess_inf_le\n\n"}