{"zero_mem_ℒp'":
 "theorem zero_mem_ℒp' : mem_ℒp (fun x : α => (0 : E)) p μ := by convert zero_mem_ℒp\n#align zero_mem_ℒp' zero_mem_ℒp'\n\n",
 "zero_mem_ℒp":
 "theorem zero_mem_ℒp : mem_ℒp (0 : α → E) p μ :=\n  ⟨ae_strongly_measurable_zero, by\n    rw [snorm_zero]\n    exact ennreal.coe_lt_top⟩\n#align zero_mem_ℒp zero_mem_ℒp\n\n",
 "tsum_nnnorm_sub_ae_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\nprivate theorem tsum_nnnorm_sub_ae_lt_top {f : ℕ → α → E} (hf : ∀ n, ae_strongly_measurable (f n) μ) {p : exprℝ}\n    (hp1 : 1 ≤ p) {B : ℕ → ennreal}\n    (hB :\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ≠\n        ennreal.top)\n    (h :\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            ((«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n                  («expr‖ ‖₊» (f (i + 1) a - f i a)) :\n                ennreal) ^\n              p)\n            μ ^\n          (1 / p) ≤\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i)) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      ((«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n            («expr‖ ‖₊» (f (i + 1) x - f i x)) :\n          ennreal) <\n        ennreal.top) :=\n  by\n  have hp_pos : 0 < p := zero_lt_one.trans_le hp1\n  have h_integral :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        ((«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n              («expr‖ ‖₊» (f (i + 1) a - f i a)) :\n            ennreal) ^\n          p)\n        μ <\n      ennreal.top :=\n    by\n    have h_tsum_lt_top :\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ^ p <\n        ennreal.top :=\n      ennreal.rpow_lt_top_of_nonneg hp_pos.le hB\n    refine' lt_of_le_of_lt _ h_tsum_lt_top\n    rwa [← ennreal.le_rpow_one_div_iff (by simp [hp_pos] : 0 < 1 / p), one_div_one_div] at h\n  have rpow_ae_lt_top :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      ((«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n              («expr‖ ‖₊» (f (i + 1) x - f i x)) :\n            ennreal) ^\n          p <\n        ennreal.top) :=\n    by\n    refine' ae_lt_top' (ae_measurable.pow_const _ _) h_integral.ne\n    exact ae_measurable.ennreal_tsum fun n => ((hf (n + 1)).sub (hf n)).ennnorm\n  refine' rpow_ae_lt_top.mono fun x hx => _\n  rwa [← ennreal.lt_rpow_one_div_iff hp_pos, ennreal.top_rpow_of_pos (by simp [hp_pos] : 0 < 1 / p)] at hx\n#align tsum_nnnorm_sub_ae_lt_top tsum_nnnorm_sub_ae_lt_top\n\n",
 "to_Lp_zero":
 "@[simp]\ntheorem to_Lp_zero (h : mem_ℒp (0 : α → E) p μ) : h.to_Lp 0 = 0 :=\n  rfl\n#align to_Lp_zero to_Lp_zero\n\n",
 "to_Lp_sub":
 "theorem to_Lp_sub {f g : α → E} (hf : mem_ℒp f p μ) (hg : mem_ℒp g p μ) :\n    (hf.sub hg).to_Lp (f - g) = hf.to_Lp f - hg.to_Lp g :=\n  rfl\n#align to_Lp_sub to_Lp_sub\n\n",
 "to_Lp_norm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\n/-- Bound for the operator norm of `continuous_map.to_Lp`. -/\ntheorem to_Lp_norm_le :\n    «expr‖ ‖» (to_Lp p μ 𝕜 : «expr →L[ ] » («exprC( , )» α E) 𝕜 (Lp E p μ)) ≤ measure_univ_nnreal μ ^ p.to_real⁻¹ :=\n  by\n  rw [to_Lp_norm_eq_to_Lp_norm_coe]\n  exact bounded_continuous_function.to_Lp_norm_le μ\n#align to_Lp_norm_le to_Lp_norm_le\n\n",
 "to_Lp_norm_eq_to_Lp_norm_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `bounded_continuous_function -/\ntheorem to_Lp_norm_eq_to_Lp_norm_coe :\n    «expr‖ ‖» (to_Lp p μ 𝕜 : «expr →L[ ] » («exprC( , )» α E) 𝕜 (Lp E p μ)) =\n      «expr‖ ‖»\n        (bounded_continuous_function.to_Lp p μ 𝕜 : «expr →L[ ] » (bounded_continuous_function α E) 𝕜 (Lp E p μ)) :=\n  continuous_linear_map.op_norm_comp_linear_isometry_equiv _ _\n#align to_Lp_norm_eq_to_Lp_norm_coe to_Lp_norm_eq_to_Lp_norm_coe\n\n",
 "to_Lp_neg":
 "theorem to_Lp_neg {f : α → E} (hf : mem_ℒp f p μ) : hf.neg.to_Lp (-f) = -hf.to_Lp f :=\n  rfl\n#align to_Lp_neg to_Lp_neg\n\n",
 "to_Lp_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\ntheorem to_Lp_injective [μ.is_open_pos_measure] [normed_field 𝕜] [normed_space 𝕜 E] :\n    function.injective («expr⇑ » (to_Lp p μ 𝕜 : «expr →L[ ] » («exprC( , )» α E) 𝕜 (Lp E p μ))) :=\n  (bounded_continuous_function.to_Lp_injective _).comp (linear_isometry_bounded_of_compact α E 𝕜).injective\n#align to_Lp_injective to_Lp_injective\n\n",
 "to_Lp_inj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\ntheorem to_Lp_inj {f g : «exprC( , )» α E} [μ.is_open_pos_measure] [normed_field 𝕜] [normed_space 𝕜 E] :\n    to_Lp p μ 𝕜 f = to_Lp p μ 𝕜 g ↔ f = g :=\n  (to_Lp_injective μ).eq_iff\n#align to_Lp_inj to_Lp_inj\n\n",
 "to_Lp_eq_to_Lp_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n@[simp]\ntheorem to_Lp_eq_to_Lp_iff {f g : α → E} (hf : mem_ℒp f p μ) (hg : mem_ℒp g p μ) :\n    hf.to_Lp f = hg.to_Lp g ↔ «expr =ᵐ[ ] » f μ g := by simp [to_Lp]\n#align to_Lp_eq_to_Lp_iff to_Lp_eq_to_Lp_iff\n\n",
 "to_Lp_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\ntheorem to_Lp_def [normed_field 𝕜] [normed_space 𝕜 E] (f : «exprC( , )» α E) :\n    to_Lp p μ 𝕜 f = bounded_continuous_function.to_Lp p μ 𝕜 (linear_isometry_bounded_of_compact α E 𝕜 f) :=\n  rfl\n#align to_Lp_def to_Lp_def\n\n",
 "to_Lp_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem to_Lp_const_smul {f : α → E} (c : 𝕜) (hf : mem_ℒp f p μ) :\n    (hf.const_smul c).to_Lp («expr • » c f) = «expr • » c (hf.to_Lp f) :=\n  rfl\n#align to_Lp_const_smul to_Lp_const_smul\n\n",
 "to_Lp_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem to_Lp_congr {f g : α → E} (hf : mem_ℒp f p μ) (hg : mem_ℒp g p μ) (hfg : «expr =ᵐ[ ] » f μ g) :\n    hf.to_Lp f = hg.to_Lp g := by simp [to_Lp, hfg]\n#align to_Lp_congr to_Lp_congr\n\n",
 "to_Lp_comp_to_continuous_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `bounded_continuous_function -/\n@[simp]\ntheorem to_Lp_comp_to_continuous_map [normed_field 𝕜] [normed_space 𝕜 E] (f : bounded_continuous_function α E) :\n    to_Lp p μ 𝕜 f.to_continuous_map = bounded_continuous_function.to_Lp p μ 𝕜 f :=\n  rfl\n#align to_Lp_comp_to_continuous_map to_Lp_comp_to_continuous_map\n\n",
 "to_Lp_coe_fn":
 "@[simp]\ntheorem to_Lp_coe_fn (f : Lp E p μ) (hf : mem_ℒp f p μ) : hf.to_Lp f = f :=\n  by\n  cases f\n  simp [mem_ℒp.to_Lp]\n#align to_Lp_coe_fn to_Lp_coe_fn\n\n",
 "to_Lp_add":
 "theorem to_Lp_add {f g : α → E} (hf : mem_ℒp f p μ) (hg : mem_ℒp g p μ) :\n    (hf.add hg).to_Lp (f + g) = hf.to_Lp f + hg.to_Lp g :=\n  rfl\n#align to_Lp_add to_Lp_add\n\n",
 "tendsto_Lp_of_tendsto_ℒp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_Lp_of_tendsto_ℒp {ι} {fi : filter ι} [hp : fact (1 ≤ p)] {f : ι → Lp E p μ} (f_lim : α → E)\n    (f_lim_ℒp : mem_ℒp f_lim p μ) (h_tendsto : fi.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0)) :\n    fi.tendsto f ((nhds) (f_lim_ℒp.to_Lp f_lim)) :=\n  (tendsto_Lp_iff_tendsto_ℒp f f_lim f_lim_ℒp).mpr h_tendsto\n#align tendsto_Lp_of_tendsto_ℒp tendsto_Lp_of_tendsto_ℒp\n\n",
 "tendsto_Lp_iff_tendsto_ℒp''":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_Lp_iff_tendsto_ℒp'' {ι} {fi : filter ι} [fact (1 ≤ p)] (f : ι → α → E) (f_ℒp : ∀ n, mem_ℒp (f n) p μ)\n    (f_lim : α → E) (f_lim_ℒp : mem_ℒp f_lim p μ) :\n    fi.tendsto (fun n => (f_ℒp n).to_Lp (f n)) ((nhds) (f_lim_ℒp.to_Lp f_lim)) ↔\n      fi.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0) :=\n  by\n  convert Lp.tendsto_Lp_iff_tendsto_ℒp' _ _\n  ext1 n\n  apply snorm_congr_ae\n  filter_upwards [((f_ℒp n).sub f_lim_ℒp).coe_fn_to_Lp,\n    Lp.coe_fn_sub ((f_ℒp n).to_Lp (f n)) (f_lim_ℒp.to_Lp f_lim)] with _ hx₁ hx₂\n  rw [← hx₂]\n  exact hx₁.symm\n#align tendsto_Lp_iff_tendsto_ℒp'' tendsto_Lp_iff_tendsto_ℒp''\n\n",
 "tendsto_Lp_iff_tendsto_ℒp'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_Lp_iff_tendsto_ℒp' {ι} {fi : filter ι} [fact (1 ≤ p)] (f : ι → Lp E p μ) (f_lim : Lp E p μ) :\n    fi.tendsto f ((nhds) f_lim) ↔ fi.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0) :=\n  by\n  rw [tendsto_iff_dist_tendsto_zero]\n  simp_rw [dist_def]\n  rw [← ennreal.zero_to_real, ennreal.tendsto_to_real_iff (fun n => _) ennreal.zero_ne_top]\n  rw [snorm_congr_ae (Lp.coe_fn_sub _ _).symm]\n  exact Lp.snorm_ne_top _\n#align tendsto_Lp_iff_tendsto_ℒp' tendsto_Lp_iff_tendsto_ℒp'\n\n",
 "tendsto_Lp_iff_tendsto_ℒp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_Lp_iff_tendsto_ℒp {ι} {fi : filter ι} [fact (1 ≤ p)] (f : ι → Lp E p μ) (f_lim : α → E)\n    (f_lim_ℒp : mem_ℒp f_lim p μ) :\n    fi.tendsto f ((nhds) (f_lim_ℒp.to_Lp f_lim)) ↔ fi.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0) :=\n  by\n  rw [tendsto_Lp_iff_tendsto_ℒp']\n  suffices h_eq : (fun n => snorm (f n - mem_ℒp.to_Lp f_lim f_lim_ℒp) p μ) = fun n => snorm (f n - f_lim) p μ\n  · rw [h_eq]\n  exact funext fun n => snorm_congr_ae (eventually_eq.rfl.sub (mem_ℒp.coe_fn_to_Lp f_lim_ℒp))\n#align tendsto_Lp_iff_tendsto_ℒp tendsto_Lp_iff_tendsto_ℒp\n\n",
 "sub":
 "theorem mem_ℒp.sub {f g : α → E} (hf : mem_ℒp f p μ) (hg : mem_ℒp g p μ) : mem_ℒp (f - g) p μ :=\n  by\n  rw [sub_eq_add_neg]\n  exact hf.add hg.neg\n#align mem_ℒp.sub mem_ℒp.sub\n\n",
 "strongly_measurable":
 "@[measurability]\nprotected theorem strongly_measurable (f : Lp E p μ) : strongly_measurable f :=\n  f.val.strongly_measurable\n#align strongly_measurable strongly_measurable\n\n",
 "snorm_zero'":
 "@[simp]\ntheorem snorm_zero' : snorm (fun x : α => (0 : F)) p μ = 0 := by convert snorm_zero\n#align snorm_zero' snorm_zero'\n\n",
 "snorm_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem snorm_zero : snorm (0 : α → F) p μ = 0 := by\n  by_cases h0 : p = 0\n  · simp [h0]\n  by_cases h_top : p = ennreal.top\n  · simp only [h_top, snorm_exponent_top, snorm_ess_sup_zero]\n  rw [← ne.def] at h0\n  simp [snorm_eq_snorm' h0 h_top, ennreal.to_real_pos h0 h_top]\n#align snorm_zero snorm_zero\n\n",
 "snorm_trim_ae":
 "theorem snorm_trim_ae (hm : m ≤ m0) {f : α → E} (hf : ae_strongly_measurable f (ν.trim hm)) :\n    snorm f p (ν.trim hm) = snorm f p ν :=\n  by\n  rw [snorm_congr_ae hf.ae_eq_mk, snorm_congr_ae (ae_eq_of_ae_eq_trim hf.ae_eq_mk)]\n  exact snorm_trim hm hf.strongly_measurable_mk\n#align snorm_trim_ae snorm_trim_ae\n\n",
 "snorm_trim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\ntheorem snorm_trim (hm : m ≤ m0) {f : α → E} (hf : (strongly_measurable_of m) f) :\n    snorm f p (ν.trim hm) = snorm f p ν := by\n  by_cases h0 : p = 0\n  · simp [h0]\n  by_cases h_top : p = ennreal.top\n  · simpa only [h_top, snorm_exponent_top] using snorm_ess_sup_trim hm hf\n  simpa only [snorm_eq_snorm' h0 h_top] using snorm'_trim hm hf\n#align snorm_trim snorm_trim\n\n",
 "snorm_sum_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem snorm_sum_le {ι} {f : ι → α → E} {s : Finset ι} (hfs : ∀ i, i ∈ s → ae_strongly_measurable (f i) μ)\n    (hp1 : 1 ≤ p) :\n    snorm (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) p\n        μ ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (snorm (f i) p μ) :=\n  finset.le_sum_of_subadditive_on_pred (fun f : α → E => snorm f p μ) (fun f => ae_strongly_measurable f μ) snorm_zero\n    (fun f g hf hg => snorm_add_le hf hg hp1) (fun f g hf hg => hf.add hg) _ hfs\n#align snorm_sum_le snorm_sum_le\n\n",
 "snorm_sub_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm_sub_le {f g : α → E} (hf : ae_strongly_measurable f μ) (hg : ae_strongly_measurable g μ) (hp1 : 1 ≤ p) :\n    snorm (f - g) p μ ≤ snorm f p μ + snorm g p μ :=\n  calc\n    snorm (f - g) p μ = snorm (f + -g) p μ := by rw [sub_eq_add_neg]\n    -- We cannot use snorm_add_le on f and (-g) because we don't have `ae_measurable (-g) μ`, since\n        -- we don't suppose `[borel_space E]`.\n        _ =\n        snorm (fun x => «expr‖ ‖» (f x + -g x)) p μ :=\n      (snorm_norm (f + -g)).symm\n    _ ≤ snorm (fun x => «expr‖ ‖» (f x) + «expr‖ ‖» (-g x)) p μ :=\n      by\n      refine' snorm_mono_real fun x => _\n      rw [norm_norm]\n      exact norm_add_le _ _\n    _ = snorm (fun x => «expr‖ ‖» (f x) + «expr‖ ‖» (g x)) p μ := by simp_rw [norm_neg]\n    _ ≤ snorm (fun x => «expr‖ ‖» (f x)) p μ + snorm (fun x => «expr‖ ‖» (g x)) p μ := snorm_add_le hf.norm hg.norm hp1\n    _ = snorm f p μ + snorm g p μ := by rw [← snorm_norm f, ← snorm_norm g]\n    \n#align snorm_sub_le snorm_sub_le\n\n",
 "snorm_smul_measure_of_ne_zero_of_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Use `snorm_smul_measure_of_ne_top` instead. -/\nprivate theorem snorm_smul_measure_of_ne_zero_of_ne_top {p : ennreal} (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top)\n    {f : α → F} (c : ennreal) : snorm f p («expr • » c μ) = «expr • » (c ^ (1 / p).to_real) (snorm f p μ) :=\n  by\n  simp_rw [snorm_eq_snorm' hp_ne_zero hp_ne_top]\n  rw [snorm'_smul_measure ennreal.to_real_nonneg]\n  congr\n  simp_rw [one_div]\n  rw [ennreal.to_real_inv]\n#align snorm_smul_measure_of_ne_zero_of_ne_top snorm_smul_measure_of_ne_zero_of_ne_top\n\n",
 "snorm_smul_measure_of_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem snorm_smul_measure_of_ne_zero {p : ennreal} {f : α → F} {c : ennreal} (hc : c ≠ 0) :\n    snorm f p («expr • » c μ) = «expr • » (c ^ (1 / p).to_real) (snorm f p μ) :=\n  by\n  by_cases hp0 : p = 0\n  · simp [hp0]\n  by_cases hp_top : p = ennreal.top\n  · simp [hp_top, snorm_ess_sup_smul_measure hc]\n  exact snorm_smul_measure_of_ne_zero_of_ne_top hp0 hp_top c\n#align snorm_smul_measure_of_ne_zero snorm_smul_measure_of_ne_zero\n\n",
 "snorm_smul_measure_of_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem snorm_smul_measure_of_ne_top {p : ennreal} (hp_ne_top : p ≠ ennreal.top) {f : α → F} (c : ennreal) :\n    snorm f p («expr • » c μ) = «expr • » (c ^ (1 / p).to_real) (snorm f p μ) :=\n  by\n  by_cases hp0 : p = 0\n  · simp [hp0]\n  · exact snorm_smul_measure_of_ne_zero_of_ne_top hp0 hp_ne_top c\n#align snorm_smul_measure_of_ne_top snorm_smul_measure_of_ne_top\n\n",
 "snorm_smul_le_snorm_top_mul_snorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_smul_le_snorm_top_mul_snorm (p : ennreal) {f : α → E} (hf : ae_strongly_measurable f μ) (φ : α → 𝕜) :\n    snorm («expr • » φ f) p μ ≤ snorm φ (ennreal.top) μ * snorm f p μ :=\n  by\n  by_cases hp_top : p = ennreal.top\n  · simp_rw [hp_top, snorm_exponent_top, snorm_ess_sup, Pi.smul_apply', nnnorm_smul, ennreal.coe_mul]\n    exact ennreal.ess_sup_mul_le _ _\n  by_cases hp_zero : p = 0\n  · simp only [hp_zero, snorm_exponent_zero, mul_zero, le_zero_iff]\n  simp_rw [snorm_eq_lintegral_rpow_nnnorm hp_zero hp_top, snorm_exponent_top, snorm_ess_sup]\n  calc\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (↑(«expr‖ ‖₊» ((«expr • » φ f) x)) ^ p.to_real) μ ^\n          (1 / p.to_real) =\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (↑(«expr‖ ‖₊» (φ x)) ^ p.to_real * ↑(«expr‖ ‖₊» (f x)) ^ p.to_real) μ ^\n          (1 / p.to_real) :=\n      by\n      congr\n      ext1 x\n      rw [Pi.smul_apply', nnnorm_smul, ennreal.coe_mul, ennreal.mul_rpow_of_nonneg _ _ ennreal.to_real_nonneg]\n    _ ≤\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (ess_sup (fun x => ↑(«expr‖ ‖₊» (φ x))) μ ^ p.to_real * ↑(«expr‖ ‖₊» (f x)) ^ p.to_real) μ ^\n          (1 / p.to_real) :=\n      by\n      refine' ennreal.rpow_le_rpow _ _\n      swap;\n      · rw [one_div_nonneg]\n        exact ennreal.to_real_nonneg\n      refine' lintegral_mono_ae _\n      filter_upwards [@ennreal.ae_le_ess_sup _ _ μ fun x => ↑(«expr‖ ‖₊» (φ x))] with x hx\n      refine' ennreal.mul_le_mul _ le_rfl\n      exact ennreal.rpow_le_rpow hx ennreal.to_real_nonneg\n    _ =\n        ess_sup (fun x => ↑(«expr‖ ‖₊» (φ x))) μ *\n          «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n              (↑(«expr‖ ‖₊» (f x)) ^ p.to_real) μ ^\n            (1 / p.to_real) :=\n      by\n      rw [lintegral_const_mul'']\n      swap; · exact hf.nnnorm.ae_measurable.coe_nnreal_ennreal.pow ae_measurable_const\n      rw [ennreal.mul_rpow_of_nonneg]\n      swap;\n      · rw [one_div_nonneg]\n        exact ennreal.to_real_nonneg\n      rw [← ennreal.rpow_mul, one_div, mul_inv_cancel, ennreal.rpow_one]\n      rw [ne.def, ennreal.to_real_eq_zero_iff, auto.not_or_eq]\n      exact ⟨hp_zero, hp_top⟩\n    \n#align snorm_smul_le_snorm_top_mul_snorm snorm_smul_le_snorm_top_mul_snorm\n\n",
 "snorm_smul_le_snorm_mul_snorm_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_smul_le_snorm_mul_snorm_top (p : ennreal) (f : α → E) {φ : α → 𝕜} (hφ : ae_strongly_measurable φ μ) :\n    snorm («expr • » φ f) p μ ≤ snorm φ p μ * snorm f (ennreal.top) μ :=\n  by\n  rw [← snorm_norm]\n  simp_rw [Pi.smul_apply', norm_smul]\n  have : (fun x => «expr‖ ‖» (φ x) * «expr‖ ‖» (f x)) = «expr • » (fun x => «expr‖ ‖» (f x)) fun x => «expr‖ ‖» (φ x) :=\n    by\n    rw [smul_eq_mul, mul_comm]\n    rfl\n  rw [this]\n  have h := snorm_smul_le_snorm_top_mul_snorm p hφ.norm fun x => «expr‖ ‖» (f x)\n  refine' h.trans_eq _\n  simp_rw [snorm_norm]\n  rw [mul_comm]\n#align snorm_smul_le_snorm_mul_snorm_top snorm_smul_le_snorm_mul_snorm_top\n\n",
 "snorm_smul_le_mul_snorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Hölder's inequality, as an inequality on the `ℒp` seminorm of a scalar product `φ • f`. -/\ntheorem snorm_smul_le_mul_snorm {p q r : ennreal} {f : α → E} (hf : ae_strongly_measurable f μ) {φ : α → 𝕜}\n    (hφ : ae_strongly_measurable φ μ) (hpqr : 1 / p = 1 / q + 1 / r) :\n    snorm («expr • » φ f) p μ ≤ snorm φ q μ * snorm f r μ :=\n  by\n  by_cases hp_zero : p = 0\n  · simp [hp_zero]\n  have hq_ne_zero : q ≠ 0 := by\n    intro hq_zero\n    simp only [hq_zero, hp_zero, one_div, ennreal.inv_zero, ennreal.top_add, ennreal.inv_eq_top] at hpqr\n    exact hpqr\n  have hr_ne_zero : r ≠ 0 := by\n    intro hr_zero\n    simp only [hr_zero, hp_zero, one_div, ennreal.inv_zero, ennreal.add_top, ennreal.inv_eq_top] at hpqr\n    exact hpqr\n  by_cases hq_top : q = ennreal.top\n  · have hpr : p = r := by simpa only [hq_top, one_div, ennreal.div_top, zero_add, inv_inj] using hpqr\n    rw [← hpr, hq_top]\n    exact snorm_smul_le_snorm_top_mul_snorm p hf φ\n  by_cases hr_top : r = ennreal.top\n  · have hpq : p = q := by simpa only [hr_top, one_div, ennreal.div_top, add_zero, inv_inj] using hpqr\n    rw [← hpq, hr_top]\n    exact snorm_smul_le_snorm_mul_snorm_top p f hφ\n  have hpq : p < q := by\n    suffices 1 / q < 1 / p by rwa [one_div, one_div, ennreal.inv_lt_inv] at this\n    rw [hpqr]\n    refine' ennreal.lt_add_right _ _\n    · simp only [hq_ne_zero, one_div, ne.def, ennreal.inv_eq_top, not_false_iff]\n    · simp only [hr_top, one_div, ne.def, ennreal.inv_eq_zero, not_false_iff]\n  rw [snorm_eq_snorm' hp_zero (hpq.trans_le le_top).ne, snorm_eq_snorm' hq_ne_zero hq_top,\n    snorm_eq_snorm' hr_ne_zero hr_top]\n  refine' snorm'_smul_le_mul_snorm' hf hφ _ _ _\n  · exact ennreal.to_real_pos hp_zero (hpq.trans_le le_top).ne\n  · exact ennreal.to_real_strict_mono hq_top hpq\n  rw [← ennreal.one_to_real, ← ennreal.to_real_div, ← ennreal.to_real_div, ← ennreal.to_real_div, hpqr,\n    ennreal.to_real_add]\n  · simp only [hq_ne_zero, one_div, ne.def, ennreal.inv_eq_top, not_false_iff]\n  · simp only [hr_ne_zero, one_div, ne.def, ennreal.inv_eq_top, not_false_iff]\n#align snorm_smul_le_mul_snorm snorm_smul_le_mul_snorm\n\n",
 "snorm_one_smul_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem snorm_one_smul_measure {f : α → F} (c : ennreal) : snorm f 1 («expr • » c μ) = c * snorm f 1 μ :=\n  by\n  rw [@snorm_smul_measure_of_ne_top _ _ _ μ _ 1 (@ennreal.coe_ne_top 1) f c]\n  simp\n#align snorm_one_smul_measure snorm_one_smul_measure\n\n",
 "snorm_one_eq_lintegral_nnnorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem snorm_one_eq_lintegral_nnnorm {f : α → F} :\n    snorm f 1 μ =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (f x)) μ :=\n  by\n  simp_rw [snorm_eq_lintegral_rpow_nnnorm one_ne_zero ennreal.coe_ne_top, ennreal.one_to_real, one_div_one,\n    ennreal.rpow_one]\n#align snorm_one_eq_lintegral_nnnorm snorm_one_eq_lintegral_nnnorm\n\n",
 "snorm_one_add_measure":
 "theorem snorm_one_add_measure (f : α → F) (μ ν : measure α) : snorm f 1 (μ + ν) = snorm f 1 μ + snorm f 1 ν :=\n  by\n  simp_rw [snorm_one_eq_lintegral_nnnorm]\n  rw [lintegral_add_measure _ μ ν]\n#align snorm_one_add_measure snorm_one_add_measure\n\n",
 "snorm_norm_rpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm_norm_rpow (f : α → F) (hq_pos : 0 < q) :\n    snorm (fun x => «expr‖ ‖» (f x) ^ q) p μ = snorm f (p * ennreal.of_real q) μ ^ q :=\n  by\n  by_cases h0 : p = 0\n  · simp [h0, ennreal.zero_rpow_of_pos hq_pos]\n  by_cases hp_top : p = ennreal.top\n  · simp only [hp_top, snorm_exponent_top, ennreal.top_mul, hq_pos.not_le, ennreal.of_real_eq_zero, if_false,\n      snorm_exponent_top, snorm_ess_sup]\n    have h_rpow :\n      ess_sup (fun x : α => («expr‖ ‖₊» («expr‖ ‖» (f x) ^ q) : ennreal)) μ =\n        ess_sup (fun x : α => ↑(«expr‖ ‖₊» (f x)) ^ q) μ :=\n      by\n      congr\n      ext1 x\n      nth_rw 2 [← nnnorm_norm]\n      rw [ennreal.coe_rpow_of_nonneg _ hq_pos.le, ennreal.coe_eq_coe]\n      ext\n      push_cast\n      rw [real.norm_rpow_of_nonneg (norm_nonneg _)]\n    rw [h_rpow]\n    have h_rpow_mono := ennreal.strict_mono_rpow_of_pos hq_pos\n    have h_rpow_surj := (ennreal.rpow_left_bijective hq_pos.ne.symm).2\n    let iso := h_rpow_mono.order_iso_of_surjective _ h_rpow_surj\n    exact (iso.ess_sup_apply (fun x => («expr‖ ‖₊» (f x) : ennreal)) μ).symm\n  rw [snorm_eq_snorm' h0 hp_top, snorm_eq_snorm' _ _]\n  swap;\n  · refine' mul_ne_zero h0 _\n    rwa [ne.def, ennreal.of_real_eq_zero, not_le]\n  swap; · exact ennreal.mul_ne_top hp_top ennreal.of_real_ne_top\n  rw [ennreal.to_real_mul, ennreal.to_real_of_real hq_pos.le]\n  exact snorm'_norm_rpow f p.to_real q hq_pos\n#align snorm_norm_rpow snorm_norm_rpow\n\n",
 "snorm_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem snorm_norm (f : α → F) : snorm (fun x => «expr‖ ‖» (f x)) p μ = snorm f p μ :=\n  snorm_congr_norm_ae <| eventually_of_forall fun x => norm_norm _\n#align snorm_norm snorm_norm\n\n",
 "snorm_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem snorm_neg {f : α → F} : snorm (-f) p μ = snorm f p μ :=\n  by\n  by_cases h0 : p = 0\n  · simp [h0]\n  by_cases h_top : p = ennreal.top\n  · simp [h_top, snorm_ess_sup]\n  simp [snorm_eq_snorm' h0 h_top]\n#align snorm_neg snorm_neg\n\n",
 "snorm_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_ne_top (f : Lp E p μ) : snorm f p μ ≠ ennreal.top :=\n  (snorm_lt_top f).ne\n#align snorm_ne_top snorm_ne_top\n\n",
 "snorm_mono_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm_mono_real {f : α → F} {g : α → exprℝ} (h : ∀ x, «expr‖ ‖» (f x) ≤ g x) : snorm f p μ ≤ snorm g p μ :=\n  snorm_mono_ae_real (eventually_of_forall fun x => h x)\n#align snorm_mono_real snorm_mono_real\n\n",
 "snorm_mono_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[mono]\ntheorem snorm_mono_measure (f : α → F) (hμν : ν ≤ μ) : snorm f p ν ≤ snorm f p μ :=\n  by\n  by_cases hp0 : p = 0\n  · simp [hp0]\n  by_cases hp_top : p = ennreal.top\n  · simp [hp_top, snorm_ess_sup_mono_measure f (measure.absolutely_continuous_of_le hμν)]\n  simp_rw [snorm_eq_snorm' hp0 hp_top]\n  exact snorm'_mono_measure f hμν ennreal.to_real_nonneg\n#align snorm_mono_measure snorm_mono_measure\n\n",
 "snorm_mono_ae_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm_mono_ae_real {f : α → F} {g : α → exprℝ}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ g x)) :\n    snorm f p μ ≤ snorm g p μ :=\n  snorm_mono_ae <| h.mono fun x hx => hx.trans ((le_abs_self _).trans (real.norm_eq_abs _).symm.le)\n#align snorm_mono_ae_real snorm_mono_ae_real\n\n",
 "snorm_mono_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm_mono_ae {f : α → F} {g : α → G}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ «expr‖ ‖» (g x))) :\n    snorm f p μ ≤ snorm g p μ := by\n  simp only [snorm]\n  split_ifs\n  · exact le_rfl\n  · refine' ess_sup_mono_ae (h.mono fun x hx => _)\n    exact_mod_cast hx\n  · exact snorm'_mono_ae ennreal.to_real_nonneg h\n#align snorm_mono_ae snorm_mono_ae\n\n",
 "snorm_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm_mono {f : α → F} {g : α → G} (h : ∀ x, «expr‖ ‖» (f x) ≤ «expr‖ ‖» (g x)) : snorm f p μ ≤ snorm g p μ :=\n  snorm_mono_ae (eventually_of_forall fun x => h x)\n#align snorm_mono snorm_mono\n\n",
 "snorm_mk_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem mem_ℒp.snorm_mk_lt_top {α E : Type _} [measurable_space α] {μ : measure α} [normed_add_comm_group E]\n    {p : ennreal} {f : α → E} (hfp : mem_ℒp f p μ) : snorm (ae_eq_fun.mk f hfp.1) p μ < ennreal.top := by simp [hfp.2]\n#align mem_ℒp.snorm_mk_lt_top mem_ℒp.snorm_mk_lt_top\n\n",
 "snorm_measure_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem snorm_measure_zero {f : α → F} : snorm f p (0 : measure α) = 0 :=\n  by\n  by_cases h0 : p = 0\n  · simp [h0]\n  by_cases h_top : p = ennreal.top\n  · simp [h_top]\n  rw [← ne.def] at h0\n  simp [snorm_eq_snorm' h0 h_top, snorm', ennreal.to_real_pos h0 h_top]\n#align snorm_measure_zero snorm_measure_zero\n\n",
 "snorm_map_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem _root_.measurable_embedding.snorm_map_measure {g : β → F} (hf : measurable_embedding f) :\n    snorm g p (measure.map f μ) = snorm (g ∘ f) p μ :=\n  by\n  by_cases hp_zero : p = 0\n  · simp only [hp_zero, snorm_exponent_zero]\n  by_cases hp : p = ennreal.top\n  · simp_rw [hp, snorm_exponent_top]\n    exact hf.ess_sup_map_measure\n  · simp_rw [snorm_eq_lintegral_rpow_nnnorm hp_zero hp]\n    rw [hf.lintegral_map]\n#align measurable_embedding.snorm_map_measure measurable_embedding.snorm_map_measure\n\n",
 "snorm_lt_top_iff_lintegral_rpow_nnnorm_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_lt_top_iff_lintegral_rpow_nnnorm_lt_top {f : α → F} (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) :\n    snorm f p μ < ennreal.top ↔\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          («expr‖ ‖₊» (f a) ^ p.to_real) μ <\n        ennreal.top :=\n  ⟨lintegral_rpow_nnnorm_lt_top_of_snorm_lt_top hp_ne_zero hp_ne_top,\n    by\n    intro h\n    have hp' := ennreal.to_real_pos hp_ne_zero hp_ne_top\n    have : 0 < 1 / p.to_real := div_pos zero_lt_one hp'\n    simpa [snorm_eq_lintegral_rpow_nnnorm hp_ne_zero hp_ne_top] using\n      ennreal.rpow_lt_top_of_nonneg (le_of_lt this) (ne_of_lt h)⟩\n#align snorm_lt_top_iff_lintegral_rpow_nnnorm_lt_top snorm_lt_top_iff_lintegral_rpow_nnnorm_lt_top\n\n",
 "snorm_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_lt_top (f : Lp E p μ) : snorm f p μ < ennreal.top :=\n  f.prop\n#align snorm_lt_top snorm_lt_top\n\n",
 "snorm_lim_le_liminf_snorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem snorm_lim_le_liminf_snorm {E} [normed_add_comm_group E] {f : ℕ → α → E}\n    (hf : ∀ n, ae_strongly_measurable (f n) μ) (f_lim : α → E)\n    (h_lim :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (tendsto (fun n => f n x) at_top ((nhds) (f_lim x)))) :\n    snorm f_lim p μ ≤ at_top.liminf fun n => snorm (f n) p μ :=\n  by\n  by_cases hp0 : p = 0\n  · simp [hp0]\n  rw [← ne.def] at hp0\n  by_cases hp_top : p = ennreal.top\n  · simp_rw [hp_top]\n    exact snorm_exponent_top_lim_le_liminf_snorm_exponent_top h_lim\n  simp_rw [snorm_eq_snorm' hp0 hp_top]\n  have hp_pos : 0 < p.to_real := ennreal.to_real_pos hp0 hp_top\n  exact snorm'_lim_le_liminf_snorm' hp_pos hf h_lim\n#align snorm_lim_le_liminf_snorm snorm_lim_le_liminf_snorm\n\n",
 "snorm_le_snorm_of_exponent_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_le_snorm_of_exponent_le {p q : ennreal} (hpq : p ≤ q) [is_probability_measure μ] {f : α → E}\n    (hf : ae_strongly_measurable f μ) : snorm f p μ ≤ snorm f q μ :=\n  (snorm_le_snorm_mul_rpow_measure_univ hpq hf).trans (le_of_eq (by simp [measure_univ]))\n#align snorm_le_snorm_of_exponent_le snorm_le_snorm_of_exponent_le\n\n",
 "snorm_le_snorm_mul_rpow_measure_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_le_snorm_mul_rpow_measure_univ {p q : ennreal} (hpq : p ≤ q) {f : α → E}\n    (hf : ae_strongly_measurable f μ) : snorm f p μ ≤ snorm f q μ * μ Set.univ ^ (1 / p.to_real - 1 / q.to_real) :=\n  by\n  by_cases hp0 : p = 0\n  · simp [hp0, zero_le]\n  rw [← ne.def] at hp0\n  have hp0_lt : 0 < p := lt_of_le_of_ne (zero_le _) hp0.symm\n  have hq0_lt : 0 < q := lt_of_lt_of_le hp0_lt hpq\n  by_cases hq_top : q = ennreal.top\n  · simp only [hq_top, div_zero, one_div, ennreal.top_to_real, sub_zero, snorm_exponent_top, inv_zero]\n    by_cases hp_top : p = ennreal.top\n    · simp only [hp_top, ennreal.rpow_zero, mul_one, ennreal.top_to_real, sub_zero, inv_zero, snorm_exponent_top]\n      exact le_rfl\n    rw [snorm_eq_snorm' hp0 hp_top]\n    have hp_pos : 0 < p.to_real := ennreal.to_real_pos hp0_lt.ne' hp_top\n    refine' (snorm'_le_snorm_ess_sup_mul_rpow_measure_univ hp_pos).trans (le_of_eq _)\n    congr\n    exact one_div _\n  have hp_lt_top : p < ennreal.top := hpq.trans_lt (lt_top_iff_ne_top.mpr hq_top)\n  have hp_pos : 0 < p.to_real := ennreal.to_real_pos hp0_lt.ne' hp_lt_top.ne\n  rw [snorm_eq_snorm' hp0_lt.ne.symm hp_lt_top.ne, snorm_eq_snorm' hq0_lt.ne.symm hq_top]\n  have hpq_real : p.to_real ≤ q.to_real := by rwa [ennreal.to_real_le_to_real hp_lt_top.ne hq_top]\n  exact snorm'_le_snorm'_mul_rpow_measure_univ hp_pos hpq_real hf\n#align snorm_le_snorm_mul_rpow_measure_univ snorm_le_snorm_mul_rpow_measure_univ\n\n",
 "snorm_le_of_ae_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm_le_of_ae_bound {f : α → F} {C : exprℝ}\n    (hfC :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ C)) :\n    snorm f p μ ≤ μ Set.univ ^ p.to_real⁻¹ * ennreal.of_real C :=\n  by\n  by_cases hμ : μ = 0\n  · simp [hμ]\n  haveI : μ.ae.ne_bot := ae_ne_bot.mpr hμ\n  by_cases hp : p = 0\n  · simp [hp]\n  have hC : 0 ≤ C := le_trans (norm_nonneg _) hfC.exists.some_spec\n  have hC' : «expr‖ ‖» C = C := by rw [real.norm_eq_abs, abs_eq_self.mpr hC]\n  have :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      («expr‖ ‖» (f x) ≤ «expr‖ ‖» ((fun _ => C) x)) :=\n    hfC.mono fun x hx => hx.trans (le_of_eq hC'.symm)\n  convert snorm_mono_ae this\n  rw [snorm_const _ hp hμ, mul_comm, ← of_real_norm_eq_coe_nnnorm, hC', one_div]\n#align snorm_le_of_ae_bound snorm_le_of_ae_bound\n\n",
 "snorm_le_mul_snorm_of_ae_le_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_le_mul_snorm_of_ae_le_mul {f : α → F} {g : α → G} {c : exprℝ}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ c * «expr‖ ‖» (g x)))\n    (p : ennreal) : snorm f p μ ≤ ennreal.of_real c * snorm g p μ :=\n  by\n  cases' le_or_lt 0 c with hc hc\n  · exact snorm_le_mul_snorm_aux_of_nonneg h hc p\n  · simp [snorm_le_mul_snorm_aux_of_neg h hc p]\n#align snorm_le_mul_snorm_of_ae_le_mul snorm_le_mul_snorm_of_ae_le_mul\n\n",
 "snorm_le_mul_snorm_aux_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_le_mul_snorm_aux_of_nonneg {f : α → F} {g : α → G} {c : exprℝ}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ c * «expr‖ ‖» (g x)))\n    (hc : 0 ≤ c) (p : ennreal) : snorm f p μ ≤ ennreal.of_real c * snorm g p μ :=\n  by\n  lift c to nnreal using hc\n  rw [ennreal.of_real_coe_nnreal, ← c.nnnorm_eq, ← snorm_norm g, ← snorm_const_smul (c : exprℝ)]\n  swap; infer_instance\n  refine' snorm_mono_ae _\n  simpa\n#align snorm_le_mul_snorm_aux_of_nonneg snorm_le_mul_snorm_aux_of_nonneg\n\n",
 "snorm_le_mul_snorm_aux_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_le_mul_snorm_aux_of_neg {f : α → F} {g : α → G} {c : exprℝ}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ c * «expr‖ ‖» (g x)))\n    (hc : c < 0) (p : ennreal) : snorm f p μ = 0 ∧ snorm g p μ = 0 :=\n  by\n  suffices «expr =ᵐ[ ] » f μ 0 ∧ «expr =ᵐ[ ] » g μ 0 by simp [snorm_congr_ae this.1, snorm_congr_ae this.2]\n  refine' ⟨h.mono fun x hx => _, h.mono fun x hx => _⟩\n  · refine' norm_le_zero_iff.1 (hx.trans _)\n    exact mul_nonpos_of_nonpos_of_nonneg hc.le (norm_nonneg _)\n  · refine' norm_le_zero_iff.1 (nonpos_of_mul_nonneg_right _ hc)\n    exact (norm_nonneg _).trans hx\n#align snorm_le_mul_snorm_aux_of_neg snorm_le_mul_snorm_aux_of_neg\n\n",
 "snorm_le_add_measure_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_le_add_measure_right (f : α → F) (μ ν : measure α) {p : ennreal} : snorm f p μ ≤ snorm f p (μ + ν) :=\n  snorm_mono_measure f <| measure.le_add_right <| le_refl _\n#align snorm_le_add_measure_right snorm_le_add_measure_right\n\n",
 "snorm_le_add_measure_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_le_add_measure_left (f : α → F) (μ ν : measure α) {p : ennreal} : snorm f p ν ≤ snorm f p (μ + ν) :=\n  snorm_mono_measure f <| measure.le_add_left <| le_refl _\n#align snorm_le_add_measure_left snorm_le_add_measure_left\n\n",
 "snorm_indicator_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem snorm_indicator_le {E : Type _} [normed_add_comm_group E] (f : α → E) :\n    snorm (s.indicator f) p μ ≤ snorm f p μ :=\n  by\n  refine' snorm_mono_ae (eventually_of_forall fun x => _)\n  suffices «expr‖ ‖₊» (s.indicator f x) ≤ «expr‖ ‖₊» (f x) by exact nnreal.coe_mono this\n  rw [nnnorm_indicator_eq_indicator_nnnorm]\n  exact s.indicator_le_self _ x\n#align snorm_indicator_le snorm_indicator_le\n\n",
 "snorm_indicator_ge_of_bdd_below":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem snorm_indicator_ge_of_bdd_below (hp : p ≠ 0) (hp' : p ≠ ennreal.top) {f : α → F} (C : nnreal) {s : set α}\n    (hs : measurable_set s)\n    (hf :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (x ∈ s → C ≤ «expr‖ ‖₊» (s.indicator f x))) :\n    «expr • » C (μ s ^ (1 / p.to_real)) ≤ snorm (s.indicator f) p μ :=\n  by\n  rw [ennreal.smul_def, smul_eq_mul, snorm_eq_lintegral_rpow_nnnorm hp hp',\n    ennreal.le_rpow_one_div_iff (ennreal.to_real_pos hp hp'), ennreal.mul_rpow_of_nonneg _ _ ennreal.to_real_nonneg, ←\n    ennreal.rpow_mul, one_div_mul_cancel (ennreal.to_real_pos hp hp').ne.symm, ennreal.rpow_one, ← set_lintegral_const,\n    ← lintegral_indicator _ hs]\n  refine' lintegral_mono_ae _\n  filter_upwards [hf] with x hx\n  rw [nnnorm_indicator_eq_indicator_nnnorm]\n  by_cases hxs : x ∈ s\n  · simp only [set.indicator_of_mem hxs] at hx⊢\n    exact ennreal.rpow_le_rpow (ennreal.coe_le_coe.2 (hx hxs)) ennreal.to_real_nonneg\n  · simp [set.indicator_of_not_mem hxs]\n#align snorm_indicator_ge_of_bdd_below snorm_indicator_ge_of_bdd_below\n\n",
 "snorm_indicator_eq_snorm_restrict":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_indicator_eq_snorm_restrict {f : α → F} (hs : measurable_set s) :\n    snorm (s.indicator f) p μ = snorm f p (μ.restrict s) :=\n  by\n  by_cases hp_zero : p = 0\n  · simp only [hp_zero, snorm_exponent_zero]\n  by_cases hp_top : p = ennreal.top\n  · simp_rw [hp_top, snorm_exponent_top]\n    exact snorm_ess_sup_indicator_eq_snorm_ess_sup_restrict hs\n  simp_rw [snorm_eq_lintegral_rpow_nnnorm hp_zero hp_top]\n  suffices\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (s.indicator f x) ^ p.to_real) μ =\n      «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" s\n        («expr‖ ‖₊» (f x) ^ p.to_real) μ\n    by rw [this]\n  rw [← lintegral_indicator _ hs]\n  congr\n  simp_rw [nnnorm_indicator_eq_indicator_nnnorm, ennreal.coe_indicator]\n  have h_zero : (fun x => x ^ p.to_real) (0 : ennreal) = 0 := by simp [ennreal.to_real_pos hp_zero hp_top]\n  exact (set.indicator_comp_of_zero h_zero).symm\n#align snorm_indicator_eq_snorm_restrict snorm_indicator_eq_snorm_restrict\n\n",
 "snorm_indicator_const'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem snorm_indicator_const' {c : G} (hs : measurable_set s) (hμs : μ s ≠ 0) (hp : p ≠ 0) :\n    snorm (s.indicator fun _ => c) p μ = «expr‖ ‖₊» c * μ s ^ (1 / p.to_real) :=\n  by\n  by_cases hp_top : p = ennreal.top\n  · simp [hp_top, snorm_ess_sup_indicator_const_eq s c hμs]\n  · exact snorm_indicator_const hs hp hp_top\n#align snorm_indicator_const' snorm_indicator_const'\n\n",
 "snorm_indicator_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem snorm_indicator_const {c : G} (hs : measurable_set s) (hp : p ≠ 0) (hp_top : p ≠ ennreal.top) :\n    snorm (s.indicator fun x => c) p μ = «expr‖ ‖₊» c * μ s ^ (1 / p.to_real) :=\n  by\n  have hp_pos : 0 < p.to_real := ennreal.to_real_pos hp hp_top\n  rw [snorm_eq_lintegral_rpow_nnnorm hp hp_top]\n  simp_rw [nnnorm_indicator_eq_indicator_nnnorm, ennreal.coe_indicator]\n  have h_indicator_pow :\n    (fun a : α => s.indicator (fun x : α => («expr‖ ‖₊» c : ennreal)) a ^ p.to_real) =\n      s.indicator fun x : α => ↑(«expr‖ ‖₊» c) ^ p.to_real :=\n    by\n    rw [set.comp_indicator_const («expr‖ ‖₊» c : ennreal) (fun x => x ^ p.to_real) _]\n    simp [hp_pos]\n  rw [h_indicator_pow, lintegral_indicator _ hs, set_lintegral_const, ennreal.mul_rpow_of_nonneg]\n  · rw [← ennreal.rpow_mul, mul_one_div_cancel hp_pos.ne.symm, ennreal.rpow_one]\n  · simp [hp_pos.le]\n#align snorm_indicator_const snorm_indicator_const\n\n",
 "snorm_exponent_zero":
 "@[simp]\ntheorem snorm_exponent_zero {f : α → F} : snorm f 0 μ = 0 := by simp [snorm]\n#align snorm_exponent_zero snorm_exponent_zero\n\n",
 "snorm_exponent_top_lim_le_liminf_snorm_exponent_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_exponent_top_lim_le_liminf_snorm_exponent_top {ι} [nonempty ι] [countable ι] [linear_order ι]\n    {f : ι → α → F} {f_lim : α → F}\n    (h_lim :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (tendsto (fun n => f n x) at_top ((nhds) (f_lim x)))) :\n    snorm f_lim (ennreal.top) μ ≤ at_top.liminf fun n => snorm (f n) (ennreal.top) μ :=\n  by\n  rw [snorm_exponent_top_lim_eq_ess_sup_liminf h_lim]\n  simp_rw [snorm_exponent_top, snorm_ess_sup]\n  exact ennreal.ess_sup_liminf_le fun n => fun x => («expr‖ ‖₊» (f n x) : ennreal)\n#align snorm_exponent_top_lim_le_liminf_snorm_exponent_top snorm_exponent_top_lim_le_liminf_snorm_exponent_top\n\n",
 "snorm_exponent_top_lim_eq_ess_sup_liminf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_exponent_top_lim_eq_ess_sup_liminf {ι} [nonempty ι] [linear_order ι] {f : ι → α → G} {f_lim : α → G}\n    (h_lim :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (tendsto (fun n => f n x) at_top ((nhds) (f_lim x)))) :\n    snorm f_lim (ennreal.top) μ = ess_sup (fun x => at_top.liminf fun m => («expr‖ ‖₊» (f m x) : ennreal)) μ :=\n  by\n  rw [snorm_exponent_top, snorm_ess_sup]\n  refine' ess_sup_congr_ae (h_lim.mono fun x hx => _)\n  rw [tendsto.liminf_eq]\n  rw [ennreal.tendsto_coe]\n  exact (continuous_nnnorm.tendsto (f_lim x)).comp hx\n#align snorm_exponent_top_lim_eq_ess_sup_liminf snorm_exponent_top_lim_eq_ess_sup_liminf\n\n",
 "snorm_exponent_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem snorm_exponent_top {f : α → F} : snorm f (ennreal.top) μ = snorm_ess_sup f μ := by simp [snorm]\n#align snorm_exponent_top snorm_exponent_top\n\n",
 "snorm_ess_sup_zero":
 "@[simp]\ntheorem snorm_ess_sup_zero : snorm_ess_sup (0 : α → F) μ = 0 :=\n  by\n  simp_rw [snorm_ess_sup, pi.zero_apply, nnnorm_zero, ennreal.coe_zero, ← ennreal.bot_eq_zero]\n  exact ess_sup_const_bot\n#align snorm_ess_sup_zero snorm_ess_sup_zero\n\n",
 "snorm_ess_sup_trim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\ntheorem snorm_ess_sup_trim (hm : m ≤ m0) {f : α → E} (hf : (strongly_measurable_of m) f) :\n    snorm_ess_sup f (ν.trim hm) = snorm_ess_sup f ν :=\n  ess_sup_trim _ (@strongly_measurable.ennnorm _ m _ _ _ hf)\n#align snorm_ess_sup_trim snorm_ess_sup_trim\n\n",
 "snorm_ess_sup_smul_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem snorm_ess_sup_smul_measure {f : α → F} {c : ennreal} (hc : c ≠ 0) :\n    snorm_ess_sup f («expr • » c μ) = snorm_ess_sup f μ :=\n  by\n  simp_rw [snorm_ess_sup]\n  exact ess_sup_smul_measure hc\n#align snorm_ess_sup_smul_measure snorm_ess_sup_smul_measure\n\n",
 "snorm_ess_sup_mono_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.absolutely_continuous -/\n@[mono]\ntheorem snorm_ess_sup_mono_measure (f : α → F) (hμν : measure.absolutely_continuous ν μ) :\n    snorm_ess_sup f ν ≤ snorm_ess_sup f μ := by\n  simp_rw [snorm_ess_sup]\n  exact ess_sup_mono_measure hμν\n#align snorm_ess_sup_mono_measure snorm_ess_sup_mono_measure\n\n",
 "snorm_ess_sup_measure_zero":
 "@[simp]\ntheorem snorm_ess_sup_measure_zero {f : α → F} : snorm_ess_sup f (0 : measure α) = 0 := by simp [snorm_ess_sup]\n#align snorm_ess_sup_measure_zero snorm_ess_sup_measure_zero\n\n",
 "snorm_ess_sup_map_measure":
 "theorem _root_.measurable_embedding.snorm_ess_sup_map_measure {g : β → F} (hf : measurable_embedding f) :\n    snorm_ess_sup g (measure.map f μ) = snorm_ess_sup (g ∘ f) μ :=\n  hf.ess_sup_map_measure\n#align measurable_embedding.snorm_ess_sup_map_measure measurable_embedding.snorm_ess_sup_map_measure\n\n",
 "snorm_ess_sup_lt_top_of_ae_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_ess_sup_lt_top_of_ae_bound {f : α → F} {C : exprℝ}\n    (hfC :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ C)) :\n    snorm_ess_sup f μ < ennreal.top :=\n  (snorm_ess_sup_le_of_ae_bound hfC).trans_lt ennreal.of_real_lt_top\n#align snorm_ess_sup_lt_top_of_ae_bound snorm_ess_sup_lt_top_of_ae_bound\n\n",
 "snorm_ess_sup_le_of_ae_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm_ess_sup_le_of_ae_bound {f : α → F} {C : exprℝ}\n    (hfC :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ C)) :\n    snorm_ess_sup f μ ≤ ennreal.of_real C :=\n  by\n  simp_rw [snorm_ess_sup, ← of_real_norm_eq_coe_nnnorm]\n  refine' ess_sup_le_of_ae_le (ennreal.of_real C) (hfC.mono fun x hx => _)\n  exact ennreal.of_real_le_of_real hx\n#align snorm_ess_sup_le_of_ae_bound snorm_ess_sup_le_of_ae_bound\n\n",
 "snorm_ess_sup_indicator_le":
 "theorem snorm_ess_sup_indicator_le (s : set α) (f : α → G) : snorm_ess_sup (s.indicator f) μ ≤ snorm_ess_sup f μ :=\n  by\n  refine' ess_sup_mono_ae (eventually_of_forall fun x => _)\n  rw [ennreal.coe_le_coe, nnnorm_indicator_eq_indicator_nnnorm]\n  exact set.indicator_le_self s _ x\n#align snorm_ess_sup_indicator_le snorm_ess_sup_indicator_le\n\n",
 "snorm_ess_sup_indicator_eq_snorm_ess_sup_restrict":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem snorm_ess_sup_indicator_eq_snorm_ess_sup_restrict {f : α → F} (hs : measurable_set s) :\n    snorm_ess_sup (s.indicator f) μ = snorm_ess_sup f (μ.restrict s) :=\n  by\n  simp_rw [snorm_ess_sup, nnnorm_indicator_eq_indicator_nnnorm, ennreal.coe_indicator]\n  by_cases hs_null : μ s = 0\n  · rw [measure.restrict_zero_set hs_null]\n    simp only [ess_sup_measure_zero, ennreal.ess_sup_eq_zero_iff, ennreal.bot_eq_zero]\n    have hs_empty : «expr =ᵐ[ ] » s μ (∅ : set α) := by\n      rw [ae_eq_set]\n      simpa using hs_null\n    refine' (indicator_ae_eq_of_ae_eq_set hs_empty).trans _\n    rw [set.indicator_empty]\n    rfl\n  rw [ess_sup_indicator_eq_ess_sup_restrict (eventually_of_forall fun x => _) hs hs_null]\n  rw [pi.zero_apply]\n  exact zero_le _\n#align snorm_ess_sup_indicator_eq_snorm_ess_sup_restrict snorm_ess_sup_indicator_eq_snorm_ess_sup_restrict\n\n",
 "snorm_ess_sup_indicator_const_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem snorm_ess_sup_indicator_const_le (s : set α) (c : G) :\n    snorm_ess_sup (s.indicator fun x : α => c) μ ≤ «expr‖ ‖₊» c :=\n  by\n  by_cases hμ0 : μ = 0\n  · rw [hμ0, snorm_ess_sup_measure_zero]\n    exact ennreal.coe_nonneg\n  · exact (snorm_ess_sup_indicator_le s fun x => c).trans (snorm_ess_sup_const c hμ0).le\n#align snorm_ess_sup_indicator_const_le snorm_ess_sup_indicator_const_le\n\n",
 "snorm_ess_sup_indicator_const_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem snorm_ess_sup_indicator_const_eq (s : set α) (c : G) (hμs : μ s ≠ 0) :\n    snorm_ess_sup (s.indicator fun x : α => c) μ = «expr‖ ‖₊» c :=\n  by\n  refine' le_antisymm (snorm_ess_sup_indicator_const_le s c) _\n  by_contra' h\n  have h' := ae_iff.mp (ae_lt_of_ess_sup_lt h)\n  push_neg  at h'\n  refine' hμs (measure_mono_null (fun x hx_mem => _) h')\n  rw [Set.mem_setOf_eq, set.indicator_of_mem hx_mem]\n  exact le_rfl\n#align snorm_ess_sup_indicator_const_eq snorm_ess_sup_indicator_const_eq\n\n",
 "snorm_ess_sup_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n@[simp]\ntheorem snorm_ess_sup_eq_zero_iff {f : α → F} : snorm_ess_sup f μ = 0 ↔ «expr =ᵐ[ ] » f μ 0 := by\n  simp [eventually_eq, snorm_ess_sup]\n#align snorm_ess_sup_eq_zero_iff snorm_ess_sup_eq_zero_iff\n\n",
 "snorm_ess_sup_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_ess_sup_const_smul {f : α → F} (c : 𝕜) :\n    snorm_ess_sup («expr • » c f) μ = («expr‖ ‖₊» c : ennreal) * snorm_ess_sup f μ := by\n  simp_rw [snorm_ess_sup, pi.smul_apply, nnnorm_smul, ennreal.coe_mul, ennreal.ess_sup_const_mul]\n#align snorm_ess_sup_const_smul snorm_ess_sup_const_smul\n\n",
 "snorm_ess_sup_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_ess_sup_const (c : F) (hμ : μ ≠ 0) : snorm_ess_sup (fun x : α => c) μ = («expr‖ ‖₊» c : ennreal) := by\n  rw [snorm_ess_sup, ess_sup_const _ hμ]\n#align snorm_ess_sup_const snorm_ess_sup_const\n\n",
 "snorm_ess_sup_congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem snorm_ess_sup_congr_ae {f g : α → F} (hfg : «expr =ᵐ[ ] » f μ g) : snorm_ess_sup f μ = snorm_ess_sup g μ :=\n  ess_sup_congr_ae (hfg.fun_comp (coe ∘ nnnorm))\n#align snorm_ess_sup_congr_ae snorm_ess_sup_congr_ae\n\n",
 "snorm_ess_sup_add_le":
 "theorem snorm_ess_sup_add_le {f g : α → F} : snorm_ess_sup (f + g) μ ≤ snorm_ess_sup f μ + snorm_ess_sup g μ :=\n  by\n  refine' le_trans (ess_sup_mono_ae (eventually_of_forall fun x => _)) (ennreal.ess_sup_add_le _ _)\n  simp_rw [pi.add_apply, ← ennreal.coe_add, ennreal.coe_le_coe]\n  exact nnnorm_add_le _ _\n#align snorm_ess_sup_add_le snorm_ess_sup_add_le\n\n",
 "snorm_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem snorm_eq_zero_iff {f : α → E} (hf : ae_strongly_measurable f μ) (h0 : p ≠ 0) :\n    snorm f p μ = 0 ↔ «expr =ᵐ[ ] » f μ 0 :=\n  by\n  by_cases h_top : p = ennreal.top\n  · rw [h_top, snorm_exponent_top, snorm_ess_sup_eq_zero_iff]\n  rw [snorm_eq_snorm' h0 h_top]\n  exact snorm'_eq_zero_iff (ennreal.to_real_pos h0 h_top) hf\n#align snorm_eq_zero_iff snorm_eq_zero_iff\n\n",
 "snorm_eq_snorm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/-\nCopyright (c) 2020 Rémy Degenne. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Rémy Degenne, Sébastien Gouëzel\n-/\ntheorem snorm_eq_snorm' (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) {f : α → F} :\n    snorm f p μ = snorm' f (ennreal.to_real p) μ := by simp [snorm, hp_ne_zero, hp_ne_top]\n#align snorm_eq_snorm' snorm_eq_snorm'\n\n",
 "snorm_eq_lintegral_rpow_nnnorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem snorm_eq_lintegral_rpow_nnnorm (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) {f : α → F} :\n    snorm f p μ =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          («expr‖ ‖₊» (f x) ^ p.to_real) μ ^\n        (1 / p.to_real) :=\n  by rw [snorm_eq_snorm' hp_ne_zero hp_ne_top, snorm']\n#align snorm_eq_lintegral_rpow_nnnorm snorm_eq_lintegral_rpow_nnnorm\n\n",
 "snorm_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_const_smul {f : α → F} (c : 𝕜) : snorm («expr • » c f) p μ = («expr‖ ‖₊» c : ennreal) * snorm f p μ :=\n  by\n  by_cases h0 : p = 0\n  · simp [h0]\n  by_cases h_top : p = ennreal.top\n  · simp [h_top, snorm_ess_sup_const_smul]\n  repeat' rw [snorm_eq_snorm' h0 h_top]\n  rw [← ne.def] at h0\n  exact snorm'_const_smul c (ennreal.to_real_pos h0 h_top)\n#align snorm_const_smul snorm_const_smul\n\n",
 "snorm_const_lt_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_const_lt_top_iff {p : ennreal} {c : F} (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) :\n    snorm (fun x : α => c) p μ < ennreal.top ↔ c = 0 ∨ μ Set.univ < ennreal.top :=\n  by\n  have hp : 0 < p.to_real := ennreal.to_real_pos hp_ne_zero hp_ne_top\n  by_cases hμ : μ = 0\n  · simp only [hμ, measure.coe_zero, pi.zero_apply, or_true_iff, WithTop.zero_lt_top, snorm_measure_zero]\n  by_cases hc : c = 0\n  · simp only [hc, true_or_iff, eq_self_iff_true, WithTop.zero_lt_top, snorm_zero']\n  rw [snorm_const' c hp_ne_zero hp_ne_top]\n  by_cases hμ_top : μ Set.univ = ennreal.top\n  · simp [hc, hμ_top, hp]\n  rw [ennreal.mul_lt_top_iff]\n  simp only [true_and_iff, one_div, ennreal.rpow_eq_zero_iff, hμ, false_or_iff, or_false_iff, ennreal.coe_lt_top,\n    nnnorm_eq_zero, ennreal.coe_eq_zero, measure_theory.measure.measure_univ_eq_zero, hp, inv_lt_zero, hc,\n    and_false_iff, false_and_iff, _root_.inv_pos, or_self_iff, hμ_top, Ne.lt_top hμ_top, iff_true_iff]\n  exact ennreal.rpow_lt_top_of_nonneg (inv_nonneg.mpr hp.le) hμ_top\n#align snorm_const_lt_top_iff snorm_const_lt_top_iff\n\n",
 "snorm_const'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_const' (c : F) (h0 : p ≠ 0) (h_top : p ≠ ennreal.top) :\n    snorm (fun x : α => c) p μ = («expr‖ ‖₊» c : ennreal) * μ Set.univ ^ (1 / ennreal.to_real p) := by\n  simp [snorm_eq_snorm' h0 h_top, snorm'_const, ennreal.to_real_pos h0 h_top]\n#align snorm_const' snorm_const'\n\n",
 "snorm_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm_const (c : F) (h0 : p ≠ 0) (hμ : μ ≠ 0) :\n    snorm (fun x : α => c) p μ = («expr‖ ‖₊» c : ennreal) * μ Set.univ ^ (1 / ennreal.to_real p) :=\n  by\n  by_cases h_top : p = ennreal.top\n  · simp [h_top, snorm_ess_sup_const c hμ]\n  simp [snorm_eq_snorm' h0 h_top, snorm'_const, ennreal.to_real_pos h0 h_top]\n#align snorm_const snorm_const\n\n",
 "snorm_congr_norm_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm_congr_norm_ae {f : α → F} {g : α → G}\n    (hfg :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) = «expr‖ ‖» (g x))) :\n    snorm f p μ = snorm g p μ :=\n  le_antisymm (snorm_mono_ae <| eventually_eq.le hfg) (snorm_mono_ae <| (eventually_eq.symm hfg).le)\n#align snorm_congr_norm_ae snorm_congr_norm_ae\n\n",
 "snorm_congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem snorm_congr_ae {f g : α → F} (hfg : «expr =ᵐ[ ] » f μ g) : snorm f p μ = snorm g p μ :=\n  snorm_congr_norm_ae <| hfg.mono fun x hx => hx ▸ rfl\n#align snorm_congr_ae snorm_congr_ae\n\n",
 "snorm_ae_eq_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n@[simp]\ntheorem snorm_ae_eq_fun {α E : Type _} [measurable_space α] {μ : measure α} [normed_add_comm_group E] {p : ennreal}\n    {f : α → E} (hf : ae_strongly_measurable f μ) : snorm (ae_eq_fun.mk f hf) p μ = snorm f p μ :=\n  snorm_congr_ae (ae_eq_fun.coe_fn_mk _ _)\n#align snorm_ae_eq_fun snorm_ae_eq_fun\n\n",
 "snorm_add_lt_top_of_one_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_add_lt_top_of_one_le {f g : α → E} (hf : mem_ℒp f p μ) (hg : mem_ℒp g p μ) (hq1 : 1 ≤ p) :\n    snorm (f + g) p μ < ennreal.top :=\n  lt_of_le_of_lt (snorm_add_le hf.1 hg.1 hq1) (ennreal.add_lt_top.mpr ⟨hf.2, hg.2⟩)\n#align snorm_add_lt_top_of_one_le snorm_add_lt_top_of_one_le\n\n",
 "snorm_add_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_add_lt_top {f g : α → E} (hf : mem_ℒp f p μ) (hg : mem_ℒp g p μ) : snorm (f + g) p μ < ennreal.top :=\n  by\n  by_cases h0 : p = 0\n  · simp [h0]\n  rw [← ne.def] at h0\n  cases' le_total 1 p with hp1 hp1\n  · exact snorm_add_lt_top_of_one_le hf hg hp1\n  have hp_top : p ≠ ennreal.top := (lt_of_le_of_lt hp1 ennreal.coe_lt_top).ne\n  have hp_pos : 0 < p.to_real :=\n    by\n    rw [← ennreal.zero_to_real, @ennreal.to_real_lt_to_real 0 p ennreal.coe_ne_top hp_top]\n    exact (zero_le p).lt_of_ne h0.symm\n  have hp1_real : p.to_real ≤ 1 := by\n    rwa [← ennreal.one_to_real, @ennreal.to_real_le_to_real p 1 hp_top ennreal.coe_ne_top]\n  rw [snorm_eq_snorm' h0 hp_top]\n  rw [mem_ℒp, snorm_eq_snorm' h0 hp_top] at hf hg\n  exact snorm'_add_lt_top_of_le_one hf.1 hf.2 hg.2 hp_pos hp1_real\n#align snorm_add_lt_top snorm_add_lt_top\n\n",
 "snorm_add_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm_add_le {f g : α → E} (hf : ae_strongly_measurable f μ) (hg : ae_strongly_measurable g μ) (hp1 : 1 ≤ p) :\n    snorm (f + g) p μ ≤ snorm f p μ + snorm g p μ :=\n  by\n  by_cases hp0 : p = 0\n  · simp [hp0]\n  by_cases hp_top : p = ennreal.top\n  · simp [hp_top, snorm_ess_sup_add_le]\n  have hp1_real : 1 ≤ p.to_real := by rwa [← ennreal.one_to_real, ennreal.to_real_le_to_real ennreal.one_ne_top hp_top]\n  repeat' rw [snorm_eq_snorm' hp0 hp_top]\n  exact snorm'_add_le hf hg hp1_real\n#align snorm_add_le snorm_add_le\n\n",
 "snorm'_zero'":
 "@[simp]\ntheorem snorm'_zero' (hq0_ne : q ≠ 0) (hμ : μ ≠ 0) : snorm' (0 : α → F) q μ = 0 :=\n  by\n  cases' le_or_lt 0 q with hq0 hq_neg\n  · exact snorm'_zero (lt_of_le_of_ne hq0 hq0_ne.symm)\n  · simp [snorm', ennreal.rpow_eq_zero_iff, hμ, hq_neg]\n#align snorm'_zero' snorm'_zero'\n\n",
 "snorm'_zero":
 "@[simp]\ntheorem snorm'_zero (hp0_lt : 0 < q) : snorm' (0 : α → F) q μ = 0 := by simp [snorm', hp0_lt]\n#align snorm'_zero snorm'_zero\n\n",
 "snorm'_trim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\ntheorem snorm'_trim (hm : m ≤ m0) {f : α → E} (hf : (strongly_measurable_of m) f) :\n    snorm' f q (ν.trim hm) = snorm' f q ν := by\n  simp_rw [snorm']\n  congr 1\n  refine' lintegral_trim hm _\n  refine' @measurable.pow_const _ _ _ _ _ _ _ m _ (@measurable.coe_nnreal_ennreal _ m _ _) _\n  apply @strongly_measurable.measurable\n  exact @strongly_measurable.nnnorm α m _ _ _ hf\n#align snorm'_trim snorm'_trim\n\n",
 "snorm'_sum_norm_sub_le_tsum_of_cauchy_snorm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\nprivate theorem snorm'_sum_norm_sub_le_tsum_of_cauchy_snorm' {f : ℕ → α → E} (hf : ∀ n, ae_strongly_measurable (f n) μ)\n    {p : exprℝ} (hp1 : 1 ≤ p) {B : ℕ → ennreal} (h_cau : ∀ N n m : ℕ, N ≤ n → N ≤ m → snorm' (f n - f m) p μ < B N)\n    (n : ℕ) :\n    snorm'\n        (fun x =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range (n + 1)) («expr‖ ‖» (f (i + 1) x - f i x)))\n        p μ ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) :=\n  by\n  let f_norm_diff i x := «expr‖ ‖» (f (i + 1) x - f i x)\n  have hgf_norm_diff :\n    ∀ n,\n      (fun x =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range (n + 1)) («expr‖ ‖» (f (i + 1) x - f i x))) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range (n + 1)) (f_norm_diff i) :=\n    fun n => funext fun x => by simp [f_norm_diff]\n  rw [hgf_norm_diff]\n  refine' (snorm'_sum_le (fun i _ => ((hf (i + 1)).sub (hf i)).norm) hp1).trans _\n  simp_rw [← pi.sub_apply, snorm'_norm]\n  refine' (finset.sum_le_sum _).trans (sum_le_tsum _ (fun m _ => zero_le _) ennreal.summable)\n  exact fun m _ => (h_cau m (m + 1) m (nat.le_succ m) (le_refl m)).le\n#align snorm'_sum_norm_sub_le_tsum_of_cauchy_snorm' snorm'_sum_norm_sub_le_tsum_of_cauchy_snorm'\n\n",
 "snorm'_sum_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n-- variable [has_measurable_add₂ E]\ntheorem snorm'_sum_le {ι} {f : ι → α → E} {s : Finset ι} (hfs : ∀ i, i ∈ s → ae_strongly_measurable (f i) μ)\n    (hq1 : 1 ≤ q) :\n    snorm' (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) q\n        μ ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (snorm' (f i) q μ) :=\n  finset.le_sum_of_subadditive_on_pred (fun f : α → E => snorm' f q μ) (fun f => ae_strongly_measurable f μ)\n    (snorm'_zero (zero_lt_one.trans_le hq1)) (fun f g hf hg => snorm'_add_le hf hg hq1) (fun f g hf hg => hf.add hg) _\n    hfs\n#align snorm'_sum_le snorm'_sum_le\n\n",
 "snorm'_smul_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem snorm'_smul_measure {p : exprℝ} (hp : 0 ≤ p) {f : α → F} (c : ennreal) :\n    snorm' f p («expr • » c μ) = c ^ (1 / p) * snorm' f p μ :=\n  by\n  rw [snorm', lintegral_smul_measure, ennreal.mul_rpow_of_nonneg, snorm']\n  simp [hp]\n#align snorm'_smul_measure snorm'_smul_measure\n\n",
 "snorm'_smul_le_mul_snorm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem snorm'_smul_le_mul_snorm' {p q r : exprℝ} {f : α → E} (hf : ae_strongly_measurable f μ) {φ : α → 𝕜}\n    (hφ : ae_strongly_measurable φ μ) (hp0_lt : 0 < p) (hpq : p < q) (hpqr : 1 / p = 1 / q + 1 / r) :\n    snorm' («expr • » φ f) p μ ≤ snorm' φ q μ * snorm' f r μ :=\n  by\n  simp_rw [snorm', Pi.smul_apply', nnnorm_smul, ennreal.coe_mul]\n  exact ennreal.lintegral_Lp_mul_le_Lq_mul_Lr hp0_lt hpq hpqr μ hφ.ennnorm hf.ennnorm\n#align snorm'_smul_le_mul_snorm' snorm'_smul_le_mul_snorm'\n\n",
 "snorm'_norm_rpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm'_norm_rpow (f : α → F) (p q : exprℝ) (hq_pos : 0 < q) :\n    snorm' (fun x => «expr‖ ‖» (f x) ^ q) p μ = snorm' f (p * q) μ ^ q :=\n  by\n  simp_rw [snorm']\n  rw [← ennreal.rpow_mul, ← one_div_mul_one_div]\n  simp_rw [one_div]\n  rw [mul_assoc, inv_mul_cancel hq_pos.ne.symm, mul_one]\n  congr\n  ext1 x\n  simp_rw [← of_real_norm_eq_coe_nnnorm]\n  rw [real.norm_eq_abs, abs_eq_self.mpr (real.rpow_nonneg_of_nonneg (norm_nonneg _) _), mul_comm, ←\n    ennreal.of_real_rpow_of_nonneg (norm_nonneg _) hq_pos.le, ennreal.rpow_mul]\n#align snorm'_norm_rpow snorm'_norm_rpow\n\n",
 "snorm'_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem snorm'_norm {f : α → F} : snorm' (fun a => «expr‖ ‖» (f a)) q μ = snorm' f q μ := by simp [snorm']\n#align snorm'_norm snorm'_norm\n\n",
 "snorm'_neg":
 "@[simp]\ntheorem snorm'_neg {f : α → F} : snorm' (-f) q μ = snorm' f q μ := by simp [snorm']\n#align snorm'_neg snorm'_neg\n\n",
 "snorm'_mono_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[mono]\ntheorem snorm'_mono_measure (f : α → F) (hμν : ν ≤ μ) (hq : 0 ≤ q) : snorm' f q ν ≤ snorm' f q μ :=\n  by\n  simp_rw [snorm']\n  suffices h_integral_mono :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        ((«expr‖ ‖₊» (f a) : ennreal) ^ q) ν ≤\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (f a) ^ q) μ\n  exact ennreal.rpow_le_rpow h_integral_mono (by simp [hq])\n  exact lintegral_mono' hμν le_rfl\n#align snorm'_mono_measure snorm'_mono_measure\n\n",
 "snorm'_mono_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm'_mono_ae {f : α → F} {g : α → G} (hq : 0 ≤ q)\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ «expr‖ ‖» (g x))) :\n    snorm' f q μ ≤ snorm' g q μ := by\n  rw [snorm']\n  refine' ennreal.rpow_le_rpow _ (one_div_nonneg.2 hq)\n  refine' lintegral_mono_ae (h.mono fun x hx => _)\n  exact ennreal.rpow_le_rpow (ennreal.coe_le_coe.2 hx) hq\n#align snorm'_mono_ae snorm'_mono_ae\n\n",
 "snorm'_measure_zero_of_pos":
 "theorem snorm'_measure_zero_of_pos {f : α → F} (hq_pos : 0 < q) : snorm' f q (0 : measure α) = 0 := by\n  simp [snorm', hq_pos]\n#align snorm'_measure_zero_of_pos snorm'_measure_zero_of_pos\n\n",
 "snorm'_measure_zero_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm'_measure_zero_of_neg {f : α → F} (hq_neg : q < 0) : snorm' f q (0 : measure α) = ennreal.top := by\n  simp [snorm', hq_neg]\n#align snorm'_measure_zero_of_neg snorm'_measure_zero_of_neg\n\n",
 "snorm'_measure_zero_of_exponent_zero":
 "theorem snorm'_measure_zero_of_exponent_zero {f : α → F} : snorm' f 0 (0 : measure α) = 1 := by simp [snorm']\n#align snorm'_measure_zero_of_exponent_zero snorm'_measure_zero_of_exponent_zero\n\n",
 "snorm'_lt_top_of_snorm'_lt_top_of_exponent_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm'_lt_top_of_snorm'_lt_top_of_exponent_le {p q : exprℝ} [is_finite_measure μ] {f : α → E}\n    (hf : ae_strongly_measurable f μ) (hfq_lt_top : snorm' f q μ < ennreal.top) (hp_nonneg : 0 ≤ p) (hpq : p ≤ q) :\n    snorm' f p μ < ennreal.top := by\n  cases' le_or_lt p 0 with hp_nonpos hp_pos\n  · rw [le_antisymm hp_nonpos hp_nonneg]\n    simp\n  have hq_pos : 0 < q := lt_of_lt_of_le hp_pos hpq\n  calc\n    snorm' f p μ ≤ snorm' f q μ * μ Set.univ ^ (1 / p - 1 / q) := snorm'_le_snorm'_mul_rpow_measure_univ hp_pos hpq hf\n    _ < ennreal.top := by\n      rw [ennreal.mul_lt_top_iff]\n      refine' or.inl ⟨hfq_lt_top, ennreal.rpow_lt_top_of_nonneg _ (measure_ne_top μ Set.univ)⟩\n      rwa [le_sub_comm, sub_zero, one_div, one_div, inv_le_inv hq_pos hp_pos]\n    \n#align snorm'_lt_top_of_snorm'_lt_top_of_exponent_le snorm'_lt_top_of_snorm'_lt_top_of_exponent_le\n\n",
 "snorm'_lim_le_liminf_snorm'":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:72:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem snorm'_lim_le_liminf_snorm' {E} [normed_add_comm_group E] {f : ℕ → α → E} {p : exprℝ} (hp_pos : 0 < p)\n    (hf : ∀ n, ae_strongly_measurable (f n) μ) {f_lim : α → E}\n    (h_lim :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (tendsto (fun n => f n x) at_top ((nhds) (f_lim x)))) :\n    snorm' f_lim p μ ≤ at_top.liminf fun n => snorm' (f n) p μ :=\n  by\n  rw [snorm'_lim_eq_lintegral_liminf hp_pos.le h_lim]\n  rw [← ennreal.le_rpow_one_div_iff (by simp [hp_pos] : 0 < 1 / p), one_div_one_div]\n  refine' (lintegral_liminf_le' fun m => (hf m).ennnorm.pow_const _).trans_eq _\n  have h_pow_liminf : (at_top.liminf fun n => snorm' (f n) p μ) ^ p = at_top.liminf fun n => snorm' (f n) p μ ^ p :=\n    by\n    have h_rpow_mono := ennreal.strict_mono_rpow_of_pos hp_pos\n    have h_rpow_surj := (ennreal.rpow_left_bijective hp_pos.ne.symm).2\n    refine' (h_rpow_mono.order_iso_of_surjective _ h_rpow_surj).liminf_apply _ _ _ _\n    all_goals\n      run_tac\n        is_bounded_default\n  rw [h_pow_liminf]\n  simp_rw [snorm', ← ennreal.rpow_mul, one_div, inv_mul_cancel hp_pos.ne.symm, ennreal.rpow_one]\n#align snorm'_lim_le_liminf_snorm' snorm'_lim_le_liminf_snorm'\n\n",
 "snorm'_lim_eq_lintegral_liminf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm'_lim_eq_lintegral_liminf {ι} [nonempty ι] [linear_order ι] {f : ι → α → G} {p : exprℝ} (hp_nonneg : 0 ≤ p)\n    {f_lim : α → G}\n    (h_lim :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (tendsto (fun n => f n x) at_top ((nhds) (f_lim x)))) :\n    snorm' f_lim p μ =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          (at_top.liminf fun m => («expr‖ ‖₊» (f m a) : ennreal) ^ p) μ ^\n        (1 / p) :=\n  by\n  suffices h_no_pow :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (f_lim a) ^ p) μ =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (at_top.liminf fun m => («expr‖ ‖₊» (f m a) : ennreal) ^ p) μ\n  · rw [snorm', h_no_pow]\n  refine' lintegral_congr_ae (h_lim.mono fun a ha => _)\n  rw [tendsto.liminf_eq]\n  simp_rw [ennreal.coe_rpow_of_nonneg _ hp_nonneg, ennreal.tendsto_coe]\n  refine' ((nnreal.continuous_rpow_const hp_nonneg).tendsto («expr‖ ‖₊» (f_lim a))).comp _\n  exact (continuous_nnnorm.tendsto (f_lim a)).comp ha\n#align snorm'_lim_eq_lintegral_liminf snorm'_lim_eq_lintegral_liminf\n\n",
 "snorm'_le_snorm_ess_sup_mul_rpow_measure_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem snorm'_le_snorm_ess_sup_mul_rpow_measure_univ (hq_pos : 0 < q) {f : α → F} :\n    snorm' f q μ ≤ snorm_ess_sup f μ * μ Set.univ ^ (1 / q) :=\n  by\n  have h_le :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (↑(«expr‖ ‖₊» (f a)) ^ q) μ ≤\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (snorm_ess_sup f μ ^ q) μ :=\n    by\n    refine' lintegral_mono_ae _\n    have h_nnnorm_le_snorm_ess_sup := coe_nnnorm_ae_le_snorm_ess_sup f μ\n    refine' h_nnnorm_le_snorm_ess_sup.mono fun x hx => ennreal.rpow_le_rpow hx (le_of_lt hq_pos)\n  rw [snorm', ← ennreal.rpow_one (snorm_ess_sup f μ)]\n  nth_rw 2 [← mul_inv_cancel (ne_of_lt hq_pos).symm]\n  rw [ennreal.rpow_mul, one_div, ← ennreal.mul_rpow_of_nonneg _ _ (by simp [hq_pos.le] : 0 ≤ q⁻¹)]\n  refine' ennreal.rpow_le_rpow _ (by simp [hq_pos.le])\n  rwa [lintegral_const] at h_le\n#align snorm'_le_snorm_ess_sup_mul_rpow_measure_univ snorm'_le_snorm_ess_sup_mul_rpow_measure_univ\n\n",
 "snorm'_le_snorm_ess_sup":
 "theorem snorm'_le_snorm_ess_sup (hq_pos : 0 < q) {f : α → F} [is_probability_measure μ] :\n    snorm' f q μ ≤ snorm_ess_sup f μ :=\n  le_trans (snorm'_le_snorm_ess_sup_mul_rpow_measure_univ hq_pos) (le_of_eq (by simp [measure_univ]))\n#align snorm'_le_snorm_ess_sup snorm'_le_snorm_ess_sup\n\n",
 "snorm'_le_snorm'_of_exponent_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem snorm'_le_snorm'_of_exponent_le {m : measurable_space α} {p q : exprℝ} (hp0_lt : 0 < p) (hpq : p ≤ q)\n    (μ : measure α) [is_probability_measure μ] {f : α → E} (hf : ae_strongly_measurable f μ) :\n    snorm' f p μ ≤ snorm' f q μ :=\n  by\n  have h_le_μ := snorm'_le_snorm'_mul_rpow_measure_univ hp0_lt hpq hf\n  rwa [measure_univ, ennreal.one_rpow, mul_one] at h_le_μ\n#align snorm'_le_snorm'_of_exponent_le snorm'_le_snorm'_of_exponent_le\n\n",
 "snorm'_le_snorm'_mul_rpow_measure_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem snorm'_le_snorm'_mul_rpow_measure_univ {p q : exprℝ} (hp0_lt : 0 < p) (hpq : p ≤ q) {f : α → E}\n    (hf : ae_strongly_measurable f μ) : snorm' f p μ ≤ snorm' f q μ * μ Set.univ ^ (1 / p - 1 / q) :=\n  by\n  have hq0_lt : 0 < q := lt_of_lt_of_le hp0_lt hpq\n  by_cases hpq_eq : p = q\n  · rw [hpq_eq, sub_self, ennreal.rpow_zero, mul_one]\n    exact le_rfl\n  have hpq : p < q := lt_of_le_of_ne hpq hpq_eq\n  let g := fun a : α => (1 : ennreal)\n  have h_rw :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (↑(«expr‖ ‖₊» (f a)) ^ p) μ =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        ((«expr‖ ‖₊» (f a) * g a) ^ p) μ :=\n    lintegral_congr fun a => by simp\n  repeat' rw [snorm']\n  rw [h_rw]\n  let r := p * q / (q - p)\n  have hpqr : 1 / p = 1 / q + 1 / r :=\n    by\n    field_simp [(ne_of_lt hp0_lt).symm, (ne_of_lt hq0_lt).symm]\n    ring\n  calc\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            ((↑(«expr‖ ‖₊» (f a)) * g a) ^ p) μ ^\n          (1 / p) ≤\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n              (↑(«expr‖ ‖₊» (f a)) ^ q) μ ^\n            (1 / q) *\n          «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n              (g a ^ r) μ ^\n            (1 / r) :=\n      ennreal.lintegral_Lp_mul_le_Lq_mul_Lr hp0_lt hpq hpqr μ hf.ennnorm ae_measurable_const\n    _ =\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n              (↑(«expr‖ ‖₊» (f a)) ^ q) μ ^\n            (1 / q) *\n          μ Set.univ ^ (1 / p - 1 / q) :=\n      by simp [hpqr]\n    \n#align snorm'_le_snorm'_mul_rpow_measure_univ snorm'_le_snorm'_mul_rpow_measure_univ\n\n",
 "snorm'_exponent_zero":
 "@[simp]\ntheorem snorm'_exponent_zero {f : α → F} : snorm' f 0 μ = 1 := by rw [snorm', div_zero, ennreal.rpow_zero]\n#align snorm'_exponent_zero snorm'_exponent_zero\n\n",
 "snorm'_eq_zero_of_ae_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem snorm'_eq_zero_of_ae_zero' (hq0_ne : q ≠ 0) (hμ : μ ≠ 0) {f : α → F} (hf_zero : «expr =ᵐ[ ] » f μ 0) :\n    snorm' f q μ = 0 := by rw [snorm'_congr_ae hf_zero, snorm'_zero' hq0_ne hμ]\n#align snorm'_eq_zero_of_ae_zero' snorm'_eq_zero_of_ae_zero'\n\n",
 "snorm'_eq_zero_of_ae_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem snorm'_eq_zero_of_ae_zero {f : α → F} (hq0_lt : 0 < q) (hf_zero : «expr =ᵐ[ ] » f μ 0) : snorm' f q μ = 0 := by\n  rw [snorm'_congr_ae hf_zero, snorm'_zero hq0_lt]\n#align snorm'_eq_zero_of_ae_zero snorm'_eq_zero_of_ae_zero\n\n",
 "snorm'_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem snorm'_eq_zero_iff (hq0_lt : 0 < q) {f : α → E} (hf : ae_strongly_measurable f μ) :\n    snorm' f q μ = 0 ↔ «expr =ᵐ[ ] » f μ 0 :=\n  ⟨ae_eq_zero_of_snorm'_eq_zero (le_of_lt hq0_lt) hf, snorm'_eq_zero_of_ae_zero hq0_lt⟩\n#align snorm'_eq_zero_iff snorm'_eq_zero_iff\n\n",
 "snorm'_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm'_const_smul {f : α → F} (c : 𝕜) (hq_pos : 0 < q) :\n    snorm' («expr • » c f) q μ = («expr‖ ‖₊» c : ennreal) * snorm' f q μ :=\n  by\n  rw [snorm']\n  simp_rw [pi.smul_apply, nnnorm_smul, ennreal.coe_mul, ennreal.mul_rpow_of_nonneg _ _ hq_pos.le]\n  suffices h_integral :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (↑(«expr‖ ‖₊» c) ^ q * ↑(«expr‖ ‖₊» (f a)) ^ q) μ =\n      («expr‖ ‖₊» c : ennreal) ^ q *\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          («expr‖ ‖₊» (f a) ^ q) μ\n  · apply_fun fun x => x ^ (1 / q)  at h_integral\n    rw [h_integral, ennreal.mul_rpow_of_nonneg _ _ (by simp [hq_pos.le] : 0 ≤ 1 / q)]\n    congr\n    simp_rw [← ennreal.rpow_mul, one_div, mul_inv_cancel hq_pos.ne.symm, ennreal.rpow_one]\n  rw [lintegral_const_mul']\n  rw [ennreal.coe_rpow_of_nonneg _ hq_pos.le]\n  exact ennreal.coe_ne_top\n#align snorm'_const_smul snorm'_const_smul\n\n",
 "snorm'_const_of_is_probability_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm'_const_of_is_probability_measure (c : F) (hq_pos : 0 < q) [is_probability_measure μ] :\n    snorm' (fun x : α => c) q μ = («expr‖ ‖₊» c : ennreal) := by simp [snorm'_const c hq_pos, measure_univ]\n#align snorm'_const_of_is_probability_measure snorm'_const_of_is_probability_measure\n\n",
 "snorm'_const'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm'_const' [is_finite_measure μ] (c : F) (hc_ne_zero : c ≠ 0) (hq_ne_zero : q ≠ 0) :\n    snorm' (fun x : α => c) q μ = («expr‖ ‖₊» c : ennreal) * μ Set.univ ^ (1 / q) :=\n  by\n  rw [snorm', lintegral_const, ennreal.mul_rpow_of_ne_top _ (measure_ne_top μ Set.univ)]\n  · congr\n    rw [← ennreal.rpow_mul]\n    suffices hp_cancel : q * (1 / q) = 1\n    · rw [hp_cancel, ennreal.rpow_one]\n    rw [one_div, mul_inv_cancel hq_ne_zero]\n  · rw [ne.def, ennreal.rpow_eq_top_iff, not_or, not_and_or, not_and_or]\n    constructor\n    · left\n      rwa [ennreal.coe_eq_zero, nnnorm_eq_zero]\n    · exact or.inl ennreal.coe_ne_top\n#align snorm'_const' snorm'_const'\n\n",
 "snorm'_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm'_const (c : F) (hq_pos : 0 < q) :\n    snorm' (fun x : α => c) q μ = («expr‖ ‖₊» c : ennreal) * μ Set.univ ^ (1 / q) :=\n  by\n  rw [snorm', lintegral_const, ennreal.mul_rpow_of_nonneg _ _ (by simp [hq_pos.le] : 0 ≤ 1 / q)]\n  congr\n  rw [← ennreal.rpow_mul]\n  suffices hq_cancel : q * (1 / q) = 1; · rw [hq_cancel, ennreal.rpow_one]\n  rw [one_div, mul_inv_cancel (ne_of_lt hq_pos).symm]\n#align snorm'_const snorm'_const\n\n",
 "snorm'_congr_norm_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem snorm'_congr_norm_ae {f g : α → F}\n    (hfg :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) = «expr‖ ‖» (g x))) :\n    snorm' f q μ = snorm' g q μ :=\n  by\n  have : «expr =ᵐ[ ] » (fun x => («expr‖ ‖₊» (f x) ^ q : ennreal)) μ fun x => «expr‖ ‖₊» (g x) ^ q :=\n    hfg.mono fun x hx => by\n      simp only [← coe_nnnorm, nnreal.coe_eq] at hx\n      simp [hx]\n  simp only [snorm', lintegral_congr_ae this]\n#align snorm'_congr_norm_ae snorm'_congr_norm_ae\n\n",
 "snorm'_congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem snorm'_congr_ae {f g : α → F} (hfg : «expr =ᵐ[ ] » f μ g) : snorm' f q μ = snorm' g q μ :=\n  snorm'_congr_norm_ae (hfg.fun_comp _)\n#align snorm'_congr_ae snorm'_congr_ae\n\n",
 "snorm'_add_lt_top_of_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem snorm'_add_lt_top_of_le_one {f g : α → E} (hf : ae_strongly_measurable f μ)\n    (hf_snorm : snorm' f q μ < ennreal.top) (hg_snorm : snorm' g q μ < ennreal.top) (hq_pos : 0 < q) (hq1 : q ≤ 1) :\n    snorm' (f + g) q μ < ennreal.top :=\n  calc\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (↑(«expr‖ ‖₊» ((f + g) a)) ^ q) μ ^\n          (1 / q) ≤\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (((fun a => («expr‖ ‖₊» (f a) : ennreal)) + fun a => («expr‖ ‖₊» (g a) : ennreal)) a ^ q) μ ^\n          (1 / q) :=\n      by\n      refine' ennreal.rpow_le_rpow _ (by simp [hq_pos.le] : 0 ≤ 1 / q)\n      refine' lintegral_mono fun a => ennreal.rpow_le_rpow _ hq_pos.le\n      simp [← ennreal.coe_add, nnnorm_add_le]\n    _ ≤\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            ((«expr‖ ‖₊» (f a) : ennreal) ^ q + («expr‖ ‖₊» (g a) : ennreal) ^ q) μ ^\n          (1 / q) :=\n      by\n      refine' ennreal.rpow_le_rpow (lintegral_mono fun a => _) (by simp [hq_pos.le] : 0 ≤ 1 / q)\n      exact ennreal.rpow_add_le_add_rpow _ _ hq_pos.le hq1\n    _ < ennreal.top := by\n      refine' ennreal.rpow_lt_top_of_nonneg (by simp [hq_pos.le] : 0 ≤ 1 / q) _\n      rw [lintegral_add_left' (hf.ennnorm.pow_const q), ennreal.add_ne_top]\n      exact\n        ⟨(lintegral_rpow_nnnorm_lt_top_of_snorm'_lt_top hq_pos hf_snorm).ne,\n          (lintegral_rpow_nnnorm_lt_top_of_snorm'_lt_top hq_pos hg_snorm).ne⟩\n    \n#align snorm'_add_lt_top_of_le_one snorm'_add_lt_top_of_le_one\n\n",
 "snorm'_add_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem snorm'_add_le {f g : α → E} (hf : ae_strongly_measurable f μ) (hg : ae_strongly_measurable g μ) (hq1 : 1 ≤ q) :\n    snorm' (f + g) q μ ≤ snorm' f q μ + snorm' g q μ :=\n  calc\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (↑(«expr‖ ‖₊» ((f + g) a)) ^ q) μ ^\n          (1 / q) ≤\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (((fun a => («expr‖ ‖₊» (f a) : ennreal)) + fun a => («expr‖ ‖₊» (g a) : ennreal)) a ^ q) μ ^\n          (1 / q) :=\n      by\n      refine' ennreal.rpow_le_rpow _ (by simp [le_trans zero_le_one hq1] : 0 ≤ 1 / q)\n      refine' lintegral_mono fun a => ennreal.rpow_le_rpow _ (le_trans zero_le_one hq1)\n      simp [← ennreal.coe_add, nnnorm_add_le]\n    _ ≤ snorm' f q μ + snorm' g q μ := ennreal.lintegral_Lp_add_le hf.ennnorm hg.ennnorm hq1\n    \n#align snorm'_add_le snorm'_add_le\n\n",
 "smul_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem mem_ℒp.smul_measure {f : α → E} {c : ennreal} (hf : mem_ℒp f p μ) (hc : c ≠ ennreal.top) :\n    mem_ℒp f p («expr • » c μ) :=\n  hf.of_measure_le_smul c hc le_rfl\n#align mem_ℒp.smul_measure mem_ℒp.smul_measure\n\n",
 "smul_comp_LpL_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- TODO: written in an \"apply\" way because of a missing `has_smul` instance. -/\ntheorem smul_comp_LpL_apply [fact (1 ≤ p)] {𝕜'} [normed_field 𝕜'] [normed_space 𝕜' F] [SMulCommClass 𝕜 𝕜' F] (c : 𝕜')\n    (L : «expr →L[ ] » E 𝕜 F) (f : Lp E p μ) : («expr • » c L).comp_LpL p μ f = «expr • » c (L.comp_LpL p μ f) :=\n  smul_comp_Lp c L f\n#align smul_comp_LpL_apply smul_comp_LpL_apply\n\n",
 "smul_comp_LpL":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_comp_LpL [fact (1 ≤ p)] (c : 𝕜) (L : «expr →L[ ] » E 𝕜 F) :\n    («expr • » c L).comp_LpL p μ = «expr • » c (L.comp_LpL p μ) :=\n  by\n  ext1 f\n  exact smul_comp_Lp c L f\n#align smul_comp_LpL smul_comp_LpL\n\n",
 "smul_comp_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_comp_Lp {𝕜'} [normed_field 𝕜'] [normed_space 𝕜' F] [SMulCommClass 𝕜 𝕜' F] (c : 𝕜')\n    (L : «expr →L[ ] » E 𝕜 F) (f : Lp E p μ) : («expr • » c L).comp_Lp f = «expr • » c (L.comp_Lp f) :=\n  by\n  ext1\n  refine' (coe_fn_comp_Lp' («expr • » c L) f).trans _\n  refine' eventually_eq.trans _ (Lp.coe_fn_smul _ _).symm\n  refine' (L.coe_fn_comp_Lp' f).mono fun x hx => _\n  rw [pi.smul_apply, hx]\n  rfl\n#align smul_comp_Lp smul_comp_Lp\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem mem_ℒp.smul {p q r : ennreal} {f : α → E} {φ : α → 𝕜} (hf : mem_ℒp f r μ) (hφ : mem_ℒp φ q μ)\n    (hpqr : 1 / p = 1 / q + 1 / r) : mem_ℒp («expr • » φ f) p μ :=\n  ⟨hφ.1.smul hf.1,\n    (snorm_smul_le_mul_snorm hf.1 hφ.1 hpqr).trans_lt (ennreal.mul_lt_top hφ.snorm_ne_top hf.snorm_ne_top)⟩\n#align mem_ℒp.smul mem_ℒp.smul\n\n",
 "right_of_add_measure":
 "theorem mem_ℒp.right_of_add_measure {f : α → E} (h : mem_ℒp f p (μ + ν)) : mem_ℒp f p ν :=\n  h.mono_measure <| measure.le_add_left <| le_refl _\n#align mem_ℒp.right_of_add_measure mem_ℒp.right_of_add_measure\n\n",
 "restrict":
 "theorem mem_ℒp.restrict (s : set α) {f : α → E} (hf : mem_ℒp f p μ) : mem_ℒp f p (μ.restrict s) :=\n  hf.mono_measure measure.restrict_le_self\n#align mem_ℒp.restrict mem_ℒp.restrict\n\n",
 "re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.re (hf : mem_ℒp f p μ) : mem_ℒp (fun x => is_R_or_C.re (f x)) p μ :=\n  haveI : ∀ x, «expr‖ ‖» (is_R_or_C.re (f x)) ≤ 1 * «expr‖ ‖» (f x) :=\n    by\n    intro x\n    rw [one_mul]\n    exact is_R_or_C.norm_re_le_norm (f x)\n  hf.of_le_mul hf.1.re (eventually_of_forall this)\n#align mem_ℒp.re mem_ℒp.re\n\n",
 "range_to_Lp_hom":
 "theorem range_to_Lp_hom [fact (1 ≤ p)] :\n    ((to_Lp_hom p μ).range : add_subgroup (Lp E p μ)) = measure_theory.Lp.bounded_continuous_function E p μ :=\n  by\n  symm\n  convert\n    add_monoid_hom.add_subgroup_of_range_eq_of_le\n      ((continuous_map.to_ae_eq_fun_add_hom μ).comp (to_continuous_map_add_hom α E))\n      (by\n        rintro - ⟨f, rfl⟩\n        exact mem_Lp f : _ ≤ Lp E p μ)\n#align range_to_Lp_hom range_to_Lp_hom\n\n",
 "range_to_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\ntheorem range_to_Lp [normed_field 𝕜] [normed_space 𝕜 E] :\n    (linear_map.range (to_Lp p μ 𝕜 : «expr →L[ ] » («exprC( , )» α E) 𝕜 (Lp E p μ))).to_add_subgroup =\n      measure_theory.Lp.bounded_continuous_function E p μ :=\n  by\n  refine' SetLike.ext' _\n  have := (linear_isometry_bounded_of_compact α E 𝕜).surjective\n  convert Function.Surjective.range_comp this (bounded_continuous_function.to_Lp p μ 𝕜)\n  rw [← bounded_continuous_function.range_to_Lp p μ]\n  rfl\n#align range_to_Lp range_to_Lp\n\n",
 "pow_mul_meas_ge_le_snorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem pow_mul_meas_ge_le_snorm {f : α → E} (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top)\n    (hf : ae_strongly_measurable f μ) (ε : ennreal) :\n    (ε * μ { x | ε ≤ «expr‖ ‖₊» (f x) ^ p.to_real }) ^ (1 / p.to_real) ≤ snorm f p μ :=\n  by\n  rw [snorm_eq_lintegral_rpow_nnnorm hp_ne_zero hp_ne_top]\n  exact\n    ennreal.rpow_le_rpow (mul_meas_ge_le_lintegral₀ (hf.ennnorm.pow_const _) ε)\n      (one_div_nonneg.2 ennreal.to_real_nonneg)\n#align pow_mul_meas_ge_le_snorm pow_mul_meas_ge_le_snorm\n\n",
 "pow_mul_meas_ge_le_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem pow_mul_meas_ge_le_norm (f : Lp E p μ) (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) (ε : ennreal) :\n    (ε * μ { x | ε ≤ «expr‖ ‖₊» (f x) ^ p.to_real }) ^ (1 / p.to_real) ≤ ennreal.of_real («expr‖ ‖» f) :=\n  (ennreal.of_real_to_real (snorm_ne_top f)).symm ▸\n    pow_mul_meas_ge_le_snorm μ hp_ne_zero hp_ne_top (Lp.ae_strongly_measurable f) ε\n#align pow_mul_meas_ge_le_norm pow_mul_meas_ge_le_norm\n\n",
 "pos_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem _root_.measure_theory.mem_ℒp.pos_part {f : α → exprℝ} (hf : mem_ℒp f p μ) : mem_ℒp (fun x => max (f x) 0) p μ :=\n  lipschitz_with_pos_part.comp_mem_ℒp (max_eq_right le_rfl) hf\n#align measure_theory.mem_ℒp.pos_part measure_theory.mem_ℒp.pos_part\n\n",
 "of_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem _root_.measure_theory.mem_ℒp.of_real {f : α → exprℝ} (hf : mem_ℒp f p μ) : mem_ℒp (fun x => (f x : K)) p μ :=\n  (@is_R_or_C.of_real_clm K _).comp_mem_ℒp' hf\n#align measure_theory.mem_ℒp.of_real measure_theory.mem_ℒp.of_real\n\n",
 "of_measure_le_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem mem_ℒp.of_measure_le_smul {μ' : measure α} (c : ennreal) (hc : c ≠ ennreal.top) (hμ'_le : μ' ≤ «expr • » c μ)\n    {f : α → E} (hf : mem_ℒp f p μ) : mem_ℒp f p μ' :=\n  by\n  refine' ⟨hf.1.mono' (measure.absolutely_continuous_of_le_smul hμ'_le), _⟩\n  refine' (snorm_mono_measure f hμ'_le).trans_lt _\n  by_cases hc0 : c = 0\n  · simp [hc0]\n  rw [snorm_smul_measure_of_ne_zero hc0, smul_eq_mul]\n  refine' ennreal.mul_lt_top _ hf.2.ne\n  simp [hc, hc0]\n#align mem_ℒp.of_measure_le_smul mem_ℒp.of_measure_le_smul\n\n",
 "of_le_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.of_le_mul {f : α → E} {g : α → F} {c : exprℝ} (hg : mem_ℒp g p μ) (hf : ae_strongly_measurable f μ)\n    (hfg :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ c * «expr‖ ‖» (g x))) :\n    mem_ℒp f p μ := by\n  simp only [mem_ℒp, hf, true_and_iff]\n  apply lt_of_le_of_lt (snorm_le_mul_snorm_of_ae_le_mul hfg p)\n  simp [lt_top_iff_ne_top, hg.snorm_ne_top]\n#align mem_ℒp.of_le_mul mem_ℒp.of_le_mul\n\n",
 "of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.of_le {f : α → E} {g : α → F} (hg : mem_ℒp g p μ) (hf : ae_strongly_measurable f μ)\n    (hfg :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ «expr‖ ‖» (g x))) :\n    mem_ℒp f p μ :=\n  ⟨hf, (snorm_mono_ae hfg).trans_lt hg.snorm_lt_top⟩\n#align mem_ℒp.of_le mem_ℒp.of_le\n\n",
 "of_comp_antilipschitz_with":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem measure_theory.mem_ℒp.of_comp_antilipschitz_with {α E F} {K'} [measurable_space α] {μ : measure α}\n    [normed_add_comm_group E] [normed_add_comm_group F] {f : α → E} {g : E → F} (hL : mem_ℒp (g ∘ f) p μ)\n    (hg : uniform_continuous g) (hg' : antilipschitz_with K' g) (g0 : g 0 = 0) : mem_ℒp f p μ :=\n  by\n  have A :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      («expr‖ ‖» (f x) ≤ K' * «expr‖ ‖» (g (f x))) :=\n    by\n    apply filter.eventually_of_forall fun x => _\n    rw [← dist_zero_right, ← dist_zero_right, ← g0]\n    apply hg'.le_mul_dist\n  have B : ae_strongly_measurable f μ := (hg'.uniform_embedding hg).embedding.ae_strongly_measurable_comp_iff.1 hL.1\n  exact hL.of_le_mul B A\n#align measure_theory.mem_ℒp.of_comp_antilipschitz_with measure_theory.mem_ℒp.of_comp_antilipschitz_with\n\n",
 "of_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.of_bound [is_finite_measure μ] {f : α → E} (hf : ae_strongly_measurable f μ) (C : exprℝ)\n    (hfC :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ C)) :\n    mem_ℒp f p μ :=\n  (mem_ℒp_const C).of_le hf (hfC.mono fun x hx => le_trans hx (le_abs_self _))\n#align mem_ℒp.of_bound mem_ℒp.of_bound\n\n",
 "norm_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_zero : «expr‖ ‖» (0 : Lp E p μ) = 0 :=\n  by\n  change (snorm («expr⇑ » (0 : «expr →ₘ[ ] » α μ E)) p μ).to_real = 0\n  simp [snorm_congr_ae ae_eq_fun.coe_fn_zero, snorm_zero]\n#align norm_zero norm_zero\n\n",
 "norm_to_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_to_Lp (f : α → E) (hf : mem_ℒp f p μ) : «expr‖ ‖» (hf.to_Lp f) = ennreal.to_real (snorm f p μ) := by\n  rw [norm_def, snorm_congr_ae (mem_ℒp.coe_fn_to_Lp hf)]\n#align norm_to_Lp norm_to_Lp\n\n",
 "norm_rpow_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.norm_rpow_div {f : α → E} (hf : mem_ℒp f p μ) (q : ennreal) :\n    mem_ℒp (fun x : α => «expr‖ ‖» (f x) ^ q.to_real) (p / q) μ :=\n  by\n  refine' ⟨(hf.1.norm.ae_measurable.pow_const q.to_real).ae_strongly_measurable, _⟩\n  by_cases q_top : q = ennreal.top; · simp [q_top]\n  by_cases q_zero : q = 0\n  · simp [q_zero]\n    by_cases p_zero : p = 0\n    · simp [p_zero]\n    rw [ennreal.div_zero p_zero]\n    exact (mem_ℒp_top_const (1 : exprℝ)).2\n  rw [snorm_norm_rpow _ (ennreal.to_real_pos q_zero q_top)]\n  apply ennreal.rpow_lt_top_of_nonneg ennreal.to_real_nonneg\n  rw [ennreal.of_real_to_real q_top, div_eq_mul_inv, mul_assoc, ennreal.inv_mul_cancel q_zero q_top, mul_one]\n  exact hf.2.ne\n#align mem_ℒp.norm_rpow_div mem_ℒp.norm_rpow_div\n\n",
 "norm_rpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.norm_rpow {f : α → E} (hf : mem_ℒp f p μ) (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) :\n    mem_ℒp (fun x : α => «expr‖ ‖» (f x) ^ p.to_real) 1 μ :=\n  by\n  convert hf.norm_rpow_div p\n  rw [div_eq_mul_inv, ennreal.mul_inv_cancel hp_ne_zero hp_ne_top]\n#align mem_ℒp.norm_rpow mem_ℒp.norm_rpow\n\n",
 "norm_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_neg {f : Lp E p μ} : «expr‖ ‖» (-f) = «expr‖ ‖» f := by\n  rw [norm_def, norm_def, snorm_congr_ae (coe_fn_neg _), snorm_neg]\n#align norm_neg norm_neg\n\n",
 "norm_le_of_ae_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_le_of_ae_bound [is_finite_measure μ] {f : Lp E p μ} {C : exprℝ} (hC : 0 ≤ C)\n    (hfC :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ C)) :\n    «expr‖ ‖» f ≤ measure_univ_nnreal μ ^ p.to_real⁻¹ * C :=\n  by\n  by_cases hμ : μ = 0\n  · by_cases hp : p.to_real⁻¹ = 0\n    · simpa [hp, hμ, norm_def] using hC\n    · simp [hμ, norm_def, real.zero_rpow hp]\n  let A : nnreal := measure_univ_nnreal μ ^ p.to_real⁻¹ * ⟨C, hC⟩\n  suffices snorm f p μ ≤ A by exact ennreal.to_real_le_coe_of_le_coe this\n  convert snorm_le_of_ae_bound hfC\n  rw [← coe_measure_univ_nnreal μ, ennreal.coe_rpow_of_ne_zero (measure_univ_nnreal_pos hμ).ne', ennreal.coe_mul]\n  congr\n  rw [max_eq_left hC]\n#align norm_le_of_ae_bound norm_le_of_ae_bound\n\n",
 "norm_le_norm_of_ae_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_le_norm_of_ae_le {f : Lp E p μ} {g : Lp F p μ}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ «expr‖ ‖» (g x))) :\n    «expr‖ ‖» f ≤ «expr‖ ‖» g :=\n  by\n  rw [norm_def, norm_def, ennreal.to_real_le_to_real (snorm_ne_top _) (snorm_ne_top _)]\n  exact snorm_mono_ae h\n#align norm_le_norm_of_ae_le norm_le_norm_of_ae_le\n\n",
 "norm_le_mul_norm_of_ae_le_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_le_mul_norm_of_ae_le_mul {c : exprℝ} {f : Lp E p μ} {g : Lp F p μ}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ c * «expr‖ ‖» (g x))) :\n    «expr‖ ‖» f ≤ c * «expr‖ ‖» g := by\n  by_cases pzero : p = 0\n  · simp [pzero, norm_def]\n  cases' le_or_lt 0 c with hc hc\n  · have := snorm_le_mul_snorm_aux_of_nonneg h hc p\n    rw [← ennreal.to_real_le_to_real, ennreal.to_real_mul, ennreal.to_real_of_real hc] at this\n    · exact this\n    · exact (Lp.mem_ℒp _).snorm_ne_top\n    · simp [(Lp.mem_ℒp _).snorm_ne_top]\n  · have := snorm_le_mul_snorm_aux_of_neg h hc p\n    simp only [snorm_eq_zero_iff (Lp.ae_strongly_measurable _) pzero, ← eq_zero_iff_ae_eq_zero] at this\n    simp [this]\n#align norm_le_mul_norm_of_ae_le_mul norm_le_mul_norm_of_ae_le_mul\n\n",
 "norm_indicator_const_Lp_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_indicator_const_Lp_top (hμs_ne_zero : μ s ≠ 0) :\n    «expr‖ ‖» (indicator_const_Lp (ennreal.top) hs hμs c) = «expr‖ ‖» c := by\n  rw [Lp.norm_def, snorm_congr_ae indicator_const_Lp_coe_fn, snorm_indicator_const' hs hμs_ne_zero ennreal.top_ne_zero,\n    ennreal.top_to_real, div_zero, ennreal.rpow_zero, mul_one, ennreal.coe_to_real, coe_nnnorm]\n#align norm_indicator_const_Lp_top norm_indicator_const_Lp_top\n\n",
 "norm_indicator_const_Lp'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_indicator_const_Lp' (hp_pos : p ≠ 0) (hμs_pos : μ s ≠ 0) :\n    «expr‖ ‖» (indicator_const_Lp p hs hμs c) = «expr‖ ‖» c * (μ s).to_real ^ (1 / p.to_real) :=\n  by\n  by_cases hp_top : p = ennreal.top\n  · rw [hp_top, ennreal.top_to_real, div_zero, real.rpow_zero, mul_one]\n    exact norm_indicator_const_Lp_top hμs_pos\n  · exact norm_indicator_const_Lp hp_pos hp_top\n#align norm_indicator_const_Lp' norm_indicator_const_Lp'\n\n",
 "norm_indicator_const_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_indicator_const_Lp (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) :\n    «expr‖ ‖» (indicator_const_Lp p hs hμs c) = «expr‖ ‖» c * (μ s).to_real ^ (1 / p.to_real) := by\n  rw [Lp.norm_def, snorm_congr_ae indicator_const_Lp_coe_fn, snorm_indicator_const hs hp_ne_zero hp_ne_top,\n    ennreal.to_real_mul, ennreal.to_real_rpow, ennreal.coe_to_real, coe_nnnorm]\n#align norm_indicator_const_Lp norm_indicator_const_Lp\n\n",
 "norm_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_eq_zero_iff {f : Lp E p μ} (hp : 0 < p) : «expr‖ ‖» f = 0 ↔ f = 0 :=\n  by\n  refine' ⟨fun hf => _, fun hf => by simp [hf]⟩\n  rw [norm_def, ennreal.to_real_eq_zero_iff] at hf\n  cases hf\n  · rw [snorm_eq_zero_iff (Lp.ae_strongly_measurable f) hp.ne.symm] at hf\n    exact subtype.eq (ae_eq_fun.ext (hf.trans ae_eq_fun.coe_fn_zero.symm))\n  · exact absurd hf (snorm_ne_top f)\n#align norm_eq_zero_iff norm_eq_zero_iff\n\n",
 "norm_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_def (f : Lp E p μ) : «expr‖ ‖» f = ennreal.to_real (snorm f p μ) :=\n  rfl\n#align norm_def norm_def\n\n",
 "norm_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_const_smul (c : 𝕜) (f : Lp E p μ) : «expr‖ ‖» («expr • » c f) = «expr‖ ‖» c * «expr‖ ‖» f := by\n  rw [norm_def, snorm_congr_ae (coe_fn_smul _ _), snorm_const_smul c, ennreal.to_real_mul, ennreal.coe_to_real,\n    coe_nnnorm, norm_def]\n#align norm_const_smul norm_const_smul\n\n",
 "norm_comp_Lp_sub_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_comp_Lp_sub_le (hg : lipschitz_with c g) (g0 : g 0 = 0) (f f' : Lp E p μ) :\n    «expr‖ ‖» (hg.comp_Lp g0 f - hg.comp_Lp g0 f') ≤ c * «expr‖ ‖» (f - f') :=\n  by\n  apply Lp.norm_le_mul_norm_of_ae_le_mul\n  filter_upwards [hg.coe_fn_comp_Lp g0 f, hg.coe_fn_comp_Lp g0 f', Lp.coe_fn_sub (hg.comp_Lp g0 f) (hg.comp_Lp g0 f'),\n    Lp.coe_fn_sub f f'] with a ha1 ha2 ha3 ha4\n  simp [ha1, ha2, ha3, ha4, ← dist_eq_norm]\n  exact hg.dist_le_mul (f a) (f' a)\n#align norm_comp_Lp_sub_le norm_comp_Lp_sub_le\n\n",
 "norm_comp_Lp_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_comp_Lp_le (L : «expr →L[ ] » E 𝕜 F) (f : Lp E p μ) :\n    «expr‖ ‖» (L.comp_Lp f) ≤ «expr‖ ‖» L * «expr‖ ‖» f :=\n  lipschitz_with.norm_comp_Lp_le _ _ _\n#align norm_comp_Lp_le norm_comp_Lp_le\n\n",
 "norm_compLpL_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_compLpL_le [fact (1 ≤ p)] (L : «expr →L[ ] » E 𝕜 F) : «expr‖ ‖» (L.comp_LpL p μ) ≤ «expr‖ ‖» L :=\n  linear_map.mk_continuous_norm_le _ (norm_nonneg _) _\n#align norm_compLpL_le norm_compLpL_le\n\n",
 "norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.norm {f : α → E} (h : mem_ℒp f p μ) : mem_ℒp (fun x => «expr‖ ‖» (f x)) p μ :=\n  h.of_le h.ae_strongly_measurable.norm (eventually_of_forall fun x => by simp)\n#align mem_ℒp.norm mem_ℒp.norm\n\n",
 "neg_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem _root_.measure_theory.mem_ℒp.neg_part {f : α → exprℝ} (hf : mem_ℒp f p μ) :\n    mem_ℒp (fun x => max (-f x) 0) p μ :=\n  lipschitz_with_pos_part.comp_mem_ℒp (max_eq_right le_rfl) hf.neg\n#align measure_theory.mem_ℒp.neg_part measure_theory.mem_ℒp.neg_part\n\n",
 "neg":
 "-- variable [borel_space E]\ntheorem mem_ℒp.neg {f : α → E} (hf : mem_ℒp f p μ) : mem_ℒp (-f) p μ :=\n  ⟨ae_strongly_measurable.neg hf.1, by simp [hf.right]⟩\n#align mem_ℒp.neg mem_ℒp.neg\n\n",
 "mul_meas_ge_le_pow_snorm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/-- A version of Markov's inequality using Lp-norms. -/\ntheorem mul_meas_ge_le_pow_snorm' {f : α → E} (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top)\n    (hf : ae_strongly_measurable f μ) (ε : ennreal) :\n    ε ^ p.to_real * μ { x | ε ≤ «expr‖ ‖₊» (f x) } ≤ snorm f p μ ^ p.to_real :=\n  by\n  convert mul_meas_ge_le_pow_snorm μ hp_ne_zero hp_ne_top hf (ε ^ p.to_real)\n  ext x\n  rw [ennreal.rpow_le_rpow_iff (ennreal.to_real_pos hp_ne_zero hp_ne_top)]\n#align mul_meas_ge_le_pow_snorm' mul_meas_ge_le_pow_snorm'\n\n",
 "mul_meas_ge_le_pow_snorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem mul_meas_ge_le_pow_snorm {f : α → E} (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top)\n    (hf : ae_strongly_measurable f μ) (ε : ennreal) :\n    ε * μ { x | ε ≤ «expr‖ ‖₊» (f x) ^ p.to_real } ≤ snorm f p μ ^ p.to_real :=\n  by\n  have : 1 / p.to_real * p.to_real = 1 := by\n    refine' one_div_mul_cancel _\n    rw [ne, ennreal.to_real_eq_zero_iff]\n    exact not_or_of_not hp_ne_zero hp_ne_top\n  rw [← ennreal.rpow_one (ε * μ { x | ε ≤ «expr‖ ‖₊» (f x) ^ p.to_real }), ← this, ennreal.rpow_mul]\n  exact ennreal.rpow_le_rpow (pow_mul_meas_ge_le_snorm μ hp_ne_zero hp_ne_top hf ε) ennreal.to_real_nonneg\n#align mul_meas_ge_le_pow_snorm mul_meas_ge_le_pow_snorm\n\n",
 "mul_meas_ge_le_pow_norm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- A version of Markov's inequality with elements of Lp. -/\ntheorem mul_meas_ge_le_pow_norm' (f : Lp E p μ) (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) (ε : ennreal) :\n    ε ^ p.to_real * μ { x | ε ≤ «expr‖ ‖₊» (f x) } ≤ ennreal.of_real («expr‖ ‖» f) ^ p.to_real :=\n  (ennreal.of_real_to_real (snorm_ne_top f)).symm ▸\n    mul_meas_ge_le_pow_snorm' μ hp_ne_zero hp_ne_top (Lp.ae_strongly_measurable f) ε\n#align mul_meas_ge_le_pow_norm' mul_meas_ge_le_pow_norm'\n\n",
 "mul_meas_ge_le_pow_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mul_meas_ge_le_pow_norm (f : Lp E p μ) (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) (ε : ennreal) :\n    ε * μ { x | ε ≤ «expr‖ ‖₊» (f x) ^ p.to_real } ≤ ennreal.of_real («expr‖ ‖» f) ^ p.to_real :=\n  (ennreal.of_real_to_real (snorm_ne_top f)).symm ▸\n    mul_meas_ge_le_pow_snorm μ hp_ne_zero hp_ne_top (Lp.ae_strongly_measurable f) ε\n#align mul_meas_ge_le_pow_norm mul_meas_ge_le_pow_norm\n\n",
 "mono_measure":
 "theorem mem_ℒp.mono_measure {f : α → E} (hμν : ν ≤ μ) (hf : mem_ℒp f p μ) : mem_ℒp f p ν :=\n  ⟨hf.1.mono_measure hμν, (snorm_mono_measure f hμν).trans_lt hf.2⟩\n#align mem_ℒp.mono_measure mem_ℒp.mono_measure\n\n",
 "mono'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.mono' {f : α → E} {g : α → exprℝ} (hg : mem_ℒp g p μ) (hf : ae_strongly_measurable f μ)\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f a) ≤ g a)) :\n    mem_ℒp f p μ :=\n  hg.mono hf <| h.mono fun x hx => le_trans hx (le_abs_self _)\n#align mem_ℒp.mono' mem_ℒp.mono'\n\n",
 "mem_ℒp_zero_iff_ae_strongly_measurable":
 "theorem mem_ℒp_zero_iff_ae_strongly_measurable {f : α → E} : mem_ℒp f 0 μ ↔ ae_strongly_measurable f μ := by\n  simp [mem_ℒp, snorm_exponent_zero]\n#align mem_ℒp_zero_iff_ae_strongly_measurable mem_ℒp_zero_iff_ae_strongly_measurable\n\n",
 "mem_ℒp_top_of_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem mem_ℒp_top_of_bound {f : α → E} (hf : ae_strongly_measurable f μ) (C : exprℝ)\n    (hfC :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ C)) :\n    mem_ℒp f (ennreal.top) μ :=\n  ⟨hf, by\n    rw [snorm_exponent_top]\n    exact snorm_ess_sup_lt_top_of_ae_bound hfC⟩\n#align mem_ℒp_top_of_bound mem_ℒp_top_of_bound\n\n",
 "mem_ℒp_top_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem mem_ℒp_top_const (c : E) : mem_ℒp (fun a : α => c) (ennreal.top) μ :=\n  by\n  refine' ⟨ae_strongly_measurable_const, _⟩\n  by_cases h : μ = 0\n  · simp only [h, snorm_measure_zero, WithTop.zero_lt_top]\n  · rw [snorm_const _ ennreal.top_ne_zero h]\n    simp only [ennreal.top_to_real, div_zero, ennreal.rpow_zero, mul_one, ennreal.coe_lt_top]\n#align mem_ℒp_top_const mem_ℒp_top_const\n\n",
 "mem_ℒp_re_im_iff":
 "theorem _root_.measure_theory.mem_ℒp_re_im_iff {f : α → K} :\n    mem_ℒp (fun x => is_R_or_C.re (f x)) p μ ∧ mem_ℒp (fun x => is_R_or_C.im (f x)) p μ ↔ mem_ℒp f p μ :=\n  by\n  refine' ⟨_, fun hf => ⟨hf.re, hf.im⟩⟩\n  rintro ⟨hre, him⟩\n  convert hre.of_real.add (him.of_real.const_mul is_R_or_C.I)\n  · ext1 x\n    rw [pi.add_apply, mul_comm, is_R_or_C.re_add_im]\n  all_goals infer_instance\n#align measure_theory.mem_ℒp_re_im_iff measure_theory.mem_ℒp_re_im_iff\n\n",
 "mem_ℒp_of_mem_ℒp_trim":
 "theorem mem_ℒp_of_mem_ℒp_trim (hm : m ≤ m0) {f : α → E} (hf : mem_ℒp f p (ν.trim hm)) : mem_ℒp f p ν :=\n  ⟨ae_strongly_measurable_of_ae_strongly_measurable_trim hm hf.1, (le_of_eq (snorm_trim_ae hm hf.1).symm).trans_lt hf.2⟩\n#align mem_ℒp_of_mem_ℒp_trim mem_ℒp_of_mem_ℒp_trim\n\n",
 "mem_ℒp_of_exponent_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem mem_ℒp.mem_ℒp_of_exponent_le {p q : ennreal} [is_finite_measure μ] {f : α → E} (hfq : mem_ℒp f q μ)\n    (hpq : p ≤ q) : mem_ℒp f p μ := by\n  cases' hfq with hfq_m hfq_lt_top\n  by_cases hp0 : p = 0\n  · rwa [hp0, mem_ℒp_zero_iff_ae_strongly_measurable]\n  rw [← ne.def] at hp0\n  refine' ⟨hfq_m, _⟩\n  by_cases hp_top : p = ennreal.top\n  · have hq_top : q = ennreal.top := by rwa [hp_top, top_le_iff] at hpq\n    rw [hp_top]\n    rwa [hq_top] at hfq_lt_top\n  have hp_pos : 0 < p.to_real := ennreal.to_real_pos hp0 hp_top\n  by_cases hq_top : q = ennreal.top\n  · rw [snorm_eq_snorm' hp0 hp_top]\n    rw [hq_top, snorm_exponent_top] at hfq_lt_top\n    refine' lt_of_le_of_lt (snorm'_le_snorm_ess_sup_mul_rpow_measure_univ hp_pos) _\n    refine' ennreal.mul_lt_top hfq_lt_top.ne _\n    exact (ennreal.rpow_lt_top_of_nonneg (by simp [hp_pos.le]) (measure_ne_top μ Set.univ)).ne\n  have hq0 : q ≠ 0 := by\n    by_contra hq_eq_zero\n    have hp_eq_zero : p = 0 := le_antisymm (by rwa [hq_eq_zero] at hpq) (zero_le _)\n    rw [hp_eq_zero, ennreal.zero_to_real] at hp_pos\n    exact (lt_irrefl _) hp_pos\n  have hpq_real : p.to_real ≤ q.to_real := by rwa [ennreal.to_real_le_to_real hp_top hq_top]\n  rw [snorm_eq_snorm' hp0 hp_top]\n  rw [snorm_eq_snorm' hq0 hq_top] at hfq_lt_top\n  exact snorm'_lt_top_of_snorm'_lt_top_of_exponent_le hfq_m hfq_lt_top (le_of_lt hp_pos) hpq_real\n#align mem_ℒp.mem_ℒp_of_exponent_le mem_ℒp.mem_ℒp_of_exponent_le\n\n",
 "mem_ℒp_of_cauchy_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem mem_ℒp_of_cauchy_tendsto (hp : 1 ≤ p) {f : ℕ → α → E} (hf : ∀ n, mem_ℒp (f n) p μ) (f_lim : α → E)\n    (h_lim_meas : ae_strongly_measurable f_lim μ)\n    (h_tendsto : at_top.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0)) : mem_ℒp f_lim p μ :=\n  by\n  refine' ⟨h_lim_meas, _⟩\n  rw [ennreal.tendsto_at_top_zero] at h_tendsto\n  cases' h_tendsto 1 ennreal.zero_lt_one with N h_tendsto_1\n  specialize h_tendsto_1 N (le_refl N)\n  have h_add : f_lim = f_lim - f N + f N := by abel\n  rw [h_add]\n  refine' lt_of_le_of_lt (snorm_add_le (h_lim_meas.sub (hf N).1) (hf N).1 hp) _\n  rw [ennreal.add_lt_top]\n  constructor\n  · refine' lt_of_le_of_lt _ ennreal.one_lt_top\n    have h_neg : f_lim - f N = -(f N - f_lim) := by simp\n    rwa [h_neg, snorm_neg]\n  · exact (hf N).2\n#align mem_ℒp_of_cauchy_tendsto mem_ℒp_of_cauchy_tendsto\n\n",
 "mem_ℒp_norm_rpow_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp_norm_rpow_iff {q : ennreal} {f : α → E} (hf : ae_strongly_measurable f μ) (q_zero : q ≠ 0)\n    (q_top : q ≠ ennreal.top) : mem_ℒp (fun x : α => «expr‖ ‖» (f x) ^ q.to_real) (p / q) μ ↔ mem_ℒp f p μ :=\n  by\n  refine' ⟨fun h => _, fun h => h.norm_rpow_div q⟩\n  apply (mem_ℒp_norm_iff hf).1\n  convert h.norm_rpow_div q⁻¹\n  · ext x\n    rw [real.norm_eq_abs, real.abs_rpow_of_nonneg (norm_nonneg _), ← real.rpow_mul (abs_nonneg _), ennreal.to_real_inv,\n      mul_inv_cancel, abs_of_nonneg (norm_nonneg _), real.rpow_one]\n    simp [ennreal.to_real_eq_zero_iff, not_or, q_zero, q_top]\n  · rw [div_eq_mul_inv, inv_inv, div_eq_mul_inv, mul_assoc, ennreal.inv_mul_cancel q_zero q_top, mul_one]\n#align mem_ℒp_norm_rpow_iff mem_ℒp_norm_rpow_iff\n\n",
 "mem_ℒp_norm_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp_norm_iff {f : α → E} (hf : ae_strongly_measurable f μ) :\n    mem_ℒp (fun x => «expr‖ ‖» (f x)) p μ ↔ mem_ℒp f p μ :=\n  ⟨fun h =>\n    ⟨hf, by\n      rw [← snorm_norm]\n      exact h.2⟩,\n    fun h => h.norm⟩\n#align mem_ℒp_norm_iff mem_ℒp_norm_iff\n\n",
 "mem_ℒp_neg_iff":
 "theorem mem_ℒp_neg_iff {f : α → E} : mem_ℒp (-f) p μ ↔ mem_ℒp f p μ :=\n  ⟨fun h => neg_neg f ▸ h.neg, mem_ℒp.neg⟩\n#align mem_ℒp_neg_iff mem_ℒp_neg_iff\n\n",
 "mem_ℒp_map_measure_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ᵐ » -/\ntheorem _root_.measurable_equiv.mem_ℒp_map_measure_iff (f : «expr ≃ᵐ » α β) {g : β → F} :\n    mem_ℒp g p (measure.map f μ) ↔ mem_ℒp (g ∘ f) p μ :=\n  f.measurable_embedding.mem_ℒp_map_measure_iff\n#align measurable_equiv.mem_ℒp_map_measure_iff measurable_equiv.mem_ℒp_map_measure_iff\n\n",
 "mem_ℒp_indicator_iff_restrict":
 "theorem mem_ℒp_indicator_iff_restrict (hs : measurable_set s) :\n    mem_ℒp (s.indicator f) p μ ↔ mem_ℒp f p (μ.restrict s) := by\n  simp [mem_ℒp, ae_strongly_measurable_indicator_iff hs, snorm_indicator_eq_snorm_restrict hs]\n#align mem_ℒp_indicator_iff_restrict mem_ℒp_indicator_iff_restrict\n\n",
 "mem_ℒp_indicator_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem mem_ℒp_indicator_const (p : ennreal) (hs : measurable_set s) (c : E) (hμsc : c = 0 ∨ μ s ≠ ennreal.top) :\n    mem_ℒp (s.indicator fun _ => c) p μ :=\n  by\n  rw [mem_ℒp_indicator_iff_restrict hs]\n  by_cases hp_zero : p = 0\n  · rw [hp_zero]\n    exact mem_ℒp_zero_iff_ae_strongly_measurable.mpr ae_strongly_measurable_const\n  by_cases hp_top : p = ennreal.top\n  · rw [hp_top]\n    exact mem_ℒp_top_of_bound ae_strongly_measurable_const («expr‖ ‖» c) (eventually_of_forall fun x => le_rfl)\n  rw [mem_ℒp_const_iff hp_zero hp_top, measure.restrict_apply_univ]\n  cases hμsc\n  · exact or.inl hμsc\n  · exact or.inr hμsc.lt_top\n#align mem_ℒp_indicator_const mem_ℒp_indicator_const\n\n",
 "mem_ℒp_finset_sum'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem mem_ℒp_finset_sum' {ι} (s : Finset ι) {f : ι → α → E} (hf : ∀ i ∈ s, mem_ℒp (f i) p μ) :\n    mem_ℒp (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) p\n      μ :=\n  by\n  convert mem_ℒp_finset_sum s hf\n  ext x\n  simp\n#align mem_ℒp_finset_sum' mem_ℒp_finset_sum'\n\n",
 "mem_ℒp_finset_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem mem_ℒp_finset_sum {ι} (s : Finset ι) {f : ι → α → E} (hf : ∀ i ∈ s, mem_ℒp (f i) p μ) :\n    mem_ℒp\n      (fun a =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i a))\n      p μ :=\n  by\n  haveI : decidable_eq ι := classical.dec_eq _\n  revert hf\n  refine' Finset.induction_on s _ _\n  · simp only [zero_mem_ℒp', finset.sum_empty, imp_true_iff]\n  · intro i s his ih hf\n    simp only [his, finset.sum_insert, not_false_iff]\n    exact (hf i (s.mem_insert_self i)).add (ih fun j hj => hf j (Finset.mem_insert_of_mem hj))\n#align mem_ℒp_finset_sum mem_ℒp_finset_sum\n\n",
 "mem_ℒp_const_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem mem_ℒp_const_iff {p : ennreal} {c : E} (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) :\n    mem_ℒp (fun x : α => c) p μ ↔ c = 0 ∨ μ Set.univ < ennreal.top :=\n  by\n  rw [← snorm_const_lt_top_iff hp_ne_zero hp_ne_top]\n  exact ⟨fun h => h.2, fun h => ⟨ae_strongly_measurable_const, h⟩⟩\n#align mem_ℒp_const_iff mem_ℒp_const_iff\n\n",
 "mem_ℒp_const":
 "theorem mem_ℒp_const (c : E) [is_finite_measure μ] : mem_ℒp (fun a : α => c) p μ :=\n  by\n  refine' ⟨ae_strongly_measurable_const, _⟩\n  by_cases h0 : p = 0\n  · simp [h0]\n  by_cases hμ : μ = 0\n  · simp [hμ]\n  rw [snorm_const c h0 hμ]\n  refine' ennreal.mul_lt_top ennreal.coe_ne_top _\n  refine' (ennreal.rpow_lt_top_of_nonneg _ (measure_ne_top μ Set.univ)).ne\n  simp\n#align mem_ℒp_const mem_ℒp_const\n\n",
 "mem_ℒp_congr_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp_congr_norm {f : α → E} {g : α → F} (hf : ae_strongly_measurable f μ) (hg : ae_strongly_measurable g μ)\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f a) = «expr‖ ‖» (g a))) :\n    mem_ℒp f p μ ↔ mem_ℒp g p μ :=\n  ⟨fun h2f => h2f.congr_norm hg h, fun h2g => h2g.congr_norm hf <| eventually_eq.symm h⟩\n#align mem_ℒp_congr_norm mem_ℒp_congr_norm\n\n",
 "mem_ℒp_congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem mem_ℒp_congr_ae {f g : α → E} (hfg : «expr =ᵐ[ ] » f μ g) : mem_ℒp f p μ ↔ mem_ℒp g p μ := by\n  simp only [mem_ℒp, snorm_congr_ae hfg, ae_strongly_measurable_congr hfg]\n#align mem_ℒp_congr_ae mem_ℒp_congr_ae\n\n",
 "mem_ℒp_comp_iff_of_antilipschitz":
 "theorem mem_ℒp_comp_iff_of_antilipschitz {α E F} {K K'} [measurable_space α] {μ : measure α} [normed_add_comm_group E]\n    [normed_add_comm_group F] {f : α → E} {g : E → F} (hg : lipschitz_with K g) (hg' : antilipschitz_with K' g)\n    (g0 : g 0 = 0) : mem_ℒp (g ∘ f) p μ ↔ mem_ℒp f p μ :=\n  ⟨fun h => h.of_comp_antilipschitz_with hg.uniform_continuous hg' g0, fun h => hg.comp_mem_ℒp g0 h⟩\n#align mem_ℒp_comp_iff_of_antilipschitz mem_ℒp_comp_iff_of_antilipschitz\n\n",
 "mem_ℒp_add_of_disjoint":
 "theorem mem_ℒp_add_of_disjoint {f g : α → E} (h : Disjoint (support f) (support g)) (hf : strongly_measurable f)\n    (hg : strongly_measurable g) : mem_ℒp (f + g) p μ ↔ mem_ℒp f p μ ∧ mem_ℒp g p μ :=\n  by\n  borelize E\n  refine' ⟨fun hfg => ⟨_, _⟩, fun h => h.1.add h.2⟩\n  · rw [← indicator_add_eq_left h]\n    exact hfg.indicator (measurable_set_support hf.measurable)\n  · rw [← indicator_add_eq_right h]\n    exact hfg.indicator (measurable_set_support hg.measurable)\n#align mem_ℒp_add_of_disjoint mem_ℒp_add_of_disjoint\n\n",
 "mem_ℒp":
 "protected theorem mem_ℒp (f : Lp E p μ) : mem_ℒp f p μ :=\n  ⟨Lp.ae_strongly_measurable f, f.prop⟩\n#align mem_ℒp mem_ℒp\n\n",
 "mem_bounded_continuous_function_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `bounded_continuous_function -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/-- By definition, the elements of `Lp.bounded_continuous_function E p μ` are the elements of\n`Lp E p μ` which contain a bounded continuous representative. -/\ntheorem measure_theory.Lp.mem_bounded_continuous_function_iff {f : Lp E p μ} :\n    f ∈ measure_theory.Lp.bounded_continuous_function E p μ ↔\n      ∃ f₀ : bounded_continuous_function α E, f₀.to_continuous_map.to_ae_eq_fun μ = (f : «expr →ₘ[ ] » α μ E) :=\n  add_subgroup.mem_add_subgroup_of\n#align measure_theory.Lp.mem_bounded_continuous_function_iff measure_theory.Lp.mem_bounded_continuous_function_iff\n\n",
 "mem_Lp_of_ae_le_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_Lp_of_ae_le_mul {c : exprℝ} {f : «expr →ₘ[ ] » α μ E} {g : Lp F p μ}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ c * «expr‖ ‖» (g x))) :\n    f ∈ Lp E p μ :=\n  mem_Lp_iff_mem_ℒp.2 <| mem_ℒp.of_le_mul (Lp.mem_ℒp g) f.ae_strongly_measurable h\n#align mem_Lp_of_ae_le_mul mem_Lp_of_ae_le_mul\n\n",
 "mem_Lp_of_ae_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_Lp_of_ae_le {f : «expr →ₘ[ ] » α μ E} {g : Lp F p μ}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ «expr‖ ‖» (g x))) :\n    f ∈ Lp E p μ :=\n  mem_Lp_iff_mem_ℒp.2 <| mem_ℒp.of_le (Lp.mem_ℒp g) f.ae_strongly_measurable h\n#align mem_Lp_of_ae_le mem_Lp_of_ae_le\n\n",
 "mem_Lp_of_ae_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_Lp_of_ae_bound [is_finite_measure μ] {f : «expr →ₘ[ ] » α μ E} (C : exprℝ)\n    (hfC :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ C)) :\n    f ∈ Lp E p μ :=\n  mem_Lp_iff_mem_ℒp.2 <| mem_ℒp.of_bound f.ae_strongly_measurable _ hfC\n#align mem_Lp_of_ae_bound mem_Lp_of_ae_bound\n\n",
 "mem_Lp_iff_snorm_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem mem_Lp_iff_snorm_lt_top {f : «expr →ₘ[ ] » α μ E} : f ∈ Lp E p μ ↔ snorm f p μ < ennreal.top :=\n  iff.refl _\n#align mem_Lp_iff_snorm_lt_top mem_Lp_iff_snorm_lt_top\n\n",
 "mem_Lp_iff_mem_ℒp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\ntheorem mem_Lp_iff_mem_ℒp {f : «expr →ₘ[ ] » α μ E} : f ∈ Lp E p μ ↔ mem_ℒp f p μ := by\n  simp [mem_Lp_iff_snorm_lt_top, mem_ℒp, f.strongly_measurable.ae_strongly_measurable]\n#align mem_Lp_iff_mem_ℒp mem_Lp_iff_mem_ℒp\n\n",
 "mem_Lp_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n-- check no diamond is created\ntheorem mem_Lp_const_smul (c : 𝕜) (f : Lp E p μ) : «expr • » c ↑f ∈ Lp E p μ :=\n  by\n  rw [mem_Lp_iff_snorm_lt_top, snorm_congr_ae (ae_eq_fun.coe_fn_smul _ _), snorm_const_smul, ennreal.mul_lt_top_iff]\n  exact or.inl ⟨ennreal.coe_lt_top, f.prop⟩\n#align mem_Lp_const_smul mem_Lp_const_smul\n\n",
 "mem_Lp_const":
 "theorem mem_Lp_const (α) {m : measurable_space α} (μ : measure α) (c : E) [is_finite_measure μ] :\n    @ae_eq_fun.const α _ _ μ _ c ∈ Lp E p μ :=\n  (mem_ℒp_const c).snorm_mk_lt_top\n#align mem_Lp_const mem_Lp_const\n\n",
 "mem_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `bounded_continuous_function -/\n/-- A bounded continuous function on a finite-measure space is in `Lp`. -/\ntheorem mem_Lp (f : bounded_continuous_function α E) : f.to_continuous_map.to_ae_eq_fun μ ∈ Lp E p μ :=\n  by\n  refine' Lp.mem_Lp_of_ae_bound («expr‖ ‖» f) _\n  filter_upwards [f.to_continuous_map.coe_fn_to_ae_eq_fun μ] with x _\n  convert f.norm_coe_le_norm x\n#align mem_Lp mem_Lp\n\n",
 "meas_ge_le_mul_pow_snorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem meas_ge_le_mul_pow_snorm {f : α → E} (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top)\n    (hf : ae_strongly_measurable f μ) {ε : ennreal} (hε : ε ≠ 0) :\n    μ { x | ε ≤ «expr‖ ‖₊» (f x) } ≤ ε⁻¹ ^ p.to_real * snorm f p μ ^ p.to_real :=\n  by\n  by_cases ε = ennreal.top\n  · simp [h]\n  have hεpow : ε ^ p.to_real ≠ 0 := (ennreal.rpow_pos (pos_iff_ne_zero.2 hε) h).ne.symm\n  have hεpow' : ε ^ p.to_real ≠ ennreal.top := ennreal.rpow_ne_top_of_nonneg ennreal.to_real_nonneg h\n  rw [ennreal.inv_rpow, ← ennreal.mul_le_mul_left hεpow hεpow', ← mul_assoc, ennreal.mul_inv_cancel hεpow hεpow',\n    one_mul]\n  exact mul_meas_ge_le_pow_snorm' μ hp_ne_zero hp_ne_top hf ε\n#align meas_ge_le_mul_pow_snorm meas_ge_le_mul_pow_snorm\n\n",
 "meas_ge_le_mul_pow_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem meas_ge_le_mul_pow_norm (f : Lp E p μ) (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top) {ε : ennreal}\n    (hε : ε ≠ 0) : μ { x | ε ≤ «expr‖ ‖₊» (f x) } ≤ ε⁻¹ ^ p.to_real * ennreal.of_real («expr‖ ‖» f) ^ p.to_real :=\n  (ennreal.of_real_to_real (snorm_ne_top f)).symm ▸\n    meas_ge_le_mul_pow_snorm μ hp_ne_zero hp_ne_top (Lp.ae_strongly_measurable f) hε\n#align meas_ge_le_mul_pow_norm meas_ge_le_mul_pow_norm\n\n",
 "lipschitz_with_pos_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem lipschitz_with_pos_part : lipschitz_with 1 fun x : exprℝ => max x 0 :=\n  lipschitz_with.of_dist_le_mul fun x y => by simp [real.dist_eq, abs_max_sub_max_le_abs]\n#align lipschitz_with_pos_part lipschitz_with_pos_part\n\n",
 "lipschitz_with_comp_Lp":
 "theorem lipschitz_with_comp_Lp [fact (1 ≤ p)] (hg : lipschitz_with c g) (g0 : g 0 = 0) :\n    lipschitz_with c (hg.comp_Lp g0 : Lp E p μ → Lp F p μ) :=\n  lipschitz_with.of_dist_le_mul fun f g => by simp [dist_eq_norm, norm_comp_Lp_sub_le]\n#align lipschitz_with_comp_Lp lipschitz_with_comp_Lp\n\n",
 "lintegral_rpow_tsum_coe_nnnorm_sub_le_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:72:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\nprivate theorem lintegral_rpow_tsum_coe_nnnorm_sub_le_tsum {f : ℕ → α → E} (hf : ∀ n, ae_strongly_measurable (f n) μ)\n    {p : exprℝ} (hp1 : 1 ≤ p) {B : ℕ → ennreal}\n    (h :\n      ∀ n,\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            ((finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (Finset.range (n + 1)) («expr‖ ‖₊» (f (i + 1) a - f i a)) :\n                ennreal) ^\n              p)\n            μ ≤\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ^ p) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          ((«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n                («expr‖ ‖₊» (f (i + 1) a - f i a)) :\n              ennreal) ^\n            p)\n          μ ^\n        (1 / p) ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) :=\n  by\n  have hp_pos : 0 < p := zero_lt_one.trans_le hp1\n  suffices h_pow :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        ((«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n              («expr‖ ‖₊» (f (i + 1) a - f i a)) :\n            ennreal) ^\n          p)\n        μ ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ^ p\n  · rwa [← ennreal.le_rpow_one_div_iff (by simp [hp_pos] : 0 < 1 / p), one_div_one_div]\n  have h_tsum_1 :\n    ∀ g : ℕ → ennreal,\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g i) =\n        at_top.liminf fun n =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range (n + 1)) (g i) :=\n    by\n    intro g\n    rw [ennreal.tsum_eq_liminf_sum_nat, ← liminf_nat_add _ 1]\n  simp_rw [h_tsum_1 _]\n  rw [← h_tsum_1]\n  have h_liminf_pow :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        ((at_top.liminf fun n =>\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range (n + 1)) («expr‖ ‖₊» (f (i + 1) a - f i a))) ^\n          p)\n        μ =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (at_top.liminf fun n =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range (n + 1)) («expr‖ ‖₊» (f (i + 1) a - f i a)) ^\n            p)\n        μ :=\n    by\n    refine' lintegral_congr fun x => _\n    have h_rpow_mono := ennreal.strict_mono_rpow_of_pos (zero_lt_one.trans_le hp1)\n    have h_rpow_surj := (ennreal.rpow_left_bijective hp_pos.ne.symm).2\n    refine' (h_rpow_mono.order_iso_of_surjective _ h_rpow_surj).liminf_apply _ _ _ _\n    all_goals\n      run_tac\n        is_bounded_default\n  rw [h_liminf_pow]\n  refine' (lintegral_liminf_le' _).trans _\n  ·\n    exact fun n =>\n      (finset.ae_measurable_sum (Finset.range (n + 1)) fun i _ => ((hf (i + 1)).sub (hf i)).ennnorm).pow_const _\n  · exact liminf_le_of_frequently_le' (frequently_of_forall h)\n#align lintegral_rpow_tsum_coe_nnnorm_sub_le_tsum lintegral_rpow_tsum_coe_nnnorm_sub_le_tsum\n\n",
 "lintegral_rpow_sum_coe_nnnorm_sub_le_rpow_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\nprivate theorem lintegral_rpow_sum_coe_nnnorm_sub_le_rpow_tsum {f : ℕ → α → E}\n    (hf : ∀ n, ae_strongly_measurable (f n) μ) {p : exprℝ} (hp1 : 1 ≤ p) {B : ℕ → ennreal} (n : ℕ)\n    (hn :\n      snorm'\n          (fun x =>\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range (n + 1)) («expr‖ ‖» (f (i + 1) x - f i x)))\n          p μ ≤\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i)) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        ((finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range (n + 1)) («expr‖ ‖₊» (f (i + 1) a - f i a)) :\n            ennreal) ^\n          p)\n        μ ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ^ p :=\n  by\n  have hp_pos : 0 < p := zero_lt_one.trans_le hp1\n  rw [← one_div_one_div p, @ennreal.le_rpow_one_div_iff _ _ (1 / p) (by simp [hp_pos]), one_div_one_div p]\n  simp_rw [snorm'] at hn\n  have h_nnnorm_nonneg :\n    (fun a =>\n        («expr‖ ‖₊»\n              (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.range (n + 1)) («expr‖ ‖» (f (i + 1) a - f i a))) :\n            ennreal) ^\n          p) =\n      fun a =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range (n + 1)) («expr‖ ‖₊» (f (i + 1) a - f i a) : ennreal) ^\n        p :=\n    by\n    ext1 a\n    congr\n    simp_rw [← of_real_norm_eq_coe_nnnorm]\n    rw [← ennreal.of_real_sum_of_nonneg]\n    · rw [real.norm_of_nonneg _]\n      exact finset.sum_nonneg fun x hx => norm_nonneg _\n    · exact fun x hx => norm_nonneg _\n  change\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          ((fun x =>\n              ↑(«expr‖ ‖₊»\n                    (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                      (Finset.range (n + 1)) («expr‖ ‖» (f (i + 1) x - f i x)))) ^\n                p)\n            a)\n          μ ^\n        (1 / p) ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) at\n    hn\n  rwa [h_nnnorm_nonneg] at hn\n#align lintegral_rpow_sum_coe_nnnorm_sub_le_rpow_tsum lintegral_rpow_sum_coe_nnnorm_sub_le_rpow_tsum\n\n",
 "lintegral_rpow_nnnorm_lt_top_of_snorm_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem lintegral_rpow_nnnorm_lt_top_of_snorm_lt_top {f : α → F} (hp_ne_zero : p ≠ 0) (hp_ne_top : p ≠ ennreal.top)\n    (hfp : snorm f p μ < ennreal.top) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (f a) ^ p.to_real) μ <\n      ennreal.top :=\n  by\n  apply lintegral_rpow_nnnorm_lt_top_of_snorm'_lt_top\n  · exact ennreal.to_real_pos hp_ne_zero hp_ne_top\n  · simpa [snorm_eq_snorm' hp_ne_zero hp_ne_top] using hfp\n#align lintegral_rpow_nnnorm_lt_top_of_snorm_lt_top lintegral_rpow_nnnorm_lt_top_of_snorm_lt_top\n\n",
 "lintegral_rpow_nnnorm_lt_top_of_snorm'_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem lintegral_rpow_nnnorm_lt_top_of_snorm'_lt_top {f : α → F} (hq0_lt : 0 < q) (hfq : snorm' f q μ < ennreal.top) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (f a) ^ q) μ <\n      ennreal.top :=\n  by\n  rw [lintegral_rpow_nnnorm_eq_rpow_snorm' hq0_lt]\n  exact ennreal.rpow_lt_top_of_nonneg (le_of_lt hq0_lt) (ne_of_lt hfq)\n#align lintegral_rpow_nnnorm_lt_top_of_snorm'_lt_top lintegral_rpow_nnnorm_lt_top_of_snorm'_lt_top\n\n",
 "lintegral_rpow_nnnorm_eq_rpow_snorm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem lintegral_rpow_nnnorm_eq_rpow_snorm' {f : α → F} (hq0_lt : 0 < q) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr‖ ‖₊» (f a) ^ q) μ =\n      snorm' f q μ ^ q :=\n  by\n  rw [snorm', ← ennreal.rpow_mul, one_div, inv_mul_cancel, ennreal.rpow_one]\n  exact (ne_of_lt hq0_lt).symm\n#align lintegral_rpow_nnnorm_eq_rpow_snorm' lintegral_rpow_nnnorm_eq_rpow_snorm'\n\n",
 "limsup_trim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_of -/\ntheorem limsup_trim (hm : m ≤ m0) {f : α → ennreal} (hf : (measurable_of m) f) :\n    (ν.trim hm).ae.limsup f = ν.ae.limsup f := by\n  simp_rw [limsup_eq]\n  suffices h_set_eq :\n    { a : ennreal |\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n          (ν.trim hm) (f n ≤ a) } =\n      { a : ennreal |\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" ν\n          (f n ≤ a) }\n  · rw [h_set_eq]\n  ext1 a\n  suffices h_meas_eq : ν { x | ¬f x ≤ a } = ν.trim hm { x | ¬f x ≤ a }\n  · simp_rw [Set.mem_setOf_eq, ae_iff, h_meas_eq]\n  refine' (trim_measurable_set_eq hm _).symm\n  refine' @measurable_set.compl _ _ m (@measurable_set_le (ennreal) _ _ _ _ m _ _ _ _ _ hf _)\n  exact @measurable_const _ _ _ m _\n#align limsup_trim limsup_trim\n\n",
 "left_of_add_measure":
 "theorem mem_ℒp.left_of_add_measure {f : α → E} (h : mem_ℒp f p (μ + ν)) : mem_ℒp f p μ :=\n  h.mono_measure <| measure.le_add_right <| le_refl _\n#align mem_ℒp.left_of_add_measure mem_ℒp.left_of_add_measure\n\n",
 "inner_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem mem_ℒp.inner_const {f : α → E'} (hf : mem_ℒp f p μ) (c : E') : mem_ℒp (fun a => «expr⟪ , ⟫» (f a) c) p μ :=\n  hf.of_le_mul (ae_strongly_measurable.inner hf.1 ae_strongly_measurable_const)\n    (eventually_of_forall fun x => by\n      rw [mul_comm]\n      exact norm_inner_le_norm _ _)\n#align mem_ℒp.inner_const mem_ℒp.inner_const\n\n",
 "indicator_const_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem indicator_const_empty : indicator_const_Lp p measurable_set.empty (by simp : μ ∅ ≠ ennreal.top) c = 0 :=\n  by\n  rw [Lp.eq_zero_iff_ae_eq_zero]\n  convert indicator_const_Lp_coe_fn\n  simp [set.indicator_empty']\n#align indicator_const_empty indicator_const_empty\n\n",
 "indicator_const_Lp_eq_to_span_singleton_comp_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem indicator_const_Lp_eq_to_span_singleton_comp_Lp {s : set α} [normed_space (exprℝ) F] (hs : measurable_set s)\n    (hμs : μ s ≠ ennreal.top) (x : F) :\n    indicator_const_Lp 2 hs hμs x =\n      (continuous_linear_map.to_span_singleton (exprℝ) x).comp_Lp (indicator_const_Lp 2 hs hμs (1 : exprℝ)) :=\n  by\n  ext1\n  refine' indicator_const_Lp_coe_fn.trans _\n  have h_comp_Lp :=\n    (continuous_linear_map.to_span_singleton (exprℝ) x).coe_fn_comp_Lp (indicator_const_Lp 2 hs hμs (1 : exprℝ))\n  rw [← eventually_eq] at h_comp_Lp\n  refine' eventually_eq.trans _ h_comp_Lp.symm\n  refine' (@indicator_const_Lp_coe_fn _ _ _ 2 μ _ s hs hμs (1 : exprℝ)).mono fun y hy => _\n  dsimp only\n  rw [hy]\n  simp_rw [continuous_linear_map.to_span_singleton_apply]\n  by_cases hy_mem : y ∈ s <;> simp [hy_mem, continuous_linear_map.lsmul_apply]\n#align indicator_const_Lp_eq_to_span_singleton_comp_Lp indicator_const_Lp_eq_to_span_singleton_comp_Lp\n\n",
 "indicator_const_Lp_disjoint_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/-- The indicator of a disjoint union of two sets is the sum of the indicators of the sets. -/\ntheorem indicator_const_Lp_disjoint_union {s t : set α} (hs : measurable_set s) (ht : measurable_set t)\n    (hμs : μ s ≠ ennreal.top) (hμt : μ t ≠ ennreal.top) (hst : s ∩ t = ∅) (c : E) :\n    indicator_const_Lp p (hs.union ht)\n        ((measure_union_le s t).trans_lt (lt_top_iff_ne_top.mpr (ennreal.add_ne_top.mpr ⟨hμs, hμt⟩))).ne c =\n      indicator_const_Lp p hs hμs c + indicator_const_Lp p ht hμt c :=\n  by\n  ext1\n  refine' indicator_const_Lp_coe_fn.trans (eventually_eq.trans _ (Lp.coe_fn_add _ _).symm)\n  refine' eventually_eq.trans _ (eventually_eq.add indicator_const_Lp_coe_fn.symm indicator_const_Lp_coe_fn.symm)\n  rw [set.indicator_union_of_disjoint (set.disjoint_iff_inter_eq_empty.mpr hst) _]\n#align indicator_const_Lp_disjoint_union indicator_const_Lp_disjoint_union\n\n",
 "indicator_const_Lp_coe_fn_nmem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem indicator_const_Lp_coe_fn_nmem :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (x ∉ s → indicator_const_Lp p hs hμs c x = 0) :=\n  indicator_const_Lp_coe_fn.mono fun x hx hxs => hx.trans (set.indicator_of_not_mem hxs _)\n#align indicator_const_Lp_coe_fn_nmem indicator_const_Lp_coe_fn_nmem\n\n",
 "indicator_const_Lp_coe_fn_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem indicator_const_Lp_coe_fn_mem :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (x ∈ s → indicator_const_Lp p hs hμs c x = c) :=\n  indicator_const_Lp_coe_fn.mono fun x hx hxs => hx.trans (set.indicator_of_mem hxs _)\n#align indicator_const_Lp_coe_fn_mem indicator_const_Lp_coe_fn_mem\n\n",
 "indicator_const_Lp_coe_fn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem indicator_const_Lp_coe_fn :\n    «expr =ᵐ[ ] » («expr⇑ » (indicator_const_Lp p hs hμs c)) μ (s.indicator fun _ => c) :=\n  mem_ℒp.coe_fn_to_Lp (mem_ℒp_indicator_const p hs c (or.inr hμs))\n#align indicator_const_Lp_coe_fn indicator_const_Lp_coe_fn\n\n",
 "indicator":
 "theorem mem_ℒp.indicator (hs : measurable_set s) (hf : mem_ℒp f p μ) : mem_ℒp (s.indicator f) p μ :=\n  ⟨hf.ae_strongly_measurable.indicator hs, lt_of_le_of_lt (snorm_indicator_le f) hf.snorm_lt_top⟩\n#align mem_ℒp.indicator mem_ℒp.indicator\n\n",
 "im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.im (hf : mem_ℒp f p μ) : mem_ℒp (fun x => is_R_or_C.im (f x)) p μ :=\n  haveI : ∀ x, «expr‖ ‖» (is_R_or_C.im (f x)) ≤ 1 * «expr‖ ‖» (f x) :=\n    by\n    intro x\n    rw [one_mul]\n    exact is_R_or_C.norm_im_le_norm (f x)\n  hf.of_le_mul hf.1.im (eventually_of_forall this)\n#align mem_ℒp.im mem_ℒp.im\n\n",
 "has_sum_of_has_sum_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\n/-- If a sum of continuous functions `g n` is convergent, and the same sum converges in `Lᵖ` to `h`,\nthen in fact `g n` converges uniformly to `h`.  -/\ntheorem has_sum_of_has_sum_Lp {β : Type _} [μ.is_open_pos_measure] [normed_field 𝕜] [normed_space 𝕜 E]\n    {g : β → «exprC( , )» α E} {f : «exprC( , )» α E} (hg : summable g)\n    (hg2 : has_sum (to_Lp p μ 𝕜 ∘ g) (to_Lp p μ 𝕜 f)) : has_sum g f :=\n  by\n  convert summable.has_sum hg\n  exact to_Lp_injective μ (hg2.unique ((to_Lp p μ 𝕜).has_sum <| summable.has_sum hg))\n#align has_sum_of_has_sum_Lp has_sum_of_has_sum_Lp\n\n",
 "ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ext_iff {f g : Lp E p μ} : f = g ↔ «expr =ᵐ[ ] » f μ g :=\n  ⟨fun h => by rw [h], fun h => ext h⟩\n#align ext_iff ext_iff\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n@[ext]\ntheorem ext {f g : Lp E p μ} (h : «expr =ᵐ[ ] » f μ g) : f = g :=\n  by\n  cases f\n  cases g\n  simp only [subtype.mk_eq_mk]\n  exact ae_eq_fun.ext h\n#align ext ext\n\n",
 "ess_sup_trim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_of -/\ntheorem ess_sup_trim (hm : m ≤ m0) {f : α → ennreal} (hf : (measurable_of m) f) : ess_sup f (ν.trim hm) = ess_sup f ν :=\n  by\n  simp_rw [ess_sup]\n  exact limsup_trim hm hf\n#align ess_sup_trim ess_sup_trim\n\n",
 "eq_zero_iff_ae_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem eq_zero_iff_ae_eq_zero {f : Lp E p μ} : f = 0 ↔ «expr =ᵐ[ ] » f μ 0 :=\n  by\n  constructor\n  · intro h\n    rw [h]\n    exact ae_eq_fun.coe_fn_const _ _\n  · intro h\n    ext1\n    filter_upwards [h, ae_eq_fun.coe_fn_const α (0 : E)] with _ ha h'a\n    rw [ha]\n    exact h'a.symm\n#align eq_zero_iff_ae_eq_zero eq_zero_iff_ae_eq_zero\n\n",
 "edist_to_Lp_zero":
 "@[simp]\ntheorem edist_to_Lp_zero (f : α → E) (hf : mem_ℒp f p μ) : edist (hf.to_Lp f) 0 = snorm f p μ :=\n  by\n  convert edist_to_Lp_to_Lp f 0 hf zero_mem_ℒp\n  simp\n#align edist_to_Lp_zero edist_to_Lp_zero\n\n",
 "edist_to_Lp_to_Lp":
 "@[simp]\ntheorem edist_to_Lp_to_Lp (f g : α → E) (hf : mem_ℒp f p μ) (hg : mem_ℒp g p μ) :\n    edist (hf.to_Lp f) (hg.to_Lp g) = snorm (f - g) p μ :=\n  by\n  rw [edist_def]\n  exact snorm_congr_ae (hf.coe_fn_to_Lp.sub hg.coe_fn_to_Lp)\n#align edist_to_Lp_to_Lp edist_to_Lp_to_Lp\n\n",
 "edist_def":
 "theorem edist_def (f g : Lp E p μ) : edist f g = snorm (f - g) p μ :=\n  rfl\n#align edist_def edist_def\n\n",
 "dist_def":
 "theorem dist_def (f g : Lp E p μ) : dist f g = (snorm (f - g) p μ).to_real :=\n  by\n  simp_rw [dist, norm_def]\n  congr 1\n  apply snorm_congr_ae (coe_fn_sub _ _)\n#align dist_def dist_def\n\n",
 "continuous_pos_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem continuous_pos_part [fact (1 ≤ p)] : continuous fun f : Lp (exprℝ) p μ => pos_part f :=\n  lipschitz_with.continuous_comp_Lp _ _\n#align continuous_pos_part continuous_pos_part\n\n",
 "continuous_neg_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem continuous_neg_part [fact (1 ≤ p)] : continuous fun f : Lp (exprℝ) p μ => neg_part f :=\n  by\n  have eq : (fun f : Lp (exprℝ) p μ => neg_part f) = fun f : Lp (exprℝ) p μ => pos_part (-f) := rfl\n  rw [eq]\n  exact continuous_pos_part.comp continuous_neg\n#align continuous_neg_part continuous_neg_part\n\n",
 "continuous_comp_Lp":
 "theorem continuous_comp_Lp [fact (1 ≤ p)] (hg : lipschitz_with c g) (g0 : g 0 = 0) :\n    continuous (hg.comp_Lp g0 : Lp E p μ → Lp F p μ) :=\n  (lipschitz_with_comp_Lp hg g0).continuous\n#align continuous_comp_Lp continuous_comp_Lp\n\n",
 "const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem mem_ℒp.const_smul {f : α → E} (hf : mem_ℒp f p μ) (c : 𝕜) : mem_ℒp («expr • » c f) p μ :=\n  ⟨ae_strongly_measurable.const_smul hf.1 c,\n    (snorm_const_smul c).le.trans_lt (ennreal.mul_lt_top ennreal.coe_ne_top hf.2.ne)⟩\n#align mem_ℒp.const_smul mem_ℒp.const_smul\n\n",
 "const_mul":
 "theorem mem_ℒp.const_mul {f : α → 𝕜} (hf : mem_ℒp f p μ) (c : 𝕜) : mem_ℒp (fun x => c * f x) p μ :=\n  hf.const_smul c\n#align mem_ℒp.const_mul mem_ℒp.const_mul\n\n",
 "const_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem mem_ℒp.const_inner (c : E') {f : α → E'} (hf : mem_ℒp f p μ) : mem_ℒp (fun a => «expr⟪ , ⟫» c (f a)) p μ :=\n  hf.of_le_mul (ae_strongly_measurable.inner ae_strongly_measurable_const hf.1)\n    (eventually_of_forall fun x => norm_inner_le_norm _ _)\n#align mem_ℒp.const_inner mem_ℒp.const_inner\n\n",
 "congr_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mem_ℒp.congr_norm {f : α → E} {g : α → F} (hf : mem_ℒp f p μ) (hg : ae_strongly_measurable g μ)\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f a) = «expr‖ ‖» (g a))) :\n    mem_ℒp g p μ :=\n  hf.mono hg <| eventually_eq.le <| eventually_eq.symm h\n#align mem_ℒp.congr_norm mem_ℒp.congr_norm\n\n",
 "complete_space_Lp_of_cauchy_complete_ℒp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem complete_space_Lp_of_cauchy_complete_ℒp [hp : fact (1 ≤ p)]\n    (H :\n      ∀ (f : ℕ → α → E) (hf : ∀ n, mem_ℒp (f n) p μ) (B : ℕ → ennreal)\n        (hB :\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) <\n            ennreal.top)\n        (h_cau : ∀ N n m : ℕ, N ≤ n → N ≤ m → snorm (f n - f m) p μ < B N),\n        ∃ (f_lim : α → E)(hf_lim_meas : mem_ℒp f_lim p μ),\n          at_top.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0)) :\n    complete_space (Lp E p μ) := by\n  let B := fun n : ℕ => ((1 : exprℝ) / 2) ^ n\n  have hB_pos : ∀ n, 0 < B n := fun n => pow_pos (div_pos zero_lt_one zero_lt_two) n\n  refine' metric.complete_of_convergent_controlled_sequences B hB_pos fun f hf => _\n  rsuffices ⟨f_lim, hf_lim_meas, h_tendsto⟩ :\n    ∃ (f_lim : α → E)(hf_lim_meas : mem_ℒp f_lim p μ), at_top.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0)\n  · exact ⟨hf_lim_meas.to_Lp f_lim, tendsto_Lp_of_tendsto_ℒp f_lim hf_lim_meas h_tendsto⟩\n  have hB : summable B := summable_geometric_two\n  cases' hB with M hB\n  let B1 n := ennreal.of_real (B n)\n  have hB1_has : has_sum B1 (ennreal.of_real M) :=\n    by\n    have h_tsum_B1 :\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B1 i) =\n        ennreal.of_real M :=\n      by\n      change\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n            (ennreal.of_real (B n)) =\n          ennreal.of_real M\n      rw [← hB.tsum_eq]\n      exact (ennreal.of_real_tsum_of_nonneg (fun n => le_of_lt (hB_pos n)) hB.summable).symm\n    have h_sum := (@ennreal.summable _ B1).has_sum\n    rwa [h_tsum_B1] at h_sum\n  have hB1 :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B1 i) <\n      ennreal.top :=\n    by\n    rw [hB1_has.tsum_eq]\n    exact ennreal.of_real_lt_top\n  let f1 : ℕ → α → E := fun n => f n\n  refine' H f1 (fun n => Lp.mem_ℒp (f n)) B1 hB1 fun N n m hn hm => _\n  specialize hf N n m hn hm\n  rw [dist_def] at hf\n  simp_rw [f1, B1]\n  rwa [ennreal.lt_of_real_iff_to_real_lt]\n  rw [snorm_congr_ae (Lp.coe_fn_sub _ _).symm]\n  exact Lp.snorm_ne_top _\n#align complete_space_Lp_of_cauchy_complete_ℒp complete_space_Lp_of_cauchy_complete_ℒp\n\n",
 "comp_mem_ℒp'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\ntheorem comp_mem_ℒp' (L : «expr →L[ ] » E 𝕜 F) {f : α → E} (hf : mem_ℒp f p μ) : mem_ℒp (L ∘ f) p μ :=\n  (L.comp_mem_ℒp (hf.to_Lp f)).ae_eq (eventually_eq.fun_comp hf.coe_fn_to_Lp _)\n#align comp_mem_ℒp' comp_mem_ℒp'\n\n",
 "comp_mem_ℒp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\ntheorem comp_mem_ℒp (L : «expr →L[ ] » E 𝕜 F) (f : Lp E p μ) : mem_ℒp (L ∘ f) p μ :=\n  (Lp.mem_ℒp (L.comp_Lp f)).ae_eq (L.coe_fn_comp_Lp' f)\n#align comp_mem_ℒp comp_mem_ℒp\n\n",
 "comp_Lp_zero":
 "@[simp]\ntheorem comp_Lp_zero (hg : lipschitz_with c g) (g0 : g 0 = 0) : hg.comp_Lp g0 (0 : Lp E p μ) = 0 :=\n  by\n  rw [Lp.eq_zero_iff_ae_eq_zero]\n  apply (coe_fn_comp_Lp _ _ _).trans\n  filter_upwards [Lp.coe_fn_zero E p μ] with _ ha\n  simp [ha, g0]\n#align comp_Lp_zero comp_Lp_zero\n\n",
 "coe_to_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n@[simp]\ntheorem coe_to_Lp [normed_field 𝕜] [normed_space 𝕜 E] (f : «exprC( , )» α E) :\n    (to_Lp p μ 𝕜 f : «expr →ₘ[ ] » α μ E) = f.to_ae_eq_fun μ :=\n  rfl\n#align coe_to_Lp coe_to_Lp\n\n",
 "coe_pos_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[norm_cast]\ntheorem coe_pos_part (f : Lp (exprℝ) p μ) :\n    (pos_part f : «expr →ₘ[ ] » α μ (exprℝ)) = (f : «expr →ₘ[ ] » α μ (exprℝ)).pos_part :=\n  rfl\n#align coe_pos_part coe_pos_part\n\n",
 "coe_nnnorm_ae_le_snorm_ess_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem coe_nnnorm_ae_le_snorm_ess_sup {m : measurable_space α} (f : α → F) (μ : measure α) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      ((«expr‖ ‖₊» (f x) : ennreal) ≤ snorm_ess_sup f μ) :=\n  ennreal.ae_le_ess_sup fun x => («expr‖ ‖₊» (f x) : ennreal)\n#align coe_nnnorm_ae_le_snorm_ess_sup coe_nnnorm_ae_le_snorm_ess_sup\n\n",
 "coe_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n@[simp]\ntheorem coe_mk {f : «expr →ₘ[ ] » α μ E} (hf : snorm f p μ < ennreal.top) :\n    ((⟨f, hf⟩ : Lp E p μ) : «expr →ₘ[ ] » α μ E) = f :=\n  rfl\n#align coe_mk coe_mk\n\n",
 "coe_fn_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem coe_fn_zero : «expr =ᵐ[ ] » («expr⇑ » (0 : Lp E p μ)) μ 0 :=\n  ae_eq_fun.coe_fn_zero\n#align coe_fn_zero coe_fn_zero\n\n",
 "coe_fn_to_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem coe_fn_to_Lp [normed_field 𝕜] [normed_space 𝕜 E] (f : «exprC( , )» α E) : «expr =ᵐ[ ] » (to_Lp p μ 𝕜 f) μ f :=\n  ae_eq_fun.coe_fn_mk f _\n#align coe_fn_to_Lp coe_fn_to_Lp\n\n",
 "coe_fn_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem coe_fn_sub (f g : Lp E p μ) : «expr =ᵐ[ ] » («expr⇑ » (f - g)) μ (f - g) :=\n  ae_eq_fun.coe_fn_sub _ _\n#align coe_fn_sub coe_fn_sub\n\n",
 "coe_fn_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem coe_fn_smul (c : 𝕜) (f : Lp E p μ) : «expr =ᵐ[ ] » («expr⇑ » («expr • » c f)) μ («expr • » c f) :=\n  ae_eq_fun.coe_fn_smul _ _\n#align coe_fn_smul coe_fn_smul\n\n",
 "coe_fn_pos_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem coe_fn_pos_part (f : Lp (exprℝ) p μ) : «expr =ᵐ[ ] » («expr⇑ » (pos_part f)) μ fun a => max (f a) 0 :=\n  ae_eq_fun.coe_fn_pos_part _\n#align coe_fn_pos_part coe_fn_pos_part\n\n",
 "coe_fn_neg_part_eq_max":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem coe_fn_neg_part_eq_max (f : Lp (exprℝ) p μ) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (neg_part f a = max (-f a) 0) :=\n  by\n  rw [neg_part]\n  filter_upwards [coe_fn_pos_part (-f), coe_fn_neg f] with _ h₁ h₂\n  rw [h₁, h₂, pi.neg_apply]\n#align coe_fn_neg_part_eq_max coe_fn_neg_part_eq_max\n\n",
 "coe_fn_neg_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem coe_fn_neg_part (f : Lp (exprℝ) p μ) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (neg_part f a = -min (f a) 0) :=\n  (coe_fn_neg_part_eq_max f).mono fun a h => by rw [h, ← max_neg_neg, neg_zero]\n#align coe_fn_neg_part coe_fn_neg_part\n\n",
 "coe_fn_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem coe_fn_neg (f : Lp E p μ) : «expr =ᵐ[ ] » («expr⇑ » (-f)) μ (-f) :=\n  ae_eq_fun.coe_fn_neg _\n#align coe_fn_neg coe_fn_neg\n\n",
 "coe_fn_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₘ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem coe_fn_mk {f : «expr →ₘ[ ] » α μ E} (hf : snorm f p μ < ennreal.top) : ((⟨f, hf⟩ : Lp E p μ) : α → E) = f :=\n  rfl\n#align coe_fn_mk coe_fn_mk\n\n",
 "coe_fn_comp_LpL":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem coe_fn_comp_LpL [fact (1 ≤ p)] (L : «expr →L[ ] » E 𝕜 F) (f : Lp E p μ) :\n    «expr =ᵐ[ ] » (L.comp_LpL p μ f) μ fun a => L (f a) :=\n  L.coe_fn_comp_Lp f\n#align coe_fn_comp_LpL coe_fn_comp_LpL\n\n",
 "coe_fn_comp_Lp'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem coe_fn_comp_Lp' (L : «expr →L[ ] » E 𝕜 F) (f : Lp E p μ) : «expr =ᵐ[ ] » (L.comp_Lp f) μ fun a => L (f a) :=\n  L.coe_fn_comp_Lp f\n#align coe_fn_comp_Lp' coe_fn_comp_Lp'\n\n",
 "coe_fn_comp_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem coe_fn_comp_Lp (L : «expr →L[ ] » E 𝕜 F) (f : Lp E p μ) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      ((L.comp_Lp f) a = L (f a)) :=\n  lipschitz_with.coe_fn_comp_Lp _ _ _\n#align coe_fn_comp_Lp coe_fn_comp_Lp\n\n",
 "coe_fn_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem coe_fn_add (f g : Lp E p μ) : «expr =ᵐ[ ] » («expr⇑ » (f + g)) μ (f + g) :=\n  ae_eq_fun.coe_fn_add _ _\n#align coe_fn_add coe_fn_add\n\n",
 "coe_Lp_submodule":
 "theorem coe_Lp_submodule : (Lp_submodule E p μ 𝕜).to_add_subgroup = Lp E p μ :=\n  rfl\n#align coe_Lp_submodule coe_Lp_submodule\n\n",
 "cauchy_tendsto_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem cauchy_tendsto_of_tendsto {f : ℕ → α → E} (hf : ∀ n, ae_strongly_measurable (f n) μ) (f_lim : α → E)\n    {B : ℕ → ennreal}\n    (hB :\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ≠\n        ennreal.top)\n    (h_cau : ∀ N n m : ℕ, N ≤ n → N ≤ m → snorm (f n - f m) p μ < B N)\n    (h_lim :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (tendsto (fun n => f n x) at_top ((nhds) (f_lim x)))) :\n    at_top.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0) :=\n  by\n  rw [ennreal.tendsto_at_top_zero]\n  intro ε hε\n  have h_B : ∃ N : ℕ, B N ≤ ε :=\n    by\n    suffices h_tendsto_zero : ∃ N : ℕ, ∀ n : ℕ, N ≤ n → B n ≤ ε\n    exact ⟨h_tendsto_zero.some, h_tendsto_zero.some_spec _ le_rfl⟩\n    exact (ennreal.tendsto_at_top_zero.mp (ennreal.tendsto_at_top_zero_of_tsum_ne_top hB)) ε hε\n  cases' h_B with N h_B\n  refine' ⟨N, fun n hn => _⟩\n  have h_sub : snorm (f n - f_lim) p μ ≤ at_top.liminf fun m => snorm (f n - f m) p μ :=\n    by\n    refine' snorm_lim_le_liminf_snorm (fun m => (hf n).sub (hf m)) (f n - f_lim) _\n    refine' h_lim.mono fun x hx => _\n    simp_rw [sub_eq_add_neg]\n    exact tendsto.add tendsto_const_nhds (tendsto.neg hx)\n  refine' h_sub.trans _\n  refine' liminf_le_of_frequently_le' (frequently_at_top.mpr _)\n  refine' fun N1 => ⟨max N N1, le_max_right _ _, _⟩\n  exact (h_cau N n (max N N1) hn (le_max_left _ _)).le.trans h_B\n#align cauchy_tendsto_of_tendsto cauchy_tendsto_of_tendsto\n\n",
 "cauchy_seq_Lp_iff_cauchy_seq_ℒp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem cauchy_seq_Lp_iff_cauchy_seq_ℒp {ι} [nonempty ι] [SemilatticeSup ι] [hp : fact (1 ≤ p)] (f : ι → Lp E p μ) :\n    cauchy_seq f ↔ tendsto (fun n : ι × ι => snorm (f n.fst - f n.snd) p μ) at_top ((nhds) 0) :=\n  by\n  simp_rw [cauchy_seq_iff_tendsto_dist_at_top_0, dist_def]\n  rw [← ennreal.zero_to_real, ennreal.tendsto_to_real_iff (fun n => _) ennreal.zero_ne_top]\n  rw [snorm_congr_ae (Lp.coe_fn_sub _ _).symm]\n  exact snorm_ne_top _\n#align cauchy_seq_Lp_iff_cauchy_seq_ℒp cauchy_seq_Lp_iff_cauchy_seq_ℒp\n\n",
 "cauchy_complete_ℒp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem cauchy_complete_ℒp [complete_space E] (hp : 1 ≤ p) {f : ℕ → α → E} (hf : ∀ n, mem_ℒp (f n) p μ)\n    {B : ℕ → ennreal}\n    (hB :\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ≠\n        ennreal.top)\n    (h_cau : ∀ N n m : ℕ, N ≤ n → N ≤ m → snorm (f n - f m) p μ < B N) :\n    ∃ (f_lim : α → E)(hf_lim_meas : mem_ℒp f_lim p μ), at_top.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0) :=\n  by\n  obtain ⟨f_lim, h_f_lim_meas, h_lim⟩ :\n    ∃ (f_lim : α → E)(hf_lim_meas : strongly_measurable f_lim),\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (tendsto (fun n => f n x) at_top (nhds (f_lim x)))\n  exact\n    exists_strongly_measurable_limit_of_tendsto_ae (fun n => (hf n).1)\n      (ae_tendsto_of_cauchy_snorm (fun n => (hf n).1) hp hB h_cau)\n  have h_tendsto' : at_top.tendsto (fun n => snorm (f n - f_lim) p μ) ((nhds) 0) :=\n    cauchy_tendsto_of_tendsto (fun m => (hf m).1) f_lim hB h_cau h_lim\n  have h_ℒp_lim : mem_ℒp f_lim p μ :=\n    mem_ℒp_of_cauchy_tendsto hp hf f_lim h_f_lim_meas.ae_strongly_measurable h_tendsto'\n  exact ⟨f_lim, h_ℒp_lim, h_tendsto'⟩\n#align cauchy_complete_ℒp cauchy_complete_ℒp\n\n",
 "antitone":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\nprotected theorem antitone [is_finite_measure μ] {p q : ennreal} (hpq : p ≤ q) : Lp E q μ ≤ Lp E p μ := fun f hf =>\n  (mem_ℒp.mem_ℒp_of_exponent_le ⟨f.ae_strongly_measurable, hf⟩ hpq).2\n#align antitone antitone\n\n",
 "ae_tendsto_of_cauchy_snorm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem ae_tendsto_of_cauchy_snorm' [complete_space E] {f : ℕ → α → E} {p : exprℝ}\n    (hf : ∀ n, ae_strongly_measurable (f n) μ) (hp1 : 1 ≤ p) {B : ℕ → ennreal}\n    (hB :\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ≠\n        ennreal.top)\n    (h_cau : ∀ N n m : ℕ, N ≤ n → N ≤ m → snorm' (f n - f m) p μ < B N) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (∃ l : E, at_top.tendsto (fun n => f n x) ((nhds) l)) :=\n  by\n  have h_summable :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (summable fun i : ℕ => f (i + 1) x - f i x) :=\n    by\n    have h1 :\n      ∀ n,\n        snorm'\n            (fun x =>\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.range (n + 1)) («expr‖ ‖» (f (i + 1) x - f i x)))\n            p μ ≤\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) :=\n      snorm'_sum_norm_sub_le_tsum_of_cauchy_snorm' hf hp1 h_cau\n    have h2 :\n      ∀ n,\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            ((finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (Finset.range (n + 1)) («expr‖ ‖₊» (f (i + 1) a - f i a)) :\n                ennreal) ^\n              p)\n            μ ≤\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ^ p :=\n      fun n => lintegral_rpow_sum_coe_nnnorm_sub_le_rpow_tsum hf hp1 n (h1 n)\n    have h3 :\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            ((«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n                  («expr‖ ‖₊» (f (i + 1) a - f i a)) :\n                ennreal) ^\n              p)\n            μ ^\n          (1 / p) ≤\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) :=\n      lintegral_rpow_tsum_coe_nnnorm_sub_le_tsum hf hp1 h2\n    have h4 :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        ((«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n              («expr‖ ‖₊» (f (i + 1) x - f i x)) :\n            ennreal) <\n          ennreal.top) :=\n      tsum_nnnorm_sub_ae_lt_top hf hp1 hB h3\n    exact\n      h4.mono fun x hx =>\n        summable_of_summable_nnnorm (ennreal.tsum_coe_ne_top_iff_summable.mp (lt_top_iff_ne_top.mp hx))\n  have h :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (∃ l : E,\n        at_top.tendsto\n          (fun n =>\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range n) (f (i + 1) x - f i x))\n          ((nhds) l)) :=\n    by\n    refine' h_summable.mono fun x hx => _\n    let hx_sum := hx.has_sum.tendsto_sum_nat\n    exact\n      ⟨«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (f (i + 1) x - f i x),\n        hx_sum⟩\n  refine' h.mono fun x hx => _\n  cases' hx with l hx\n  have h_rw_sum :\n    (fun n =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          (f (i + 1) x - f i x)) =\n      fun n => f n x - f 0 x :=\n    by\n    ext1 n\n    change\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          ((fun m => f m x) (i + 1) - (fun m => f m x) i) =\n        f n x - f 0 x\n    rw [finset.sum_range_sub]\n  rw [h_rw_sum] at hx\n  have hf_rw : (fun n => f n x) = fun n => f n x - f 0 x + f 0 x :=\n    by\n    ext1 n\n    abel\n  rw [hf_rw]\n  exact ⟨l + f 0 x, tendsto.add_const _ hx⟩\n#align ae_tendsto_of_cauchy_snorm' ae_tendsto_of_cauchy_snorm'\n\n",
 "ae_tendsto_of_cauchy_snorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem ae_tendsto_of_cauchy_snorm [complete_space E] {f : ℕ → α → E} (hf : ∀ n, ae_strongly_measurable (f n) μ)\n    (hp : 1 ≤ p) {B : ℕ → ennreal}\n    (hB :\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (B i) ≠\n        ennreal.top)\n    (h_cau : ∀ N n m : ℕ, N ≤ n → N ≤ m → snorm (f n - f m) p μ < B N) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (∃ l : E, at_top.tendsto (fun n => f n x) ((nhds) l)) :=\n  by\n  by_cases hp_top : p = ennreal.top\n  · simp_rw [hp_top] at *\n    have h_cau_ae :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (∀ N n m, N ≤ n → N ≤ m → («expr‖ ‖₊» ((f n - f m) x) : ennreal) < B N) :=\n      by\n      simp_rw [ae_all_iff]\n      exact fun N n m hnN hmN => ae_lt_of_ess_sup_lt (h_cau N n m hnN hmN)\n    simp_rw [snorm_exponent_top, snorm_ess_sup] at h_cau\n    refine' h_cau_ae.mono fun x hx => cauchy_seq_tendsto_of_complete _\n    refine' cauchy_seq_of_le_tendsto_0 (fun n => (B n).to_real) _ _\n    · intro n m N hnN hmN\n      specialize hx N n m hnN hmN\n      rw [dist_eq_norm, ← ennreal.to_real_of_real (norm_nonneg _),\n        ennreal.to_real_le_to_real ennreal.of_real_ne_top (ennreal.ne_top_of_tsum_ne_top hB N)]\n      rw [← of_real_norm_eq_coe_nnnorm] at hx\n      exact hx.le\n    · rw [← ennreal.zero_to_real]\n      exact tendsto.comp (ennreal.tendsto_to_real ennreal.zero_ne_top) (ennreal.tendsto_at_top_zero_of_tsum_ne_top hB)\n  have hp1 : 1 ≤ p.to_real :=\n    by\n    rw [← ennreal.of_real_le_iff_le_to_real hp_top, ennreal.of_real_one]\n    exact hp\n  have h_cau' : ∀ N n m : ℕ, N ≤ n → N ≤ m → snorm' (f n - f m) p.to_real μ < B N :=\n    by\n    intro N n m hn hm\n    specialize h_cau N n m hn hm\n    rwa [snorm_eq_snorm' (ennreal.zero_lt_one.trans_le hp).ne.symm hp_top] at h_cau\n  exact ae_tendsto_of_cauchy_snorm' hf hp1 hB h_cau'\n#align ae_tendsto_of_cauchy_snorm ae_tendsto_of_cauchy_snorm\n\n",
 "ae_strongly_measurable":
 "@[measurability]\nprotected theorem ae_strongly_measurable (f : Lp E p μ) : ae_strongly_measurable f μ :=\n  f.val.ae_strongly_measurable\n#align ae_strongly_measurable ae_strongly_measurable\n\n",
 "ae_eq_zero_of_snorm'_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_zero_of_snorm'_eq_zero {f : α → E} (hq0 : 0 ≤ q) (hf : ae_strongly_measurable f μ)\n    (h : snorm' f q μ = 0) : «expr =ᵐ[ ] » f μ 0 :=\n  by\n  rw [snorm', ennreal.rpow_eq_zero_iff] at h\n  cases h\n  · rw [lintegral_eq_zero_iff' (hf.ennnorm.pow_const q)] at h\n    refine' h.left.mono fun x hx => _\n    rw [pi.zero_apply, ennreal.rpow_eq_zero_iff] at hx\n    cases hx\n    · cases' hx with hx _\n      rwa [← ennreal.coe_zero, ennreal.coe_eq_coe, nnnorm_eq_zero] at hx\n    · exact absurd hx.left ennreal.coe_ne_top\n  · exfalso\n    rw [one_div, inv_lt_zero] at h\n    exact hq0.not_lt h.right\n#align ae_eq_zero_of_snorm'_eq_zero ae_eq_zero_of_snorm'_eq_zero\n\n",
 "ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem mem_ℒp.ae_eq {f g : α → E} (hfg : «expr =ᵐ[ ] » f μ g) (hf_Lp : mem_ℒp f p μ) : mem_ℒp g p μ :=\n  (mem_ℒp_congr_ae hfg).1 hf_Lp\n#align mem_ℒp.ae_eq mem_ℒp.ae_eq\n\n",
 "ae_bdd_liminf_at_top_rpow_of_snorm_bdd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem ae_bdd_liminf_at_top_rpow_of_snorm_bdd {p : ennreal} {f : ℕ → α → E} (hfmeas : ∀ n, measurable (f n))\n    (hbdd : ∀ n, snorm (f n) p μ ≤ R) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (liminf (fun n => («expr‖ ‖₊» (f n x) ^ p.to_real : ennreal)) at_top < ennreal.top) :=\n  by\n  by_cases hp0 : p.to_real = 0\n  · simp only [hp0, ennreal.rpow_zero]\n    refine' eventually_of_forall fun x => _\n    rw [liminf_const (1 : ennreal)]\n    exacts[ennreal.one_lt_top, at_top_ne_bot]\n  have hp : p ≠ 0 := fun h => by simpa [h] using hp0\n  have hp' : p ≠ ennreal.top := fun h => by simpa [h] using hp0\n  refine'\n    ae_lt_top (measurable_liminf fun n => (hfmeas n).nnnorm.coe_nnreal_ennreal.pow_const p.to_real)\n      (lt_of_le_of_lt (lintegral_liminf_le fun n => (hfmeas n).nnnorm.coe_nnreal_ennreal.pow_const p.to_real)\n          (lt_of_le_of_lt _\n            (ennreal.rpow_lt_top_of_nonneg ennreal.to_real_nonneg ennreal.coe_ne_top :\n              ↑R ^ p.to_real < ennreal.top))).ne\n  simp_rw [snorm_eq_lintegral_rpow_nnnorm hp hp'] at hbdd\n  simp_rw [liminf_eq, eventually_at_top]\n  exact\n    supₛ_le fun b ⟨a, ha⟩ => (ha a le_rfl).trans ((ennreal.rpow_one_div_le_iff (ennreal.to_real_pos hp hp')).1 (hbdd _))\n#align ae_bdd_liminf_at_top_rpow_of_snorm_bdd ae_bdd_liminf_at_top_rpow_of_snorm_bdd\n\n",
 "ae_bdd_liminf_at_top_of_snorm_bdd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:72:18: unsupported non-interactive tactic filter.is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem ae_bdd_liminf_at_top_of_snorm_bdd {p : ennreal} (hp : p ≠ 0) {f : ℕ → α → E} (hfmeas : ∀ n, measurable (f n))\n    (hbdd : ∀ n, snorm (f n) p μ ≤ R) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (liminf (fun n => («expr‖ ‖₊» (f n x) : ennreal)) at_top < ennreal.top) :=\n  by\n  by_cases hp' : p = ennreal.top\n  · subst hp'\n    simp_rw [snorm_exponent_top] at hbdd\n    have :\n      ∀ n,\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          ((«expr‖ ‖₊» (f n x) : ennreal) < R + 1) :=\n      fun n => ae_lt_of_ess_sup_lt (lt_of_le_of_lt (hbdd n) <| ennreal.lt_add_right ennreal.coe_ne_top one_ne_zero)\n    rw [← ae_all_iff] at this\n    filter_upwards [this] with x hx using lt_of_le_of_lt\n        (liminf_le_of_frequently_le' <| frequently_of_forall fun n => (hx n).le)\n        (ennreal.add_lt_top.2 ⟨ennreal.coe_lt_top, ennreal.one_lt_top⟩)\n  filter_upwards [ae_bdd_liminf_at_top_rpow_of_snorm_bdd hfmeas hbdd] with x hx\n  have hppos : 0 < p.to_real := ennreal.to_real_pos hp hp'\n  have :\n    liminf (fun n => («expr‖ ‖₊» (f n x) ^ p.to_real : ennreal)) at_top =\n      liminf (fun n => («expr‖ ‖₊» (f n x) : ennreal)) at_top ^ p.to_real :=\n    by\n    change\n      liminf (fun n => ennreal.order_iso_rpow p.to_real hppos («expr‖ ‖₊» (f n x) : ennreal)) at_top =\n        ennreal.order_iso_rpow p.to_real hppos (liminf (fun n => («expr‖ ‖₊» (f n x) : ennreal)) at_top)\n    refine' (order_iso.liminf_apply (ennreal.order_iso_rpow p.to_real _) _ _ _ _).symm <;>\n      run_tac\n        is_bounded_default\n  rw [this] at hx\n  rw [← ennreal.rpow_one (liminf (fun n => «expr‖ ‖₊» (f n x)) at_top), ← mul_inv_cancel hppos.ne.symm,\n    ennreal.rpow_mul]\n  exact ennreal.rpow_lt_top_of_nonneg (inv_nonneg.2 hppos.le) hx.ne\n#align ae_bdd_liminf_at_top_of_snorm_bdd ae_bdd_liminf_at_top_of_snorm_bdd\n\n",
 "add_comp_LpL":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\ntheorem add_comp_LpL [fact (1 ≤ p)] (L L' : «expr →L[ ] » E 𝕜 F) :\n    (L + L').comp_LpL p μ = L.comp_LpL p μ + L'.comp_LpL p μ :=\n  by\n  ext1 f\n  exact add_comp_Lp L L' f\n#align add_comp_LpL add_comp_LpL\n\n",
 "add_comp_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\ntheorem add_comp_Lp (L L' : «expr →L[ ] » E 𝕜 F) (f : Lp E p μ) : (L + L').comp_Lp f = L.comp_Lp f + L'.comp_Lp f :=\n  by\n  ext1\n  refine' (coe_fn_comp_Lp' (L + L') f).trans _\n  refine' eventually_eq.trans _ (Lp.coe_fn_add _ _).symm\n  refine' eventually_eq.trans _ (eventually_eq.add (L.coe_fn_comp_Lp' f).symm (L'.coe_fn_comp_Lp' f).symm)\n  refine' eventually_of_forall fun x => _\n  rfl\n#align add_comp_Lp add_comp_Lp\n\n",
 "add":
 "theorem mem_ℒp.add {f g : α → E} (hf : mem_ℒp f p μ) (hg : mem_ℒp g p μ) : mem_ℒp (f + g) p μ :=\n  ⟨ae_strongly_measurable.add hf.1 hg.1, snorm_add_lt_top hf hg⟩\n#align mem_ℒp.add mem_ℒp.add\n\n",
 "Lp_norm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `bounded_continuous_function -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The `Lp`-norm of a bounded continuous function is at most a constant (depending on the measure\nof the whole space) times its sup-norm. -/\ntheorem Lp_norm_le (f : bounded_continuous_function α E) :\n    «expr‖ ‖» (⟨f.to_continuous_map.to_ae_eq_fun μ, mem_Lp f⟩ : Lp E p μ) ≤\n      measure_univ_nnreal μ ^ p.to_real⁻¹ * «expr‖ ‖» f :=\n  by\n  apply Lp.norm_le_of_ae_bound (norm_nonneg f)\n  · refine' (f.to_continuous_map.coe_fn_to_ae_eq_fun μ).mono _\n    intro x hx\n    convert f.norm_coe_le_norm x\n  · infer_instance\n#align Lp_norm_le Lp_norm_le\n\n"}