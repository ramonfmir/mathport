{"tendsto_nearest_pt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_nearest_pt {e : ℕ → α} {x : α} (hx : x ∈ closure (range e)) :\n    tendsto (fun N => nearest_pt e N x) at_top ((nhds) x) :=\n  by\n  refine' (at_top_basis.tendsto_iff nhds_basis_eball).2 fun ε hε => _\n  rcases emetric.mem_closure_iff.1 hx ε hε with ⟨_, ⟨N, rfl⟩, hN⟩\n  rw [edist_comm] at hN\n  exact ⟨N, trivial, fun n hn => (edist_nearest_pt_le e x hn).trans_lt hN⟩\n#align tendsto_nearest_pt tendsto_nearest_pt\n\n",
 "tendsto_approx_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_approx_on {f : β → α} (hf : measurable f) {s : set α} {y₀ : α} (h₀ : y₀ ∈ s) [separable_space s] {x : β}\n    (hx : f x ∈ closure s) : tendsto (fun n => approx_on f hf s y₀ h₀ n x) at_top (nhds <| f x) :=\n  by\n  haveI : nonempty s := ⟨⟨y₀, h₀⟩⟩\n  rw [← @Subtype.range_coe _ s, ← image_univ, ← (dense_range_dense_seq s).closure_eq] at hx\n  simp only [approx_on, coe_comp]\n  refine' tendsto_nearest_pt (closure_minimal _ is_closed_closure hx)\n  simp only [Nat.range_casesOn, closure_union, range_comp coe]\n  exact subset.trans (image_closure_subset_closure_image continuous_subtype_coe) (subset_union_right _ _)\n#align tendsto_approx_on tendsto_approx_on\n\n",
 "nearest_pt_zero":
 "@[simp]\ntheorem nearest_pt_zero (e : ℕ → α) : nearest_pt e 0 = const α (e 0) :=\n  rfl\n#align nearest_pt_zero nearest_pt_zero\n\n",
 "nearest_pt_ind_zero":
 "/-\nCopyright (c) 2019 Zhouhang Zhou. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Zhouhang Zhou, Yury Kudryashov, Heather Macbeth\n-/\n@[simp]\ntheorem nearest_pt_ind_zero (e : ℕ → α) : nearest_pt_ind e 0 = const α 0 :=\n  rfl\n#align nearest_pt_ind_zero nearest_pt_ind_zero\n\n",
 "nearest_pt_ind_succ":
 "theorem nearest_pt_ind_succ (e : ℕ → α) (N : ℕ) (x : α) :\n    nearest_pt_ind e (N + 1) x = if ∀ k ≤ N, edist (e (N + 1)) x < edist (e k) x then N + 1 else nearest_pt_ind e N x :=\n  by\n  simp only [nearest_pt_ind, coe_piecewise, set.piecewise]\n  congr\n  simp\n#align nearest_pt_ind_succ nearest_pt_ind_succ\n\n",
 "nearest_pt_ind_le":
 "theorem nearest_pt_ind_le (e : ℕ → α) (N : ℕ) (x : α) : nearest_pt_ind e N x ≤ N :=\n  by\n  induction' N with N ihN; · simp\n  simp only [nearest_pt_ind_succ]\n  split_ifs\n  exacts[le_rfl, ihN.trans N.le_succ]\n#align nearest_pt_ind_le nearest_pt_ind_le\n\n",
 "edist_nearest_pt_le":
 "theorem edist_nearest_pt_le (e : ℕ → α) (x : α) {k N : ℕ} (hk : k ≤ N) : edist (nearest_pt e N x) x ≤ edist (e k) x :=\n  by\n  induction' N with N ihN generalizing k\n  · simp [nonpos_iff_eq_zero.1 hk, le_refl]\n  · simp only [nearest_pt, nearest_pt_ind_succ, map_apply]\n    split_ifs\n    · rcases hk.eq_or_lt with (rfl | hk)\n      exacts[le_rfl, (h k (Nat.lt_succ_iff.1 hk)).le]\n    · push_neg  at h\n      rcases h with ⟨l, hlN, hxl⟩\n      rcases hk.eq_or_lt with (rfl | hk)\n      exacts[(ihN hlN).trans hxl, ihN (Nat.lt_succ_iff.1 hk)]\n#align edist_nearest_pt_le edist_nearest_pt_le\n\n",
 "edist_approx_on_y0_le":
 "theorem edist_approx_on_y0_le {f : β → α} (hf : measurable f) {s : set α} {y₀ : α} (h₀ : y₀ ∈ s) [separable_space s]\n    (x : β) (n : ℕ) : edist y₀ (approx_on f hf s y₀ h₀ n x) ≤ edist y₀ (f x) + edist y₀ (f x) :=\n  calc\n    edist y₀ (approx_on f hf s y₀ h₀ n x) ≤ edist y₀ (f x) + edist (approx_on f hf s y₀ h₀ n x) (f x) :=\n      edist_triangle_right _ _ _\n    _ ≤ edist y₀ (f x) + edist y₀ (f x) := add_le_add_left (edist_approx_on_le hf h₀ x n) _\n    \n#align edist_approx_on_y0_le edist_approx_on_y0_le\n\n",
 "edist_approx_on_mono":
 "theorem edist_approx_on_mono {f : β → α} (hf : measurable f) {s : set α} {y₀ : α} (h₀ : y₀ ∈ s) [separable_space s]\n    (x : β) {m n : ℕ} (h : m ≤ n) :\n    edist (approx_on f hf s y₀ h₀ n x) (f x) ≤ edist (approx_on f hf s y₀ h₀ m x) (f x) :=\n  by\n  dsimp only [approx_on, coe_comp, (· ∘ ·)]\n  exact edist_nearest_pt_le _ _ ((nearest_pt_ind_le _ _ _).trans h)\n#align edist_approx_on_mono edist_approx_on_mono\n\n",
 "edist_approx_on_le":
 "theorem edist_approx_on_le {f : β → α} (hf : measurable f) {s : set α} {y₀ : α} (h₀ : y₀ ∈ s) [separable_space s]\n    (x : β) (n : ℕ) : edist (approx_on f hf s y₀ h₀ n x) (f x) ≤ edist y₀ (f x) :=\n  edist_approx_on_mono hf h₀ x (zero_le n)\n#align edist_approx_on_le edist_approx_on_le\n\n",
 "approx_on_zero":
 "@[simp]\ntheorem approx_on_zero {f : β → α} (hf : measurable f) {s : set α} {y₀ : α} (h₀ : y₀ ∈ s) [separable_space s] (x : β) :\n    approx_on f hf s y₀ h₀ 0 x = y₀ :=\n  rfl\n#align approx_on_zero approx_on_zero\n\n",
 "approx_on_mem":
 "theorem approx_on_mem {f : β → α} (hf : measurable f) {s : set α} {y₀ : α} (h₀ : y₀ ∈ s) [separable_space s] (n : ℕ)\n    (x : β) : approx_on f hf s y₀ h₀ n x ∈ s :=\n  by\n  haveI : nonempty s := ⟨⟨y₀, h₀⟩⟩\n  suffices ∀ n, (nat.cases_on n y₀ (coe ∘ dense_seq s) : α) ∈ s by apply this\n  rintro (_ | n)\n  exacts[h₀, Subtype.mem _]\n#align approx_on_mem approx_on_mem\n\n",
 "approx_on_comp":
 "@[simp]\ntheorem approx_on_comp {γ : Type _} [measurable_space γ] {f : β → α} (hf : measurable f) {g : γ → β} (hg : measurable g)\n    {s : set α} {y₀ : α} (h₀ : y₀ ∈ s) [separable_space s] (n : ℕ) :\n    approx_on (f ∘ g) (hf.comp hg) s y₀ h₀ n = (approx_on f hf s y₀ h₀ n).comp g hg :=\n  rfl\n#align approx_on_comp approx_on_comp\n\n"}