{"with_density·µ•_zero":
 "@[simp]\ntheorem with_density·µ•_zero : Œº.with_density·µ• (0 : Œ± ‚Üí E) = 0 :=\n  by\n  ext1 s hs\n  erw [with_density·µ•_apply (integrable_zero Œ± E Œº) hs]\n  simp\n#align with_density·µ•_zero with_density·µ•_zero\n\n",
 "with_density·µ•_trim_eq_integral":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚à´ in , ‚àÇ ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚à´ in , ‚àÇ ¬ª -/\ntheorem integrable.with_density·µ•_trim_eq_integral {m m0 : measurable_space Œ±} {Œº : measure Œ±} (hm : m ‚â§ m0)\n    {f : Œ± ‚Üí expr‚Ñù} (hf : integrable f Œº) {i : set Œ±} (hi : (measurable_set_of m) i) :\n    (Œº.with_density·µ• f).trim hm i =\n      ¬´expr‚à´ in , ‚àÇ ¬ª \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚à´ in , ‚àÇ ¬ª\" i (f x)\n        Œº :=\n  by rw [vector_measure.trim_measurable_set_eq hm hi, with_density·µ•_apply hf (hm _ hi)]\n#align integrable.with_density·µ•_trim_eq_integral integrable.with_density·µ•_trim_eq_integral\n\n",
 "with_density·µ•_trim_absolutely_continuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.absolutely_continuous -/\ntheorem integrable.with_density·µ•_trim_absolutely_continuous {m m0 : measurable_space Œ±} {Œº : measure Œ±} (hm : m ‚â§ m0)\n    (hfi : integrable f Œº) :\n    vector_measure.absolutely_continuous ((Œº.with_density·µ• f).trim hm) (Œº.trim hm).to_ennreal_vector_measure :=\n  by\n  refine' vector_measure.absolutely_continuous.mk fun j hj‚ÇÅ hj‚ÇÇ => _\n  rw [measure.to_ennreal_vector_measure_apply_measurable hj‚ÇÅ, trim_measurable_set_eq hm hj‚ÇÅ] at hj‚ÇÇ\n  rw [vector_measure.trim_measurable_set_eq hm hj‚ÇÅ, with_density·µ•_apply hfi (hm _ hj‚ÇÅ)]\n  simp only [measure.restrict_eq_zero.mpr hj‚ÇÇ, integral_zero_measure]\n#align integrable.with_density·µ•_trim_absolutely_continuous integrable.with_density·µ•_trim_absolutely_continuous\n\n",
 "with_density·µ•_to_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚à´‚Åª , ‚àÇ ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚à´‚Åª , ‚àÇ ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem with_density·µ•_to_real {f : Œ± ‚Üí ennreal} (hfm : ae_measurable f Œº)\n    (hf :\n      ¬´expr‚à´‚Åª , ‚àÇ ¬ª \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚à´‚Åª , ‚àÇ ¬ª\" (f x) Œº ‚â†\n        ennreal.top) :\n    (Œº.with_density·µ• fun x => (f x).to_real) =\n      @to_signed_measure Œ± _ (Œº.with_density f) (is_finite_measure_with_density hf) :=\n  by\n  have hfi := integrable_to_real_of_lintegral_ne_top hfm hf\n  ext (i hi)\n  rw [with_density·µ•_apply hfi hi, to_signed_measure_apply_measurable hi, with_density_apply _ hi,\n    integral_to_real hfm.restrict]\n  refine' ae_lt_top' hfm.restrict (ne_top_of_le_ne_top hf _)\n  conv_rhs => rw [‚Üê set_lintegral_univ]\n  exact lintegral_mono_set (Set.subset_univ _)\n#align with_density·µ•_to_real with_density·µ•_to_real\n\n",
 "with_density·µ•_sub'":
 "theorem with_density·µ•_sub' (hf : integrable f Œº) (hg : integrable g Œº) :\n    (Œº.with_density·µ• fun x => f x - g x) = Œº.with_density·µ• f - Œº.with_density·µ• g :=\n  with_density·µ•_sub hf hg\n#align with_density·µ•_sub' with_density·µ•_sub'\n\n",
 "with_density·µ•_sub":
 "@[simp]\ntheorem with_density·µ•_sub (hf : integrable f Œº) (hg : integrable g Œº) :\n    Œº.with_density·µ• (f - g) = Œº.with_density·µ• f - Œº.with_density·µ• g := by\n  rw [sub_eq_add_neg, sub_eq_add_neg, with_density·µ•_add hf hg.neg, with_density·µ•_neg]\n#align with_density·µ•_sub with_density·µ•_sub\n\n",
 "with_density·µ•_smul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Ä¢ ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Ä¢ ¬ª -/\ntheorem with_density·µ•_smul' {ùïú : Type _} [nontrivially_normed_field ùïú] [normed_space ùïú E] [SMulCommClass (expr‚Ñù) ùïú E]\n    (f : Œ± ‚Üí E) (r : ùïú) : (Œº.with_density·µ• fun x => ¬´expr ‚Ä¢ ¬ª r (f x)) = ¬´expr ‚Ä¢ ¬ª r (Œº.with_density·µ• f) :=\n  with_density·µ•_smul f r\n#align with_density·µ•_smul' with_density·µ•_smul'\n\n",
 "with_density·µ•_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Ä¢ ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Ä¢ ¬ª -/\n@[simp]\ntheorem with_density·µ•_smul {ùïú : Type _} [nontrivially_normed_field ùïú] [normed_space ùïú E] [SMulCommClass (expr‚Ñù) ùïú E]\n    (f : Œ± ‚Üí E) (r : ùïú) : Œº.with_density·µ• (¬´expr ‚Ä¢ ¬ª r f) = ¬´expr ‚Ä¢ ¬ª r (Œº.with_density·µ• f) :=\n  by\n  by_cases hf : integrable f Œº\n  ¬∑ ext1 i hi\n    rw [with_density·µ•_apply (hf.smul r) hi, vector_measure.smul_apply, with_density·µ•_apply hf hi, ‚Üê integral_smul r f]\n    rfl\n  ¬∑ by_cases hr : r = 0\n    ¬∑ rw [hr, zero_smul, zero_smul, with_density·µ•_zero]\n    ¬∑ rw [with_density·µ•, with_density·µ•, dif_neg hf, dif_neg, smul_zero]\n      rwa [integrable_smul_iff hr f]\n#align with_density·µ•_smul with_density·µ•_smul\n\n",
 "with_density·µ•_neg'":
 "theorem with_density·µ•_neg' : (Œº.with_density·µ• fun x => -f x) = -Œº.with_density·µ• f :=\n  with_density·µ•_neg\n#align with_density·µ•_neg' with_density·µ•_neg'\n\n",
 "with_density·µ•_neg":
 "@[simp]\ntheorem with_density·µ•_neg : Œº.with_density·µ• (-f) = -Œº.with_density·µ• f :=\n  by\n  by_cases hf : integrable f Œº\n  ¬∑ ext1 i hi\n    rw [vector_measure.neg_apply, with_density·µ•_apply hf hi, ‚Üê integral_neg, with_density·µ•_apply hf.neg hi]\n    rfl\n  ¬∑ rw [with_density·µ•, with_density·µ•, dif_neg hf, dif_neg, neg_zero]\n    rwa [integrable_neg_iff]\n#align with_density·µ•_neg with_density·µ•_neg\n\n",
 "with_density·µ•_eq_with_density_pos_part_sub_with_density_neg_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\ntheorem with_density·µ•_eq_with_density_pos_part_sub_with_density_neg_part {f : Œ± ‚Üí expr‚Ñù} (hfi : integrable f Œº) :\n    Œº.with_density·µ• f =\n      @to_signed_measure Œ± _ (Œº.with_density fun x => ennreal.of_real <| f x)\n          (is_finite_measure_with_density_of_real hfi.2) -\n        @to_signed_measure Œ± _ (Œº.with_density fun x => ennreal.of_real <| -f x)\n          (is_finite_measure_with_density_of_real hfi.neg.2) :=\n  by\n  ext (i hi)\n  rw [with_density·µ•_apply hfi hi, integral_eq_lintegral_pos_part_sub_lintegral_neg_part hfi.integrable_on,\n    vector_measure.sub_apply, to_signed_measure_apply_measurable hi, to_signed_measure_apply_measurable hi,\n    with_density_apply _ hi, with_density_apply _ hi]\n#align\n  with_density·µ•_eq_with_density_pos_part_sub_with_density_neg_part with_density·µ•_eq_with_density_pos_part_sub_with_density_neg_part\n\n",
 "with_density·µ•_eq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr =·µê[ ] ¬ª -/\ntheorem integrable.with_density·µ•_eq_iff {f g : Œ± ‚Üí E} (hf : integrable f Œº) (hg : integrable g Œº) :\n    Œº.with_density·µ• f = Œº.with_density·µ• g ‚Üî ¬´expr =·µê[ ] ¬ª f Œº g :=\n  ‚ü®fun hfg => hf.ae_eq_of_with_density·µ•_eq hg hfg, fun h => with_density·µ•_eq.congr_ae h‚ü©\n#align integrable.with_density·µ•_eq_iff integrable.with_density·µ•_eq_iff\n\n",
 "with_density·µ•_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚à´ in , ‚àÇ ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚à´ in , ‚àÇ ¬ª -/\n/-\nCopyright (c) 2021 Kexing Ying. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kexing Ying\n-/\ntheorem with_density·µ•_apply (hf : integrable f Œº) {s : set Œ±} (hs : measurable_set s) :\n    Œº.with_density·µ• f s =\n      ¬´expr‚à´ in , ‚àÇ ¬ª \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚à´ in , ‚àÇ ¬ª\" s (f x)\n        Œº :=\n  by\n  rw [with_density·µ•, dif_pos hf]\n  exact dif_pos hs\n#align with_density·µ•_apply with_density·µ•_apply\n\n",
 "with_density·µ•_add'":
 "theorem with_density·µ•_add' (hf : integrable f Œº) (hg : integrable g Œº) :\n    (Œº.with_density·µ• fun x => f x + g x) = Œº.with_density·µ• f + Œº.with_density·µ• g :=\n  with_density·µ•_add hf hg\n#align with_density·µ•_add' with_density·µ•_add'\n\n",
 "with_density·µ•_add":
 "@[simp]\ntheorem with_density·µ•_add (hf : integrable f Œº) (hg : integrable g Œº) :\n    Œº.with_density·µ• (f + g) = Œº.with_density·µ• f + Œº.with_density·µ• g :=\n  by\n  ext1 i hi\n  rw [with_density·µ•_apply (hf.add hg) hi, vector_measure.add_apply, with_density·µ•_apply hf hi,\n    with_density·µ•_apply hg hi]\n  simp_rw [pi.add_apply]\n  rw [integral_add] <;> rw [‚Üê integrable_on_univ]\n  ¬∑ exact hf.integrable_on.restrict measurable_set.univ\n  ¬∑ exact hg.integrable_on.restrict measurable_set.univ\n#align with_density·µ•_add with_density·µ•_add\n\n",
 "with_density·µ•_absolutely_continuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.absolutely_continuous -/\ntheorem measure.with_density·µ•_absolutely_continuous (Œº : measure Œ±) (f : Œ± ‚Üí expr‚Ñù) :\n    vector_measure.absolutely_continuous (Œº.with_density·µ• f) Œº.to_ennreal_vector_measure :=\n  by\n  by_cases hf : integrable f Œº\n  ¬∑ refine' vector_measure.absolutely_continuous.mk fun i hi‚ÇÅ hi‚ÇÇ => _\n    rw [to_ennreal_vector_measure_apply_measurable hi‚ÇÅ] at hi‚ÇÇ\n    rw [with_density·µ•_apply hf hi‚ÇÅ, measure.restrict_zero_set hi‚ÇÇ, integral_zero_measure]\n  ¬∑ rw [with_density·µ•, dif_neg hf]\n    exact vector_measure.absolutely_continuous.zero _\n#align measure.with_density·µ•_absolutely_continuous measure.with_density·µ•_absolutely_continuous\n\n",
 "congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr =·µê[ ] ¬ª -/\ntheorem with_density·µ•_eq.congr_ae {f g : Œ± ‚Üí E} (h : ¬´expr =·µê[ ] ¬ª f Œº g) : Œº.with_density·µ• f = Œº.with_density·µ• g :=\n  by\n  by_cases hf : integrable f Œº\n  ¬∑ ext (i hi)\n    rw [with_density·µ•_apply hf hi, with_density·µ•_apply (hf.congr h) hi]\n    exact integral_congr_ae (ae_restrict_of_ae h)\n  ¬∑ have hg : ¬¨integrable g Œº := by\n      intro hg\n      exact hf (hg.congr h.symm)\n    rw [with_density·µ•, with_density·µ•, dif_neg hf, dif_neg hg]\n#align with_density·µ•_eq.congr_ae with_density·µ•_eq.congr_ae\n\n",
 "ae_eq_of_with_density·µ•_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr =·µê[ ] ¬ª -/\n/-- Having the same density implies the underlying functions are equal almost everywhere. -/\ntheorem integrable.ae_eq_of_with_density·µ•_eq {f g : Œ± ‚Üí E} (hf : integrable f Œº) (hg : integrable g Œº)\n    (hfg : Œº.with_density·µ• f = Œº.with_density·µ• g) : ¬´expr =·µê[ ] ¬ª f Œº g :=\n  by\n  refine' hf.ae_eq_of_forall_set_integral_eq f g hg fun i hi _ => _\n  rw [‚Üê with_density·µ•_apply hf hi, hfg, with_density·µ•_apply hg hi]\n#align integrable.ae_eq_of_with_density·µ•_eq integrable.ae_eq_of_with_density·µ•_eq\n\n"}