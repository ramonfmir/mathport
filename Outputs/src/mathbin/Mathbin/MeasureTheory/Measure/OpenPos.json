{"measure_pos_of_nonempty_interior":
 "theorem measure_pos_of_nonempty_interior (h : (interior s).nonempty) : 0 < μ s :=\n  (is_open_interior.measure_pos μ h).trans_le (measure_mono interior_subset)\n#align measure_pos_of_nonempty_interior measure_pos_of_nonempty_interior\n\n",
 "measure_pos_of_mem_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem measure_pos_of_mem_nhds (h : s ∈ (nhds) x) : 0 < μ s :=\n  measure_pos_of_nonempty_interior _ ⟨x, mem_interior_iff_mem_nhds.2 h⟩\n#align measure_pos_of_mem_nhds measure_pos_of_mem_nhds\n\n",
 "measure_pos_iff":
 "theorem _root_.is_open.measure_pos_iff (hU : is_open U) : 0 < μ U ↔ U.nonempty :=\n  ⟨fun h => nonempty_iff_ne_empty.2 fun he => h.ne' <| he.symm ▸ measure_empty, hU.measure_pos μ⟩\n#align is_open.measure_pos_iff is_open.measure_pos_iff\n\n",
 "measure_pos":
 "theorem _root_.is_open.measure_pos (hU : is_open U) (hne : U.nonempty) : 0 < μ U :=\n  (hU.measure_ne_zero μ hne).bot_lt\n#align is_open.measure_pos is_open.measure_pos\n\n",
 "measure_ne_zero":
 "/-\nCopyright (c) 2022 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\ntheorem _root_.is_open.measure_ne_zero (hU : is_open U) (hne : U.nonempty) : μ U ≠ 0 :=\n  is_open_pos_measure.open_pos U hU hne\n#align is_open.measure_ne_zero is_open.measure_ne_zero\n\n",
 "measure_eq_zero_iff":
 "theorem _root_.is_open.measure_eq_zero_iff (hU : is_open U) : μ U = 0 ↔ U = ∅ := by\n  simpa only [not_lt, nonpos_iff_eq_zero, not_nonempty_iff_eq_empty] using not_congr (hU.measure_pos_iff μ)\n#align is_open.measure_eq_zero_iff is_open.measure_eq_zero_iff\n\n",
 "measure_closed_ball_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem measure_closed_ball_pos (x : X) {r : ennreal} (hr : r ≠ 0) : 0 < μ (closed_ball x r) :=\n  (measure_ball_pos μ x hr).trans_le (measure_mono ball_subset_closed_ball)\n#align measure_closed_ball_pos measure_closed_ball_pos\n\n",
 "measure_ball_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem measure_ball_pos (x : X) {r : ennreal} (hr : r ≠ 0) : 0 < μ (ball x r) :=\n  is_open_ball.measure_pos μ ⟨x, mem_ball_self hr.bot_lt⟩\n#align measure_ball_pos measure_ball_pos\n\n",
 "measure_Ioo_pos":
 "theorem measure_Ioo_pos [DenselyOrdered X] {a b : X} : 0 < μ (Ioo a b) ↔ a < b :=\n  (is_open_Ioo.measure_pos_iff μ).trans nonempty_Ioo\n#align measure_Ioo_pos measure_Ioo_pos\n\n",
 "measure_Ioo_eq_zero":
 "theorem measure_Ioo_eq_zero [DenselyOrdered X] {a b : X} : μ (Ioo a b) = 0 ↔ b ≤ a :=\n  (is_open_Ioo.measure_eq_zero_iff μ).trans (Ioo_eq_empty_iff.trans not_lt)\n#align measure_Ioo_eq_zero measure_Ioo_eq_zero\n\n",
 "measure_Ioi_pos":
 "theorem measure_Ioi_pos [NoMaxOrder X] (a : X) : 0 < μ (Ioi a) :=\n  is_open_Ioi.measure_pos μ nonempty_Ioi\n#align measure_Ioi_pos measure_Ioi_pos\n\n",
 "measure_Iio_pos":
 "theorem measure_Iio_pos [NoMinOrder X] (a : X) : 0 < μ (Iio a) :=\n  is_open_Iio.measure_pos μ nonempty_Iio\n#align measure_Iio_pos measure_Iio_pos\n\n",
 "is_open_pos_measure_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem is_open_pos_measure_smul {c : ennreal} (h : c ≠ 0) : is_open_pos_measure («expr • » c μ) :=\n  ⟨fun U Uo Une => mul_ne_zero h (Uo.measure_ne_zero μ Une)⟩\n#align is_open_pos_measure_smul is_open_pos_measure_smul\n\n",
 "is_open_pos_measure":
 "theorem _root_.has_le.le.is_open_pos_measure (h : μ ≤ ν) : is_open_pos_measure ν :=\n  h.absolutely_continuous.is_open_pos_measure\n#align has_le.le.is_open_pos_measure has_le.le.is_open_pos_measure\n\n",
 "interior_eq_empty_of_null":
 "theorem interior_eq_empty_of_null (hs : μ s = 0) : interior s = ∅ :=\n  is_open_interior.eq_empty_of_measure_zero <| measure_mono_null interior_subset hs\n#align interior_eq_empty_of_null interior_eq_empty_of_null\n\n",
 "eq_on_open_of_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- If two functions are a.e. equal on an open set and are continuous on this set, then they are\nequal on this set. -/\ntheorem eq_on_open_of_ae_eq {f g : X → Y} (h : «expr =ᵐ[ ] » f (μ.restrict U) g) (hU : is_open U)\n    (hf : continuous_on f U) (hg : continuous_on g U) : EqOn f g U :=\n  by\n  replace h := ae_imp_of_ae_restrict h\n  simp only [eventually_eq, ae_iff, not_imp] at h\n  have : is_open (U ∩ { a | f a ≠ g a }) :=\n    by\n    refine' is_open_iff_mem_nhds.mpr fun a ha => inter_mem (hU.mem_nhds ha.1) _\n    rcases ha with ⟨ha : a ∈ U, ha' : (f a, g a) ∈ «expr ᶜ» (diagonal Y)⟩\n    exact\n      (hf.continuous_at (hU.mem_nhds ha)).prod_mk_nhds (hg.continuous_at (hU.mem_nhds ha))\n        (is_closed_diagonal.is_open_compl.mem_nhds ha')\n  replace := (this.eq_empty_of_measure_zero h).le\n  exact fun x hx => not_not.1 fun h => this ⟨hx, h⟩\n#align eq_on_open_of_ae_eq eq_on_open_of_ae_eq\n\n",
 "eq_on_of_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem eq_on_of_ae_eq {f g : X → Y} (h : «expr =ᵐ[ ] » f (μ.restrict s) g) (hf : continuous_on f s)\n    (hg : continuous_on g s) (hU : s ⊆ closure (interior s)) : EqOn f g s :=\n  have : interior s ⊆ s := interior_subset\n  (eq_on_open_of_ae_eq (ae_restrict_of_ae_restrict_of_subset this h) is_open_interior (hf.mono this)\n        (hg.mono this)).of_subset_closure\n    hf hg this hU\n#align eq_on_of_ae_eq eq_on_of_ae_eq\n\n",
 "eq_on_Ioo_of_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem eq_on_Ioo_of_ae_eq {a b : X} {f g : X → Y} (hfg : «expr =ᵐ[ ] » f (μ.restrict (Ioo a b)) g)\n    (hf : continuous_on f (Ioo a b)) (hg : continuous_on g (Ioo a b)) : EqOn f g (Ioo a b) :=\n  eq_on_of_ae_eq hfg hf hg Ioo_subset_closure_interior\n#align eq_on_Ioo_of_ae_eq eq_on_Ioo_of_ae_eq\n\n",
 "eq_on_Ioc_of_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem eq_on_Ioc_of_ae_eq [DenselyOrdered X] {a b : X} {f g : X → Y} (hfg : «expr =ᵐ[ ] » f (μ.restrict (Ioc a b)) g)\n    (hf : continuous_on f (Ioc a b)) (hg : continuous_on g (Ioc a b)) : EqOn f g (Ioc a b) :=\n  eq_on_of_ae_eq hfg hf hg (Ioc_subset_closure_interior _ _)\n#align eq_on_Ioc_of_ae_eq eq_on_Ioc_of_ae_eq\n\n",
 "eq_on_Ico_of_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem eq_on_Ico_of_ae_eq [DenselyOrdered X] {a b : X} {f g : X → Y} (hfg : «expr =ᵐ[ ] » f (μ.restrict (Ico a b)) g)\n    (hf : continuous_on f (Ico a b)) (hg : continuous_on g (Ico a b)) : EqOn f g (Ico a b) :=\n  eq_on_of_ae_eq hfg hf hg (Ico_subset_closure_interior _ _)\n#align eq_on_Ico_of_ae_eq eq_on_Ico_of_ae_eq\n\n",
 "eq_on_Icc_of_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem eq_on_Icc_of_ae_eq [DenselyOrdered X] {a b : X} (hne : a ≠ b) {f g : X → Y}\n    (hfg : «expr =ᵐ[ ] » f (μ.restrict (Icc a b)) g) (hf : continuous_on f (Icc a b)) (hg : continuous_on g (Icc a b)) :\n    EqOn f g (Icc a b) :=\n  eq_on_of_ae_eq hfg hf hg (closure_interior_Icc hne).symm.subset\n#align eq_on_Icc_of_ae_eq eq_on_Icc_of_ae_eq\n\n",
 "eq_of_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- If two continuous functions are a.e. equal, then they are equal. -/\ntheorem eq_of_ae_eq {f g : X → Y} (h : «expr =ᵐ[ ] » f μ g) (hf : continuous f) (hg : continuous g) : f = g :=\n  suffices EqOn f g univ from funext fun x => this trivial\n  eq_on_open_of_ae_eq (ae_restrict_of_ae h) is_open_univ hf.continuous_on hg.continuous_on\n#align eq_of_ae_eq eq_of_ae_eq\n\n",
 "eq_empty_of_measure_zero":
 "theorem _root_.is_open.eq_empty_of_measure_zero (hU : is_open U) (h₀ : μ U = 0) : U = ∅ :=\n  (hU.measure_eq_zero_iff μ).mp h₀\n#align is_open.eq_empty_of_measure_zero is_open.eq_empty_of_measure_zero\n\n",
 "ae_eq_iff_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem _root_.continuous.ae_eq_iff_eq {f g : X → Y} (hf : continuous f) (hg : continuous g) :\n    «expr =ᵐ[ ] » f μ g ↔ f = g :=\n  ⟨fun h => eq_of_ae_eq h hf hg, fun h => h ▸ eventually_eq.rfl⟩\n#align continuous.ae_eq_iff_eq continuous.ae_eq_iff_eq\n\n"}