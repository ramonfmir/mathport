{"union_ae_eq_univ_of_ae_eq_univ_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem union_ae_eq_univ_of_ae_eq_univ_right (h : «expr =ᵐ[ ] » t μ univ) : «expr =ᵐ[ ] » (s ∪ t : Set α) μ univ :=\n  by\n  convert ae_eq_set_union (ae_eq_refl s) h\n  rw [union_univ]\n#align union_ae_eq_univ_of_ae_eq_univ_right union_ae_eq_univ_of_ae_eq_univ_right\n\n",
 "union_ae_eq_univ_of_ae_eq_univ_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem union_ae_eq_univ_of_ae_eq_univ_left (h : «expr =ᵐ[ ] » s μ univ) : «expr =ᵐ[ ] » (s ∪ t : Set α) μ univ :=\n  by\n  convert ae_eq_set_union h (ae_eq_refl t)\n  rw [univ_union]\n#align union_ae_eq_univ_of_ae_eq_univ_left union_ae_eq_univ_of_ae_eq_univ_left\n\n",
 "union_ae_eq_right_of_ae_eq_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem union_ae_eq_right_of_ae_eq_empty (h : «expr =ᵐ[ ] » s μ (∅ : Set α)) : «expr =ᵐ[ ] » (s ∪ t : Set α) μ t :=\n  by\n  convert ae_eq_set_union h (ae_eq_refl t)\n  rw [empty_union]\n#align union_ae_eq_right_of_ae_eq_empty union_ae_eq_right_of_ae_eq_empty\n\n",
 "union_ae_eq_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem union_ae_eq_right : «expr =ᵐ[ ] » (s ∪ t : Set α) μ t ↔ μ (s \\ t) = 0 := by\n  simp [eventually_le_antisymm_iff, ae_le_set, union_diff_right, diff_eq_empty.2 (Set.subset_union_right _ _)]\n#align union_ae_eq_right union_ae_eq_right\n\n",
 "union_ae_eq_left_of_ae_eq_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem union_ae_eq_left_of_ae_eq_empty (h : «expr =ᵐ[ ] » t μ (∅ : Set α)) : «expr =ᵐ[ ] » (s ∪ t : Set α) μ s :=\n  by\n  convert ae_eq_set_union (ae_eq_refl s) h\n  rw [union_empty]\n#align union_ae_eq_left_of_ae_eq_empty union_ae_eq_left_of_ae_eq_empty\n\n",
 "to_outer_measure_injective":
 "theorem to_outer_measure_injective : injective (to_outer_measure : Measure α → OuterMeasure α) :=\n  fun ⟨m₁, u₁, h₁⟩ ⟨m₂, u₂, h₂⟩ h => by\n  congr\n  exact h\n#align to_outer_measure_injective to_outer_measure_injective\n\n",
 "to_outer_measure_eq_induced_outer_measure":
 "theorem to_outer_measure_eq_induced_outer_measure :\n    μ.to_outer_measure = inducedOuterMeasure (fun s _ => μ s) MeasurableSet.empty μ.empty :=\n  μ.trimmed.symm\n#align to_outer_measure_eq_induced_outer_measure to_outer_measure_eq_induced_outer_measure\n\n",
 "to_outer_measure_apply":
 "theorem to_outer_measure_apply (s : Set α) : μ.to_outer_measure s = μ s :=\n  rfl\n#align to_outer_measure_apply to_outer_measure_apply\n\n",
 "subset_to_measurable":
 "theorem subset_to_measurable (μ : Measure α) (s : Set α) : s ⊆ toMeasurable μ s :=\n  by\n  rw [to_measurable]; split_ifs with hs h's\n  exacts[hs.some_spec.fst, h's.some_spec.fst, (exists_measurable_superset μ s).some_spec.1]\n#align subset_to_measurable subset_to_measurable\n\n",
 "of_measurable_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr on » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Mario Carneiro\n-/\ntheorem of_measurable_apply {m : ∀ s : Set α, MeasurableSet s → ennreal} {m0 : m ∅ MeasurableSet.empty = 0}\n    {mU :\n      ∀ ⦃f : ℕ → Set α⦄ (h : ∀ i, MeasurableSet (f i)),\n        Pairwise («expr on » Disjoint f) →\n          m («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i))\n              (MeasurableSet.unionᵢ h) =\n            «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n              (m (f i) (h i))}\n    (s : Set α) (hs : MeasurableSet s) : ofMeasurable m m0 mU s = m s hs :=\n  inducedOuterMeasure_eq m0 mU hs\n#align of_measurable_apply of_measurable_apply\n\n",
 "nonempty_of_measure_ne_zero":
 "theorem nonempty_of_measure_ne_zero (h : μ s ≠ 0) : s.nonempty :=\n  nonempty_iff_ne_empty.2 fun h' => h <| h'.symm ▸ measure_empty\n#align nonempty_of_measure_ne_zero nonempty_of_measure_ne_zero\n\n",
 "mul_indicator_ae_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n#print MeasureTheory.Set.mulIndicator_ae_eq_one /-\n@[to_additive]\ntheorem MeasureTheory.Set.mulIndicator_ae_eq_one {M : Type _} [One M] {f : α → M} {s : Set α}\n    (h : «expr =ᵐ[ ] » (s.mul_indicator f) μ 1) : μ (s ∩ Function.mulSupport f) = 0 := by\n  simpa [Filter.EventuallyEq, ae_iff] using h\n#align set.mul_indicator_ae_eq_one MeasureTheory.Set.mulIndicator_ae_eq_one\n#align set.indicator_ae_eq_zero MeasureTheory.Set.indicator_ae_eq_zero\n-/\n\n",
 "mem_ae_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem mem_ae_iff {s : Set α} : s ∈ μ.ae ↔ μ («expr ᶜ» s) = 0 :=\n  iff.rfl\n#align mem_ae_iff mem_ae_iff\n\n",
 "measure_zero_iff_ae_nmem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem measure_zero_iff_ae_nmem {s : Set α} :\n    μ s = 0 ↔\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (a ∉ s) :=\n  compl_mem_ae_iff.symm\n#align measure_zero_iff_ae_nmem measure_zero_iff_ae_nmem\n\n",
 "measure_union_null_iff":
 "@[simp]\ntheorem measure_union_null_iff : μ (s₁ ∪ s₂) = 0 ↔ μ s₁ = 0 ∧ μ s₂ = 0 :=\n  ⟨fun h => ⟨measure_mono_null (subset_union_left _ _) h, measure_mono_null (subset_union_right _ _) h⟩, fun h =>\n    measure_union_null h.1 h.2⟩\n#align measure_union_null_iff measure_union_null_iff\n\n",
 "measure_union_null":
 "theorem measure_union_null : μ s₁ = 0 → μ s₂ = 0 → μ (s₁ ∪ s₂) = 0 :=\n  μ.to_outer_measure.union_null\n#align measure_union_null measure_union_null\n\n",
 "measure_union_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem measure_union_ne_top (hs : μ s ≠ ennreal.top) (ht : μ t ≠ ennreal.top) : μ (s ∪ t) ≠ ennreal.top :=\n  (measure_union_lt_top hs.lt_top ht.lt_top).ne\n#align measure_union_ne_top measure_union_ne_top\n\n",
 "measure_union_lt_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem measure_union_lt_top_iff : μ (s ∪ t) < ennreal.top ↔ μ s < ennreal.top ∧ μ t < ennreal.top :=\n  by\n  refine' ⟨fun h => ⟨_, _⟩, fun h => measure_union_lt_top h.1 h.2⟩\n  · exact (measure_mono (Set.subset_union_left s t)).trans_lt h\n  · exact (measure_mono (Set.subset_union_right s t)).trans_lt h\n#align measure_union_lt_top_iff measure_union_lt_top_iff\n\n",
 "measure_union_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem measure_union_lt_top (hs : μ s < ennreal.top) (ht : μ t < ennreal.top) : μ (s ∪ t) < ennreal.top :=\n  (measure_union_le s t).trans_lt (ENNReal.add_lt_top.mpr ⟨hs, ht⟩)\n#align measure_union_lt_top measure_union_lt_top\n\n",
 "measure_union_le":
 "theorem measure_union_le (s₁ s₂ : Set α) : μ (s₁ ∪ s₂) ≤ μ s₁ + μ s₂ :=\n  μ.to_outer_measure.union _ _\n#align measure_union_le measure_union_le\n\n",
 "measure_union_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem measure_union_eq_top_iff : μ (s ∪ t) = ennreal.top ↔ μ s = ennreal.top ∨ μ t = ennreal.top :=\n  not_iff_not.1 <| by simp only [← lt_top_iff_ne_top, ← ne.def, not_or, measure_union_lt_top_iff]\n#align measure_union_eq_top_iff measure_union_eq_top_iff\n\n",
 "measure_to_measurable":
 "@[simp]\ntheorem measure_to_measurable (s : Set α) : μ (toMeasurable μ s) = μ s :=\n  by\n  rw [to_measurable]; split_ifs with hs h's\n  · exact measure_congr hs.some_spec.snd.2\n  · simpa only [inter_univ] using h's.some_spec.snd.2 univ MeasurableSet.univ\n  · exact (exists_measurable_superset μ s).some_spec.2.2\n#align measure_to_measurable measure_to_measurable\n\n",
 "measure_symm_diff_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n@[simp]\ntheorem measure_symm_diff_eq_zero_iff {s t : Set α} : μ («expr ∆ » s t) = 0 ↔ «expr =ᵐ[ ] » s μ t := by\n  simp [ae_eq_set, symmDiff_def]\n#align measure_symm_diff_eq_zero_iff measure_symm_diff_eq_zero_iff\n\n",
 "measure_sUnion_null_iff":
 "theorem measure_sUnion_null_iff {S : Set (Set α)} (hS : S.countable) : μ (⋃₀ S) = 0 ↔ ∀ s ∈ S, μ s = 0 :=\n  μ.to_outer_measure.sUnion_null_iff hS\n#align measure_sUnion_null_iff measure_sUnion_null_iff\n\n",
 "measure_mono_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem measure_mono_top (h : s₁ ⊆ s₂) (h₁ : μ s₁ = ennreal.top) : μ s₂ = ennreal.top :=\n  top_unique <| h₁ ▸ measure_mono h\n#align measure_mono_top measure_mono_top\n\n",
 "measure_mono_null_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem measure_mono_null_ae (H : «expr ≤ᵐ[ ] » s μ t) (ht : μ t = 0) : μ s = 0 :=\n  nonpos_iff_eq_zero.1 <| ht ▸ H.measure_le\n#align measure_mono_null_ae measure_mono_null_ae\n\n",
 "measure_mono_null":
 "theorem measure_mono_null (h : s₁ ⊆ s₂) (h₂ : μ s₂ = 0) : μ s₁ = 0 :=\n  nonpos_iff_eq_zero.1 <| h₂ ▸ measure_mono h\n#align measure_mono_null measure_mono_null\n\n",
 "measure_mono_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/-- If `s ⊆ t` modulo a set of measure `0`, then `μ s ≤ μ t`. -/\n@[mono]\ntheorem measure_mono_ae (H : «expr ≤ᵐ[ ] » s μ t) : μ s ≤ μ t :=\n  calc\n    μ s ≤ μ (s ∪ t) := measure_mono <| subset_union_left s t\n    _ = μ (t ∪ s \\ t) := by rw [union_diff_self, Set.union_comm]\n    _ ≤ μ t + μ (s \\ t) := (measure_union_le _ _)\n    _ = μ t := by rw [ae_le_set.1 H, add_zero]\n    \n#align measure_mono_ae measure_mono_ae\n\n",
 "measure_mono":
 "theorem measure_mono (h : s₁ ⊆ s₂) : μ s₁ ≤ μ s₂ :=\n  μ.mono h\n#align measure_mono measure_mono\n\n",
 "measure_inter_null_of_null_right":
 "theorem measure_inter_null_of_null_right (S : Set α) {T : Set α} (h : μ T = 0) : μ (S ∩ T) = 0 :=\n  measure_mono_null (inter_subset_right S T) h\n#align measure_inter_null_of_null_right measure_inter_null_of_null_right\n\n",
 "measure_inter_null_of_null_left":
 "theorem measure_inter_null_of_null_left {S : Set α} (T : Set α) (h : μ S = 0) : μ (S ∩ T) = 0 :=\n  measure_mono_null (inter_subset_left S T) h\n#align measure_inter_null_of_null_left measure_inter_null_of_null_left\n\n",
 "measure_inter_lt_top_of_right_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem measure_inter_lt_top_of_right_ne_top (ht_finite : μ t ≠ ennreal.top) : μ (s ∩ t) < ennreal.top :=\n  inter_comm t s ▸ measure_inter_lt_top_of_left_ne_top ht_finite\n#align measure_inter_lt_top_of_right_ne_top measure_inter_lt_top_of_right_ne_top\n\n",
 "measure_inter_lt_top_of_left_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem measure_inter_lt_top_of_left_ne_top (hs_finite : μ s ≠ ennreal.top) : μ (s ∩ t) < ennreal.top :=\n  (measure_mono (Set.inter_subset_left s t)).trans_lt hs_finite.lt_top\n#align measure_inter_lt_top_of_left_ne_top measure_inter_lt_top_of_left_ne_top\n\n",
 "measure_eq_trim":
 "theorem measure_eq_trim (s : Set α) : μ s = μ.to_outer_measure.trim s := by rw [μ.trimmed] <;> rfl\n#align measure_eq_trim measure_eq_trim\n\n",
 "measure_eq_infi'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/-- A variant of `measure_eq_infi` which has a single `infi`. This is useful when applying a\n  lemma next that only works for non-empty infima, in which case you can use\n  `nonempty_measurable_superset`. -/\ntheorem measure_eq_infi' (μ : Measure α) (s : Set α) :\n    μ s = «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (μ t) := by\n  simp_rw [infᵢ_subtype, infᵢ_and, Subtype.coe_mk, ← measure_eq_infi]\n#align measure_eq_infi' measure_eq_infi'\n\n",
 "measure_eq_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem measure_eq_infi (s : Set α) :\n    μ s = «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (μ t) := by\n  rw [measure_eq_trim, outer_measure.trim_eq_infi] <;> rfl\n#align measure_eq_infi measure_eq_infi\n\n",
 "measure_eq_induced_outer_measure":
 "theorem measure_eq_induced_outer_measure : μ s = inducedOuterMeasure (fun s _ => μ s) MeasurableSet.empty μ.empty s :=\n  measure_eq_trim _\n#align measure_eq_induced_outer_measure measure_eq_induced_outer_measure\n\n",
 "measure_eq_extend":
 "theorem measure_eq_extend (hs : MeasurableSet s) : μ s = extend (fun t (ht : MeasurableSet t) => μ t) s :=\n  (extend_eq _ hs).symm\n#align measure_eq_extend measure_eq_extend\n\n",
 "measure_empty":
 "@[simp]\ntheorem measure_empty : μ ∅ = 0 :=\n  μ.empty\n#align measure_empty measure_empty\n\n",
 "measure_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- If two sets are equal modulo a set of measure zero, then `μ s = μ t`. -/\ntheorem measure_congr (H : «expr =ᵐ[ ] » s μ t) : μ s = μ t :=\n  le_antisymm H.le.measure_le H.symm.le.measure_le\n#align measure_congr measure_congr\n\n",
 "measure_bUnion_null_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem measure_bUnion_null_iff {s : Set ι} (hs : s.countable) {t : ι → Set α} :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (t i)) = 0 ↔\n      ∀ i ∈ s, μ (t i) = 0 :=\n  μ.to_outer_measure.bUnion_null_iff hs\n#align measure_bUnion_null_iff measure_bUnion_null_iff\n\n",
 "measure_bUnion_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem measure_bUnion_lt_top {s : Set β} {f : β → Set α} (hs : s.finite) (hfin : ∀ i ∈ s, μ (f i) ≠ ennreal.top) :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) <\n      ennreal.top :=\n  by\n  convert(measure_bUnion_finset_le hs.to_finset f).trans_lt _\n  · ext\n    rw [finite.mem_to_finset]\n  apply ENNReal.sum_lt_top; simpa only [finite.mem_to_finset]\n#align measure_bUnion_lt_top measure_bUnion_lt_top\n\n",
 "measure_bUnion_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem measure_bUnion_le {s : Set β} (hs : s.countable) (f : β → Set α) :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f b)) ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (μ (f p)) :=\n  by\n  haveI := hs.to_subtype\n  rw [bUnion_eq_Union]\n  apply measure_Union_le\n#align measure_bUnion_le measure_bUnion_le\n\n",
 "measure_bUnion_finset_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem measure_bUnion_finset_le (s : Finset β) (f : β → Set α) :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f b)) ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (μ (f p)) :=\n  by\n  rw [← Finset.sum_attach, Finset.attach_eq_univ, ← tsum_fintype]\n  exact measure_bUnion_le s.countable_to_set f\n#align measure_bUnion_finset_le measure_bUnion_finset_le\n\n",
 "measure_Union_null_iff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/-- A version of `measure_Union_null_iff` for unions indexed by Props\nTODO: in the long run it would be better to combine this with `measure_Union_null_iff` by\ngeneralising to `Sort`. -/\n@[simp]\ntheorem measure_Union_null_iff' {ι : Prop} {s : ι → Set α} :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s i)) = 0 ↔\n      ∀ i, μ (s i) = 0 :=\n  μ.to_outer_measure.Union_null_iff'\n#align measure_Union_null_iff' measure_Union_null_iff'\n\n",
 "measure_Union_null_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n@[simp]\ntheorem measure_Union_null_iff [Countable ι] {s : ι → Set α} :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s i)) = 0 ↔\n      ∀ i, μ (s i) = 0 :=\n  μ.to_outer_measure.Union_null_iff\n#align measure_Union_null_iff measure_Union_null_iff\n\n",
 "measure_Union_null":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem measure_Union_null [Countable β] {s : β → Set α} :\n    (∀ i, μ (s i) = 0) →\n      μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s i)) = 0 :=\n  μ.to_outer_measure.Union_null\n#align measure_Union_null measure_Union_null\n\n",
 "measure_Union_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem measure_Union_le [Countable β] (s : β → Set α) :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s i)) ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (μ (s i)) :=\n  μ.to_outer_measure.Union _\n#align measure_Union_le measure_Union_le\n\n",
 "measure_Union_fintype_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem measure_Union_fintype_le [Fintype β] (f : β → Set α) :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f b)) ≤\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (μ (f p)) :=\n  by\n  convert measure_bUnion_finset_le Finset.univ f\n  simp\n#align measure_Union_fintype_le measure_Union_fintype_le\n\n",
 "measurable_set_to_measurable":
 "@[simp]\ntheorem measurable_set_to_measurable (μ : Measure α) (s : Set α) : MeasurableSet (toMeasurable μ s) :=\n  by\n  rw [to_measurable]; split_ifs with hs h's\n  exacts[hs.some_spec.snd.1, h's.some_spec.snd.1, (exists_measurable_superset μ s).some_spec.2.1]\n#align measurable_set_to_measurable measurable_set_to_measurable\n\n",
 "measurable_mk":
 "theorem measurable_mk (h : AEMeasurable f μ) : Measurable (h.mk f) :=\n  (Classical.choose_spec h).1\n#align measurable_mk measurable_mk\n\n",
 "inter_ae_eq_right_of_ae_eq_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem inter_ae_eq_right_of_ae_eq_univ (h : «expr =ᵐ[ ] » s μ univ) : «expr =ᵐ[ ] » (s ∩ t : Set α) μ t :=\n  by\n  convert ae_eq_set_inter h (ae_eq_refl t)\n  rw [univ_inter]\n#align inter_ae_eq_right_of_ae_eq_univ inter_ae_eq_right_of_ae_eq_univ\n\n",
 "inter_ae_eq_left_of_ae_eq_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem inter_ae_eq_left_of_ae_eq_univ (h : «expr =ᵐ[ ] » t μ univ) : «expr =ᵐ[ ] » (s ∩ t : Set α) μ s :=\n  by\n  convert ae_eq_set_inter (ae_eq_refl s) h\n  rw [inter_univ]\n#align inter_ae_eq_left_of_ae_eq_univ inter_ae_eq_left_of_ae_eq_univ\n\n",
 "inter_ae_eq_empty_of_ae_eq_empty_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem inter_ae_eq_empty_of_ae_eq_empty_right (h : «expr =ᵐ[ ] » t μ (∅ : Set α)) :\n    «expr =ᵐ[ ] » (s ∩ t : Set α) μ (∅ : Set α) :=\n  by\n  convert ae_eq_set_inter (ae_eq_refl s) h\n  rw [inter_empty]\n#align inter_ae_eq_empty_of_ae_eq_empty_right inter_ae_eq_empty_of_ae_eq_empty_right\n\n",
 "inter_ae_eq_empty_of_ae_eq_empty_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem inter_ae_eq_empty_of_ae_eq_empty_left (h : «expr =ᵐ[ ] » s μ (∅ : Set α)) :\n    «expr =ᵐ[ ] » (s ∩ t : Set α) μ (∅ : Set α) :=\n  by\n  convert ae_eq_set_inter h (ae_eq_refl t)\n  rw [empty_inter]\n#align inter_ae_eq_empty_of_ae_eq_empty_left inter_ae_eq_empty_of_ae_eq_empty_left\n\n",
 "frequently_ae_mem_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᵐ ∂ , » -/\ntheorem frequently_ae_mem_iff {s : Set α} :\n    «expr∃ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᵐ ∂ , »\" μ (a ∈ s) ↔\n      μ s ≠ 0 :=\n  not_congr compl_mem_ae_iff\n#align frequently_ae_mem_iff frequently_ae_mem_iff\n\n",
 "frequently_ae_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᵐ ∂ , » -/\ntheorem frequently_ae_iff {p : α → Prop} :\n    «expr∃ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᵐ ∂ , »\" μ (p a) ↔\n      μ { a | p a } ≠ 0 :=\n  not_congr compl_mem_ae_iff\n#align frequently_ae_iff frequently_ae_iff\n\n",
 "ext_iff":
 "theorem ext_iff : μ₁ = μ₂ ↔ ∀ s, MeasurableSet s → μ₁ s = μ₂ s :=\n  ⟨by\n    rintro rfl s hs\n    rfl, Measure.ext⟩\n#align ext_iff ext_iff\n\n",
 "ext":
 "@[ext]\ntheorem ext (h : ∀ s, MeasurableSet s → μ₁ s = μ₂ s) : μ₁ = μ₂ :=\n  toOuterMeasure_injective <| by rw [← trimmed, outer_measure.trim_congr h, trimmed]\n#align ext ext\n\n",
 "exists_measure_pos_of_not_measure_Union_null":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem exists_measure_pos_of_not_measure_Union_null [Countable β] {s : β → Set α}\n    (hs :\n      μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s n)) ≠ 0) :\n    ∃ n, 0 < μ (s n) := by\n  contrapose! hs\n  exact measure_Union_null fun n => nonpos_iff_eq_zero.1 (hs n)\n#align exists_measure_pos_of_not_measure_Union_null exists_measure_pos_of_not_measure_Union_null\n\n",
 "exists_measurable_superset₂":
 "theorem exists_measurable_superset₂ (μ ν : Measure α) (s : Set α) :\n    ∃ t, s ⊆ t ∧ MeasurableSet t ∧ μ t = μ s ∧ ν t = ν s := by\n  simpa only [bool.forall_bool.trans and_comm] using exists_measurable_superset_forall_eq (fun b => cond b μ ν) s\n#align exists_measurable_superset₂ exists_measurable_superset₂\n\n",
 "exists_measurable_superset_of_null":
 "theorem exists_measurable_superset_of_null (h : μ s = 0) : ∃ t, s ⊆ t ∧ MeasurableSet t ∧ μ t = 0 :=\n  h ▸ exists_measurable_superset μ s\n#align exists_measurable_superset_of_null exists_measurable_superset_of_null\n\n",
 "exists_measurable_superset_iff_measure_eq_zero":
 "theorem exists_measurable_superset_iff_measure_eq_zero : (∃ t, s ⊆ t ∧ MeasurableSet t ∧ μ t = 0) ↔ μ s = 0 :=\n  ⟨fun ⟨t, hst, _, ht⟩ => measure_mono_null hst ht, exists_measurable_superset_of_null⟩\n#align exists_measurable_superset_iff_measure_eq_zero exists_measurable_superset_iff_measure_eq_zero\n\n",
 "exists_measurable_superset_forall_eq":
 "/-- For every set `s` and a countable collection of measures `μ i` there exists a measurable\nsuperset `t ⊇ s` such that each measure `μ i` takes the same value on `s` and `t`. -/\ntheorem exists_measurable_superset_forall_eq {ι} [Countable ι] (μ : ι → Measure α) (s : Set α) :\n    ∃ t, s ⊆ t ∧ MeasurableSet t ∧ ∀ i, μ i t = μ i s := by\n  simpa only [← measure_eq_trim] using\n    outer_measure.exists_measurable_superset_forall_eq_trim (fun i => (μ i).to_outer_measure) s\n#align exists_measurable_superset_forall_eq exists_measurable_superset_forall_eq\n\n",
 "exists_measurable_superset":
 "/-- For every set there exists a measurable superset of the same measure. -/\ntheorem exists_measurable_superset (μ : Measure α) (s : Set α) : ∃ t, s ⊆ t ∧ MeasurableSet t ∧ μ t = μ s := by\n  simpa only [← measure_eq_trim] using μ.to_outer_measure.exists_measurable_superset_eq_trim s\n#align exists_measurable_superset exists_measurable_superset\n\n",
 "diff_null_ae_eq_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem diff_null_ae_eq_self (ht : μ t = 0) : «expr =ᵐ[ ] » (s \\ t : Set α) μ s :=\n  diff_ae_eq_self.mpr (measure_mono_null (inter_subset_right _ _) ht)\n#align diff_null_ae_eq_self diff_null_ae_eq_self\n\n",
 "diff_ae_eq_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem diff_ae_eq_self : «expr =ᵐ[ ] » (s \\ t : Set α) μ s ↔ μ (s ∩ t) = 0 := by\n  simp [eventually_le_antisymm_iff, ae_le_set, diff_diff_right, diff_diff, diff_eq_empty.2 (Set.subset_union_right _ _)]\n#align diff_ae_eq_self diff_ae_eq_self\n\n",
 "congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n#print congr /-\ntheorem congr (hf : AEMeasurable f μ) (h : «expr =ᵐ[ ] » f μ g) : AEMeasurable g μ :=\n  ⟨hf.mk f, hf.measurable_mk, h.symm.trans hf.ae_eq_mk⟩\n#align congr congr\n-/\n\n",
 "compl_mem_ae_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem compl_mem_ae_iff {s : Set α} : «expr ᶜ» s ∈ μ.ae ↔ μ s = 0 := by simp only [mem_ae_iff, compl_compl]\n#align compl_mem_ae_iff compl_mem_ae_iff\n\n",
 "comp_aemeasurable":
 "#print Measurable.comp_aemeasurable /-\ntheorem Measurable.comp_aemeasurable [MeasurableSpace δ] {f : α → δ} {g : δ → β} (hg : Measurable g)\n    (hf : AEMeasurable f μ) : AEMeasurable (g ∘ f) μ :=\n  ⟨g ∘ hf.mk f, hg.comp hf.measurable_mk, EventuallyEq.fun_comp hf.ae_eq_mk _⟩\n#align measurable.comp_ae_measurable Measurable.comp_aemeasurable\n-/\n\n",
 "coe_to_outer_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_to_outer_measure : «expr⇑ » μ.to_outer_measure = μ :=\n  rfl\n#align coe_to_outer_measure coe_to_outer_measure\n\n",
 "aemeasurable_id'":
 "#print aemeasurable_id' /-\ntheorem aemeasurable_id' : AEMeasurable (fun x => x) μ :=\n  measurable_id.ae_measurable\n#align ae_measurable_id' aemeasurable_id'\n-/\n\n",
 "aemeasurable_id":
 "#print aemeasurable_id /-\ntheorem aemeasurable_id : AEMeasurable id μ :=\n  measurable_id.ae_measurable\n#align ae_measurable_id aemeasurable_id\n-/\n\n",
 "aemeasurable_const":
 "#print aemeasurable_const /-\n@[simp]\ntheorem aemeasurable_const {b : β} : AEMeasurable (fun a : α => b) μ :=\n  measurable_const.ae_measurable\n#align ae_measurable_const aemeasurable_const\n-/\n\n",
 "aemeasurable_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n#print aemeasurable_congr /-\ntheorem aemeasurable_congr (h : «expr =ᵐ[ ] » f μ g) : AEMeasurable f μ ↔ AEMeasurable g μ :=\n  ⟨fun hf => AEMeasurable.congr hf h, fun hg => AEMeasurable.congr hg h.symm⟩\n#align ae_measurable_congr aemeasurable_congr\n-/\n\n",
 "aemeasurable":
 "#print Measurable.aemeasurable /-\ntheorem Measurable.aemeasurable (h : Measurable f) : AEMeasurable f μ :=\n  ⟨f, h, ae_eq_refl f⟩\n#align measurable.ae_measurable Measurable.aemeasurable\n-/\n\n",
 "ae_of_all":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem ae_of_all {p : α → Prop} (μ : Measure α) :\n    (∀ a, p a) →\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (p a) :=\n  eventually_of_forall\n#align ae_of_all ae_of_all\n\n",
 "ae_le_to_measurable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem ae_le_to_measurable : «expr ≤ᵐ[ ] » s μ (toMeasurable μ s) :=\n  (subset_toMeasurable _ _).eventually_le\n#align ae_le_to_measurable ae_le_to_measurable\n\n",
 "ae_le_set_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem ae_le_set_union {s' t' : Set α} (h : «expr ≤ᵐ[ ] » s μ t) (h' : «expr ≤ᵐ[ ] » s' μ t') :\n    «expr ≤ᵐ[ ] » (s ∪ s' : Set α) μ (t ∪ t' : Set α) :=\n  h.union h'\n#align ae_le_set_union ae_le_set_union\n\n",
 "ae_le_set_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem ae_le_set_inter {s' t' : Set α} (h : «expr ≤ᵐ[ ] » s μ t) (h' : «expr ≤ᵐ[ ] » s' μ t') :\n    «expr ≤ᵐ[ ] » (s ∩ s' : Set α) μ (t ∩ t' : Set α) :=\n  h.inter h'\n#align ae_le_set_inter ae_le_set_inter\n\n",
 "ae_le_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem ae_le_set : «expr ≤ᵐ[ ] » s μ t ↔ μ (s \\ t) = 0 :=\n  calc\n    «expr ≤ᵐ[ ] » s μ t ↔\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          (x ∈ s → x ∈ t) :=\n      iff.rfl\n    _ ↔ μ (s \\ t) = 0 := by simp [ae_iff] <;> rfl\n    \n#align ae_le_set ae_le_set\n\n",
 "ae_le_of_ae_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem ae_le_of_ae_lt {f g : α → ennreal}\n    (h :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (f x < g x)) :\n    «expr ≤ᵐ[ ] » f μ g := by\n  rw [Filter.EventuallyLE, ae_iff]\n  rw [ae_iff] at h\n  refine' measure_mono_null (fun x hx => _) h\n  exact not_lt.2 (le_of_lt (not_le.1 hx))\n#align ae_le_of_ae_lt ae_le_of_ae_lt\n\n",
 "ae_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem ae_iff {p : α → Prop} :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (p a) ↔\n      μ { a | ¬p a } = 0 :=\n  iff.rfl\n#align ae_iff ae_iff\n\n",
 "ae_eq_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem ae_eq_univ : «expr =ᵐ[ ] » s μ (univ : Set α) ↔ μ («expr ᶜ» s) = 0 :=\n  eventuallyEq_univ\n#align ae_eq_univ ae_eq_univ\n\n",
 "ae_eq_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_trans {f g h : α → δ} (h₁ : «expr =ᵐ[ ] » f μ g) (h₂ : «expr =ᵐ[ ] » g μ h) : «expr =ᵐ[ ] » f μ h :=\n  h₁.trans h₂\n#align ae_eq_trans ae_eq_trans\n\n",
 "ae_eq_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_symm {f g : α → δ} (h : «expr =ᵐ[ ] » f μ g) : «expr =ᵐ[ ] » g μ f :=\n  h.symm\n#align ae_eq_symm ae_eq_symm\n\n",
 "ae_eq_set_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_set_union {s' t' : Set α} (h : «expr =ᵐ[ ] » s μ t) (h' : «expr =ᵐ[ ] » s' μ t') :\n    «expr =ᵐ[ ] » (s ∪ s' : Set α) μ (t ∪ t' : Set α) :=\n  h.union h'\n#align ae_eq_set_union ae_eq_set_union\n\n",
 "ae_eq_set_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_set_inter {s' t' : Set α} (h : «expr =ᵐ[ ] » s μ t) (h' : «expr =ᵐ[ ] » s' μ t') :\n    «expr =ᵐ[ ] » (s ∩ s' : Set α) μ (t ∩ t' : Set α) :=\n  h.inter h'\n#align ae_eq_set_inter ae_eq_set_inter\n\n",
 "ae_eq_set_compl_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n@[simp]\ntheorem ae_eq_set_compl_compl {s t : Set α} : «expr =ᵐ[ ] » («expr ᶜ» s) μ («expr ᶜ» t) ↔ «expr =ᵐ[ ] » s μ t := by\n  simp only [← measure_symm_diff_eq_zero_iff, compl_symmDiff_compl]\n#align ae_eq_set_compl_compl ae_eq_set_compl_compl\n\n",
 "ae_eq_set_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem ae_eq_set_compl {s t : Set α} : «expr =ᵐ[ ] » («expr ᶜ» s) μ t ↔ «expr =ᵐ[ ] » s μ («expr ᶜ» t) := by\n  rw [← ae_eq_set_compl_compl, compl_compl]\n#align ae_eq_set_compl ae_eq_set_compl\n\n",
 "ae_eq_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_set {s t : Set α} : «expr =ᵐ[ ] » s μ t ↔ μ (s \\ t) = 0 ∧ μ (t \\ s) = 0 := by\n  simp [eventually_le_antisymm_iff, ae_le_set]\n#align ae_eq_set ae_eq_set\n\n",
 "ae_eq_refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_refl (f : α → δ) : «expr =ᵐ[ ] » f μ f :=\n  EventuallyEq.rfl\n#align ae_eq_refl ae_eq_refl\n\n",
 "ae_eq_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_eq_mk (h : AEMeasurable f μ) : «expr =ᵐ[ ] » f μ (h.mk f) :=\n  (Classical.choose_spec h).2\n#align ae_eq_mk ae_eq_mk\n\n",
 "ae_eq_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n@[simp]\ntheorem ae_eq_empty : «expr =ᵐ[ ] » s μ (∅ : Set α) ↔ μ s = 0 :=\n  eventuallyEq_empty.trans <| by simp only [ae_iff, Classical.not_not, set_of_mem_eq]\n#align ae_eq_empty ae_eq_empty\n\n",
 "ae_ball_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem ae_ball_iff {S : Set ι} (hS : S.countable) {p : ∀ (x : α), ∀ i ∈ S, Prop} :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (∀ i ∈ S, p x i ‹_›) ↔\n      ∀ i ∈ S,\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          (p x i ‹_›) :=\n  eventually_countable_ball hS\n#align ae_ball_iff ae_ball_iff\n\n",
 "ae_all_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n--instance ae_is_measurably_generated : is_measurably_generated μ.ae :=\n--⟨λ s hs, let ⟨t, hst, htm, htμ⟩ := exists_measurable_superset_of_null hs in\n--  ⟨tᶜ, compl_mem_ae_iff.2 htμ, htm.compl, compl_subset_comm.1 hst⟩⟩\ntheorem ae_all_iff {ι : Sort _} [Countable ι] {p : α → ι → Prop} :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (∀ i, p a i) ↔\n      ∀ i,\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          (p a i) :=\n  eventually_countable_forall\n#align ae_all_iff ae_all_iff\n\n"}