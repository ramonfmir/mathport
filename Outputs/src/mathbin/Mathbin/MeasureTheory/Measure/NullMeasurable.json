{"union_null":
 "protected theorem union_null (hs : null_measurable_set s μ) (ht : μ t = 0) : null_measurable_set (s ∪ t) μ :=\n  hs.union (of_null ht)\n#align union_null union_null\n\n",
 "union":
 "@[simp]\nprotected theorem union (hs : null_measurable_set s μ) (ht : null_measurable_set t μ) : null_measurable_set (s ∪ t) μ :=\n  hs.union ht\n#align union union\n\n",
 "to_measurable_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem to_measurable_ae_eq (h : null_measurable_set s μ) : «expr =ᵐ[ ] » (to_measurable μ s) μ s :=\n  by\n  rw [to_measurable, dif_pos]\n  exact h.exists_measurable_superset_ae_eq.some_spec.snd.2\n#align to_measurable_ae_eq to_measurable_ae_eq\n\n",
 "sUnion":
 "protected theorem sUnion {s : set (set α)} (hs : s.countable) (h : ∀ t ∈ s, null_measurable_set t μ) :\n    null_measurable_set (⋃₀ s) μ := by\n  rw [sUnion_eq_bUnion]\n  exact measurable_set.bUnion hs h\n#align sUnion sUnion\n\n",
 "sInter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂₀ » -/\nprotected theorem sInter {s : set (set α)} (hs : s.countable) (h : ∀ t ∈ s, null_measurable_set t μ) :\n    null_measurable_set («expr⋂₀ » s) μ :=\n  measurable_set.sInter hs h\n#align sInter sInter\n\n",
 "out":
 "theorem measure.is_complete.out (h : μ.is_complete) : ∀ s, μ s = 0 → measurable_set s :=\n  h.1\n#align measure.is_complete.out measure.is_complete.out\n\n",
 "of_subsingleton":
 "@[nontriviality]\ntheorem of_subsingleton [subsingleton α] : null_measurable_set s μ :=\n  subsingleton.measurable_set\n#align of_subsingleton of_subsingleton\n\n",
 "of_null":
 "theorem of_null (h : μ s = 0) : null_measurable_set s μ :=\n  ⟨∅, measurable_set.empty, ae_eq_empty.2 h⟩\n#align of_null of_null\n\n",
 "of_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem of_compl (h : null_measurable_set («expr ᶜ» s) μ) : null_measurable_set s μ :=\n  h.of_compl\n#align of_compl of_compl\n\n",
 "null_measurable_set_univ":
 "@[simp]\ntheorem null_measurable_set_univ : null_measurable_set univ μ :=\n  measurable_set.univ\n#align null_measurable_set_univ null_measurable_set_univ\n\n",
 "null_measurable_set_to_measurable":
 "theorem null_measurable_set_to_measurable : null_measurable_set (to_measurable μ s) μ :=\n  (measurable_set_to_measurable _ _).null_measurable_set\n#align null_measurable_set_to_measurable null_measurable_set_to_measurable\n\n",
 "null_measurable_set_singleton":
 "theorem null_measurable_set_singleton (x : α) : null_measurable_set {x} μ :=\n  measurable_set_singleton x\n#align null_measurable_set_singleton null_measurable_set_singleton\n\n",
 "null_measurable_set_sUnion":
 "theorem _root_.set.finite.null_measurable_set_sUnion {s : set (set α)} (hs : s.finite)\n    (h : ∀ t ∈ s, null_measurable_set t μ) : null_measurable_set (⋃₀ s) μ :=\n  finite.measurable_set_sUnion hs h\n#align set.finite.null_measurable_set_sUnion set.finite.null_measurable_set_sUnion\n\n",
 "null_measurable_set_sInter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂₀ » -/\ntheorem _root_.set.finite.null_measurable_set_sInter {s : set (set α)} (hs : s.finite)\n    (h : ∀ t ∈ s, null_measurable_set t μ) : null_measurable_set («expr⋂₀ » s) μ :=\n  null_measurable_set.sInter hs.countable h\n#align set.finite.null_measurable_set_sInter set.finite.null_measurable_set_sInter\n\n",
 "null_measurable_set_insert":
 "@[simp]\ntheorem null_measurable_set_insert {a : α} {s : set α} : null_measurable_set (insert a s) μ ↔ null_measurable_set s μ :=\n  measurable_set_insert\n#align null_measurable_set_insert null_measurable_set_insert\n\n",
 "null_measurable_set_eq":
 "theorem null_measurable_set_eq {a : α} : null_measurable_set { x | x = a } μ :=\n  null_measurable_set_singleton a\n#align null_measurable_set_eq null_measurable_set_eq\n\n",
 "null_measurable_set_empty":
 "@[simp]\ntheorem null_measurable_set_empty : null_measurable_set ∅ μ :=\n  measurable_set.empty\n#align null_measurable_set_empty null_measurable_set_empty\n\n",
 "null_measurable_set_bUnion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem _root_.finset.null_measurable_set_bUnion {f : ι → set α} (s : Finset ι)\n    (h : ∀ b ∈ s, null_measurable_set (f b) μ) :\n    null_measurable_set\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f b)) μ :=\n  finset.measurable_set_bUnion s h\n#align finset.null_measurable_set_bUnion finset.null_measurable_set_bUnion\n\n",
 "null_measurable_set_bInter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem _root_.finset.null_measurable_set_bInter {f : ι → set α} (s : Finset ι)\n    (h : ∀ b ∈ s, null_measurable_set (f b) μ) :\n    null_measurable_set\n      («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f b)) μ :=\n  s.finite_to_set.null_measurable_set_bInter h\n#align finset.null_measurable_set_bInter finset.null_measurable_set_bInter\n\n",
 "null_measurable_set":
 "protected theorem _root_.finset.null_measurable_set (s : Finset α) : null_measurable_set (↑s) μ :=\n  finset.measurable_set s\n#align finset.null_measurable_set finset.null_measurable_set\n\n",
 "null_measurable":
 "protected theorem _root_.measurable.null_measurable (h : measurable f) : null_measurable f μ := fun s hs =>\n  (h hs).null_measurable_set\n#align measurable.null_measurable measurable.null_measurable\n\n",
 "measure_union₀_aux":
 "theorem measure_union₀_aux (hs : null_measurable_set s μ) (ht : null_measurable_set t μ) (hd : ae_disjoint μ s t) :\n    μ (s ∪ t) = μ s + μ t :=\n  by\n  rw [union_eq_Union, measure_Union₀, tsum_fintype, fintype.sum_bool, cond, cond]\n  exacts[(pairwise_on_bool ae_disjoint.symmetric).2 hd, fun b => bool.cases_on b ht hs]\n#align measure_union₀_aux measure_union₀_aux\n\n",
 "measure_union₀'":
 "theorem measure_union₀' (hs : null_measurable_set s μ) (hd : ae_disjoint μ s t) : μ (s ∪ t) = μ s + μ t := by\n  rw [union_comm, measure_union₀ hs hd.symm, add_comm]\n#align measure_union₀' measure_union₀'\n\n",
 "measure_union₀":
 "theorem measure_union₀ (ht : null_measurable_set t μ) (hd : ae_disjoint μ s t) : μ (s ∪ t) = μ s + μ t := by\n  rw [← measure_union_add_inter₀ s ht, hd.eq, add_zero]\n#align measure_union₀ measure_union₀\n\n",
 "measure_union_add_inter₀'":
 "theorem measure_union_add_inter₀' (hs : null_measurable_set s μ) (t : set α) : μ (s ∪ t) + μ (s ∩ t) = μ s + μ t := by\n  rw [union_comm, inter_comm, measure_union_add_inter₀ t hs, add_comm]\n#align measure_union_add_inter₀' measure_union_add_inter₀'\n\n",
 "measure_union_add_inter₀":
 "theorem measure_union_add_inter₀ (s : set α) (ht : null_measurable_set t μ) : μ (s ∪ t) + μ (s ∩ t) = μ s + μ t := by\n  rw [← measure_inter_add_diff₀ (s ∪ t) ht, union_inter_cancel_right, union_diff_right, ← measure_inter_add_diff₀ s ht,\n    add_comm, ← add_assoc, add_right_comm]\n#align measure_union_add_inter₀ measure_union_add_inter₀\n\n",
 "measure_inter_add_diff₀":
 "/-- A null measurable set `t` is Carathéodory measurable: for any `s`, we have\n`μ (s ∩ t) + μ (s \\ t) = μ s`. -/\ntheorem measure_inter_add_diff₀ (s : set α) (ht : null_measurable_set t μ) : μ (s ∩ t) + μ (s \\ t) = μ s :=\n  by\n  refine' le_antisymm _ _\n  · rcases exists_measurable_superset μ s with ⟨s', hsub, hs'm, hs'⟩\n    replace hs'm : null_measurable_set s' μ := hs'm.null_measurable_set\n    calc\n      μ (s ∩ t) + μ (s \\ t) ≤ μ (s' ∩ t) + μ (s' \\ t) :=\n        add_le_add (measure_mono <| inter_subset_inter_left _ hsub) (measure_mono <| diff_subset_diff_left hsub)\n      _ = μ (s' ∩ t ∪ s' \\ t) :=\n        (measure_union₀_aux (hs'm.inter ht) (hs'm.diff ht) <| (@disjoint_inf_sdiff _ s' t _).ae_disjoint).symm\n      _ = μ s' := congr_arg μ (inter_union_diff _ _)\n      _ = μ s := hs'\n      \n  ·\n    calc\n      μ s = μ (s ∩ t ∪ s \\ t) := by rw [inter_union_diff]\n      _ ≤ μ (s ∩ t) + μ (s \\ t) := measure_union_le _ _\n      \n#align measure_inter_add_diff₀ measure_inter_add_diff₀\n\n",
 "measure_add_measure_compl₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem measure_add_measure_compl₀ {s : set α} (hs : null_measurable_set s μ) : μ s + μ («expr ᶜ» s) = μ univ := by\n  rw [← measure_union₀' hs ae_disjoint_compl_right, union_compl_self]\n#align measure_add_measure_compl₀ measure_add_measure_compl₀\n\n",
 "measure_Union₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr on » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem measure_Union₀ [countable ι] {f : ι → set α} (hd : Pairwise («expr on » (ae_disjoint μ) f))\n    (h : ∀ i, null_measurable_set (f i) μ) :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (μ (f i)) :=\n  by\n  rcases exists_subordinate_pairwise_disjoint h hd with ⟨t, ht_sub, ht_eq, htm, htd⟩\n  calc\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) =\n        μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (t i)) :=\n      measure_congr (eventually_eq.countable_Union ht_eq)\n    _ = «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (μ (t i)) :=\n      measure_Union htd htm\n    _ = «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (μ (f i)) :=\n      tsum_congr fun i => measure_congr (ht_eq _).symm\n    \n#align measure_Union₀ measure_Union₀\n\n",
 "measure_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr on » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem measure_Union {m0 : measurable_space α} {μ : measure α} [countable ι] {f : ι → set α}\n    (hn : Pairwise («expr on » Disjoint f)) (h : ∀ i, measurable_set (f i)) :\n    μ («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (μ (f i)) :=\n  by\n  rw [measure_eq_extend (measurable_set.Union h), extend_Union measurable_set.empty _ measurable_set.Union _ hn h]\n  · simp [measure_eq_extend, h]\n  · exact μ.empty\n  · exact μ.m_Union\n#align measure_Union measure_Union\n\n",
 "measurable_set_of_null":
 "theorem measurable_set_of_null [μ.is_complete] (hs : μ s = 0) : measurable_set s :=\n  measure_theory.measure.is_complete.out' s hs\n#align measurable_set_of_null measurable_set_of_null\n\n",
 "measurable_of_complete":
 "theorem null_measurable.measurable_of_complete [μ.is_complete] {m1 : measurable_space β} {f : α → β}\n    (hf : null_measurable f μ) : measurable f := fun s hs => (hf hs).measurable_of_complete\n#align null_measurable.measurable_of_complete null_measurable.measurable_of_complete\n\n",
 "measurable'":
 "protected theorem null_measurable.measurable' (h : null_measurable f μ) :\n    @measurable (null_measurable_space α μ) β _ _ f :=\n  h\n#align null_measurable.measurable' null_measurable.measurable'\n\n",
 "is_complete_iff":
 "theorem measure.is_complete_iff : μ.is_complete ↔ ∀ s, μ s = 0 → measurable_set s :=\n  ⟨fun h => h.1, fun h => ⟨h⟩⟩\n#align measure.is_complete_iff measure.is_complete_iff\n\n",
 "inter":
 "@[simp]\nprotected theorem inter (hs : null_measurable_set s μ) (ht : null_measurable_set t μ) : null_measurable_set (s ∩ t) μ :=\n  hs.inter ht\n#align inter inter\n\n",
 "insert":
 "protected theorem insert [measurable_singleton_class (null_measurable_space α μ)] (hs : null_measurable_set s μ)\n    (a : α) : null_measurable_set (insert a s) μ :=\n  hs.insert a\n#align insert insert\n\n",
 "exists_subordinate_pairwise_disjoint":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr on » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr on » -/\n/-- If `sᵢ` is a countable family of (null) measurable pairwise `μ`-a.e. disjoint sets, then there\nexists a subordinate family `tᵢ ⊆ sᵢ` of measurable pairwise disjoint sets such that\n`tᵢ =ᵐ[μ] sᵢ`. -/\ntheorem exists_subordinate_pairwise_disjoint [countable ι] {s : ι → set α} (h : ∀ i, null_measurable_set (s i) μ)\n    (hd : Pairwise («expr on » (ae_disjoint μ) s)) :\n    ∃ t : ι → set α,\n      (∀ i, t i ⊆ s i) ∧\n        (∀ i, «expr =ᵐ[ ] » (s i) μ (t i)) ∧ (∀ i, measurable_set (t i)) ∧ Pairwise («expr on » Disjoint t) :=\n  by\n  choose t ht_sub htm ht_eq using fun i => (h i).exists_measurable_subset_ae_eq\n  rcases exists_null_pairwise_disjoint_diff hd with ⟨u, hum, hu₀, hud⟩\n  exact\n    ⟨fun i => t i \\ u i, fun i => (diff_subset _ _).trans (ht_sub _), fun i =>\n      (ht_eq _).symm.trans (diff_null_ae_eq_self (hu₀ i)).symm, fun i => (htm i).diff (hum i),\n      hud.mono fun i j h => h.mono (diff_subset_diff_left (ht_sub i)) (diff_subset_diff_left (ht_sub j))⟩\n#align exists_subordinate_pairwise_disjoint exists_subordinate_pairwise_disjoint\n\n",
 "exists_measurable_superset_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (t «expr ⊇ » s) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊇ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem exists_measurable_superset_ae_eq (h : null_measurable_set s μ) :\n    ∃ (t : _)(_ : «expr ⊇ » t s), measurable_set t ∧ «expr =ᵐ[ ] » t μ s :=\n  by\n  rcases h with ⟨t, htm, hst⟩\n  refine' ⟨t ∪ to_measurable μ (s \\ t), _, htm.union (measurable_set_to_measurable _ _), _⟩\n  · exact diff_subset_iff.1 (subset_to_measurable _ _)\n  · have : «expr =ᵐ[ ] » (to_measurable μ (s \\ t)) μ (∅ : set α) := by simp [ae_le_set.1 hst.le]\n    simpa only [union_empty] using hst.symm.union this\n#align exists_measurable_superset_ae_eq exists_measurable_superset_ae_eq\n\n",
 "exists_measurable_subset_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (t «expr ⊆ » s) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem exists_measurable_subset_ae_eq (h : null_measurable_set s μ) :\n    ∃ (t : _)(_ : t ⊆ s), measurable_set t ∧ «expr =ᵐ[ ] » t μ s :=\n  ⟨«expr ᶜ» (to_measurable μ («expr ᶜ» s)), compl_subset_comm.2 <| subset_to_measurable _ _,\n    (measurable_set_to_measurable _ _).compl, h.compl_to_measurable_compl_ae_eq⟩\n#align exists_measurable_subset_ae_eq exists_measurable_subset_ae_eq\n\n",
 "disjointed":
 "@[simp]\nprotected theorem disjointed {f : ℕ → set α} (h : ∀ i, null_measurable_set (f i) μ) (n) :\n    null_measurable_set (disjointed f n) μ :=\n  measurable_set.disjointed h n\n#align disjointed disjointed\n\n",
 "diff":
 "@[simp]\nprotected theorem diff (hs : null_measurable_set s μ) (ht : null_measurable_set t μ) : null_measurable_set (s \\ t) μ :=\n  hs.diff ht\n#align diff diff\n\n",
 "const":
 "@[simp]\nprotected theorem const (p : Prop) : null_measurable_set { a : α | p } μ :=\n  measurable_set.const p\n#align const const\n\n",
 "congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem _root_.measurable.congr_ae {α β} [measurable_space α] [measurable_space β] {μ : measure α} [hμ : μ.is_complete]\n    {f g : α → β} (hf : measurable f) (hfg : «expr =ᵐ[ ] » f μ g) : measurable g :=\n  (hf.null_measurable.congr hfg).measurable_of_complete\n#align measurable.congr_ae measurable.congr_ae\n\n",
 "congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem null_measurable.congr {g : α → β} (hf : null_measurable f μ) (hg : «expr =ᵐ[ ] » f μ g) : null_measurable g μ :=\n  fun s hs => (hf hs).congr <| eventually_eq_set.2 <| hg.mono fun x hx => by rw [mem_preimage, mem_preimage, hx]\n#align null_measurable.congr null_measurable.congr\n\n",
 "completion_apply":
 "theorem completion_apply {_ : measurable_space α} (μ : measure α) (s : set α) : μ.completion s = μ s :=\n  rfl\n#align completion_apply completion_apply\n\n",
 "compl_to_measurable_compl_ae_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem compl_to_measurable_compl_ae_eq (h : null_measurable_set s μ) :\n    «expr =ᵐ[ ] » («expr ᶜ» (to_measurable μ («expr ᶜ» s))) μ s := by\n  simpa only [compl_compl] using h.compl.to_measurable_ae_eq.compl\n#align compl_to_measurable_compl_ae_eq compl_to_measurable_compl_ae_eq\n\n",
 "compl_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem compl_iff : null_measurable_set («expr ᶜ» s) μ ↔ null_measurable_set s μ :=\n  measurable_set.compl_iff\n#align compl_iff compl_iff\n\n",
 "compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem compl (h : null_measurable_set s μ) : null_measurable_set («expr ᶜ» s) μ :=\n  h.compl\n#align compl compl\n\n",
 "comp_null_measurable":
 "theorem measurable.comp_null_measurable {g : β → γ} (hg : measurable g) (hf : null_measurable f μ) :\n    null_measurable (g ∘ f) μ :=\n  hg.comp hf\n#align measurable.comp_null_measurable measurable.comp_null_measurable\n\n",
 "coe_completion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_completion {_ : measurable_space α} (μ : measure α) : «expr⇑ » μ.completion = μ :=\n  rfl\n#align coe_completion coe_completion\n\n",
 "bUnion_decode₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\nprotected theorem bUnion_decode₂ [Encodable ι] ⦃f : ι → set α⦄ (h : ∀ i, null_measurable_set (f i) μ) (n : ℕ) :\n    null_measurable_set\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f b)) μ :=\n  measurable_set.bUnion_decode₂ h n\n#align bUnion_decode₂ bUnion_decode₂\n\n",
 "bUnion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\nprotected theorem bUnion {f : ι → set α} {s : set ι} (hs : s.countable) (h : ∀ b ∈ s, null_measurable_set (f b) μ) :\n    null_measurable_set\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f b)) μ :=\n  measurable_set.bUnion hs h\n#align bUnion bUnion\n\n",
 "bInter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\nprotected theorem bInter {f : β → set α} {s : set β} (hs : s.countable) (h : ∀ b ∈ s, null_measurable_set (f b) μ) :\n    null_measurable_set\n      («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f b)) μ :=\n  measurable_set.bInter hs h\n#align bInter bInter\n\n",
 "Union":
 "/- warning: Union clashes with has_union -> Union\nCase conversion may be inaccurate. Consider using '#align Union Unionₓ'. -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n#print Union /-\nprotected theorem Union {ι : Sort _} [countable ι] {s : ι → set α} (h : ∀ i, null_measurable_set (s i) μ) :\n    null_measurable_set\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s i)) μ :=\n  measurable_set.Union h\n#align Union Union\n-/\n\n",
 "Inter":
 "/- warning: Inter clashes with has_inter -> Inter\nCase conversion may be inaccurate. Consider using '#align Inter Interₓ'. -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n#print Inter /-\nprotected theorem Inter {ι : Sort _} [countable ι] {f : ι → set α} (h : ∀ i, null_measurable_set (f i) μ) :\n    null_measurable_set\n      («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f i)) μ :=\n  measurable_set.Inter h\n#align Inter Inter\n-/\n\n"}