{"to_complex_measure_to_signed_measure":
 "theorem to_complex_measure_to_signed_measure (c : complex_measure α) : c.re.to_complex_measure c.im = c := by\n  ext (i hi) <;> rfl\n#align to_complex_measure_to_signed_measure to_complex_measure_to_signed_measure\n\n",
 "to_complex_measure_apply":
 "/-\nCopyright (c) 2021 Kexing Ying. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kexing Ying\n-/\ntheorem _root_.measure_theory.signed_measure.to_complex_measure_apply {s t : signed_measure α} {i : Set α} :\n    s.to_complex_measure t i = ⟨s i, t i⟩ :=\n  rfl\n#align measure_theory.signed_measure.to_complex_measure_apply measure_theory.signed_measure.to_complex_measure_apply\n\n",
 "re_to_complex_measure":
 "theorem _root_.measure_theory.signed_measure.re_to_complex_measure (s t : signed_measure α) :\n    (s.to_complex_measure t).re = s := by\n  ext (i hi)\n  rfl\n#align measure_theory.signed_measure.re_to_complex_measure measure_theory.signed_measure.re_to_complex_measure\n\n",
 "im_to_complex_measure":
 "theorem _root_.measure_theory.signed_measure.im_to_complex_measure (s t : signed_measure α) :\n    (s.to_complex_measure t).im = t := by\n  ext (i hi)\n  rfl\n#align measure_theory.signed_measure.im_to_complex_measure measure_theory.signed_measure.im_to_complex_measure\n\n",
 "absolutely_continuous_ennreal_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.absolutely_continuous -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.absolutely_continuous -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.absolutely_continuous -/\ntheorem absolutely_continuous_ennreal_iff (c : complex_measure α) (μ : vector_measure α (ennreal)) :\n    vector_measure.absolutely_continuous c μ ↔\n      vector_measure.absolutely_continuous c.re μ ∧ vector_measure.absolutely_continuous c.im μ :=\n  by\n  constructor <;> intro h\n  ·\n    constructor <;>\n      · intro i hi\n        simp [h hi]\n  · intro i hi\n    rw [← Complex.re_add_im (c i), (_ : (c i).re = 0), (_ : (c i).im = 0)]\n    exacts[by simp, h.2 hi, h.1 hi]\n#align absolutely_continuous_ennreal_iff absolutely_continuous_ennreal_iff\n\n"}