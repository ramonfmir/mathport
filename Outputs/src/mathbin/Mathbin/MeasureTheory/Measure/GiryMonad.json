{"measurable_of_measurable_coe":
 "theorem measurable_of_measurable_coe (f : β → measure α)\n    (h : ∀ (s : set α) (hs : measurable_set s), measurable fun b => f b s) : measurable f :=\n  measurable.of_le_map <|\n    supᵢ₂_le fun s hs => measurable_space.comap_le_iff_le_map.2 <| by rw [measurable_space.map_comp] <;> exact h s hs\n#align measurable_of_measurable_coe measurable_of_measurable_coe\n\n",
 "measurable_measure":
 "theorem measurable_measure {μ : α → measure β} :\n    measurable μ ↔ ∀ (s : set β) (hs : measurable_set s), measurable fun b => μ b s :=\n  ⟨fun hμ s hs => (measurable_coe hs).comp hμ, measurable_of_measurable_coe μ⟩\n#align measurable_measure measurable_measure\n\n",
 "measurable_map":
 "theorem measurable_map (f : α → β) (hf : measurable f) : measurable fun μ : measure α => map f μ :=\n  by\n  refine' measurable_of_measurable_coe _ fun s hs => _\n  simp_rw [map_apply hf hs]\n  exact measurable_coe (hf hs)\n#align measurable_map measurable_map\n\n",
 "measurable_lintegral":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem measurable_lintegral {f : α → ennreal} (hf : measurable f) :\n    measurable fun μ : measure α =>\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f x) μ :=\n  by\n  simp only [lintegral_eq_supr_eapprox_lintegral, hf, simple_func.lintegral]\n  refine' measurable_supr fun n => finset.measurable_sum _ fun i _ => _\n  refine' measurable.const_mul _ _\n  exact measurable_coe ((simple_func.eapprox f n).measurable_set_preimage _)\n#align measurable_lintegral measurable_lintegral\n\n",
 "measurable_join":
 "theorem measurable_join : measurable (join : measure (measure α) → measure α) :=\n  measurable_of_measurable_coe _ fun s hs => by\n    simp only [join_apply hs] <;> exact measurable_lintegral (measurable_coe hs)\n#align measurable_join measurable_join\n\n",
 "measurable_dirac":
 "theorem measurable_dirac : measurable (measure.dirac : α → measure α) :=\n  by\n  refine' measurable_of_measurable_coe _ fun s hs => _\n  simp_rw [dirac_apply' _ hs]\n  exact measurable_one.indicator hs\n#align measurable_dirac measurable_dirac\n\n",
 "measurable_coe":
 "/-\nCopyright (c) 2019 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl\n-/\ntheorem measurable_coe {s : set α} (hs : measurable_set s) : measurable fun μ : measure α => μ s :=\n  measurable.of_comap_le <| le_supᵢ_of_le s <| le_supᵢ_of_le hs <| le_rfl\n#align measurable_coe measurable_coe\n\n",
 "measurable_bind'":
 "theorem measurable_bind' {g : α → measure β} (hg : measurable g) : measurable fun m => bind m g :=\n  measurable_join.comp (measurable_map _ hg)\n#align measurable_bind' measurable_bind'\n\n",
 "lintegral_join":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_join {m : measure (measure α)} {f : α → ennreal} (hf : measurable f) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f x)\n        (join m) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f x) μ)\n        m :=\n  by\n  simp_rw [lintegral_eq_supr_eapprox_lintegral hf, simple_func.lintegral,\n    join_apply (simple_func.measurable_set_preimage _ _)]\n  suffices\n    ∀ (s : ℕ → Finset (ennreal)) (f : ℕ → ennreal → measure α → ennreal) (hf : ∀ n r, measurable (f n r))\n      (hm :\n        monotone fun n μ =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s n)\n            (r * f n r μ)),\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s n)\n            (r *\n              «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n                (f n r μ) m)) =\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s n)\n              (r * f n r μ)))\n          m\n    by\n    refine'\n      this (fun n => simple_func.range (simple_func.eapprox f n))\n        (fun n r μ => μ («expr ⁻¹' » (simple_func.eapprox f n) {r})) _ _\n    · exact fun n r => measurable_coe (simple_func.measurable_set_preimage _ _)\n    · exact fun n m h μ => simple_func.lintegral_mono (simple_func.monotone_eapprox _ h) le_rfl\n  intro s f hf hm\n  rw [lintegral_supr _ hm]\n  swap\n  · exact fun n => finset.measurable_sum _ fun r _ => (hf _ _).const_mul _\n  congr\n  funext n\n  rw [lintegral_finset_sum (s n)]\n  · simp_rw [lintegral_const_mul _ (hf _ _)]\n  · exact fun r _ => (hf _ _).const_mul _\n#align lintegral_join lintegral_join\n\n",
 "lintegral_bind":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_bind {m : measure α} {μ : α → measure β} {f : β → ennreal} (hμ : measurable μ) (hf : measurable f) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f x)\n        (bind m μ) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f x)\n          (μ a))\n        m :=\n  (lintegral_join hf).trans (lintegral_map (measurable_lintegral hf) hμ)\n#align lintegral_bind lintegral_bind\n\n",
 "join_zero":
 "@[simp]\ntheorem join_zero : (0 : measure (measure α)).join = 0 :=\n  by\n  ext1 s hs\n  simp only [hs, join_apply, lintegral_zero_measure, coe_zero, pi.zero_apply]\n#align join_zero join_zero\n\n",
 "join_map_map":
 "theorem join_map_map {f : α → β} (hf : measurable f) (μ : measure (measure α)) :\n    join (map (map f) μ) = map f (join μ) := by\n  ext1 s hs\n  rw [join_apply hs, map_apply hf hs, join_apply (hf hs), lintegral_map (measurable_coe hs) (measurable_map f hf)]\n  simp_rw [map_apply hf hs]\n#align join_map_map join_map_map\n\n",
 "join_map_join":
 "theorem join_map_join (μ : measure (measure (measure α))) : join (map join μ) = join (join μ) :=\n  by\n  show bind μ join = join (join μ)\n  rw [join_eq_bind, join_eq_bind, bind_bind measurable_id measurable_id]\n  apply congr_arg (bind μ)\n  funext ν\n  exact join_eq_bind ν\n#align join_map_join join_map_join\n\n",
 "join_map_dirac":
 "theorem join_map_dirac (μ : measure α) : join (map dirac μ) = μ :=\n  dirac_bind\n#align join_map_dirac join_map_dirac\n\n",
 "join_eq_bind":
 "theorem join_eq_bind (μ : measure (measure α)) : join μ = bind μ id := by rw [bind, map_id]\n#align join_eq_bind join_eq_bind\n\n",
 "join_dirac":
 "theorem join_dirac (μ : measure α) : join (dirac μ) = μ :=\n  (join_eq_bind (dirac μ)).trans (bind_dirac measurable_id _)\n#align join_dirac join_dirac\n\n",
 "join_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n@[simp]\ntheorem join_apply {m : measure (measure α)} {s : set α} (hs : measurable_set s) :\n    join m s =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (μ s) m :=\n  measure.of_measurable_apply s hs\n#align join_apply join_apply\n\n",
 "dirac_bind":
 "theorem dirac_bind {m : measure α} : bind m dirac = m :=\n  by\n  ext1 s hs\n  simp only [bind_apply hs measurable_dirac, dirac_apply' _ hs, lintegral_indicator 1 hs, pi.one_apply, lintegral_one,\n    restrict_apply, measurable_set.univ, univ_inter]\n#align dirac_bind dirac_bind\n\n",
 "bind_zero_right'":
 "@[simp]\ntheorem bind_zero_right' (m : measure α) : bind m (fun _ => 0 : α → measure β) = 0 :=\n  bind_zero_right m\n#align bind_zero_right' bind_zero_right'\n\n",
 "bind_zero_right":
 "@[simp]\ntheorem bind_zero_right (m : measure α) : bind m (0 : α → measure β) = 0 :=\n  by\n  ext1 s hs\n  simp only [bind, hs, join_apply, coe_zero, pi.zero_apply]\n  rw [lintegral_map (measurable_coe hs) measurable_zero]\n  simp only [pi.zero_apply, coe_zero, lintegral_const, zero_mul]\n#align bind_zero_right bind_zero_right\n\n",
 "bind_zero_left":
 "@[simp]\ntheorem bind_zero_left (f : α → measure β) : bind 0 f = 0 := by simp [bind]\n#align bind_zero_left bind_zero_left\n\n",
 "bind_dirac":
 "theorem bind_dirac {f : α → measure β} (hf : measurable f) (a : α) : bind (dirac a) f = f a :=\n  by\n  ext1 s hs\n  rw [bind_apply hs hf, lintegral_dirac' a ((measurable_coe hs).comp hf)]\n#align bind_dirac bind_dirac\n\n",
 "bind_bind":
 "theorem bind_bind {γ} [measurable_space γ] {m : measure α} {f : α → measure β} {g : β → measure γ} (hf : measurable f)\n    (hg : measurable g) : bind (bind m f) g = bind m fun a => bind (f a) g :=\n  by\n  ext1 s hs\n  simp_rw [bind_apply hs hg, bind_apply hs ((measurable_bind' hg).comp hf),\n    lintegral_bind hf ((measurable_coe hs).comp hg), bind_apply hs hg]\n#align bind_bind bind_bind\n\n",
 "bind_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n@[simp]\ntheorem bind_apply {m : measure α} {f : α → measure β} {s : set β} (hs : measurable_set s) (hf : measurable f) :\n    bind m f s =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f a s) m :=\n  by rw [bind, join_apply hs, lintegral_map (measurable_coe hs) hf]\n#align bind_apply bind_apply\n\n"}