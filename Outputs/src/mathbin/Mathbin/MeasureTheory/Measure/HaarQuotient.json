{"smul_invariant_measure_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/-\nCopyright (c) 2022 Alex Kontorovich and Heather Macbeth. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Alex Kontorovich, Heather Macbeth\n-/\n/-- The pushforward to the coset space `G ⧸ Γ` of the restriction of a both left- and right-\n  invariant measure on `G` to a fundamental domain `𝓕` is a `G`-invariant measure on `G ⧸ Γ`. -/\n@[to_additive\n      \"The pushforward to the coset space `G ⧸ Γ` of the restriction of a both left- and\\n  right-invariant measure on an additive topological group `G` to a fundamental domain `𝓕` is a\\n  `G`-invariant measure on `G ⧸ Γ`.\"]\ntheorem measure_theory.is_fundamental_domain.smul_invariant_measure_map [μ.is_mul_left_invariant]\n    [μ.is_mul_right_invariant] :\n    smul_invariant_measure G («expr ⧸ » G Γ) (measure.map quotient_group.mk (μ.restrict 𝓕)) :=\n  {\n    measure_preimage_smul := by\n      let π : G → «expr ⧸ » G Γ := quotient_group.mk\n      have meas_π : measurable π := continuous_quotient_mk.measurable\n      have 𝓕meas : null_measurable_set 𝓕 μ := h𝓕.null_measurable_set\n      intro g A hA\n      have meas_πA : measurable_set («expr ⁻¹' » π A) := measurable_set_preimage meas_π hA\n      rw [measure.map_apply meas_π hA, measure.map_apply meas_π (measurable_set_preimage (measurable_const_smul g) hA),\n        measure.restrict_apply₀' 𝓕meas, measure.restrict_apply₀' 𝓕meas]\n      set π_preA := «expr ⁻¹' » π A\n      have :\n        «expr ⁻¹' » quotient_group.mk («expr ⁻¹' » (fun x : «expr ⧸ » G Γ => «expr • » g x) A) =\n          «expr ⁻¹' » (has_mul.mul g) π_preA :=\n        by\n        ext1\n        simp\n      rw [this]\n      have : μ («expr ⁻¹' » (has_mul.mul g) π_preA ∩ 𝓕) = μ (π_preA ∩ «expr ⁻¹' » (has_mul.mul g⁻¹) 𝓕) :=\n        by\n        trans μ («expr ⁻¹' » (has_mul.mul g) (π_preA ∩ «expr ⁻¹' » (has_mul.mul g⁻¹) 𝓕))\n        · rw [preimage_inter]\n          congr\n          rw [← preimage_comp, comp_mul_left, mul_left_inv]\n          ext\n          simp\n        rw [measure_preimage_mul]\n      rw [this]\n      have h𝓕_translate_fundom : is_fundamental_domain Γ.opposite («expr • » g 𝓕) μ := h𝓕.smul_of_comm g\n      rw [h𝓕.measure_set_eq h𝓕_translate_fundom meas_πA, ← preimage_smul_inv]\n      rfl\n      rintro ⟨γ, γ_in_Γ⟩\n      ext\n      have : π (x * mul_opposite.unop γ) = π x := by simpa [quotient_group.eq'] using γ_in_Γ\n      simp [(«expr • » · ·), this] }\n#align\n  measure_theory.is_fundamental_domain.smul_invariant_measure_map measure_theory.is_fundamental_domain.smul_invariant_measure_map\n\n",
 "mk'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Given a normal subgroup `Γ` of a topological group `G` with Haar measure `μ`, which is also\n  right-invariant, and a finite volume fundamental domain `𝓕`, the quotient map to `G ⧸ Γ` is\n  measure-preserving between appropriate multiples of Haar measure on `G` and `G ⧸ Γ`. -/\n@[to_additive measure_preserving_quotient_add_group.mk'\n      \"Given a normal subgroup `Γ` of an additive\\n  topological group `G` with Haar measure `μ`, which is also right-invariant, and a finite volume\\n  fundamental domain `𝓕`, the quotient map to `G ⧸ Γ` is measure-preserving between appropriate\\n  multiples of Haar measure on `G` and `G ⧸ Γ`.\"]\ntheorem measure_preserving_quotient_group.mk' [subgroup.normal Γ] [measure_theory.measure.is_haar_measure μ]\n    [μ.is_mul_right_invariant] (h𝓕_finite : μ 𝓕 < «expr⊤») (c : nnreal)\n    (h : μ (𝓕 ∩ «expr ⁻¹' » (quotient_group.mk' Γ) K) = c) :\n    measure_preserving (quotient_group.mk' Γ) (μ.restrict 𝓕) («expr • » c (measure_theory.measure.haar_measure K)) :=\n  { measurable := continuous_quotient_mk.measurable\n    map_eq := by rw [h𝓕.map_restrict_quotient K h𝓕_finite, h] <;> rfl }\n#align measure_preserving_quotient_group.mk' measure_preserving_quotient_group.mk'\n\n",
 "map_restrict_quotient":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- Given a normal subgroup `Γ` of a topological group `G` with Haar measure `μ`, which is also\n  right-invariant, and a finite volume fundamental domain `𝓕`, the pushforward to the quotient\n  group `G ⧸ Γ` of the restriction of `μ` to `𝓕` is a multiple of Haar measure on `G ⧸ Γ`. -/\n@[to_additive\n      \"Given a normal subgroup `Γ` of an additive topological group `G` with Haar measure\\n  `μ`, which is also right-invariant, and a finite volume fundamental domain `𝓕`, the pushforward\\n  to the quotient group `G ⧸ Γ` of the restriction of `μ` to `𝓕` is a multiple of Haar measure on\\n  `G ⧸ Γ`.\"]\ntheorem measure_theory.is_fundamental_domain.map_restrict_quotient [subgroup.normal Γ]\n    [measure_theory.measure.is_haar_measure μ] [μ.is_mul_right_invariant] (h𝓕_finite : μ 𝓕 < «expr⊤») :\n    measure.map (quotient_group.mk' Γ) (μ.restrict 𝓕) =\n      «expr • » (μ (𝓕 ∩ «expr ⁻¹' » (quotient_group.mk' Γ) K)) (measure_theory.measure.haar_measure K) :=\n  by\n  let π : «expr →* » G («expr ⧸ » G Γ) := quotient_group.mk' Γ\n  have meas_π : measurable π := continuous_quotient_mk.measurable\n  have 𝓕meas : null_measurable_set 𝓕 μ := h𝓕.null_measurable_set\n  haveI : is_finite_measure (μ.restrict 𝓕) :=\n    ⟨by\n      rw [measure.restrict_apply₀' 𝓕meas, univ_inter]\n      exact h𝓕_finite⟩\n  -- the measure is left-invariant, so by the uniqueness of Haar measure it's enough to show that\n  -- it has the stated size on the reference compact set `K`.\n  haveI : (measure.map (quotient_group.mk' Γ) (μ.restrict 𝓕)).is_mul_left_invariant := h𝓕.is_mul_left_invariant_map\n  rw [measure.haar_measure_unique (measure.map (quotient_group.mk' Γ) (μ.restrict 𝓕)) K, measure.map_apply meas_π,\n    measure.restrict_apply₀' 𝓕meas, inter_comm]\n  exact K.is_compact.measurable_set\n#align\n  measure_theory.is_fundamental_domain.map_restrict_quotient measure_theory.is_fundamental_domain.map_restrict_quotient\n\n",
 "is_mul_left_invariant_map":
 "/-- Assuming `Γ` is a normal subgroup of a topological group `G`, the pushforward to the quotient\n  group `G ⧸ Γ` of the restriction of a both left- and right-invariant measure on `G` to a\n  fundamental domain `𝓕` is a left-invariant measure on `G ⧸ Γ`. -/\n@[to_additive\n      \"Assuming `Γ` is a normal subgroup of an additive topological group `G`, the\\n  pushforward to the quotient group `G ⧸ Γ` of the restriction of a both left- and right-invariant\\n  measure on `G` to a fundamental domain `𝓕` is a left-invariant measure on `G ⧸ Γ`.\"]\ntheorem measure_theory.is_fundamental_domain.is_mul_left_invariant_map [subgroup.normal Γ] [μ.is_mul_left_invariant]\n    [μ.is_mul_right_invariant] : (measure.map (quotient_group.mk' Γ) (μ.restrict 𝓕)).is_mul_left_invariant :=\n  {\n    map_mul_left_eq_self := by\n      intro x\n      apply measure.ext\n      intro A hA\n      obtain ⟨x₁, _⟩ := @quotient.exists_rep _ (quotient_group.left_rel Γ) x\n      haveI := h𝓕.smul_invariant_measure_map\n      convert measure_preimage_smul x₁ ((measure.map quotient_group.mk) (μ.restrict 𝓕)) A using 1\n      rw [← h, measure.map_apply]\n      · rfl\n      · exact measurable_const_mul _\n      · exact hA }\n#align\n  measure_theory.is_fundamental_domain.is_mul_left_invariant_map measure_theory.is_fundamental_domain.is_mul_left_invariant_map\n\n"}