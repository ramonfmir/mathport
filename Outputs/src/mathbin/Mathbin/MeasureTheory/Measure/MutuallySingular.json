{"zero_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n@[simp]\ntheorem zero_right : measure.mutually_singular μ 0 :=\n  ⟨∅, measurable_set.empty, measure_empty, rfl⟩\n#align zero_right zero_right\n\n",
 "zero_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n@[simp]\ntheorem zero_left : measure.mutually_singular 0 μ :=\n  zero_right.symm\n#align zero_left zero_left\n\n",
 "symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n#print symm /-\n@[symm]\ntheorem symm (h : measure.mutually_singular ν μ) : measure.mutually_singular μ ν :=\n  let ⟨i, hi, his, hit⟩ := h\n  ⟨«expr ᶜ» i, hi.compl, hit, (compl_compl i).symm ▸ his⟩\n#align symm symm\n-/\n\n",
 "sum_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n@[simp]\ntheorem sum_right {ι : Type _} [countable ι] {ν : ι → measure α} :\n    measure.mutually_singular μ (sum ν) ↔ ∀ i, measure.mutually_singular μ (ν i) :=\n  comm.trans <| sum_left.trans <| forall_congr' fun i => comm\n#align sum_right sum_right\n\n",
 "sum_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n@[simp]\ntheorem sum_left {ι : Type _} [countable ι] {μ : ι → measure α} :\n    measure.mutually_singular (sum μ) ν ↔ ∀ i, measure.mutually_singular (μ i) ν :=\n  by\n  refine' ⟨fun h i => h.mono (le_sum _ _) le_rfl, fun H => _⟩\n  choose s hsm hsμ hsν using H\n  refine'\n    ⟨«expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (s i),\n      measurable_set.Inter hsm, _, _⟩\n  · rw [sum_apply _ (measurable_set.Inter hsm), ennreal.tsum_eq_zero]\n    exact fun i => measure_mono_null (Inter_subset _ _) (hsμ i)\n  · rwa [compl_Inter, measure_Union_null_iff]\n#align sum_left sum_left\n\n",
 "smul_nnreal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_nnreal (r : nnreal) (h : measure.mutually_singular ν μ) : measure.mutually_singular («expr • » r ν) μ :=\n  h.smul r\n#align smul_nnreal smul_nnreal\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul (r : ennreal) (h : measure.mutually_singular ν μ) : measure.mutually_singular («expr • » r ν) μ :=\n  h.mono_ac (absolutely_continuous.rfl.smul r) absolutely_continuous.rfl\n#align smul smul\n\n",
 "mono_ac":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.absolutely_continuous -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.absolutely_continuous -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\ntheorem mono_ac (h : measure.mutually_singular μ₁ ν₁) (hμ : measure.absolutely_continuous μ₂ μ₁)\n    (hν : measure.absolutely_continuous ν₂ ν₁) : measure.mutually_singular μ₂ ν₂ :=\n  let ⟨s, hs, h₁, h₂⟩ := h\n  ⟨s, hs, hμ h₁, hν h₂⟩\n#align mono_ac mono_ac\n\n",
 "mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\ntheorem mono (h : measure.mutually_singular μ₁ ν₁) (hμ : μ₂ ≤ μ₁) (hν : ν₂ ≤ ν₁) : measure.mutually_singular μ₂ ν₂ :=\n  h.mono_ac hμ.absolutely_continuous hν.absolutely_continuous\n#align mono mono\n\n",
 "mk":
 "/-\nCopyright (c) 2021 Kexing Ying. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kexing Ying, Yury Kudryashov\n-/\ntheorem mk {s t : set α} (hs : μ s = 0) (ht : ν t = 0) (hst : univ ⊆ s ∪ t) : mutually_singular μ ν :=\n  by\n  use to_measurable μ s, measurable_set_to_measurable _ _, (measure_to_measurable _).trans hs\n  refine' measure_mono_null (fun x hx => (hst trivial).resolve_left fun hxs => hx _) ht\n  exact subset_to_measurable _ _ hxs\n#align mk mk\n\n",
 "comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n#print comm /-\ntheorem comm : measure.mutually_singular μ ν ↔ measure.mutually_singular ν μ :=\n  ⟨fun h => h.symm, fun h => h.symm⟩\n#align comm comm\n-/\n\n",
 "add_right_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n@[simp]\ntheorem add_right_iff :\n    measure.mutually_singular μ (ν₁ + ν₂) ↔ measure.mutually_singular μ ν₁ ∧ measure.mutually_singular μ ν₂ :=\n  comm.trans <| add_left_iff.trans <| and_congr comm comm\n#align add_right_iff add_right_iff\n\n",
 "add_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\ntheorem add_right (h₁ : measure.mutually_singular μ ν₁) (h₂ : measure.mutually_singular μ ν₂) :\n    measure.mutually_singular μ (ν₁ + ν₂) :=\n  add_right_iff.2 ⟨h₁, h₂⟩\n#align add_right add_right\n\n",
 "add_left_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n@[simp]\ntheorem add_left_iff :\n    measure.mutually_singular (μ₁ + μ₂) ν ↔ measure.mutually_singular μ₁ ν ∧ measure.mutually_singular μ₂ ν := by\n  rw [← sum_cond, sum_left, bool.forall_bool, cond, cond, and_comm]\n#align add_left_iff add_left_iff\n\n",
 "add_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.mutually_singular -/\ntheorem add_left (h₁ : measure.mutually_singular ν₁ μ) (h₂ : measure.mutually_singular ν₂ μ) :\n    measure.mutually_singular (ν₁ + ν₂) μ :=\n  add_left_iff.2 ⟨h₁, h₂⟩\n#align add_left add_left\n\n"}