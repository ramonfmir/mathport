{"sup_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[measurability]\ntheorem ae_measurable.sup_const (hf : ae_measurable f μ) (c : M) : ae_measurable (fun x => «expr ⊔ » (f x) c) μ :=\n  (measurable_sup_const c).comp_ae_measurable hf\n#align ae_measurable.sup_const ae_measurable.sup_const\n\n",
 "sup'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[measurability]\ntheorem ae_measurable.sup' (hf : ae_measurable f μ) (hg : ae_measurable g μ) : ae_measurable («expr ⊔ » f g) μ :=\n  measurable_sup.comp_ae_measurable (hf.prod_mk hg)\n#align ae_measurable.sup' ae_measurable.sup'\n\n",
 "sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[measurability]\ntheorem ae_measurable.sup (hf : ae_measurable f μ) (hg : ae_measurable g μ) :\n    ae_measurable (fun a => «expr ⊔ » (f a) (g a)) μ :=\n  measurable_sup.comp_ae_measurable (hf.prod_mk hg)\n#align ae_measurable.sup ae_measurable.sup\n\n",
 "measurable_sup'":
 "@[measurability]\ntheorem finset.measurable_sup' {ι : Type _} {s : Finset ι} (hs : s.nonempty) {f : ι → δ → α}\n    (hf : ∀ n ∈ s, measurable (f n)) : measurable (s.sup' hs f) :=\n  finset.sup'_induction hs _ (fun f hf g hg => hf.sup hg) fun n hn => hf n hn\n#align finset.measurable_sup' finset.measurable_sup'\n\n",
 "measurable_range_sup''":
 "@[measurability]\ntheorem finset.measurable_range_sup'' {f : ℕ → δ → α} {n : ℕ} (hf : ∀ k ≤ n, measurable (f k)) :\n    measurable fun x => (range (n + 1)).sup' nonempty_range_succ fun k => f k x :=\n  by\n  convert finset.measurable_range_sup' hf\n  ext x\n  simp\n#align finset.measurable_range_sup'' finset.measurable_range_sup''\n\n",
 "measurable_range_sup'":
 "@[measurability]\ntheorem finset.measurable_range_sup' {f : ℕ → δ → α} {n : ℕ} (hf : ∀ k ≤ n, measurable (f k)) :\n    measurable ((range (n + 1)).sup' nonempty_range_succ f) :=\n  by\n  simp_rw [← Nat.lt_succ_iff] at hf\n  refine' finset.measurable_sup' _ _\n  simpa [Finset.mem_range]\n#align finset.measurable_range_sup' finset.measurable_range_sup'\n\n",
 "inf_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[measurability]\ntheorem ae_measurable.inf_const (hf : ae_measurable f μ) (c : M) : ae_measurable (fun x => «expr ⊓ » (f x) c) μ :=\n  (measurable_inf_const c).comp_ae_measurable hf\n#align ae_measurable.inf_const ae_measurable.inf_const\n\n",
 "inf'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[measurability]\ntheorem ae_measurable.inf' (hf : ae_measurable f μ) (hg : ae_measurable g μ) : ae_measurable («expr ⊓ » f g) μ :=\n  measurable_inf.comp_ae_measurable (hf.prod_mk hg)\n#align ae_measurable.inf' ae_measurable.inf'\n\n",
 "inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[measurability]\ntheorem ae_measurable.inf (hf : ae_measurable f μ) (hg : ae_measurable g μ) :\n    ae_measurable (fun a => «expr ⊓ » (f a) (g a)) μ :=\n  measurable_inf.comp_ae_measurable (hf.prod_mk hg)\n#align ae_measurable.inf ae_measurable.inf\n\n",
 "const_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[measurability]\ntheorem ae_measurable.const_sup (hf : ae_measurable f μ) (c : M) : ae_measurable (fun x => «expr ⊔ » c (f x)) μ :=\n  (has_measurable_sup.measurable_const_sup c).comp_ae_measurable hf\n#align ae_measurable.const_sup ae_measurable.const_sup\n\n",
 "const_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[measurability]\ntheorem ae_measurable.const_inf (hf : ae_measurable f μ) (c : M) : ae_measurable (fun x => «expr ⊓ » c (f x)) μ :=\n  (has_measurable_inf.measurable_const_inf c).comp_ae_measurable hf\n#align ae_measurable.const_inf ae_measurable.const_inf\n\n"}