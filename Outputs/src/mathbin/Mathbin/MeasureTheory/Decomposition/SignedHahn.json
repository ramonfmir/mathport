{"zero_mem_measure_of_negatives":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem zero_mem_measure_of_negatives : (0 : exprℝ) ∈ s.measure_of_negatives :=\n  ⟨∅, ⟨MeasurableSet.empty, le_restrict_empty _ _⟩, s.empty⟩\n#align zero_mem_measure_of_negatives zero_mem_measure_of_negatives\n\n",
 "some_exists_one_div_lt_subset'":
 "private theorem some_exists_one_div_lt_subset' : some_exists_one_div_lt s (i \\ j) ⊆ i :=\n  Set.Subset.trans some_exists_one_div_lt_subset (Set.diff_subset _ _)\n#align some_exists_one_div_lt_subset' some_exists_one_div_lt_subset'\n\n",
 "some_exists_one_div_lt_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\nprivate theorem some_exists_one_div_lt_subset : some_exists_one_div_lt s i ⊆ i :=\n  by\n  by_cases hi : ¬vector_measure.restrict s i 0\n  ·\n    exact\n      let ⟨h, _⟩ := some_exists_one_div_lt_spec hi\n      h\n  · rw [some_exists_one_div_lt, dif_neg hi]\n    exact Set.empty_subset _\n#align some_exists_one_div_lt_subset some_exists_one_div_lt_subset\n\n",
 "some_exists_one_div_lt_spec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\nprivate theorem some_exists_one_div_lt_spec (hi : ¬vector_measure.restrict s i 0) :\n    some_exists_one_div_lt s i ⊆ i ∧\n      MeasurableSet (some_exists_one_div_lt s i) ∧\n        (1 / (find_exists_one_div_lt s i + 1) : exprℝ) < s (some_exists_one_div_lt s i) :=\n  by\n  rw [some_exists_one_div_lt, dif_pos hi]\n  exact Classical.choose_spec (find_exists_one_div_lt_spec hi)\n#align some_exists_one_div_lt_spec some_exists_one_div_lt_spec\n\n",
 "some_exists_one_div_lt_measurable_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\nprivate theorem some_exists_one_div_lt_measurable_set : MeasurableSet (some_exists_one_div_lt s i) :=\n  by\n  by_cases hi : ¬vector_measure.restrict s i 0\n  ·\n    exact\n      let ⟨_, h, _⟩ := some_exists_one_div_lt_spec hi\n      h\n  · rw [some_exists_one_div_lt, dif_neg hi]\n    exact MeasurableSet.empty\n#align some_exists_one_div_lt_measurable_set some_exists_one_div_lt_measurable_set\n\n",
 "some_exists_one_div_lt_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\nprivate theorem some_exists_one_div_lt_lt (hi : ¬vector_measure.restrict s i 0) :\n    (1 / (find_exists_one_div_lt s i + 1) : exprℝ) < s (some_exists_one_div_lt s i) :=\n  let ⟨_, _, h⟩ := some_exists_one_div_lt_spec hi\n  h\n#align some_exists_one_div_lt_lt some_exists_one_div_lt_lt\n\n",
 "restrict_nonpos_seq_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n-- I used `i \\ ∅` instead of `i` to simplify some proofs\nprivate theorem restrict_nonpos_seq_succ (n : ℕ) :\n    restrict_nonpos_seq s i n.succ =\n      some_exists_one_div_lt s\n        (i \\\n          «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n            (restrict_nonpos_seq s i k)) :=\n  by rw [restrict_nonpos_seq]\n#align restrict_nonpos_seq_succ restrict_nonpos_seq_succ\n\n",
 "restrict_nonpos_seq_subset":
 "private theorem restrict_nonpos_seq_subset (n : ℕ) : restrict_nonpos_seq s i n ⊆ i := by\n  cases n <;>\n    · rw [restrict_nonpos_seq]\n      exact some_exists_one_div_lt_subset'\n#align restrict_nonpos_seq_subset restrict_nonpos_seq_subset\n\n",
 "restrict_nonpos_seq_measurable_set":
 "private theorem restrict_nonpos_seq_measurable_set (n : ℕ) : MeasurableSet (restrict_nonpos_seq s i n) := by\n  cases n <;>\n    · rw [restrict_nonpos_seq]\n      exact some_exists_one_div_lt_measurable_set\n#align restrict_nonpos_seq_measurable_set restrict_nonpos_seq_measurable_set\n\n",
 "restrict_nonpos_seq_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\nprivate theorem restrict_nonpos_seq_lt (n : ℕ)\n    (hn :\n      ¬vector_measure.restrict s\n          (i \\\n            «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n              (restrict_nonpos_seq s i k))\n          0) :\n    (1 /\n          (find_exists_one_div_lt s\n              (i \\\n                «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n                  (restrict_nonpos_seq s i k)) +\n            1) :\n        exprℝ) <\n      s (restrict_nonpos_seq s i n.succ) :=\n  by\n  rw [restrict_nonpos_seq_succ]\n  apply some_exists_one_div_lt_lt hn\n#align restrict_nonpos_seq_lt restrict_nonpos_seq_lt\n\n",
 "restrict_nonpos_seq_disjoint'":
 "private theorem restrict_nonpos_seq_disjoint' {n m : ℕ} (h : n < m) :\n    restrict_nonpos_seq s i n ∩ restrict_nonpos_seq s i m = ∅ :=\n  by\n  rw [Set.eq_empty_iff_forall_not_mem]\n  rintro x ⟨hx₁, hx₂⟩\n  cases m; · linarith\n  · rw [restrict_nonpos_seq] at hx₂\n    exact (some_exists_one_div_lt_subset hx₂).2 (Set.mem_unionᵢ.2 ⟨n, Set.mem_unionᵢ.2 ⟨nat.lt_succ_iff.mp h, hx₁⟩⟩)\n#align restrict_nonpos_seq_disjoint' restrict_nonpos_seq_disjoint'\n\n",
 "restrict_nonpos_seq_disjoint":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr on » -/\nprivate theorem restrict_nonpos_seq_disjoint : Pairwise («expr on » Disjoint (restrict_nonpos_seq s i)) :=\n  by\n  intro n m h\n  rw [function.on_fun, Set.disjoint_iff_inter_eq_empty]\n  rcases lt_or_gt_of_ne h with (h | h)\n  · rw [restrict_nonpos_seq_disjoint' h]\n  · rw [Set.inter_comm, restrict_nonpos_seq_disjoint' h]\n#align restrict_nonpos_seq_disjoint restrict_nonpos_seq_disjoint\n\n",
 "of_symm_diff_compl_positive_negative":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/-- The symmetric difference of two Hahn decompositions has measure zero. -/\ntheorem of_symm_diff_compl_positive_negative {s : signed_measure α} {i j : Set α} (hi : MeasurableSet i)\n    (hj : MeasurableSet j) (hi' : vector_measure.restrict 0 i s ∧ vector_measure.restrict s («expr ᶜ» i) 0)\n    (hj' : vector_measure.restrict 0 j s ∧ vector_measure.restrict s («expr ᶜ» j) 0) :\n    s («expr ∆ » i j) = 0 ∧ s («expr ∆ » («expr ᶜ» i) («expr ᶜ» j)) = 0 :=\n  by\n  rw [restrict_le_restrict_iff s 0, restrict_le_restrict_iff 0 s] at hi' hj'\n  constructor\n  · rw [symmDiff_def, Set.diff_eq_compl_inter, Set.diff_eq_compl_inter, Set.sup_eq_union, of_union,\n      le_antisymm (hi'.2 (hi.compl.inter hj) (Set.inter_subset_left _ _))\n        (hj'.1 (hi.compl.inter hj) (Set.inter_subset_right _ _)),\n      le_antisymm (hj'.2 (hj.compl.inter hi) (Set.inter_subset_left _ _))\n        (hi'.1 (hj.compl.inter hi) (Set.inter_subset_right _ _)),\n      zero_apply, zero_apply, zero_add]\n    ·\n      exact\n        Set.disjoint_of_subset_left (Set.inter_subset_left _ _)\n          (Set.disjoint_of_subset_right (Set.inter_subset_right _ _)\n            (disjoint_comm.1 (is_compl.disjoint isCompl_compl)))\n    · exact hj.compl.inter hi\n    · exact hi.compl.inter hj\n  · rw [symmDiff_def, Set.diff_eq_compl_inter, Set.diff_eq_compl_inter, compl_compl, compl_compl, Set.sup_eq_union,\n      of_union,\n      le_antisymm (hi'.2 (hj.inter hi.compl) (Set.inter_subset_right _ _))\n        (hj'.1 (hj.inter hi.compl) (Set.inter_subset_left _ _)),\n      le_antisymm (hj'.2 (hi.inter hj.compl) (Set.inter_subset_right _ _))\n        (hi'.1 (hi.inter hj.compl) (Set.inter_subset_left _ _)),\n      zero_apply, zero_apply, zero_add]\n    ·\n      exact\n        Set.disjoint_of_subset_left (Set.inter_subset_left _ _)\n          (Set.disjoint_of_subset_right (Set.inter_subset_right _ _) (is_compl.disjoint isCompl_compl))\n    · exact hj.inter hi.compl\n    · exact hi.inter hj.compl\n  all_goals measurability\n#align of_symm_diff_compl_positive_negative of_symm_diff_compl_positive_negative\n\n",
 "measure_of_restrict_nonpos_seq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\nprivate theorem measure_of_restrict_nonpos_seq (hi₂ : ¬vector_measure.restrict s i 0) (n : ℕ)\n    (hn :\n      ¬vector_measure.restrict s\n          (i \\\n            «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n              (restrict_nonpos_seq s i k))\n          0) :\n    0 < s (restrict_nonpos_seq s i n) := by\n  cases n\n  · rw [restrict_nonpos_seq]\n    rw [← @Set.diff_empty _ i] at hi₂\n    rcases some_exists_one_div_lt_spec hi₂ with ⟨_, _, h⟩\n    exact lt_trans Nat.one_div_pos_of_nat h\n  · rw [restrict_nonpos_seq_succ]\n    have h₁ :\n      ¬vector_measure.restrict s\n          (i \\\n            «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n              (restrict_nonpos_seq s i k))\n          0 :=\n      by\n      refine' mt (restrict_le_zero_subset _ _ (by simp [Nat.lt_succ_iff])) hn\n      convert measurable_of_not_restrict_le_zero _ hn\n      exact funext fun x => by rw [Nat.lt_succ_iff]\n    rcases some_exists_one_div_lt_spec h₁ with ⟨_, _, h⟩\n    exact lt_trans Nat.one_div_pos_of_nat h\n#align measure_of_restrict_nonpos_seq measure_of_restrict_nonpos_seq\n\n",
 "find_exists_one_div_lt_spec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\nprivate theorem find_exists_one_div_lt_spec (hi : ¬vector_measure.restrict s i 0) :\n    exists_one_div_lt s i (find_exists_one_div_lt s i) :=\n  by\n  rw [find_exists_one_div_lt, dif_pos hi]\n  convert nat.find_spec _\n#align find_exists_one_div_lt_spec find_exists_one_div_lt_spec\n\n",
 "find_exists_one_div_lt_min":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\nprivate theorem find_exists_one_div_lt_min (hi : ¬vector_measure.restrict s i 0) {m : ℕ}\n    (hm : m < find_exists_one_div_lt s i) : ¬exists_one_div_lt s i m :=\n  by\n  rw [find_exists_one_div_lt, dif_pos hi] at hm\n  exact nat.find_min _ hm\n#align find_exists_one_div_lt_min find_exists_one_div_lt_min\n\n",
 "exists_subset_restrict_nonpos'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\nprivate theorem exists_subset_restrict_nonpos' (hi₁ : MeasurableSet i) (hi₂ : s i < 0)\n    (hn :\n      ¬∀ n : ℕ,\n          ¬vector_measure.restrict s\n              (i \\\n                «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n                  (restrict_nonpos_seq s i l))\n              0) :\n    ∃ j : Set α, MeasurableSet j ∧ j ⊆ i ∧ vector_measure.restrict s j 0 ∧ s j < 0 :=\n  by\n  by_cases vector_measure.restrict s i 0; · exact ⟨i, hi₁, Set.Subset.refl _, h, hi₂⟩\n  push_neg  at hn\n  set k := nat.find hn with hk₁\n  have hk₂ :\n    vector_measure.restrict s\n      (i \\\n        «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n          (restrict_nonpos_seq s i l))\n      0 :=\n    nat.find_spec hn\n  have hmeas :\n    MeasurableSet\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n        (restrict_nonpos_seq s i l)) :=\n    MeasurableSet.unionᵢ fun _ => MeasurableSet.unionᵢ fun _ => restrict_nonpos_seq_measurable_set _\n  refine'\n    ⟨i \\\n        «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n          (restrict_nonpos_seq s i l),\n      hi₁.diff hmeas, Set.diff_subset _ _, hk₂, _⟩\n  rw [of_diff hmeas hi₁, s.of_disjoint_Union_nat]\n  · have h₁ : ∀ l < k, 0 ≤ s (restrict_nonpos_seq s i l) :=\n      by\n      intro l hl\n      refine' le_of_lt (measure_of_restrict_nonpos_seq h _ _)\n      refine' mt (restrict_le_zero_subset _ (hi₁.diff _) (Set.Subset.refl _)) (nat.find_min hn hl)\n      exact MeasurableSet.unionᵢ fun _ => MeasurableSet.unionᵢ fun _ => restrict_nonpos_seq_measurable_set _\n    suffices\n      0 ≤\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (s\n            («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n              (restrict_nonpos_seq s i l)))\n      by\n      rw [sub_neg]\n      exact lt_of_lt_of_le hi₂ this\n    refine' tsum_nonneg _\n    intro l\n    by_cases l < k\n    · convert h₁ _ h\n      ext x\n      rw [Set.mem_unionᵢ, exists_prop, and_iff_right_iff_imp]\n      exact fun _ => h\n    · convert le_of_eq s.empty.symm\n      ext\n      simp only [exists_prop, Set.mem_empty_iff_false, Set.mem_unionᵢ, not_and, iff_false_iff]\n      exact fun h' => false.elim (h h')\n  · intro\n    exact MeasurableSet.unionᵢ fun _ => restrict_nonpos_seq_measurable_set _\n  · intro a b hab\n    refine' set.disjoint_Union_left.mpr fun ha => _\n    refine' set.disjoint_Union_right.mpr fun hb => _\n    exact restrict_nonpos_seq_disjoint hab\n  · apply Set.unionᵢ_subset\n    intro a x\n    simp only [and_imp, exists_prop, Set.mem_unionᵢ]\n    intro _ hx\n    exact restrict_nonpos_seq_subset _ hx\n  · infer_instance\n#align exists_subset_restrict_nonpos' exists_subset_restrict_nonpos'\n\n",
 "exists_subset_restrict_nonpos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/-- A measurable set of negative measure has a negative subset of negative measure. -/\ntheorem exists_subset_restrict_nonpos (hi : s i < 0) :\n    ∃ j : Set α, MeasurableSet j ∧ j ⊆ i ∧ vector_measure.restrict s j 0 ∧ s j < 0 :=\n  by\n  have hi₁ : MeasurableSet i := by_contradiction fun h => ne_of_lt hi <| s.not_measurable h\n  by_cases vector_measure.restrict s i 0\n  · exact ⟨i, hi₁, Set.Subset.refl _, h, hi⟩\n  by_cases hn :\n    ∀ n : ℕ,\n      ¬vector_measure.restrict s\n          (i \\\n            «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n              (restrict_nonpos_seq s i l))\n          0\n  swap\n  · exact exists_subset_restrict_nonpos' hi₁ hi hn\n  set A :=\n    i \\\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n        (restrict_nonpos_seq s i l) with\n    hA\n  set bdd : ℕ → ℕ := fun n =>\n    find_exists_one_div_lt s\n      (i \\\n        «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n          (restrict_nonpos_seq s i k)) with\n    hbdd\n  have hn' :\n    ∀ n : ℕ,\n      ¬vector_measure.restrict s\n          (i \\\n            «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n              (restrict_nonpos_seq s i l))\n          0 :=\n    by\n    intro n\n    convert hn (n + 1) <;>\n      · ext l\n        simp only [exists_prop, Set.mem_unionᵢ, and_congr_left_iff]\n        exact fun _ => nat.lt_succ_iff.symm\n  have h₁ :\n    s i =\n      s A +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (s (restrict_nonpos_seq s i l)) :=\n    by\n    rw [hA, ← s.of_disjoint_Union_nat, add_comm, of_add_of_diff]\n    exact MeasurableSet.unionᵢ fun _ => restrict_nonpos_seq_measurable_set _\n    exacts[hi₁, Set.unionᵢ_subset fun _ => restrict_nonpos_seq_subset _, fun _ => restrict_nonpos_seq_measurable_set _,\n      restrict_nonpos_seq_disjoint]\n  have h₂ : s A ≤ s i := by\n    rw [h₁]\n    apply le_add_of_nonneg_right\n    exact tsum_nonneg fun n => le_of_lt (measure_of_restrict_nonpos_seq h _ (hn n))\n  have h₃' : Summable fun n => (1 / (bdd n + 1) : exprℝ) :=\n    by\n    have : Summable fun l => s (restrict_nonpos_seq s i l) :=\n      HasSum.summable (s.m_Union (fun _ => restrict_nonpos_seq_measurable_set _) restrict_nonpos_seq_disjoint)\n    refine' summable_of_nonneg_of_le (fun n => _) (fun n => _) (Summable.comp_injective this Nat.succ_injective)\n    · exact le_of_lt Nat.one_div_pos_of_nat\n    · exact le_of_lt (restrict_nonpos_seq_lt n (hn' n))\n  have h₃ : tendsto (fun n => (bdd n : exprℝ) + 1) at_top at_top :=\n    by\n    simp only [one_div] at h₃'\n    exact Summable.tendsto_atTop_of_pos h₃' fun n => Nat.cast_add_one_pos (bdd n)\n  have h₄ : tendsto (fun n => (bdd n : exprℝ)) at_top at_top :=\n    by\n    convert at_top.tendsto_at_top_add_const_right (-1) h₃\n    simp\n  have A_meas : MeasurableSet A := hi₁.diff (MeasurableSet.unionᵢ fun _ => restrict_nonpos_seq_measurable_set _)\n  refine' ⟨A, A_meas, Set.diff_subset _ _, _, h₂.trans_lt hi⟩\n  by_contra hnn\n  rw [restrict_le_restrict_iff _ _ A_meas] at hnn\n  push_neg  at hnn\n  obtain ⟨E, hE₁, hE₂, hE₃⟩ := hnn\n  have : ∃ k, 1 ≤ bdd k ∧ 1 / (bdd k : exprℝ) < s E :=\n    by\n    rw [tendsto_at_top_at_top] at h₄\n    obtain ⟨k, hk⟩ := h₄ (max (1 / s E + 1) 1)\n    refine' ⟨k, _, _⟩\n    · have hle := le_of_max_le_right (hk k le_rfl)\n      norm_cast  at hle\n      exact hle\n    · have : 1 / s E < bdd k := by linarith (config := { restrict_type := exprℝ }) [le_of_max_le_left (hk k le_rfl)]\n      rw [one_div] at this⊢\n      rwa [inv_lt (lt_trans (inv_pos.2 hE₃) this) hE₃]\n  obtain ⟨k, hk₁, hk₂⟩ := this\n  have hA' :\n    A ⊆\n      i \\\n        «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n          (restrict_nonpos_seq s i l) :=\n    by\n    apply Set.diff_subset_diff_right\n    intro x\n    simp only [Set.mem_unionᵢ]\n    rintro ⟨n, _, hn₂⟩\n    exact ⟨n, hn₂⟩\n  refine' find_exists_one_div_lt_min (hn' k) (buffer.lt_aux_2 hk₁) ⟨E, Set.Subset.trans hE₂ hA', hE₁, _⟩\n  convert hk₂\n  norm_cast\n  exact tsub_add_cancel_of_le hk₁\n#align exists_subset_restrict_nonpos exists_subset_restrict_nonpos\n\n",
 "exists_nat_one_div_lt_measure_of_not_negative":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/-\nCopyright (c) 2021 Kexing Ying. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kexing Ying\n-/\nprivate theorem exists_nat_one_div_lt_measure_of_not_negative (hi : ¬vector_measure.restrict s i 0) :\n    ∃ n : ℕ, exists_one_div_lt s i n :=\n  let ⟨k, hj₁, hj₂, hj⟩ := exists_pos_measure_of_not_restrict_le_zero s hi\n  let ⟨n, hn⟩ := exists_nat_one_div_lt hj\n  ⟨n, k, hj₂, hj₁, hn⟩\n#align exists_nat_one_div_lt_measure_of_not_negative exists_nat_one_div_lt_measure_of_not_negative\n\n",
 "exists_is_compl_positive_negative":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/-- **The Hahn decomposition thoerem**: Given a signed measure `s`, there exist\ncomplement measurable sets `i` and `j` such that `i` is positive, `j` is negative. -/\ntheorem exists_is_compl_positive_negative (s : signed_measure α) :\n    ∃ i j : Set α,\n      MeasurableSet i ∧ vector_measure.restrict 0 i s ∧ MeasurableSet j ∧ vector_measure.restrict s j 0 ∧ IsCompl i j :=\n  let ⟨i, hi₁, hi₂, hi₃⟩ := exists_compl_positive_negative s\n  ⟨i, «expr ᶜ» i, hi₁, hi₂, hi₁.compl, hi₃, isCompl_compl⟩\n#align exists_is_compl_positive_negative exists_is_compl_positive_negative\n\n",
 "exists_compl_positive_negative":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/-- Alternative formulation of `measure_theory.signed_measure.exists_is_compl_positive_negative`\n(the Hahn decomposition theorem) using set complements. -/\ntheorem exists_compl_positive_negative (s : signed_measure α) :\n    ∃ i : Set α, MeasurableSet i ∧ vector_measure.restrict 0 i s ∧ vector_measure.restrict s («expr ᶜ» i) 0 :=\n  by\n  obtain ⟨f, _, hf₂, hf₁⟩ :=\n    exists_seq_tendsto_infₛ ⟨0, @zero_mem_measure_of_negatives _ _ s⟩ bdd_below_measure_of_negatives\n  choose B hB using hf₁\n  have hB₁ : ∀ n, MeasurableSet (B n) := fun n => (hB n).1.1\n  have hB₂ : ∀ n, vector_measure.restrict s (B n) 0 := fun n => (hB n).1.2\n  set A := «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (B n) with hA\n  have hA₁ : MeasurableSet A := MeasurableSet.unionᵢ hB₁\n  have hA₂ : vector_measure.restrict s A 0 := restrict_le_restrict_Union _ _ hB₁ hB₂\n  have hA₃ : s A = Inf s.measure_of_negatives := by\n    apply le_antisymm\n    · refine' le_of_tendsto_of_tendsto tendsto_const_nhds hf₂ (eventually_of_forall fun n => _)\n      rw [← (hB n).2, hA, ← Set.diff_union_of_subset (Set.subset_unionᵢ _ n),\n        of_union Set.disjoint_sdiff_left _ (hB₁ n)]\n      · refine' add_le_of_nonpos_left _\n        have : vector_measure.restrict s A 0 :=\n          restrict_le_restrict_Union _ _ hB₁ fun m =>\n            let ⟨_, h⟩ := (hB m).1\n            h\n        refine' nonpos_of_restrict_le_zero _ (restrict_le_zero_subset _ _ (Set.diff_subset _ _) this)\n        exact MeasurableSet.unionᵢ hB₁\n      · infer_instance\n      · exact (MeasurableSet.unionᵢ hB₁).diff (hB₁ n)\n    · exact cinfₛ_le bdd_below_measure_of_negatives ⟨A, ⟨hA₁, hA₂⟩, rfl⟩\n  refine' ⟨«expr ᶜ» A, hA₁.compl, _, (compl_compl A).symm ▸ hA₂⟩\n  rw [restrict_le_restrict_iff _ _ hA₁.compl]\n  intro C hC hC₁\n  by_contra' hC₂\n  rcases exists_subset_restrict_nonpos hC₂ with ⟨D, hD₁, hD, hD₂, hD₃⟩\n  have : s (A ∪ D) < Inf s.measure_of_negatives :=\n    by\n    rw [← hA₃, of_union (Set.disjoint_of_subset_right (Set.Subset.trans hD hC₁) disjoint_compl_right) hA₁ hD₁]\n    linarith\n    infer_instance\n  refine' not_le.2 this _\n  refine' cinfₛ_le bdd_below_measure_of_negatives ⟨A ∪ D, ⟨_, _⟩, rfl⟩\n  · exact hA₁.union hD₁\n  · exact restrict_le_restrict_union _ _ hA₁ hA₂ hD₁ hD₂\n#align exists_compl_positive_negative exists_compl_positive_negative\n\n",
 "bdd_below_measure_of_negatives":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector_measure.restrict -/\ntheorem bdd_below_measure_of_negatives : BddBelow s.measure_of_negatives :=\n  by\n  simp_rw [BddBelow, Set.Nonempty, mem_lowerBounds]\n  by_contra' h\n  have h' : ∀ n : ℕ, ∃ y : exprℝ, y ∈ s.measure_of_negatives ∧ y < -n := fun n => h (-n)\n  choose f hf using h'\n  have hf' : ∀ n : ℕ, ∃ B, MeasurableSet B ∧ vector_measure.restrict s B 0 ∧ s B < -n :=\n    by\n    intro n\n    rcases hf n with ⟨⟨B, ⟨hB₁, hBr⟩, hB₂⟩, hlt⟩\n    exact ⟨B, hB₁, hBr, hB₂.symm ▸ hlt⟩\n  choose B hmeas hr h_lt using hf'\n  set A := «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (B n) with hA\n  have hfalse : ∀ n : ℕ, s A ≤ -n := by\n    intro n\n    refine' le_trans _ (le_of_lt (h_lt _))\n    rw [hA, ← Set.diff_union_of_subset (Set.subset_unionᵢ _ n), of_union Set.disjoint_sdiff_left _ (hmeas n)]\n    · refine' add_le_of_nonpos_left _\n      have : vector_measure.restrict s A 0 := restrict_le_restrict_Union _ _ hmeas hr\n      refine' nonpos_of_restrict_le_zero _ (restrict_le_zero_subset _ _ (Set.diff_subset _ _) this)\n      exact MeasurableSet.unionᵢ hmeas\n    · infer_instance\n    · exact (MeasurableSet.unionᵢ hmeas).diff (hmeas n)\n  rcases exists_nat_gt (-s A) with ⟨n, hn⟩\n  exact lt_irrefl _ ((neg_lt.1 hn).trans_le (hfalse n))\n#align bdd_below_measure_of_negatives bdd_below_measure_of_negatives\n\n"}