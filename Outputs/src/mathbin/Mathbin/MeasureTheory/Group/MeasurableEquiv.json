{"to_equiv_mul_right₀":
 "@[simp]\ntheorem to_equiv_mul_right₀ {g : G₀} (hg : g ≠ 0) : (mul_right₀ g hg).to_equiv = Equiv.mulRight₀ g hg :=\n  rfl\n#align to_equiv_mul_right₀ to_equiv_mul_right₀\n\n",
 "to_equiv_mul_right":
 "@[simp, to_additive]\ntheorem to_equiv_mul_right (g : G) : (mul_right g).to_equiv = Equiv.mulRight g :=\n  rfl\n#align to_equiv_mul_right to_equiv_mul_right\n\n",
 "to_equiv_mul_left₀":
 "@[simp]\ntheorem to_equiv_mul_left₀ {g : G₀} (hg : g ≠ 0) : (mul_left₀ g hg).to_equiv = Equiv.mulLeft₀ g hg :=\n  rfl\n#align to_equiv_mul_left₀ to_equiv_mul_left₀\n\n",
 "to_equiv_mul_left":
 "@[simp, to_additive]\ntheorem to_equiv_mul_left (g : G) : (mul_left g).to_equiv = Equiv.mulLeft g :=\n  rfl\n#align to_equiv_mul_left to_equiv_mul_left\n\n",
 "symm_smul₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ᵐ » -/\n@[simp]\ntheorem symm_smul₀ {c : G₀} (hc : c ≠ 0) : (smul₀ c hc : «expr ≃ᵐ » α α).symm = smul₀ c⁻¹ (inv_ne_zero hc) :=\n  ext rfl\n#align symm_smul₀ symm_smul₀\n\n",
 "symm_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ᵐ » -/\n@[simp, to_additive]\ntheorem symm_smul (c : G) : (smul c : «expr ≃ᵐ » α α).symm = smul c⁻¹ :=\n  ext rfl\n#align symm_smul symm_smul\n\n",
 "symm_mul_right₀":
 "@[simp]\ntheorem symm_mul_right₀ {g : G₀} (hg : g ≠ 0) : (mul_right₀ g hg).symm = mul_right₀ g⁻¹ (inv_ne_zero hg) :=\n  ext rfl\n#align symm_mul_right₀ symm_mul_right₀\n\n",
 "symm_mul_right":
 "@[simp, to_additive]\ntheorem symm_mul_right (g : G) : (mul_right g).symm = mul_right g⁻¹ :=\n  ext rfl\n#align symm_mul_right symm_mul_right\n\n",
 "symm_mul_left₀":
 "@[simp]\ntheorem symm_mul_left₀ {g : G₀} (hg : g ≠ 0) : (mul_left₀ g hg).symm = mul_left₀ g⁻¹ (inv_ne_zero hg) :=\n  ext rfl\n#align symm_mul_left₀ symm_mul_left₀\n\n",
 "symm_mul_left":
 "@[simp, to_additive]\ntheorem symm_mul_left (g : G) : (mul_left g).symm = mul_left g⁻¹ :=\n  ext rfl\n#align symm_mul_left symm_mul_left\n\n",
 "symm_inv":
 "@[simp, to_additive]\ntheorem symm_inv {G} [measurable_space G] [InvolutiveInv G] [has_measurable_inv G] : (inv G).symm = inv G :=\n  rfl\n#align symm_inv symm_inv\n\n",
 "measurable_embedding_mul_right₀":
 "theorem _root_.measurable_embedding_mul_right₀ {g : G₀} (hg : g ≠ 0) : measurable_embedding fun x => x * g :=\n  (mul_right₀ g hg).measurable_embedding\n#align measurable_embedding_mul_right₀ measurable_embedding_mul_right₀\n\n",
 "measurable_embedding_mul_right":
 "@[to_additive]\ntheorem _root_.measurable_embedding_mul_right (g : G) : measurable_embedding fun x => x * g :=\n  (mul_right g).measurable_embedding\n#align measurable_embedding_mul_right measurable_embedding_mul_right\n\n",
 "measurable_embedding_mul_left₀":
 "theorem _root_.measurable_embedding_mul_left₀ {g : G₀} (hg : g ≠ 0) : measurable_embedding ((· * ·) g) :=\n  (mul_left₀ g hg).measurable_embedding\n#align measurable_embedding_mul_left₀ measurable_embedding_mul_left₀\n\n",
 "measurable_embedding_mul_left":
 "@[to_additive]\ntheorem _root_.measurable_embedding_mul_left (g : G) : measurable_embedding ((· * ·) g) :=\n  (mul_left g).measurable_embedding\n#align measurable_embedding_mul_left measurable_embedding_mul_left\n\n",
 "measurable_embedding_const_smul₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\ntheorem _root_.measurable_embedding_const_smul₀ {c : G₀} (hc : c ≠ 0) :\n    measurable_embedding ((«expr • » · ·) c : α → α) :=\n  (smul₀ c hc).measurable_embedding\n#align measurable_embedding_const_smul₀ measurable_embedding_const_smul₀\n\n",
 "measurable_embedding_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\n/-\nCopyright (c) 2021 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov\n-/\n@[to_additive]\ntheorem _root_.measurable_embedding_const_smul (c : G) : measurable_embedding ((«expr • » · ·) c : α → α) :=\n  (smul c).measurable_embedding\n#align measurable_embedding_const_smul measurable_embedding_const_smul\n\n",
 "coe_smul₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ᵐ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\n@[simp]\ntheorem coe_smul₀ {c : G₀} (hc : c ≠ 0) : «expr⇑ » (smul₀ c hc : «expr ≃ᵐ » α α) = («expr • » · ·) c :=\n  rfl\n#align coe_smul₀ coe_smul₀\n\n",
 "coe_mul_right₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_mul_right₀ {g : G₀} (hg : g ≠ 0) : «expr⇑ » (mul_right₀ g hg) = fun x => x * g :=\n  rfl\n#align coe_mul_right₀ coe_mul_right₀\n\n",
 "coe_mul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp, to_additive]\ntheorem coe_mul_right (g : G) : «expr⇑ » (mul_right g) = fun x => x * g :=\n  rfl\n#align coe_mul_right coe_mul_right\n\n",
 "coe_mul_left₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_mul_left₀ {g : G₀} (hg : g ≠ 0) : «expr⇑ » (mul_left₀ g hg) = (· * ·) g :=\n  rfl\n#align coe_mul_left₀ coe_mul_left₀\n\n",
 "coe_mul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp, to_additive]\ntheorem coe_mul_left (g : G) : «expr⇑ » (mul_left g) = (· * ·) g :=\n  rfl\n#align coe_mul_left coe_mul_left\n\n"}