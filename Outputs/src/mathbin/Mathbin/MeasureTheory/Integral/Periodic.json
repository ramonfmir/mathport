{"volume_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem volume_closed_ball {x : add_circle T} (ε : exprℝ) :\n    volume (metric.closed_ball x ε) = ennreal.of_real (min T (2 * ε)) :=\n  by\n  have hT' : |T| = T := abs_eq_self.mpr hT.out.le\n  let I := Ioc (-(T / 2)) (T / 2)\n  have h₁ : ε < T / 2 → metric.closed_ball (0 : exprℝ) ε ∩ I = metric.closed_ball (0 : exprℝ) ε :=\n    by\n    intro hε\n    rw [inter_eq_left_iff_subset, real.closed_ball_eq_Icc, zero_sub, zero_add]\n    rintro y ⟨hy₁, hy₂⟩\n    constructor <;> linarith\n  have h₂ :\n    «expr ⁻¹' » coe (metric.closed_ball (0 : add_circle T) ε) ∩ I =\n      if ε < T / 2 then metric.closed_ball (0 : exprℝ) ε else I :=\n    by\n    conv_rhs => rw [← if_ctx_congr (iff.rfl : ε < T / 2 ↔ ε < T / 2) h₁ fun _ => rfl, ← hT']\n    apply coe_real_preimage_closed_ball_inter_eq\n    simpa only [hT', real.closed_ball_eq_Icc, zero_add, zero_sub] using Ioc_subset_Icc_self\n  rw [add_haar_closed_ball_center]\n  simp only [restrict_apply' measurable_set_Ioc, (by linarith : -(T / 2) + T = T / 2), h₂, ←\n    (add_circle.measure_preserving_mk T (-(T / 2))).measure_preimage measurable_set_closed_ball]\n  by_cases hε : ε < T / 2\n  · simp [hε, min_eq_right (by linarith : 2 * ε ≤ T)]\n  · simp [hε, min_eq_left (by linarith : T ≤ 2 * ε)]\n#align volume_closed_ball volume_closed_ball\n\n",
 "tendsto_at_top_interval_integral_of_pos'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- If `g : ℝ → ℝ` is periodic with period `T > 0` and `∀ x, 0 < g x`, then `t ↦ ∫ x in 0..t, g x`\ntends to `∞` as `t` tends to `∞`. -/\ntheorem tendsto_at_top_interval_integral_of_pos' (h₀ : ∀ x, 0 < g x) (hT : 0 < T) :\n    tendsto\n      (fun t =>\n        «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 t\n          (g x))\n      at_top at_top :=\n  hg.tendsto_at_top_interval_integral_of_pos h_int (interval_integral_pos_of_pos (h_int 0 T) h₀ hT) hT\n#align tendsto_at_top_interval_integral_of_pos' tendsto_at_top_interval_integral_of_pos'\n\n",
 "tendsto_at_top_interval_integral_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- If `g : ℝ → ℝ` is periodic with period `T > 0` and `0 < ∫ x in 0..T, g x`, then\n`t ↦ ∫ x in 0..t, g x` tends to `∞` as `t` tends to `∞`. -/\ntheorem tendsto_at_top_interval_integral_of_pos\n    (h₀ :\n      0 <\n        «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 T\n          (g x))\n    (hT : 0 < T) :\n    tendsto\n      (fun t =>\n        «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 t\n          (g x))\n      at_top at_top :=\n  by\n  apply tendsto_at_top_mono (hg.Inf_add_zsmul_le_integral_of_pos h_int hT)\n  apply\n    at_top.tendsto_at_top_add_const_left\n      (Inf <|\n        «expr '' »\n          (fun t =>\n            «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\"\n              0 t (g x))\n          (Icc 0 T))\n  apply tendsto.at_top_zsmul_const h₀\n  exact tendsto_floor_at_top.comp (tendsto_id.at_top_mul_const (inv_pos.mpr hT))\n#align tendsto_at_top_interval_integral_of_pos tendsto_at_top_interval_integral_of_pos\n\n",
 "tendsto_at_bot_interval_integral_of_pos'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- If `g : ℝ → ℝ` is periodic with period `T > 0` and `∀ x, 0 < g x`, then `t ↦ ∫ x in 0..t, g x`\ntends to `-∞` as `t` tends to `-∞`. -/\ntheorem tendsto_at_bot_interval_integral_of_pos' (h₀ : ∀ x, 0 < g x) (hT : 0 < T) :\n    tendsto\n      (fun t =>\n        «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 t\n          (g x))\n      at_bot at_bot :=\n  hg.tendsto_at_bot_interval_integral_of_pos h_int (interval_integral_pos_of_pos (h_int 0 T) h₀ hT) hT\n#align tendsto_at_bot_interval_integral_of_pos' tendsto_at_bot_interval_integral_of_pos'\n\n",
 "tendsto_at_bot_interval_integral_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- If `g : ℝ → ℝ` is periodic with period `T > 0` and `0 < ∫ x in 0..T, g x`, then\n`t ↦ ∫ x in 0..t, g x` tends to `-∞` as `t` tends to `-∞`. -/\ntheorem tendsto_at_bot_interval_integral_of_pos\n    (h₀ :\n      0 <\n        «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 T\n          (g x))\n    (hT : 0 < T) :\n    tendsto\n      (fun t =>\n        «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 t\n          (g x))\n      at_bot at_bot :=\n  by\n  apply tendsto_at_bot_mono (hg.integral_le_Sup_add_zsmul_of_pos h_int hT)\n  apply\n    at_bot.tendsto_at_bot_add_const_left\n      (Sup <|\n        «expr '' »\n          (fun t =>\n            «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\"\n              0 t (g x))\n          (Icc 0 T))\n  apply tendsto.at_bot_zsmul_const h₀\n  exact tendsto_floor_at_bot.comp (tendsto_id.at_bot_mul_const (inv_pos.mpr hT))\n#align tendsto_at_bot_interval_integral_of_pos tendsto_at_bot_interval_integral_of_pos\n\n",
 "measure_univ":
 "@[simp]\nprotected theorem measure_univ : volume (Set.univ : set unit_add_circle) = 1 := by simp\n#align measure_univ measure_univ\n\n",
 "measure_preserving_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The covering map from `ℝ` to the \"unit additive circle\" `ℝ ⧸ ℤ` is measure-preserving,\nconsidered with respect to the standard measure (defined to be the Haar measure of total mass 1)\non the additive circle, and with respect to the restriction of Lebsegue measure on `ℝ` to an\ninterval (t, t + 1]. -/\nprotected theorem measure_preserving_mk (t : exprℝ) :\n    measure_preserving (coe : exprℝ → unit_add_circle) (volume.restrict (Ioc t (t + 1))) :=\n  add_circle.measure_preserving_mk 1 t\n#align measure_preserving_mk measure_preserving_mk\n\n",
 "lintegral_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , » -/\n/-- The integral of a measurable function over `unit_add_circle` is equal to the integral over an\ninterval (t, t + 1] in `ℝ` of its lift to `ℝ`. -/\nprotected theorem lintegral_preimage (t : exprℝ) (f : unit_add_circle → ennreal) :\n    «expr∫⁻ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , »\"\n        (Ioc t (t + 1)) (f a) =\n      «expr∫⁻ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , »\" (f b) :=\n  add_circle.lintegral_preimage 1 t f\n#align lintegral_preimage lintegral_preimage\n\n",
 "is_add_fundamental_domain_Ioc'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_add_fundamental_domain_Ioc' {T : exprℝ} (hT : 0 < T) (t : exprℝ)\n    (μ : measure (exprℝ) := by exact measure_theory.measure_space.volume) :\n    is_add_fundamental_domain (add_subgroup.zmultiples T).opposite (Ioc t (t + T)) μ :=\n  by\n  refine' is_add_fundamental_domain.mk' measurable_set_Ioc.null_measurable_set fun x => _\n  have : bijective (cod_restrict (fun n : ℤ => «expr • » n T) (add_subgroup.zmultiples T) _) :=\n    (Equiv.ofInjective (fun n : ℤ => «expr • » n T) (zsmul_strictMono_left hT).injective).bijective\n  refine' this.exists_unique_iff.2 _\n  simpa using existsUnique_add_zsmul_mem_Ioc hT x t\n#align is_add_fundamental_domain_Ioc' is_add_fundamental_domain_Ioc'\n\n",
 "is_add_fundamental_domain_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2021 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov, Alex Kontorovich, Heather Macbeth\n-/\ntheorem is_add_fundamental_domain_Ioc {T : exprℝ} (hT : 0 < T) (t : exprℝ)\n    (μ : measure (exprℝ) := by exact measure_theory.measure_space.volume) :\n    is_add_fundamental_domain (add_subgroup.zmultiples T) (Ioc t (t + T)) μ :=\n  by\n  refine' is_add_fundamental_domain.mk' measurable_set_Ioc.null_measurable_set fun x => _\n  have : bijective (cod_restrict (fun n : ℤ => «expr • » n T) (add_subgroup.zmultiples T) _) :=\n    (Equiv.ofInjective (fun n : ℤ => «expr • » n T) (zsmul_strictMono_left hT).injective).bijective\n  refine' this.exists_unique_iff.2 _\n  simpa only [add_comm x] using existsUnique_add_zsmul_mem_Ioc hT x t\n#align is_add_fundamental_domain_Ioc is_add_fundamental_domain_Ioc\n\n",
 "interval_integral_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , » -/\n/-- The integral of an almost-everywhere strongly measurable function over `unit_add_circle` is\nequal to the integral over an interval (t, t + 1] in `ℝ` of its lift to `ℝ`. -/\nprotected theorem interval_integral_preimage (t : exprℝ) (f : unit_add_circle → E) :\n    «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" t\n        (t + 1) (f a) =\n      «expr∫ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , »\" (f b) :=\n  add_circle.interval_integral_preimage 1 t f\n#align interval_integral_preimage interval_integral_preimage\n\n",
 "interval_integral_add_zsmul_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- If `f` is an integrable periodic function with period `T`, and `n` is an integer, then its\nintegral over `[t, t + n • T]` is `n` times its integral over `[t, t + T]`. -/\ntheorem interval_integral_add_zsmul_eq (hf : periodic f T) (n : ℤ) (t : exprℝ)\n    (h_int : ∀ t₁ t₂, interval_integrable f measure_space.volume t₁ t₂) :\n    «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" t\n        (t + «expr • » n T) (f x) =\n      «expr • » n\n        («expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" t\n          (t + T) (f x)) :=\n  by\n  -- Reduce to the case `b = 0`\n  suffices\n    «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0\n        («expr • » n T) (f x) =\n      «expr • » n\n        («expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 T\n          (f x))\n    by simp only [hf.interval_integral_add_eq t 0, (hf.zsmul n).interval_integral_add_eq t 0, zero_add, this]\n  -- First prove it for natural numbers\n  have :\n    ∀ m : ℕ,\n      «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0\n          («expr • » m T) (f x) =\n        «expr • » m\n          («expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0\n            T (f x)) :=\n    by\n    intros\n    induction' m with m ih\n    · simp\n    · simp only [succ_nsmul', hf.interval_integral_add_eq_add 0 («expr • » m T) h_int, ih, zero_add]\n  -- Then prove it for all integers\n  cases' n with n n\n  · simp [← this n]\n  · conv_rhs => rw [negSucc_zsmul]\n    have h₀ : «expr • » (Int.negSucc n) T + «expr • » (n + 1) T = 0 :=\n      by\n      simp\n      linarith\n    rw [integral_symm, ← (hf.nsmul (n + 1)).funext, neg_inj]\n    simp_rw [integral_comp_add_right, h₀, zero_add, this (n + 1), add_comm T,\n      hf.interval_integral_add_eq («expr • » (n + 1) T) 0, zero_add]\n#align interval_integral_add_zsmul_eq interval_integral_add_zsmul_eq\n\n",
 "interval_integral_add_eq_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- An auxiliary lemma for a more general `function.periodic.interval_integral_add_eq`. -/\ntheorem interval_integral_add_eq_of_pos (hf : periodic f T) (hT : 0 < T) (t s : exprℝ) :\n    «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" t\n        (t + T) (f x) =\n      «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" s\n        (s + T) (f x) :=\n  by\n  simp only [integral_of_le, hT.le, le_add_iff_nonneg_right]\n  haveI : vadd_invariant_measure (add_subgroup.zmultiples T) (exprℝ) volume :=\n    ⟨fun c s hs => measure_preimage_add _ _ _⟩\n  exact (is_add_fundamental_domain_Ioc hT t).set_integral_eq (is_add_fundamental_domain_Ioc hT s) hf.map_vadd_zmultiples\n#align interval_integral_add_eq_of_pos interval_integral_add_eq_of_pos\n\n",
 "interval_integral_add_eq_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- If `f` is an integrable periodic function with period `T`, then its integral over `[t, s + T]`\nis the sum of its integrals over the intervals `[t, s]` and `[t, t + T]`. -/\ntheorem interval_integral_add_eq_add (hf : periodic f T) (t s : exprℝ)\n    (h_int : ∀ t₁ t₂, interval_integrable f measure_space.volume t₁ t₂) :\n    «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" t\n        (s + T) (f x) =\n      «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" t s\n          (f x) +\n        «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" t\n          (t + T) (f x) :=\n  by rw [hf.interval_integral_add_eq t s, integral_add_adjacent_intervals (h_int t s) (h_int s _)]\n#align interval_integral_add_eq_add interval_integral_add_eq_add\n\n",
 "interval_integral_add_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- If `f` is a periodic function with period `T`, then its integral over `[t, t + T]` does not\ndepend on `t`. -/\ntheorem interval_integral_add_eq (hf : periodic f T) (t s : exprℝ) :\n    «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" t\n        (t + T) (f x) =\n      «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" s\n        (s + T) (f x) :=\n  by\n  rcases lt_trichotomy 0 T with (hT | rfl | hT)\n  · exact hf.interval_integral_add_eq_of_pos hT t s\n  · simp\n  · rw [← neg_inj, ← integral_symm, ← integral_symm]\n    simpa only [← sub_eq_add_neg, add_sub_cancel] using\n      hf.neg.interval_integral_add_eq_of_pos (neg_pos.2 hT) (t + T) (s + T)\n#align interval_integral_add_eq interval_integral_add_eq\n\n",
 "integral_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , » -/\n/-- The integral of an almost-everywhere strongly measurable function over `unit_add_circle` is\nequal to the integral over an interval (t, t + 1] in `ℝ` of its lift to `ℝ`. -/\nprotected theorem integral_preimage (t : exprℝ) (f : unit_add_circle → E) :\n    «expr∫ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , »\"\n        (Ioc t (t + 1)) (f a) =\n      «expr∫ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , »\" (f b) :=\n  add_circle.integral_preimage 1 t f\n#align integral_preimage integral_preimage\n\n",
 "integral_le_Sup_add_zsmul_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌊ ⌋» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌊ ⌋» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- If `g : ℝ → ℝ` is periodic with period `T > 0`, then for any `t : ℝ`, the function\n`t ↦ ∫ x in 0..t, g x` is bounded above by `t ↦ X + ⌊t/T⌋ • Y` for appropriate constants `X` and\n`Y`. -/\ntheorem integral_le_Sup_add_zsmul_of_pos (hT : 0 < T) (t : exprℝ) :\n    «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 t\n        (g x) ≤\n      supₛ\n          («expr '' »\n            (fun t =>\n              «expr∫ in .. , »\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 t (g x))\n            (Icc 0 T)) +\n        «expr • » («expr⌊ ⌋» (t / T))\n          («expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0\n            T (g x)) :=\n  by\n  let ε := Int.fract (t / T) * T\n  conv_lhs =>\n    rw [← Int.fract_div_mul_self_add_zsmul_eq T t (by linarith), ←\n      integral_add_adjacent_intervals (h_int 0 ε) (h_int _ _)]\n  rw [hg.interval_integral_add_zsmul_eq («expr⌊ ⌋» (t / T)) ε h_int, hg.interval_integral_add_eq ε 0, zero_add,\n    add_le_add_iff_right]\n  exact\n    (continuous_primitive h_int 0).continuous_on.le_Sup_image_Icc\n      (mem_Icc_of_Ico (Int.fract_div_mul_self_mem_Ico T t hT))\n#align integral_le_Sup_add_zsmul_of_pos integral_le_Sup_add_zsmul_of_pos\n\n",
 "Inf_add_zsmul_le_integral_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌊ ⌋» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌊ ⌋» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/-- If `g : ℝ → ℝ` is periodic with period `T > 0`, then for any `t : ℝ`, the function\n`t ↦ ∫ x in 0..t, g x` is bounded below by `t ↦ X + ⌊t/T⌋ • Y` for appropriate constants `X` and\n`Y`. -/\ntheorem Inf_add_zsmul_le_integral_of_pos (hT : 0 < T) (t : exprℝ) :\n    infₛ\n          («expr '' »\n            (fun t =>\n              «expr∫ in .. , »\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 t (g x))\n            (Icc 0 T)) +\n        «expr • » («expr⌊ ⌋» (t / T))\n          («expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0\n            T (g x)) ≤\n      «expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" 0 t\n        (g x) :=\n  by\n  let ε := Int.fract (t / T) * T\n  conv_rhs =>\n    rw [← Int.fract_div_mul_self_add_zsmul_eq T t (by linarith), ←\n      integral_add_adjacent_intervals (h_int 0 ε) (h_int _ _)]\n  rw [hg.interval_integral_add_zsmul_eq («expr⌊ ⌋» (t / T)) ε h_int, hg.interval_integral_add_eq ε 0, zero_add,\n    add_le_add_iff_right]\n  exact\n    (continuous_primitive h_int 0).continuous_on.Inf_image_Icc_le\n      (mem_Icc_of_Ico (Int.fract_div_mul_self_mem_Ico T t hT))\n#align Inf_add_zsmul_le_integral_of_pos Inf_add_zsmul_le_integral_of_pos\n\n"}