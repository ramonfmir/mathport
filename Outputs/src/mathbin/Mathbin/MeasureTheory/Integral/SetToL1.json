{"zero":
 "theorem zero {m : MeasurableSpace α} (μ : Measure α) (hC : 0 ≤ C) : dominated_fin_meas_additive μ (0 : Set α → β) C :=\n  by\n  refine' ⟨fin_meas_additive.zero, fun s hs hμs => _⟩\n  rw [Pi.zero_apply, norm_zero]\n  exact mul_nonneg hC to_real_nonneg\n#align zero zero\n\n",
 "tendsto_set_to_fun_of_dominated_convergence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- Lebesgue dominated convergence theorem provides sufficient conditions under which almost\n  everywhere convergence of a sequence of functions implies the convergence of their image by\n  `set_to_fun`.\n  We could weaken the condition `bound_integrable` to require `has_finite_integral bound μ` instead\n  (i.e. not requiring that `bound` is measurable), but in all applications proving integrability\n  is easier. -/\ntheorem tendsto_set_to_fun_of_dominated_convergence (hT : dominated_fin_meas_additive μ T C) {fs : ℕ → α → E}\n    {f : α → E} (bound : α → exprℝ) (fs_measurable : ∀ n, ae_strongly_measurable (fs n) μ)\n    (bound_integrable : integrable bound μ)\n    (h_bound :\n      ∀ n,\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          («expr‖ ‖» (fs n a) ≤ bound a))\n    (h_lim :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (Tendsto (fun n => fs n a) atTop ((nhds) (f a)))) :\n    Tendsto (fun n => set_to_fun μ T hT (fs n)) atTop (nhds <| set_to_fun μ T hT f) :=\n  by\n  -- `f` is a.e.-measurable, since it is the a.e.-pointwise limit of a.e.-measurable functions.\n  have f_measurable : ae_strongly_measurable f μ := ae_strongly_measurable_of_tendsto_ae _ fs_measurable h_lim\n  -- all functions we consider are integrable\n  have fs_int : ∀ n, integrable (fs n) μ := fun n => bound_integrable.mono' (fs_measurable n) (h_bound _)\n  have f_int : integrable f μ :=\n    ⟨f_measurable, has_finite_integral_of_dominated_convergence bound_integrable.has_finite_integral h_bound h_lim⟩\n  -- it suffices to prove the result for the corresponding L1 functions\n  suffices\n    tendsto (fun n => L1.set_to_L1 hT ((fs_int n).to_L1 (fs n))) at_top ((nhds) (L1.set_to_L1 hT (f_int.to_L1 f)))\n    by\n    convert this\n    · ext1 n\n      exact set_to_fun_eq hT (fs_int n)\n    · exact set_to_fun_eq hT f_int\n  -- the convergence of set_to_L1 follows from the convergence of the L1 functions\n  refine' L1.tendsto_set_to_L1 hT _ _ _\n  -- up to some rewriting, what we need to prove is `h_lim`\n  rw [tendsto_iff_norm_tendsto_zero]\n  have lintegral_norm_tendsto_zero :\n    tendsto\n      (fun n =>\n        ENNReal.toReal <|\n          «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (ENNReal.ofReal («expr‖ ‖» (fs n a - f a))) μ)\n      at_top ((nhds) 0) :=\n    (tendsto_to_real zero_ne_top).comp\n      (tendsto_lintegral_norm_of_dominated_convergence fs_measurable bound_integrable.has_finite_integral h_bound h_lim)\n  convert lintegral_norm_tendsto_zero\n  ext1 n\n  rw [L1.norm_def]\n  congr 1\n  refine' lintegral_congr_ae _\n  rw [← integrable.to_L1_sub]\n  refine' ((fs_int n).sub f_int).coe_fn_to_L1.mono fun x hx => _\n  dsimp only\n  rw [hx, ofReal_norm_eq_coe_nnnorm, Pi.sub_apply]\n#align tendsto_set_to_fun_of_dominated_convergence tendsto_set_to_fun_of_dominated_convergence\n\n",
 "tendsto_set_to_fun_of_L1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- If `F i → f` in `L1`, then `set_to_fun μ T hT (F i) → set_to_fun μ T hT f`. -/\ntheorem tendsto_set_to_fun_of_L1 (hT : dominated_fin_meas_additive μ T C) {ι} (f : α → E) (hfi : integrable f μ)\n    {fs : ι → α → E} {l : Filter ι}\n    (hfsi :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" l\n        (integrable (fs i) μ))\n    (hfs :\n      Tendsto\n        (fun i =>\n          «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            («expr‖ ‖₊» (fs i x - f x)) μ)\n        l ((nhds) 0)) :\n    Tendsto (fun i => set_to_fun μ T hT (fs i)) l (nhds <| set_to_fun μ T hT f) := by\n  classical\n    let f_lp := hfi.to_L1 f\n    let F_lp i := if hFi : integrable (fs i) μ then hFi.to_L1 (fs i) else 0\n    have tendsto_L1 : tendsto F_lp l ((nhds) f_lp) :=\n      by\n      rw [Lp.tendsto_Lp_iff_tendsto_ℒp']\n      simp_rw [snorm_one_eq_lintegral_nnnorm, Pi.sub_apply]\n      refine' (tendsto_congr' _).mp hfs\n      filter_upwards [hfsi]with i hi\n      refine' lintegral_congr_ae _\n      filter_upwards [hi.coe_fn_to_L1, hfi.coe_fn_to_L1]with x hxi hxf\n      simp_rw [F_lp, dif_pos hi, hxi, hxf]\n    suffices tendsto (fun i => set_to_fun μ T hT (F_lp i)) l ((nhds) (set_to_fun μ T hT f))\n      by\n      refine' (tendsto_congr' _).mp this\n      filter_upwards [hfsi]with i hi\n      suffices h_ae_eq : «expr =ᵐ[ ] » (F_lp i) μ (fs i)\n      exact set_to_fun_congr_ae hT h_ae_eq\n      simp_rw [F_lp, dif_pos hi]\n      exact hi.coe_fn_to_L1\n    rw [set_to_fun_congr_ae hT hfi.coe_fn_to_L1.symm]\n    exact ((continuous_set_to_fun hT).tendsto f_lp).comp tendsto_L1\n#align tendsto_set_to_fun_of_L1 tendsto_set_to_fun_of_L1\n\n",
 "tendsto_set_to_fun_filter_of_dominated_convergence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- Lebesgue dominated convergence theorem for filters with a countable basis -/\ntheorem tendsto_set_to_fun_filter_of_dominated_convergence (hT : dominated_fin_meas_additive μ T C) {ι} {l : Filter ι}\n    [l.is_countably_generated] {fs : ι → α → E} {f : α → E} (bound : α → exprℝ)\n    (hfs_meas :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" l\n        (ae_strongly_measurable (fs n) μ))\n    (h_bound :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" l\n        («expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          («expr‖ ‖» (fs n a) ≤ bound a)))\n    (bound_integrable : integrable bound μ)\n    (h_lim :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (Tendsto (fun n => fs n a) l ((nhds) (f a)))) :\n    Tendsto (fun n => set_to_fun μ T hT (fs n)) l (nhds <| set_to_fun μ T hT f) :=\n  by\n  rw [tendsto_iff_seq_tendsto]\n  intro x xl\n  have hxl : ∀ s ∈ l, ∃ a, ∀ b ≥ a, x b ∈ s := by rwa [tendsto_at_top'] at xl\n  have h :\n    { x : ι | (fun n => ae_strongly_measurable (fs n) μ) x } ∩\n        { x : ι |\n          (fun n =>\n              «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n                («expr‖ ‖» (fs n a) ≤ bound a))\n            x } ∈\n      l :=\n    inter_mem hfs_meas h_bound\n  obtain ⟨k, h⟩ := hxl _ h\n  rw [← tendsto_add_at_top_iff_nat k]\n  refine' tendsto_set_to_fun_of_dominated_convergence hT bound _ bound_integrable _ _\n  · exact fun n => (h _ (self_le_add_left _ _)).1\n  · exact fun n => (h _ (self_le_add_left _ _)).2\n  · filter_upwards [h_lim]\n    refine' fun a h_lin => @tendsto.comp _ _ _ (fun n => x (n + k)) (fun n => fs n a) _ _ _ h_lin _\n    rw [tendsto_add_at_top_iff_nat]\n    assumption\n#align tendsto_set_to_fun_filter_of_dominated_convergence tendsto_set_to_fun_filter_of_dominated_convergence\n\n",
 "tendsto_set_to_fun_approx_on_of_measurable_of_range_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_set_to_fun_approx_on_of_measurable_of_range_subset (hT : dominated_fin_meas_additive μ T C)\n    [MeasurableSpace E] [borel_space E] {f : α → E} (fmeas : Measurable f) (hf : integrable f μ) (s : Set E)\n    [SeparableSpace s] (hs : range f ∪ {0} ⊆ s) :\n    Tendsto (fun n => set_to_fun μ T hT (simple_func.approx_on f fmeas s 0 (hs <| by simp) n)) atTop\n      (nhds <| set_to_fun μ T hT f) :=\n  by\n  refine' tendsto_set_to_fun_approx_on_of_measurable hT hf fmeas _ _ (integrable_zero _ _ _)\n  exact eventually_of_forall fun x => subset_closure (hs (Set.mem_union_left _ (mem_range_self _)))\n#align tendsto_set_to_fun_approx_on_of_measurable_of_range_subset tendsto_set_to_fun_approx_on_of_measurable_of_range_subset\n\n",
 "tendsto_set_to_fun_approx_on_of_measurable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_set_to_fun_approx_on_of_measurable (hT : dominated_fin_meas_additive μ T C) [MeasurableSpace E]\n    [borel_space E] {f : α → E} {s : Set E} [SeparableSpace s] (hfi : integrable f μ) (hfm : Measurable f)\n    (hs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (f x ∈ closure s))\n    {y₀ : E} (h₀ : y₀ ∈ s) (h₀i : integrable (fun x => y₀) μ) :\n    Tendsto (fun n => set_to_fun μ T hT (simple_func.approx_on f hfm s y₀ h₀ n)) atTop (nhds <| set_to_fun μ T hT f) :=\n  tendsto_set_to_fun_of_L1 hT _ hfi (eventually_of_forall (simple_func.integrable_approx_on hfm hfi h₀ h₀i))\n    (simple_func.tendsto_approx_on_L1_nnnorm hfm _ hs (hfi.sub h₀i).2)\n#align tendsto_set_to_fun_approx_on_of_measurable tendsto_set_to_fun_approx_on_of_measurable\n\n",
 "tendsto_set_to_L1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- If `fs i → f` in `L1`, then `set_to_L1 hT (fs i) → set_to_L1 hT f`. -/\ntheorem tendsto_set_to_L1 (hT : dominated_fin_meas_additive μ T C) (f : measure_theory.L1 α μ E) {ι}\n    (fs : ι → measure_theory.L1 α μ E) {l : Filter ι} (hfs : Tendsto fs l ((nhds) f)) :\n    Tendsto (fun i => set_to_L1 hT (fs i)) l (nhds <| set_to_L1 hT f) :=\n  ((set_to_L1 hT).continuous.tendsto _).comp hfs\n#align tendsto_set_to_L1 tendsto_set_to_L1\n\n",
 "smul_measure_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_measure_iff (c : ennreal) (hc_ne_zero : c ≠ 0) (hc_ne_top : c ≠ ennreal.top) :\n    fin_meas_additive («expr • » c μ) T ↔ fin_meas_additive μ T :=\n  ⟨fun hT => of_smul_measure c hc_ne_top hT, fun hT => smul_measure c hc_ne_zero hT⟩\n#align smul_measure_iff smul_measure_iff\n\n",
 "smul_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_measure (c : ennreal) (hc_ne_zero : c ≠ 0) (hT : fin_meas_additive μ T) :\n    fin_meas_additive («expr • » c μ) T :=\n  by\n  refine' of_eq_top_imp_eq_top (fun s hs hμs => _) hT\n  rw [measure.smul_apply, smul_eq_mul, WithTop.mul_eq_top_iff]\n  simp only [hc_ne_zero, true_and_iff, ne.def, not_false_iff]\n  exact or.inl hμs\n#align smul_measure smul_measure\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem smul [NormedField 𝕜] [NormedSpace 𝕜 β] (hT : dominated_fin_meas_additive μ T C) (c : 𝕜) :\n    dominated_fin_meas_additive μ (fun s => «expr • » c (T s)) («expr‖ ‖» c * C) :=\n  by\n  refine' ⟨hT.1.smul c, fun s hs hμs => _⟩\n  dsimp only\n  rw [norm_smul, mul_assoc]\n  exact mul_le_mul le_rfl (hT.2 s hs hμs) (norm_nonneg _) (norm_nonneg _)\n#align smul smul\n\n",
 "set_to_simple_func_zero_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n@[simp]\ntheorem set_to_simple_func_zero_apply {m : MeasurableSpace α} (T : Set α → «expr →L[ ] » F (exprℝ) F') :\n    set_to_simple_func T (0 : «expr →ₛ » α F) = 0 := by cases isEmpty_or_nonempty α <;> simp [set_to_simple_func]\n#align set_to_simple_func_zero_apply set_to_simple_func_zero_apply\n\n",
 "set_to_simple_func_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_zero' {T : Set α → «expr →L[ ] » E (exprℝ) F'}\n    (h_zero : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = 0) (f : «expr →ₛ » α E) (hf : integrable f μ) :\n    set_to_simple_func T f = 0 := by\n  simp_rw [set_to_simple_func]\n  refine' sum_eq_zero fun x hx => _\n  by_cases hx0 : x = 0\n  · simp [hx0]\n  rw [h_zero («expr ⁻¹' » f ({x} : Set E)) (measurable_set_fiber _ _) (measure_preimage_lt_top_of_integrable f hf hx0),\n    ContinuousLinearMap.zero_apply]\n#align set_to_simple_func_zero' set_to_simple_func_zero'\n\n",
 "set_to_simple_func_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem set_to_simple_func_zero {m : MeasurableSpace α} (f : «expr →ₛ » α F) :\n    set_to_simple_func (0 : Set α → «expr →L[ ] » F (exprℝ) F') f = 0 := by simp [set_to_simple_func]\n#align set_to_simple_func_zero set_to_simple_func_zero\n\n",
 "set_to_simple_func_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_sub (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_add : fin_meas_additive μ T)\n    {f g : «expr →ₛ » α E} (hf : integrable f μ) (hg : integrable g μ) :\n    set_to_simple_func T (f - g) = set_to_simple_func T f - set_to_simple_func T g :=\n  by\n  rw [sub_eq_add_neg, set_to_simple_func_add T h_add hf, set_to_simple_func_neg T h_add hg, sub_eq_add_neg]\n  rw [integrable_iff] at hg⊢\n  intro x hx_ne\n  change μ («expr ⁻¹' » (has_neg.neg ∘ g) {x}) < ennreal.top\n  rw [preimage_comp, neg_preimage, Set.neg_singleton]\n  refine' hg (-x) _\n  simp [hx_ne]\n#align set_to_simple_func_sub set_to_simple_func_sub\n\n",
 "set_to_simple_func_smul_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_simple_func_smul_real (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_add : fin_meas_additive μ T) (c : exprℝ)\n    {f : «expr →ₛ » α E} (hf : integrable f μ) :\n    set_to_simple_func T («expr • » c f) = «expr • » c (set_to_simple_func T f) :=\n  calc\n    set_to_simple_func T («expr • » c f) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          (T («expr ⁻¹' » f {x}) («expr • » c x)) :=\n      by\n      rw [smul_eq_map c f, map_set_to_simple_func T h_add hf]\n      rw [smul_zero]\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          («expr • » c (T («expr ⁻¹' » f {x}) x)) :=\n      (Finset.sum_congr rfl fun b hb => by rw [ContinuousLinearMap.map_smul (T («expr ⁻¹' » f {b})) c b])\n    _ = «expr • » c (set_to_simple_func T f) := by simp only [set_to_simple_func, smul_sum, smul_smul, mul_comm]\n    \n#align set_to_simple_func_smul_real set_to_simple_func_smul_real\n\n",
 "set_to_simple_func_smul_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_simple_func_smul_left' (T T' : Set α → «expr →L[ ] » E (exprℝ) F') (c : exprℝ)\n    (h_smul : ∀ s, MeasurableSet s → μ s < ennreal.top → T' s = «expr • » c (T s)) {f : «expr →ₛ » α E}\n    (hf : integrable f μ) : set_to_simple_func T' f = «expr • » c (set_to_simple_func T f) :=\n  by\n  simp_rw [set_to_simple_func_eq_sum_filter]\n  suffices ∀ x ∈ Filter (fun x : E => x ≠ 0) f.range, T' («expr ⁻¹' » f {x}) = «expr • » c (T («expr ⁻¹' » f {x}))\n    by\n    rw [smul_sum]\n    refine' Finset.sum_congr rfl fun x hx => _\n    rw [this x hx]\n    rfl\n  intro x hx\n  refine' h_smul («expr ⁻¹' » f {x}) (measurableSet_preimage _ _) (measure_preimage_lt_top_of_integrable _ hf _)\n  rw [mem_filter] at hx\n  exact hx.2\n#align set_to_simple_func_smul_left' set_to_simple_func_smul_left'\n\n",
 "set_to_simple_func_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_simple_func_smul_left {m : MeasurableSpace α} (T : Set α → «expr →L[ ] » F (exprℝ) F') (c : exprℝ)\n    (f : «expr →ₛ » α F) : set_to_simple_func (fun s => «expr • » c (T s)) f = «expr • » c (set_to_simple_func T f) :=\n  by simp_rw [set_to_simple_func, ContinuousLinearMap.smul_apply, smul_sum]\n#align set_to_simple_func_smul_left set_to_simple_func_smul_left\n\n",
 "set_to_simple_func_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_simple_func_smul {E} [NormedAddCommGroup E] [NormedField 𝕜] [NormedSpace 𝕜 E] [NormedSpace (exprℝ) E]\n    [NormedSpace 𝕜 F] (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_add : fin_meas_additive μ T)\n    (h_smul : ∀ c : 𝕜, ∀ s x, T s («expr • » c x) = «expr • » c (T s x)) (c : 𝕜) {f : «expr →ₛ » α E}\n    (hf : integrable f μ) : set_to_simple_func T («expr • » c f) = «expr • » c (set_to_simple_func T f) :=\n  calc\n    set_to_simple_func T («expr • » c f) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          (T («expr ⁻¹' » f {x}) («expr • » c x)) :=\n      by\n      rw [smul_eq_map c f, map_set_to_simple_func T h_add hf]\n      rw [smul_zero]\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          («expr • » c (T («expr ⁻¹' » f {x}) x)) :=\n      (Finset.sum_congr rfl fun b hb => by rw [h_smul])\n    _ = «expr • » c (set_to_simple_func T f) := by simp only [set_to_simple_func, smul_sum, smul_smul, mul_comm]\n    \n#align set_to_simple_func_smul set_to_simple_func_smul\n\n",
 "set_to_simple_func_nonneg'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_nonneg' (T : Set α → «expr →L[ ] » G' (exprℝ) G'')\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) (f : «expr →ₛ » α G') (hf : 0 ≤ f)\n    (hfi : integrable f μ) : 0 ≤ set_to_simple_func T f :=\n  by\n  refine' sum_nonneg fun i hi => _\n  by_cases h0 : i = 0\n  · simp [h0]\n  refine' hT_nonneg _ (measurable_set_fiber _ _) (measure_preimage_lt_top_of_integrable _ hfi h0) i _\n  rw [mem_range] at hi\n  obtain ⟨y, hy⟩ := set.mem_range.mp hi\n  rw [← hy]\n  convert hf y\n#align set_to_simple_func_nonneg' set_to_simple_func_nonneg'\n\n",
 "set_to_simple_func_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_nonneg {m : MeasurableSpace α} (T : Set α → «expr →L[ ] » G' (exprℝ) G'')\n    (hT_nonneg : ∀ s x, 0 ≤ x → 0 ≤ T s x) (f : «expr →ₛ » α G') (hf : 0 ≤ f) : 0 ≤ set_to_simple_func T f :=\n  by\n  refine' sum_nonneg fun i hi => hT_nonneg _ i _\n  rw [mem_range] at hi\n  obtain ⟨y, hy⟩ := set.mem_range.mp hi\n  rw [← hy]\n  refine' le_trans _ (hf y)\n  simp\n#align set_to_simple_func_nonneg set_to_simple_func_nonneg\n\n",
 "set_to_simple_func_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_neg (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_add : fin_meas_additive μ T)\n    {f : «expr →ₛ » α E} (hf : integrable f μ) : set_to_simple_func T (-f) = -set_to_simple_func T f :=\n  calc\n    set_to_simple_func T (-f) = set_to_simple_func T (f.map has_neg.neg) := rfl\n    _ = -set_to_simple_func T f :=\n      by\n      rw [map_set_to_simple_func T h_add hf neg_zero, set_to_simple_func, ← sum_neg_distrib]\n      exact Finset.sum_congr rfl fun x h => ContinuousLinearMap.map_neg _ _\n    \n#align set_to_simple_func_neg set_to_simple_func_neg\n\n",
 "set_to_simple_func_mono_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_mono_left' (T T' : Set α → «expr →L[ ] » E (exprℝ) G'')\n    (hTT' : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, T s x ≤ T' s x) (f : «expr →ₛ » α E) (hf : integrable f μ) :\n    set_to_simple_func T f ≤ set_to_simple_func T' f :=\n  by\n  refine' sum_le_sum fun i hi => _\n  by_cases h0 : i = 0\n  · simp [h0]\n  · exact hTT' _ (measurable_set_fiber _ _) (measure_preimage_lt_top_of_integrable _ hf h0) i\n#align set_to_simple_func_mono_left' set_to_simple_func_mono_left'\n\n",
 "set_to_simple_func_mono_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_mono_left {m : MeasurableSpace α} (T T' : Set α → «expr →L[ ] » F (exprℝ) G'')\n    (hTT' : ∀ s x, T s x ≤ T' s x) (f : «expr →ₛ » α F) : set_to_simple_func T f ≤ set_to_simple_func T' f :=\n  by\n  simp_rw [set_to_simple_func]\n  exact sum_le_sum fun i hi => hTT' _ i\n#align set_to_simple_func_mono_left set_to_simple_func_mono_left\n\n",
 "set_to_simple_func_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_mono {T : Set α → «expr →L[ ] » G' (exprℝ) G''} (h_add : fin_meas_additive μ T)\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) {f g : «expr →ₛ » α G'}\n    (hfi : integrable f μ) (hgi : integrable g μ) (hfg : f ≤ g) : set_to_simple_func T f ≤ set_to_simple_func T g :=\n  by\n  rw [← sub_nonneg, ← set_to_simple_func_sub T h_add hgi hfi]\n  refine' set_to_simple_func_nonneg' T hT_nonneg _ _ (hgi.sub hfi)\n  intro x\n  simp only [coe_sub, sub_nonneg, coe_zero, Pi.zero_apply, Pi.sub_apply]\n  exact hfg x\n#align set_to_simple_func_mono set_to_simple_func_mono\n\n",
 "set_to_simple_func_indicator":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem set_to_simple_func_indicator (T : Set α → «expr →L[ ] » F (exprℝ) F') (hT_empty : T ∅ = 0)\n    {m : MeasurableSpace α} {s : Set α} (hs : MeasurableSet s) (x : F) :\n    simple_func.set_to_simple_func T (simple_func.piecewise s hs (simple_func.const α x) (simple_func.const α 0)) =\n      T s x :=\n  by\n  obtain rfl | hs_empty := s.eq_empty_or_nonempty\n  · simp only [hT_empty, ContinuousLinearMap.zero_apply, piecewise_empty, const_zero, set_to_simple_func_zero_apply]\n  simp_rw [set_to_simple_func]\n  obtain rfl | hs_univ := eq_or_ne s univ\n  · haveI hα := hs_empty.to_type\n    simp\n  rw [range_indicator hs hs_empty hs_univ]\n  by_cases hx0 : x = 0\n  · simp_rw [hx0]\n    simp\n  rw [sum_insert]\n  swap;\n  · rw [Finset.mem_singleton]\n    exact hx0\n  rw [sum_singleton, (T _).map_zero, add_zero]\n  congr\n  simp only [coe_piecewise, piecewise_eq_indicator, coe_const, Pi.const_zero, piecewise_eq_indicator]\n  rw [indicator_preimage, preimage_const_of_mem]\n  swap; · exact Set.mem_singleton x\n  rw [← Pi.const_zero, preimage_const_of_not_mem]\n  swap;\n  · rw [Set.mem_singleton_iff]\n    exact ne.symm hx0\n  simp\n#align set_to_simple_func_indicator set_to_simple_func_indicator\n\n",
 "set_to_simple_func_eq_sum_filter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem set_to_simple_func_eq_sum_filter {m : MeasurableSpace α} (T : Set α → «expr →L[ ] » F (exprℝ) F')\n    (f : «expr →ₛ » α F) :\n    set_to_simple_func T f =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (f.range.filter fun x => x ≠ 0) ((T («expr ⁻¹' » f {x})) x) :=\n  by\n  symm\n  refine' sum_filter_of_ne fun x hx => mt fun hx0 => _\n  rw [hx0]\n  exact ContinuousLinearMap.map_zero _\n#align set_to_simple_func_eq_sum_filter set_to_simple_func_eq_sum_filter\n\n",
 "set_to_simple_func_const'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem set_to_simple_func_const' [Nonempty α] (T : Set α → «expr →L[ ] » F (exprℝ) F') (x : F)\n    {m : MeasurableSpace α} : simple_func.set_to_simple_func T (simple_func.const α x) = T univ x := by\n  simp only [set_to_simple_func, range_const, Set.mem_singleton, preimage_const_of_mem, sum_singleton, coe_const]\n#align set_to_simple_func_const' set_to_simple_func_const'\n\n",
 "set_to_simple_func_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem set_to_simple_func_const (T : Set α → «expr →L[ ] » F (exprℝ) F') (hT_empty : T ∅ = 0) (x : F)\n    {m : MeasurableSpace α} : simple_func.set_to_simple_func T (simple_func.const α x) = T univ x :=\n  by\n  cases hα : isEmpty_or_nonempty α\n  · have h_univ_empty : (univ : Set α) = ∅ := subsingleton.elim _ _\n    rw [h_univ_empty, hT_empty]\n    simp only [set_to_simple_func, ContinuousLinearMap.zero_apply, sum_empty, range_eq_empty_of_is_empty]\n  · exact set_to_simple_func_const' T x\n#align set_to_simple_func_const set_to_simple_func_const\n\n",
 "set_to_simple_func_congr_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_congr_left (T T' : Set α → «expr →L[ ] » E (exprℝ) F)\n    (h : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = T' s) (f : «expr →ₛ » α E) (hf : integrable f μ) :\n    set_to_simple_func T f = set_to_simple_func T' f :=\n  by\n  simp_rw [set_to_simple_func]\n  refine' sum_congr rfl fun x hx => _\n  by_cases hx0 : x = 0\n  · simp [hx0]\n  ·\n    rw [h («expr ⁻¹' » f {x}) (simple_func.measurable_set_fiber _ _)\n        (simple_func.measure_preimage_lt_top_of_integrable _ hf hx0)]\n#align set_to_simple_func_congr_left set_to_simple_func_congr_left\n\n",
 "set_to_simple_func_congr'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem set_to_simple_func_congr' (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_add : fin_meas_additive μ T)\n    {f g : «expr →ₛ » α E} (hf : integrable f μ) (hg : integrable g μ)\n    (h : ∀ x y, x ≠ y → T («expr ⁻¹' » f {x} ∩ «expr ⁻¹' » g {y}) = 0) :\n    f.set_to_simple_func T = g.set_to_simple_func T :=\n  show ((pair f g).map Prod.fst).set_to_simple_func T = ((pair f g).map Prod.snd).set_to_simple_func T\n    by\n    have h_pair : integrable (f.pair g) μ := integrable_pair hf hg\n    rw [map_set_to_simple_func T h_add h_pair Prod.fst_zero]\n    rw [map_set_to_simple_func T h_add h_pair Prod.snd_zero]\n    refine' Finset.sum_congr rfl fun p hp => _\n    rcases mem_range.1 hp with ⟨a, rfl⟩\n    by_cases eq : f a = g a\n    · dsimp only [pair_apply]\n      rw [Eq]\n    · have : T («expr ⁻¹' » (pair f g) {(f a, g a)}) = 0 :=\n        by\n        have h_eq :\n          T («expr ⁻¹' » («expr⇑ » (f.pair g)) {(f a, g a)}) = T («expr ⁻¹' » f {f a} ∩ «expr ⁻¹' » g {g a}) :=\n          by\n          congr\n          rw [pair_preimage_singleton f g]\n        rw [h_eq]\n        exact h (f a) (g a) Eq\n      simp only [this, ContinuousLinearMap.zero_apply, pair_apply]\n#align set_to_simple_func_congr' set_to_simple_func_congr'\n\n",
 "set_to_simple_func_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem set_to_simple_func_congr (T : Set α → «expr →L[ ] » E (exprℝ) F)\n    (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0) (h_add : fin_meas_additive μ T) {f g : «expr →ₛ » α E}\n    (hf : integrable f μ) (h : «expr =ᵐ[ ] » f μ g) : f.set_to_simple_func T = g.set_to_simple_func T :=\n  by\n  refine' set_to_simple_func_congr' T h_add hf ((integrable_congr h).mp hf) _\n  refine' fun x y hxy => h_zero _ ((measurable_set_fiber f x).inter (measurable_set_fiber g y)) _\n  rw [eventually_eq, ae_iff] at h\n  refine' measure_mono_null (fun z => _) h\n  simp_rw [Set.mem_inter_iff, Set.mem_setOf_eq, Set.mem_preimage, Set.mem_singleton_iff]\n  intro h\n  rwa [h.1, h.2]\n#align set_to_simple_func_congr set_to_simple_func_congr\n\n",
 "set_to_simple_func_add_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_add_left' (T T' T'' : Set α → «expr →L[ ] » E (exprℝ) F)\n    (h_add : ∀ s, MeasurableSet s → μ s < ennreal.top → T'' s = T s + T' s) {f : «expr →ₛ » α E} (hf : integrable f μ) :\n    set_to_simple_func T'' f = set_to_simple_func T f + set_to_simple_func T' f :=\n  by\n  simp_rw [set_to_simple_func_eq_sum_filter]\n  suffices\n    ∀ x ∈ Filter (fun x : E => x ≠ 0) f.range, T'' («expr ⁻¹' » f {x}) = T («expr ⁻¹' » f {x}) + T' («expr ⁻¹' » f {x})\n    by\n    rw [← sum_add_distrib]\n    refine' Finset.sum_congr rfl fun x hx => _\n    rw [this x hx]\n    push_cast\n    rw [Pi.add_apply]\n  intro x hx\n  refine' h_add («expr ⁻¹' » f {x}) (measurableSet_preimage _ _) (measure_preimage_lt_top_of_integrable _ hf _)\n  rw [mem_filter] at hx\n  exact hx.2\n#align set_to_simple_func_add_left' set_to_simple_func_add_left'\n\n",
 "set_to_simple_func_add_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_add_left {m : MeasurableSpace α} (T T' : Set α → «expr →L[ ] » F (exprℝ) F')\n    {f : «expr →ₛ » α F} : set_to_simple_func (T + T') f = set_to_simple_func T f + set_to_simple_func T' f :=\n  by\n  simp_rw [set_to_simple_func, Pi.add_apply]\n  push_cast\n  simp_rw [Pi.add_apply, sum_add_distrib]\n#align set_to_simple_func_add_left set_to_simple_func_add_left\n\n",
 "set_to_simple_func_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\ntheorem set_to_simple_func_add (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_add : fin_meas_additive μ T)\n    {f g : «expr →ₛ » α E} (hf : integrable f μ) (hg : integrable g μ) :\n    set_to_simple_func T (f + g) = set_to_simple_func T f + set_to_simple_func T g :=\n  have hp_pair : integrable (f.pair g) μ := integrable_pair hf hg\n  calc\n    set_to_simple_func T (f + g) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (pair f g).range\n          (T («expr ⁻¹' » (pair f g) {x}) (x.fst + x.snd)) :=\n      by\n      rw [add_eq_map₂, map_set_to_simple_func T h_add hp_pair]\n      simp\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (pair f g).range\n          (T («expr ⁻¹' » (pair f g) {x}) x.fst + T («expr ⁻¹' » (pair f g) {x}) x.snd) :=\n      (Finset.sum_congr rfl fun a ha => ContinuousLinearMap.map_add _ _ _)\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (pair f g).range\n            (T («expr ⁻¹' » (pair f g) {x}) x.fst) +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (pair f g).range (T («expr ⁻¹' » (pair f g) {x}) x.snd) :=\n      by rw [Finset.sum_add_distrib]\n    _ = ((pair f g).map Prod.fst).set_to_simple_func T + ((pair f g).map Prod.snd).set_to_simple_func T := by\n      rw [map_set_to_simple_func T h_add hp_pair Prod.snd_zero, map_set_to_simple_func T h_add hp_pair Prod.fst_zero]\n    \n#align set_to_simple_func_add set_to_simple_func_add\n\n",
 "set_to_fun_zero_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_fun_zero_left' (hT : dominated_fin_meas_additive μ T C)\n    (h_zero : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = 0) : set_to_fun μ T hT f = 0 :=\n  by\n  by_cases hf : integrable f μ\n  · rw [set_to_fun_eq hT hf]\n    exact L1.set_to_L1_zero_left' hT h_zero _\n  · exact set_to_fun_undef hT hf\n#align set_to_fun_zero_left' set_to_fun_zero_left'\n\n",
 "set_to_fun_zero_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem set_to_fun_zero_left {hT : dominated_fin_meas_additive μ (0 : Set α → «expr →L[ ] » E (exprℝ) F) C} :\n    set_to_fun μ 0 hT f = 0 := by\n  by_cases hf : integrable f μ\n  · rw [set_to_fun_eq hT hf]\n    exact L1.set_to_L1_zero_left hT _\n  · exact set_to_fun_undef hT hf\n#align set_to_fun_zero_left set_to_fun_zero_left\n\n",
 "set_to_fun_zero":
 "@[simp]\ntheorem set_to_fun_zero (hT : dominated_fin_meas_additive μ T C) : set_to_fun μ T hT (0 : α → E) = 0 :=\n  by\n  rw [set_to_fun_eq hT]\n  · simp only [integrable.to_L1_zero, ContinuousLinearMap.map_zero]\n  · exact integrable_zero _ _ _\n#align set_to_fun_zero set_to_fun_zero\n\n",
 "set_to_fun_undef":
 "theorem set_to_fun_undef (hT : dominated_fin_meas_additive μ T C) (hf : ¬integrable f μ) : set_to_fun μ T hT f = 0 :=\n  dif_neg hf\n#align set_to_fun_undef set_to_fun_undef\n\n",
 "set_to_fun_top_smul_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_fun_top_smul_measure (hT : dominated_fin_meas_additive («expr • » (ennreal.top) μ) T C) (f : α → E) :\n    set_to_fun («expr • » (ennreal.top) μ) T hT f = 0 :=\n  by\n  refine' set_to_fun_measure_zero' hT fun s hs hμs => _\n  rw [lt_top_iff_ne_top] at hμs\n  simp only [true_and_iff, measure.smul_apply, WithTop.mul_eq_top_iff, eq_self_iff_true, top_ne_zero, ne.def,\n    not_false_iff, not_or, Classical.not_not, smul_eq_mul] at hμs\n  simp only [hμs.right, measure.smul_apply, MulZeroClass.mul_zero, smul_eq_mul]\n#align set_to_fun_top_smul_measure set_to_fun_top_smul_measure\n\n",
 "set_to_fun_to_L1":
 "theorem set_to_fun_to_L1 (hT : dominated_fin_meas_additive μ T C) (hf : integrable f μ) :\n    set_to_fun μ T hT (hf.to_L1 f) = set_to_fun μ T hT f :=\n  set_to_fun_congr_ae hT hf.coe_fn_to_L1\n#align set_to_fun_to_L1 set_to_fun_to_L1\n\n",
 "set_to_fun_sub":
 "theorem set_to_fun_sub (hT : dominated_fin_meas_additive μ T C) (hf : integrable f μ) (hg : integrable g μ) :\n    set_to_fun μ T hT (f - g) = set_to_fun μ T hT f - set_to_fun μ T hT g := by\n  rw [sub_eq_add_neg, sub_eq_add_neg, set_to_fun_add hT hf hg.neg, set_to_fun_neg hT g]\n#align set_to_fun_sub set_to_fun_sub\n\n",
 "set_to_fun_smul_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_fun_smul_left' (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (c : exprℝ) (h_smul : ∀ s, MeasurableSet s → μ s < ennreal.top → T' s = «expr • » c (T s)) (f : α → E) :\n    set_to_fun μ T' hT' f = «expr • » c (set_to_fun μ T hT f) :=\n  by\n  by_cases hf : integrable f μ\n  · simp_rw [set_to_fun_eq _ hf, L1.set_to_L1_smul_left' hT hT' c h_smul]\n  · simp_rw [set_to_fun_undef _ hf, smul_zero]\n#align set_to_fun_smul_left' set_to_fun_smul_left'\n\n",
 "set_to_fun_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_fun_smul_left (hT : dominated_fin_meas_additive μ T C) (c : exprℝ) (f : α → E) :\n    set_to_fun μ (fun s => «expr • » c (T s)) (hT.smul c) f = «expr • » c (set_to_fun μ T hT f) :=\n  by\n  by_cases hf : integrable f μ\n  · simp_rw [set_to_fun_eq _ hf, L1.set_to_L1_smul_left hT c]\n  · simp_rw [set_to_fun_undef _ hf, smul_zero]\n#align set_to_fun_smul_left set_to_fun_smul_left\n\n",
 "set_to_fun_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_fun_smul [NontriviallyNormedField 𝕜] [NormedSpace 𝕜 E] [NormedSpace 𝕜 F]\n    (hT : dominated_fin_meas_additive μ T C) (h_smul : ∀ c : 𝕜, ∀ s x, T s («expr • » c x) = «expr • » c (T s x))\n    (c : 𝕜) (f : α → E) : set_to_fun μ T hT («expr • » c f) = «expr • » c (set_to_fun μ T hT f) :=\n  by\n  by_cases hf : integrable f μ\n  · rw [set_to_fun_eq hT hf, set_to_fun_eq hT, integrable.to_L1_smul', L1.set_to_L1_smul hT h_smul c _]\n  · by_cases hr : c = 0\n    · rw [hr]\n      simp\n    · have hf' : ¬integrable («expr • » c f) μ := by rwa [integrable_smul_iff hr f]\n      rw [set_to_fun_undef hT hf, set_to_fun_undef hT hf', smul_zero]\n#align set_to_fun_smul set_to_fun_smul\n\n",
 "set_to_fun_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem set_to_fun_nonneg {T : Set α → «expr →L[ ] » G' (exprℝ) G''} {C : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C)\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) {f : α → G'}\n    (hf : «expr ≤ᵐ[ ] » 0 μ f) : 0 ≤ set_to_fun μ T hT f :=\n  by\n  by_cases hfi : integrable f μ\n  · simp_rw [set_to_fun_eq _ hfi]\n    refine' L1.set_to_L1_nonneg hT hT_nonneg _\n    rw [← Lp.coe_fn_le]\n    have h0 := Lp.coe_fn_zero G' 1 μ\n    have h := integrable.coe_fn_to_L1 hfi\n    filter_upwards [h0, h, hf]with _ h0a ha hfa\n    rw [h0a, ha]\n    exact hfa\n  · simp_rw [set_to_fun_undef _ hfi]\n#align set_to_fun_nonneg set_to_fun_nonneg\n\n",
 "set_to_fun_non_ae_strongly_measurable":
 "theorem set_to_fun_non_ae_strongly_measurable (hT : dominated_fin_meas_additive μ T C)\n    (hf : ¬ae_strongly_measurable f μ) : set_to_fun μ T hT f = 0 :=\n  set_to_fun_undef hT (not_and_of_not_left _ hf)\n#align set_to_fun_non_ae_strongly_measurable set_to_fun_non_ae_strongly_measurable\n\n",
 "set_to_fun_neg":
 "theorem set_to_fun_neg (hT : dominated_fin_meas_additive μ T C) (f : α → E) :\n    set_to_fun μ T hT (-f) = -set_to_fun μ T hT f :=\n  by\n  by_cases hf : integrable f μ\n  · rw [set_to_fun_eq hT hf, set_to_fun_eq hT hf.neg, integrable.to_L1_neg, (L1.set_to_L1 hT).map_neg]\n  · rw [set_to_fun_undef hT hf, set_to_fun_undef hT, neg_zero]\n    rwa [← integrable_neg_iff] at hf\n#align set_to_fun_neg set_to_fun_neg\n\n",
 "set_to_fun_mono_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_fun_mono_left' {T T' : Set α → «expr →L[ ] » E (exprℝ) G''} {C C' : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (hTT' : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, T s x ≤ T' s x) (f : α → E) :\n    set_to_fun μ T hT f ≤ set_to_fun μ T' hT' f :=\n  by\n  by_cases hf : integrable f μ\n  · simp_rw [set_to_fun_eq _ hf]\n    exact L1.set_to_L1_mono_left' hT hT' hTT' _\n  · simp_rw [set_to_fun_undef _ hf]\n#align set_to_fun_mono_left' set_to_fun_mono_left'\n\n",
 "set_to_fun_mono_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_fun_mono_left {T T' : Set α → «expr →L[ ] » E (exprℝ) G''} {C C' : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C') (hTT' : ∀ s x, T s x ≤ T' s x)\n    (f : measure_theory.L1 α μ E) : set_to_fun μ T hT f ≤ set_to_fun μ T' hT' f :=\n  set_to_fun_mono_left' hT hT' (fun s _ _ x => hTT' s x) f\n#align set_to_fun_mono_left set_to_fun_mono_left\n\n",
 "set_to_fun_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem set_to_fun_mono {T : Set α → «expr →L[ ] » G' (exprℝ) G''} {C : exprℝ} (hT : dominated_fin_meas_additive μ T C)\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) {f g : α → G'} (hf : integrable f μ)\n    (hg : integrable g μ) (hfg : «expr ≤ᵐ[ ] » f μ g) : set_to_fun μ T hT f ≤ set_to_fun μ T hT g :=\n  by\n  rw [← sub_nonneg, ← set_to_fun_sub hT hg hf]\n  refine' set_to_fun_nonneg hT hT_nonneg (hfg.mono fun a ha => _)\n  rw [Pi.sub_apply, Pi.zero_apply, sub_nonneg]\n  exact ha\n#align set_to_fun_mono set_to_fun_mono\n\n",
 "set_to_fun_measure_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_fun_measure_zero' (hT : dominated_fin_meas_additive μ T C)\n    (h : ∀ s, MeasurableSet s → μ s < ennreal.top → μ s = 0) : set_to_fun μ T hT f = 0 :=\n  set_to_fun_zero_left' hT fun s hs hμs => hT.eq_zero_of_measure_zero hs (h s hs hμs)\n#align set_to_fun_measure_zero' set_to_fun_measure_zero'\n\n",
 "set_to_fun_measure_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem set_to_fun_measure_zero (hT : dominated_fin_meas_additive μ T C) (h : μ = 0) : set_to_fun μ T hT f = 0 :=\n  by\n  have : «expr =ᵐ[ ] » f μ 0 := by simp [h]\n  rw [set_to_fun_congr_ae hT this, set_to_fun_zero]\n#align set_to_fun_measure_zero set_to_fun_measure_zero\n\n",
 "set_to_fun_indicator_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_fun_indicator_const (hT : dominated_fin_meas_additive μ T C) {s : Set α} (hs : MeasurableSet s)\n    (hμs : μ s ≠ ennreal.top) (x : E) : set_to_fun μ T hT (s.indicator fun _ => x) = T s x :=\n  by\n  rw [set_to_fun_congr_ae hT (@indicator_const_Lp_coe_fn _ _ _ 1 _ _ _ hs hμs x).symm]\n  rw [L1.set_to_fun_eq_set_to_L1 hT]\n  exact L1.set_to_L1_indicator_const_Lp hT hs hμs x\n#align set_to_fun_indicator_const set_to_fun_indicator_const\n\n",
 "set_to_fun_finset_sum'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem set_to_fun_finset_sum' (hT : dominated_fin_meas_additive μ T C) {ι} (s : Finset ι) {f : ι → α → E}\n    (hf : ∀ i ∈ s, integrable (f i) μ) :\n    set_to_fun μ T hT\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (set_to_fun μ T hT (f i)) :=\n  by\n  revert hf\n  refine' Finset.induction_on s _ _\n  · intro h\n    simp only [set_to_fun_zero, Finset.sum_empty]\n  · intro i s his ih hf\n    simp only [his, Finset.sum_insert, not_false_iff]\n    rw [set_to_fun_add hT (hf i (Finset.mem_insert_self i s)) _]\n    · rw [ih fun i hi => hf i (Finset.mem_insert_of_mem hi)]\n    · convert integrable_finset_sum s fun i hi => hf i (Finset.mem_insert_of_mem hi)\n      ext1 x\n      simp\n#align set_to_fun_finset_sum' set_to_fun_finset_sum'\n\n",
 "set_to_fun_finset_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem set_to_fun_finset_sum (hT : dominated_fin_meas_additive μ T C) {ι} (s : Finset ι) {f : ι → α → E}\n    (hf : ∀ i ∈ s, integrable (f i) μ) :\n    (set_to_fun μ T hT fun a =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i a)) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (set_to_fun μ T hT (f i)) :=\n  by\n  convert set_to_fun_finset_sum' hT s hf\n  ext1 a\n  simp\n#align set_to_fun_finset_sum set_to_fun_finset_sum\n\n",
 "set_to_fun_eq_set_to_L1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem L1.set_to_fun_eq_set_to_L1 (hT : dominated_fin_meas_additive μ T C) (f : measure_theory.L1 α μ E) :\n    set_to_fun μ T hT f = L1.set_to_L1 hT f := by\n  rw [set_to_fun_eq hT (L1.integrable_coe_fn f), integrable.to_L1_coe_fn]\n#align L1.set_to_fun_eq_set_to_L1 L1.set_to_fun_eq_set_to_L1\n\n",
 "set_to_fun_eq":
 "theorem set_to_fun_eq (hT : dominated_fin_meas_additive μ T C) (hf : integrable f μ) :\n    set_to_fun μ T hT f = L1.set_to_L1 hT (hf.to_L1 f) :=\n  dif_pos hf\n#align set_to_fun_eq set_to_fun_eq\n\n",
 "set_to_fun_const":
 "theorem set_to_fun_const [FiniteMeasure μ] (hT : dominated_fin_meas_additive μ T C) (x : E) :\n    (set_to_fun μ T hT fun _ => x) = T univ x :=\n  by\n  have : (fun _ : α => x) = Set.indicator univ fun _ => x := (indicator_univ _).symm\n  rw [this]\n  exact set_to_fun_indicator_const hT MeasurableSet.univ (measure_ne_top _ _) x\n#align set_to_fun_const set_to_fun_const\n\n",
 "set_to_fun_congr_smul_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_fun_congr_smul_measure (c : ennreal) (hc_ne_top : c ≠ ennreal.top)\n    (hT : dominated_fin_meas_additive μ T C) (hT_smul : dominated_fin_meas_additive («expr • » c μ) T C') (f : α → E) :\n    set_to_fun μ T hT f = set_to_fun («expr • » c μ) T hT_smul f :=\n  by\n  by_cases hc0 : c = 0\n  · simp [hc0] at hT_smul\n    have h : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = 0 := fun s hs hμs => hT_smul.eq_zero hs\n    rw [set_to_fun_zero_left' _ h, set_to_fun_measure_zero]\n    simp [hc0]\n  refine' set_to_fun_congr_measure c⁻¹ c _ hc_ne_top (le_of_eq _) le_rfl hT hT_smul f\n  · simp [hc0]\n  · rw [smul_smul, ENNReal.inv_mul_cancel hc0 hc_ne_top, one_smul]\n#align set_to_fun_congr_smul_measure set_to_fun_congr_smul_measure\n\n",
 "set_to_fun_congr_measure_of_integrable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_fun_congr_measure_of_integrable {μ' : Measure α} (c' : ennreal) (hc' : c' ≠ ennreal.top)\n    (hμ'_le : μ' ≤ «expr • » c' μ) (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ' T C')\n    (f : α → E) (hfμ : integrable f μ) : set_to_fun μ T hT f = set_to_fun μ' T hT' f :=\n  by\n  -- integrability for `μ` implies integrability for `μ'`.\n  have h_int : ∀ g : α → E, integrable g μ → integrable g μ' := fun g hg =>\n    integrable.of_measure_le_smul c' hc' hμ'_le hg\n  -- We use `integrable.induction`\n  refine' hfμ.induction _ _ _ _ _\n  · intro c s hs hμs\n    have hμ's : μ' s ≠ ennreal.top := by\n      refine' ((hμ'_le s hs).trans_lt _).ne\n      rw [measure.smul_apply, smul_eq_mul]\n      exact ENNReal.mul_lt_top hc' hμs.ne\n    rw [set_to_fun_indicator_const hT hs hμs.ne, set_to_fun_indicator_const hT' hs hμ's]\n  · intro f₂ g₂ h_dish hf₂ hg₂ h_eq_f h_eq_g\n    rw [set_to_fun_add hT hf₂ hg₂, set_to_fun_add hT' (h_int f₂ hf₂) (h_int g₂ hg₂), h_eq_f, h_eq_g]\n  · refine' isClosed_eq (continuous_set_to_fun hT) _\n    have :\n      (fun f : measure_theory.L1 α μ E => set_to_fun μ' T hT' f) = fun f : measure_theory.L1 α μ E =>\n        set_to_fun μ' T hT' ((h_int f (L1.integrable_coe_fn f)).to_L1 f) :=\n      by\n      ext1 f\n      exact set_to_fun_congr_ae hT' (integrable.coe_fn_to_L1 _).symm\n    rw [this]\n    exact (continuous_set_to_fun hT').comp (continuous_L1_to_L1 c' hc' hμ'_le)\n  · intro f₂ g₂ hfg hf₂ hf_eq\n    have hfg' : «expr =ᵐ[ ] » f₂ μ' g₂ := (measure.absolutely_continuous_of_le_smul hμ'_le).ae_eq hfg\n    rw [← set_to_fun_congr_ae hT hfg, hf_eq, set_to_fun_congr_ae hT' hfg']\n#align set_to_fun_congr_measure_of_integrable set_to_fun_congr_measure_of_integrable\n\n",
 "set_to_fun_congr_measure_of_add_right":
 "theorem set_to_fun_congr_measure_of_add_right {μ' : Measure α} (hT_add : dominated_fin_meas_additive (μ + μ') T C')\n    (hT : dominated_fin_meas_additive μ T C) (f : α → E) (hf : integrable f (μ + μ')) :\n    set_to_fun (μ + μ') T hT_add f = set_to_fun μ T hT f :=\n  by\n  refine' set_to_fun_congr_measure_of_integrable 1 one_ne_top _ hT_add hT f hf\n  rw [one_smul]\n  nth_rw 1 [← add_zero μ]\n  exact add_le_add le_rfl bot_le\n#align set_to_fun_congr_measure_of_add_right set_to_fun_congr_measure_of_add_right\n\n",
 "set_to_fun_congr_measure_of_add_left":
 "theorem set_to_fun_congr_measure_of_add_left {μ' : Measure α} (hT_add : dominated_fin_meas_additive (μ + μ') T C')\n    (hT : dominated_fin_meas_additive μ' T C) (f : α → E) (hf : integrable f (μ + μ')) :\n    set_to_fun (μ + μ') T hT_add f = set_to_fun μ' T hT f :=\n  by\n  refine' set_to_fun_congr_measure_of_integrable 1 one_ne_top _ hT_add hT f hf\n  rw [one_smul]\n  nth_rw 1 [← zero_add μ']\n  exact add_le_add bot_le le_rfl\n#align set_to_fun_congr_measure_of_add_left set_to_fun_congr_measure_of_add_left\n\n",
 "set_to_fun_congr_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_fun_congr_measure {μ' : Measure α} (c c' : ennreal) (hc : c ≠ ennreal.top) (hc' : c' ≠ ennreal.top)\n    (hμ_le : μ ≤ «expr • » c μ') (hμ'_le : μ' ≤ «expr • » c' μ) (hT : dominated_fin_meas_additive μ T C)\n    (hT' : dominated_fin_meas_additive μ' T C') (f : α → E) : set_to_fun μ T hT f = set_to_fun μ' T hT' f :=\n  by\n  by_cases hf : integrable f μ\n  · exact set_to_fun_congr_measure_of_integrable c' hc' hμ'_le hT hT' f hf\n  · -- if `f` is not integrable, both `set_to_fun` are 0.\n    have h_int : ∀ g : α → E, ¬integrable g μ → ¬integrable g μ' := fun g => mt fun h => h.of_measure_le_smul _ hc hμ_le\n    simp_rw [set_to_fun_undef _ hf, set_to_fun_undef _ (h_int f hf)]\n#align set_to_fun_congr_measure set_to_fun_congr_measure\n\n",
 "set_to_fun_congr_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_fun_congr_left' (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (h : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = T' s) (f : α → E) :\n    set_to_fun μ T hT f = set_to_fun μ T' hT' f :=\n  by\n  by_cases hf : integrable f μ\n  · simp_rw [set_to_fun_eq _ hf, L1.set_to_L1_congr_left' T T' hT hT' h]\n  · simp_rw [set_to_fun_undef _ hf]\n#align set_to_fun_congr_left' set_to_fun_congr_left'\n\n",
 "set_to_fun_congr_left":
 "theorem set_to_fun_congr_left (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (h : T = T') (f : α → E) : set_to_fun μ T hT f = set_to_fun μ T' hT' f :=\n  by\n  by_cases hf : integrable f μ\n  · simp_rw [set_to_fun_eq _ hf, L1.set_to_L1_congr_left T T' hT hT' h]\n  · simp_rw [set_to_fun_undef _ hf]\n#align set_to_fun_congr_left set_to_fun_congr_left\n\n",
 "set_to_fun_congr_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem set_to_fun_congr_ae (hT : dominated_fin_meas_additive μ T C) (h : «expr =ᵐ[ ] » f μ g) :\n    set_to_fun μ T hT f = set_to_fun μ T hT g :=\n  by\n  by_cases hfi : integrable f μ\n  · have hgi : integrable g μ := hfi.congr h\n    rw [set_to_fun_eq hT hfi, set_to_fun_eq hT hgi, (integrable.to_L1_eq_to_L1_iff f g hfi hgi).2 h]\n  · have hgi : ¬integrable g μ := by\n      rw [integrable_congr h] at hfi\n      exact hfi\n    rw [set_to_fun_undef hT hfi, set_to_fun_undef hT hgi]\n#align set_to_fun_congr_ae set_to_fun_congr_ae\n\n",
 "set_to_fun_add_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_fun_add_left' (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (hT'' : dominated_fin_meas_additive μ T'' C'')\n    (h_add : ∀ s, MeasurableSet s → μ s < ennreal.top → T'' s = T s + T' s) (f : α → E) :\n    set_to_fun μ T'' hT'' f = set_to_fun μ T hT f + set_to_fun μ T' hT' f :=\n  by\n  by_cases hf : integrable f μ\n  · simp_rw [set_to_fun_eq _ hf, L1.set_to_L1_add_left' hT hT' hT'' h_add]\n  · simp_rw [set_to_fun_undef _ hf, add_zero]\n#align set_to_fun_add_left' set_to_fun_add_left'\n\n",
 "set_to_fun_add_left":
 "theorem set_to_fun_add_left (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (f : α → E) : set_to_fun μ (T + T') (hT.add hT') f = set_to_fun μ T hT f + set_to_fun μ T' hT' f :=\n  by\n  by_cases hf : integrable f μ\n  · simp_rw [set_to_fun_eq _ hf, L1.set_to_L1_add_left hT hT']\n  · simp_rw [set_to_fun_undef _ hf, add_zero]\n#align set_to_fun_add_left set_to_fun_add_left\n\n",
 "set_to_fun_add":
 "theorem set_to_fun_add (hT : dominated_fin_meas_additive μ T C) (hf : integrable f μ) (hg : integrable g μ) :\n    set_to_fun μ T hT (f + g) = set_to_fun μ T hT f + set_to_fun μ T hT g := by\n  rw [set_to_fun_eq hT (hf.add hg), set_to_fun_eq hT hf, set_to_fun_eq hT hg, integrable.to_L1_add,\n    (L1.set_to_L1 hT).map_add]\n#align set_to_fun_add set_to_fun_add\n\n",
 "set_to_L1s_zero_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_zero_left' {T : Set α → «expr →L[ ] » E (exprℝ) F}\n    (h_zero : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = 0) (f : «expr →₁ₛ[ ] » α μ E) : set_to_L1s T f = 0 :=\n  simple_func.set_to_simple_func_zero' h_zero _ (simple_func.integrable f)\n#align set_to_L1s_zero_left' set_to_L1s_zero_left'\n\n",
 "set_to_L1s_zero_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem set_to_L1s_zero_left (f : «expr →₁ₛ[ ] » α μ E) : set_to_L1s (0 : Set α → «expr →L[ ] » E (exprℝ) F) f = 0 :=\n  simple_func.set_to_simple_func_zero _\n#align set_to_L1s_zero_left set_to_L1s_zero_left\n\n",
 "set_to_L1s_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_sub {T : Set α → «expr →L[ ] » E (exprℝ) F} (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0)\n    (h_add : fin_meas_additive μ T) (f g : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s T (f - g) = set_to_L1s T f - set_to_L1s T g := by\n  rw [sub_eq_add_neg, set_to_L1s_add T h_zero h_add, set_to_L1s_neg h_zero h_add, sub_eq_add_neg]\n#align set_to_L1s_sub set_to_L1s_sub\n\n",
 "set_to_L1s_smul_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_L1s_smul_real (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0)\n    (h_add : fin_meas_additive μ T) (c : exprℝ) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s T («expr • » c f) = «expr • » c (set_to_L1s T f) :=\n  by\n  simp_rw [set_to_L1s]\n  rw [← simple_func.set_to_simple_func_smul_real T h_add c (simple_func.integrable f)]\n  refine' simple_func.set_to_simple_func_congr T h_zero h_add (simple_func.integrable _) _\n  exact smul_to_simple_func c f\n#align set_to_L1s_smul_real set_to_L1s_smul_real\n\n",
 "set_to_L1s_smul_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_L1s_smul_left' (T T' : Set α → «expr →L[ ] » E (exprℝ) F) (c : exprℝ)\n    (h_smul : ∀ s, MeasurableSet s → μ s < ennreal.top → T' s = «expr • » c (T s)) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s T' f = «expr • » c (set_to_L1s T f) :=\n  simple_func.set_to_simple_func_smul_left' T T' c h_smul (simple_func.integrable f)\n#align set_to_L1s_smul_left' set_to_L1s_smul_left'\n\n",
 "set_to_L1s_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_L1s_smul_left (T : Set α → «expr →L[ ] » E (exprℝ) F) (c : exprℝ) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s (fun s => «expr • » c (T s)) f = «expr • » c (set_to_L1s T f) :=\n  simple_func.set_to_simple_func_smul_left T c _\n#align set_to_L1s_smul_left set_to_L1s_smul_left\n\n",
 "set_to_L1s_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_L1s_smul {E} [NormedAddCommGroup E] [NormedSpace (exprℝ) E] [NormedSpace 𝕜 E] [NormedSpace 𝕜 F]\n    (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0)\n    (h_add : fin_meas_additive μ T) (h_smul : ∀ c : 𝕜, ∀ s x, T s («expr • » c x) = «expr • » c (T s x)) (c : 𝕜)\n    (f : «expr →₁ₛ[ ] » α μ E) : set_to_L1s T («expr • » c f) = «expr • » c (set_to_L1s T f) :=\n  by\n  simp_rw [set_to_L1s]\n  rw [← simple_func.set_to_simple_func_smul T h_add h_smul c (simple_func.integrable f)]\n  refine' simple_func.set_to_simple_func_congr T h_zero h_add (simple_func.integrable _) _\n  exact smul_to_simple_func c f\n#align set_to_L1s_smul set_to_L1s_smul\n\n",
 "set_to_L1s_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_nonneg (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0) (h_add : fin_meas_additive μ T)\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) {f : «expr →₁ₛ[ ] » α μ G''}\n    (hf : 0 ≤ f) : 0 ≤ set_to_L1s T f := by\n  simp_rw [set_to_L1s]\n  obtain ⟨f', hf', hff'⟩ : ∃ f' : «expr →ₛ » α G'', 0 ≤ f' ∧ «expr =ᵐ[ ] » (simple_func.to_simple_func f) μ f' :=\n    by\n    obtain ⟨f'', hf'', hff''⟩ := exists_simple_func_nonneg_ae_eq hf\n    exact ⟨f'', hf'', (Lp.simple_func.to_simple_func_eq_to_fun f).trans hff''⟩\n  rw [simple_func.set_to_simple_func_congr _ h_zero h_add (simple_func.integrable _) hff']\n  exact simple_func.set_to_simple_func_nonneg' T hT_nonneg _ hf' ((simple_func.integrable f).congr hff')\n#align set_to_L1s_nonneg set_to_L1s_nonneg\n\n",
 "set_to_L1s_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_neg {T : Set α → «expr →L[ ] » E (exprℝ) F} (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0)\n    (h_add : fin_meas_additive μ T) (f : «expr →₁ₛ[ ] » α μ E) : set_to_L1s T (-f) = -set_to_L1s T f :=\n  by\n  simp_rw [set_to_L1s]\n  have : «expr =ᵐ[ ] » (simple_func.to_simple_func (-f)) μ («expr⇑ » (-simple_func.to_simple_func f)) :=\n    neg_to_simple_func f\n  rw [simple_func.set_to_simple_func_congr T h_zero h_add (simple_func.integrable _) this]\n  exact simple_func.set_to_simple_func_neg T h_add (simple_func.integrable f)\n#align set_to_L1s_neg set_to_L1s_neg\n\n",
 "set_to_L1s_mono_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_mono_left' {T T' : Set α → «expr →L[ ] » E (exprℝ) G''}\n    (hTT' : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, T s x ≤ T' s x) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s T f ≤ set_to_L1s T' f :=\n  simple_func.set_to_simple_func_mono_left' T T' hTT' _ (simple_func.integrable f)\n#align set_to_L1s_mono_left' set_to_L1s_mono_left'\n\n",
 "set_to_L1s_mono_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_mono_left {T T' : Set α → «expr →L[ ] » E (exprℝ) G''} (hTT' : ∀ s x, T s x ≤ T' s x)\n    (f : «expr →₁ₛ[ ] » α μ E) : set_to_L1s T f ≤ set_to_L1s T' f :=\n  simple_func.set_to_simple_func_mono_left T T' hTT' _\n#align set_to_L1s_mono_left set_to_L1s_mono_left\n\n",
 "set_to_L1s_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_mono (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0) (h_add : fin_meas_additive μ T)\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) {f g : «expr →₁ₛ[ ] » α μ G''}\n    (hfg : f ≤ g) : set_to_L1s T f ≤ set_to_L1s T g :=\n  by\n  rw [← sub_nonneg] at hfg⊢\n  rw [← set_to_L1s_sub h_zero h_add]\n  exact set_to_L1s_nonneg h_zero h_add hT_nonneg hfg\n#align set_to_L1s_mono set_to_L1s_mono\n\n",
 "set_to_L1s_indicator_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_L1s_indicator_const {T : Set α → «expr →L[ ] » E (exprℝ) F} {s : Set α}\n    (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0) (h_add : fin_meas_additive μ T) (hs : MeasurableSet s)\n    (hμs : μ s < ennreal.top) (x : E) : set_to_L1s T (simple_func.indicator_const 1 hs hμs.ne x) = T s x :=\n  by\n  have h_empty : T ∅ = 0 := h_zero _ MeasurableSet.empty measure_empty\n  rw [set_to_L1s_eq_set_to_simple_func]\n  refine' Eq.trans _ (simple_func.set_to_simple_func_indicator T h_empty hs x)\n  refine' simple_func.set_to_simple_func_congr T h_zero h_add (simple_func.integrable _) _\n  exact to_simple_func_indicator_const hs hμs.ne x\n#align set_to_L1s_indicator_const set_to_L1s_indicator_const\n\n",
 "set_to_L1s_eq_set_to_simple_func":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_eq_set_to_simple_func (T : Set α → «expr →L[ ] » E (exprℝ) F) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s T f = (to_simple_func f).set_to_simple_func T :=\n  rfl\n#align set_to_L1s_eq_set_to_simple_func set_to_L1s_eq_set_to_simple_func\n\n",
 "set_to_L1s_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem set_to_L1s_const [FiniteMeasure μ] {T : Set α → «expr →L[ ] » E (exprℝ) F}\n    (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0) (h_add : fin_meas_additive μ T) (x : E) :\n    set_to_L1s T (simple_func.indicator_const 1 MeasurableSet.univ (measure_ne_top μ _) x) = T univ x :=\n  set_to_L1s_indicator_const h_zero h_add MeasurableSet.univ (measure_lt_top _ _) x\n#align set_to_L1s_const set_to_L1s_const\n\n",
 "set_to_L1s_congr_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.absolutely_continuous -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- `set_to_L1s` does not change if we replace the measure `μ` by `μ'` with `μ ≪ μ'`. The statement\nuses two functions `f` and `f'` because they have to belong to different types, but morally these\nare the same function (we have `f =ᵐ[μ] f'`). -/\ntheorem set_to_L1s_congr_measure {μ' : Measure α} (T : Set α → «expr →L[ ] » E (exprℝ) F)\n    (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0) (h_add : fin_meas_additive μ T)\n    (hμ : measure.absolutely_continuous μ μ') (f : «expr →₁ₛ[ ] » α μ E) (f' : «expr →₁ₛ[ ] » α μ' E)\n    (h : «expr =ᵐ[ ] » f μ f') : set_to_L1s T f = set_to_L1s T f' :=\n  by\n  refine' simple_func.set_to_simple_func_congr T h_zero h_add (simple_func.integrable f) _\n  refine' (to_simple_func_eq_to_fun f).trans _\n  suffices : «expr =ᵐ[ ] » f' μ («expr⇑ » (simple_func.to_simple_func f'))\n  exact h.trans this\n  have goal' : «expr =ᵐ[ ] » f' μ' (simple_func.to_simple_func f') := (to_simple_func_eq_to_fun f').symm\n  exact hμ.ae_eq goal'\n#align set_to_L1s_congr_measure set_to_L1s_congr_measure\n\n",
 "set_to_L1s_congr_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_congr_left (T T' : Set α → «expr →L[ ] » E (exprℝ) F)\n    (h : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = T' s) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s T f = set_to_L1s T' f :=\n  simple_func.set_to_simple_func_congr_left T T' h (simple_func.to_simple_func f) (simple_func.integrable f)\n#align set_to_L1s_congr_left set_to_L1s_congr_left\n\n",
 "set_to_L1s_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem set_to_L1s_congr (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0)\n    (h_add : fin_meas_additive μ T) {f g : «expr →₁ₛ[ ] » α μ E}\n    (h : «expr =ᵐ[ ] » (to_simple_func f) μ (to_simple_func g)) : set_to_L1s T f = set_to_L1s T g :=\n  simple_func.set_to_simple_func_congr T h_zero h_add (simple_func.integrable f) h\n#align set_to_L1s_congr set_to_L1s_congr\n\n",
 "set_to_L1s_clm_zero_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_clm_zero_left' (hT : dominated_fin_meas_additive μ T C)\n    (h_zero : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = 0) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s_clm α E μ hT f = 0 :=\n  set_to_L1s_zero_left' h_zero f\n#align set_to_L1s_clm_zero_left' set_to_L1s_clm_zero_left'\n\n",
 "set_to_L1s_clm_zero_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n@[simp]\ntheorem set_to_L1s_clm_zero_left (hT : dominated_fin_meas_additive μ (0 : Set α → «expr →L[ ] » E (exprℝ) F) C)\n    (f : «expr →₁ₛ[ ] » α μ E) : set_to_L1s_clm α E μ hT f = 0 :=\n  set_to_L1s_zero_left _\n#align set_to_L1s_clm_zero_left set_to_L1s_clm_zero_left\n\n",
 "set_to_L1s_clm_smul_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_L1s_clm_smul_left' (c : exprℝ) (hT : dominated_fin_meas_additive μ T C)\n    (hT' : dominated_fin_meas_additive μ T' C')\n    (h_smul : ∀ s, MeasurableSet s → μ s < ennreal.top → T' s = «expr • » c (T s)) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s_clm α E μ hT' f = «expr • » c (set_to_L1s_clm α E μ hT f) :=\n  set_to_L1s_smul_left' T T' c h_smul f\n#align set_to_L1s_clm_smul_left' set_to_L1s_clm_smul_left'\n\n",
 "set_to_L1s_clm_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_L1s_clm_smul_left (c : exprℝ) (hT : dominated_fin_meas_additive μ T C) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s_clm α E μ (hT.smul c) f = «expr • » c (set_to_L1s_clm α E μ hT f) :=\n  set_to_L1s_smul_left T c f\n#align set_to_L1s_clm_smul_left set_to_L1s_clm_smul_left\n\n",
 "set_to_L1s_clm_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_clm_nonneg {T : Set α → «expr →L[ ] » G' (exprℝ) G''} {C : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C)\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) {f : «expr →₁ₛ[ ] » α μ G'}\n    (hf : 0 ≤ f) : 0 ≤ set_to_L1s_clm α G' μ hT f :=\n  set_to_L1s_nonneg (fun s => hT.eq_zero_of_measure_zero) hT.1 hT_nonneg hf\n#align set_to_L1s_clm_nonneg set_to_L1s_clm_nonneg\n\n",
 "set_to_L1s_clm_mono_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_clm_mono_left' {T T' : Set α → «expr →L[ ] » E (exprℝ) G''} {C C' : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (hTT' : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, T s x ≤ T' s x) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s_clm α E μ hT f ≤ set_to_L1s_clm α E μ hT' f :=\n  simple_func.set_to_simple_func_mono_left' T T' hTT' _ (simple_func.integrable f)\n#align set_to_L1s_clm_mono_left' set_to_L1s_clm_mono_left'\n\n",
 "set_to_L1s_clm_mono_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_clm_mono_left {T T' : Set α → «expr →L[ ] » E (exprℝ) G''} {C C' : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C') (hTT' : ∀ s x, T s x ≤ T' s x)\n    (f : «expr →₁ₛ[ ] » α μ E) : set_to_L1s_clm α E μ hT f ≤ set_to_L1s_clm α E μ hT' f :=\n  simple_func.set_to_simple_func_mono_left T T' hTT' _\n#align set_to_L1s_clm_mono_left set_to_L1s_clm_mono_left\n\n",
 "set_to_L1s_clm_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_clm_mono {T : Set α → «expr →L[ ] » G' (exprℝ) G''} {C : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C)\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) {f g : «expr →₁ₛ[ ] » α μ G'}\n    (hfg : f ≤ g) : set_to_L1s_clm α G' μ hT f ≤ set_to_L1s_clm α G' μ hT g :=\n  set_to_L1s_mono (fun s => hT.eq_zero_of_measure_zero) hT.1 hT_nonneg hfg\n#align set_to_L1s_clm_mono set_to_L1s_clm_mono\n\n",
 "set_to_L1s_clm_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem set_to_L1s_clm_const [FiniteMeasure μ] {T : Set α → «expr →L[ ] » E (exprℝ) F} {C : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (x : E) :\n    set_to_L1s_clm α E μ hT (simple_func.indicator_const 1 MeasurableSet.univ (measure_ne_top μ _) x) = T univ x :=\n  set_to_L1s_const (fun s => hT.eq_zero_of_measure_zero) hT.1 x\n#align set_to_L1s_clm_const set_to_L1s_clm_const\n\n",
 "set_to_L1s_clm_congr_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure.absolutely_continuous -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem set_to_L1s_clm_congr_measure {μ' : Measure α} (hT : dominated_fin_meas_additive μ T C)\n    (hT' : dominated_fin_meas_additive μ' T C') (hμ : measure.absolutely_continuous μ μ') (f : «expr →₁ₛ[ ] » α μ E)\n    (f' : «expr →₁ₛ[ ] » α μ' E) (h : «expr =ᵐ[ ] » f μ f') :\n    set_to_L1s_clm α E μ hT f = set_to_L1s_clm α E μ' hT' f' :=\n  set_to_L1s_congr_measure T (fun s => hT.eq_zero_of_measure_zero) hT.1 hμ _ _ h\n#align set_to_L1s_clm_congr_measure set_to_L1s_clm_congr_measure\n\n",
 "set_to_L1s_clm_congr_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_clm_congr_left' (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (h : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = T' s) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s_clm α E μ hT f = set_to_L1s_clm α E μ hT' f :=\n  set_to_L1s_congr_left T T' h f\n#align set_to_L1s_clm_congr_left' set_to_L1s_clm_congr_left'\n\n",
 "set_to_L1s_clm_congr_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_clm_congr_left (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (h : T = T') (f : «expr →₁ₛ[ ] » α μ E) : set_to_L1s_clm α E μ hT f = set_to_L1s_clm α E μ hT' f :=\n  set_to_L1s_congr_left T T' (fun _ _ _ => by rw [h]) f\n#align set_to_L1s_clm_congr_left set_to_L1s_clm_congr_left\n\n",
 "set_to_L1s_clm_add_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_clm_add_left' (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (hT'' : dominated_fin_meas_additive μ T'' C'')\n    (h_add : ∀ s, MeasurableSet s → μ s < ennreal.top → T'' s = T s + T' s) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s_clm α E μ hT'' f = set_to_L1s_clm α E μ hT f + set_to_L1s_clm α E μ hT' f :=\n  set_to_L1s_add_left' T T' T'' h_add f\n#align set_to_L1s_clm_add_left' set_to_L1s_clm_add_left'\n\n",
 "set_to_L1s_clm_add_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_clm_add_left (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s_clm α E μ (hT.add hT') f = set_to_L1s_clm α E μ hT f + set_to_L1s_clm α E μ hT' f :=\n  set_to_L1s_add_left T T' f\n#align set_to_L1s_clm_add_left set_to_L1s_clm_add_left\n\n",
 "set_to_L1s_add_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_add_left' (T T' T'' : Set α → «expr →L[ ] » E (exprℝ) F)\n    (h_add : ∀ s, MeasurableSet s → μ s < ennreal.top → T'' s = T s + T' s) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s T'' f = set_to_L1s T f + set_to_L1s T' f :=\n  simple_func.set_to_simple_func_add_left' T T' T'' h_add (simple_func.integrable f)\n#align set_to_L1s_add_left' set_to_L1s_add_left'\n\n",
 "set_to_L1s_add_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_add_left (T T' : Set α → «expr →L[ ] » E (exprℝ) F) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s (T + T') f = set_to_L1s T f + set_to_L1s T' f :=\n  simple_func.set_to_simple_func_add_left T T'\n#align set_to_L1s_add_left set_to_L1s_add_left\n\n",
 "set_to_L1s_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1s_add (T : Set α → «expr →L[ ] » E (exprℝ) F) (h_zero : ∀ s, MeasurableSet s → μ s = 0 → T s = 0)\n    (h_add : fin_meas_additive μ T) (f g : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1s T (f + g) = set_to_L1s T f + set_to_L1s T g :=\n  by\n  simp_rw [set_to_L1s]\n  rw [← simple_func.set_to_simple_func_add T h_add (simple_func.integrable f) (simple_func.integrable g)]\n  exact simple_func.set_to_simple_func_congr T h_zero h_add (simple_func.integrable _) (add_to_simple_func f g)\n#align set_to_L1s_add set_to_L1s_add\n\n",
 "set_to_L1_zero_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_zero_left' (hT : dominated_fin_meas_additive μ T C)\n    (h_zero : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = 0) (f : measure_theory.L1 α μ E) : set_to_L1 hT f = 0 :=\n  by\n  suffices set_to_L1 hT = 0 by\n    rw [this]\n    simp\n  refine' continuous_linear_map.extend_unique (set_to_L1s_clm α E μ hT) _ _ _ _ _\n  ext1 f\n  rw [set_to_L1s_clm_zero_left' hT h_zero f, ContinuousLinearMap.zero_comp, ContinuousLinearMap.zero_apply]\n#align set_to_L1_zero_left' set_to_L1_zero_left'\n\n",
 "set_to_L1_zero_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n@[simp]\ntheorem set_to_L1_zero_left (hT : dominated_fin_meas_additive μ (0 : Set α → «expr →L[ ] » E (exprℝ) F) C)\n    (f : measure_theory.L1 α μ E) : set_to_L1 hT f = 0 :=\n  by\n  suffices set_to_L1 hT = 0 by\n    rw [this]\n    simp\n  refine' continuous_linear_map.extend_unique (set_to_L1s_clm α E μ hT) _ _ _ _ _\n  ext1 f\n  rw [set_to_L1s_clm_zero_left hT f, ContinuousLinearMap.zero_comp, ContinuousLinearMap.zero_apply]\n#align set_to_L1_zero_left set_to_L1_zero_left\n\n",
 "set_to_L1_smul_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_L1_smul_left' (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (c : exprℝ) (h_smul : ∀ s, MeasurableSet s → μ s < ennreal.top → T' s = «expr • » c (T s))\n    (f : measure_theory.L1 α μ E) : set_to_L1 hT' f = «expr • » c (set_to_L1 hT f) :=\n  by\n  suffices set_to_L1 hT' = «expr • » c (set_to_L1 hT) by rw [this, ContinuousLinearMap.smul_apply]\n  refine' continuous_linear_map.extend_unique (set_to_L1s_clm α E μ hT') _ _ _ _ _\n  ext1 f\n  simp only [ContinuousLinearMap.coe_comp', Function.comp_apply, ContinuousLinearMap.smul_comp, Pi.smul_apply,\n    ContinuousLinearMap.coe_smul']\n  suffices «expr • » c (set_to_L1 hT f) = set_to_L1s_clm α E μ hT' f\n    by\n    rw [← this]\n    congr\n  rw [set_to_L1_eq_set_to_L1s_clm, set_to_L1s_clm_smul_left' c hT hT' h_smul]\n#align set_to_L1_smul_left' set_to_L1_smul_left'\n\n",
 "set_to_L1_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_L1_smul_left (hT : dominated_fin_meas_additive μ T C) (c : exprℝ) (f : measure_theory.L1 α μ E) :\n    set_to_L1 (hT.smul c) f = «expr • » c (set_to_L1 hT f) :=\n  by\n  suffices set_to_L1 (hT.smul c) = «expr • » c (set_to_L1 hT) by rw [this, ContinuousLinearMap.smul_apply]\n  refine' continuous_linear_map.extend_unique (set_to_L1s_clm α E μ (hT.smul c)) _ _ _ _ _\n  ext1 f\n  simp only [ContinuousLinearMap.coe_comp', Function.comp_apply, ContinuousLinearMap.smul_comp, Pi.smul_apply,\n    ContinuousLinearMap.coe_smul']\n  suffices «expr • » c (set_to_L1 hT f) = set_to_L1s_clm α E μ (hT.smul c) f\n    by\n    rw [← this]\n    congr\n  rw [set_to_L1_eq_set_to_L1s_clm, set_to_L1s_clm_smul_left c hT]\n#align set_to_L1_smul_left set_to_L1_smul_left\n\n",
 "set_to_L1_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem set_to_L1_smul (hT : dominated_fin_meas_additive μ T C)\n    (h_smul : ∀ c : 𝕜, ∀ s x, T s («expr • » c x) = «expr • » c (T s x)) (c : 𝕜) (f : measure_theory.L1 α μ E) :\n    set_to_L1 hT («expr • » c f) = «expr • » c (set_to_L1 hT f) :=\n  by\n  rw [set_to_L1_eq_set_to_L1' hT h_smul, set_to_L1_eq_set_to_L1' hT h_smul]\n  exact ContinuousLinearMap.map_smul _ _ _\n#align set_to_L1_smul set_to_L1_smul\n\n",
 "set_to_L1_simple_func_indicator_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_L1_simple_func_indicator_const (hT : dominated_fin_meas_additive μ T C) {s : Set α}\n    (hs : MeasurableSet s) (hμs : μ s < ennreal.top) (x : E) :\n    set_to_L1 hT (simple_func.indicator_const 1 hs hμs.ne x) = T s x :=\n  by\n  rw [set_to_L1_eq_set_to_L1s_clm]\n  exact set_to_L1s_indicator_const (fun s => hT.eq_zero_of_measure_zero) hT.1 hs hμs x\n#align set_to_L1_simple_func_indicator_const set_to_L1_simple_func_indicator_const\n\n",
 "set_to_L1_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_nonneg {T : Set α → «expr →L[ ] » G' (exprℝ) G''} {C : exprℝ} (hT : dominated_fin_meas_additive μ T C)\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) {f : measure_theory.L1 α μ G'}\n    (hf : 0 ≤ f) : 0 ≤ set_to_L1 hT f :=\n  by\n  suffices : ∀ f : { g : measure_theory.L1 α μ G' // 0 ≤ g }, 0 ≤ set_to_L1 hT f\n  exact this (⟨f, hf⟩ : { g : measure_theory.L1 α μ G' // 0 ≤ g })\n  refine' fun g =>\n    @isClosed_property { g : «expr →₁ₛ[ ] » α μ G' // 0 ≤ g } { g : measure_theory.L1 α μ G' // 0 ≤ g } _ _ _\n      (dense_range_coe_simple_func_nonneg_to_Lp_nonneg 1 μ G' one_ne_top) _ _ g\n  · exact isClosed_le continuous_zero ((set_to_L1 hT).continuous.comp continuous_induced_dom)\n  · intro g\n    have : (coe_simple_func_nonneg_to_Lp_nonneg 1 μ G' g : measure_theory.L1 α μ G') = (g : «expr →₁ₛ[ ] » α μ G') :=\n      rfl\n    rw [this, set_to_L1_eq_set_to_L1s_clm]\n    exact set_to_L1s_nonneg (fun s => hT.eq_zero_of_measure_zero) hT.1 hT_nonneg g.2\n#align set_to_L1_nonneg set_to_L1_nonneg\n\n",
 "set_to_L1_mono_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_mono_left' {T T' : Set α → «expr →L[ ] » E (exprℝ) G''} {C C' : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (hTT' : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, T s x ≤ T' s x) (f : measure_theory.L1 α μ E) :\n    set_to_L1 hT f ≤ set_to_L1 hT' f :=\n  by\n  refine' Lp.induction one_ne_top _ _ _ _ f\n  · intro c s hs hμs\n    rw [set_to_L1_simple_func_indicator_const hT hs hμs, set_to_L1_simple_func_indicator_const hT' hs hμs]\n    exact hTT' s hs hμs c\n  · intro f g hf hg hfg_disj hf_le hg_le\n    rw [(set_to_L1 hT).map_add, (set_to_L1 hT').map_add]\n    exact add_le_add hf_le hg_le\n  · exact isClosed_le (set_to_L1 hT).continuous (set_to_L1 hT').continuous\n#align set_to_L1_mono_left' set_to_L1_mono_left'\n\n",
 "set_to_L1_mono_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_mono_left {T T' : Set α → «expr →L[ ] » E (exprℝ) G''} {C C' : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C') (hTT' : ∀ s x, T s x ≤ T' s x)\n    (f : measure_theory.L1 α μ E) : set_to_L1 hT f ≤ set_to_L1 hT' f :=\n  set_to_L1_mono_left' hT hT' (fun s _ _ x => hTT' s x) f\n#align set_to_L1_mono_left set_to_L1_mono_left\n\n",
 "set_to_L1_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_mono {T : Set α → «expr →L[ ] » G' (exprℝ) G''} {C : exprℝ} (hT : dominated_fin_meas_additive μ T C)\n    (hT_nonneg : ∀ s, MeasurableSet s → μ s < ennreal.top → ∀ x, 0 ≤ x → 0 ≤ T s x) {f g : measure_theory.L1 α μ G'}\n    (hfg : f ≤ g) : set_to_L1 hT f ≤ set_to_L1 hT g :=\n  by\n  rw [← sub_nonneg] at hfg⊢\n  rw [← (set_to_L1 hT).map_sub]\n  exact set_to_L1_nonneg hT hT_nonneg hfg\n#align set_to_L1_mono set_to_L1_mono\n\n",
 "set_to_L1_lipschitz":
 "theorem set_to_L1_lipschitz (hT : dominated_fin_meas_additive μ T C) : LipschitzWith (Real.toNNReal C) (set_to_L1 hT) :=\n  (set_to_L1 hT).lipschitz.weaken (norm_set_to_L1_le' hT)\n#align set_to_L1_lipschitz set_to_L1_lipschitz\n\n",
 "set_to_L1_indicator_const_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem set_to_L1_indicator_const_Lp (hT : dominated_fin_meas_additive μ T C) {s : Set α} (hs : MeasurableSet s)\n    (hμs : μ s ≠ ennreal.top) (x : E) : set_to_L1 hT (indicator_const_Lp 1 hs hμs x) = T s x :=\n  by\n  rw [← Lp.simple_func.coe_indicator_const hs hμs x]\n  exact set_to_L1_simple_func_indicator_const hT hs hμs.lt_top x\n#align set_to_L1_indicator_const_Lp set_to_L1_indicator_const_Lp\n\n",
 "set_to_L1_eq_set_to_L1s_clm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\ntheorem set_to_L1_eq_set_to_L1s_clm (hT : dominated_fin_meas_additive μ T C) (f : «expr →₁ₛ[ ] » α μ E) :\n    set_to_L1 hT f = set_to_L1s_clm α E μ hT f :=\n  uniformly_extend_of_ind simple_func.uniform_inducing (simple_func.dense_range one_ne_top)\n    (set_to_L1s_clm α E μ hT).uniform_continuous _\n#align set_to_L1_eq_set_to_L1s_clm set_to_L1_eq_set_to_L1s_clm\n\n",
 "set_to_L1_eq_set_to_L1'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_eq_set_to_L1' (hT : dominated_fin_meas_additive μ T C)\n    (h_smul : ∀ c : 𝕜, ∀ s x, T s («expr • » c x) = «expr • » c (T s x)) (f : measure_theory.L1 α μ E) :\n    set_to_L1 hT f = set_to_L1' 𝕜 hT h_smul f :=\n  rfl\n#align set_to_L1_eq_set_to_L1' set_to_L1_eq_set_to_L1'\n\n",
 "set_to_L1_const":
 "theorem set_to_L1_const [FiniteMeasure μ] (hT : dominated_fin_meas_additive μ T C) (x : E) :\n    set_to_L1 hT (indicator_const_Lp 1 MeasurableSet.univ (measure_ne_top _ _) x) = T univ x :=\n  set_to_L1_indicator_const_Lp hT MeasurableSet.univ (measure_ne_top _ _) x\n#align set_to_L1_const set_to_L1_const\n\n",
 "set_to_L1_congr_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_congr_left' (T T' : Set α → «expr →L[ ] » E (exprℝ) F) {C C' : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (h : ∀ s, MeasurableSet s → μ s < ennreal.top → T s = T' s) (f : measure_theory.L1 α μ E) :\n    set_to_L1 hT f = set_to_L1 hT' f :=\n  by\n  suffices set_to_L1 hT = set_to_L1 hT' by rw [this]\n  refine' continuous_linear_map.extend_unique (set_to_L1s_clm α E μ hT) _ _ _ _ _\n  ext1 f\n  suffices set_to_L1 hT' f = set_to_L1s_clm α E μ hT f by\n    rw [← this]\n    congr 1\n  rw [set_to_L1_eq_set_to_L1s_clm]\n  exact (set_to_L1s_clm_congr_left' hT hT' h f).symm\n#align set_to_L1_congr_left' set_to_L1_congr_left'\n\n",
 "set_to_L1_congr_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_congr_left (T T' : Set α → «expr →L[ ] » E (exprℝ) F) {C C' : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C') (h : T = T')\n    (f : measure_theory.L1 α μ E) : set_to_L1 hT f = set_to_L1 hT' f :=\n  by\n  suffices set_to_L1 hT = set_to_L1 hT' by rw [this]\n  refine' continuous_linear_map.extend_unique (set_to_L1s_clm α E μ hT) _ _ _ _ _\n  ext1 f\n  suffices set_to_L1 hT' f = set_to_L1s_clm α E μ hT f by\n    rw [← this]\n    congr 1\n  rw [set_to_L1_eq_set_to_L1s_clm]\n  exact set_to_L1s_clm_congr_left hT' hT h.symm f\n#align set_to_L1_congr_left set_to_L1_congr_left\n\n",
 "set_to_L1_add_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_add_left' (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (hT'' : dominated_fin_meas_additive μ T'' C'')\n    (h_add : ∀ s, MeasurableSet s → μ s < ennreal.top → T'' s = T s + T' s) (f : measure_theory.L1 α μ E) :\n    set_to_L1 hT'' f = set_to_L1 hT f + set_to_L1 hT' f :=\n  by\n  suffices set_to_L1 hT'' = set_to_L1 hT + set_to_L1 hT' by rw [this, ContinuousLinearMap.add_apply]\n  refine' continuous_linear_map.extend_unique (set_to_L1s_clm α E μ hT'') _ _ _ _ _\n  ext1 f\n  simp only [ContinuousLinearMap.add_comp, ContinuousLinearMap.coe_comp', Function.comp_apply,\n    ContinuousLinearMap.add_apply]\n  suffices set_to_L1 hT f + set_to_L1 hT' f = set_to_L1s_clm α E μ hT'' f\n    by\n    rw [← this]\n    congr\n  rw [set_to_L1_eq_set_to_L1s_clm, set_to_L1_eq_set_to_L1s_clm, set_to_L1s_clm_add_left' hT hT' hT'' h_add]\n#align set_to_L1_add_left' set_to_L1_add_left'\n\n",
 "set_to_L1_add_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\ntheorem set_to_L1_add_left (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C')\n    (f : measure_theory.L1 α μ E) : set_to_L1 (hT.add hT') f = set_to_L1 hT f + set_to_L1 hT' f :=\n  by\n  suffices set_to_L1 (hT.add hT') = set_to_L1 hT + set_to_L1 hT' by rw [this, ContinuousLinearMap.add_apply]\n  refine' continuous_linear_map.extend_unique (set_to_L1s_clm α E μ (hT.add hT')) _ _ _ _ _\n  ext1 f\n  simp only [ContinuousLinearMap.add_comp, ContinuousLinearMap.coe_comp', Function.comp_apply,\n    ContinuousLinearMap.add_apply]\n  suffices set_to_L1 hT f + set_to_L1 hT' f = set_to_L1s_clm α E μ (hT.add hT') f\n    by\n    rw [← this]\n    congr\n  rw [set_to_L1_eq_set_to_L1s_clm, set_to_L1_eq_set_to_L1s_clm, set_to_L1s_clm_add_left hT hT']\n#align set_to_L1_add_left set_to_L1_add_left\n\n",
 "of_smul_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem of_smul_measure (c : ennreal) (hc_ne_top : c ≠ ennreal.top)\n    (hT : dominated_fin_meas_additive («expr • » c μ) T C) : dominated_fin_meas_additive μ T (c.to_real * C) :=\n  by\n  have h : ∀ s, MeasurableSet s → «expr • » c (μ s) = ennreal.top → μ s = ennreal.top :=\n    by\n    intro s hs hcμs\n    simp only [hc_ne_top, Algebra.id.smul_eq_mul, WithTop.mul_eq_top_iff, or_false_iff, ne.def, false_and_iff] at hcμs\n    exact hcμs.2\n  refine' ⟨hT.1.of_eq_top_imp_eq_top h, fun s hs hμs => _⟩\n  have hcμs : «expr • » c (μ s) ≠ ennreal.top := mt (h s hs) hμs.ne\n  rw [smul_eq_mul] at hcμs\n  simp_rw [dominated_fin_meas_additive, measure.smul_apply, smul_eq_mul, to_real_mul] at hT\n  refine' (hT.2 s hs hcμs.lt_top).trans (le_of_eq _)\n  ring\n#align of_smul_measure of_smul_measure\n\n",
 "of_measure_le_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem of_measure_le_smul {μ' : Measure α} (c : ennreal) (hc : c ≠ ennreal.top) (h : μ ≤ «expr • » c μ')\n    (hT : dominated_fin_meas_additive μ T C) (hC : 0 ≤ C) : dominated_fin_meas_additive μ' T (c.to_real * C) :=\n  (hT.of_measure_le h hC).of_smul_measure c hc\n#align of_measure_le_smul of_measure_le_smul\n\n",
 "of_measure_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem of_measure_le {μ' : Measure α} (h : μ ≤ μ') (hT : dominated_fin_meas_additive μ T C) (hC : 0 ≤ C) :\n    dominated_fin_meas_additive μ' T C :=\n  by\n  have h' : ∀ s, MeasurableSet s → μ s = ennreal.top → μ' s = ennreal.top :=\n    by\n    intro s hs hμs\n    rw [eq_top_iff, ← hμs]\n    exact h s hs\n  refine' ⟨hT.1.of_eq_top_imp_eq_top h', fun s hs hμ's => _⟩\n  have hμs : μ s < ennreal.top := (h s hs).trans_lt hμ's\n  refine' (hT.2 s hs hμs).trans (mul_le_mul le_rfl _ ENNReal.toReal_nonneg hC)\n  rw [to_real_le_to_real hμs.ne hμ's.ne]\n  exact h s hs\n#align of_measure_le of_measure_le\n\n",
 "of_eq_top_imp_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem of_eq_top_imp_eq_top {μ' : Measure α} (h : ∀ s, MeasurableSet s → μ s = ennreal.top → μ' s = ennreal.top)\n    (hT : fin_meas_additive μ T) : fin_meas_additive μ' T := fun s t hs ht hμ's hμ't hst =>\n  hT s t hs ht (mt (h s hs) hμ's) (mt (h t ht) hμ't) hst\n#align of_eq_top_imp_eq_top of_eq_top_imp_eq_top\n\n",
 "norm_set_to_simple_func_le_sum_op_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_simple_func_le_sum_op_norm {m : MeasurableSpace α} (T : Set α → «expr →L[ ] » F' (exprℝ) F)\n    (f : «expr →ₛ » α F') :\n    «expr‖ ‖» (f.set_to_simple_func T) ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n        («expr‖ ‖» (T («expr ⁻¹' » f {x})) * «expr‖ ‖» x) :=\n  calc\n    «expr‖ ‖»\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n            (T («expr ⁻¹' » f {x}) x)) ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          («expr‖ ‖» (T («expr ⁻¹' » f {x}) x)) :=\n      norm_sum_le _ _\n    _ ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          («expr‖ ‖» (T («expr ⁻¹' » f {x})) * «expr‖ ‖» x) :=\n      by\n      refine' Finset.sum_le_sum fun b hb => _\n      simp_rw [continuous_linear_map.le_op_norm]\n    \n#align norm_set_to_simple_func_le_sum_op_norm norm_set_to_simple_func_le_sum_op_norm\n\n",
 "norm_set_to_simple_func_le_sum_mul_norm_of_integrable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_simple_func_le_sum_mul_norm_of_integrable (T : Set α → «expr →L[ ] » E (exprℝ) F') {C : exprℝ}\n    (hT_norm : ∀ s, MeasurableSet s → μ s < ennreal.top → «expr‖ ‖» (T s) ≤ C * (μ s).to_real) (f : «expr →ₛ » α E)\n    (hf : integrable f μ) :\n    «expr‖ ‖» (f.set_to_simple_func T) ≤\n      C *\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          ((μ («expr ⁻¹' » f {x})).to_real * «expr‖ ‖» x) :=\n  calc\n    «expr‖ ‖» (f.set_to_simple_func T) ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          («expr‖ ‖» (T («expr ⁻¹' » f {x})) * «expr‖ ‖» x) :=\n      norm_set_to_simple_func_le_sum_op_norm T f\n    _ ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          (C * (μ («expr ⁻¹' » f {x})).to_real * «expr‖ ‖» x) :=\n      by\n      refine' Finset.sum_le_sum fun b hb => _\n      obtain rfl | hb := eq_or_ne b 0\n      · simp\n      exact\n        mul_le_mul_of_nonneg_right\n          (hT_norm _ (simple_func.measurable_set_fiber _ _) <|\n            simple_func.measure_preimage_lt_top_of_integrable _ hf hb)\n          (norm_nonneg _)\n    _ ≤\n        C *\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n            ((μ («expr ⁻¹' » f {x})).to_real * «expr‖ ‖» x) :=\n      by simp_rw [mul_sum, ← mul_assoc]\n    \n#align norm_set_to_simple_func_le_sum_mul_norm_of_integrable norm_set_to_simple_func_le_sum_mul_norm_of_integrable\n\n",
 "norm_set_to_simple_func_le_sum_mul_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_simple_func_le_sum_mul_norm (T : Set α → «expr →L[ ] » F (exprℝ) F') {C : exprℝ}\n    (hT_norm : ∀ s, MeasurableSet s → «expr‖ ‖» (T s) ≤ C * (μ s).to_real) (f : «expr →ₛ » α F) :\n    «expr‖ ‖» (f.set_to_simple_func T) ≤\n      C *\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          ((μ («expr ⁻¹' » f {x})).to_real * «expr‖ ‖» x) :=\n  calc\n    «expr‖ ‖» (f.set_to_simple_func T) ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          («expr‖ ‖» (T («expr ⁻¹' » f {x})) * «expr‖ ‖» x) :=\n      norm_set_to_simple_func_le_sum_op_norm T f\n    _ ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n          (C * (μ («expr ⁻¹' » f {x})).to_real * «expr‖ ‖» x) :=\n      (sum_le_sum fun b hb =>\n        mul_le_mul_of_nonneg_right (hT_norm _ <| simple_func.measurable_set_fiber _ _) <| norm_nonneg _)\n    _ ≤\n        C *\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n            ((μ («expr ⁻¹' » f {x})).to_real * «expr‖ ‖» x) :=\n      by simp_rw [mul_sum, ← mul_assoc]\n    \n#align norm_set_to_simple_func_le_sum_mul_norm norm_set_to_simple_func_le_sum_mul_norm\n\n",
 "norm_set_to_fun_le_mul_norm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_fun_le_mul_norm' (hT : dominated_fin_meas_additive μ T C) (f : measure_theory.L1 α μ E) :\n    «expr‖ ‖» (set_to_fun μ T hT f) ≤ max C 0 * «expr‖ ‖» f :=\n  by\n  rw [L1.set_to_fun_eq_set_to_L1]\n  exact L1.norm_set_to_L1_le_mul_norm' hT f\n#align norm_set_to_fun_le_mul_norm' norm_set_to_fun_le_mul_norm'\n\n",
 "norm_set_to_fun_le_mul_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_fun_le_mul_norm (hT : dominated_fin_meas_additive μ T C) (f : measure_theory.L1 α μ E)\n    (hC : 0 ≤ C) : «expr‖ ‖» (set_to_fun μ T hT f) ≤ C * «expr‖ ‖» f :=\n  by\n  rw [L1.set_to_fun_eq_set_to_L1]\n  exact L1.norm_set_to_L1_le_mul_norm hT hC f\n#align norm_set_to_fun_le_mul_norm norm_set_to_fun_le_mul_norm\n\n",
 "norm_set_to_fun_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_fun_le' (hT : dominated_fin_meas_additive μ T C) (hf : integrable f μ) :\n    «expr‖ ‖» (set_to_fun μ T hT f) ≤ max C 0 * «expr‖ ‖» (hf.to_L1 f) :=\n  by\n  rw [set_to_fun_eq hT hf]\n  exact L1.norm_set_to_L1_le_mul_norm' hT _\n#align norm_set_to_fun_le' norm_set_to_fun_le'\n\n",
 "norm_set_to_fun_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_fun_le (hT : dominated_fin_meas_additive μ T C) (hf : integrable f μ) (hC : 0 ≤ C) :\n    «expr‖ ‖» (set_to_fun μ T hT f) ≤ C * «expr‖ ‖» (hf.to_L1 f) :=\n  by\n  rw [set_to_fun_eq hT hf]\n  exact L1.norm_set_to_L1_le_mul_norm hT hC _\n#align norm_set_to_fun_le norm_set_to_fun_le\n\n",
 "norm_set_to_L1s_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_L1s_le (T : Set α → «expr →L[ ] » E (exprℝ) F) {C : exprℝ}\n    (hT_norm : ∀ s, MeasurableSet s → μ s < ennreal.top → «expr‖ ‖» (T s) ≤ C * (μ s).to_real)\n    (f : «expr →₁ₛ[ ] » α μ E) : «expr‖ ‖» (set_to_L1s T f) ≤ C * «expr‖ ‖» f :=\n  by\n  rw [set_to_L1s, norm_eq_sum_mul f]\n  exact simple_func.norm_set_to_simple_func_le_sum_mul_norm_of_integrable T hT_norm _ (simple_func.integrable f)\n#align norm_set_to_L1s_le norm_set_to_L1s_le\n\n",
 "norm_set_to_L1s_clm_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_L1s_clm_le' {T : Set α → «expr →L[ ] » E (exprℝ) F} {C : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) : «expr‖ ‖» (set_to_L1s_clm α E μ hT) ≤ max C 0 :=\n  linear_map.mk_continuous_norm_le' _ _\n#align norm_set_to_L1s_clm_le' norm_set_to_L1s_clm_le'\n\n",
 "norm_set_to_L1s_clm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_L1s_clm_le {T : Set α → «expr →L[ ] » E (exprℝ) F} {C : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) (hC : 0 ≤ C) : «expr‖ ‖» (set_to_L1s_clm α E μ hT) ≤ C :=\n  linear_map.mk_continuous_norm_le _ hC _\n#align norm_set_to_L1s_clm_le norm_set_to_L1s_clm_le\n\n",
 "norm_set_to_L1_le_norm_set_to_L1s_clm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_L1_le_norm_set_to_L1s_clm (hT : dominated_fin_meas_additive μ T C) :\n    «expr‖ ‖» (set_to_L1 hT) ≤ «expr‖ ‖» (set_to_L1s_clm α E μ hT) :=\n  calc\n    «expr‖ ‖» (set_to_L1 hT) ≤ (1 : nnreal) * «expr‖ ‖» (set_to_L1s_clm α E μ hT) :=\n      by\n      refine'\n        continuous_linear_map.op_norm_extend_le (set_to_L1s_clm α E μ hT) (coe_to_Lp α E (exprℝ))\n          (simple_func.dense_range one_ne_top) fun x => le_of_eq _\n      rw [NNReal.coe_one, one_mul]\n      rfl\n    _ = «expr‖ ‖» (set_to_L1s_clm α E μ hT) := by rw [NNReal.coe_one, one_mul]\n    \n#align norm_set_to_L1_le_norm_set_to_L1s_clm norm_set_to_L1_le_norm_set_to_L1s_clm\n\n",
 "norm_set_to_L1_le_mul_norm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_L1_le_mul_norm' (hT : dominated_fin_meas_additive μ T C) (f : measure_theory.L1 α μ E) :\n    «expr‖ ‖» (set_to_L1 hT f) ≤ max C 0 * «expr‖ ‖» f :=\n  calc\n    «expr‖ ‖» (set_to_L1 hT f) ≤ «expr‖ ‖» (set_to_L1s_clm α E μ hT) * «expr‖ ‖» f :=\n      continuous_linear_map.le_of_op_norm_le _ (norm_set_to_L1_le_norm_set_to_L1s_clm hT) _\n    _ ≤ max C 0 * «expr‖ ‖» f := mul_le_mul (norm_set_to_L1s_clm_le' hT) le_rfl (norm_nonneg _) (le_max_right _ _)\n    \n#align norm_set_to_L1_le_mul_norm' norm_set_to_L1_le_mul_norm'\n\n",
 "norm_set_to_L1_le_mul_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_L1_le_mul_norm (hT : dominated_fin_meas_additive μ T C) (hC : 0 ≤ C) (f : measure_theory.L1 α μ E) :\n    «expr‖ ‖» (set_to_L1 hT f) ≤ C * «expr‖ ‖» f :=\n  calc\n    «expr‖ ‖» (set_to_L1 hT f) ≤ «expr‖ ‖» (set_to_L1s_clm α E μ hT) * «expr‖ ‖» f :=\n      continuous_linear_map.le_of_op_norm_le _ (norm_set_to_L1_le_norm_set_to_L1s_clm hT) _\n    _ ≤ C * «expr‖ ‖» f := mul_le_mul (norm_set_to_L1s_clm_le hT hC) le_rfl (norm_nonneg _) hC\n    \n#align norm_set_to_L1_le_mul_norm norm_set_to_L1_le_mul_norm\n\n",
 "norm_set_to_L1_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_L1_le' (hT : dominated_fin_meas_additive μ T C) : «expr‖ ‖» (set_to_L1 hT) ≤ max C 0 :=\n  continuous_linear_map.op_norm_le_bound _ (le_max_right _ _) (norm_set_to_L1_le_mul_norm' hT)\n#align norm_set_to_L1_le' norm_set_to_L1_le'\n\n",
 "norm_set_to_L1_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_set_to_L1_le (hT : dominated_fin_meas_additive μ T C) (hC : 0 ≤ C) : «expr‖ ‖» (set_to_L1 hT) ≤ C :=\n  continuous_linear_map.op_norm_le_bound _ hC (norm_set_to_L1_le_mul_norm hT hC)\n#align norm_set_to_L1_le norm_set_to_L1_le\n\n",
 "norm_eq_sum_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₁ₛ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_eq_sum_mul (f : «expr →₁ₛ[ ] » α μ G) :\n    «expr‖ ‖» f =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (to_simple_func f).range ((μ («expr ⁻¹' » (to_simple_func f) {x})).to_real * «expr‖ ‖» x) :=\n  by\n  rw [norm_to_simple_func, snorm_one_eq_lintegral_nnnorm]\n  have h_eq := simple_func.map_apply (fun x => («expr‖ ‖₊» x : ennreal)) (to_simple_func f)\n  dsimp only at h_eq\n  simp_rw [← h_eq]\n  rw [simple_func.lintegral_eq_lintegral, simple_func.map_lintegral, ENNReal.toReal_sum]\n  · congr\n    ext1 x\n    rw [ENNReal.toReal_mul, mul_comm, ← ofReal_norm_eq_coe_nnnorm, ENNReal.toReal_ofReal (norm_nonneg _)]\n  · intro x hx\n    by_cases hx0 : x = 0\n    · rw [hx0]\n      simp\n    ·\n      exact\n        ENNReal.mul_ne_top ENNReal.coe_ne_top\n          (simple_func.measure_preimage_lt_top_of_integrable _ (simple_func.integrable f) hx0).ne\n#align norm_eq_sum_mul norm_eq_sum_mul\n\n",
 "map_set_to_simple_func":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem map_set_to_simple_func (T : Set α → «expr →L[ ] » F (exprℝ) F') (h_add : fin_meas_additive μ T)\n    {f : «expr →ₛ » α G} (hf : integrable f μ) {g : G → F} (hg : g 0 = 0) :\n    (f.map g).set_to_simple_func T =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" f.range\n        (T («expr ⁻¹' » f {x}) (g x)) :=\n  by\n  have T_empty : T ∅ = 0 := h_add.map_empty_eq_zero\n  have hfp : ∀ x ∈ f.range, x ≠ 0 → μ («expr ⁻¹' » f {x}) ≠ ennreal.top := fun x hx hx0 =>\n    (measure_preimage_lt_top_of_integrable f hf hx0).ne\n  simp only [set_to_simple_func, range_map]\n  refine' Finset.sum_image' _ fun b hb => _\n  rcases mem_range.1 hb with ⟨a, rfl⟩\n  by_cases h0 : g (f a) = 0\n  · simp_rw [h0]\n    rw [ContinuousLinearMap.map_zero, Finset.sum_eq_zero fun x hx => _]\n    rw [mem_filter] at hx\n    rw [hx.2, ContinuousLinearMap.map_zero]\n  have h_left_eq :\n    T («expr ⁻¹' » (map g f) {g (f a)}) (g (f a)) =\n      T («expr ⁻¹' » f ↑(f.range.filter fun b => g b = g (f a))) (g (f a)) :=\n    by\n    congr\n    rw [map_preimage_singleton]\n  rw [h_left_eq]\n  have h_left_eq' :\n    T («expr ⁻¹' » f ↑(Filter (fun b : G => g b = g (f a)) f.range)) (g (f a)) =\n      T\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n          («expr ⁻¹' » f {y}))\n        (g (f a)) :=\n    by\n    congr\n    rw [← Finset.set_bunionᵢ_preimage_singleton]\n  rw [h_left_eq']\n  rw [h_add.map_Union_fin_meas_set_eq_sum T T_empty]\n  · simp only [filter_congr_decidable, sum_apply, ContinuousLinearMap.coe_sum']\n    refine' Finset.sum_congr rfl fun x hx => _\n    rw [mem_filter] at hx\n    rw [hx.2]\n  · exact fun i => measurable_set_fiber _ _\n  · intro i hi\n    rw [mem_filter] at hi\n    refine' hfp i hi.1 fun hi0 => _\n    rw [hi0, hg] at hi\n    exact h0 hi.2.symm\n  · intro i j hi hj hij\n    rw [Set.disjoint_iff]\n    intro x hx\n    rw [Set.mem_inter_iff, Set.mem_preimage, Set.mem_preimage, Set.mem_singleton_iff, Set.mem_singleton_iff] at hx\n    rw [← hx.1, ← hx.2] at hij\n    exact absurd rfl hij\n#align map_set_to_simple_func map_set_to_simple_func\n\n",
 "map_empty_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem map_empty_eq_zero {β} [AddCancelMonoid β] {T : Set α → β} (hT : fin_meas_additive μ T) : T ∅ = 0 :=\n  by\n  have h_empty : μ ∅ ≠ ennreal.top := (measure_empty.le.trans_lt ENNReal.coe_lt_top).ne\n  specialize hT ∅ ∅ MeasurableSet.empty MeasurableSet.empty h_empty h_empty (Set.inter_empty ∅)\n  rw [Set.union_empty] at hT\n  nth_rw 1 [← add_zero (T ∅)] at hT\n  exact (add_left_cancel hT).symm\n#align map_empty_eq_zero map_empty_eq_zero\n\n",
 "map_Union_fin_meas_set_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (i j «expr ∈ » sι) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem map_Union_fin_meas_set_eq_sum (T : Set α → β) (T_empty : T ∅ = 0) (h_add : fin_meas_additive μ T) {ι}\n    (S : ι → Set α) (sι : Finset ι) (hS_meas : ∀ i, MeasurableSet (S i)) (hSp : ∀ i ∈ sι, μ (S i) ≠ ennreal.top)\n    (h_disj : ∀ (i) (_ : i ∈ sι) (j) (_ : j ∈ sι), i ≠ j → Disjoint (S i) (S j)) :\n    T («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (S i)) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" sι (T (S i)) :=\n  by\n  revert hSp h_disj\n  refine' Finset.induction_on sι _ _\n  ·\n    simp only [Finset.not_mem_empty, IsEmpty.forall_iff, Union_false, Union_empty, sum_empty, forall₂_true_iff,\n      imp_true_iff, forall_true_left, not_false_iff, T_empty]\n  intro a s has h hps h_disj\n  rw [Finset.sum_insert has, ← h]\n  swap; · exact fun i hi => hps i (Finset.mem_insert_of_mem hi)\n  swap; · exact fun i hi j hj hij => h_disj i (Finset.mem_insert_of_mem hi) j (Finset.mem_insert_of_mem hj) hij\n  rw [←\n    h_add (S a) («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (S i))\n      (hS_meas a) (measurable_set_bUnion _ fun i _ => hS_meas i) (hps a (Finset.mem_insert_self a s))]\n  · congr\n    convert Finset.supᵢ_insert a s S\n  ·\n    exact\n      ((measure_bUnion_finset_le _ _).trans_lt <|\n          ENNReal.sum_lt_top fun i hi => hps i <| Finset.mem_insert_of_mem hi).ne\n  · simp_rw [Set.inter_unionᵢ]\n    refine' Union_eq_empty.mpr fun i => Union_eq_empty.mpr fun hi => _\n    rw [← Set.disjoint_iff_inter_eq_empty]\n    refine' h_disj a (Finset.mem_insert_self a s) i (Finset.mem_insert_of_mem hi) fun hai => _\n    rw [← hai] at hi\n    exact has hi\n#align map_Union_fin_meas_set_eq_sum map_Union_fin_meas_set_eq_sum\n\n",
 "eq_zero_of_measure_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem eq_zero_of_measure_zero {β : Type _} [NormedAddCommGroup β] {T : Set α → β} {C : exprℝ}\n    (hT : dominated_fin_meas_additive μ T C) {s : Set α} (hs : MeasurableSet s) (hs_zero : μ s = 0) : T s = 0 :=\n  by\n  refine' norm_eq_zero.mp _\n  refine' ((hT.2 s hs (by simp [hs_zero])).trans (le_of_eq _)).antisymm (norm_nonneg _)\n  rw [hs_zero, ENNReal.zero_toReal, MulZeroClass.mul_zero]\n#align eq_zero_of_measure_zero eq_zero_of_measure_zero\n\n",
 "eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem eq_zero {β : Type _} [NormedAddCommGroup β] {T : Set α → β} {C : exprℝ} {m : MeasurableSpace α}\n    (hT : dominated_fin_meas_additive (0 : Measure α) T C) {s : Set α} (hs : MeasurableSet s) : T s = 0 :=\n  eq_zero_of_measure_zero hT hs (by simp only [measure.coe_zero, Pi.zero_apply])\n#align eq_zero eq_zero\n\n",
 "continuous_within_at_set_to_fun_of_dominated":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem continuous_within_at_set_to_fun_of_dominated (hT : dominated_fin_meas_additive μ T C) {fs : X → α → E} {x₀ : X}\n    {bound : α → exprℝ} {s : Set X}\n    (hfs_meas :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        (nhds_within s x₀) (ae_strongly_measurable (fs x) μ))\n    (h_bound :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        (nhds_within s x₀)\n        («expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          («expr‖ ‖» (fs x a) ≤ bound a)))\n    (bound_integrable : integrable bound μ)\n    (h_cont :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (ContinuousWithinAt (fun x => fs x a) s x₀)) :\n    ContinuousWithinAt (fun x => set_to_fun μ T hT (fs x)) s x₀ :=\n  tendsto_set_to_fun_filter_of_dominated_convergence hT bound ‹_› ‹_› ‹_› ‹_›\n#align continuous_within_at_set_to_fun_of_dominated continuous_within_at_set_to_fun_of_dominated\n\n",
 "continuous_set_to_fun_of_dominated":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem continuous_set_to_fun_of_dominated (hT : dominated_fin_meas_additive μ T C) {fs : X → α → E} {bound : α → exprℝ}\n    (hfs_meas : ∀ x, ae_strongly_measurable (fs x) μ)\n    (h_bound :\n      ∀ x,\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          («expr‖ ‖» (fs x a) ≤ bound a))\n    (bound_integrable : integrable bound μ)\n    (h_cont :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (Continuous fun x => fs x a)) :\n    Continuous fun x => set_to_fun μ T hT (fs x) :=\n  continuous_iff_continuousAt.mpr fun x₀ =>\n    continuous_at_set_to_fun_of_dominated hT (eventually_of_forall hfs_meas) (eventually_of_forall h_bound) ‹_› <|\n      h_cont.mono fun _ => Continuous.continuousAt\n#align continuous_set_to_fun_of_dominated continuous_set_to_fun_of_dominated\n\n",
 "continuous_set_to_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n@[continuity]\ntheorem continuous_set_to_fun (hT : dominated_fin_meas_additive μ T C) :\n    Continuous fun f : measure_theory.L1 α μ E => set_to_fun μ T hT f :=\n  by\n  simp_rw [L1.set_to_fun_eq_set_to_L1 hT]\n  exact ContinuousLinearMap.continuous _\n#align continuous_set_to_fun continuous_set_to_fun\n\n",
 "continuous_on_set_to_fun_of_dominated":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem continuous_on_set_to_fun_of_dominated (hT : dominated_fin_meas_additive μ T C) {fs : X → α → E}\n    {bound : α → exprℝ} {s : Set X} (hfs_meas : ∀ x ∈ s, ae_strongly_measurable (fs x) μ)\n    (h_bound :\n      ∀ x ∈ s,\n        «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          («expr‖ ‖» (fs x a) ≤ bound a))\n    (bound_integrable : integrable bound μ)\n    (h_cont :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (ContinuousOn (fun x => fs x a) s)) :\n    ContinuousOn (fun x => set_to_fun μ T hT (fs x)) s :=\n  by\n  intro x hx\n  refine' continuous_within_at_set_to_fun_of_dominated hT _ _ bound_integrable _\n  · filter_upwards [self_mem_nhdsWithin]with x hx using hfs_meas x hx\n  · filter_upwards [self_mem_nhdsWithin]with x hx using h_bound x hx\n  · filter_upwards [h_cont]with a ha using ha x hx\n#align continuous_on_set_to_fun_of_dominated continuous_on_set_to_fun_of_dominated\n\n",
 "continuous_at_set_to_fun_of_dominated":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\ntheorem continuous_at_set_to_fun_of_dominated (hT : dominated_fin_meas_additive μ T C) {fs : X → α → E} {x₀ : X}\n    {bound : α → exprℝ}\n    (hfs_meas :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        ((nhds) x₀) (ae_strongly_measurable (fs x) μ))\n    (h_bound :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        ((nhds) x₀)\n        («expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n          («expr‖ ‖» (fs x a) ≤ bound a)))\n    (bound_integrable : integrable bound μ)\n    (h_cont :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        (ContinuousAt (fun x => fs x a) x₀)) :\n    ContinuousAt (fun x => set_to_fun μ T hT (fs x)) x₀ :=\n  tendsto_set_to_fun_filter_of_dominated_convergence hT bound ‹_› ‹_› ‹_› ‹_›\n#align continuous_at_set_to_fun_of_dominated continuous_at_set_to_fun_of_dominated\n\n",
 "continuous_L1_to_L1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.L1 -/\n/-- Auxiliary lemma for `set_to_fun_congr_measure`: the function sending `f : α →₁[μ] G` to\n`f : α →₁[μ'] G` is continuous when `μ' ≤ c' • μ` for `c' ≠ ∞`. -/\ntheorem continuous_L1_to_L1 {μ' : Measure α} (c' : ennreal) (hc' : c' ≠ ennreal.top) (hμ'_le : μ' ≤ «expr • » c' μ) :\n    Continuous fun f : measure_theory.L1 α μ G =>\n      (integrable.of_measure_le_smul c' hc' hμ'_le (L1.integrable_coe_fn f)).to_L1 f :=\n  by\n  by_cases hc'0 : c' = 0\n  · have hμ'0 : μ' = 0 := by\n      rw [← measure.nonpos_iff_eq_zero']\n      refine' hμ'_le.trans _\n      simp [hc'0]\n    have h_im_zero :\n      (fun f : measure_theory.L1 α μ G =>\n          (integrable.of_measure_le_smul c' hc' hμ'_le (L1.integrable_coe_fn f)).to_L1 f) =\n        0 :=\n      by\n      ext1 f\n      ext1\n      simp_rw [hμ'0]\n      simp only [ae_zero]\n    rw [h_im_zero]\n    exact continuous_zero\n  rw [Metric.continuous_iff]\n  intro f ε hε_pos\n  use ε / 2 / c'.to_real\n  refine' ⟨div_pos (half_pos hε_pos) (to_real_pos hc'0 hc'), _⟩\n  intro g hfg\n  rw [Lp.dist_def] at hfg⊢\n  let h_int := fun f' : measure_theory.L1 α μ G => (L1.integrable_coe_fn f').of_measure_le_smul c' hc' hμ'_le\n  have : snorm (integrable.to_L1 g (h_int g) - integrable.to_L1 f (h_int f)) 1 μ' = snorm (g - f) 1 μ' :=\n    snorm_congr_ae ((integrable.coe_fn_to_L1 _).sub (integrable.coe_fn_to_L1 _))\n  rw [this]\n  have h_snorm_ne_top : snorm (g - f) 1 μ ≠ ennreal.top :=\n    by\n    rw [← snorm_congr_ae (Lp.coe_fn_sub _ _)]\n    exact Lp.snorm_ne_top _\n  have h_snorm_ne_top' : snorm (g - f) 1 μ' ≠ ennreal.top :=\n    by\n    refine' ((snorm_mono_measure _ hμ'_le).trans_lt _).ne\n    rw [snorm_smul_measure_of_ne_zero hc'0, smul_eq_mul]\n    refine' ENNReal.mul_lt_top _ h_snorm_ne_top\n    simp [hc', hc'0]\n  calc\n    (snorm (g - f) 1 μ').to_real ≤ (c' * snorm (g - f) 1 μ).to_real :=\n      by\n      rw [to_real_le_to_real h_snorm_ne_top' (ENNReal.mul_ne_top hc' h_snorm_ne_top)]\n      refine' (snorm_mono_measure («expr⇑ » g - «expr⇑ » f) hμ'_le).trans _\n      rw [snorm_smul_measure_of_ne_zero hc'0, smul_eq_mul]\n      simp\n    _ = c'.to_real * (snorm («expr⇑ » g - «expr⇑ » f) 1 μ).to_real := to_real_mul\n    _ ≤ c'.to_real * (ε / 2 / c'.to_real) := (mul_le_mul le_rfl hfg.le to_real_nonneg to_real_nonneg)\n    _ = ε / 2 := by\n      refine' mul_div_cancel' (ε / 2) _\n      rw [ne.def, to_real_eq_zero_iff]\n      simp [hc', hc'0]\n    _ < ε := half_lt_self hε_pos\n    \n#align continuous_L1_to_L1 continuous_L1_to_L1\n\n",
 "add_measure_right":
 "theorem add_measure_right {m : MeasurableSpace α} (μ ν : Measure α) (hT : dominated_fin_meas_additive μ T C)\n    (hC : 0 ≤ C) : dominated_fin_meas_additive (μ + ν) T C :=\n  of_measure_le (Measure.le_add_right le_rfl) hT hC\n#align add_measure_right add_measure_right\n\n",
 "add_measure_left":
 "theorem add_measure_left {m : MeasurableSpace α} (μ ν : Measure α) (hT : dominated_fin_meas_additive ν T C)\n    (hC : 0 ≤ C) : dominated_fin_meas_additive (μ + ν) T C :=\n  of_measure_le (Measure.le_add_left le_rfl) hT hC\n#align add_measure_left add_measure_left\n\n",
 "add":
 "theorem add (hT : dominated_fin_meas_additive μ T C) (hT' : dominated_fin_meas_additive μ T' C') :\n    dominated_fin_meas_additive μ (T + T') (C + C') :=\n  by\n  refine' ⟨hT.1.add hT'.1, fun s hs hμs => _⟩\n  rw [Pi.add_apply, add_mul]\n  exact (norm_add_le _ _).trans (add_le_add (hT.2 s hs hμs) (hT'.2 s hs hμs))\n#align add add\n\n"}