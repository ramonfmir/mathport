{"union":
 "theorem integrable_on.union (hs : integrable_on f s μ) (ht : integrable_on f t μ) : integrable_on f (s ∪ t) μ :=\n  (hs.add_measure ht).mono_measure <| measure.restrict_union_le _ _\n#align integrable_on.union integrable_on.union\n\n",
 "strongly_measurable_at_filter_of_mem":
 "theorem ae_strongly_measurable.strongly_measurable_at_filter_of_mem {s} (h : ae_strongly_measurable f (μ.restrict s))\n    (hl : s ∈ l) : strongly_measurable_at_filter f l μ :=\n  ⟨s, hl, h⟩\n#align\n  ae_strongly_measurable.strongly_measurable_at_filter_of_mem ae_strongly_measurable.strongly_measurable_at_filter_of_mem\n\n",
 "strongly_measurable_at_filter_nhds_within":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/-- If a function is continuous on a measurable set `s`, then it is measurable at the filter\n  `𝓝[s] x` for all `x`. -/\ntheorem continuous_on.strongly_measurable_at_filter_nhds_within {α β : Type _} [measurable_space α]\n    [topological_space α] [opens_measurable_space α] [topological_space β] [pseudo_metrizable_space β]\n    [second_countable_topology_either α β] {f : α → β} {s : set α} {μ : measure α} (hf : continuous_on f s)\n    (hs : measurable_set s) (x : α) : strongly_measurable_at_filter f (nhds_within s x) μ :=\n  ⟨s, self_mem_nhds_within, hf.ae_strongly_measurable hs⟩\n#align continuous_on.strongly_measurable_at_filter_nhds_within continuous_on.strongly_measurable_at_filter_nhds_within\n\n",
 "strongly_measurable_at_filter":
 "theorem continuous.strongly_measurable_at_filter [topological_space α] [opens_measurable_space α] [topological_space β]\n    [pseudo_metrizable_space β] [second_countable_topology_either α β] {f : α → β} (hf : continuous f) (μ : measure α)\n    (l : filter α) : strongly_measurable_at_filter f l μ :=\n  hf.strongly_measurable.strongly_measurable_at_filter\n#align continuous.strongly_measurable_at_filter continuous.strongly_measurable_at_filter\n\n",
 "strongly_measurable_at_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/-\nCopyright (c) 2021 Rémy Degenne. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Zhouhang Zhou, Yury Kudryashov\n-/\n@[simp]\ntheorem strongly_measurable_at_bot {f : α → β} : strongly_measurable_at_filter f («expr⊥») μ :=\n  ⟨∅, mem_bot, by simp⟩\n#align strongly_measurable_at_bot strongly_measurable_at_bot\n\n",
 "set_lintegral_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem integrable_on.set_lintegral_lt_top {f : α → exprℝ} {s : set α} (hf : integrable_on f s μ) :\n    «expr∫⁻ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ in , ∂ »\" s\n        (ennreal.of_real (f x)) μ <\n      ennreal.top :=\n  integrable.lintegral_lt_top hf\n#align integrable_on.set_lintegral_lt_top integrable_on.set_lintegral_lt_top\n\n",
 "right_of_union":
 "theorem integrable_on.right_of_union (h : integrable_on f (s ∪ t) μ) : integrable_on f t μ :=\n  h.mono_set <| subset_union_right _ _\n#align integrable_on.right_of_union integrable_on.right_of_union\n\n",
 "restrict":
 "theorem integrable_on.restrict (h : integrable_on f s μ) (hs : measurable_set s) : integrable_on f s (μ.restrict t) :=\n  by\n  rw [integrable_on, measure.restrict_restrict hs]\n  exact h.mono_set (inter_subset_left _ _)\n#align integrable_on.restrict integrable_on.restrict\n\n",
 "mono_set_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\ntheorem integrable_on.mono_set_ae (h : integrable_on f t μ) (hst : «expr ≤ᵐ[ ] » s μ t) : integrable_on f s μ :=\n  h.integrable.mono_measure <| measure.restrict_mono_ae hst\n#align integrable_on.mono_set_ae integrable_on.mono_set_ae\n\n",
 "mono_set":
 "theorem integrable_on.mono_set (h : integrable_on f t μ) (hst : s ⊆ t) : integrable_on f s μ :=\n  h.mono hst le_rfl\n#align integrable_on.mono_set integrable_on.mono_set\n\n",
 "mono_measure":
 "theorem integrable_on.mono_measure (h : integrable_on f s ν) (hμ : μ ≤ ν) : integrable_on f s μ :=\n  h.mono (Subset.refl _) hμ\n#align integrable_on.mono_measure integrable_on.mono_measure\n\n",
 "mono":
 "theorem integrable_on.mono (h : integrable_on f t ν) (hs : s ⊆ t) (hμ : μ ≤ ν) : integrable_on f s μ :=\n  h.mono_measure <| measure.restrict_mono hs hμ\n#align integrable_on.mono integrable_on.mono\n\n",
 "lintegral_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem integrable.lintegral_lt_top {f : α → exprℝ} (hf : integrable f μ) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (ennreal.of_real (f x)) μ <\n      ennreal.top :=\n  calc\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          (ennreal.of_real (f x)) μ ≤\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          (↑(«expr‖ ‖₊» (f x))) μ :=\n      lintegral_of_real_le_lintegral_nnnorm f\n    _ < ennreal.top := hf.2\n    \n#align integrable.lintegral_lt_top integrable.lintegral_lt_top\n\n",
 "left_of_union":
 "theorem integrable_on.left_of_union (h : integrable_on f (s ∪ t) μ) : integrable_on f s μ :=\n  h.mono_set <| subset_union_left _ _\n#align integrable_on.left_of_union integrable_on.left_of_union\n\n",
 "integrable_on_zero":
 "theorem integrable_on_zero : integrable_on (fun _ => (0 : E)) s μ :=\n  integrable_zero _ _ _\n#align integrable_on_zero integrable_on_zero\n\n",
 "integrable_on_univ":
 "@[simp]\ntheorem integrable_on_univ : integrable_on f univ μ ↔ integrable f μ := by rw [integrable_on, measure.restrict_univ]\n#align integrable_on_univ integrable_on_univ\n\n",
 "integrable_on_union":
 "@[simp]\ntheorem integrable_on_union : integrable_on f (s ∪ t) μ ↔ integrable_on f s μ ∧ integrable_on f t μ :=\n  ⟨fun h => ⟨h.left_of_union, h.right_of_union⟩, fun h => h.1.union h.2⟩\n#align integrable_on_union integrable_on_union\n\n",
 "integrable_on_singleton_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem integrable_on_singleton_iff {x : α} [measurable_singleton_class α] :\n    integrable_on f {x} μ ↔ f x = 0 ∨ μ {x} < ennreal.top :=\n  by\n  have : «expr =ᵐ[ ] » f (μ.restrict {x}) fun y => f x :=\n    by\n    filter_upwards [ae_restrict_mem (measurable_set_singleton x)] with _ ha\n    simp only [mem_singleton_iff.1 ha]\n  rw [integrable_on, integrable_congr this, integrable_const_iff]\n  simp\n#align integrable_on_singleton_iff integrable_on_singleton_iff\n\n",
 "integrable_on_map_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem _root_.measurable_embedding.integrable_on_map_iff [measurable_space β] {e : α → β} (he : measurable_embedding e)\n    {f : β → E} {μ : measure α} {s : set β} :\n    integrable_on f s (measure.map e μ) ↔ integrable_on (f ∘ e) («expr ⁻¹' » e s) μ := by\n  simp only [integrable_on, he.restrict_map, he.integrable_map_iff]\n#align measurable_embedding.integrable_on_map_iff measurable_embedding.integrable_on_map_iff\n\n",
 "integrable_on_map_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ᵐ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem integrable_on_map_equiv [measurable_space β] (e : «expr ≃ᵐ » α β) {f : β → E} {μ : measure α} {s : set β} :\n    integrable_on f s (measure.map e μ) ↔ integrable_on (f ∘ e) («expr ⁻¹' » e s) μ := by\n  simp only [integrable_on, e.restrict_map, integrable_map_equiv e]\n#align integrable_on_map_equiv integrable_on_map_equiv\n\n",
 "integrable_on_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem measure_preserving.integrable_on_image [measurable_space β] {e : α → β} {ν} (h₁ : measure_preserving e μ ν)\n    (h₂ : measurable_embedding e) {f : β → E} {s : set α} :\n    integrable_on f («expr '' » e s) ν ↔ integrable_on (f ∘ e) s μ :=\n  ((h₁.restrict_image_emb h₂ s).integrable_comp_emb h₂).symm\n#align measure_preserving.integrable_on_image measure_preserving.integrable_on_image\n\n",
 "integrable_on_iff_integrable_of_support_subset":
 "theorem integrable_on_iff_integrable_of_support_subset {f : α → E} {s : set α} (h1s : support f ⊆ s)\n    (h2s : measurable_set s) : integrable_on f s μ ↔ integrable f μ :=\n  by\n  refine' ⟨fun h => _, fun h => h.integrable_on⟩\n  rwa [← indicator_eq_self.2 h1s, integrable_indicator_iff h2s]\n#align integrable_on_iff_integrable_of_support_subset integrable_on_iff_integrable_of_support_subset\n\n",
 "integrable_on_finset_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n@[simp]\ntheorem integrable_on_finset_Union {s : Finset β} {t : β → set α} :\n    integrable_on f\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (t i)) μ ↔\n      ∀ i ∈ s, integrable_on f (t i) μ :=\n  integrable_on_finite_bUnion s.finite_to_set\n#align integrable_on_finset_Union integrable_on_finset_Union\n\n",
 "integrable_on_finite_bUnion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n@[simp]\ntheorem integrable_on_finite_bUnion {s : set β} (hs : s.finite) {t : β → set α} :\n    integrable_on f\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (t i)) μ ↔\n      ∀ i ∈ s, integrable_on f (t i) μ :=\n  by\n  apply hs.induction_on\n  · simp\n  · intro a s ha hs hf\n    simp [hf, or_imp, forall_and]\n#align integrable_on_finite_bUnion integrable_on_finite_bUnion\n\n",
 "integrable_on_finite_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n@[simp]\ntheorem integrable_on_finite_Union [Finite β] {t : β → set α} :\n    integrable_on f\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (t i)) μ ↔\n      ∀ i, integrable_on f (t i) μ :=\n  by\n  cases nonempty_fintype β\n  simpa using @integrable_on_finset_Union _ _ _ _ _ f μ finset.univ t\n#align integrable_on_finite_Union integrable_on_finite_Union\n\n",
 "integrable_on_empty":
 "@[simp]\ntheorem integrable_on_empty : integrable_on f ∅ μ := by simp [integrable_on, integrable_zero_measure]\n#align integrable_on_empty integrable_on_empty\n\n",
 "integrable_on_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n@[simp]\ntheorem integrable_on_const {C : E} : integrable_on (fun _ => C) s μ ↔ C = 0 ∨ μ s < ennreal.top :=\n  integrable_const_iff.trans <| by rw [measure.restrict_apply_univ]\n#align integrable_on_const integrable_on_const\n\n",
 "integrable_on_comp_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem measure_preserving.integrable_on_comp_preimage [measurable_space β] {e : α → β} {ν}\n    (h₁ : measure_preserving e μ ν) (h₂ : measurable_embedding e) {f : β → E} {s : set β} :\n    integrable_on (f ∘ e) («expr ⁻¹' » e s) μ ↔ integrable_on f s ν :=\n  (h₁.restrict_preimage_emb h₂ s).integrable_comp_emb h₂\n#align measure_preserving.integrable_on_comp_preimage measure_preserving.integrable_on_comp_preimage\n\n",
 "integrable_on_add_measure":
 "@[simp]\ntheorem integrable_on_add_measure : integrable_on f s (μ + ν) ↔ integrable_on f s μ ∧ integrable_on f s ν :=\n  ⟨fun h => ⟨h.mono_measure (measure.le_add_right le_rfl), h.mono_measure (measure.le_add_left le_rfl)⟩, fun h =>\n    h.1.add_measure h.2⟩\n#align integrable_on_add_measure integrable_on_add_measure\n\n",
 "integrable_on_Lp_of_measure_ne_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem integrable_on_Lp_of_measure_ne_top {E} [normed_add_comm_group E] {p : ennreal} {s : set α} (f : Lp E p μ)\n    (hp : 1 ≤ p) (hμs : μ s ≠ ennreal.top) : integrable_on f s μ :=\n  by\n  refine' mem_ℒp_one_iff_integrable.mp _\n  have hμ_restrict_univ : (μ.restrict s) Set.univ < ennreal.top := by\n    simpa only [Set.univ_inter, measurable_set.univ, measure.restrict_apply, lt_top_iff_ne_top]\n  haveI hμ_finite : is_finite_measure (μ.restrict s) := ⟨hμ_restrict_univ⟩\n  exact ((Lp.mem_ℒp _).restrict s).mem_ℒp_of_exponent_le hp\n#align integrable_on_Lp_of_measure_ne_top integrable_on_Lp_of_measure_ne_top\n\n",
 "integrable_on'":
 "theorem integrable.integrable_on' (h : integrable f (μ.restrict s)) : integrable_on f s μ :=\n  h\n#align integrable.integrable_on' integrable.integrable_on'\n\n",
 "integrable_on":
 "theorem integrable.integrable_on (h : integrable f μ) : integrable_on f s μ :=\n  h.mono_measure <| measure.restrict_le_self\n#align integrable.integrable_on integrable.integrable_on\n\n",
 "integrable_indicator_iff":
 "theorem integrable_indicator_iff (hs : measurable_set s) : integrable (indicator s f) μ ↔ integrable_on f s μ := by\n  simp [integrable_on, integrable, has_finite_integral, nnnorm_indicator_eq_indicator_nnnorm, ennreal.coe_indicator,\n    lintegral_indicator _ hs, ae_strongly_measurable_indicator_iff hs]\n#align integrable_indicator_iff integrable_indicator_iff\n\n",
 "integrable_indicator_const_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem integrable_indicator_const_Lp {E} [normed_add_comm_group E] {p : ennreal} {s : set α} (hs : measurable_set s)\n    (hμs : μ s ≠ ennreal.top) (c : E) : integrable (indicator_const_Lp p hs hμs c) μ :=\n  by\n  rw [integrable_congr indicator_const_Lp_coe_fn, integrable_indicator_iff hs, integrable_on, integrable_const_iff,\n    lt_top_iff_ne_top]\n  right\n  simpa only [Set.univ_inter, measurable_set.univ, measure.restrict_apply] using hμs\n#align integrable_indicator_const_Lp integrable_indicator_const_Lp\n\n",
 "integrable_indicator":
 "theorem integrable_on.integrable_indicator (h : integrable_on f s μ) (hs : measurable_set s) :\n    integrable (indicator s f) μ :=\n  (integrable_indicator_iff hs).2 h\n#align integrable_on.integrable_indicator integrable_on.integrable_indicator\n\n",
 "integrable_at_nhds_within_of_is_separable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\ntheorem continuous_on.integrable_at_nhds_within_of_is_separable [topological_space α] [pseudo_metrizable_space α]\n    [opens_measurable_space α] {μ : measure α} [is_locally_finite_measure μ] {a : α} {t : set α} {f : α → E}\n    (hft : continuous_on f t) (ht : measurable_set t) (h't : topological_space.is_separable t) (ha : a ∈ t) :\n    integrable_at_filter f (nhds_within t a) μ :=\n  haveI : (nhds_within t a).is_measurably_generated := ht.nhds_within_is_measurably_generated _\n  (hft a ha).integrable_at_filter ⟨_, self_mem_nhds_within, hft.ae_strongly_measurable_of_is_separable ht h't⟩\n    (μ.finite_at_nhds_within _ _)\n#align continuous_on.integrable_at_nhds_within_of_is_separable continuous_on.integrable_at_nhds_within_of_is_separable\n\n",
 "integrable_at_nhds_within":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\ntheorem continuous_on.integrable_at_nhds_within [topological_space α] [second_countable_topology_either α E]\n    [opens_measurable_space α] {μ : measure α} [is_locally_finite_measure μ] {a : α} {t : set α} {f : α → E}\n    (hft : continuous_on f t) (ht : measurable_set t) (ha : a ∈ t) : integrable_at_filter f (nhds_within t a) μ :=\n  haveI : (nhds_within t a).is_measurably_generated := ht.nhds_within_is_measurably_generated _\n  (hft a ha).integrable_at_filter ⟨_, self_mem_nhds_within, hft.ae_strongly_measurable ht⟩ (μ.finite_at_nhds_within _ _)\n#align continuous_on.integrable_at_nhds_within continuous_on.integrable_at_nhds_within\n\n",
 "integrable_at_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem continuous.integrable_at_nhds [topological_space α] [second_countable_topology_either α E]\n    [opens_measurable_space α] {μ : measure α} [is_locally_finite_measure μ] {f : α → E} (hf : continuous f) (a : α) :\n    integrable_at_filter f ((nhds) a) μ := by\n  rw [← nhds_within_univ]\n  exact hf.continuous_on.integrable_at_nhds_within measurable_set.univ (mem_univ a)\n#align continuous.integrable_at_nhds continuous.integrable_at_nhds\n\n",
 "integrable_at_filter_of_tendsto_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem measure.finite_at_filter.integrable_at_filter_of_tendsto_ae {l : filter α} [is_measurably_generated l]\n    (hfm : strongly_measurable_at_filter f l μ) (hμ : μ.finite_at_filter l) {b}\n    (hf : tendsto f («expr ⊓ » l μ.ae) ((nhds) b)) : integrable_at_filter f l μ :=\n  (hμ.inf_of_left.integrable_at_filter (hfm.filter_mono inf_le_left) hf.norm.is_bounded_under_le).of_inf_ae\n#align\n  measure.finite_at_filter.integrable_at_filter_of_tendsto_ae measure.finite_at_filter.integrable_at_filter_of_tendsto_ae\n\n",
 "integrable_at_filter_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem measure.finite_at_filter.integrable_at_filter_of_tendsto {l : filter α} [is_measurably_generated l]\n    (hfm : strongly_measurable_at_filter f l μ) (hμ : μ.finite_at_filter l) {b} (hf : tendsto f l ((nhds) b)) :\n    integrable_at_filter f l μ :=\n  hμ.integrable_at_filter hfm hf.norm.is_bounded_under_le\n#align measure.finite_at_filter.integrable_at_filter_of_tendsto measure.finite_at_filter.integrable_at_filter_of_tendsto\n\n",
 "integrable_at_filter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If `μ` is a measure finite at filter `l` and `f` is a function such that its norm is bounded\nabove at `l`, then `f` is integrable at `l`. -/\ntheorem measure.finite_at_filter.integrable_at_filter {l : filter α} [is_measurably_generated l]\n    (hfm : strongly_measurable_at_filter f l μ) (hμ : μ.finite_at_filter l)\n    (hf : l.is_bounded_under (· ≤ ·) (norm ∘ f)) : integrable_at_filter f l μ :=\n  by\n  obtain ⟨C, hC⟩ :\n    ∃ C,\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        l.small_sets (∀ x ∈ s, «expr‖ ‖» (f x) ≤ C)\n  exact hf.imp fun C hC => eventually_small_sets.2 ⟨_, hC, fun t => id⟩\n  rcases(hfm.eventually.and (hμ.eventually.and hC)).exists_measurable_mem_of_small_sets with ⟨s, hsl, hsm, hfm, hμ, hC⟩\n  refine' ⟨s, hsl, ⟨hfm, has_finite_integral_restrict_of_bounded hμ _⟩⟩\n  exact C\n  rw [ae_restrict_eq hsm, eventually_inf_principal]\n  exact eventually_of_forall hC\n#align measure.finite_at_filter.integrable_at_filter measure.finite_at_filter.integrable_at_filter\n\n",
 "integrable_add_of_disjoint":
 "theorem integrable_add_of_disjoint {f g : α → E} (h : Disjoint (support f) (support g)) (hf : strongly_measurable f)\n    (hg : strongly_measurable g) : integrable (f + g) μ ↔ integrable f μ ∧ integrable g μ :=\n  by\n  refine' ⟨fun hfg => ⟨_, _⟩, fun h => h.1.add h.2⟩\n  · rw [← indicator_add_eq_left h]\n    exact hfg.indicator hf.measurable_set_support\n  · rw [← indicator_add_eq_right h]\n    exact hfg.indicator hg.measurable_set_support\n#align integrable_add_of_disjoint integrable_add_of_disjoint\n\n",
 "integrable":
 "theorem integrable_on.integrable (h : integrable_on f s μ) : integrable f (μ.restrict s) :=\n  h\n#align integrable_on.integrable integrable_on.integrable\n\n",
 "inf_of_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem integrable_at_filter.inf_of_right (hl : integrable_at_filter f l μ) :\n    integrable_at_filter f («expr ⊓ » l' l) μ :=\n  hl.filter_mono inf_le_right\n#align integrable_at_filter.inf_of_right integrable_at_filter.inf_of_right\n\n",
 "inf_of_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem integrable_at_filter.inf_of_left (hl : integrable_at_filter f l μ) :\n    integrable_at_filter f («expr ⊓ » l l') μ :=\n  hl.filter_mono inf_le_left\n#align integrable_at_filter.inf_of_left integrable_at_filter.inf_of_left\n\n",
 "inf_ae_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem integrable_at_filter.inf_ae_iff {l : filter α} :\n    integrable_at_filter f («expr ⊓ » l μ.ae) μ ↔ integrable_at_filter f l μ :=\n  by\n  refine' ⟨_, fun h => h.filter_mono inf_le_left⟩\n  rintro ⟨s, ⟨t, ht, u, hu, rfl⟩, hf⟩\n  refine' ⟨t, ht, _⟩\n  refine' hf.integrable.mono_measure fun v hv => _\n  simp only [measure.restrict_apply hv]\n  refine' measure_mono_ae (mem_of_superset hu fun x hx => _)\n  exact fun ⟨hv, ht⟩ => ⟨hv, ⟨ht, hx⟩⟩\n#align integrable_at_filter.inf_ae_iff integrable_at_filter.inf_ae_iff\n\n",
 "indicator":
 "theorem integrable_on.indicator (h : integrable_on f s μ) (ht : measurable_set t) : integrable_on (indicator t f) s μ :=\n  integrable.indicator h ht\n#align integrable_on.indicator integrable_on.indicator\n\n",
 "has_finite_integral_restrict_of_bounded":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem has_finite_integral_restrict_of_bounded [normed_add_comm_group E] {f : α → E} {s : set α} {μ : measure α} {C}\n    (hs : μ s < ennreal.top)\n    (hf :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n        (μ.restrict s) («expr‖ ‖» (f x) ≤ C)) :\n    has_finite_integral f (μ.restrict s) :=\n  haveI : is_finite_measure (μ.restrict s) := ⟨by rwa [measure.restrict_apply_univ]⟩\n  has_finite_integral_of_bounded hf\n#align has_finite_integral_restrict_of_bounded has_finite_integral_restrict_of_bounded\n\n",
 "filter_mono":
 "theorem integrable_at_filter.filter_mono (hl : l ≤ l') (hl' : integrable_at_filter f l' μ) :\n    integrable_at_filter f l μ :=\n  let ⟨s, hs, hsf⟩ := hl'\n  ⟨s, hl hs, hsf⟩\n#align integrable_at_filter.filter_mono integrable_at_filter.filter_mono\n\n",
 "eventually":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\nprotected theorem integrable_at_filter.eventually (h : integrable_at_filter f l μ) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" l.small_sets\n      (integrable_on f s μ) :=\n  Iff.mpr (eventually_small_sets' fun s t hst ht => ht.mono_set hst) h\n#align integrable_at_filter.eventually integrable_at_filter.eventually\n\n",
 "congr_set_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem integrable_on.congr_set_ae (h : integrable_on f t μ) (hst : «expr =ᵐ[ ] » s μ t) : integrable_on f s μ :=\n  h.mono_set_ae hst.le\n#align integrable_on.congr_set_ae integrable_on.congr_set_ae\n\n",
 "congr_fun'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem integrable_on.congr_fun' (h : integrable_on f s μ) (hst : «expr =ᵐ[ ] » f (μ.restrict s) g) :\n    integrable_on g s μ :=\n  integrable.congr h hst\n#align integrable_on.congr_fun' integrable_on.congr_fun'\n\n",
 "congr_fun":
 "theorem integrable_on.congr_fun (h : integrable_on f s μ) (hst : EqOn f g s) (hs : measurable_set s) :\n    integrable_on g s μ :=\n  h.congr_fun' ((ae_restrict_iff' hs).2 (eventually_of_forall hst))\n#align integrable_on.congr_fun integrable_on.congr_fun\n\n",
 "ae_strongly_measurable_of_is_separable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/-- A function which is continuous on a separable set `s` is almost everywhere strongly measurable\nwith respect to `μ.restrict s`. -/\ntheorem continuous_on.ae_strongly_measurable_of_is_separable [topological_space α] [pseudo_metrizable_space α]\n    [opens_measurable_space α] [topological_space β] [pseudo_metrizable_space β] {f : α → β} {s : set α} {μ : measure α}\n    (hf : continuous_on f s) (hs : measurable_set s) (h's : topological_space.is_separable s) :\n    ae_strongly_measurable f (μ.restrict s) :=\n  by\n  letI := pseudo_metrizable_space_pseudo_metric α\n  borelize β\n  rw [ae_strongly_measurable_iff_ae_measurable_separable]\n  refine' ⟨hf.ae_measurable hs, «expr '' » f s, hf.is_separable_image h's, _⟩\n  exact mem_of_superset (self_mem_ae_restrict hs) (subset_preimage_image _ _)\n#align continuous_on.ae_strongly_measurable_of_is_separable continuous_on.ae_strongly_measurable_of_is_separable\n\n",
 "ae_strongly_measurable_of_is_compact":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/-- A function which is continuous on a compact set `s` is almost everywhere strongly measurable\nwith respect to `μ.restrict s`. -/\ntheorem continuous_on.ae_strongly_measurable_of_is_compact [topological_space α] [opens_measurable_space α]\n    [topological_space β] [pseudo_metrizable_space β] {f : α → β} {s : set α} {μ : measure α} (hf : continuous_on f s)\n    (hs : is_compact s) (h's : measurable_set s) : ae_strongly_measurable f (μ.restrict s) :=\n  by\n  letI := pseudo_metrizable_space_pseudo_metric β\n  borelize β\n  rw [ae_strongly_measurable_iff_ae_measurable_separable]\n  refine' ⟨hf.ae_measurable h's, «expr '' » f s, _, _⟩\n  · exact (hs.image_of_continuous_on hf).is_separable\n  · exact mem_of_superset (self_mem_ae_restrict h's) (subset_preimage_image _ _)\n#align continuous_on.ae_strongly_measurable_of_is_compact continuous_on.ae_strongly_measurable_of_is_compact\n\n",
 "ae_strongly_measurable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/-- A function which is continuous on a set `s` is almost everywhere strongly measurable with\nrespect to `μ.restrict s` when either the source space or the target space is second-countable. -/\ntheorem continuous_on.ae_strongly_measurable [topological_space α] [topological_space β]\n    [h : second_countable_topology_either α β] [opens_measurable_space α] [pseudo_metrizable_space β] {f : α → β}\n    {s : set α} {μ : measure α} (hf : continuous_on f s) (hs : measurable_set s) :\n    ae_strongly_measurable f (μ.restrict s) := by\n  borelize β\n  refine'\n    ae_strongly_measurable_iff_ae_measurable_separable.2\n      ⟨hf.ae_measurable hs, «expr '' » f s, _, mem_of_superset (self_mem_ae_restrict hs) (subset_preimage_image _ _)⟩\n  cases h.out\n  · let f' : s → β := s.restrict f\n    have A : continuous f' := continuous_on_iff_continuous_restrict.1 hf\n    have B : is_separable (univ : set s) := is_separable_of_separable_space _\n    convert is_separable.image B A using 1\n    ext x\n    simp\n  · exact is_separable_of_separable_space _\n#align continuous_on.ae_strongly_measurable continuous_on.ae_strongly_measurable\n\n",
 "ae_measurable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- A function which is continuous on a set `s` is almost everywhere measurable with respect to\n`μ.restrict s`. -/\ntheorem continuous_on.ae_measurable [topological_space α] [opens_measurable_space α] [measurable_space β]\n    [topological_space β] [borel_space β] {f : α → β} {s : set α} {μ : measure α} (hf : continuous_on f s)\n    (hs : measurable_set s) : ae_measurable f (μ.restrict s) :=\n  by\n  nontriviality α; inhabit α\n  have : «expr =ᵐ[ ] » (piecewise s f fun _ => f default) (μ.restrict s) f := piecewise_ae_eq_restrict hs\n  refine' ⟨piecewise s f fun _ => f default, _, this.symm⟩\n  apply measurable_of_is_open\n  intro t ht\n  obtain ⟨u, u_open, hu⟩ : ∃ u : set α, is_open u ∧ «expr ⁻¹' » f t ∩ s = u ∩ s := _root_.continuous_on_iff'.1 hf t ht\n  rw [piecewise_preimage, Set.ite, hu]\n  exact (u_open.measurable_set.inter hs).union ((measurable_const ht.measurable_set).diff hs)\n#align continuous_on.ae_measurable continuous_on.ae_measurable\n\n",
 "add_measure":
 "theorem integrable_on.add_measure (hμ : integrable_on f s μ) (hν : integrable_on f s ν) : integrable_on f s (μ + ν) :=\n  by\n  delta integrable_on\n  rw [measure.restrict_add]\n  exact hμ.integrable.add_measure hν\n#align integrable_on.add_measure integrable_on.add_measure\n\n"}