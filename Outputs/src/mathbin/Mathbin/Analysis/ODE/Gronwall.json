{"norm_le_gronwall_bound_of_norm_deriv_right_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- A Grönwall-like inequality: if `f : ℝ → E` is continuous on `[a, b]`, has right derivative\n`f' x` at every point `x ∈ [a, b)`, and satisfies the inequalities `‖f a‖ ≤ δ`,\n`∀ x ∈ [a, b), ‖f' x‖ ≤ K * ‖f x‖ + ε`, then `‖f x‖` is bounded by `gronwall_bound δ K ε (x - a)`\non `[a, b]`. -/\ntheorem norm_le_gronwall_bound_of_norm_deriv_right_le {f f' : exprℝ → E} {δ K ε : exprℝ} {a b : exprℝ}\n    (hf : ContinuousOn f (Icc a b)) (hf' : ∀ x ∈ Ico a b, has_deriv_within_at f (f' x) (Ici x) x)\n    (ha : «expr‖ ‖» (f a) ≤ δ) (bound : ∀ x ∈ Ico a b, «expr‖ ‖» (f' x) ≤ K * «expr‖ ‖» (f x) + ε) :\n    ∀ x ∈ Icc a b, «expr‖ ‖» (f x) ≤ gronwall_bound δ K ε (x - a) :=\n  le_gronwall_bound_of_liminf_deriv_right_le (continuous_norm.comp_continuous_on hf)\n    (fun x hx r hr => (hf' x hx).liminf_right_slope_norm_le hr) ha bound\n#align norm_le_gronwall_bound_of_norm_deriv_right_le norm_le_gronwall_bound_of_norm_deriv_right_le\n\n",
 "le_gronwall_bound_of_liminf_deriv_right_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/-- A Grönwall-like inequality: if `f : ℝ → ℝ` is continuous on `[a, b]` and satisfies\nthe inequalities `f a ≤ δ` and\n`∀ x ∈ [a, b), liminf_{z→x+0} (f z - f x)/(z - x) ≤ K * (f x) + ε`, then `f x`\nis bounded by `gronwall_bound δ K ε (x - a)` on `[a, b]`.\n\nSee also `norm_le_gronwall_bound_of_norm_deriv_right_le` for a version bounding `‖f x‖`,\n`f : ℝ → E`. -/\ntheorem le_gronwall_bound_of_liminf_deriv_right_le {f f' : exprℝ → exprℝ} {δ K ε : exprℝ} {a b : exprℝ}\n    (hf : ContinuousOn f (Icc a b))\n    (hf' :\n      ∀ x ∈ Ico a b,\n        ∀ r,\n          f' x < r →\n            «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\"\n              (nhds_within.gt x) ((z - x)⁻¹ * (f z - f x) < r))\n    (ha : f a ≤ δ) (bound : ∀ x ∈ Ico a b, f' x ≤ K * f x + ε) : ∀ x ∈ Icc a b, f x ≤ gronwall_bound δ K ε (x - a) :=\n  by\n  have H : ∀ x ∈ Icc a b, ∀ ε' ∈ Ioi ε, f x ≤ gronwall_bound δ K ε' (x - a) :=\n    by\n    intro x hx ε' hε'\n    apply image_le_of_liminf_slope_right_lt_deriv_boundary hf hf'\n    · rwa [sub_self, gronwall_bound_x0]\n    · exact fun x => has_deriv_at_gronwall_bound_shift δ K ε' x a\n    · intro x hx hfB\n      rw [← hfB]\n      apply lt_of_le_of_lt (bound x hx)\n      exact add_lt_add_left hε' _\n    · exact hx\n  intro x hx\n  change f x ≤ (fun ε' => gronwall_bound δ K ε' (x - a)) ε\n  convert continuous_within_at_const.closure_le _ _ (H x hx)\n  · simp only [closure_Ioi, left_mem_Ici]\n  exact (gronwall_bound_continuous_ε δ K (x - a)).continuous_within_at\n#align le_gronwall_bound_of_liminf_deriv_right_le le_gronwall_bound_of_liminf_deriv_right_le\n\n",
 "has_deriv_at_gronwall_bound_shift":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_deriv_at_gronwall_bound_shift (δ K ε x a : exprℝ) :\n    has_deriv_at (fun y => gronwall_bound δ K ε (y - a)) (K * gronwall_bound δ K ε (x - a) + ε) x :=\n  by\n  convert(has_deriv_at_gronwall_bound δ K ε _).comp x ((has_deriv_at_id x).sub_const a)\n  rw [id, mul_one]\n#align has_deriv_at_gronwall_bound_shift has_deriv_at_gronwall_bound_shift\n\n",
 "has_deriv_at_gronwall_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_deriv_at_gronwall_bound (δ K ε x : exprℝ) :\n    has_deriv_at (gronwall_bound δ K ε) (K * gronwall_bound δ K ε x + ε) x :=\n  by\n  by_cases hK : K = 0\n  · subst K\n    simp only [gronwall_bound_K0, MulZeroClass.zero_mul, zero_add]\n    convert((has_deriv_at_id x).const_mul ε).const_add δ\n    rw [mul_one]\n  · simp only [gronwall_bound_of_K_ne_0 hK]\n    convert(((has_deriv_at_id x).const_mul K).exp.const_mul δ).add\n        ((((has_deriv_at_id x).const_mul K).exp.sub_const 1).const_mul (ε / K)) using\n      1\n    simp only [id, mul_add, (mul_assoc _ _ _).symm, mul_comm _ K, mul_div_cancel' _ hK]\n    ring\n#align has_deriv_at_gronwall_bound has_deriv_at_gronwall_bound\n\n",
 "gronwall_bound_ε0_δ0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem gronwall_bound_ε0_δ0 (K x : exprℝ) : gronwall_bound 0 K 0 x = 0 := by\n  simp only [gronwall_bound_ε0, MulZeroClass.zero_mul]\n#align gronwall_bound_ε0_δ0 gronwall_bound_ε0_δ0\n\n",
 "gronwall_bound_ε0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem gronwall_bound_ε0 (δ K x : exprℝ) : gronwall_bound δ K 0 x = δ * exp (K * x) :=\n  by\n  by_cases hK : K = 0\n  · simp only [gronwall_bound_K0, hK, MulZeroClass.zero_mul, exp_zero, add_zero, mul_one]\n  · simp only [gronwall_bound_of_K_ne_0 hK, zero_div, MulZeroClass.zero_mul, add_zero]\n#align gronwall_bound_ε0 gronwall_bound_ε0\n\n",
 "gronwall_bound_x0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem gronwall_bound_x0 (δ K ε : exprℝ) : gronwall_bound δ K ε 0 = δ :=\n  by\n  by_cases hK : K = 0\n  · simp only [gronwall_bound, if_pos hK, MulZeroClass.mul_zero, add_zero]\n  · simp only [gronwall_bound, if_neg hK, MulZeroClass.mul_zero, exp_zero, sub_self, mul_one, add_zero]\n#align gronwall_bound_x0 gronwall_bound_x0\n\n",
 "gronwall_bound_of_K_ne_0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem gronwall_bound_of_K_ne_0 {δ K ε : exprℝ} (hK : K ≠ 0) :\n    gronwall_bound δ K ε = fun x => δ * exp (K * x) + ε / K * (exp (K * x) - 1) :=\n  funext fun x => if_neg hK\n#align gronwall_bound_of_K_ne_0 gronwall_bound_of_K_ne_0\n\n",
 "gronwall_bound_continuous_ε":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem gronwall_bound_continuous_ε (δ K x : exprℝ) : Continuous fun ε => gronwall_bound δ K ε x :=\n  by\n  by_cases hK : K = 0\n  · simp only [gronwall_bound_K0, hK]\n    exact continuous_const.add (continuous_id.mul continuous_const)\n  · simp only [gronwall_bound_of_K_ne_0 hK]\n    exact continuous_const.add ((continuous_id.mul continuous_const).mul continuous_const)\n#align gronwall_bound_continuous_ε gronwall_bound_continuous_ε\n\n",
 "gronwall_bound_K0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2020 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\ntheorem gronwall_bound_K0 (δ ε : exprℝ) : gronwall_bound δ 0 ε = fun x => δ + ε * x :=\n  funext fun x => if_pos rfl\n#align gronwall_bound_K0 gronwall_bound_K0\n\n",
 "dist_le_of_trajectories_ODE_of_mem_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (x y «expr ∈ » s t) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If `f` and `g` are two exact solutions of the same ODE, then the distance between them\ncan't grow faster than exponentially. This is a simple corollary of Grönwall's inequality, and some\npeople call this Grönwall's inequality too.\n\nThis version assumes all inequalities to be true in some time-dependent set `s t`,\nand assumes that the solutions never leave this set. -/\ntheorem dist_le_of_trajectories_ODE_of_mem_set {v : exprℝ → E → E} {s : exprℝ → Set E} {K : exprℝ}\n    (hv : ∀ t, ∀ (x) (_ : x ∈ s t) (y) (_ : y ∈ s t), dist (v t x) (v t y) ≤ K * dist x y) {f g : exprℝ → E}\n    {a b : exprℝ} {δ : exprℝ} (hf : ContinuousOn f (Icc a b))\n    (hf' : ∀ t ∈ Ico a b, has_deriv_within_at f (v t (f t)) (Ici t) t) (hfs : ∀ t ∈ Ico a b, f t ∈ s t)\n    (hg : ContinuousOn g (Icc a b)) (hg' : ∀ t ∈ Ico a b, has_deriv_within_at g (v t (g t)) (Ici t) t)\n    (hgs : ∀ t ∈ Ico a b, g t ∈ s t) (ha : dist (f a) (g a) ≤ δ) :\n    ∀ t ∈ Icc a b, dist (f t) (g t) ≤ δ * exp (K * (t - a)) :=\n  by\n  have f_bound : ∀ t ∈ Ico a b, dist (v t (f t)) (v t (f t)) ≤ 0 :=\n    by\n    intros\n    rw [dist_self]\n  have g_bound : ∀ t ∈ Ico a b, dist (v t (g t)) (v t (g t)) ≤ 0 :=\n    by\n    intros\n    rw [dist_self]\n  intro t ht\n  have := dist_le_of_approx_trajectories_ODE_of_mem_set hv hf hf' f_bound hfs hg hg' g_bound hgs ha t ht\n  rwa [zero_add, gronwall_bound_ε0] at this\n#align dist_le_of_trajectories_ODE_of_mem_set dist_le_of_trajectories_ODE_of_mem_set\n\n",
 "dist_le_of_trajectories_ODE":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If `f` and `g` are two exact solutions of the same ODE, then the distance between them\ncan't grow faster than exponentially. This is a simple corollary of Grönwall's inequality, and some\npeople call this Grönwall's inequality too.\n\nThis version assumes all inequalities to be true in the whole space. -/\ntheorem dist_le_of_trajectories_ODE {v : exprℝ → E → E} {K : nnreal} (hv : ∀ t, LipschitzWith K (v t)) {f g : exprℝ → E}\n    {a b : exprℝ} {δ : exprℝ} (hf : ContinuousOn f (Icc a b))\n    (hf' : ∀ t ∈ Ico a b, has_deriv_within_at f (v t (f t)) (Ici t) t) (hg : ContinuousOn g (Icc a b))\n    (hg' : ∀ t ∈ Ico a b, has_deriv_within_at g (v t (g t)) (Ici t) t) (ha : dist (f a) (g a) ≤ δ) :\n    ∀ t ∈ Icc a b, dist (f t) (g t) ≤ δ * exp (K * (t - a)) :=\n  have hfs : ∀ t ∈ Ico a b, f t ∈ @univ E := fun t ht => trivial\n  dist_le_of_trajectories_ODE_of_mem_set (fun t x hx y hy => (hv t).dist_le_mul x y) hf hf' hfs hg hg'\n    (fun t ht => trivial) ha\n#align dist_le_of_trajectories_ODE dist_le_of_trajectories_ODE\n\n",
 "dist_le_of_approx_trajectories_ODE_of_mem_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (x y «expr ∈ » s t) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If `f` and `g` are two approximate solutions of the same ODE, then the distance between them\ncan't grow faster than exponentially. This is a simple corollary of Grönwall's inequality, and some\npeople call this Grönwall's inequality too.\n\nThis version assumes all inequalities to be true in some time-dependent set `s t`,\nand assumes that the solutions never leave this set. -/\ntheorem dist_le_of_approx_trajectories_ODE_of_mem_set {v : exprℝ → E → E} {s : exprℝ → Set E} {K : exprℝ}\n    (hv : ∀ t, ∀ (x) (_ : x ∈ s t) (y) (_ : y ∈ s t), dist (v t x) (v t y) ≤ K * dist x y) {f g f' g' : exprℝ → E}\n    {a b : exprℝ} {εf εg δ : exprℝ} (hf : ContinuousOn f (Icc a b))\n    (hf' : ∀ t ∈ Ico a b, has_deriv_within_at f (f' t) (Ici t) t)\n    (f_bound : ∀ t ∈ Ico a b, dist (f' t) (v t (f t)) ≤ εf) (hfs : ∀ t ∈ Ico a b, f t ∈ s t)\n    (hg : ContinuousOn g (Icc a b)) (hg' : ∀ t ∈ Ico a b, has_deriv_within_at g (g' t) (Ici t) t)\n    (g_bound : ∀ t ∈ Ico a b, dist (g' t) (v t (g t)) ≤ εg) (hgs : ∀ t ∈ Ico a b, g t ∈ s t)\n    (ha : dist (f a) (g a) ≤ δ) : ∀ t ∈ Icc a b, dist (f t) (g t) ≤ gronwall_bound δ K (εf + εg) (t - a) :=\n  by\n  simp only [dist_eq_norm] at ha⊢\n  have h_deriv : ∀ t ∈ Ico a b, has_deriv_within_at (fun t => f t - g t) (f' t - g' t) (Ici t) t := fun t ht =>\n    (hf' t ht).sub (hg' t ht)\n  apply norm_le_gronwall_bound_of_norm_deriv_right_le (hf.sub hg) h_deriv ha\n  intro t ht\n  have := dist_triangle4_right (f' t) (g' t) (v t (f t)) (v t (g t))\n  rw [dist_eq_norm] at this\n  refine'\n    this.trans\n      ((add_le_add (add_le_add (f_bound t ht) (g_bound t ht)) (hv t (f t) (hfs t ht) (g t) (hgs t ht))).trans _)\n  rw [dist_eq_norm, add_comm]\n#align dist_le_of_approx_trajectories_ODE_of_mem_set dist_le_of_approx_trajectories_ODE_of_mem_set\n\n",
 "dist_le_of_approx_trajectories_ODE":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If `f` and `g` are two approximate solutions of the same ODE, then the distance between them\ncan't grow faster than exponentially. This is a simple corollary of Grönwall's inequality, and some\npeople call this Grönwall's inequality too.\n\nThis version assumes all inequalities to be true in the whole space. -/\ntheorem dist_le_of_approx_trajectories_ODE {v : exprℝ → E → E} {K : nnreal} (hv : ∀ t, LipschitzWith K (v t))\n    {f g f' g' : exprℝ → E} {a b : exprℝ} {εf εg δ : exprℝ} (hf : ContinuousOn f (Icc a b))\n    (hf' : ∀ t ∈ Ico a b, has_deriv_within_at f (f' t) (Ici t) t)\n    (f_bound : ∀ t ∈ Ico a b, dist (f' t) (v t (f t)) ≤ εf) (hg : ContinuousOn g (Icc a b))\n    (hg' : ∀ t ∈ Ico a b, has_deriv_within_at g (g' t) (Ici t) t)\n    (g_bound : ∀ t ∈ Ico a b, dist (g' t) (v t (g t)) ≤ εg) (ha : dist (f a) (g a) ≤ δ) :\n    ∀ t ∈ Icc a b, dist (f t) (g t) ≤ gronwall_bound δ K (εf + εg) (t - a) :=\n  have hfs : ∀ t ∈ Ico a b, f t ∈ @univ E := fun t ht => trivial\n  dist_le_of_approx_trajectories_ODE_of_mem_set (fun t x hx y hy => (hv t).dist_le_mul x y) hf hf' f_bound hfs hg hg'\n    g_bound (fun t ht => trivial) ha\n#align dist_le_of_approx_trajectories_ODE dist_le_of_approx_trajectories_ODE\n\n",
 "ODE_solution_unique_of_mem_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (x y «expr ∈ » s t) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- There exists only one solution of an ODE \\(\\dot x=v(t, x)\\) in a set `s ⊆ ℝ × E` with\na given initial value provided that RHS is Lipschitz continuous in `x` within `s`,\nand we consider only solutions included in `s`. -/\ntheorem ODE_solution_unique_of_mem_set {v : exprℝ → E → E} {s : exprℝ → Set E} {K : exprℝ}\n    (hv : ∀ t, ∀ (x) (_ : x ∈ s t) (y) (_ : y ∈ s t), dist (v t x) (v t y) ≤ K * dist x y) {f g : exprℝ → E}\n    {a b : exprℝ} (hf : ContinuousOn f (Icc a b)) (hf' : ∀ t ∈ Ico a b, has_deriv_within_at f (v t (f t)) (Ici t) t)\n    (hfs : ∀ t ∈ Ico a b, f t ∈ s t) (hg : ContinuousOn g (Icc a b))\n    (hg' : ∀ t ∈ Ico a b, has_deriv_within_at g (v t (g t)) (Ici t) t) (hgs : ∀ t ∈ Ico a b, g t ∈ s t)\n    (ha : f a = g a) : ∀ t ∈ Icc a b, f t = g t := by\n  intro t ht\n  have := dist_le_of_trajectories_ODE_of_mem_set hv hf hf' hfs hg hg' hgs (dist_le_zero.2 ha) t ht\n  rwa [MulZeroClass.zero_mul, dist_le_zero] at this\n#align ODE_solution_unique_of_mem_set ODE_solution_unique_of_mem_set\n\n",
 "ODE_solution_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- There exists only one solution of an ODE \\(\\dot x=v(t, x)\\) with\na given initial value provided that RHS is Lipschitz continuous in `x`. -/\ntheorem ODE_solution_unique {v : exprℝ → E → E} {K : nnreal} (hv : ∀ t, LipschitzWith K (v t)) {f g : exprℝ → E}\n    {a b : exprℝ} (hf : ContinuousOn f (Icc a b)) (hf' : ∀ t ∈ Ico a b, has_deriv_within_at f (v t (f t)) (Ici t) t)\n    (hg : ContinuousOn g (Icc a b)) (hg' : ∀ t ∈ Ico a b, has_deriv_within_at g (v t (g t)) (Ici t) t)\n    (ha : f a = g a) : ∀ t ∈ Icc a b, f t = g t :=\n  have hfs : ∀ t ∈ Ico a b, f t ∈ @univ E := fun t ht => trivial\n  ODE_solution_unique_of_mem_set (fun t x hx y hy => (hv t).dist_le_mul x y) hf hf' hfs hg hg' (fun t ht => trivial) ha\n#align ODE_solution_unique ODE_solution_unique\n\n"}