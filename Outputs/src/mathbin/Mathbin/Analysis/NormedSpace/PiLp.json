{"zero_apply":
 "/- Register simplification lemmas for the applications of `pi_Lp` elements, as the usual lemmas\nfor Pi types will not trigger. -/\n@[simp]\ntheorem zero_apply : (0 : pi_Lp p β) i = 0 :=\n  rfl\n#align zero_apply zero_apply\n\n",
 "uniform_continuous_equiv_symm":
 "theorem uniform_continuous_equiv_symm [∀ i, UniformSpace (β i)] : UniformContinuous (pi_Lp.equiv p β).symm :=\n  uniformContinuous_id\n#align uniform_continuous_equiv_symm uniform_continuous_equiv_symm\n\n",
 "uniform_continuous_equiv":
 "theorem uniform_continuous_equiv [∀ i, UniformSpace (β i)] : UniformContinuous (pi_Lp.equiv p β) :=\n  uniformContinuous_id\n#align uniform_continuous_equiv uniform_continuous_equiv\n\n",
 "supr_edist_ne_top_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- An auxiliary lemma used twice in the proof of `pi_Lp.pseudo_metric_aux` below. Not intended for\nuse outside this file. -/\ntheorem supr_edist_ne_top_aux {ι : Type _} [Finite ι] {α : ι → Type _} [∀ i, PseudoMetricSpace (α i)]\n    (f g : pi_Lp (ennreal.top) α) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (edist (f i) (g i)) ≠\n      «expr⊤» :=\n  by\n  cases nonempty_fintype ι\n  obtain ⟨M, hM⟩ := Fintype.exists_le fun i => (⟨dist (f i) (g i), dist_nonneg⟩ : nnreal)\n  refine' ne_of_lt ((supᵢ_le fun i => _).trans_lt (@ENNReal.coe_lt_top M))\n  simp only [edist, pseudo_metric_space.edist_dist, ENNReal.ofReal_eq_coe_nnreal dist_nonneg]\n  exact_mod_cast hM i\n#align supr_edist_ne_top_aux supr_edist_ne_top_aux\n\n",
 "sub_apply":
 "@[simp]\ntheorem sub_apply : (x - y) i = x i - y i :=\n  rfl\n#align sub_apply sub_apply\n\n",
 "smul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_apply : («expr • » c x) i = «expr • » c (x i) :=\n  rfl\n#align smul_apply smul_apply\n\n",
 "pi_Lp_congr_left_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem _root_.linear_isometry_equiv.pi_Lp_congr_left_symm (e : «expr ≃ » ι ι') :\n    (linear_isometry_equiv.pi_Lp_congr_left p 𝕜 E e).symm = linear_isometry_equiv.pi_Lp_congr_left p 𝕜 E e.symm :=\n  LinearIsometryEquiv.ext fun x => rfl\n#align linear_isometry_equiv.pi_Lp_congr_left_symm linear_isometry_equiv.pi_Lp_congr_left_symm\n\n",
 "pi_Lp_congr_left_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem _root_.linear_isometry_equiv.pi_Lp_congr_left_single [DecidableEq ι] [DecidableEq ι'] (e : «expr ≃ » ι ι')\n    (i : ι) (v : E) : linear_isometry_equiv.pi_Lp_congr_left p 𝕜 E e (Pi.single i v) = Pi.single (e i) v :=\n  by\n  funext x\n  simp [linear_isometry_equiv.pi_Lp_congr_left, LinearEquiv.piCongrLeft', Equiv.piCongrLeft', Pi.single,\n    Function.update, Equiv.symm_apply_eq]\n#align linear_isometry_equiv.pi_Lp_congr_left_single linear_isometry_equiv.pi_Lp_congr_left_single\n\n",
 "pi_Lp_congr_left_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem _root_.linear_isometry_equiv.pi_Lp_congr_left_apply (e : «expr ≃ » ι ι') (v : pi_Lp p fun i : ι => E) :\n    linear_isometry_equiv.pi_Lp_congr_left p 𝕜 E e v = Equiv.piCongrLeft' (fun i : ι => E) e v :=\n  rfl\n#align linear_isometry_equiv.pi_Lp_congr_left_apply linear_isometry_equiv.pi_Lp_congr_left_apply\n\n",
 "norm_sq_eq_of_L2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_sq_eq_of_L2 (β : ι → Type _) [∀ i, SeminormedAddCommGroup (β i)] (x : pi_Lp 2 β) :\n    «expr‖ ‖» x ^ 2 =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        («expr‖ ‖» (x i) ^ 2) :=\n  by\n  suffices\n    «expr‖ ‖₊» x ^ 2 =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        («expr‖ ‖₊» (x i) ^ 2)\n    by simpa only [NNReal.coe_sum] using congr_arg (coe : nnreal → exprℝ) this\n  rw [nnnorm_eq_of_L2, NNReal.sq_sqrt]\n#align norm_sq_eq_of_L2 norm_sq_eq_of_L2\n\n",
 "norm_equiv_symm_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_equiv_symm_one {β} [SeminormedAddCommGroup β] (hp : p ≠ ennreal.top) [One β] :\n    «expr‖ ‖» ((pi_Lp.equiv p fun _ : ι => β).symm 1) = Fintype.card ι ^ (1 / p).to_real * «expr‖ ‖» (1 : β) :=\n  (norm_equiv_symm_const hp (1 : β)).trans rfl\n#align norm_equiv_symm_one norm_equiv_symm_one\n\n",
 "norm_equiv_symm_const'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- When `is_empty ι`, this lemma does not hold without the additional assumption `p ≠ ∞` because\nthe left-hand side simplifies to `0`, while the right-hand side simplifies to `‖b‖₊`. See\n`pi_Lp.norm_equiv_symm_const` for a version which exchanges the hypothesis `nonempty ι`.\nfor `p ≠ ∞`. -/\ntheorem norm_equiv_symm_const' {β} [SeminormedAddCommGroup β] [Nonempty ι] (b : β) :\n    «expr‖ ‖» ((pi_Lp.equiv p fun _ : ι => β).symm (Function.const _ b)) =\n      Fintype.card ι ^ (1 / p).to_real * «expr‖ ‖» b :=\n  (congr_arg coe <| nnnorm_equiv_symm_const' b).trans <| by simp\n#align norm_equiv_symm_const' norm_equiv_symm_const'\n\n",
 "norm_equiv_symm_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- When `p = ∞`, this lemma does not hold without the additional assumption `nonempty ι` because\nthe left-hand side simplifies to `0`, while the right-hand side simplifies to `‖b‖₊`. See\n`pi_Lp.norm_equiv_symm_const'` for a version which exchanges the hypothesis `p ≠ ∞` for\n`nonempty ι`. -/\ntheorem norm_equiv_symm_const {β} [SeminormedAddCommGroup β] (hp : p ≠ ennreal.top) (b : β) :\n    «expr‖ ‖» ((pi_Lp.equiv p fun _ : ι => β).symm (Function.const _ b)) =\n      Fintype.card ι ^ (1 / p).to_real * «expr‖ ‖» b :=\n  (congr_arg coe <| nnnorm_equiv_symm_const hp b).trans <| by simp\n#align norm_equiv_symm_const norm_equiv_symm_const\n\n",
 "norm_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_eq_sum (hp : 0 < p.to_real) (f : pi_Lp p β) :\n    «expr‖ ‖» f =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          («expr‖ ‖» (f i) ^ p.to_real) ^\n        (1 / p.to_real) :=\n  let hp' := ENNReal.toReal_pos_iff.mp hp\n  (if_neg hp'.1.ne').trans (if_neg hp'.2.ne)\n#align norm_eq_sum norm_eq_sum\n\n",
 "norm_eq_of_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem norm_eq_of_nat {p : ennreal} [Fact (1 ≤ p)] {β : ι → Type _} [∀ i, SeminormedAddCommGroup (β i)] (n : ℕ)\n    (h : p = n) (f : pi_Lp p β) :\n    «expr‖ ‖» f =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          («expr‖ ‖» (f i) ^ n) ^\n        (1 / (n : exprℝ)) :=\n  by\n  have := p.to_real_pos_iff_ne_top.mpr (ne_of_eq_of_ne h <| ENNReal.nat_ne_top n)\n  simp only [one_div, h, real.rpow_nat_cast, ENNReal.toReal_nat, eq_self_iff_true, Finset.sum_congr, norm_eq_sum this]\n#align norm_eq_of_nat norm_eq_of_nat\n\n",
 "norm_eq_of_L2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_eq_of_L2 {β : ι → Type _} [∀ i, SeminormedAddCommGroup (β i)] (x : pi_Lp 2 β) :\n    «expr‖ ‖» x =\n      sqrt\n        (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          («expr‖ ‖» (x i) ^ 2)) :=\n  by\n  convert norm_eq_of_nat 2 (by norm_cast) _\n  rw [sqrt_eq_rpow]\n  norm_cast\n#align norm_eq_of_L2 norm_eq_of_L2\n\n",
 "norm_eq_csupr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_eq_csupr (f : pi_Lp (ennreal.top) β) :\n    «expr‖ ‖» f =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr‖ ‖» (f i)) :=\n  by\n  dsimp [norm]\n  exact if_neg ENNReal.top_ne_zero\n#align norm_eq_csupr norm_eq_csupr\n\n",
 "norm_eq_card":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_eq_card (f : pi_Lp 0 β) : «expr‖ ‖» f = { i | f i ≠ 0 }.to_finite.to_finset.card :=\n  if_pos rfl\n#align norm_eq_card norm_eq_card\n\n",
 "nnnorm_equiv_symm_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_equiv_symm_one {β} [SeminormedAddCommGroup β] (hp : p ≠ ennreal.top) [One β] :\n    «expr‖ ‖₊» ((pi_Lp.equiv p fun _ : ι => β).symm 1) = Fintype.card ι ^ (1 / p).to_real * «expr‖ ‖₊» (1 : β) :=\n  (nnnorm_equiv_symm_const hp (1 : β)).trans rfl\n#align nnnorm_equiv_symm_one nnnorm_equiv_symm_one\n\n",
 "nnnorm_equiv_symm_const'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/-- When `is_empty ι`, this lemma does not hold without the additional assumption `p ≠ ∞` because\nthe left-hand side simplifies to `0`, while the right-hand side simplifies to `‖b‖₊`. See\n`pi_Lp.nnnorm_equiv_symm_const` for a version which exchanges the hypothesis `nonempty ι`.\nfor `p ≠ ∞`. -/\ntheorem nnnorm_equiv_symm_const' {β} [SeminormedAddCommGroup β] [Nonempty ι] (b : β) :\n    «expr‖ ‖₊» ((pi_Lp.equiv p fun _ : ι => β).symm (Function.const _ b)) =\n      Fintype.card ι ^ (1 / p).to_real * «expr‖ ‖₊» b :=\n  by\n  rcases em <| p = ennreal.top with (rfl | hp)\n  ·\n    simp only [equiv_symm_apply, ENNReal.div_top, ENNReal.zero_toReal, nnreal.rpow_zero, one_mul, nnnorm_eq_csupr,\n      Function.const_apply, csupᵢ_const]\n  · exact nnnorm_equiv_symm_const hp b\n#align nnnorm_equiv_symm_const' nnnorm_equiv_symm_const'\n\n",
 "nnnorm_equiv_symm_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/-- When `p = ∞`, this lemma does not hold without the additional assumption `nonempty ι` because\nthe left-hand side simplifies to `0`, while the right-hand side simplifies to `‖b‖₊`. See\n`pi_Lp.nnnorm_equiv_symm_const'` for a version which exchanges the hypothesis `p ≠ ∞` for\n`nonempty ι`. -/\ntheorem nnnorm_equiv_symm_const {β} [SeminormedAddCommGroup β] (hp : p ≠ ennreal.top) (b : β) :\n    «expr‖ ‖₊» ((pi_Lp.equiv p fun _ : ι => β).symm (Function.const _ b)) =\n      Fintype.card ι ^ (1 / p).to_real * «expr‖ ‖₊» b :=\n  by\n  rcases p.dichotomy with (h | h)\n  · exact false.elim (hp h)\n  · have ne_zero : p.to_real ≠ 0 := (zero_lt_one.trans_le h).ne'\n    simp_rw [nnnorm_eq_sum hp, equiv_symm_apply, Function.const_apply, Finset.sum_const, Finset.card_univ, nsmul_eq_mul,\n      nnreal.mul_rpow, ← nnreal.rpow_mul, mul_one_div_cancel NeZero, nnreal.rpow_one, ENNReal.toReal_div,\n      ENNReal.one_toReal]\n#align nnnorm_equiv_symm_const nnnorm_equiv_symm_const\n\n",
 "nnnorm_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_eq_sum {p : ennreal} [Fact (1 ≤ p)] {β : ι → Type _} (hp : p ≠ ennreal.top)\n    [∀ i, SeminormedAddCommGroup (β i)] (f : pi_Lp p β) :\n    «expr‖ ‖₊» f =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          («expr‖ ‖₊» (f i) ^ p.to_real) ^\n        (1 / p.to_real) :=\n  by\n  ext\n  simp [NNReal.coe_sum, norm_eq_sum (p.to_real_pos_iff_ne_top.mpr hp)]\n#align nnnorm_eq_sum nnnorm_eq_sum\n\n",
 "nnnorm_eq_of_L2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_eq_of_L2 {β : ι → Type _} [∀ i, SeminormedAddCommGroup (β i)] (x : pi_Lp 2 β) :\n    «expr‖ ‖₊» x =\n      NNReal.sqrt\n        (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          («expr‖ ‖₊» (x i) ^ 2)) :=\n  Subtype.ext <| by\n    push_cast\n    exact norm_eq_of_L2 x\n#align nnnorm_eq_of_L2 nnnorm_eq_of_L2\n\n",
 "nnnorm_eq_csupr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_eq_csupr {β : ι → Type _} [∀ i, SeminormedAddCommGroup (β i)] (f : pi_Lp (ennreal.top) β) :\n    «expr‖ ‖₊» f =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr‖ ‖₊» (f i)) :=\n  by\n  ext\n  simp [NNReal.coe_supᵢ, norm_eq_csupr]\n#align nnnorm_eq_csupr nnnorm_eq_csupr\n\n",
 "nndist_eq_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem nndist_eq_supr {β : ι → Type _} [∀ i, PseudoMetricSpace (β i)] (x y : pi_Lp (ennreal.top) β) :\n    nndist x y =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (nndist (x i) (y i)) :=\n  Subtype.ext <| by\n    push_cast\n    exact dist_eq_csupr _ _\n#align nndist_eq_supr nndist_eq_supr\n\n",
 "nndist_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n-- throughout the rest of the file, we assume `1 ≤ p`\ntheorem nndist_eq_sum {p : ennreal} [Fact (1 ≤ p)] {β : ι → Type _} [∀ i, PseudoMetricSpace (β i)]\n    (hp : p ≠ ennreal.top) (x y : pi_Lp p β) :\n    nndist x y =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (nndist (x i) (y i) ^ p.to_real) ^\n        (1 / p.to_real) :=\n  Subtype.ext <| by\n    push_cast\n    exact dist_eq_sum (p.to_real_pos_iff_ne_top.mpr hp) _ _\n#align nndist_eq_sum nndist_eq_sum\n\n",
 "nndist_eq_of_L2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem nndist_eq_of_L2 {β : ι → Type _} [∀ i, SeminormedAddCommGroup (β i)] (x y : pi_Lp 2 β) :\n    nndist x y =\n      (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (nndist (x i) (y i) ^ 2)).sqrt :=\n  Subtype.ext <| by\n    push_cast\n    exact dist_eq_of_L2 _ _\n#align nndist_eq_of_L2 nndist_eq_of_L2\n\n",
 "neg_apply":
 "@[simp]\ntheorem neg_apply : (-x) i = -x i :=\n  rfl\n#align neg_apply neg_apply\n\n",
 "lipschitz_with_equiv_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem lipschitz_with_equiv_aux : LipschitzWith 1 (pi_Lp.equiv p β) :=\n  by\n  intro x y\n  rcases p.dichotomy with (rfl | h)\n  ·\n    simpa only [ENNReal.coe_one, one_mul, edist_eq_supr, edist, Finset.sup_le_iff, Finset.mem_univ,\n      forall_true_left] using le_supᵢ fun i => edist (x i) (y i)\n  · have cancel : p.to_real * (1 / p.to_real) = 1 := mul_div_cancel' 1 (zero_lt_one.trans_le h).ne'\n    rw [edist_eq_sum (zero_lt_one.trans_le h)]\n    simp only [edist, forall_prop_of_true, one_mul, Finset.mem_univ, Finset.sup_le_iff, ENNReal.coe_one]\n    intro i\n    calc\n      edist (x i) (y i) = (edist (x i) (y i) ^ p.to_real) ^ (1 / p.to_real) := by\n        simp [← ennreal.rpow_mul, cancel, -one_div]\n      _ ≤\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n              (edist (x i) (y i) ^ p.to_real) ^\n            (1 / p.to_real) :=\n        by\n        apply ennreal.rpow_le_rpow _ (one_div_nonneg.2 <| zero_le_one.trans h)\n        exact Finset.single_le_sum (fun i hi => (bot_le : (0 : ennreal) ≤ _)) (Finset.mem_univ i)\n      \n#align lipschitz_with_equiv_aux lipschitz_with_equiv_aux\n\n",
 "lipschitz_with_equiv":
 "theorem lipschitz_with_equiv [∀ i, PseudoEMetricSpace (β i)] : LipschitzWith 1 (pi_Lp.equiv p β) :=\n  lipschitz_with_equiv_aux p β\n#align lipschitz_with_equiv lipschitz_with_equiv\n\n",
 "infty_equiv_isometry":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem infty_equiv_isometry [∀ i, PseudoEMetricSpace (β i)] : Isometry (pi_Lp.equiv (ennreal.top) β) := fun x y =>\n  le_antisymm (by simpa only [ENNReal.coe_one, one_mul] using lipschitz_with_equiv (ennreal.top) β x y)\n    (by\n      simpa only [ENNReal.div_top, ENNReal.zero_toReal, nnreal.rpow_zero, ENNReal.coe_one, one_mul] using\n        antilipschitz_with_equiv (ennreal.top) β x y)\n#align infty_equiv_isometry infty_equiv_isometry\n\n",
 "equiv_zero":
 "@[simp]\ntheorem equiv_zero : pi_Lp.equiv p β 0 = 0 :=\n  rfl\n#align equiv_zero equiv_zero\n\n",
 "equiv_symm_zero":
 "@[simp]\ntheorem equiv_symm_zero : (pi_Lp.equiv p β).symm 0 = 0 :=\n  rfl\n#align equiv_symm_zero equiv_symm_zero\n\n",
 "equiv_symm_sub":
 "@[simp]\ntheorem equiv_symm_sub : (pi_Lp.equiv p β).symm (x' - y') = (pi_Lp.equiv p β).symm x' - (pi_Lp.equiv p β).symm y' :=\n  rfl\n#align equiv_symm_sub equiv_symm_sub\n\n",
 "equiv_symm_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem equiv_symm_smul : (pi_Lp.equiv p β).symm («expr • » c x') = «expr • » c ((pi_Lp.equiv p β).symm x') :=\n  rfl\n#align equiv_symm_smul equiv_symm_smul\n\n",
 "equiv_symm_neg":
 "@[simp]\ntheorem equiv_symm_neg : (pi_Lp.equiv p β).symm (-x') = -(pi_Lp.equiv p β).symm x' :=\n  rfl\n#align equiv_symm_neg equiv_symm_neg\n\n",
 "equiv_symm_apply":
 "@[simp]\ntheorem equiv_symm_apply (x : ∀ i, α i) (i : ι) : (pi_Lp.equiv p α).symm x i = x i :=\n  rfl\n#align equiv_symm_apply equiv_symm_apply\n\n",
 "equiv_symm_add":
 "@[simp]\ntheorem equiv_symm_add : (pi_Lp.equiv p β).symm (x' + y') = (pi_Lp.equiv p β).symm x' + (pi_Lp.equiv p β).symm y' :=\n  rfl\n#align equiv_symm_add equiv_symm_add\n\n",
 "equiv_sub":
 "@[simp]\ntheorem equiv_sub : pi_Lp.equiv p β (x - y) = pi_Lp.equiv p β x - pi_Lp.equiv p β y :=\n  rfl\n#align equiv_sub equiv_sub\n\n",
 "equiv_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem equiv_smul : pi_Lp.equiv p β («expr • » c x) = «expr • » c (pi_Lp.equiv p β x) :=\n  rfl\n#align equiv_smul equiv_smul\n\n",
 "equiv_neg":
 "@[simp]\ntheorem equiv_neg : pi_Lp.equiv p β (-x) = -pi_Lp.equiv p β x :=\n  rfl\n#align equiv_neg equiv_neg\n\n",
 "equiv_apply":
 "/-\nCopyright (c) 2020 Sébastien Gouëzel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Sébastien Gouëzel, Jireh Loreaux\n-/\n@[simp]\ntheorem equiv_apply (x : pi_Lp p α) (i : ι) : pi_Lp.equiv p α x i = x i :=\n  rfl\n#align equiv_apply equiv_apply\n\n",
 "equiv_add":
 "@[simp]\ntheorem equiv_add : pi_Lp.equiv p β (x + y) = pi_Lp.equiv p β x + pi_Lp.equiv p β y :=\n  rfl\n#align equiv_add equiv_add\n\n",
 "edist_self":
 "/-- This holds independent of `p` and does not require `[fact (1 ≤ p)]`. We keep it separate\nfrom `pi_Lp.pseudo_emetric_space` so it can be used also for `p < 1`. -/\nprotected theorem edist_self (f : pi_Lp p β) : edist f f = 0 :=\n  by\n  rcases p.trichotomy with (rfl | rfl | h)\n  · simp [edist_eq_card]\n  · simp [edist_eq_supr]\n  · simp [edist_eq_sum h, ennreal.zero_rpow_of_pos h, ennreal.zero_rpow_of_pos (inv_pos.2 <| h)]\n#align edist_self edist_self\n\n",
 "edist_eq_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem edist_eq_supr (f g : pi_Lp (ennreal.top) β) :\n    edist f g =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (edist (f i) (g i)) :=\n  by\n  dsimp [edist]\n  exact if_neg ENNReal.top_ne_zero\n#align edist_eq_supr edist_eq_supr\n\n",
 "edist_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem edist_eq_sum {p : ennreal} (hp : 0 < p.to_real) (f g : pi_Lp p β) :\n    edist f g =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (edist (f i) (g i) ^ p.to_real) ^\n        (1 / p.to_real) :=\n  let hp' := ENNReal.toReal_pos_iff.mp hp\n  (if_neg hp'.1.ne').trans (if_neg hp'.2.ne)\n#align edist_eq_sum edist_eq_sum\n\n",
 "edist_eq_of_L2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem edist_eq_of_L2 {β : ι → Type _} [∀ i, SeminormedAddCommGroup (β i)] (x y : pi_Lp 2 β) :\n    edist x y =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (edist (x i) (y i) ^ 2) ^\n        (1 / 2 : exprℝ) :=\n  by simp [pi_Lp.edist_eq_sum]\n#align edist_eq_of_L2 edist_eq_of_L2\n\n",
 "edist_eq_card":
 "theorem edist_eq_card (f g : pi_Lp 0 β) : edist f g = { i | f i ≠ g i }.to_finite.to_finset.card :=\n  if_pos rfl\n#align edist_eq_card edist_eq_card\n\n",
 "edist_comm":
 "/-- This holds independent of `p` and does not require `[fact (1 ≤ p)]`. We keep it separate\nfrom `pi_Lp.pseudo_emetric_space` so it can be used also for `p < 1`. -/\nprotected theorem edist_comm (f g : pi_Lp p β) : edist f g = edist g f :=\n  by\n  rcases p.trichotomy with (rfl | rfl | h)\n  · simp only [edist_eq_card, eq_comm, ne.def]\n  · simp only [edist_eq_supr, edist_comm]\n  · simp only [edist_eq_sum h, edist_comm]\n#align edist_comm edist_comm\n\n",
 "dist_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem dist_eq_sum {p : ennreal} (hp : 0 < p.to_real) (f g : pi_Lp p α) :\n    dist f g =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (dist (f i) (g i) ^ p.to_real) ^\n        (1 / p.to_real) :=\n  let hp' := ENNReal.toReal_pos_iff.mp hp\n  (if_neg hp'.1.ne').trans (if_neg hp'.2.ne)\n#align dist_eq_sum dist_eq_sum\n\n",
 "dist_eq_of_L2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem dist_eq_of_L2 {β : ι → Type _} [∀ i, SeminormedAddCommGroup (β i)] (x y : pi_Lp 2 β) :\n    dist x y =\n      (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (dist (x i) (y i) ^ 2)).sqrt :=\n  by simp_rw [dist_eq_norm, norm_eq_of_L2, Pi.sub_apply]\n#align dist_eq_of_L2 dist_eq_of_L2\n\n",
 "dist_eq_csupr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem dist_eq_csupr (f g : pi_Lp (ennreal.top) α) :\n    dist f g =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (dist (f i) (g i)) :=\n  by\n  dsimp [dist]\n  exact if_neg ENNReal.top_ne_zero\n#align dist_eq_csupr dist_eq_csupr\n\n",
 "dist_eq_card":
 "theorem dist_eq_card (f g : pi_Lp 0 α) : dist f g = { i | f i ≠ g i }.to_finite.to_finset.card :=\n  if_pos rfl\n#align dist_eq_card dist_eq_card\n\n",
 "continuous_equiv_symm":
 "@[continuity]\ntheorem continuous_equiv_symm [∀ i, UniformSpace (β i)] : Continuous (pi_Lp.equiv p β).symm :=\n  continuous_id\n#align continuous_equiv_symm continuous_equiv_symm\n\n",
 "continuous_equiv":
 "@[continuity]\ntheorem continuous_equiv [∀ i, UniformSpace (β i)] : Continuous (pi_Lp.equiv p β) :=\n  continuous_id\n#align continuous_equiv continuous_equiv\n\n",
 "basis_toMatrix_basisFun_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n#print basis_toMatrix_basisFun_mul /-\ntheorem basis_toMatrix_basisFun_mul (b : Basis ι 𝕜 (pi_Lp p fun i : ι => 𝕜)) (A : Matrix ι ι 𝕜) :\n    matrix.mul (b.to_matrix (pi_Lp.basis_fun _ _ _)) A =\n      Matrix.of fun i j => b.repr ((pi_Lp.equiv _ _).symm ((matrix.transpose A) j)) i :=\n  by\n  have := basis_toMatrix_basisFun_mul (b.map (pi_Lp.linear_equiv _ 𝕜 _)) A\n  simp_rw [← pi_Lp.basis_fun_map p, basis.map_repr, LinearEquiv.trans_apply, pi_Lp.linear_equiv_symm_apply,\n    Basis.toMatrix_map, Function.comp, Basis.map_apply, LinearEquiv.symm_apply_apply] at this\n  exact this\n#align basis_to_matrix_basis_fun_mul basis_toMatrix_basisFun_mul\n-/\n\n",
 "basis_fun_repr":
 "@[simp]\ntheorem basis_fun_repr (x : pi_Lp p fun i : ι => 𝕜) (i : ι) : (basis_fun p 𝕜 ι).repr x i = x i :=\n  rfl\n#align basis_fun_repr basis_fun_repr\n\n",
 "basis_fun_map":
 "@[simp]\ntheorem basis_fun_map : (basis_fun p 𝕜 ι).map (pi_Lp.linear_equiv p 𝕜 fun _ : ι => 𝕜) = Pi.basisFun 𝕜 ι :=\n  rfl\n#align basis_fun_map basis_fun_map\n\n",
 "basis_fun_eq_pi_basis_fun":
 "theorem basis_fun_eq_pi_basis_fun :\n    basis_fun p 𝕜 ι = (Pi.basisFun 𝕜 ι).map (pi_Lp.linear_equiv p 𝕜 fun _ : ι => 𝕜).symm :=\n  rfl\n#align basis_fun_eq_pi_basis_fun basis_fun_eq_pi_basis_fun\n\n",
 "basis_fun_apply":
 "@[simp]\ntheorem basis_fun_apply [DecidableEq ι] (i) : basis_fun p 𝕜 ι i = (pi_Lp.equiv p _).symm (Pi.single i 1) := by\n  simp_rw [basis_fun, Basis.coe_ofEquivFun, pi_Lp.linear_equiv_symm_apply, Pi.single]\n#align basis_fun_apply basis_fun_apply\n\n",
 "aux_uniformity_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity_of -/\ntheorem aux_uniformity_eq : (uniformity) (pi_Lp p β) = uniformity_of (Pi.uniformSpace _) :=\n  by\n  have A : UniformInducing (pi_Lp.equiv p β) :=\n    (antilipschitz_with_equiv_aux p β).uniform_inducing (lipschitz_with_equiv_aux p β).uniform_continuous\n  have : (fun x : pi_Lp p β × pi_Lp p β => ((pi_Lp.equiv p β) x.fst, (pi_Lp.equiv p β) x.snd)) = id := by ext i <;> rfl\n  rw [← A.comap_uniformity, this, comap_id]\n#align aux_uniformity_eq aux_uniformity_eq\n\n",
 "aux_cobounded_eq":
 "theorem aux_cobounded_eq : cobounded (pi_Lp p α) = @cobounded _ pi.bornology :=\n  calc\n    cobounded (pi_Lp p α) = comap (pi_Lp.equiv p α) (cobounded _) :=\n      le_antisymm (antilipschitz_with_equiv_aux p α).tendsto_cobounded.le_comap\n        (lipschitz_with_equiv_aux p α).comap_cobounded_le\n    _ = _ := comap_id\n    \n#align aux_cobounded_eq aux_cobounded_eq\n\n",
 "antilipschitz_with_equiv_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\ntheorem antilipschitz_with_equiv_aux :\n    AntilipschitzWith ((Fintype.card ι : nnreal) ^ (1 / p).to_real) (pi_Lp.equiv p β) :=\n  by\n  intro x y\n  rcases p.dichotomy with (rfl | h)\n  · simp only [edist_eq_supr, ENNReal.div_top, ENNReal.zero_toReal, nnreal.rpow_zero, ENNReal.coe_one, one_mul,\n      supᵢ_le_iff]\n    exact fun i => Finset.le_sup (Finset.mem_univ i)\n  · have pos : 0 < p.to_real := zero_lt_one.trans_le h\n    have nonneg : 0 ≤ 1 / p.to_real := one_div_nonneg.2 (le_of_lt pos)\n    have cancel : p.to_real * (1 / p.to_real) = 1 := mul_div_cancel' 1 (ne_of_gt pos)\n    rw [edist_eq_sum pos, ENNReal.toReal_div 1 p]\n    simp only [edist, ← one_div, ENNReal.one_toReal]\n    calc\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n              (edist (x i) (y i) ^ p.to_real) ^\n            (1 / p.to_real) ≤\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n              (edist (pi_Lp.equiv p β x) (pi_Lp.equiv p β y) ^ p.to_real) ^\n            (1 / p.to_real) :=\n        by\n        apply ennreal.rpow_le_rpow _ nonneg\n        apply Finset.sum_le_sum fun i hi => _\n        apply ennreal.rpow_le_rpow _ (le_of_lt pos)\n        exact Finset.le_sup (Finset.mem_univ i)\n      _ = ((Fintype.card ι : nnreal) ^ (1 / p.to_real) : nnreal) * edist (pi_Lp.equiv p β x) (pi_Lp.equiv p β y) :=\n        by\n        simp only [nsmul_eq_mul, Finset.card_univ, ennreal.rpow_one, Finset.sum_const,\n          ennreal.mul_rpow_of_nonneg _ _ nonneg, ← ennreal.rpow_mul, cancel]\n        have : (Fintype.card ι : ennreal) = (Fintype.card ι : nnreal) := (ENNReal.coe_nat (Fintype.card ι)).symm\n        rw [this, ennreal.coe_rpow_of_nonneg _ nonneg]\n      \n#align antilipschitz_with_equiv_aux antilipschitz_with_equiv_aux\n\n",
 "antilipschitz_with_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\ntheorem antilipschitz_with_equiv [∀ i, PseudoEMetricSpace (β i)] :\n    AntilipschitzWith ((Fintype.card ι : nnreal) ^ (1 / p).to_real) (pi_Lp.equiv p β) :=\n  antilipschitz_with_equiv_aux p β\n#align antilipschitz_with_equiv antilipschitz_with_equiv\n\n",
 "add_apply":
 "@[simp]\ntheorem add_apply : (x + y) i = x i + y i :=\n  rfl\n#align add_apply add_apply\n\n"}