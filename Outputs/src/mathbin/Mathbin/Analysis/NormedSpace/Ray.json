{"sameRay_iff_of_norm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print sameRay_iff_of_norm_eq /-\n/-- Two vectors of the same norm are on the same ray if and only if they are equal. -/\ntheorem sameRay_iff_of_norm_eq (h : «expr‖ ‖» x = «expr‖ ‖» y) : SameRay (exprℝ) x y ↔ x = y :=\n  by\n  obtain rfl | hy := eq_or_ne y 0\n  · rw [norm_zero, norm_eq_zero] at h\n    exact iff_of_true (SameRay.zero_right _) h\n  · exact ⟨fun hxy => norm_injOn_ray_right hy hxy SameRay.rfl h, fun hxy => hxy ▸ SameRay.rfl⟩\n#align same_ray_iff_of_norm_eq sameRay_iff_of_norm_eq\n-/\n\n",
 "sameRay_iff_norm_smul_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print sameRay_iff_norm_smul_eq /-\ntheorem sameRay_iff_norm_smul_eq : SameRay (exprℝ) x y ↔ «expr • » («expr‖ ‖» x) y = «expr • » («expr‖ ‖» y) x :=\n  ⟨SameRay.norm_smul_eq, fun h =>\n    or_iff_not_imp_left.2 fun hx =>\n      or_iff_not_imp_left.2 fun hy => ⟨«expr‖ ‖» y, «expr‖ ‖» x, norm_pos_iff.2 hy, norm_pos_iff.2 hx, h.symm⟩⟩\n#align same_ray_iff_norm_smul_eq sameRay_iff_norm_smul_eq\n-/\n\n",
 "sameRay_iff_inv_norm_smul_eq_of_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print sameRay_iff_inv_norm_smul_eq_of_ne /-\n/-- Two nonzero vectors `x y` in a real normed space are on the same ray if and only if the unit\nvectors `‖x‖⁻¹ • x` and `‖y‖⁻¹ • y` are equal. -/\ntheorem sameRay_iff_inv_norm_smul_eq_of_ne (hx : x ≠ 0) (hy : y ≠ 0) :\n    SameRay (exprℝ) x y ↔ «expr • » («expr‖ ‖» x)⁻¹ x = «expr • » («expr‖ ‖» y)⁻¹ y := by\n  rw [inv_smul_eq_iff₀, smul_comm, eq_comm, inv_smul_eq_iff₀, sameRay_iff_norm_smul_eq] <;> rwa [norm_ne_zero_iff]\n#align same_ray_iff_inv_norm_smul_eq_of_ne sameRay_iff_inv_norm_smul_eq_of_ne\n-/\n\n",
 "sameRay_iff_inv_norm_smul_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print sameRay_iff_inv_norm_smul_eq /-\n/-- Two vectors `x y` in a real normed space are on the ray if and only if one of them is zero or\nthe unit vectors `‖x‖⁻¹ • x` and `‖y‖⁻¹ • y` are equal. -/\ntheorem sameRay_iff_inv_norm_smul_eq :\n    SameRay (exprℝ) x y ↔ x = 0 ∨ y = 0 ∨ «expr • » («expr‖ ‖» x)⁻¹ x = «expr • » («expr‖ ‖» y)⁻¹ y :=\n  by\n  rcases eq_or_ne x 0 with (rfl | hx); · simp [SameRay.zero_left]\n  rcases eq_or_ne y 0 with (rfl | hy); · simp [SameRay.zero_right]\n  simp only [sameRay_iff_inv_norm_smul_eq_of_ne hx hy, *, false_or_iff]\n#align same_ray_iff_inv_norm_smul_eq sameRay_iff_inv_norm_smul_eq\n-/\n\n",
 "not_sameRay_iff_of_norm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print not_sameRay_iff_of_norm_eq /-\ntheorem not_sameRay_iff_of_norm_eq (h : «expr‖ ‖» x = «expr‖ ‖» y) : ¬SameRay (exprℝ) x y ↔ x ≠ y :=\n  (sameRay_iff_of_norm_eq h).not\n#align not_same_ray_iff_of_norm_eq not_sameRay_iff_of_norm_eq\n-/\n\n",
 "norm_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_sub (h : SameRay (exprℝ) x y) : «expr‖ ‖» (x - y) = |«expr‖ ‖» x - «expr‖ ‖» y| :=\n  by\n  rcases h.exists_eq_smul with ⟨u, a, b, ha, hb, -, rfl, rfl⟩\n  wlog hab : b ≤ a\n  · rw [SameRay.sameRay_comm] at h\n    rw [norm_sub_rev, abs_sub_comm]\n    exact this u b a hb ha h (le_of_not_le hab)\n  rw [← sub_nonneg] at hab\n  rw [← sub_smul, norm_smul_of_nonneg hab, norm_smul_of_nonneg ha, norm_smul_of_nonneg hb, ← sub_mul,\n    abs_of_nonneg (mul_nonneg hab (norm_nonneg _))]\n#align norm_sub norm_sub\n\n",
 "norm_smul_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_smul_eq (h : SameRay (exprℝ) x y) : «expr • » («expr‖ ‖» x) y = «expr • » («expr‖ ‖» y) x :=\n  by\n  rcases h.exists_eq_smul with ⟨u, a, b, ha, hb, -, rfl, rfl⟩\n  simp only [norm_smul_of_nonneg, *, mul_smul, smul_comm («expr‖ ‖» u)]\n  apply smul_comm\n#align norm_smul_eq norm_smul_eq\n\n",
 "norm_injOn_ray_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print norm_injOn_ray_right /-\ntheorem norm_injOn_ray_right (hy : y ≠ 0) : { x | SameRay (exprℝ) x y }.inj_on norm := by\n  simpa only [SameRay.sameRay_comm] using norm_injOn_ray_left hy\n#align norm_inj_on_ray_right norm_injOn_ray_right\n-/\n\n",
 "norm_injOn_ray_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print norm_injOn_ray_left /-\ntheorem norm_injOn_ray_left (hx : x ≠ 0) : { y | SameRay (exprℝ) x y }.inj_on norm :=\n  by\n  rintro y hy z hz h\n  rcases hy.exists_nonneg_left hx with ⟨r, hr, rfl⟩\n  rcases hz.exists_nonneg_left hx with ⟨s, hs, rfl⟩\n  rw [norm_smul, norm_smul, mul_left_inj' (norm_ne_zero_iff.2 hx), norm_of_nonneg hr, norm_of_nonneg hs] at h\n  rw [h]\n#align norm_inj_on_ray_left norm_injOn_ray_left\n-/\n\n",
 "norm_eq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print SameRay.norm_eq_iff /-\n/-- The norms of two vectors on the same ray are equal if and only if they are equal. -/\ntheorem SameRay.norm_eq_iff (h : SameRay (exprℝ) x y) : «expr‖ ‖» x = «expr‖ ‖» y ↔ x = y :=\n  ⟨h.eq_of_norm_eq, fun h => h ▸ rfl⟩\n#align same_ray.norm_eq_iff SameRay.norm_eq_iff\n-/\n\n",
 "norm_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-\nCopyright (c) 2022 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov, Yaël Dillies\n-/\n/-- If `x` and `y` are on the same ray, then the triangle inequality becomes the equality: the norm\nof `x + y` is the sum of the norms of `x` and `y`. The converse is true for a strictly convex\nspace. -/\ntheorem norm_add (h : SameRay (exprℝ) x y) : «expr‖ ‖» (x + y) = «expr‖ ‖» x + «expr‖ ‖» y :=\n  by\n  rcases h.exists_eq_smul with ⟨u, a, b, ha, hb, -, rfl, rfl⟩\n  rw [← add_smul, norm_smul_of_nonneg (add_nonneg ha hb), norm_smul_of_nonneg ha, norm_smul_of_nonneg hb, add_mul]\n#align norm_add norm_add\n\n",
 "eq_of_norm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print SameRay.eq_of_norm_eq /-\n/-- If two points on the same ray have the same norm, then they are equal. -/\ntheorem SameRay.eq_of_norm_eq (h : SameRay (exprℝ) x y) (hn : «expr‖ ‖» x = «expr‖ ‖» y) : x = y :=\n  (sameRay_iff_of_norm_eq hn).mp h\n#align same_ray.eq_of_norm_eq SameRay.eq_of_norm_eq\n-/\n\n"}