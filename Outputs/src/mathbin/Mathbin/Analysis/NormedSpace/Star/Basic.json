{"starₗᵢ_apply":
 "#print starₗᵢ_apply /-\ntheorem starₗᵢ_apply {x : E} : starₗᵢ 𝕜 x = star x :=\n  rfl\n#align starₗᵢ_apply starₗᵢ_apply\n-/\n\n",
 "star_mul_self_ne_zero_iff":
 "theorem star_mul_self_ne_zero_iff (x : E) : star x * x ≠ 0 ↔ x ≠ 0 := by simp only [ne.def, star_mul_self_eq_zero_iff]\n#align star_mul_self_ne_zero_iff star_mul_self_ne_zero_iff\n\n",
 "star_mul_self_eq_zero_iff":
 "@[simp]\ntheorem star_mul_self_eq_zero_iff (x : E) : star x * x = 0 ↔ x = 0 :=\n  by\n  rw [← norm_eq_zero, norm_star_mul_self]\n  exact mul_self_eq_zero.trans norm_eq_zero\n#align star_mul_self_eq_zero_iff star_mul_self_eq_zero_iff\n\n",
 "star_isometry":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print star_isometry /-\n/-- The `star` map in a normed star group is an isometry -/\ntheorem star_isometry : Isometry (star : E → E) :=\n  show Isometry starAddEquiv from\n    add_monoid_hom_class.isometry_of_norm starAddEquiv (show ∀ x, «expr‖ ‖» («expr ⋆» x) = «expr‖ ‖» x from norm_star)\n#align star_isometry star_isometry\n-/\n\n",
 "norm_unitary_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_unitary_smul (U : unitary E) (A : E) : «expr‖ ‖» («expr • » U A) = «expr‖ ‖» A :=\n  norm_coe_unitary_mul U A\n#align norm_unitary_smul norm_unitary_smul\n\n",
 "norm_star_mul_self'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_star_mul_self' {x : E} : «expr‖ ‖» («expr ⋆» x * x) = «expr‖ ‖» («expr ⋆» x) * «expr‖ ‖» x := by\n  rw [norm_star_mul_self, norm_star]\n#align norm_star_mul_self' norm_star_mul_self'\n\n",
 "norm_self_mul_star":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- see Note [lower instance priority]\ntheorem norm_self_mul_star {x : E} : «expr‖ ‖» (x * «expr ⋆» x) = «expr‖ ‖» x * «expr‖ ‖» x :=\n  by\n  nth_rw 1 [← star_star x]\n  simp only [norm_star_mul_self, norm_star]\n#align norm_self_mul_star norm_self_mul_star\n\n",
 "norm_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_one [Nontrivial E] : «expr‖ ‖» (1 : E) = 1 :=\n  by\n  have : 0 < «expr‖ ‖» (1 : E) := norm_pos_iff.mpr one_ne_zero\n  rw [← mul_left_inj' this.ne', ← norm_star_mul_self, mul_one, star_one, one_mul]\n#align norm_one norm_one\n\n",
 "norm_of_mem_unitary":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_of_mem_unitary [Nontrivial E] {U : E} (hU : U ∈ unitary E) : «expr‖ ‖» U = 1 :=\n  norm_coe_unitary ⟨U, hU⟩\n#align norm_of_mem_unitary norm_of_mem_unitary\n\n",
 "norm_mul_mem_unitary":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_mul_mem_unitary (A : E) {U : E} (hU : U ∈ unitary E) : «expr‖ ‖» (A * U) = «expr‖ ‖» A :=\n  norm_mul_coe_unitary A ⟨U, hU⟩\n#align norm_mul_mem_unitary norm_mul_mem_unitary\n\n",
 "norm_mul_coe_unitary":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_mul_coe_unitary (A : E) (U : unitary E) : «expr‖ ‖» (A * U) = «expr‖ ‖» A :=\n  calc\n    _ = «expr‖ ‖» («expr ⋆» («expr ⋆» (U : E) * «expr ⋆» A)) := by simp only [star_star, star_mul]\n    _ = «expr‖ ‖» («expr ⋆» (U : E) * «expr ⋆» A) := by rw [norm_star]\n    _ = «expr‖ ‖» («expr ⋆» A) := (norm_mem_unitary_mul (star A) (unitary.star_mem U.prop))\n    _ = «expr‖ ‖» A := norm_star _\n    \n#align norm_mul_coe_unitary norm_mul_coe_unitary\n\n",
 "norm_mem_unitary_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_mem_unitary_mul {U : E} (A : E) (hU : U ∈ unitary E) : «expr‖ ‖» (U * A) = «expr‖ ‖» A :=\n  norm_coe_unitary_mul ⟨U, hU⟩ A\n#align norm_mem_unitary_mul norm_mem_unitary_mul\n\n",
 "norm_coe_unitary_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_coe_unitary_mul (U : unitary E) (A : E) : «expr‖ ‖» ((U : E) * A) = «expr‖ ‖» A :=\n  by\n  nontriviality E\n  refine' le_antisymm _ _\n  ·\n    calc\n      _ ≤ «expr‖ ‖» (U : E) * «expr‖ ‖» A := norm_mul_le _ _\n      _ = «expr‖ ‖» A := by rw [norm_coe_unitary, one_mul]\n      \n  ·\n    calc\n      _ = «expr‖ ‖» («expr ⋆» (U : E) * U * A) := by rw [unitary.coe_star_mul_self U, one_mul]\n      _ ≤ «expr‖ ‖» («expr ⋆» (U : E)) * «expr‖ ‖» ((U : E) * A) :=\n        by\n        rw [mul_assoc]\n        exact norm_mul_le _ _\n      _ = «expr‖ ‖» ((U : E) * A) := by rw [norm_star, norm_coe_unitary, one_mul]\n      \n#align norm_coe_unitary_mul norm_coe_unitary_mul\n\n",
 "norm_coe_unitary":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- see Note [lower instance priority]\ntheorem norm_coe_unitary [Nontrivial E] (U : unitary E) : «expr‖ ‖» (U : E) = 1 := by\n  rw [← sq_eq_sq (norm_nonneg _) zero_le_one, one_pow 2, sq, ← cstar_ring.norm_star_mul_self, unitary.coe_star_mul_self,\n    CstarRing.norm_one]\n#align norm_coe_unitary norm_coe_unitary\n\n",
 "nnnorm_star_mul_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_star_mul_self {x : E} : «expr‖ ‖₊» («expr ⋆» x * x) = «expr‖ ‖₊» x * «expr‖ ‖₊» x :=\n  Subtype.ext norm_star_mul_self\n#align nnnorm_star_mul_self nnnorm_star_mul_self\n\n",
 "nnnorm_star":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n#print nnnorm_star /-\n/-\nCopyright (c) 2021 Frédéric Dupuis. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Frédéric Dupuis\n-/\n@[simp]\ntheorem nnnorm_star (x : E) : «expr‖ ‖₊» (star x) = «expr‖ ‖₊» x :=\n  Subtype.ext <| norm_star _\n#align nnnorm_star nnnorm_star\n-/\n\n",
 "nnnorm_self_mul_star":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_self_mul_star {x : E} : «expr‖ ‖₊» (x * star x) = «expr‖ ‖₊» x * «expr‖ ‖₊» x :=\n  Subtype.ext norm_self_mul_star\n#align nnnorm_self_mul_star nnnorm_self_mul_star\n\n",
 "nnnorm_pow_two_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n#print selfAdjoint.nnnorm_pow_two_pow /-\ntheorem selfAdjoint.nnnorm_pow_two_pow [NormedRing E] [StarRing E] [CstarRing E] (x : selfAdjoint E) (n : ℕ) :\n    «expr‖ ‖₊» (x ^ 2 ^ n) = «expr‖ ‖₊» x ^ 2 ^ n :=\n  x.prop.nnnorm_pow_two_pow _\n#align self_adjoint.nnnorm_pow_two_pow selfAdjoint.nnnorm_pow_two_pow\n-/\n\n",
 "mul_star_self_ne_zero_iff":
 "theorem mul_star_self_ne_zero_iff (x : E) : x * star x ≠ 0 ↔ x ≠ 0 := by simp only [ne.def, mul_star_self_eq_zero_iff]\n#align mul_star_self_ne_zero_iff mul_star_self_ne_zero_iff\n\n",
 "mul_star_self_eq_zero_iff":
 "@[simp]\ntheorem mul_star_self_eq_zero_iff (x : E) : x * star x = 0 ↔ x = 0 := by\n  simpa only [star_eq_zero, star_star] using @star_mul_self_eq_zero_iff _ _ _ _ (star x)\n#align mul_star_self_eq_zero_iff mul_star_self_eq_zero_iff\n\n",
 "coe_starₗᵢ":
 "#print coe_starₗᵢ /-\n@[simp]\ntheorem coe_starₗᵢ : (starₗᵢ 𝕜 : E → E) = star :=\n  rfl\n#align coe_starₗᵢ coe_starₗᵢ\n-/\n\n"}