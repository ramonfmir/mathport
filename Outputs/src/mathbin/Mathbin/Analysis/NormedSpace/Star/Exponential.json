{"exp_unitary_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-\nCopyright (c) 2022 Jireh Loreaux. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jireh Loreaux\n-/\ntheorem commute.exp_unitary_add {a b : selfAdjoint A} (h : Commute (a : A) (b : A)) :\n    exp_unitary (a + b) = exp_unitary a * exp_unitary b :=\n  by\n  ext\n  have hcomm : Commute («expr • » I (a : A)) («expr • » I (b : A))\n  calc\n    _ = _ := by simp only [h.eq, Algebra.smul_mul_assoc, Algebra.mul_smul_comm]\n    \n  simpa only [exp_unitary_coe, AddSubgroup.coe_add, smul_add] using exp_add_of_commute hcomm\n#align commute.exp_unitary_add commute.exp_unitary_add\n\n",
 "exp_unitary":
 "theorem commute.exp_unitary {a b : selfAdjoint A} (h : Commute (a : A) (b : A)) :\n    Commute (exp_unitary a) (exp_unitary b) :=\n  calc\n    exp_unitary a * exp_unitary b = exp_unitary b * exp_unitary a := by\n      rw [← h.exp_unitary_add, ← h.symm.exp_unitary_add, add_comm]\n    \n#align commute.exp_unitary commute.exp_unitary\n\n"}