{"entrywise_sup_norm_bound_of_unitary":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The entrywise sup norm of a unitary matrix is at most 1. -/\ntheorem entrywise_sup_norm_bound_of_unitary {U : matrix n n 𝕜} (hU : U ∈ matrix.unitary_group n 𝕜) : «expr‖ ‖» U ≤ 1 :=\n  by\n  simp_rw [pi_norm_le_iff_of_nonneg zero_le_one]\n  intro i j\n  exact entry_norm_bound_of_unitary hU _ _\n#align entrywise_sup_norm_bound_of_unitary entrywise_sup_norm_bound_of_unitary\n\n",
 "entry_norm_bound_of_unitary":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-\nCopyright (c) 2022 Hans Parshall. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Hans Parshall\n-/\ntheorem entry_norm_bound_of_unitary {U : matrix n n 𝕜} (hU : U ∈ matrix.unitary_group n 𝕜) (i j : n) :\n    «expr‖ ‖» (U i j) ≤ 1 :=\n  by\n  -- The norm squared of an entry is at most the L2 norm of its row.\n  have norm_sum :\n    «expr‖ ‖» (U i j) ^ 2 ≤\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        («expr‖ ‖» (U i x) ^ 2) :=\n    by\n    apply multiset.single_le_sum\n    · intro x h_x\n      rw [Multiset.mem_map] at h_x\n      cases' h_x with a h_a\n      rw [← h_a.2]\n      apply sq_nonneg\n    · rw [Multiset.mem_map]\n      use j\n      simp only [eq_self_iff_true, finset.mem_univ_val, and_self_iff, sq_eq_sq]\n  -- The L2 norm of a row is a diagonal entry of U ⬝ Uᴴ\n  have diag_eq_norm_sum :\n    (matrix.mul U (matrix.conj_transpose U)) i i =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        («expr‖ ‖» (U i x) ^ 2) :=\n    by\n    simp only [matrix.mul_apply, matrix.conj_transpose_apply, ← starRingEnd_apply, is_R_or_C.mul_conj,\n      is_R_or_C.norm_sq_eq_def', is_R_or_C.of_real_pow]\n  -- The L2 norm of a row is a diagonal entry of U ⬝ Uᴴ, real part\n  have re_diag_eq_norm_sum :\n    is_R_or_C.re ((matrix.mul U (matrix.conj_transpose U)) i i) =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        («expr‖ ‖» (U i x) ^ 2) :=\n    by\n    rw [is_R_or_C.ext_iff] at diag_eq_norm_sum\n    rw [diag_eq_norm_sum.1]\n    norm_cast\n  -- Since U is unitary, the diagonal entries of U ⬝ Uᴴ are all 1\n  have mul_eq_one : matrix.mul U (matrix.conj_transpose U) = 1 := unitary.mul_star_self_of_mem hU\n  have diag_eq_one : is_R_or_C.re ((matrix.mul U (matrix.conj_transpose U)) i i) = 1 := by\n    simp only [mul_eq_one, eq_self_iff_true, matrix.one_apply_eq, is_R_or_C.one_re]\n  -- Putting it all together\n  rw [← sq_le_one_iff (norm_nonneg (U i j)), ← diag_eq_one, re_diag_eq_norm_sum]\n  exact norm_sum\n#align entry_norm_bound_of_unitary entry_norm_bound_of_unitary\n\n"}