{"zero_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem zero_to_prod : (0 : «expr𝓜( , )» 𝕜 A).to_prod = 0 :=\n  rfl\n#align zero_to_prod zero_to_prod\n\n",
 "zero_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem zero_snd : (0 : «expr𝓜( , )» 𝕜 A).snd = 0 :=\n  rfl\n#align zero_snd zero_snd\n\n",
 "zero_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem zero_fst : (0 : «expr𝓜( , )» 𝕜 A).fst = 0 :=\n  rfl\n#align zero_fst zero_fst\n\n",
 "uniform_embedding_to_prod_mul_opposite":
 "theorem uniform_embedding_to_prod_mul_opposite : UniformEmbedding (@to_prod_mul_opposite 𝕜 A _ _ _ _ _) :=\n  uniformEmbedding_comap to_prod_mul_opposite_injective\n#align uniform_embedding_to_prod_mul_opposite uniform_embedding_to_prod_mul_opposite\n\n",
 "to_prod_mul_opposite_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\ntheorem to_prod_mul_opposite_injective :\n    function.injective\n      (to_prod_mul_opposite : «expr𝓜( , )» 𝕜 A → «expr →L[ ] » A 𝕜 A × «expr ᵐᵒᵖ» («expr →L[ ] » A 𝕜 A)) :=\n  fun a b h =>\n  let h' := Prod.ext_iff.mp h\n  ext _ _ <| Prod.ext h'.1 <| MulOpposite.op_injective h'.2\n#align to_prod_mul_opposite_injective to_prod_mul_opposite_injective\n\n",
 "sub_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem sub_to_prod (a b : «expr𝓜( , )» 𝕜 A) : (a - b).to_prod = a.to_prod - b.to_prod :=\n  rfl\n#align sub_to_prod sub_to_prod\n\n",
 "sub_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem sub_snd (a b : «expr𝓜( , )» 𝕜 A) : (a - b).snd = a.snd - b.snd :=\n  rfl\n#align sub_snd sub_snd\n\n",
 "sub_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem sub_fst (a b : «expr𝓜( , )» 𝕜 A) : (a - b).fst = a.fst - b.fst :=\n  rfl\n#align sub_fst sub_fst\n\n",
 "star_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem star_snd (a : «expr𝓜( , )» 𝕜 A) (b : A) : (star a).snd b = star (a.fst (star b)) :=\n  rfl\n#align star_snd star_snd\n\n",
 "star_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem star_fst (a : «expr𝓜( , )» 𝕜 A) (b : A) : (star a).fst b = star (a.snd (star b)) :=\n  rfl\n#align star_fst star_fst\n\n",
 "smul_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_to_prod (s : S) (a : «expr𝓜( , )» 𝕜 A) : («expr • » s a).to_prod = «expr • » s a.to_prod :=\n  rfl\n#align smul_to_prod smul_to_prod\n\n",
 "smul_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_snd (s : S) (a : «expr𝓜( , )» 𝕜 A) : («expr • » s a).snd = «expr • » s a.snd :=\n  rfl\n#align smul_snd smul_snd\n\n",
 "smul_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_fst (s : S) (a : «expr𝓜( , )» 𝕜 A) : («expr • » s a).fst = «expr • » s a.fst :=\n  rfl\n#align smul_fst smul_fst\n\n",
 "range_to_prod_mul_opposite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\ntheorem range_to_prod_mul_opposite :\n    Set.range to_prod_mul_opposite = { lr : «expr →L[ ] » A 𝕜 A × _ | ∀ x y, unop lr.2 x * y = x * lr.1 y } :=\n  Set.ext fun x =>\n    ⟨by\n      rintro ⟨a, rfl⟩\n      exact a.central, fun hx => ⟨⟨(x.1, unop x.2), hx⟩, Prod.ext rfl rfl⟩⟩\n#align range_to_prod_mul_opposite range_to_prod_mul_opposite\n\n",
 "range_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-\nCopyright (c) 2022 Jireh Loreaux. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jireh Loreaux, Jon Bannon\n-/\ntheorem range_to_prod : Set.range to_prod = { lr : «expr →L[ ] » A 𝕜 A × _ | ∀ x y, lr.2 x * y = x * lr.1 y } :=\n  Set.ext fun x =>\n    ⟨by\n      rintro ⟨a, rfl⟩\n      exact a.central, fun hx => ⟨⟨x, hx⟩, rfl⟩⟩\n#align range_to_prod range_to_prod\n\n",
 "pow_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem pow_to_prod (n : ℕ) (a : «expr𝓜( , )» 𝕜 A) : (a ^ n).to_prod = a.to_prod ^ n :=\n  rfl\n#align pow_to_prod pow_to_prod\n\n",
 "pow_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem pow_snd (n : ℕ) (a : «expr𝓜( , )» 𝕜 A) : (a ^ n).snd = a.snd ^ n :=\n  rfl\n#align pow_snd pow_snd\n\n",
 "pow_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem pow_fst (n : ℕ) (a : «expr𝓜( , )» 𝕜 A) : (a ^ n).fst = a.fst ^ n :=\n  rfl\n#align pow_fst pow_fst\n\n",
 "one_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem one_to_prod : (1 : «expr𝓜( , )» 𝕜 A).to_prod = 1 :=\n  rfl\n#align one_to_prod one_to_prod\n\n",
 "one_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem one_snd : (1 : «expr𝓜( , )» 𝕜 A).snd = 1 :=\n  rfl\n#align one_snd one_snd\n\n",
 "one_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem one_fst : (1 : «expr𝓜( , )» 𝕜 A).fst = 1 :=\n  rfl\n#align one_fst one_fst\n\n",
 "norm_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_snd (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖» a.snd = «expr‖ ‖» a := by rw [← norm_fst, norm_fst_eq_snd]\n#align norm_snd norm_snd\n\n",
 "norm_fst_eq_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- For `a : 𝓜(𝕜, A)`, the norms of `a.fst` and `a.snd` coincide, and hence these\nalso coincide with `‖a‖` which is `max (‖a.fst‖) (‖a.snd‖)`. -/\ntheorem norm_fst_eq_snd (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖» a.fst = «expr‖ ‖» a.snd :=\n  by\n  -- a handy lemma for this proof\n  have h0 :\n    ∀ f : «expr →L[ ] » A 𝕜 A,\n      ∀ C : nnreal, (∀ b : A, «expr‖ ‖₊» (f b) ^ 2 ≤ C * «expr‖ ‖₊» (f b) * «expr‖ ‖₊» b) → «expr‖ ‖₊» f ≤ C :=\n    by\n    intro f C h\n    have h1 : ∀ b, C * «expr‖ ‖₊» (f b) * «expr‖ ‖₊» b ≤ C * «expr‖ ‖₊» f * «expr‖ ‖₊» b ^ 2 :=\n      by\n      intro b\n      convert mul_le_mul_right' (mul_le_mul_left' (f.le_op_nnnorm b) C) («expr‖ ‖₊» b) using 1\n      ring\n    have :=\n      div_le_of_le_mul\n        (f.op_nnnorm_le_bound _\n          (by simpa only [sqrt_sq, sqrt_mul] using fun b => sqrt_le_sqrt_iff.mpr ((h b).trans (h1 b))))\n    convert rpow_le_rpow this two_pos.le\n    · simp only [rpow_two, div_pow, sq_sqrt]\n      simp only [sq, mul_self_div_self]\n    · simp only [rpow_two, sq_sqrt]\n  have h1 : ∀ b, «expr‖ ‖₊» (a.fst b) ^ 2 ≤ «expr‖ ‖₊» a.snd * «expr‖ ‖₊» (a.fst b) * «expr‖ ‖₊» b :=\n    by\n    intro b\n    calc\n      «expr‖ ‖₊» (a.fst b) ^ 2 = «expr‖ ‖₊» (star (a.fst b) * a.fst b) := by\n        simpa only [← sq] using CstarRing.nnnorm_star_mul_self.symm\n      _ ≤ «expr‖ ‖₊» (a.snd (star (a.fst b))) * «expr‖ ‖₊» b := (a.central (star (a.fst b)) b ▸ nnnorm_mul_le _ _)\n      _ ≤ «expr‖ ‖₊» a.snd * «expr‖ ‖₊» (a.fst b) * «expr‖ ‖₊» b :=\n        nnnorm_star (a.fst b) ▸ mul_le_mul_right' (a.snd.le_op_nnnorm _) _\n      \n  have h2 : ∀ b, «expr‖ ‖₊» (a.snd b) ^ 2 ≤ «expr‖ ‖₊» a.fst * «expr‖ ‖₊» (a.snd b) * «expr‖ ‖₊» b :=\n    by\n    intro b\n    calc\n      «expr‖ ‖₊» (a.snd b) ^ 2 = «expr‖ ‖₊» (a.snd b * star (a.snd b)) := by\n        simpa only [← sq] using CstarRing.nnnorm_self_mul_star.symm\n      _ ≤ «expr‖ ‖₊» b * «expr‖ ‖₊» (a.fst (star (a.snd b))) :=\n        ((a.central b (star (a.snd b))).symm ▸ nnnorm_mul_le _ _)\n      _ = «expr‖ ‖₊» (a.fst (star (a.snd b))) * «expr‖ ‖₊» b := (mul_comm _ _)\n      _ ≤ «expr‖ ‖₊» a.fst * «expr‖ ‖₊» (a.snd b) * «expr‖ ‖₊» b :=\n        nnnorm_star (a.snd b) ▸ mul_le_mul_right' (a.fst.le_op_nnnorm _) _\n      \n  exact le_antisymm (h0 _ _ h1) (h0 _ _ h2)\n#align norm_fst_eq_snd norm_fst_eq_snd\n\n",
 "norm_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_fst (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖» a.fst = «expr‖ ‖» a := by\n  simp only [norm_def, to_prod_hom_apply, Prod.norm_def, norm_fst_eq_snd, max_eq_right, eq_self_iff_true]\n#align norm_fst norm_fst\n\n",
 "norm_def'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_def' (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖» a = «expr‖ ‖» a.to_prod_mul_opposite_hom :=\n  rfl\n#align norm_def' norm_def'\n\n",
 "norm_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- even though the definition is actually in terms of `double_centralizer.to_prod_mul_opposite`, we\n-- choose to see through that here to avoid `mul_opposite.op` appearing.\ntheorem norm_def (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖» a = «expr‖ ‖» a.to_prod_hom :=\n  rfl\n#align norm_def norm_def\n\n",
 "nnnorm_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_snd (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖₊» a.snd = «expr‖ ‖₊» a :=\n  Subtype.ext (norm_snd a)\n#align nnnorm_snd nnnorm_snd\n\n",
 "nnnorm_fst_eq_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_fst_eq_snd (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖₊» a.fst = «expr‖ ‖₊» a.snd :=\n  Subtype.ext <| norm_fst_eq_snd a\n#align nnnorm_fst_eq_snd nnnorm_fst_eq_snd\n\n",
 "nnnorm_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_fst (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖₊» a.fst = «expr‖ ‖₊» a :=\n  Subtype.ext (norm_fst a)\n#align nnnorm_fst nnnorm_fst\n\n",
 "nnnorm_def'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_def' (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖₊» a = «expr‖ ‖₊» a.to_prod_mul_opposite_hom :=\n  rfl\n#align nnnorm_def' nnnorm_def'\n\n",
 "nnnorm_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_def (a : «expr𝓜( , )» 𝕜 A) : «expr‖ ‖₊» a = «expr‖ ‖₊» a.to_prod_hom :=\n  rfl\n#align nnnorm_def nnnorm_def\n\n",
 "neg_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem neg_to_prod (a : «expr𝓜( , )» 𝕜 A) : (-a).to_prod = -a.to_prod :=\n  rfl\n#align neg_to_prod neg_to_prod\n\n",
 "neg_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem neg_snd (a : «expr𝓜( , )» 𝕜 A) : (-a).snd = -a.snd :=\n  rfl\n#align neg_snd neg_snd\n\n",
 "neg_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem neg_fst (a : «expr𝓜( , )» 𝕜 A) : (-a).fst = -a.fst :=\n  rfl\n#align neg_fst neg_fst\n\n",
 "nat_cast_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem nat_cast_to_prod (n : ℕ) : (n : «expr𝓜( , )» 𝕜 A).to_prod = n :=\n  rfl\n#align nat_cast_to_prod nat_cast_to_prod\n\n",
 "nat_cast_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem nat_cast_snd (n : ℕ) : (n : «expr𝓜( , )» 𝕜 A).snd = n :=\n  rfl\n#align nat_cast_snd nat_cast_snd\n\n",
 "nat_cast_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem nat_cast_fst (n : ℕ) : (n : «expr𝓜( , )» 𝕜 A).fst = n :=\n  rfl\n#align nat_cast_fst nat_cast_fst\n\n",
 "mul_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem mul_snd (a b : «expr𝓜( , )» 𝕜 A) : (a * b).snd = b.snd * a.snd :=\n  rfl\n#align mul_snd mul_snd\n\n",
 "mul_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem mul_fst (a b : «expr𝓜( , )» 𝕜 A) : (a * b).fst = a.fst * b.fst :=\n  rfl\n#align mul_fst mul_fst\n\n",
 "int_cast_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem int_cast_to_prod (n : ℤ) : (n : «expr𝓜( , )» 𝕜 A).to_prod = n :=\n  rfl\n#align int_cast_to_prod int_cast_to_prod\n\n",
 "int_cast_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem int_cast_snd (n : ℤ) : (n : «expr𝓜( , )» 𝕜 A).snd = n :=\n  rfl\n#align int_cast_snd int_cast_snd\n\n",
 "int_cast_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem int_cast_fst (n : ℤ) : (n : «expr𝓜( , )» 𝕜 A).fst = n :=\n  rfl\n#align int_cast_fst int_cast_fst\n\n",
 "coe_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp, norm_cast]\ntheorem coe_snd (a : A) : (a : «expr𝓜( , )» 𝕜 A).snd = (continuous_linear_map.mul 𝕜 A).flip a :=\n  rfl\n#align coe_snd coe_snd\n\n",
 "coe_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp, norm_cast]\ntheorem coe_fst (a : A) : (a : «expr𝓜( , )» 𝕜 A).fst = continuous_linear_map.mul 𝕜 A a :=\n  rfl\n#align coe_fst coe_fst\n\n",
 "coe_eq_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem coe_eq_algebra_map : (coe : 𝕜 → «expr𝓜( , )» 𝕜 𝕜) = algebraMap 𝕜 («expr𝓜( , )» 𝕜 𝕜) := by\n  ext <;>\n      simp only [coe_fst, mul_apply', mul_one, algebra_map_to_prod, Prod.algebraMap_apply, coe_snd, flip_apply,\n        one_mul] <;>\n    simp only [Algebra.algebraMap_eq_smul_one, smul_apply, one_apply, smul_eq_mul, mul_one]\n#align coe_eq_algebra_map coe_eq_algebra_map\n\n",
 "algebra_map_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n-- TODO: generalize to `algebra S 𝓜(𝕜, A)` once `continuous_linear_map.algebra` is generalized.\n@[simp]\ntheorem algebra_map_to_prod (k : 𝕜) : (algebraMap 𝕜 («expr𝓜( , )» 𝕜 A) k).to_prod = algebraMap 𝕜 _ k :=\n  rfl\n#align algebra_map_to_prod algebra_map_to_prod\n\n",
 "algebra_map_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem algebra_map_snd (k : 𝕜) : (algebraMap 𝕜 («expr𝓜( , )» 𝕜 A) k).snd = algebraMap 𝕜 _ k :=\n  rfl\n#align algebra_map_snd algebra_map_snd\n\n",
 "algebra_map_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem algebra_map_fst (k : 𝕜) : (algebraMap 𝕜 («expr𝓜( , )» 𝕜 A) k).fst = algebraMap 𝕜 _ k :=\n  rfl\n#align algebra_map_fst algebra_map_fst\n\n",
 "add_to_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\n@[simp]\ntheorem add_to_prod (a b : «expr𝓜( , )» 𝕜 A) : (a + b).to_prod = a.to_prod + b.to_prod :=\n  rfl\n#align add_to_prod add_to_prod\n\n",
 "add_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem add_snd (a b : «expr𝓜( , )» 𝕜 A) : (a + b).snd = a.snd + b.snd :=\n  rfl\n#align add_snd add_snd\n\n",
 "add_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓜( , )» -/\ntheorem add_fst (a b : «expr𝓜( , )» 𝕜 A) : (a + b).fst = a.fst + b.fst :=\n  rfl\n#align add_fst add_fst\n\n"}