{"unit_le_op_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The image of the unit ball under a continuous multilinear map is bounded. -/\ntheorem unit_le_op_norm (h : «expr‖ ‖» m ≤ 1) : «expr‖ ‖» (f m) ≤ «expr‖ ‖» f :=\n  calc\n    «expr‖ ‖» (f m) ≤\n        «expr‖ ‖» f *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» (m i)) :=\n      f.le_op_norm m\n    _ ≤\n        «expr‖ ‖» f *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            1 :=\n      mul_le_mul_of_nonneg_left\n        (prod_le_prod (fun i hi => norm_nonneg _) fun i hi => le_trans (norm_le_pi_norm (_ : ∀ i, E i) _) h)\n        (op_norm_nonneg f)\n    _ = «expr‖ ‖» f := by simp\n    \n#align unit_le_op_norm unit_le_op_norm\n\n",
 "uncurry_sum_apply":
 "@[simp]\ntheorem uncurry_sum_apply\n    (f : continuous_multilinear_map 𝕜 (fun x : ι => G) (continuous_multilinear_map 𝕜 (fun x : ι' => G) G'))\n    (m : Sum ι ι' → G) : f.uncurry_sum m = f (m ∘ sum.inl) (m ∘ sum.inr) :=\n  rfl\n#align uncurry_sum_apply uncurry_sum_apply\n\n",
 "uncurry_right_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem continuous_multilinear_map.uncurry_right_norm\n    (f : continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.cast_succ) («expr →L[ ] » (Ei (last n)) 𝕜 G)) :\n    «expr‖ ‖» f.uncurry_right = «expr‖ ‖» f :=\n  (continuous_multilinear_curry_right_equiv 𝕜 Ei G).norm_map f\n#align continuous_multilinear_map.uncurry_right_norm continuous_multilinear_map.uncurry_right_norm\n\n",
 "uncurry_right_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_map.uncurry_right_apply\n    (f : continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.cast_succ) («expr →L[ ] » (Ei (last n)) 𝕜 G))\n    (m : ∀ i, Ei i) : f.uncurry_right m = f (init m) (m (last n)) :=\n  rfl\n#align continuous_multilinear_map.uncurry_right_apply continuous_multilinear_map.uncurry_right_apply\n\n",
 "uncurry_left_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem continuous_linear_map.uncurry_left_norm\n    (f : «expr →L[ ] » (Ei 0) 𝕜 (continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.succ) G)) :\n    «expr‖ ‖» f.uncurry_left = «expr‖ ‖» f :=\n  (continuous_multilinear_curry_left_equiv 𝕜 Ei G).norm_map f\n#align continuous_linear_map.uncurry_left_norm continuous_linear_map.uncurry_left_norm\n\n",
 "uncurry_left_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem continuous_linear_map.uncurry_left_apply\n    (f : «expr →L[ ] » (Ei 0) 𝕜 (continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.succ) G)) (m : ∀ i, Ei i) :\n    f.uncurry_left m = f (m 0) (tail m) :=\n  rfl\n#align continuous_linear_map.uncurry_left_apply continuous_linear_map.uncurry_left_apply\n\n",
 "uncurry_curry_right":
 "@[simp]\ntheorem continuous_multilinear_map.uncurry_curry_right (f : continuous_multilinear_map 𝕜 Ei G) :\n    f.curry_right.uncurry_right = f := by\n  ext m\n  simp\n#align continuous_multilinear_map.uncurry_curry_right continuous_multilinear_map.uncurry_curry_right\n\n",
 "uncurry_curry_left":
 "@[simp]\ntheorem continuous_multilinear_map.uncurry_curry_left (f : continuous_multilinear_map 𝕜 Ei G) :\n    f.curry_left.uncurry_left = f :=\n  continuous_multilinear_map.to_multilinear_map_inj <| f.to_multilinear_map.uncurry_curry_left\n#align continuous_multilinear_map.uncurry_curry_left continuous_multilinear_map.uncurry_curry_left\n\n",
 "uncurry0_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem continuous_multilinear_map.uncurry0_norm (f : «expr [× ]→L[ ] » G 0 𝕜 G') :\n    «expr‖ ‖» f.uncurry0 = «expr‖ ‖» f := by simp\n#align continuous_multilinear_map.uncurry0_norm continuous_multilinear_map.uncurry0_norm\n\n",
 "uncurry0_curry0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\ntheorem continuous_multilinear_map.uncurry0_curry0 (f : «expr [× ]→L[ ] » G 0 𝕜 G') :\n    continuous_multilinear_map.curry0 𝕜 G f.uncurry0 = f := by simp\n#align continuous_multilinear_map.uncurry0_curry0 continuous_multilinear_map.uncurry0_curry0\n\n",
 "uncurry0_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_map.uncurry0_apply (f : «expr [× ]→L[ ] » G 0 𝕜 G') : f.uncurry0 = f 0 :=\n  rfl\n#align continuous_multilinear_map.uncurry0_apply continuous_multilinear_map.uncurry0_apply\n\n",
 "tsum_eval":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_eval {α : Type _} {p : α → continuous_multilinear_map 𝕜 E G} (hp : summable p) (m : ∀ i, E i) :\n    («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (p a)) m =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (p a m) :=\n  (has_sum_eval hp.has_sum m).tsum_eq.symm\n#align tsum_eval tsum_eval\n\n",
 "restr_norm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Given a multilinear map in `n` variables, if one restricts it to `k` variables putting `z` on\nthe other coordinates, then the resulting restricted function satisfies an inequality\n`‖f.restr v‖ ≤ C * ‖z‖^(n-k) * Π ‖v i‖` if the original function satisfies `‖f v‖ ≤ C * Π ‖v i‖`. -/\ntheorem restr_norm_le {k n : ℕ} (f : (multilinear_map 𝕜 (fun i : fin n => G) G' : _)) (s : Finset (fin n))\n    (hk : s.card = k) (z : G) {C : exprℝ}\n    (H :\n      ∀ m,\n        «expr‖ ‖» (f m) ≤\n          C *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i)))\n    (v : fin k → G) :\n    «expr‖ ‖» (f.restr s hk z v) ≤\n      C * «expr‖ ‖» z ^ (n - k) *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (v i)) :=\n  by\n  rw [mul_right_comm, mul_assoc]\n  convert H _ using 2\n  simp only [apply_dite norm, fintype.prod_dite, prod_const («expr‖ ‖» z), finset.card_univ,\n    fintype.card_of_subtype («expr ᶜ» s) fun x => mem_compl, card_compl, fintype.card_fin, hk, mk_coe, ←\n    (s.order_iso_of_fin hk).symm.bijective.prod_comp fun x => «expr‖ ‖» (v x)]\n  rfl\n#align restr_norm_le restr_norm_le\n\n",
 "ratio_le_op_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem ratio_le_op_norm :\n    «expr‖ ‖» (f m) /\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (m i)) ≤\n      «expr‖ ‖» f :=\n  div_le_of_nonneg_of_le_mul (prod_nonneg fun i _ => norm_nonneg _) (op_norm_nonneg _) (f.le_op_norm m)\n#align ratio_le_op_norm ratio_le_op_norm\n\n",
 "op_norm_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- A continuous linear map is zero iff its norm vanishes. -/\ntheorem op_norm_zero_iff : «expr‖ ‖» f = 0 ↔ f = 0 :=\n  ⟨fun h => by\n    ext m\n    simpa [h] using f.le_op_norm m, by\n    rintro rfl\n    exact op_norm_zero⟩\n#align op_norm_zero_iff op_norm_zero_iff\n\n",
 "op_norm_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem op_norm_zero : «expr‖ ‖» (0 : continuous_multilinear_map 𝕜 E G) = 0 :=\n  (op_norm_nonneg _).antisymm' <| op_norm_le_bound 0 le_rfl fun m => by simp\n#align op_norm_zero op_norm_zero\n\n",
 "op_norm_smul_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem op_norm_smul_le (c : 𝕜') : «expr‖ ‖» («expr • » c f) ≤ «expr‖ ‖» c * «expr‖ ‖» f :=\n  («expr • » c f).op_norm_le_bound (mul_nonneg (norm_nonneg _) (op_norm_nonneg _))\n    (by\n      intro m\n      erw [norm_smul, mul_assoc]\n      exact mul_le_mul_of_nonneg_left (le_op_norm _ _) (norm_nonneg _))\n#align op_norm_smul_le op_norm_smul_le\n\n",
 "op_norm_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem op_norm_prod (f : continuous_multilinear_map 𝕜 E G) (g : continuous_multilinear_map 𝕜 E G') :\n    «expr‖ ‖» (f.prod g) = max («expr‖ ‖» f) («expr‖ ‖» g) :=\n  le_antisymm\n      (op_norm_le_bound _ (norm_nonneg (f, g)) fun m =>\n        by\n        have H :\n          0 ≤\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i)) :=\n          prod_nonneg fun _ _ => norm_nonneg _\n        simpa only [prod_apply, prod.norm_def, max_mul_of_nonneg, H] using\n          max_le_max (f.le_op_norm m) (g.le_op_norm m)) <|\n    max_le (f.op_norm_le_bound (norm_nonneg _) fun m => (le_max_left _ _).trans ((f.prod g).le_op_norm _))\n      (g.op_norm_le_bound (norm_nonneg _) fun m => (le_max_right _ _).trans ((f.prod g).le_op_norm _))\n#align op_norm_prod op_norm_prod\n\n",
 "op_norm_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem op_norm_nonneg : 0 ≤ «expr‖ ‖» f :=\n  le_cinfₛ bounds_nonempty fun _ ⟨hx, _⟩ => hx\n#align op_norm_nonneg op_norm_nonneg\n\n",
 "op_norm_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem op_norm_neg : «expr‖ ‖» (-f) = «expr‖ ‖» f :=\n  by\n  rw [norm_def]\n  apply congr_arg\n  ext\n  simp\n#align op_norm_neg op_norm_neg\n\n",
 "op_norm_le_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If one controls the norm of every `f x`, then one controls the norm of `f`. -/\ntheorem op_norm_le_bound {M : exprℝ} (hMp : 0 ≤ M)\n    (hM :\n      ∀ m,\n        «expr‖ ‖» (f m) ≤\n          M *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i))) :\n    «expr‖ ‖» f ≤ M :=\n  cinfₛ_le bounds_bdd_below ⟨hMp, hM⟩\n#align op_norm_le_bound op_norm_le_bound\n\n",
 "op_norm_add_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The operator norm satisfies the triangle inequality. -/\ntheorem op_norm_add_le : «expr‖ ‖» (f + g) ≤ «expr‖ ‖» f + «expr‖ ‖» g :=\n  cinfₛ_le bounds_bdd_below\n    ⟨add_nonneg (op_norm_nonneg _) (op_norm_nonneg _), fun x =>\n      by\n      rw [add_mul]\n      exact norm_add_le_of_le (le_op_norm _ _) (le_op_norm _ _)⟩\n#align op_norm_add_le op_norm_add_le\n\n",
 "norm_restrict_scalars":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- note: `pi_linear_equiv` does not unify correctly here, presumably due to issues with dependent\n-- typeclass arguments.\n@[simp]\ntheorem norm_restrict_scalars : «expr‖ ‖» (f.restrict_scalars 𝕜') = «expr‖ ‖» f := by\n  simp only [norm_def, coe_restrict_scalars]\n#align norm_restrict_scalars norm_restrict_scalars\n\n",
 "norm_restr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_restr {k n : ℕ} (f : «expr [× ]→L[ ] » G n 𝕜 G') (s : Finset (fin n)) (hk : s.card = k) (z : G) :\n    «expr‖ ‖» (f.restr s hk z) ≤ «expr‖ ‖» f * «expr‖ ‖» z ^ (n - k) :=\n  by\n  apply multilinear_map.mk_continuous_norm_le\n  exact mul_nonneg (norm_nonneg _) (pow_nonneg (norm_nonneg _) _)\n#align norm_restr norm_restr\n\n",
 "norm_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_pi {ι' : Type v'} [fintype ι'] {E' : ι' → Type wE'} [∀ i', normed_add_comm_group (E' i')]\n    [∀ i', normed_space 𝕜 (E' i')] (f : ∀ i', continuous_multilinear_map 𝕜 E (E' i')) :\n    «expr‖ ‖» (pi f) = «expr‖ ‖» f := by\n  apply le_antisymm\n  · refine' op_norm_le_bound _ (norm_nonneg f) fun m => _\n    dsimp\n    rw [pi_norm_le_iff_of_nonneg]\n    exacts[fun i => (f i).le_of_op_norm_le m (norm_le_pi_norm f i),\n      mul_nonneg (norm_nonneg f) (prod_nonneg fun _ _ => norm_nonneg _)]\n  · refine' (pi_norm_le_iff_of_nonneg (norm_nonneg _)).2 fun i => _\n    refine' op_norm_le_bound _ (norm_nonneg _) fun m => _\n    refine' le_trans _ ((pi f).le_op_norm m)\n    convert norm_le_pi_norm (fun j => f j m) i\n#align norm_pi norm_pi\n\n",
 "norm_of_subsingleton":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_of_subsingleton [subsingleton ι] [nontrivial G] (i' : ι) : «expr‖ ‖» (of_subsingleton 𝕜 G i') = 1 :=\n  by\n  apply le_antisymm\n  · refine' op_norm_le_bound _ zero_le_one fun m => _\n    rw [fintype.prod_subsingleton _ i', one_mul, of_subsingleton_apply]\n  · obtain ⟨g, hg⟩ := exists_ne (0 : G)\n    rw [← norm_ne_zero_iff] at hg\n    have := (of_subsingleton 𝕜 G i').ratio_le_op_norm fun _ => g\n    rwa [fintype.prod_subsingleton _ i', of_subsingleton_apply, div_self hg] at this\n#align norm_of_subsingleton norm_of_subsingleton\n\n",
 "norm_mk_pi_field":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_mk_pi_field (z : G) : «expr‖ ‖» (continuous_multilinear_map.mk_pi_field 𝕜 ι z) = «expr‖ ‖» z :=\n  (multilinear_map.mk_continuous_norm_le _ (norm_nonneg z) _).antisymm <| by\n    simpa using (continuous_multilinear_map.mk_pi_field 𝕜 ι z).le_op_norm fun _ => 1\n#align norm_mk_pi_field norm_mk_pi_field\n\n",
 "norm_mk_pi_algebra_of_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_mk_pi_algebra_of_empty [is_empty ι] :\n    «expr‖ ‖» (continuous_multilinear_map.mk_pi_algebra 𝕜 ι A) = «expr‖ ‖» (1 : A) :=\n  by\n  apply le_antisymm\n  · have := fun f => @op_norm_le_bound 𝕜 ι (fun i => A) A _ _ _ _ _ _ _ f _ (norm_nonneg (1 : A))\n    refine' this _ _\n    simp\n  · convert ratio_le_op_norm _ fun _ => (1 : A)\n    simp [eq_empty_of_is_empty (univ : Finset ι)]\n#align norm_mk_pi_algebra_of_empty norm_mk_pi_algebra_of_empty\n\n",
 "norm_mk_pi_algebra_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_mk_pi_algebra_le [nonempty ι] : «expr‖ ‖» (continuous_multilinear_map.mk_pi_algebra 𝕜 ι A) ≤ 1 :=\n  by\n  have := fun f => @op_norm_le_bound 𝕜 ι (fun i => A) A _ _ _ _ _ _ _ f _ zero_le_one\n  refine' this _ _\n  intro m\n  simp only [continuous_multilinear_map.mk_pi_algebra_apply, one_mul]\n  exact norm_prod_le' _ univ_nonempty _\n#align norm_mk_pi_algebra_le norm_mk_pi_algebra_le\n\n",
 "norm_mk_pi_algebra_fin_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_mk_pi_algebra_fin_zero :\n    «expr‖ ‖» (continuous_multilinear_map.mk_pi_algebra_fin 𝕜 0 A) = «expr‖ ‖» (1 : A) :=\n  by\n  refine' le_antisymm _ _\n  · have := fun f => @op_norm_le_bound 𝕜 (fin 0) (fun i => A) A _ _ _ _ _ _ _ f _ (norm_nonneg (1 : A))\n    refine' this _ _\n    simp\n  · convert ratio_le_op_norm _ fun _ => (1 : A)\n    simp\n#align norm_mk_pi_algebra_fin_zero norm_mk_pi_algebra_fin_zero\n\n",
 "norm_mk_pi_algebra_fin_succ_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_mk_pi_algebra_fin_succ_le : «expr‖ ‖» (continuous_multilinear_map.mk_pi_algebra_fin 𝕜 n.succ A) ≤ 1 :=\n  by\n  have := fun f => @op_norm_le_bound 𝕜 (fin n.succ) (fun i => A) A _ _ _ _ _ _ _ f _ zero_le_one\n  refine' this _ _\n  intro m\n  simp only [continuous_multilinear_map.mk_pi_algebra_fin_apply, one_mul, list.of_fn_eq_map, fin.prod_univ_def,\n    Multiset.coe_map, Multiset.coe_prod]\n  refine' (list.norm_prod_le' _).trans_eq _\n  · rw [ne.def, List.map_eq_nil, List.finRange_eq_nil]\n    exact nat.succ_ne_zero _\n  rw [list.map_map]\n#align norm_mk_pi_algebra_fin_succ_le norm_mk_pi_algebra_fin_succ_le\n\n",
 "norm_mk_pi_algebra_fin_le_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_mk_pi_algebra_fin_le_of_pos (hn : 0 < n) :\n    «expr‖ ‖» (continuous_multilinear_map.mk_pi_algebra_fin 𝕜 n A) ≤ 1 :=\n  by\n  obtain ⟨n, rfl⟩ := nat.exists_eq_succ_of_ne_zero hn.ne'\n  exact norm_mk_pi_algebra_fin_succ_le\n#align norm_mk_pi_algebra_fin_le_of_pos norm_mk_pi_algebra_fin_le_of_pos\n\n",
 "norm_mk_pi_algebra_fin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_mk_pi_algebra_fin [norm_one_class A] :\n    «expr‖ ‖» (continuous_multilinear_map.mk_pi_algebra_fin 𝕜 n A) = 1 :=\n  by\n  cases n\n  · simp [norm_mk_pi_algebra_fin_zero]\n  · refine' le_antisymm norm_mk_pi_algebra_fin_succ_le _\n    convert ratio_le_op_norm _ fun _ => 1 <;> [skip, infer_instance]\n    simp\n#align norm_mk_pi_algebra_fin norm_mk_pi_algebra_fin\n\n",
 "norm_mk_pi_algebra":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_mk_pi_algebra [norm_one_class A] : «expr‖ ‖» (continuous_multilinear_map.mk_pi_algebra 𝕜 ι A) = 1 :=\n  by\n  cases isEmpty_or_nonempty ι\n  · simp [norm_mk_pi_algebra_of_empty]\n  · refine' le_antisymm norm_mk_pi_algebra_le _\n    convert ratio_le_op_norm _ fun _ => 1 <;> [skip, infer_instance]\n    simp\n#align norm_mk_pi_algebra norm_mk_pi_algebra\n\n",
 "norm_map_tail_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem continuous_linear_map.norm_map_tail_le\n    (f : «expr →L[ ] » (Ei 0) 𝕜 (continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.succ) G)) (m : ∀ i, Ei i) :\n    «expr‖ ‖» (f (m 0) (tail m)) ≤\n      «expr‖ ‖» f *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (m i)) :=\n  calc\n    «expr‖ ‖» (f (m 0) (tail m)) ≤\n        «expr‖ ‖» (f (m 0)) *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» ((tail m) i)) :=\n      (f (m 0)).le_op_norm _\n    _ ≤\n        «expr‖ ‖» f * «expr‖ ‖» (m 0) *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» ((tail m) i)) :=\n      mul_le_mul_of_nonneg_right (f.le_op_norm _) (prod_nonneg fun i hi => norm_nonneg _)\n    _ =\n        «expr‖ ‖» f *\n          («expr‖ ‖» (m 0) *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» ((tail m) i))) :=\n      by ring\n    _ =\n        «expr‖ ‖» f *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» (m i)) :=\n      by\n      rw [prod_univ_succ]\n      rfl\n    \n#align continuous_linear_map.norm_map_tail_le continuous_linear_map.norm_map_tail_le\n\n",
 "norm_map_snoc_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem continuous_multilinear_map.norm_map_snoc_le (f : continuous_multilinear_map 𝕜 Ei G)\n    (m : ∀ i : fin n, Ei i.cast_succ) (x : Ei (last n)) :\n    «expr‖ ‖» (f (snoc m x)) ≤\n      «expr‖ ‖» f *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» (m i)) *\n        «expr‖ ‖» x :=\n  calc\n    «expr‖ ‖» (f (snoc m x)) ≤\n        «expr‖ ‖» f *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» (snoc m x i)) :=\n      f.le_op_norm _\n    _ =\n        «expr‖ ‖» f *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i)) *\n          «expr‖ ‖» x :=\n      by\n      rw [prod_univ_cast_succ]\n      simp [mul_assoc]\n    \n#align continuous_multilinear_map.norm_map_snoc_le continuous_multilinear_map.norm_map_snoc_le\n\n",
 "norm_map_init_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem continuous_multilinear_map.norm_map_init_le\n    (f : continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.cast_succ) («expr →L[ ] » (Ei (last n)) 𝕜 G))\n    (m : ∀ i, Ei i) :\n    «expr‖ ‖» (f (init m) (m (last n))) ≤\n      «expr‖ ‖» f *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (m i)) :=\n  calc\n    «expr‖ ‖» (f (init m) (m (last n))) ≤ «expr‖ ‖» (f (init m)) * «expr‖ ‖» (m (last n)) := (f (init m)).le_op_norm _\n    _ ≤\n        «expr‖ ‖» f *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» ((init m) i)) *\n          «expr‖ ‖» (m (last n)) :=\n      mul_le_mul_of_nonneg_right (f.le_op_norm _) (norm_nonneg _)\n    _ =\n        «expr‖ ‖» f *\n          (finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» ((init m) i)) *\n            «expr‖ ‖» (m (last n))) :=\n      mul_assoc _ _ _\n    _ =\n        «expr‖ ‖» f *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» (m i)) :=\n      by\n      rw [prod_univ_cast_succ]\n      rfl\n    \n#align continuous_multilinear_map.norm_map_init_le continuous_multilinear_map.norm_map_init_le\n\n",
 "norm_map_cons_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem continuous_multilinear_map.norm_map_cons_le (f : continuous_multilinear_map 𝕜 Ei G) (x : Ei 0)\n    (m : ∀ i : fin n, Ei i.succ) :\n    «expr‖ ‖» (f (cons x m)) ≤\n      «expr‖ ‖» f * «expr‖ ‖» x *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (m i)) :=\n  calc\n    «expr‖ ‖» (f (cons x m)) ≤\n        «expr‖ ‖» f *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» (cons x m i)) :=\n      f.le_op_norm _\n    _ =\n        «expr‖ ‖» f * «expr‖ ‖» x *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» (m i)) :=\n      by\n      rw [prod_univ_succ]\n      simp [mul_assoc]\n    \n#align continuous_multilinear_map.norm_map_cons_le continuous_multilinear_map.norm_map_cons_le\n\n",
 "norm_image_sub_le_of_bound'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If `f` satisfies a boundedness property around `0`, one can deduce a bound on `f m₁ - f m₂`\nusing the multilinearity. Here, we give a precise but hard to use version. See\n`norm_image_sub_le_of_bound` for a less precise but more usable version. The bound reads\n`‖f m - f m'‖ ≤\n  C * ‖m 1 - m' 1‖ * max ‖m 2‖ ‖m' 2‖ * max ‖m 3‖ ‖m' 3‖ * ... * max ‖m n‖ ‖m' n‖ + ...`,\nwhere the other terms in the sum are the same products where `1` is replaced by any `i`. -/\ntheorem norm_image_sub_le_of_bound' {C : exprℝ} (hC : 0 ≤ C)\n    (H :\n      ∀ m,\n        «expr‖ ‖» (f m) ≤\n          C *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i)))\n    (m₁ m₂ : ∀ i, E i) :\n    «expr‖ ‖» (f m₁ - f m₂) ≤\n      C *\n        finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j)))) :=\n  by\n  have A :\n    ∀ s : Finset ι,\n      «expr‖ ‖» (f m₁ - f (s.piecewise m₂ m₁)) ≤\n        C *\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n            (finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j)))) :=\n    by\n    refine' Finset.induction (by simp) _\n    intro i s his Hrec\n    have I :\n      «expr‖ ‖» (f (s.piecewise m₂ m₁) - f ((insert i s).piecewise m₂ m₁)) ≤\n        C *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j))) :=\n      by\n      have A : (insert i s).piecewise m₂ m₁ = function.update (s.piecewise m₂ m₁) i (m₂ i) := s.piecewise_insert _ _ _\n      have B : s.piecewise m₂ m₁ = function.update (s.piecewise m₂ m₁) i (m₁ i) :=\n        by\n        ext j\n        by_cases h : j = i\n        · rw [h]\n          simp [his]\n        · simp [h]\n      rw [B, A, ← f.map_sub]\n      apply le_trans (H _) (mul_le_mul_of_nonneg_left _ hC)\n      refine' prod_le_prod (fun j hj => norm_nonneg _) fun j hj => _\n      by_cases h : j = i\n      · rw [h]\n        simp\n      · by_cases h' : j ∈ s <;> simp [h', h, le_refl]\n    calc\n      «expr‖ ‖» (f m₁ - f ((insert i s).piecewise m₂ m₁)) ≤\n          «expr‖ ‖» (f m₁ - f (s.piecewise m₂ m₁)) +\n            «expr‖ ‖» (f (s.piecewise m₂ m₁) - f ((insert i s).piecewise m₂ m₁)) :=\n        by\n        rw [← dist_eq_norm, ← dist_eq_norm, ← dist_eq_norm]\n        exact dist_triangle _ _ _\n      _ ≤\n          C *\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n                (finset.prod_univ\n                  \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                  (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j)))) +\n            C *\n              finset.prod_univ\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j))) :=\n        add_le_add Hrec I\n      _ =\n          C *\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (insert i s)\n              (finset.prod_univ\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j)))) :=\n        by simp [his, add_comm, left_distrib]\n      \n  convert A univ\n  simp\n#align norm_image_sub_le_of_bound' norm_image_sub_le_of_bound'\n\n",
 "norm_image_sub_le_of_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If `f` satisfies a boundedness property around `0`, one can deduce a bound on `f m₁ - f m₂`\nusing the multilinearity. Here, we give a usable but not very precise version. See\n`norm_image_sub_le_of_bound'` for a more precise but less usable version. The bound is\n`‖f m - f m'‖ ≤ C * card ι * ‖m - m'‖ * (max ‖m‖ ‖m'‖) ^ (card ι - 1)`. -/\ntheorem norm_image_sub_le_of_bound {C : exprℝ} (hC : 0 ≤ C)\n    (H :\n      ∀ m,\n        «expr‖ ‖» (f m) ≤\n          C *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i)))\n    (m₁ m₂ : ∀ i, E i) :\n    «expr‖ ‖» (f m₁ - f m₂) ≤\n      C * fintype.card ι * max («expr‖ ‖» m₁) («expr‖ ‖» m₂) ^ (fintype.card ι - 1) * «expr‖ ‖» (m₁ - m₂) :=\n  by\n  have A :\n    ∀ i : ι,\n      finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j))) ≤\n        «expr‖ ‖» (m₁ - m₂) * max («expr‖ ‖» m₁) («expr‖ ‖» m₂) ^ (fintype.card ι - 1) :=\n    by\n    intro i\n    calc\n      finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j))) ≤\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            (function.update (fun j => max («expr‖ ‖» m₁) («expr‖ ‖» m₂)) i («expr‖ ‖» (m₁ - m₂)) j) :=\n        by\n        apply prod_le_prod\n        · intro j hj\n          by_cases h : j = i <;> simp [h, norm_nonneg]\n        · intro j hj\n          by_cases h : j = i\n          · rw [h]\n            simp\n            exact norm_le_pi_norm (m₁ - m₂) i\n          · simp [h, max_le_max, norm_le_pi_norm (_ : ∀ i, E i)]\n      _ = «expr‖ ‖» (m₁ - m₂) * max («expr‖ ‖» m₁) («expr‖ ‖» m₂) ^ (fintype.card ι - 1) :=\n        by\n        rw [prod_update_of_mem (finset.mem_univ _)]\n        simp [card_univ_diff]\n      \n  calc\n    «expr‖ ‖» (f m₁ - f m₂) ≤\n        C *\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n            (finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j)))) :=\n      f.norm_image_sub_le_of_bound' hC H m₁ m₂\n    _ ≤\n        C *\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n            («expr‖ ‖» (m₁ - m₂) * max («expr‖ ‖» m₁) («expr‖ ‖» m₂) ^ (fintype.card ι - 1)) :=\n      mul_le_mul_of_nonneg_left (sum_le_sum fun i hi => A i) hC\n    _ = C * fintype.card ι * max («expr‖ ‖» m₁) («expr‖ ‖» m₂) ^ (fintype.card ι - 1) * «expr‖ ‖» (m₁ - m₂) :=\n      by\n      rw [sum_const, card_univ, nsmul_eq_mul]\n      ring\n    \n#align norm_image_sub_le_of_bound norm_image_sub_le_of_bound\n\n",
 "norm_image_sub_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The difference `f m₁ - f m₂` is controlled in terms of `‖f‖` and `‖m₁ - m₂‖`, precise version.\nFor a less precise but more usable version, see `norm_image_sub_le`. The bound reads\n`‖f m - f m'‖ ≤\n  ‖f‖ * ‖m 1 - m' 1‖ * max ‖m 2‖ ‖m' 2‖ * max ‖m 3‖ ‖m' 3‖ * ... * max ‖m n‖ ‖m' n‖ + ...`,\nwhere the other terms in the sum are the same products where `1` is replaced by any `i`.-/\ntheorem norm_image_sub_le' (m₁ m₂ : ∀ i, E i) :\n    «expr‖ ‖» (f m₁ - f m₂) ≤\n      «expr‖ ‖» f *\n        finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            (if j = i then «expr‖ ‖» (m₁ i - m₂ i) else max («expr‖ ‖» (m₁ j)) («expr‖ ‖» (m₂ j)))) :=\n  f.to_multilinear_map.norm_image_sub_le_of_bound' (norm_nonneg _) f.le_op_norm _ _\n#align norm_image_sub_le' norm_image_sub_le'\n\n",
 "norm_image_sub_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The difference `f m₁ - f m₂` is controlled in terms of `‖f‖` and `‖m₁ - m₂‖`, less precise\nversion. For a more precise but less usable version, see `norm_image_sub_le'`.\nThe bound is `‖f m - f m'‖ ≤ ‖f‖ * card ι * ‖m - m'‖ * (max ‖m‖ ‖m'‖) ^ (card ι - 1)`.-/\ntheorem norm_image_sub_le (m₁ m₂ : ∀ i, E i) :\n    «expr‖ ‖» (f m₁ - f m₂) ≤\n      «expr‖ ‖» f * fintype.card ι * max («expr‖ ‖» m₁) («expr‖ ‖» m₂) ^ (fintype.card ι - 1) * «expr‖ ‖» (m₁ - m₂) :=\n  f.to_multilinear_map.norm_image_sub_le_of_bound (norm_nonneg _) f.le_op_norm _ _\n#align norm_image_sub_le norm_image_sub_le\n\n",
 "norm_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_def :\n    «expr‖ ‖» f =\n      infₛ\n        { c |\n          0 ≤ (c : exprℝ) ∧\n            ∀ m,\n              «expr‖ ‖» (f m) ≤\n                c *\n                  finset.prod_univ\n                    \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                    («expr‖ ‖» (m i)) } :=\n  rfl\n#align norm_def norm_def\n\n",
 "norm_const_of_is_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_const_of_is_empty [is_empty ι] (x : G) : «expr‖ ‖» (const_of_is_empty 𝕜 E x) = «expr‖ ‖» x :=\n  by\n  apply le_antisymm\n  · refine' op_norm_le_bound _ (norm_nonneg _) fun x => _\n    rw [fintype.prod_empty, mul_one, const_of_is_empty_apply]\n  · simpa using (const_of_is_empty 𝕜 E x).le_op_norm 0\n#align norm_const_of_is_empty norm_const_of_is_empty\n\n",
 "norm_comp_continuous_multilinear_map_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_comp_continuous_multilinear_map_le (g : «expr →L[ ] » G 𝕜 G') (f : continuous_multilinear_map 𝕜 E G) :\n    «expr‖ ‖» (g.comp_continuous_multilinear_map f) ≤ «expr‖ ‖» g * «expr‖ ‖» f :=\n  continuous_multilinear_map.op_norm_le_bound _ (mul_nonneg (norm_nonneg _) (norm_nonneg _)) fun m =>\n    calc\n      «expr‖ ‖» (g (f m)) ≤\n          «expr‖ ‖» g *\n            («expr‖ ‖» f *\n              finset.prod_univ\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                («expr‖ ‖» (m i))) :=\n        g.le_op_norm_of_le <| f.le_op_norm _\n      _ = _ := (mul_assoc _ _ _).symm\n      \n#align norm_comp_continuous_multilinear_map_le norm_comp_continuous_multilinear_map_le\n\n",
 "norm_comp_continuous_linear_mapL_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_comp_continuous_linear_mapL_le (f : ∀ i, «expr →L[ ] » (E i) 𝕜 (E₁ i)) :\n    «expr‖ ‖» (@comp_continuous_linear_mapL 𝕜 ι E E₁ G _ _ _ _ _ _ _ _ _ f) ≤\n      finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n        («expr‖ ‖» (f i)) :=\n  linear_map.mk_continuous_norm_le _ (prod_nonneg fun i _ => norm_nonneg _) _\n#align norm_comp_continuous_linear_mapL_le norm_comp_continuous_linear_mapL_le\n\n",
 "norm_comp_continuous_linear_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_comp_continuous_linear_le (g : continuous_multilinear_map 𝕜 E₁ G) (f : ∀ i, «expr →L[ ] » (E i) 𝕜 (E₁ i)) :\n    «expr‖ ‖» (g.comp_continuous_linear_map f) ≤\n      «expr‖ ‖» g *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (f i)) :=\n  op_norm_le_bound _ (mul_nonneg (norm_nonneg _) <| prod_nonneg fun i hi => norm_nonneg _) fun m =>\n    calc\n      «expr‖ ‖» (g fun i => f i (m i)) ≤\n          «expr‖ ‖» g *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (f i (m i))) :=\n        g.le_op_norm _\n      _ ≤\n          «expr‖ ‖» g *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (f i) * «expr‖ ‖» (m i)) :=\n        mul_le_mul_of_nonneg_left (prod_le_prod (fun _ _ => norm_nonneg _) fun i hi => (f i).le_op_norm (m i))\n          (norm_nonneg g)\n      _ =\n          «expr‖ ‖» g *\n              finset.prod_univ\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                («expr‖ ‖» (f i)) *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i)) :=\n        by rw [prod_mul_distrib, mul_assoc]\n      \n#align norm_comp_continuous_linear_le norm_comp_continuous_linear_le\n\n",
 "nnnorm_of_subsingleton":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_of_subsingleton [subsingleton ι] [nontrivial G] (i' : ι) : «expr‖ ‖₊» (of_subsingleton 𝕜 G i') = 1 :=\n  nnreal.eq <| norm_of_subsingleton _ _ _\n#align nnnorm_of_subsingleton nnnorm_of_subsingleton\n\n",
 "nnnorm_const_of_is_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_const_of_is_empty [is_empty ι] (x : G) : «expr‖ ‖₊» (const_of_is_empty 𝕜 E x) = «expr‖ ‖₊» x :=\n  nnreal.eq <| norm_const_of_is_empty _ _ _\n#align nnnorm_const_of_is_empty nnnorm_const_of_is_empty\n\n",
 "mk_pi_field_zero":
 "theorem mk_pi_field_zero : continuous_multilinear_map.mk_pi_field 𝕜 ι (0 : G) = 0 := by\n  ext <;> rw [mk_pi_field_apply, smul_zero, continuous_multilinear_map.zero_apply]\n#align mk_pi_field_zero mk_pi_field_zero\n\n",
 "mk_pi_field_eq_zero_iff":
 "theorem mk_pi_field_eq_zero_iff (z : G) : continuous_multilinear_map.mk_pi_field 𝕜 ι z = 0 ↔ z = 0 := by\n  rw [← mk_pi_field_zero, mk_pi_field_eq_iff]\n#align mk_pi_field_eq_zero_iff mk_pi_field_eq_zero_iff\n\n",
 "mk_pi_field_eq_iff":
 "theorem mk_pi_field_eq_iff {z₁ z₂ : G} :\n    continuous_multilinear_map.mk_pi_field 𝕜 ι z₁ = continuous_multilinear_map.mk_pi_field 𝕜 ι z₂ ↔ z₁ = z₂ :=\n  by\n  rw [← to_multilinear_map_inj.eq_iff]\n  exact multilinear_map.mk_pi_ring_eq_iff\n#align mk_pi_field_eq_iff mk_pi_field_eq_iff\n\n",
 "mk_pi_field_apply_one_eq_self":
 "theorem mk_pi_field_apply_one_eq_self (f : continuous_multilinear_map 𝕜 (fun i : ι => 𝕜) G) :\n    continuous_multilinear_map.mk_pi_field 𝕜 ι (f fun i => 1) = f :=\n  to_multilinear_map_inj f.to_multilinear_map.mk_pi_ring_apply_one_eq_self\n#align mk_pi_field_apply_one_eq_self mk_pi_field_apply_one_eq_self\n\n",
 "mk_pi_field_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n@[simp]\ntheorem mk_pi_field_apply (z : G) (m : ι → 𝕜) :\n    (continuous_multilinear_map.mk_pi_field 𝕜 ι z : (ι → 𝕜) → G) m =\n      «expr • »\n        (finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          (m i))\n        z :=\n  rfl\n#align mk_pi_field_apply mk_pi_field_apply\n\n",
 "mk_continuous_norm_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If a continuous multilinear map is constructed from a multilinear map via the constructor\n`mk_continuous`, then its norm is bounded by the bound given to the constructor if it is\nnonnegative. -/\ntheorem multilinear_map.mk_continuous_norm_le' (f : multilinear_map 𝕜 E G) {C : exprℝ}\n    (H :\n      ∀ m,\n        «expr‖ ‖» (f m) ≤\n          C *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i))) :\n    «expr‖ ‖» (f.mk_continuous C H) ≤ max C 0 :=\n  continuous_multilinear_map.op_norm_le_bound _ (le_max_right _ _) fun m =>\n    (H m).trans <| mul_le_mul_of_nonneg_right (le_max_left _ _) (prod_nonneg fun _ _ => norm_nonneg _)\n#align multilinear_map.mk_continuous_norm_le' multilinear_map.mk_continuous_norm_le'\n\n",
 "mk_continuous_norm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- We show that every Cauchy sequence converges.\n-- We now expand out the definition of a Cauchy sequence,\n-- and establish that the evaluation at any point `v : Π i, E i` is Cauchy.\n-- We assemble the limits points of those Cauchy sequences\n-- (which exist as `G` is complete)\n-- into a function which we call `F`.\n-- Next, we show that this `F` is multilinear,\n-- and that `F` has norm at most `(b 0 + ‖f 0‖)`.\n-- Thus `F` is continuous, and we propose that as the limit point of our original Cauchy sequence.\n-- Our last task is to establish convergence to `F` in norm.\n/-- If a continuous multilinear map is constructed from a multilinear map via the constructor\n`mk_continuous`, then its norm is bounded by the bound given to the constructor if it is\nnonnegative. -/\ntheorem multilinear_map.mk_continuous_norm_le (f : multilinear_map 𝕜 E G) {C : exprℝ} (hC : 0 ≤ C)\n    (H :\n      ∀ m,\n        «expr‖ ‖» (f m) ≤\n          C *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i))) :\n    «expr‖ ‖» (f.mk_continuous C H) ≤ C :=\n  continuous_multilinear_map.op_norm_le_bound _ hC fun m => H m\n#align multilinear_map.mk_continuous_norm_le multilinear_map.mk_continuous_norm_le\n\n",
 "mk_continuous_multilinear_norm_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mk_continuous_multilinear_norm_le' (f : multilinear_map 𝕜 E (multilinear_map 𝕜 E' G)) (C : exprℝ)\n    (H :\n      ∀ m₁ m₂,\n        «expr‖ ‖» (f m₁ m₂) ≤\n          C *\n              finset.prod_univ\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                («expr‖ ‖» (m₁ i)) *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m₂ i))) :\n    «expr‖ ‖» (mk_continuous_multilinear f C H) ≤ max C 0 :=\n  by\n  dsimp only [mk_continuous_multilinear]\n  exact mk_continuous_norm_le _ (le_max_right _ _) _\n#align mk_continuous_multilinear_norm_le' mk_continuous_multilinear_norm_le'\n\n",
 "mk_continuous_multilinear_norm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mk_continuous_multilinear_norm_le (f : multilinear_map 𝕜 E (multilinear_map 𝕜 E' G)) {C : exprℝ} (hC : 0 ≤ C)\n    (H :\n      ∀ m₁ m₂,\n        «expr‖ ‖» (f m₁ m₂) ≤\n          C *\n              finset.prod_univ\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                («expr‖ ‖» (m₁ i)) *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m₂ i))) :\n    «expr‖ ‖» (mk_continuous_multilinear f C H) ≤ C :=\n  (mk_continuous_multilinear_norm_le' f C H).trans_eq (max_eq_left hC)\n#align mk_continuous_multilinear_norm_le mk_continuous_multilinear_norm_le\n\n",
 "mk_continuous_multilinear_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem mk_continuous_multilinear_apply (f : multilinear_map 𝕜 E (multilinear_map 𝕜 E' G)) {C : exprℝ}\n    (H :\n      ∀ m₁ m₂,\n        «expr‖ ‖» (f m₁ m₂) ≤\n          C *\n              finset.prod_univ\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                («expr‖ ‖» (m₁ i)) *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m₂ i)))\n    (m : ∀ i, E i) : «expr⇑ » (mk_continuous_multilinear f C H m) = f m :=\n  rfl\n#align mk_continuous_multilinear_apply mk_continuous_multilinear_apply\n\n",
 "mk_continuous_linear_norm_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mk_continuous_linear_norm_le' (f : «expr →ₗ[ ] » G 𝕜 (multilinear_map 𝕜 E G')) (C : exprℝ)\n    (H :\n      ∀ x m,\n        «expr‖ ‖» (f x m) ≤\n          C * «expr‖ ‖» x *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i))) :\n    «expr‖ ‖» (mk_continuous_linear f C H) ≤ max C 0 :=\n  by\n  dsimp only [mk_continuous_linear]\n  exact linear_map.mk_continuous_norm_le _ (le_max_right _ _) _\n#align mk_continuous_linear_norm_le' mk_continuous_linear_norm_le'\n\n",
 "mk_continuous_linear_norm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem mk_continuous_linear_norm_le (f : «expr →ₗ[ ] » G 𝕜 (multilinear_map 𝕜 E G')) {C : exprℝ} (hC : 0 ≤ C)\n    (H :\n      ∀ x m,\n        «expr‖ ‖» (f x m) ≤\n          C * «expr‖ ‖» x *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i))) :\n    «expr‖ ‖» (mk_continuous_linear f C H) ≤ C :=\n  (mk_continuous_linear_norm_le' f C H).trans_eq (max_eq_left hC)\n#align mk_continuous_linear_norm_le mk_continuous_linear_norm_le\n\n",
 "le_op_norm_mul_prod_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\ntheorem le_op_norm_mul_prod_of_le {b : ι → exprℝ} (hm : ∀ i, «expr‖ ‖» (m i) ≤ b i) :\n    «expr‖ ‖» (f m) ≤\n      «expr‖ ‖» f *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          (b i) :=\n  (f.le_op_norm m).trans <|\n    mul_le_mul_of_nonneg_left (prod_le_prod (fun _ _ => norm_nonneg _) fun i _ => hm i) (norm_nonneg f)\n#align le_op_norm_mul_prod_of_le le_op_norm_mul_prod_of_le\n\n",
 "le_op_norm_mul_pow_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem le_op_norm_mul_pow_of_le {Ei : fin n → Type _} [∀ i, normed_add_comm_group (Ei i)] [∀ i, normed_space 𝕜 (Ei i)]\n    (f : continuous_multilinear_map 𝕜 Ei G) (m : ∀ i, Ei i) {b : exprℝ} (hm : «expr‖ ‖» m ≤ b) :\n    «expr‖ ‖» (f m) ≤ «expr‖ ‖» f * b ^ n := by\n  simpa only [fintype.card_fin] using f.le_op_norm_mul_pow_card_of_le m fun i => (norm_le_pi_norm m i).trans hm\n#align le_op_norm_mul_pow_of_le le_op_norm_mul_pow_of_le\n\n",
 "le_op_norm_mul_pow_card_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem le_op_norm_mul_pow_card_of_le {b : exprℝ} (hm : ∀ i, «expr‖ ‖» (m i) ≤ b) :\n    «expr‖ ‖» (f m) ≤ «expr‖ ‖» f * b ^ fintype.card ι := by\n  simpa only [prod_const] using f.le_op_norm_mul_prod_of_le m hm\n#align le_op_norm_mul_pow_card_of_le le_op_norm_mul_pow_card_of_le\n\n",
 "le_op_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The fundamental property of the operator norm of a continuous multilinear map:\n`‖f m‖` is bounded by `‖f‖` times the product of the `‖m i‖`. -/\ntheorem le_op_norm :\n    «expr‖ ‖» (f m) ≤\n      «expr‖ ‖» f *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (m i)) :=\n  by\n  have A :\n    0 ≤\n      finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n        («expr‖ ‖» (m i)) :=\n    prod_nonneg fun j hj => norm_nonneg _\n  cases' A.eq_or_lt with h hlt\n  · rcases prod_eq_zero_iff.1 h.symm with ⟨i, _, hi⟩\n    rw [norm_eq_zero] at hi\n    have : f m = 0 := f.map_coord_zero i hi\n    rw [this, norm_zero]\n    exact mul_nonneg (op_norm_nonneg f) A\n  · rw [← div_le_iff hlt]\n    apply le_cinfₛ bounds_nonempty\n    rintro c ⟨_, hc⟩\n    rw [div_le_iff hlt]\n    apply hc\n#align le_op_norm le_op_norm\n\n",
 "le_op_nnnorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/-- The fundamental property of the operator norm of a continuous multilinear map:\n`‖f m‖` is bounded by `‖f‖` times the product of the `‖m i‖`, `nnnorm` version. -/\ntheorem le_op_nnnorm :\n    «expr‖ ‖₊» (f m) ≤\n      «expr‖ ‖₊» f *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖₊» (m i)) :=\n  nnreal.coe_le_coe.1 <| by\n    push_cast\n    exact f.le_op_norm m\n#align le_op_nnnorm le_op_nnnorm\n\n",
 "le_of_op_norm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem le_of_op_norm_le {C : exprℝ} (h : «expr‖ ‖» f ≤ C) :\n    «expr‖ ‖» (f m) ≤\n      C *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (m i)) :=\n  (f.le_op_norm m).trans <| mul_le_mul_of_nonneg_right h (prod_nonneg fun i _ => norm_nonneg (m i))\n#align le_of_op_norm_le le_of_op_norm_le\n\n",
 "le_of_op_nnnorm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem le_of_op_nnnorm_le {C : nnreal} (h : «expr‖ ‖₊» f ≤ C) :\n    «expr‖ ‖₊» (f m) ≤\n      C *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖₊» (m i)) :=\n  (f.le_op_nnnorm m).trans <| mul_le_mul' h le_rfl\n#align le_of_op_nnnorm_le le_of_op_nnnorm_le\n\n",
 "has_sum_eval":
 "theorem has_sum_eval {α : Type _} {p : α → continuous_multilinear_map 𝕜 E G} {q : continuous_multilinear_map 𝕜 E G}\n    (h : has_sum p q) (m : ∀ i, E i) : has_sum (fun a => p a m) (q m) :=\n  by\n  dsimp [has_sum] at h⊢\n  convert ((continuous_eval_left m).tendsto _).comp h\n  ext s\n  simp\n#align has_sum_eval has_sum_eval\n\n",
 "fin0_apply_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem continuous_multilinear_map.fin0_apply_norm (f : «expr [× ]→L[ ] » G 0 𝕜 G') {x : fin 0 → G} :\n    «expr‖ ‖» (f x) = «expr‖ ‖» f := by\n  obtain rfl : x = 0 := subsingleton.elim _ _\n  refine' le_antisymm (by simpa using f.le_op_norm 0) _\n  have : «expr‖ ‖» (continuous_multilinear_map.curry0 𝕜 G f.uncurry0) ≤ «expr‖ ‖» f.uncurry0 :=\n    continuous_multilinear_map.op_norm_le_bound _ (norm_nonneg _) fun m => by\n      simp [-continuous_multilinear_map.apply_zero_curry0]\n  simpa\n#align continuous_multilinear_map.fin0_apply_norm continuous_multilinear_map.fin0_apply_norm\n\n",
 "exists_bound_of_continuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If a multilinear map in finitely many variables on normed spaces is continuous, then it\nsatisfies the inequality `‖f m‖ ≤ C * ∏ i, ‖m i‖`, for some `C` which can be chosen to be\npositive. -/\ntheorem exists_bound_of_continuous (hf : continuous f) :\n    ∃ C : exprℝ,\n      0 < C ∧\n        ∀ m,\n          «expr‖ ‖» (f m) ≤\n            C *\n              finset.prod_univ\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                («expr‖ ‖» (m i)) :=\n  by\n  cases isEmpty_or_nonempty ι\n  · refine' ⟨«expr‖ ‖» (f 0) + 1, add_pos_of_nonneg_of_pos (norm_nonneg _) zero_lt_one, fun m => _⟩\n    obtain rfl : m = 0\n    exact funext (is_empty.elim ‹_›)\n    simp [univ_eq_empty, zero_le_one]\n  obtain ⟨ε : exprℝ, ε0 : 0 < ε, hε : ∀ m : ∀ i, E i, «expr‖ ‖» (m - 0) < ε → «expr‖ ‖» (f m - f 0) < 1⟩ :=\n    normed_add_comm_group.tendsto_nhds_nhds.1 (hf.tendsto 0) 1 zero_lt_one\n  simp only [sub_zero, f.map_zero] at hε\n  rcases normed_field.exists_one_lt_norm 𝕜 with ⟨c, hc⟩\n  have : 0 < («expr‖ ‖» c / ε) ^ fintype.card ι := pow_pos (div_pos (zero_lt_one.trans hc) ε0) _\n  refine' ⟨_, this, _⟩\n  refine' f.bound_of_shell (fun _ => ε0) (fun _ => hc) fun m hcm hm => _\n  refine' (hε m ((pi_norm_lt_iff ε0).2 hm)).le.trans _\n  rw [← div_le_iff' this, one_div, ← inv_pow, inv_div, fintype.card, ← prod_const]\n  exact prod_le_prod (fun _ _ => div_nonneg ε0.le (norm_nonneg _)) fun i _ => hcm i\n#align exists_bound_of_continuous exists_bound_of_continuous\n\n",
 "curry_uncurry_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_map.curry_uncurry_right\n    (f : continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.cast_succ) («expr →L[ ] » (Ei (last n)) 𝕜 G)) :\n    f.uncurry_right.curry_right = f := by\n  ext (m x)\n  simp only [snoc_last, continuous_multilinear_map.curry_right_apply, continuous_multilinear_map.uncurry_right_apply]\n  rw [init_snoc]\n#align continuous_multilinear_map.curry_uncurry_right continuous_multilinear_map.curry_uncurry_right\n\n",
 "curry_uncurry_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem continuous_linear_map.curry_uncurry_left\n    (f : «expr →L[ ] » (Ei 0) 𝕜 (continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.succ) G)) :\n    f.uncurry_left.curry_left = f := by\n  ext (m x)\n  simp only [tail_cons, continuous_linear_map.uncurry_left_apply, continuous_multilinear_map.curry_left_apply]\n  rw [cons_zero]\n#align continuous_linear_map.curry_uncurry_left continuous_linear_map.curry_uncurry_left\n\n",
 "curry_sum_apply":
 "@[simp]\ntheorem curry_sum_apply (f : continuous_multilinear_map 𝕜 (fun x : Sum ι ι' => G) G') (m : ι → G) (m' : ι' → G) :\n    f.curry_sum m m' = f (sum.elim m m') :=\n  rfl\n#align curry_sum_apply curry_sum_apply\n\n",
 "curry_right_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem continuous_multilinear_map.curry_right_norm (f : continuous_multilinear_map 𝕜 Ei G) :\n    «expr‖ ‖» f.curry_right = «expr‖ ‖» f :=\n  (continuous_multilinear_curry_right_equiv 𝕜 Ei G).symm.norm_map f\n#align continuous_multilinear_map.curry_right_norm continuous_multilinear_map.curry_right_norm\n\n",
 "curry_right_apply":
 "@[simp]\ntheorem continuous_multilinear_map.curry_right_apply (f : continuous_multilinear_map 𝕜 Ei G)\n    (m : ∀ i : fin n, Ei i.cast_succ) (x : Ei (last n)) : f.curry_right m x = f (snoc m x) :=\n  rfl\n#align continuous_multilinear_map.curry_right_apply continuous_multilinear_map.curry_right_apply\n\n",
 "curry_left_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem continuous_multilinear_map.curry_left_norm (f : continuous_multilinear_map 𝕜 Ei G) :\n    «expr‖ ‖» f.curry_left = «expr‖ ‖» f :=\n  (continuous_multilinear_curry_left_equiv 𝕜 Ei G).symm.norm_map f\n#align continuous_multilinear_map.curry_left_norm continuous_multilinear_map.curry_left_norm\n\n",
 "curry_left_apply":
 "-- define a linear map into `n` continuous multilinear maps from an `n+1` continuous multilinear\n-- map\n-- then register its continuity thanks to its boundedness properties.\n@[simp]\ntheorem continuous_multilinear_map.curry_left_apply (f : continuous_multilinear_map 𝕜 Ei G) (x : Ei 0)\n    (m : ∀ i : fin n, Ei i.succ) : f.curry_left x m = f (cons x m) :=\n  rfl\n#align continuous_multilinear_map.curry_left_apply continuous_multilinear_map.curry_left_apply\n\n",
 "curry_fin_finset_symm_apply_piecewise_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem curry_fin_finset_symm_apply_piecewise_const (hk : s.card = k) (hl : («expr ᶜ» s).card = l)\n    (f : «expr [× ]→L[ ] » G k 𝕜 («expr [× ]→L[ ] » G l 𝕜 G')) (x y : G) :\n    (curry_fin_finset 𝕜 G G' hk hl).symm f (s.piecewise (fun _ => x) fun _ => y) = f (fun _ => x) fun _ => y :=\n  multilinear_map.curry_fin_finset_symm_apply_piecewise_const hk hl _ x y\n#align curry_fin_finset_symm_apply_piecewise_const curry_fin_finset_symm_apply_piecewise_const\n\n",
 "curry_fin_finset_symm_apply_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem curry_fin_finset_symm_apply_const (hk : s.card = k) (hl : («expr ᶜ» s).card = l)\n    (f : «expr [× ]→L[ ] » G k 𝕜 («expr [× ]→L[ ] » G l 𝕜 G')) (x : G) :\n    ((curry_fin_finset 𝕜 G G' hk hl).symm f fun _ => x) = f (fun _ => x) fun _ => x :=\n  rfl\n#align curry_fin_finset_symm_apply_const curry_fin_finset_symm_apply_const\n\n",
 "curry_fin_finset_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem curry_fin_finset_symm_apply (hk : s.card = k) (hl : («expr ᶜ» s).card = l)\n    (f : «expr [× ]→L[ ] » G k 𝕜 («expr [× ]→L[ ] » G l 𝕜 G')) (m : fin n → G) :\n    (curry_fin_finset 𝕜 G G' hk hl).symm f m =\n      f (fun i => m <| fin_sum_equiv_of_finset hk hl (sum.inl i)) fun i =>\n        m <| fin_sum_equiv_of_finset hk hl (sum.inr i) :=\n  rfl\n#align curry_fin_finset_symm_apply curry_fin_finset_symm_apply\n\n",
 "curry_fin_finset_apply_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem curry_fin_finset_apply_const (hk : s.card = k) (hl : («expr ᶜ» s).card = l) (f : «expr [× ]→L[ ] » G n 𝕜 G')\n    (x y : G) : (curry_fin_finset 𝕜 G G' hk hl f (fun _ => x) fun _ => y) = f (s.piecewise (fun _ => x) fun _ => y) :=\n  by\n  refine' (curry_fin_finset_symm_apply_piecewise_const hk hl _ _ _).symm.trans _\n  -- `rw` fails\n  rw [linear_isometry_equiv.symm_apply_apply]\n#align curry_fin_finset_apply_const curry_fin_finset_apply_const\n\n",
 "curry_fin_finset_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem curry_fin_finset_apply (hk : s.card = k) (hl : («expr ᶜ» s).card = l) (f : «expr [× ]→L[ ] » G n 𝕜 G')\n    (mk : fin k → G) (ml : fin l → G) :\n    curry_fin_finset 𝕜 G G' hk hl f mk ml = f fun i => sum.elim mk ml ((fin_sum_equiv_of_finset hk hl).symm i) :=\n  rfl\n#align curry_fin_finset_apply curry_fin_finset_apply\n\n",
 "curry0_uncurry0":
 "@[simp]\ntheorem continuous_multilinear_map.curry0_uncurry0 (x : G') : (continuous_multilinear_map.curry0 𝕜 G x).uncurry0 = x :=\n  rfl\n#align continuous_multilinear_map.curry0_uncurry0 continuous_multilinear_map.curry0_uncurry0\n\n",
 "curry0_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem continuous_multilinear_map.curry0_norm (x : G') :\n    «expr‖ ‖» (continuous_multilinear_map.curry0 𝕜 G x) = «expr‖ ‖» x :=\n  norm_const_of_is_empty _ _ _\n#align continuous_multilinear_map.curry0_norm continuous_multilinear_map.curry0_norm\n\n",
 "curry0_apply":
 "@[simp]\ntheorem continuous_multilinear_map.curry0_apply (x : G') (m : fin 0 → G) :\n    continuous_multilinear_map.curry0 𝕜 G x m = x :=\n  rfl\n#align continuous_multilinear_map.curry0_apply continuous_multilinear_map.curry0_apply\n\n",
 "continuous_restrict_scalars":
 "theorem continuous_restrict_scalars :\n    continuous (restrict_scalars 𝕜' : continuous_multilinear_map 𝕜 E G → continuous_multilinear_map 𝕜' E G) :=\n  (restrict_scalars_linear 𝕜').continuous\n#align continuous_restrict_scalars continuous_restrict_scalars\n\n",
 "continuous_of_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:75:38: in apply_rules #[[\"[\", expr mul_le_mul_of_nonneg_right, \",\", expr mul_le_mul_of_nonneg_left, \",\", expr mul_nonneg, \",\", expr norm_nonneg, \",\", expr nat.cast_nonneg, \",\", expr pow_le_pow_of_le_left, \"]\"],\n  []]: ./././Mathport/Syntax/Translate/Basic.lean:349:22: unsupported: parse error -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If a multilinear map satisfies an inequality `‖f m‖ ≤ C * ∏ i, ‖m i‖`, then it is\ncontinuous. -/\ntheorem continuous_of_bound (C : exprℝ)\n    (H :\n      ∀ m,\n        «expr‖ ‖» (f m) ≤\n          C *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i))) :\n    continuous f := by\n  let D := max C 1\n  have D_pos : 0 ≤ D := le_trans zero_le_one (le_max_right _ _)\n  replace H :\n    ∀ m,\n      «expr‖ ‖» (f m) ≤\n        D *\n          finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            («expr‖ ‖» (m i))\n  · intro m\n    apply le_trans (H m) (mul_le_mul_of_nonneg_right (le_max_left _ _) _)\n    exact prod_nonneg fun (i : ι) hi => norm_nonneg (m i)\n  refine' continuous_iff_continuous_at.2 fun m => _\n  refine'\n    continuous_at_of_locally_lipschitz zero_lt_one (D * fintype.card ι * («expr‖ ‖» m + 1) ^ (fintype.card ι - 1))\n      fun m' h' => _\n  rw [dist_eq_norm, dist_eq_norm]\n  have : 0 ≤ max («expr‖ ‖» m') («expr‖ ‖» m) := by simp\n  have : max («expr‖ ‖» m') («expr‖ ‖» m) ≤ «expr‖ ‖» m + 1 := by\n    simp [zero_le_one, norm_le_of_mem_closed_ball (le_of_lt h'), -add_comm]\n  calc\n    «expr‖ ‖» (f m' - f m) ≤\n        D * fintype.card ι * max («expr‖ ‖» m') («expr‖ ‖» m) ^ (fintype.card ι - 1) * «expr‖ ‖» (m' - m) :=\n      f.norm_image_sub_le_of_bound D_pos H m' m\n    _ ≤ D * fintype.card ι * («expr‖ ‖» m + 1) ^ (fintype.card ι - 1) * «expr‖ ‖» (m' - m) := by\n      trace\n        \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:75:38: in apply_rules #[[\\\"[\\\", expr mul_le_mul_of_nonneg_right, \\\",\\\", expr mul_le_mul_of_nonneg_left, \\\",\\\", expr mul_nonneg, \\\",\\\", expr norm_nonneg, \\\",\\\", expr nat.cast_nonneg, \\\",\\\", expr pow_le_pow_of_le_left, \\\"]\\\"],\\n  []]: ./././Mathport/Syntax/Translate/Basic.lean:349:22: unsupported: parse error\"\n    \n#align continuous_of_bound continuous_of_bound\n\n",
 "continuous_multilinear_curry_right_equiv_symm_apply'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_curry_right_equiv_symm_apply' (f : «expr [× ]→L[ ] » G n.succ 𝕜 G') (v : fin n → G)\n    (x : G) : (continuous_multilinear_curry_right_equiv' 𝕜 n G G').symm f v x = f (snoc v x) :=\n  rfl\n#align continuous_multilinear_curry_right_equiv_symm_apply' continuous_multilinear_curry_right_equiv_symm_apply'\n\n",
 "continuous_multilinear_curry_right_equiv_symm_apply":
 "@[simp]\ntheorem continuous_multilinear_curry_right_equiv_symm_apply (f : continuous_multilinear_map 𝕜 Ei G)\n    (v : ∀ i : fin n, Ei i.cast_succ) (x : Ei (last n)) :\n    (continuous_multilinear_curry_right_equiv 𝕜 Ei G).symm f v x = f (snoc v x) :=\n  rfl\n#align continuous_multilinear_curry_right_equiv_symm_apply continuous_multilinear_curry_right_equiv_symm_apply\n\n",
 "continuous_multilinear_curry_right_equiv_apply'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_curry_right_equiv_apply' (f : «expr [× ]→L[ ] » G n 𝕜 («expr →L[ ] » G 𝕜 G'))\n    (v : fin (n + 1) → G) : continuous_multilinear_curry_right_equiv' 𝕜 n G G' f v = f (init v) (v (last n)) :=\n  rfl\n#align continuous_multilinear_curry_right_equiv_apply' continuous_multilinear_curry_right_equiv_apply'\n\n",
 "continuous_multilinear_curry_right_equiv_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_curry_right_equiv_apply\n    (f : continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.cast_succ) («expr →L[ ] » (Ei (last n)) 𝕜 G))\n    (v : ∀ i, Ei i) : (continuous_multilinear_curry_right_equiv 𝕜 Ei G) f v = f (init v) (v (last n)) :=\n  rfl\n#align continuous_multilinear_curry_right_equiv_apply continuous_multilinear_curry_right_equiv_apply\n\n",
 "continuous_multilinear_curry_left_equiv_symm_apply":
 "@[simp]\ntheorem continuous_multilinear_curry_left_equiv_symm_apply (f : continuous_multilinear_map 𝕜 Ei G) (x : Ei 0)\n    (v : ∀ i : fin n, Ei i.succ) : (continuous_multilinear_curry_left_equiv 𝕜 Ei G).symm f x v = f (cons x v) :=\n  rfl\n#align continuous_multilinear_curry_left_equiv_symm_apply continuous_multilinear_curry_left_equiv_symm_apply\n\n",
 "continuous_multilinear_curry_left_equiv_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_curry_left_equiv_apply\n    (f : «expr →L[ ] » (Ei 0) 𝕜 (continuous_multilinear_map 𝕜 (fun i : fin n => Ei i.succ) G)) (v : ∀ i, Ei i) :\n    continuous_multilinear_curry_left_equiv 𝕜 Ei G f v = f (v 0) (tail v) :=\n  rfl\n#align continuous_multilinear_curry_left_equiv_apply continuous_multilinear_curry_left_equiv_apply\n\n",
 "continuous_multilinear_curry_fin1_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_curry_fin1_symm_apply (f : «expr →L[ ] » G 𝕜 G') (v : fin 1 → G) :\n    (continuous_multilinear_curry_fin1 𝕜 G G').symm f v = f (v 0) :=\n  rfl\n#align continuous_multilinear_curry_fin1_symm_apply continuous_multilinear_curry_fin1_symm_apply\n\n",
 "continuous_multilinear_curry_fin1_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_curry_fin1_apply (f : «expr [× ]→L[ ] » G 1 𝕜 G') (x : G) :\n    continuous_multilinear_curry_fin1 𝕜 G G' f x = f (fin.snoc 0 x) :=\n  rfl\n#align continuous_multilinear_curry_fin1_apply continuous_multilinear_curry_fin1_apply\n\n",
 "continuous_multilinear_curry_fin0_symm_apply":
 "@[simp]\ntheorem continuous_multilinear_curry_fin0_symm_apply (x : G') (v : fin 0 → G) :\n    (continuous_multilinear_curry_fin0 𝕜 G G').symm x v = x :=\n  rfl\n#align continuous_multilinear_curry_fin0_symm_apply continuous_multilinear_curry_fin0_symm_apply\n\n",
 "continuous_multilinear_curry_fin0_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_curry_fin0_apply (f : «expr [× ]→L[ ] » G 0 𝕜 G') :\n    continuous_multilinear_curry_fin0 𝕜 G G' f = f 0 :=\n  rfl\n#align continuous_multilinear_curry_fin0_apply continuous_multilinear_curry_fin0_apply\n\n",
 "continuous_eval_left":
 "theorem continuous_eval_left (m : ∀ i, E i) : continuous fun p : continuous_multilinear_map 𝕜 E G => p m :=\n  continuous_eval.comp (continuous_id.prod_mk continuous_const)\n#align continuous_eval_left continuous_eval_left\n\n",
 "continuous_eval":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:75:38: in apply_rules #[[\"[\", expr add_le_add, \",\", expr mul_le_mul, \",\", expr le_refl, \",\", expr le_trans (norm_fst_le q)\n   A, \",\", expr nat.cast_nonneg, \",\", expr mul_nonneg, \",\", expr pow_le_pow_of_le_left, \",\", expr pow_nonneg, \",\", expr norm_snd_le\n   «expr - »(q, p), \",\", expr norm_nonneg, \",\", expr norm_fst_le «expr - »(q, p), \",\", expr prod_nonneg, \"]\"],\n  []]: ./././Mathport/Syntax/Translate/Basic.lean:349:22: unsupported: parse error -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Applying a multilinear map to a vector is continuous in both coordinates. -/\ntheorem continuous_eval : continuous fun p : continuous_multilinear_map 𝕜 E G × ∀ i, E i => p.1 p.2 :=\n  by\n  apply continuous_iff_continuous_at.2 fun p => _\n  apply\n    continuous_at_of_locally_lipschitz zero_lt_one\n      ((«expr‖ ‖» p + 1) * fintype.card ι * («expr‖ ‖» p + 1) ^ (fintype.card ι - 1) +\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (p.2 i)))\n      fun q hq => _\n  have : 0 ≤ max («expr‖ ‖» q.2) («expr‖ ‖» p.2) := by simp\n  have : 0 ≤ «expr‖ ‖» p + 1 := zero_le_one.trans ((le_add_iff_nonneg_left 1).2 <| norm_nonneg p)\n  have A : «expr‖ ‖» q ≤ «expr‖ ‖» p + 1 := norm_le_of_mem_closed_ball hq.le\n  have : max («expr‖ ‖» q.2) («expr‖ ‖» p.2) ≤ «expr‖ ‖» p + 1 :=\n    (max_le_max (norm_snd_le q) (norm_snd_le p)).trans (by simp [A, -add_comm, zero_le_one])\n  have : ∀ i : ι, i ∈ univ → 0 ≤ «expr‖ ‖» (p.2 i) := fun i hi => norm_nonneg _\n  calc\n    dist (q.1 q.2) (p.1 p.2) ≤ dist (q.1 q.2) (q.1 p.2) + dist (q.1 p.2) (p.1 p.2) := dist_triangle _ _ _\n    _ = «expr‖ ‖» (q.1 q.2 - q.1 p.2) + «expr‖ ‖» (q.1 p.2 - p.1 p.2) := by rw [dist_eq_norm, dist_eq_norm]\n    _ ≤\n        «expr‖ ‖» q.1 * fintype.card ι * max («expr‖ ‖» q.2) («expr‖ ‖» p.2) ^ (fintype.card ι - 1) *\n            «expr‖ ‖» (q.2 - p.2) +\n          «expr‖ ‖» (q.1 - p.1) *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (p.2 i)) :=\n      add_le_add (norm_image_sub_le _ _ _) ((q.1 - p.1).le_op_norm p.2)\n    _ ≤\n        («expr‖ ‖» p + 1) * fintype.card ι * («expr‖ ‖» p + 1) ^ (fintype.card ι - 1) * «expr‖ ‖» (q - p) +\n          «expr‖ ‖» (q - p) *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (p.2 i)) :=\n      by\n      trace\n        \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:75:38: in apply_rules #[[\\\"[\\\", expr add_le_add, \\\",\\\", expr mul_le_mul, \\\",\\\", expr le_refl, \\\",\\\", expr le_trans (norm_fst_le q)\\n   A, \\\",\\\", expr nat.cast_nonneg, \\\",\\\", expr mul_nonneg, \\\",\\\", expr pow_le_pow_of_le_left, \\\",\\\", expr pow_nonneg, \\\",\\\", expr norm_snd_le\\n   «expr - »(q, p), \\\",\\\", expr norm_nonneg, \\\",\\\", expr norm_fst_le «expr - »(q, p), \\\",\\\", expr prod_nonneg, \\\"]\\\"],\\n  []]: ./././Mathport/Syntax/Translate/Basic.lean:349:22: unsupported: parse error\"\n    _ =\n        ((«expr‖ ‖» p + 1) * fintype.card ι * («expr‖ ‖» p + 1) ^ (fintype.card ι - 1) +\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (p.2 i))) *\n          dist q p :=\n      by\n      rw [dist_eq_norm]\n      ring\n    \n#align continuous_eval continuous_eval\n\n",
 "comp_continuous_linear_mapL_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem comp_continuous_linear_mapL_apply (g : continuous_multilinear_map 𝕜 E₁ G)\n    (f : ∀ i, «expr →L[ ] » (E i) 𝕜 (E₁ i)) : comp_continuous_linear_mapL f g = g.comp_continuous_linear_map f :=\n  rfl\n#align comp_continuous_linear_mapL_apply comp_continuous_linear_mapL_apply\n\n",
 "coe_mk_continuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_mk_continuous (C : exprℝ)\n    (H :\n      ∀ m,\n        «expr‖ ‖» (f m) ≤\n          C *\n            finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n              («expr‖ ‖» (m i))) :\n    «expr⇑ » (f.mk_continuous C H) = f :=\n  rfl\n#align coe_mk_continuous coe_mk_continuous\n\n",
 "bounds_nonempty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- So that invocations of `le_cInf` make sense: we show that the set of\n-- bounds is nonempty and bounded below.\ntheorem bounds_nonempty {f : continuous_multilinear_map 𝕜 E G} :\n    ∃ c,\n      c ∈\n        { c |\n          0 ≤ c ∧\n            ∀ m,\n              «expr‖ ‖» (f m) ≤\n                c *\n                  finset.prod_univ\n                    \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                    («expr‖ ‖» (m i)) } :=\n  let ⟨M, hMp, hMb⟩ := f.bound\n  ⟨M, le_of_lt hMp, hMb⟩\n#align bounds_nonempty bounds_nonempty\n\n",
 "bounds_bdd_below":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem bounds_bdd_below {f : continuous_multilinear_map 𝕜 E G} :\n    BddBelow\n      { c |\n        0 ≤ c ∧\n          ∀ m,\n            «expr‖ ‖» (f m) ≤\n              c *\n                finset.prod_univ\n                  \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                  («expr‖ ‖» (m i)) } :=\n  ⟨0, fun _ ⟨hn, _⟩ => hn⟩\n#align bounds_bdd_below bounds_bdd_below\n\n",
 "bound_of_shell":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-\nCopyright (c) 2020 Sébastien Gouëzel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Sébastien Gouëzel\n-/\n/-- If a multilinear map in finitely many variables on normed spaces satisfies the inequality\n`‖f m‖ ≤ C * ∏ i, ‖m i‖` on a shell `ε i / ‖c i‖ < ‖m i‖ < ε i` for some positive numbers `ε i`\nand elements `c i : 𝕜`, `1 < ‖c i‖`, then it satisfies this inequality for all `m`. -/\ntheorem bound_of_shell {ε : ι → exprℝ} {C : exprℝ} (hε : ∀ i, 0 < ε i) {c : ι → 𝕜} (hc : ∀ i, 1 < «expr‖ ‖» (c i))\n    (hf :\n      ∀ m : ∀ i, E i,\n        (∀ i, ε i / «expr‖ ‖» (c i) ≤ «expr‖ ‖» (m i)) →\n          (∀ i, «expr‖ ‖» (m i) < ε i) →\n            «expr‖ ‖» (f m) ≤\n              C *\n                finset.prod_univ\n                  \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                  («expr‖ ‖» (m i)))\n    (m : ∀ i, E i) :\n    «expr‖ ‖» (f m) ≤\n      C *\n        finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n          («expr‖ ‖» (m i)) :=\n  by\n  rcases em (∃ i, m i = 0) with (⟨i, hi⟩ | hm) <;> [skip, push_neg  at hm]\n  · simp [f.map_coord_zero i hi, prod_eq_zero (mem_univ i), hi]\n  choose δ hδ0 hδm_lt hle_δm hδinv using fun i => rescale_to_shell (hc i) (hε i) (hm i)\n  have hδ0 :\n    0 <\n      finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n        («expr‖ ‖» (δ i)) :=\n    prod_pos fun i _ => norm_pos_iff.2 (hδ0 i)\n  simpa [map_smul_univ, norm_smul, prod_mul_distrib, mul_left_comm C, mul_le_mul_left hδ0] using\n    hf (fun i => «expr • » (δ i) (m i)) hle_δm hδm_lt\n#align bound_of_shell bound_of_shell\n\n",
 "bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem bound :\n    ∃ C : exprℝ,\n      0 < C ∧\n        ∀ m,\n          «expr‖ ‖» (f m) ≤\n            C *\n              finset.prod_univ\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n                («expr‖ ‖» (m i)) :=\n  f.to_multilinear_map.exists_bound_of_continuous f.2\n#align bound bound\n\n",
 "apply_zero_curry0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr [× ]→L[ ] » -/\n@[simp]\ntheorem continuous_multilinear_map.apply_zero_curry0 (f : «expr [× ]→L[ ] » G 0 𝕜 G') {x : fin 0 → G} :\n    continuous_multilinear_map.curry0 𝕜 G (f x) = f := by\n  ext m\n  simp [(subsingleton.elim _ _ : x = m)]\n#align continuous_multilinear_map.apply_zero_curry0 continuous_multilinear_map.apply_zero_curry0\n\n"}