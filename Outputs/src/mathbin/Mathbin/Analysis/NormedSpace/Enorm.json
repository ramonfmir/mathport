{"top_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem top_map {x : V} (hx : x ≠ 0) : («expr⊤» : enorm 𝕜 V) x = «expr⊤» :=\n  if_neg hx\n#align top_map top_map\n\n",
 "max_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[norm_cast]\ntheorem max_map (e₁ e₂ : enorm 𝕜 V) (x : V) : («expr ⊔ » e₁ e₂) x = max (e₁ x) (e₂ x) :=\n  rfl\n#align max_map max_map\n\n",
 "map_zero":
 "#print map_zero /-\n@[simp]\ntheorem map_zero : e 0 = 0 := by\n  rw [← zero_smul 𝕜 (0 : V), e.map_smul]\n  norm_num\n#align map_zero map_zero\n-/\n\n",
 "map_sub_rev":
 "#print map_sub_rev /-\ntheorem map_sub_rev (x y : V) : e (x - y) = e (y - x) := by rw [← neg_sub, e.map_neg]\n#align map_sub_rev map_sub_rev\n-/\n\n",
 "map_sub_le":
 "theorem map_sub_le (x y : V) : e (x - y) ≤ e x + e y :=\n  calc\n    e (x - y) = e (x + -y) := by rw [sub_eq_add_neg]\n    _ ≤ e x + e (-y) := (e.map_add_le x (-y))\n    _ = e x + e y := by rw [e.map_neg]\n    \n#align map_sub_le map_sub_le\n\n",
 "map_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem map_smul (c : 𝕜) (x : V) : e («expr • » c x) = «expr‖ ‖₊» c * e x :=\n  le_antisymm (e.map_smul_le' c x) <| by\n    by_cases hc : c = 0; · simp [hc]\n    calc\n      («expr‖ ‖₊» c : ennreal) * e x = «expr‖ ‖₊» c * e («expr • » c⁻¹ («expr • » c x)) := by rw [inv_smul_smul₀ hc]\n      _ ≤ «expr‖ ‖₊» c * («expr‖ ‖₊» c⁻¹ * e («expr • » c x)) := _\n      _ = e («expr • » c x) := _\n      \n    · exact mul_le_mul_left' (e.map_smul_le' _ _) _\n    · rw [← mul_assoc, nnnorm_inv, ENNReal.coe_inv, ENNReal.mul_inv_cancel _ ENNReal.coe_ne_top, one_mul] <;> simp [hc]\n#align map_smul map_smul\n\n",
 "map_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n#print map_neg /-\n@[simp]\ntheorem map_neg (x : V) : e (-x) = e x :=\n  calc\n    e (-x) = «expr‖ ‖₊» (-1 : 𝕜) * e x := by rw [← map_smul, neg_one_smul]\n    _ = e x := by simp\n    \n#align map_neg map_neg\n-/\n\n",
 "map_add_le":
 "theorem map_add_le (x y : V) : e (x + y) ≤ e x + e y :=\n  e.map_add_le' x y\n#align map_add_le map_add_le\n\n",
 "finite_norm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem finite_norm_eq (x : e.finite_subspace) : «expr‖ ‖» x = (e x).to_real :=\n  rfl\n#align finite_norm_eq finite_norm_eq\n\n",
 "finite_edist_eq":
 "theorem finite_edist_eq (x y : e.finite_subspace) : edist x y = e (x - y) :=\n  rfl\n#align finite_edist_eq finite_edist_eq\n\n",
 "finite_dist_eq":
 "theorem finite_dist_eq (x y : e.finite_subspace) : dist x y = (e (x - y)).to_real :=\n  rfl\n#align finite_dist_eq finite_dist_eq\n\n",
 "ext_iff":
 "theorem ext_iff {e₁ e₂ : enorm 𝕜 V} : e₁ = e₂ ↔ ∀ x, e₁ x = e₂ x :=\n  ⟨fun h x => h ▸ rfl, ext⟩\n#align ext_iff ext_iff\n\n",
 "ext":
 "@[ext]\ntheorem ext {e₁ e₂ : enorm 𝕜 V} (h : ∀ x, e₁ x = e₂ x) : e₁ = e₂ :=\n  coe_fn_injective <| funext h\n#align ext ext\n\n",
 "eq_zero_iff":
 "@[simp]\ntheorem eq_zero_iff {x : V} : e x = 0 ↔ x = 0 :=\n  ⟨e.eq_zero' x, fun h => h.symm ▸ e.map_zero⟩\n#align eq_zero_iff eq_zero_iff\n\n",
 "coe_max":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp, norm_cast]\ntheorem coe_max (e₁ e₂ : enorm 𝕜 V) : «expr⇑ » («expr ⊔ » e₁ e₂) = fun x => max (e₁ x) (e₂ x) :=\n  rfl\n#align coe_max coe_max\n\n",
 "coe_inj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n@[simp, norm_cast]\ntheorem coe_inj {e₁ e₂ : enorm 𝕜 V} : (e₁ : V → ennreal) = e₂ ↔ e₁ = e₂ :=\n  coe_fn_injective.eq_iff\n#align coe_inj coe_inj\n\n",
 "coe_fn_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/-\nCopyright (c) 2020 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov\n-/\ntheorem coe_fn_injective : function.injective (coe_fn : enorm 𝕜 V → V → ennreal) := fun e₁ e₂ h => by\n  cases e₁ <;> cases e₂ <;> congr <;> exact h\n#align coe_fn_injective coe_fn_injective\n\n"}