{"norm_extend_to_𝕜'_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The norm of the extension is bounded by `‖fr‖`. -/\ntheorem norm_extend_to_𝕜'_bound (fr : «expr →L[ ] » F (exprℝ) (exprℝ)) (x : F) :\n    «expr‖ ‖» (fr.to_linear_map.extend_to_𝕜' x : 𝕜) ≤ «expr‖ ‖» fr * «expr‖ ‖» x :=\n  by\n  set lm : «expr →ₗ[ ] » F 𝕜 𝕜 := fr.to_linear_map.extend_to_𝕜'\n  classical\n    by_cases h : lm x = 0\n    · rw [h, norm_zero]\n      apply mul_nonneg <;> exact norm_nonneg _\n    rw [← mul_le_mul_left (norm_pos_iff.2 h), ← sq]\n    calc\n      «expr‖ ‖» (lm x) ^ 2 = fr («expr • » ((star_ring_end) (lm x : 𝕜)) x) :=\n        fr.to_linear_map.norm_extend_to_𝕜'_apply_sq x\n      _ ≤ «expr‖ ‖» (fr («expr • » ((star_ring_end) (lm x : 𝕜)) x)) := (le_abs_self _)\n      _ ≤ «expr‖ ‖» fr * «expr‖ ‖» («expr • » ((star_ring_end) (lm x : 𝕜)) x) := (le_op_norm _ _)\n      _ = «expr‖ ‖» (lm x : 𝕜) * («expr‖ ‖» fr * «expr‖ ‖» x) := by rw [norm_smul, norm_conj, mul_left_comm]\n      \n#align norm_extend_to_𝕜'_bound norm_extend_to_𝕜'_bound\n\n",
 "norm_extend_to_𝕜'_apply_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem norm_extend_to_𝕜'_apply_sq (f : «expr →ₗ[ ] » F (exprℝ) (exprℝ)) (x : F) :\n    «expr‖ ‖» (f.extend_to_𝕜' x : 𝕜) ^ 2 = f («expr • » ((star_ring_end) (f.extend_to_𝕜' x : 𝕜)) x) :=\n  calc\n    «expr‖ ‖» (f.extend_to_𝕜' x : 𝕜) ^ 2 = re ((star_ring_end) (f.extend_to_𝕜' x) * f.extend_to_𝕜' x : 𝕜) := by\n      rw [IsROrC.conj_mul, norm_sq_eq_def', of_real_re]\n    _ = f («expr • » ((star_ring_end) (f.extend_to_𝕜' x : 𝕜)) x) := by\n      rw [← smul_eq_mul, ← map_smul, extend_to_𝕜'_apply_re]\n    \n#align norm_extend_to_𝕜'_apply_sq norm_extend_to_𝕜'_apply_sq\n\n",
 "norm_extend_to_𝕜'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_extend_to_𝕜' (fr : «expr →L[ ] » F (exprℝ) (exprℝ)) :\n    «expr‖ ‖» (fr.extend_to_𝕜' : «expr →L[ ] » F 𝕜 𝕜) = «expr‖ ‖» fr :=\n  le_antisymm (linear_map.mk_continuous_norm_le _ (norm_nonneg _) _) <|\n    op_norm_le_bound _ (norm_nonneg _) fun x =>\n      calc\n        «expr‖ ‖» (fr x) = «expr‖ ‖» (re (fr.extend_to_𝕜' x : 𝕜)) := congr_arg norm (fr.extend_to_𝕜'_apply_re x).symm\n        _ ≤ «expr‖ ‖» (fr.extend_to_𝕜' x : 𝕜) := ((abs_re_le_abs _).trans_eq (norm_eq_abs _).symm)\n        _ ≤ «expr‖ ‖» (fr.extend_to_𝕜' : «expr →L[ ] » F 𝕜 𝕜) * «expr‖ ‖» x := le_op_norm _ _\n        \n#align norm_extend_to_𝕜' norm_extend_to_𝕜'\n\n",
 "norm_extend_to_𝕜":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem continuous_linear_map.norm_extend_to_𝕜 (fr : «expr →L[ ] » (RestrictScalars (exprℝ) 𝕜 F) (exprℝ) (exprℝ)) :\n    «expr‖ ‖» fr.extend_to_𝕜 = «expr‖ ‖» fr :=\n  fr.norm_extend_to_𝕜'\n#align continuous_linear_map.norm_extend_to_𝕜 continuous_linear_map.norm_extend_to_𝕜\n\n",
 "extend_to_𝕜_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem continuous_linear_map.extend_to_𝕜_apply (fr : «expr →L[ ] » (RestrictScalars (exprℝ) 𝕜 F) (exprℝ) (exprℝ))\n    (x : F) : fr.extend_to_𝕜 x = (fr x : 𝕜) - (I : 𝕜) * fr («expr • » (I : 𝕜) x : _) :=\n  rfl\n#align continuous_linear_map.extend_to_𝕜_apply continuous_linear_map.extend_to_𝕜_apply\n\n",
 "extend_to_𝕜'_apply_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem extend_to_𝕜'_apply_re (fr : «expr →ₗ[ ] » F (exprℝ) (exprℝ)) (x : F) : re (fr.extend_to_𝕜' x : 𝕜) = fr x := by\n  simp only [extend_to_𝕜'_apply, map_sub, MulZeroClass.zero_mul, MulZeroClass.mul_zero, sub_zero, is_R_or_C_simps]\n#align extend_to_𝕜'_apply_re extend_to_𝕜'_apply_re\n\n",
 "extend_to_𝕜'_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem extend_to_𝕜'_apply (fr : «expr →L[ ] » F (exprℝ) (exprℝ)) (x : F) :\n    fr.extend_to_𝕜' x = (fr x : 𝕜) - (I : 𝕜) * fr («expr • » (I : 𝕜) x) :=\n  rfl\n#align extend_to_𝕜'_apply extend_to_𝕜'_apply\n\n"}