{"re_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem re_exp (q : quaternion (exprℝ)) : (exp (exprℝ) q).re = exp (exprℝ) q.re * Real.cos («expr‖ ‖» (q - q.re)) := by\n  simp [exp_eq]\n#align re_exp re_exp\n\n",
 "norm_sq_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem norm_sq_exp (q : quaternion (exprℝ)) : norm_sq (exp (exprℝ) q) = exp (exprℝ) q.re ^ 2 :=\n  calc\n    norm_sq (exp (exprℝ) q) =\n        norm_sq\n          («expr • » (exp (exprℝ) q.re)\n            (↑(Real.cos («expr‖ ‖» q.im)) + «expr • » (Real.sin («expr‖ ‖» q.im) / «expr‖ ‖» q.im) q.im)) :=\n      by rw [exp_eq]\n    _ =\n        exp (exprℝ) q.re ^ 2 *\n          norm_sq (↑(Real.cos («expr‖ ‖» q.im)) + «expr • » (Real.sin («expr‖ ‖» q.im) / «expr‖ ‖» q.im) q.im) :=\n      by rw [norm_sq_smul]\n    _ = exp (exprℝ) q.re ^ 2 * (Real.cos («expr‖ ‖» q.im) ^ 2 + Real.sin («expr‖ ‖» q.im) ^ 2) :=\n      by\n      congr 1\n      obtain hv | hv := eq_or_ne («expr‖ ‖» q.im) 0\n      · simp [hv]\n      rw [norm_sq_add, norm_sq_smul, star_smul, coe_mul_eq_smul, smul_re, smul_re, star_re, im_re, smul_zero, smul_zero,\n        MulZeroClass.mul_zero, add_zero, div_pow, norm_sq_coe, norm_sq_eq_norm_sq, ← sq,\n        div_mul_cancel _ (pow_ne_zero _ hv)]\n    _ = exp (exprℝ) q.re ^ 2 := by rw [Real.cos_sq_add_sin_sq, mul_one]\n    \n#align norm_sq_exp norm_sq_exp\n\n",
 "norm_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Note that this implies that exponentials of pure imaginary quaternions are unit quaternions\nsince in that case the RHS is `1` via `exp_zero` and `norm_one`. -/\n@[simp]\ntheorem norm_exp (q : quaternion (exprℝ)) : «expr‖ ‖» (exp (exprℝ) q) = «expr‖ ‖» (exp (exprℝ) q.re) := by\n  rw [norm_eq_sqrt_real_inner (exp (exprℝ) q), inner_self, norm_sq_exp, Real.sqrt_sq_eq_abs, Real.norm_eq_abs]\n#align norm_exp norm_exp\n\n",
 "im_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem im_exp (q : quaternion (exprℝ)) :\n    (exp (exprℝ) q).im = «expr • » (exp (exprℝ) q.re * (Real.sin («expr‖ ‖» q.im) / «expr‖ ‖» q.im)) q.im := by\n  simp [exp_eq, smul_smul]\n#align im_exp im_exp\n\n",
 "has_sum_exp_series_of_imaginary":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Auxiliary result; if the power series corresponding to `real.cos` and `real.sin` evaluated\nat `‖q‖` tend to `c` and `s`, then the exponential series tends to `c + (s / ‖q‖)`. -/\ntheorem has_sum_exp_series_of_imaginary {q : quaternion (exprℝ)} (hq : q.re = 0) {c s : exprℝ}\n    (hc : HasSum (fun n => (-1) ^ n * «expr‖ ‖» q ^ (2 * n) / nat.factorial (2 * n)) c)\n    (hs : HasSum (fun n => (-1) ^ n * «expr‖ ‖» q ^ (2 * n + 1) / nat.factorial (2 * n + 1)) s) :\n    HasSum (fun n => exp_series (exprℝ) _ n fun _ => q) (↑c + «expr • » (s / «expr‖ ‖» q) q) :=\n  by\n  replace hc := has_sum_coe.mpr hc\n  replace hs := (hs.div_const («expr‖ ‖» q)).smul_const q\n  obtain rfl | hq0 := eq_or_ne q 0\n  · simp_rw [exp_series_apply_zero, norm_zero, div_zero, zero_smul, add_zero]\n    simp_rw [norm_zero] at hc\n    convert hc\n    ext (_ | n) : 1\n    ·\n      rw [pow_zero, MulZeroClass.mul_zero, pow_zero, Nat.factorial_zero, Nat.cast_one, div_one, one_mul,\n        Pi.single_eq_same, coe_one]\n    ·\n      rw [zero_pow (mul_pos two_pos (nat.succ_pos _)), MulZeroClass.mul_zero, zero_div,\n        Pi.single_eq_of_ne n.succ_ne_zero, coe_zero]\n  simp_rw [exp_series_apply_eq]\n  have hq2 : q ^ 2 = -norm_sq q := sq_eq_neg_norm_sq.mpr hq\n  have hqn := norm_ne_zero_iff.mpr hq0\n  refine' HasSum.even_add_odd _ _\n  · convert hc using 1\n    ext n : 1\n    let k : exprℝ := ↑(nat.factorial (2 * n))\n    calc\n      «expr • » k⁻¹ (q ^ (2 * n)) = «expr • » k⁻¹ ((-norm_sq q) ^ n) := by rw [pow_mul, hq2]\n      _ = «expr • » k⁻¹ ↑((-1) ^ n * «expr‖ ‖» q ^ (2 * n)) := _\n      _ = ↑((-1) ^ n * «expr‖ ‖» q ^ (2 * n) / k) := _\n      \n    · congr 1\n      rw [neg_pow, norm_sq_eq_norm_sq, pow_mul, sq]\n      push_cast\n    · rw [← coe_mul_eq_smul, div_eq_mul_inv]\n      norm_cast\n      ring_nf\n  · convert hs using 1\n    ext n : 1\n    let k : exprℝ := ↑(nat.factorial (2 * n + 1))\n    calc\n      «expr • » k⁻¹ (q ^ (2 * n + 1)) = «expr • » k⁻¹ ((-norm_sq q) ^ n * q) := by rw [pow_succ', pow_mul, hq2]\n      _ = «expr • » k⁻¹ («expr • » ((-1) ^ n * «expr‖ ‖» q ^ (2 * n)) q) := _\n      _ = «expr • » ((-1) ^ n * «expr‖ ‖» q ^ (2 * n + 1) / k / «expr‖ ‖» q) q := _\n      \n    · congr 1\n      rw [neg_pow, norm_sq_eq_norm_sq, pow_mul, sq, ← coe_mul_eq_smul]\n      push_cast\n    · rw [smul_smul]\n      congr 1\n      simp_rw [pow_succ', mul_div_assoc, div_div_cancel_left' hqn]\n      ring\n#align has_sum_exp_series_of_imaginary has_sum_exp_series_of_imaginary\n\n",
 "exp_of_re_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The closed form for the quaternion exponential on imaginary quaternions. -/\ntheorem exp_of_re_eq_zero (q : quaternion (exprℝ)) (hq : q.re = 0) :\n    exp (exprℝ) q = ↑(Real.cos («expr‖ ‖» q)) + «expr • » (Real.sin («expr‖ ‖» q) / «expr‖ ‖» q) q :=\n  by\n  rw [exp_eq_tsum]\n  refine' HasSum.tsum_eq _\n  simp_rw [← exp_series_apply_eq]\n  exact has_sum_exp_series_of_imaginary hq (real.has_sum_cos _) (real.has_sum_sin _)\n#align exp_of_re_eq_zero exp_of_re_eq_zero\n\n",
 "exp_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The closed form for the quaternion exponential on arbitrary quaternions. -/\ntheorem exp_eq (q : quaternion (exprℝ)) :\n    exp (exprℝ) q =\n      «expr • » (exp (exprℝ) q.re)\n        (↑(Real.cos («expr‖ ‖» q.im)) + «expr • » (Real.sin («expr‖ ‖» q.im) / «expr‖ ‖» q.im) q.im) :=\n  by\n  rw [← exp_of_re_eq_zero q.im q.im_re, ← coe_mul_eq_smul, ← exp_coe, ← exp_add_of_commute, re_add_im]\n  exact Algebra.commutes q.re (_ : quaternion (exprℝ))\n#align exp_eq exp_eq\n\n",
 "exp_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2023 Eric Wieser. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Eric Wieser\n-/\n@[simp, norm_cast]\ntheorem exp_coe (r : exprℝ) : exp (exprℝ) (r : quaternion (exprℝ)) = ↑(exp (exprℝ) r) :=\n  (map_exp (exprℝ) (algebraMap (exprℝ) (quaternion (exprℝ))) (continuous_algebraMap _ _) _).symm\n#align exp_coe exp_coe\n\n"}