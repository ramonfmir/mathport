{"ker_closed_complemented_of_finite_dimensional_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚ÜíL[ ] ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Üí‚Çó[ ] ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Üí‚Çó[ ] ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚ÜíL[ ] ¬ª -/\n/-\nCopyright (c) 2020 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\ntheorem ker_closed_complemented_of_finite_dimensional_range (f : ¬´expr ‚ÜíL[ ] ¬ª E ùïú F) [FiniteDimensional ùïú (range f)] :\n    (ker f).closed_complemented :=\n  by\n  set f' : ¬´expr ‚ÜíL[ ] ¬ª E ùïú (range f) := f.cod_restrict _ (f : ¬´expr ‚Üí‚Çó[ ] ¬ª E ùïú F).mem_range_self\n  rcases f'.exists_right_inverse_of_surjective (f : ¬´expr ‚Üí‚Çó[ ] ¬ª E ùïú F).range_range_restrict with ‚ü®g, hg‚ü©\n  simpa only [ker_cod_restrict] using f'.closed_complemented_ker_of_right_inverse g (ext_iff.1 hg)\n#align ker_closed_complemented_of_finite_dimensional_range ker_closed_complemented_of_finite_dimensional_range\n\n",
 "equiv_prod_of_surjective_of_is_compl_to_linear_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚ÜíL[ ] ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚ÜíL[ ] ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚ä§¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚ä§¬ª -/\n@[simp]\ntheorem equiv_prod_of_surjective_of_is_compl_to_linear_equiv {f : ¬´expr ‚ÜíL[ ] ¬ª E ùïú F} {g : ¬´expr ‚ÜíL[ ] ¬ª E ùïú G}\n    (hf : range f = ¬´expr‚ä§¬ª) (hg : range g = ¬´expr‚ä§¬ª) (hfg : IsCompl (ker f) (ker g)) :\n    (equiv_prod_of_surjective_of_is_compl f g hf hg hfg).to_linear_equiv =\n      LinearMap.equivProdOfSurjectiveOfIsCompl f g hf hg hfg :=\n  rfl\n#align equiv_prod_of_surjective_of_is_compl_to_linear_equiv equiv_prod_of_surjective_of_is_compl_to_linear_equiv\n\n",
 "equiv_prod_of_surjective_of_is_compl_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚ÜíL[ ] ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚ÜíL[ ] ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚ä§¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚ä§¬ª -/\n@[simp]\ntheorem equiv_prod_of_surjective_of_is_compl_apply {f : ¬´expr ‚ÜíL[ ] ¬ª E ùïú F} {g : ¬´expr ‚ÜíL[ ] ¬ª E ùïú G}\n    (hf : range f = ¬´expr‚ä§¬ª) (hg : range g = ¬´expr‚ä§¬ª) (hfg : IsCompl (ker f) (ker g)) (x : E) :\n    equiv_prod_of_surjective_of_is_compl f g hf hg hfg x = (f x, g x) :=\n  rfl\n#align equiv_prod_of_surjective_of_is_compl_apply equiv_prod_of_surjective_of_is_compl_apply\n\n",
 "coe_prod_equiv_of_closed_compl_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚áë ¬ª -/\n@[simp]\ntheorem coe_prod_equiv_of_closed_compl_symm (h : IsCompl p q) (hp : IsClosed (p : Set E)) (hq : IsClosed (q : Set E)) :\n    ¬´expr‚áë ¬ª (p.prod_equiv_of_closed_compl q h hp hq).symm = (p.prod_equiv_of_is_compl q h).symm :=\n  rfl\n#align coe_prod_equiv_of_closed_compl_symm coe_prod_equiv_of_closed_compl_symm\n\n",
 "coe_prod_equiv_of_closed_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚áë ¬ª -/\n@[simp]\ntheorem coe_prod_equiv_of_closed_compl (h : IsCompl p q) (hp : IsClosed (p : Set E)) (hq : IsClosed (q : Set E)) :\n    ¬´expr‚áë ¬ª (p.prod_equiv_of_closed_compl q h hp hq) = p.prod_equiv_of_is_compl q h :=\n  rfl\n#align coe_prod_equiv_of_closed_compl coe_prod_equiv_of_closed_compl\n\n",
 "coe_equiv_prod_of_surjective_of_is_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚ÜíL[ ] ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚ÜíL[ ] ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚ä§¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚ä§¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Üí‚Çó[ ] ¬ª -/\n@[simp]\ntheorem coe_equiv_prod_of_surjective_of_is_compl {f : ¬´expr ‚ÜíL[ ] ¬ª E ùïú F} {g : ¬´expr ‚ÜíL[ ] ¬ª E ùïú G}\n    (hf : range f = ¬´expr‚ä§¬ª) (hg : range g = ¬´expr‚ä§¬ª) (hfg : IsCompl (ker f) (ker g)) :\n    (equiv_prod_of_surjective_of_is_compl f g hf hg hfg : ¬´expr ‚Üí‚Çó[ ] ¬ª E ùïú (F √ó G)) = f.prod g :=\n  rfl\n#align coe_equiv_prod_of_surjective_of_is_compl coe_equiv_prod_of_surjective_of_is_compl\n\n",
 "coe_continuous_linear_proj_of_closed_compl'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚áë ¬ª -/\n@[simp]\ntheorem coe_continuous_linear_proj_of_closed_compl' (h : IsCompl p q) (hp : IsClosed (p : Set E))\n    (hq : IsClosed (q : Set E)) : ¬´expr‚áë ¬ª (p.linear_proj_of_closed_compl q h hp hq) = p.linear_proj_of_is_compl q h :=\n  rfl\n#align coe_continuous_linear_proj_of_closed_compl' coe_continuous_linear_proj_of_closed_compl'\n\n",
 "coe_continuous_linear_proj_of_closed_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Üí‚Çó[ ] ¬ª -/\n@[simp]\ntheorem coe_continuous_linear_proj_of_closed_compl (h : IsCompl p q) (hp : IsClosed (p : Set E))\n    (hq : IsClosed (q : Set E)) :\n    (p.linear_proj_of_closed_compl q h hp hq : ¬´expr ‚Üí‚Çó[ ] ¬ª E ùïú p) = p.linear_proj_of_is_compl q h :=\n  rfl\n#align coe_continuous_linear_proj_of_closed_compl coe_continuous_linear_proj_of_closed_compl\n\n",
 "closed_complemented_of_quotient_finite_dimensional":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚ß∏ ¬ª -/\ntheorem closed_complemented_of_quotient_finite_dimensional [CompleteSpace ùïú] [FiniteDimensional ùïú (¬´expr ‚ß∏ ¬ª E p)]\n    (hp : IsClosed (p : Set E)) : p.closed_complemented :=\n  by\n  obtain ‚ü®q, hq‚ü© : ‚àÉ q, IsCompl p q := p.exists_is_compl\n  haveI : FiniteDimensional ùïú q := (p.quotient_equiv_of_is_compl q hq).finite_dimensional\n  exact closed_complemented_of_closed_compl hq hp q.closed_of_finite_dimensional\n#align closed_complemented_of_quotient_finite_dimensional closed_complemented_of_quotient_finite_dimensional\n\n",
 "closed_complemented_of_closed_compl":
 "theorem closed_complemented_of_closed_compl (h : IsCompl p q) (hp : IsClosed (p : Set E)) (hq : IsClosed (q : Set E)) :\n    p.closed_complemented :=\n  ‚ü®p.linear_proj_of_closed_compl q h hp hq, Submodule.linearProjOfIsCompl_apply_left h‚ü©\n#align closed_complemented_of_closed_compl closed_complemented_of_closed_compl\n\n",
 "closed_complemented_iff_has_closed_compl":
 "theorem closed_complemented_iff_has_closed_compl :\n    p.closed_complemented ‚Üî IsClosed (p : Set E) ‚àß ‚àÉ (q : Subspace ùïú E)(hq : IsClosed (q : Set E)), IsCompl p q :=\n  ‚ü®fun h => ‚ü®h.is_closed, h.has_closed_complement‚ü©, fun ‚ü®hp, ‚ü®q, hq, hpq‚ü©‚ü© =>\n    closed_complemented_of_closed_compl hpq hp hq‚ü©\n#align closed_complemented_iff_has_closed_compl closed_complemented_iff_has_closed_compl\n\n"}