{"tsum_condensed_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_condensed_le (hf : ∀ ⦃m n⦄, 1 < m → m ≤ n → f n ≤ f m) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (2 ^ k * f (2 ^ k)) ≤\n      f 1 +\n        2 * «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f k) :=\n  by\n  rw [ennreal.tsum_eq_supr_nat' (tendsto_at_top_mono nat.le_succ tendsto_id), two_mul, ← two_nsmul]\n  refine'\n    supᵢ_le fun n =>\n      le_trans _ (add_le_add_left (nsmul_le_nsmul_of_le_right (ennreal.sum_le_tsum <| finset.Ico 2 (2 ^ n + 1)) _) _)\n  simpa using finset.sum_condensed_le hf n\n#align tsum_condensed_le tsum_condensed_le\n\n",
 "tendsto_sum_range_one_div_nat_succ_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- **Divergence of the Harmonic Series** -/\ntheorem real.tendsto_sum_range_one_div_nat_succ_at_top :\n    tendsto\n      (fun n =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          (1 / (i + 1) : exprℝ))\n      at_top at_top :=\n  by\n  rw [← not_summable_iff_tendsto_nat_at_top_of_nonneg]\n  · exact_mod_cast mt (summable_nat_add_iff 1).1 real.not_summable_one_div_nat_cast\n  · exact fun i => div_nonneg zero_le_one i.cast_add_one_pos.le\n#align real.tendsto_sum_range_one_div_nat_succ_at_top real.tendsto_sum_range_one_div_nat_succ_at_top\n\n",
 "summable_rpow_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n@[simp]\ntheorem nnreal.summable_rpow_inv {p : exprℝ} : summable (fun n => (n ^ p)⁻¹ : ℕ → nnreal) ↔ 1 < p := by\n  simp [← nnreal.summable_coe]\n#align nnreal.summable_rpow_inv nnreal.summable_rpow_inv\n\n",
 "summable_rpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n@[simp]\ntheorem nnreal.summable_rpow {p : exprℝ} : summable (fun n => n ^ p : ℕ → nnreal) ↔ p < -1 := by\n  simp [← nnreal.summable_coe]\n#align nnreal.summable_rpow nnreal.summable_rpow\n\n",
 "summable_one_div_rpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\ntheorem nnreal.summable_one_div_rpow {p : exprℝ} : summable (fun n => 1 / n ^ p : ℕ → nnreal) ↔ 1 < p := by simp\n#align nnreal.summable_one_div_rpow nnreal.summable_one_div_rpow\n\n",
 "summable_one_div_nat_rpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Test for convergence of the `p`-series: the real-valued series `∑' n : ℕ, 1 / n ^ p` converges\nif and only if `1 < p`. -/\ntheorem real.summable_one_div_nat_rpow {p : exprℝ} : summable (fun n => 1 / n ^ p : ℕ → exprℝ) ↔ 1 < p := by simp\n#align real.summable_one_div_nat_rpow real.summable_one_div_nat_rpow\n\n",
 "summable_one_div_nat_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Test for convergence of the `p`-series: the real-valued series `∑' n : ℕ, 1 / n ^ p` converges\nif and only if `1 < p`. -/\ntheorem real.summable_one_div_nat_pow {p : ℕ} : summable (fun n => 1 / n ^ p : ℕ → exprℝ) ↔ 1 < p := by simp\n#align real.summable_one_div_nat_pow real.summable_one_div_nat_pow\n\n",
 "summable_one_div_int_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Summability of the `p`-series over `ℤ`. -/\ntheorem real.summable_one_div_int_pow {p : ℕ} : (summable fun n : ℤ => 1 / (n : exprℝ) ^ p) ↔ 1 < p :=\n  by\n  refine'\n    ⟨fun h => real.summable_one_div_nat_pow.mp (h.comp_injective Nat.cast_injective), fun h =>\n      summable_int_of_summable_nat (real.summable_one_div_nat_pow.mpr h)\n        (((real.summable_one_div_nat_pow.mpr h).mul_left <| 1 / (-1) ^ p).congr fun n => _)⟩\n  conv_rhs => rw [Int.cast_neg, neg_eq_neg_one_mul, mul_pow, ← div_div]\n  conv_lhs => rw [mul_div, mul_one]\n  rfl\n#align real.summable_one_div_int_pow real.summable_one_div_int_pow\n\n",
 "summable_nat_rpow_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Test for convergence of the `p`-series: the real-valued series `∑' n : ℕ, (n ^ p)⁻¹` converges\nif and only if `1 < p`. -/\n@[simp]\ntheorem real.summable_nat_rpow_inv {p : exprℝ} : summable (fun n => (n ^ p)⁻¹ : ℕ → exprℝ) ↔ 1 < p :=\n  by\n  cases' le_or_lt 0 p with hp hp\n  /- Cauchy condensation test applies only to antitone sequences, so we consider the\n    cases `0 ≤ p` and `p < 0` separately. -/\n  · rw [← summable_condensed_iff_of_nonneg]\n    · simp_rw [Nat.cast_pow, Nat.cast_two, ← rpow_nat_cast, ← rpow_mul zero_lt_two.le, mul_comm _ p,\n        rpow_mul zero_lt_two.le, rpow_nat_cast, ← inv_pow, ← mul_pow, summable_geometric_iff_norm_lt_1]\n      nth_rw 1 [← rpow_one 2]\n      rw [← division_def, ← rpow_sub zero_lt_two, norm_eq_abs, abs_of_pos (rpow_pos_of_pos zero_lt_two _),\n        rpow_lt_one_iff zero_lt_two.le]\n      norm_num\n    · intro n\n      exact inv_nonneg.2 (rpow_nonneg_of_nonneg n.cast_nonneg _)\n    · intro m n hm hmn\n      exact inv_le_inv_of_le (rpow_pos_of_pos (nat.cast_pos.2 hm) _) (rpow_le_rpow m.cast_nonneg (nat.cast_le.2 hmn) hp)\n  -- If `p < 0`, then `1 / n ^ p` tends to infinity, thus the series diverges.\n  · suffices ¬summable (fun n => (n ^ p)⁻¹ : ℕ → exprℝ)\n      by\n      have : ¬1 < p := fun hp₁ => hp.not_le (zero_le_one.trans hp₁.le)\n      simpa [this, -one_div]\n    · intro h\n      obtain ⟨k : ℕ, hk₁ : ((k ^ p)⁻¹ : exprℝ) < 1, hk₀ : k ≠ 0⟩ :=\n        ((h.tendsto_cofinite_zero.eventually (gt_mem_nhds zero_lt_one)).and (eventually_cofinite_ne 0)).exists\n      apply hk₀\n      rw [← pos_iff_ne_zero, ← @nat.cast_pos (exprℝ)] at hk₀\n      simpa [inv_lt_one_iff_of_pos (rpow_pos_of_pos hk₀ _), one_lt_rpow_iff_of_pos hk₀, hp, hp.not_lt, hk₀] using hk₁\n#align real.summable_nat_rpow_inv real.summable_nat_rpow_inv\n\n",
 "summable_nat_rpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem real.summable_nat_rpow {p : exprℝ} : summable (fun n => n ^ p : ℕ → exprℝ) ↔ p < -1 :=\n  by\n  rcases neg_surjective p with ⟨p, rfl⟩\n  simp [rpow_neg]\n#align real.summable_nat_rpow real.summable_nat_rpow\n\n",
 "summable_nat_pow_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Test for convergence of the `p`-series: the real-valued series `∑' n : ℕ, (n ^ p)⁻¹` converges\nif and only if `1 < p`. -/\n@[simp]\ntheorem real.summable_nat_pow_inv {p : ℕ} : summable (fun n => (n ^ p)⁻¹ : ℕ → exprℝ) ↔ 1 < p := by\n  simp only [← rpow_nat_cast, real.summable_nat_rpow_inv, nat.one_lt_cast]\n#align real.summable_nat_pow_inv real.summable_nat_pow_inv\n\n",
 "summable_condensed_iff_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Cauchy condensation test for series of nonnegative real numbers. -/\ntheorem summable_condensed_iff_of_nonneg {f : ℕ → exprℝ} (h_nonneg : ∀ n, 0 ≤ f n)\n    (h_mono : ∀ ⦃m n⦄, 0 < m → m ≤ n → f n ≤ f m) : (summable fun k : ℕ => 2 ^ k * f (2 ^ k)) ↔ summable f :=\n  by\n  lift f to ℕ → nnreal using h_nonneg\n  simp only [nnreal.coe_le_coe] at *\n  exact_mod_cast nnreal.summable_condensed_iff h_mono\n#align summable_condensed_iff_of_nonneg summable_condensed_iff_of_nonneg\n\n",
 "summable_condensed_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/-- Cauchy condensation test for a series of `nnreal` version. -/\ntheorem summable_condensed_iff {f : ℕ → nnreal} (hf : ∀ ⦃m n⦄, 0 < m → m ≤ n → f n ≤ f m) :\n    (summable fun k : ℕ => 2 ^ k * f (2 ^ k)) ↔ summable f :=\n  by\n  simp only [← ennreal.tsum_coe_ne_top_iff_summable, ne.def, not_iff_not, ennreal.coe_mul, ennreal.coe_pow,\n    ennreal.coe_two]\n  constructor <;> intro h\n  · replace hf : ∀ m n, 1 < m → m ≤ n → (f n : ennreal) ≤ f m := fun m n hm hmn =>\n      ennreal.coe_le_coe.2 (hf (zero_lt_one.trans hm) hmn)\n    simpa [h, ennreal.add_eq_top] using ennreal.tsum_condensed_le hf\n  · replace hf : ∀ m n, 0 < m → m ≤ n → (f n : ennreal) ≤ f m := fun m n hm hmn => ennreal.coe_le_coe.2 (hf hm hmn)\n    simpa [h, ennreal.add_eq_top] using ennreal.le_tsum_condensed hf\n#align summable_condensed_iff summable_condensed_iff\n\n",
 "sum_condensed_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_condensed_le' (hf : ∀ ⦃m n⦄, 1 < m → m ≤ n → f n ≤ f m) (n : ℕ) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n        («expr • » (2 ^ k) (f (2 ^ (k + 1)))) ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (Ico 2 (2 ^ n + 1)) (f k) :=\n  by\n  induction' n with n ihn\n  · simp\n  suffices\n    «expr • » (2 ^ n) (f (2 ^ (n + 1))) ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (Ico (2 ^ n + 1) (2 ^ (n + 1) + 1)) (f k)\n    by\n    rw [sum_range_succ, ← sum_Ico_consecutive]\n    exact add_le_add ihn this\n    exacts[add_le_add_right n.one_le_two_pow _, add_le_add_right (Nat.pow_le_pow_of_le_right zero_lt_two n.le_succ) _]\n  have : ∀ k ∈ Ico (2 ^ n + 1) (2 ^ (n + 1) + 1), f (2 ^ (n + 1)) ≤ f k := fun k hk =>\n    hf (n.one_le_two_pow.trans_lt <| (nat.lt_succ_of_le le_rfl).trans_le (mem_Ico.mp hk).1)\n      (nat.le_of_lt_succ <| (mem_Ico.mp hk).2)\n  convert sum_le_sum this\n  simp [pow_succ, two_mul]\n#align sum_condensed_le' sum_condensed_le'\n\n",
 "sum_condensed_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_condensed_le (hf : ∀ ⦃m n⦄, 1 < m → m ≤ n → f n ≤ f m) (n : ℕ) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (n + 1))\n        («expr • » (2 ^ k) (f (2 ^ k))) ≤\n      f 1 +\n        «expr • » 2\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Ico 2 (2 ^ n + 1)) (f k)) :=\n  by\n  convert add_le_add_left (nsmul_le_nsmul_of_le_right (sum_condensed_le' hf n) 2) (f 1)\n  simp [sum_range_succ', add_comm, pow_succ, mul_nsmul', sum_nsmul]\n#align sum_condensed_le sum_condensed_le\n\n",
 "sum_Ioo_inv_sq_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_Ioo_inv_sq_le (k n : ℕ) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Ioo k n)\n        ((i ^ 2)⁻¹ : α) ≤\n      2 / (k + 1) :=\n  calc\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Ioo k n)\n          ((i ^ 2)⁻¹ : α) ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Ioc k (max (k + 1) n)) (i ^ 2)⁻¹ :=\n      by\n      apply sum_le_sum_of_subset_of_nonneg\n      · intro x hx\n        simp only [mem_Ioo] at hx\n        simp only [hx, hx.2.le, mem_Ioc, le_max_iff, or_true_iff, and_self_iff]\n      · intro i hi hident\n        exact inv_nonneg.2 (sq_nonneg _)\n    _ ≤\n        ((k + 1) ^ 2)⁻¹ +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Ioc k.succ (max (k + 1) n)) (i ^ 2)⁻¹ :=\n      by\n      rw [← nat.Icc_succ_left, ← nat.Ico_succ_right, sum_eq_sum_Ico_succ_bot]\n      swap; · exact nat.succ_lt_succ ((nat.lt_succ_self k).trans_le (le_max_left _ _))\n      rw [nat.Ico_succ_right, nat.Icc_succ_left, Nat.cast_succ]\n    _ ≤ ((k + 1) ^ 2)⁻¹ + (k + 1)⁻¹ :=\n      by\n      refine' add_le_add le_rfl ((sum_Ioc_inv_sq_le_sub _ (le_max_left _ _)).trans _)\n      · simp only [ne.def, nat.succ_ne_zero, not_false_iff]\n      · simp only [Nat.cast_succ, one_div, sub_le_self_iff, inv_nonneg, nat.cast_nonneg]\n    _ ≤ 1 / (k + 1) + 1 / (k + 1) :=\n      by\n      have A : (1 : α) ≤ k + 1 := by simp only [le_add_iff_nonneg_left, nat.cast_nonneg]\n      simp_rw [← one_div]\n      apply add_le_add_right\n      refine' div_le_div zero_le_one le_rfl (zero_lt_one.trans_le A) _\n      simpa using pow_le_pow A one_le_two\n    _ = 2 / (k + 1) := by ring\n    \n#align sum_Ioo_inv_sq_le sum_Ioo_inv_sq_le\n\n",
 "sum_Ioc_inv_sq_le_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_Ioc_inv_sq_le_sub {k n : ℕ} (hk : k ≠ 0) (h : k ≤ n) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Ioc k n)\n        ((i ^ 2)⁻¹ : α) ≤\n      k⁻¹ - n⁻¹ :=\n  by\n  refine' Nat.le_induction _ _ n h\n  · simp only [Ioc_self, sum_empty, sub_self]\n  intro n hn IH\n  rw [sum_Ioc_succ_top hn]\n  apply (add_le_add IH le_rfl).trans\n  simp only [sub_eq_add_neg, add_assoc, Nat.cast_add, Nat.cast_one, le_add_neg_iff_add_le, add_le_iff_nonpos_right,\n    neg_add_le_iff_le_add, add_zero]\n  have A : 0 < (n : α) := by simpa using hk.bot_lt.trans_le hn\n  have B : 0 < (n : α) + 1 := by linarith\n  field_simp [B.ne']\n  rw [div_le_div_iff _ A, ← sub_nonneg]\n  · ring_nf\n    exact B.le\n  · nlinarith\n#align sum_Ioc_inv_sq_le_sub sum_Ioc_inv_sq_le_sub\n\n",
 "not_summable_one_div_nat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Harmonic series is not unconditionally summable. -/\ntheorem real.not_summable_one_div_nat_cast : ¬summable (fun n => 1 / n : ℕ → exprℝ) := by\n  simpa only [inv_eq_one_div] using real.not_summable_nat_cast_inv\n#align real.not_summable_one_div_nat_cast real.not_summable_one_div_nat_cast\n\n",
 "not_summable_nat_cast_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Harmonic series is not unconditionally summable. -/\ntheorem real.not_summable_nat_cast_inv : ¬summable (fun n => n⁻¹ : ℕ → exprℝ) :=\n  by\n  have : ¬summable (fun n => (n ^ 1)⁻¹ : ℕ → exprℝ) := mt real.summable_nat_pow_inv.1 (lt_irrefl 1)\n  simpa\n#align real.not_summable_nat_cast_inv real.not_summable_nat_cast_inv\n\n",
 "le_tsum_condensed":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem le_tsum_condensed (hf : ∀ ⦃m n⦄, 0 < m → m ≤ n → f n ≤ f m) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f k) ≤\n      f 0 +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (2 ^ k * f (2 ^ k)) :=\n  by\n  rw [ennreal.tsum_eq_supr_nat' (nat.tendsto_pow_at_top_at_top_of_one_lt _root_.one_lt_two)]\n  refine' supᵢ_le fun n => (finset.le_sum_condensed hf n).trans (add_le_add_left _ _)\n  simp only [nsmul_eq_mul, Nat.cast_pow, Nat.cast_two]\n  apply ennreal.sum_le_tsum\n#align le_tsum_condensed le_tsum_condensed\n\n",
 "le_sum_condensed'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-\nCopyright (c) 2020 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov\n-/\ntheorem le_sum_condensed' (hf : ∀ ⦃m n⦄, 0 < m → m ≤ n → f n ≤ f m) (n : ℕ) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Ico 1 (2 ^ n))\n        (f k) ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n        («expr • » (2 ^ k) (f (2 ^ k))) :=\n  by\n  induction' n with n ihn\n  · simp\n  suffices\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (Ico (2 ^ n) (2 ^ (n + 1))) (f k) ≤\n      «expr • » (2 ^ n) (f (2 ^ n))\n    by\n    rw [sum_range_succ, ← sum_Ico_consecutive]\n    exact add_le_add ihn this\n    exacts[n.one_le_two_pow, Nat.pow_le_pow_of_le_right zero_lt_two n.le_succ]\n  have : ∀ k ∈ Ico (2 ^ n) (2 ^ (n + 1)), f k ≤ f (2 ^ n) := fun k hk => hf (pow_pos zero_lt_two _) (mem_Ico.mp hk).1\n  convert sum_le_sum this\n  simp [pow_succ, two_mul]\n#align le_sum_condensed' le_sum_condensed'\n\n",
 "le_sum_condensed":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem le_sum_condensed (hf : ∀ ⦃m n⦄, 0 < m → m ≤ n → f n ≤ f m) (n : ℕ) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (2 ^ n))\n        (f k) ≤\n      f 0 +\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n          («expr • » (2 ^ k) (f (2 ^ k))) :=\n  by\n  convert add_le_add_left (le_sum_condensed' hf n) (f 0)\n  rw [← sum_range_add_sum_Ico _ n.one_le_two_pow, sum_range_succ, sum_range_zero, zero_add]\n#align le_sum_condensed le_sum_condensed\n\n"}