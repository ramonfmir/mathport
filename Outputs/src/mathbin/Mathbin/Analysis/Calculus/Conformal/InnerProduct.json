{"conformal_factor_at_pos":
 "theorem conformal_factor_at_pos {f : E → F} {x : E} (h : conformal_at f x) : 0 < conformal_factor_at h :=\n  (Classical.choose_spec <| conformal_at_iff'.mp h).1\n#align conformal_factor_at_pos conformal_factor_at_pos\n\n",
 "conformal_factor_at_inner_eq_mul_inner'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\ntheorem conformal_factor_at_inner_eq_mul_inner' {f : E → F} {x : E} (h : conformal_at f x) (u v : E) :\n    inner.real ((fderiv (exprℝ) f x) u) ((fderiv (exprℝ) f x) v) = (conformal_factor_at h : exprℝ) * inner.real u v :=\n  (Classical.choose_spec <| conformal_at_iff'.mp h).2 u v\n#align conformal_factor_at_inner_eq_mul_inner' conformal_factor_at_inner_eq_mul_inner'\n\n",
 "conformal_factor_at_inner_eq_mul_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\ntheorem conformal_factor_at_inner_eq_mul_inner {f : E → F} {x : E} {f' : «expr →L[ ] » E (exprℝ) F}\n    (h : has_fderiv_at f f' x) (H : conformal_at f x) (u v : E) :\n    inner.real (f' u) (f' v) = (conformal_factor_at H : exprℝ) * inner.real u v :=\n  H.differentiable_at.has_fderiv_at.unique h ▸ conformal_factor_at_inner_eq_mul_inner' H u v\n#align conformal_factor_at_inner_eq_mul_inner conformal_factor_at_inner_eq_mul_inner\n\n",
 "conformal_at_iff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/-\nCopyright (c) 2021 Yourong Zang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yourong Zang\n-/\n/-- A real differentiable map `f` is conformal at point `x` if and only if its\n    differential `fderiv ℝ f x` at that point scales every inner product by a positive scalar. -/\ntheorem conformal_at_iff' {f : E → F} {x : E} :\n    conformal_at f x ↔\n      ∃ c : exprℝ, 0 < c ∧ ∀ u v : E, inner.real (fderiv (exprℝ) f x u) (fderiv (exprℝ) f x v) = c * inner.real u v :=\n  by rw [conformal_at_iff_is_conformal_map_fderiv, is_conformal_map_iff]\n#align conformal_at_iff' conformal_at_iff'\n\n",
 "conformal_at_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `inner.real -/\n/-- A real differentiable map `f` is conformal at point `x` if and only if its\n    differential `f'` at that point scales every inner product by a positive scalar. -/\ntheorem conformal_at_iff {f : E → F} {x : E} {f' : «expr →L[ ] » E (exprℝ) F} (h : has_fderiv_at f f' x) :\n    conformal_at f x ↔ ∃ c : exprℝ, 0 < c ∧ ∀ u v : E, inner.real (f' u) (f' v) = c * inner.real u v := by\n  simp only [conformal_at_iff', h.fderiv]\n#align conformal_at_iff conformal_at_iff\n\n"}