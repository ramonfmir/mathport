{"tendsto_uniformly_tsum_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- An infinite sum of functions with summable sup norm is the uniform limit of its partial sums.\nVersion with index set `ℕ`. -/\ntheorem tendsto_uniformly_tsum_nat {f : ℕ → β → F} {u : ℕ → exprℝ} (hu : Summable u)\n    (hfu : ∀ n x, «expr‖ ‖» (f n x) ≤ u n) :\n    TendstoUniformly\n      (fun N => fun x =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range N)\n          (f n x))\n      (fun x =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n x))\n      atTop :=\n  fun v hv => tendsto_finset_range.eventually (tendsto_uniformly_tsum hu hfu v hv)\n#align tendsto_uniformly_tsum_nat tendsto_uniformly_tsum_nat\n\n",
 "tendsto_uniformly_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- An infinite sum of functions with summable sup norm is the uniform limit of its partial sums.\nVersion with general index set. -/\ntheorem tendsto_uniformly_tsum {f : α → β → F} (hu : Summable u) (hfu : ∀ n x, «expr‖ ‖» (f n x) ≤ u n) :\n    TendstoUniformly\n      (fun t : Finset α => fun x =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (f n x))\n      (fun x =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n x))\n      atTop :=\n  by\n  rw [← tendstoUniformlyOn_univ]\n  exact tendsto_uniformly_on_tsum hu fun n x hx => hfu n x\n#align tendsto_uniformly_tsum tendsto_uniformly_tsum\n\n",
 "tendsto_uniformly_on_tsum_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- An infinite sum of functions with summable sup norm is the uniform limit of its partial sums.\nVersion relative to a set, with index set `ℕ`. -/\ntheorem tendsto_uniformly_on_tsum_nat {f : ℕ → β → F} {u : ℕ → exprℝ} (hu : Summable u) {s : Set β}\n    (hfu : ∀ n x, x ∈ s → «expr‖ ‖» (f n x) ≤ u n) :\n    TendstoUniformlyOn\n      (fun N => fun x =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range N)\n          (f n x))\n      (fun x =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n x))\n      atTop s :=\n  fun v hv => tendsto_finset_range.eventually (tendsto_uniformly_on_tsum hu hfu v hv)\n#align tendsto_uniformly_on_tsum_nat tendsto_uniformly_on_tsum_nat\n\n",
 "tendsto_uniformly_on_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-\nCopyright (c) 2022 Sébastien Gouëzel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Sébastien Gouëzel\n-/\n/-- An infinite sum of functions with summable sup norm is the uniform limit of its partial sums.\nVersion relative to a set, with general index set. -/\ntheorem tendsto_uniformly_on_tsum {f : α → β → F} (hu : Summable u) {s : Set β}\n    (hfu : ∀ n x, x ∈ s → «expr‖ ‖» (f n x) ≤ u n) :\n    TendstoUniformlyOn\n      (fun t : Finset α => fun x =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (f n x))\n      (fun x =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n x))\n      atTop s :=\n  by\n  refine' tendsto_uniformly_on_iff.2 fun ε εpos => _\n  filter_upwards [(tendsto_order.1 (tendsto_tsum_compl_atTop_zero u)).2 _ εpos]with t ht x hx\n  have A : Summable fun n => «expr‖ ‖» (f n x) :=\n    summable_of_nonneg_of_le (fun n => norm_nonneg _) (fun n => hfu n x hx) hu\n  rw [dist_eq_norm, ← sum_add_tsum_subtype_compl (summable_of_summable_norm A) t, add_sub_cancel']\n  apply lt_of_le_of_lt _ ht\n  apply (norm_tsum_le_tsum_norm (A.subtype _)).trans\n  exact tsum_le_tsum (fun n => hfu _ _ hx) (A.subtype _) (hu.subtype _)\n#align tendsto_uniformly_on_tsum tendsto_uniformly_on_tsum\n\n",
 "summable_of_summable_has_fderiv_at_of_is_preconnected":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Consider a series of functions `∑' n, f n x` on a preconnected open set. If the series converges\nat a point, and all functions in the series are differentiable with a summable bound on the\nderivatives, then the series converges everywhere on the set. -/\ntheorem summable_of_summable_has_fderiv_at_of_is_preconnected (hu : Summable u) (hs : IsOpen s) (h's : IsPreconnected s)\n    (hf : ∀ n x, x ∈ s → has_fderiv_at (f n) (f' n x) x) (hf' : ∀ n x, x ∈ s → «expr‖ ‖» (f' n x) ≤ u n) (hx₀ : x₀ ∈ s)\n    (hf0 : Summable fun n => f n x₀) {x : E} (hx : x ∈ s) : Summable fun n => f n x :=\n  by\n  rw [summable_iff_cauchySeq_finset] at hf0⊢\n  have A :\n    UniformCauchySeqOn\n      (fun t : Finset α => fun x =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (f' i x))\n      at_top s :=\n    (tendsto_uniformly_on_tsum hu hf').uniform_cauchy_seq_on\n  apply cauchy_map_of_uniform_cauchy_seq_on_fderiv hs h's A (fun t y hy => _) hx₀ hx hf0\n  exact has_fderiv_at.sum fun i hi => hf i y hy\n#align summable_of_summable_has_fderiv_at_of_is_preconnected summable_of_summable_has_fderiv_at_of_is_preconnected\n\n",
 "summable_of_summable_has_fderiv_at":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Consider a series of functions `∑' n, f n x`. If the series converges at a\npoint, and all functions in the series are differentiable with a summable bound on the derivatives,\nthen the series converges everywhere. -/\ntheorem summable_of_summable_has_fderiv_at (hu : Summable u) (hf : ∀ n x, has_fderiv_at (f n) (f' n x) x)\n    (hf' : ∀ n x, «expr‖ ‖» (f' n x) ≤ u n) (hf0 : Summable fun n => f n x₀) (x : E) : Summable fun n => f n x :=\n  by\n  let : NormedSpace (exprℝ) E; exact NormedSpace.restrictScalars (exprℝ) 𝕜 _\n  apply\n    summable_of_summable_has_fderiv_at_of_is_preconnected hu isOpen_univ is_connected_univ.is_preconnected\n      (fun n x hx => hf n x) (fun n x hx => hf' n x) (mem_univ _) hf0 (mem_univ _)\n#align summable_of_summable_has_fderiv_at summable_of_summable_has_fderiv_at\n\n",
 "iterated_fderiv_tsum_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Consider a series of smooth functions, with summable uniform bounds on the successive\nderivatives. Then the iterated derivative of the sum is the sum of the iterated derivative. -/\ntheorem iterated_fderiv_tsum_apply (hf : ∀ i, cont_diff 𝕜 N (f i)) (hv : ∀ k : ℕ, (k : «exprℕ∞») ≤ N → Summable (v k))\n    (h'f : ∀ (k : ℕ) (i : α) (x : E), (k : «exprℕ∞») ≤ N → «expr‖ ‖» (iterated_fderiv 𝕜 k (f i) x) ≤ v k i) {k : ℕ}\n    (hk : (k : «exprℕ∞») ≤ N) (x : E) :\n    iterated_fderiv 𝕜 k\n        (fun y =>\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n y))\n        x =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (iterated_fderiv 𝕜 k (f n) x) :=\n  by rw [iterated_fderiv_tsum hf hv h'f hk]\n#align iterated_fderiv_tsum_apply iterated_fderiv_tsum_apply\n\n",
 "iterated_fderiv_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Consider a series of smooth functions, with summable uniform bounds on the successive\nderivatives. Then the iterated derivative of the sum is the sum of the iterated derivative. -/\ntheorem iterated_fderiv_tsum (hf : ∀ i, cont_diff 𝕜 N (f i)) (hv : ∀ k : ℕ, (k : «exprℕ∞») ≤ N → Summable (v k))\n    (h'f : ∀ (k : ℕ) (i : α) (x : E), (k : «exprℕ∞») ≤ N → «expr‖ ‖» (iterated_fderiv 𝕜 k (f i) x) ≤ v k i) {k : ℕ}\n    (hk : (k : «exprℕ∞») ≤ N) :\n    (iterated_fderiv 𝕜 k fun y =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n y)) =\n      fun x =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (iterated_fderiv 𝕜 k (f n) x) :=\n  by\n  induction' k with k IH\n  · ext1 x\n    simp_rw [iterated_fderiv_zero_eq_comp]\n    exact (continuous_multilinear_curry_fin0 𝕜 E F).symm.to_continuous_linear_equiv.map_tsum\n  · have h'k : (k : «exprℕ∞») < N := lt_of_lt_of_le (WithTop.coe_lt_coe.2 (nat.lt_succ_self _)) hk\n    have A : Summable fun n => iterated_fderiv 𝕜 k (f n) 0 :=\n      summable_of_norm_bounded (v k) (hv k h'k.le) fun n => h'f k n 0 h'k.le\n    simp_rw [iterated_fderiv_succ_eq_comp_left, IH h'k.le]\n    rw [fderiv_tsum (hv _ hk) (fun n => (hf n).differentiable_iterated_fderiv h'k) _ A]\n    · ext1 x\n      exact (continuous_multilinear_curry_left_equiv 𝕜 (fun i : Fin (k + 1) => E) F).to_continuous_linear_equiv.map_tsum\n    · intro n x\n      simpa only [iterated_fderiv_succ_eq_comp_left, LinearIsometryEquiv.norm_map] using h'f k.succ n x hk\n#align iterated_fderiv_tsum iterated_fderiv_tsum\n\n",
 "has_fderiv_at_tsum_of_is_preconnected":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Consider a series of functions `∑' n, f n x` on a preconnected open set. If the series converges\nat a point, and all functions in the series are differentiable with a summable bound on the\nderivatives, then the series is differentiable on the set and its derivative is the sum of the\nderivatives. -/\ntheorem has_fderiv_at_tsum_of_is_preconnected (hu : Summable u) (hs : IsOpen s) (h's : IsPreconnected s)\n    (hf : ∀ n x, x ∈ s → has_fderiv_at (f n) (f' n x) x) (hf' : ∀ n x, x ∈ s → «expr‖ ‖» (f' n x) ≤ u n) (hx₀ : x₀ ∈ s)\n    (hf0 : Summable fun n => f n x₀) (hx : x ∈ s) :\n    has_fderiv_at\n      (fun y =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n y))\n      («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f' n x)) x :=\n  by\n  classical\n    have A :\n      ∀ x : E,\n        x ∈ s →\n          tendsto\n            (fun t : Finset α =>\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (f n x))\n            at_top\n            ((nhds)\n              («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n                (f n x))) :=\n      by\n      intro y hy\n      apply Summable.hasSum\n      exact summable_of_summable_has_fderiv_at_of_is_preconnected hu hs h's hf hf' hx₀ hf0 hy\n    apply has_fderiv_at_of_tendsto_uniformly_on hs (tendsto_uniformly_on_tsum hu hf') (fun t y hy => _) A _ hx\n    exact has_fderiv_at.sum fun n hn => hf n y hy\n#align has_fderiv_at_tsum_of_is_preconnected has_fderiv_at_tsum_of_is_preconnected\n\n",
 "has_fderiv_at_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Consider a series of functions `∑' n, f n x`. If the series converges at a\npoint, and all functions in the series are differentiable with a summable bound on the derivatives,\nthen the series is differentiable and its derivative is the sum of the derivatives. -/\ntheorem has_fderiv_at_tsum (hu : Summable u) (hf : ∀ n x, has_fderiv_at (f n) (f' n x) x)\n    (hf' : ∀ n x, «expr‖ ‖» (f' n x) ≤ u n) (hf0 : Summable fun n => f n x₀) (x : E) :\n    has_fderiv_at\n      (fun y =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n y))\n      («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f' n x)) x :=\n  by\n  let : NormedSpace (exprℝ) E; exact NormedSpace.restrictScalars (exprℝ) 𝕜 _\n  exact\n    has_fderiv_at_tsum_of_is_preconnected hu isOpen_univ is_connected_univ.is_preconnected (fun n x hx => hf n x)\n      (fun n x hx => hf' n x) (mem_univ _) hf0 (mem_univ _)\n#align has_fderiv_at_tsum has_fderiv_at_tsum\n\n",
 "fderiv_tsum_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem fderiv_tsum_apply (hu : Summable u) (hf : ∀ n, differentiable 𝕜 (f n))\n    (hf' : ∀ n x, «expr‖ ‖» (fderiv 𝕜 (f n) x) ≤ u n) (hf0 : Summable fun n => f n x₀) (x : E) :\n    fderiv 𝕜\n        (fun y =>\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n y))\n        x =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (fderiv 𝕜 (f n) x) :=\n  (has_fderiv_at_tsum hu (fun n x => (hf n x).has_fderiv_at) hf' hf0 _).fderiv\n#align fderiv_tsum_apply fderiv_tsum_apply\n\n",
 "fderiv_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem fderiv_tsum (hu : Summable u) (hf : ∀ n, differentiable 𝕜 (f n))\n    (hf' : ∀ n x, «expr‖ ‖» (fderiv 𝕜 (f n) x) ≤ u n) {x₀ : E} (hf0 : Summable fun n => f n x₀) :\n    (fderiv 𝕜 fun y =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n y)) =\n      fun x =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (fderiv 𝕜 (f n) x) :=\n  by\n  ext1 x\n  exact fderiv_tsum_apply hu hf hf' hf0 x\n#align fderiv_tsum fderiv_tsum\n\n",
 "differentiable_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Consider a series of functions `∑' n, f n x`. If all functions in the series are differentiable\nwith a summable bound on the derivatives, then the series is differentiable.\nNote that our assumptions do not ensure the pointwise convergence, but if there is no pointwise\nconvergence then the series is zero everywhere so the result still holds. -/\ntheorem differentiable_tsum (hu : Summable u) (hf : ∀ n x, has_fderiv_at (f n) (f' n x) x)\n    (hf' : ∀ n x, «expr‖ ‖» (f' n x) ≤ u n) :\n    differentiable 𝕜 fun y =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n y) :=\n  by\n  by_cases h : ∃ x₀, Summable fun n => f n x₀\n  · rcases h with ⟨x₀, hf0⟩\n    intro x\n    exact (has_fderiv_at_tsum hu hf hf' hf0 x).differentiable_at\n  · push_neg  at h\n    have :\n      (fun x =>\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n x)) =\n        0 :=\n      by\n      ext1 x\n      exact tsum_eq_zero_of_not_summable (h x)\n    rw [this]\n    exact differentiable_const 0\n#align differentiable_tsum differentiable_tsum\n\n",
 "continuous_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- An infinite sum of functions with summable sup norm is continuous if each individual\nfunction is. -/\ntheorem continuous_tsum [TopologicalSpace β] {f : α → β → F} (hf : ∀ i, Continuous (f i)) (hu : Summable u)\n    (hfu : ∀ n x, «expr‖ ‖» (f n x) ≤ u n) :\n    Continuous fun x =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n x) :=\n  by\n  simp_rw [continuous_iff_continuousOn_univ] at hf⊢\n  exact continuous_on_tsum hf hu fun n x hx => hfu n x\n#align continuous_tsum continuous_tsum\n\n",
 "continuous_on_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- An infinite sum of functions with summable sup norm is continuous on a set if each individual\nfunction is. -/\ntheorem continuous_on_tsum [TopologicalSpace β] {f : α → β → F} {s : Set β} (hf : ∀ i, ContinuousOn (f i) s)\n    (hu : Summable u) (hfu : ∀ n x, x ∈ s → «expr‖ ‖» (f n x) ≤ u n) :\n    ContinuousOn\n      (fun x =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n x))\n      s :=\n  by\n  classical\n    refine' (tendsto_uniformly_on_tsum hu hfu).continuous_on (eventually_of_forall _)\n    intro t\n    exact continuousOn_finset_sum _ fun i hi => hf i\n#align continuous_on_tsum continuous_on_tsum\n\n",
 "cont_diff_tsum_of_eventually":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Consider a series of functions `∑' i, f i x`. Assume that each individual function `f i` is of\nclass `C^N`, and moreover there is a uniform summable upper bound on the `k`-th derivative\nfor each `k ≤ N` (except maybe for finitely many `i`s). Then the series is also `C^N`. -/\ntheorem cont_diff_tsum_of_eventually (hf : ∀ i, cont_diff 𝕜 N (f i)) (hv : ∀ k : ℕ, (k : «exprℕ∞») ≤ N → Summable (v k))\n    (h'f :\n      ∀ k : ℕ,\n        (k : «exprℕ∞») ≤ N →\n          «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n            (Filter.cofinite : Filter α) (∀ x : E, «expr‖ ‖» (iterated_fderiv 𝕜 k (f i) x) ≤ v k i)) :\n    cont_diff 𝕜 N fun x =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i x) :=\n  by\n  classical\n    apply cont_diff_iff_forall_nat_le.2 fun m hm => _\n    let t : Set α :=\n      { i : α | ¬∀ k : ℕ, k ∈ Finset.range (m + 1) → ∀ x, «expr‖ ‖» (iterated_fderiv 𝕜 k (f i) x) ≤ v k i }\n    have ht : Set.Finite t :=\n      haveI A :\n        «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n          (Filter.cofinite : Filter α)\n          (∀ k : ℕ, k ∈ Finset.range (m + 1) → ∀ x : E, «expr‖ ‖» (iterated_fderiv 𝕜 k (f i) x) ≤ v k i) :=\n        by\n        rw [eventually_all_finset]\n        intro i hi\n        apply h'f\n        simp only [Finset.mem_range_succ_iff] at hi\n        exact (WithTop.coe_le_coe.2 hi).trans hm\n      eventually_cofinite.2 A\n    let T : Finset α := ht.to_finset\n    have :\n      (fun x =>\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i x)) =\n        (fun x =>\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" T (f i x)) +\n          fun x =>\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i x) :=\n      by\n      ext1 x\n      refine' (sum_add_tsum_subtype_compl _ T).symm\n      refine' summable_of_norm_bounded_eventually _ (hv 0 (zero_le _)) _\n      filter_upwards [h'f 0 (zero_le _)]with i hi\n      simpa only [norm_iterated_fderiv_zero] using hi x\n    rw [this]\n    apply (cont_diff.sum fun i hi => (hf i).of_le hm).add\n    have h'u : ∀ k : ℕ, (k : «exprℕ∞») ≤ m → Summable (v k ∘ (coe : { i // i ∉ T } → α)) := fun k hk =>\n      (hv k (hk.trans hm)).subtype _\n    refine' cont_diff_tsum (fun i => (hf i).of_le hm) h'u _\n    rintro k ⟨i, hi⟩ x hk\n    dsimp\n    simp only [finite.mem_to_finset, mem_set_of_eq, Finset.mem_range, not_forall, not_le, exists_prop, not_exists,\n      not_and, not_lt] at hi\n    exact hi k (Nat.lt_succ_iff.2 (WithTop.coe_le_coe.1 hk)) x\n#align cont_diff_tsum_of_eventually cont_diff_tsum_of_eventually\n\n",
 "cont_diff_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Consider a series of functions `∑' i, f i x`. Assume that each individual function `f i` is of\nclass `C^N`, and moreover there is a uniform summable upper bound on the `k`-th derivative\nfor each `k ≤ N`. Then the series is also `C^N`. -/\ntheorem cont_diff_tsum (hf : ∀ i, cont_diff 𝕜 N (f i)) (hv : ∀ k : ℕ, (k : «exprℕ∞») ≤ N → Summable (v k))\n    (h'f : ∀ (k : ℕ) (i : α) (x : E), (k : «exprℕ∞») ≤ N → «expr‖ ‖» (iterated_fderiv 𝕜 k (f i) x) ≤ v k i) :\n    cont_diff 𝕜 N fun x =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i x) :=\n  by\n  rw [cont_diff_iff_continuous_differentiable]\n  constructor\n  · intro m hm\n    rw [iterated_fderiv_tsum hf hv h'f hm]\n    refine' continuous_tsum _ (hv m hm) _\n    · intro i\n      exact cont_diff.continuous_iterated_fderiv hm (hf i)\n    · intro n x\n      exact h'f _ _ _ hm\n  · intro m hm\n    have h'm : ((m + 1 : ℕ) : «exprℕ∞») ≤ N := by\n      simpa only [ENat.coe_add, Nat.cast_withBot, ENat.coe_one] using ENat.add_one_le_of_lt hm\n    rw [iterated_fderiv_tsum hf hv h'f hm.le]\n    have A : ∀ n x, has_fderiv_at (iterated_fderiv 𝕜 m (f n)) (fderiv 𝕜 (iterated_fderiv 𝕜 m (f n)) x) x := fun n x =>\n      (cont_diff.differentiable_iterated_fderiv hm (hf n)).differentiable_at.has_fderiv_at\n    apply differentiable_tsum (hv _ h'm) A fun n x => _\n    rw [fderiv_iterated_fderiv, LinearIsometryEquiv.norm_map]\n    exact h'f _ _ _ h'm\n#align cont_diff_tsum cont_diff_tsum\n\n"}