{"has_fderiv_at_boundary_of_tendsto_fderiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-\nCopyright (c) 2019 Sébastien Gouëzel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Sébastien Gouëzel\n-/\n/-- If a function `f` is differentiable in a convex open set and continuous on its closure, and its\nderivative converges to a limit `f'` at a point on the boundary, then `f` is differentiable there\nwith derivative `f'`. -/\ntheorem has_fderiv_at_boundary_of_tendsto_fderiv {f : E → F} {s : set E} {x : E} {f' : «expr →L[ ] » E (exprℝ) F}\n    (f_diff : differentiable_on (exprℝ) f s) (s_conv : convex (exprℝ) s) (s_open : is_open s)\n    (f_cont : ∀ y ∈ closure s, continuous_within_at f s y)\n    (h : tendsto (fun y => fderiv (exprℝ) f y) (nhds_within s x) ((nhds) f')) :\n    has_fderiv_within_at f f' (closure s) x := by\n  classical\n    -- one can assume without loss of generality that `x` belongs to the closure of `s`, as the\n    -- statement is empty otherwise\n    by_cases hx : x ∉ closure s\n    · rw [← closure_closure] at hx\n      exact has_fderiv_within_at_of_not_mem_closure hx\n    push_neg  at hx\n    rw [has_fderiv_within_at, has_fderiv_at_filter, asymptotics.is_o_iff]\n    /- One needs to show that `‖f y - f x - f' (y - x)‖ ≤ ε ‖y - x‖` for `y` close to `x` in `closure\n      s`, where `ε` is an arbitrary positive constant. By continuity of the functions, it suffices to\n      prove this for nearby points inside `s`. In a neighborhood of `x`, the derivative of `f` is\n      arbitrarily close to `f'` by assumption. The mean value inequality completes the proof. -/\n    intro ε ε_pos\n    obtain ⟨δ, δ_pos, hδ⟩ : ∃ δ > 0, ∀ y ∈ s, dist y x < δ → «expr‖ ‖» (fderiv (exprℝ) f y - f') < ε := by\n      simpa [dist_zero_right] using tendsto_nhds_within_nhds.1 h ε ε_pos\n    set B := ball x δ\n    suffices : ∀ y ∈ B ∩ closure s, «expr‖ ‖» (f y - f x - (f' y - f' x)) ≤ ε * «expr‖ ‖» (y - x)\n    exact mem_nhds_within_iff.2 ⟨δ, δ_pos, fun y hy => by simpa using this y hy⟩\n    suffices\n      ∀ p : E × E,\n        p ∈ closure (lower_set.prod (B ∩ s) (B ∩ s)) →\n          «expr‖ ‖» (f p.2 - f p.1 - (f' p.2 - f' p.1)) ≤ ε * «expr‖ ‖» (p.2 - p.1)\n      by\n      rw [closure_prod_eq] at this\n      intro y y_in\n      apply this ⟨x, y⟩\n      have : B ∩ closure s ⊆ closure (B ∩ s) := is_open_ball.inter_closure\n      exact ⟨this ⟨mem_ball_self δ_pos, hx⟩, this y_in⟩\n    have key :\n      ∀ p : E × E,\n        p ∈ lower_set.prod (B ∩ s) (B ∩ s) →\n          «expr‖ ‖» (f p.2 - f p.1 - (f' p.2 - f' p.1)) ≤ ε * «expr‖ ‖» (p.2 - p.1) :=\n      by\n      rintro ⟨u, v⟩ ⟨u_in, v_in⟩\n      have conv : convex (exprℝ) (B ∩ s) := (convex_ball _ _).inter s_conv\n      have diff : differentiable_on (exprℝ) f (B ∩ s) := f_diff.mono (inter_subset_right _ _)\n      have bound : ∀ z ∈ B ∩ s, «expr‖ ‖» (fderiv_within (exprℝ) f (B ∩ s) z - f') ≤ ε :=\n        by\n        intro z z_in\n        convert le_of_lt (hδ _ z_in.2 z_in.1)\n        have op : is_open (B ∩ s) := is_open_ball.inter s_open\n        rw [differentiable_at.fderiv_within _ (op.unique_diff_on z z_in)]\n        exact (diff z z_in).differentiable_at (is_open.mem_nhds op z_in)\n      simpa using conv.norm_image_sub_le_of_norm_fderiv_within_le' diff bound u_in v_in\n    rintro ⟨u, v⟩ uv_in\n    refine' continuous_within_at.closure_le uv_in _ _ key\n    have f_cont' : ∀ y ∈ closure s, continuous_within_at (f - f') s y :=\n      by\n      intro y y_in\n      exact tendsto.sub (f_cont y y_in) f'.cont.continuous_within_at\n    all_goals\n      -- common start for both continuity proofs\n      have : lower_set.prod (B ∩ s) (B ∩ s) ⊆ lower_set.prod s s := by mono <;> exact inter_subset_right _ _\n      obtain ⟨u_in, v_in⟩ : u ∈ closure s ∧ v ∈ closure s := by simpa [closure_prod_eq] using closure_mono this uv_in\n      apply continuous_within_at.mono _ this\n      simp only [continuous_within_at]\n    rw [nhds_within_prod_eq]\n    · have : ∀ u v, f v - f u - (f' v - f' u) = f v - f' v - (f u - f' u) :=\n        by\n        intros\n        abel\n      simp only [this]\n      exact\n        tendsto.comp continuous_norm.continuous_at\n          ((tendsto.comp (f_cont' v v_in) tendsto_snd).sub <| tendsto.comp (f_cont' u u_in) tendsto_fst)\n    · apply tendsto_nhds_within_of_tendsto_nhds\n      rw [nhds_prod_eq]\n      exact tendsto_const_nhds.mul (tendsto.comp continuous_norm.continuous_at <| tendsto_snd.sub tendsto_fst)\n#align has_fderiv_at_boundary_of_tendsto_fderiv has_fderiv_at_boundary_of_tendsto_fderiv\n\n",
 "has_deriv_at_of_has_deriv_at_of_ne'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (y «expr ≠ » x) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If a real function `f` has a derivative `g` everywhere but at a point, and `f` and `g` are\ncontinuous at this point, then `g` is the derivative of `f` everywhere. -/\ntheorem has_deriv_at_of_has_deriv_at_of_ne' {f g : exprℝ → E} {x : exprℝ}\n    (f_diff : ∀ (y) (_ : y ≠ x), has_deriv_at f (g y) y) (hf : continuous_at f x) (hg : continuous_at g x) (y : exprℝ) :\n    has_deriv_at f (g y) y := by\n  rcases eq_or_ne y x with (rfl | hne)\n  · exact has_deriv_at_of_has_deriv_at_of_ne f_diff hf hg\n  · exact f_diff y hne\n#align has_deriv_at_of_has_deriv_at_of_ne' has_deriv_at_of_has_deriv_at_of_ne'\n\n",
 "has_deriv_at_of_has_deriv_at_of_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (y «expr ≠ » x) -/\n/-- If a real function `f` has a derivative `g` everywhere but at a point, and `f` and `g` are\ncontinuous at this point, then `g` is also the derivative of `f` at this point. -/\ntheorem has_deriv_at_of_has_deriv_at_of_ne {f g : exprℝ → E} {x : exprℝ}\n    (f_diff : ∀ (y) (_ : y ≠ x), has_deriv_at f (g y) y) (hf : continuous_at f x) (hg : continuous_at g x) :\n    has_deriv_at f (g x) x :=\n  by\n  have A : has_deriv_within_at f (g x) (Ici x) x :=\n    by\n    have diff : differentiable_on (exprℝ) f (Ioi x) := fun y hy =>\n      (f_diff y (ne_of_gt hy)).differentiable_at.differentiable_within_at\n    -- next line is the nontrivial bit of this proof, appealing to differentiability\n    -- extension results.\n    apply has_deriv_at_interval_left_endpoint_of_tendsto_deriv diff hf.continuous_within_at self_mem_nhds_within\n    have : tendsto g (nhds_within.gt x) ((nhds) (g x)) := tendsto_inf_left hg\n    apply this.congr' _\n    apply mem_of_superset self_mem_nhds_within fun y hy => _\n    exact (f_diff y (ne_of_gt hy)).deriv.symm\n  have B : has_deriv_within_at f (g x) (Iic x) x :=\n    by\n    have diff : differentiable_on (exprℝ) f (Iio x) := fun y hy =>\n      (f_diff y (ne_of_lt hy)).differentiable_at.differentiable_within_at\n    -- next line is the nontrivial bit of this proof, appealing to differentiability\n    -- extension results.\n    apply has_deriv_at_interval_right_endpoint_of_tendsto_deriv diff hf.continuous_within_at self_mem_nhds_within\n    have : tendsto g (nhds_within.lt x) ((nhds) (g x)) := tendsto_inf_left hg\n    apply this.congr' _\n    apply mem_of_superset self_mem_nhds_within fun y hy => _\n    exact (f_diff y (ne_of_lt hy)).deriv.symm\n  simpa using B.union A\n#align has_deriv_at_of_has_deriv_at_of_ne has_deriv_at_of_has_deriv_at_of_ne\n\n",
 "has_deriv_at_interval_right_endpoint_of_tendsto_deriv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- If a function is differentiable on the left of a point `a : ℝ`, continuous at `a`, and\nits derivative also converges at `a`, then `f` is differentiable on the left at `a`. -/\ntheorem has_deriv_at_interval_right_endpoint_of_tendsto_deriv {s : set (exprℝ)} {e : E} {a : exprℝ} {f : exprℝ → E}\n    (f_diff : differentiable_on (exprℝ) f s) (f_lim : continuous_within_at f s a) (hs : s ∈ nhds_within.lt a)\n    (f_lim' : tendsto (fun x => deriv f x) (nhds_within.lt a) ((nhds) e)) : has_deriv_within_at f e (Iic a) a :=\n  by\n  /- This is a specialization of `has_fderiv_at_boundary_of_differentiable`. To be in the setting of\n    this theorem, we need to work on an open interval with closure contained in `s ∪ {a}`, that we\n    call `t = (b, a)`. Then, we check all the assumptions of this theorem and we apply it. -/\n  obtain ⟨b, ba, sab⟩ : ∃ b ∈ Iio a, Ico b a ⊆ s := mem_nhds_within_Iio_iff_exists_Ico_subset.1 hs\n  let t := Ioo b a\n  have ts : t ⊆ s := subset.trans Ioo_subset_Ico_self sab\n  have t_diff : differentiable_on (exprℝ) f t := f_diff.mono ts\n  have t_conv : convex (exprℝ) t := convex_Ioo b a\n  have t_open : is_open t := is_open_Ioo\n  have t_closure : closure t = Icc b a := closure_Ioo (ne_of_lt ba)\n  have t_cont : ∀ y ∈ closure t, continuous_within_at f t y :=\n    by\n    rw [t_closure]\n    intro y hy\n    by_cases h : y = a\n    · rw [h]\n      exact f_lim.mono ts\n    · have : y ∈ s := sab ⟨hy.1, lt_of_le_of_ne hy.2 h⟩\n      exact (f_diff.continuous_on y this).mono ts\n  have t_diff' : tendsto (fun x => fderiv (exprℝ) f x) (nhds_within t a) ((nhds) (smul_right 1 e)) :=\n    by\n    simp only [deriv_fderiv.symm]\n    exact\n      tendsto.comp\n        (is_bounded_bilinear_map_smul_right : is_bounded_bilinear_map (exprℝ) _).continuous_right.continuous_at\n        (tendsto_nhds_within_mono_left Ioo_subset_Iio_self f_lim')\n  -- now we can apply `has_fderiv_at_boundary_of_differentiable`\n  have : has_deriv_within_at f e (Icc b a) a :=\n    by\n    rw [has_deriv_within_at_iff_has_fderiv_within_at, ← t_closure]\n    exact has_fderiv_at_boundary_of_tendsto_fderiv t_diff t_conv t_open t_cont t_diff'\n  exact this.nhds_within (Icc_mem_nhds_within_Iic <| right_mem_Ioc.2 ba)\n#align has_deriv_at_interval_right_endpoint_of_tendsto_deriv has_deriv_at_interval_right_endpoint_of_tendsto_deriv\n\n",
 "has_deriv_at_interval_left_endpoint_of_tendsto_deriv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- If a function is differentiable on the right of a point `a : ℝ`, continuous at `a`, and\nits derivative also converges at `a`, then `f` is differentiable on the right at `a`. -/\ntheorem has_deriv_at_interval_left_endpoint_of_tendsto_deriv {s : set (exprℝ)} {e : E} {a : exprℝ} {f : exprℝ → E}\n    (f_diff : differentiable_on (exprℝ) f s) (f_lim : continuous_within_at f s a) (hs : s ∈ nhds_within.gt a)\n    (f_lim' : tendsto (fun x => deriv f x) (nhds_within.gt a) ((nhds) e)) : has_deriv_within_at f e (Ici a) a :=\n  by\n  /- This is a specialization of `has_fderiv_at_boundary_of_tendsto_fderiv`. To be in the setting of\n    this theorem, we need to work on an open interval with closure contained in `s ∪ {a}`, that we\n    call `t = (a, b)`. Then, we check all the assumptions of this theorem and we apply it. -/\n  obtain ⟨b, ab : a < b, sab : Ioc a b ⊆ s⟩ := mem_nhds_within_Ioi_iff_exists_Ioc_subset.1 hs\n  let t := Ioo a b\n  have ts : t ⊆ s := subset.trans Ioo_subset_Ioc_self sab\n  have t_diff : differentiable_on (exprℝ) f t := f_diff.mono ts\n  have t_conv : convex (exprℝ) t := convex_Ioo a b\n  have t_open : is_open t := is_open_Ioo\n  have t_closure : closure t = Icc a b := closure_Ioo ab.ne\n  have t_cont : ∀ y ∈ closure t, continuous_within_at f t y :=\n    by\n    rw [t_closure]\n    intro y hy\n    by_cases h : y = a\n    · rw [h]\n      exact f_lim.mono ts\n    · have : y ∈ s := sab ⟨lt_of_le_of_ne hy.1 (ne.symm h), hy.2⟩\n      exact (f_diff.continuous_on y this).mono ts\n  have t_diff' : tendsto (fun x => fderiv (exprℝ) f x) (nhds_within t a) ((nhds) (smul_right 1 e)) :=\n    by\n    simp only [deriv_fderiv.symm]\n    exact\n      tendsto.comp\n        (is_bounded_bilinear_map_smul_right : is_bounded_bilinear_map (exprℝ) _).continuous_right.continuous_at\n        (tendsto_nhds_within_mono_left Ioo_subset_Ioi_self f_lim')\n  -- now we can apply `has_fderiv_at_boundary_of_differentiable`\n  have : has_deriv_within_at f e (Icc a b) a :=\n    by\n    rw [has_deriv_within_at_iff_has_fderiv_within_at, ← t_closure]\n    exact has_fderiv_at_boundary_of_tendsto_fderiv t_diff t_conv t_open t_cont t_diff'\n  exact this.nhds_within (Icc_mem_nhds_within_Ici <| left_mem_Ico.2 ab)\n#align has_deriv_at_interval_left_endpoint_of_tendsto_deriv has_deriv_at_interval_left_endpoint_of_tendsto_deriv\n\n"}