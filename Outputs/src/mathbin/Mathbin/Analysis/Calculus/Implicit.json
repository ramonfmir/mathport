{"to_local_homeomorph_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem to_local_homeomorph_coe : «expr⇑ » φ.to_local_homeomorph = φ.prod_fun :=\n  rfl\n#align to_local_homeomorph_coe to_local_homeomorph_coe\n\n",
 "to_local_homeomorph_apply":
 "theorem to_local_homeomorph_apply (x : E) : φ.to_local_homeomorph x = (φ.left_fun x, φ.right_fun x) :=\n  rfl\n#align to_local_homeomorph_apply to_local_homeomorph_apply\n\n",
 "to_implicit_function_of_complemented":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem to_implicit_function_of_complemented (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤»)\n    (hker : (ker f').closed_complemented) :\n    has_strict_fderiv_at (hf.implicit_function_of_complemented f f' hf' hker (f a)) (ker f').subtypeL 0 :=\n  by\n  convert\n    (implicit_function_data_of_complemented f f' hf hf' hker).implicit_function_has_strict_fderiv_at (ker f').subtypeL _\n      _\n  swap\n  · ext\n    simp only [Classical.choose_spec hker, implicit_function_data_of_complemented, continuous_linear_map.coe_comp',\n      submodule.coe_subtypeL', submodule.coe_subtype, Function.comp_apply, continuous_linear_map.coe_id', id.def]\n  swap\n  · ext\n    simp only [continuous_linear_map.coe_comp', submodule.coe_subtypeL', submodule.coe_subtype, Function.comp_apply,\n      linear_map.map_coe_ker, continuous_linear_map.zero_apply]\n  simp only [implicit_function_data_of_complemented, map_sub, sub_self]\n#align to_implicit_function_of_complemented to_implicit_function_of_complemented\n\n",
 "to_implicit_function":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem to_implicit_function (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤») :\n    has_strict_fderiv_at (hf.implicit_function f f' hf' (f a)) (ker f').subtypeL 0 := by\n  apply to_implicit_function_of_complemented\n#align to_implicit_function to_implicit_function\n\n",
 "tendsto_implicit_function":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_implicit_function (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤») {α : Type _}\n    {l : filter α} {g₁ : α → F} {g₂ : α → ker f'} (h₁ : tendsto g₁ l (nhds <| f a)) (h₂ : tendsto g₂ l ((nhds) 0)) :\n    tendsto (fun t => hf.implicit_function f f' hf' (g₁ t) (g₂ t)) l ((nhds) a) :=\n  by\n  refine'\n    ((hf.implicit_to_local_homeomorph f f' hf').tendsto_symm (hf.mem_implicit_to_local_homeomorph_source hf')).comp _\n  rw [implicit_to_local_homeomorph_self]\n  exact h₁.prod_mk_nhds h₂\n#align tendsto_implicit_function tendsto_implicit_function\n\n",
 "right_map_implicit_function":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem right_map_implicit_function :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      ((nhds) (φ.prod_fun φ.pt)) (φ.right_fun (φ.implicit_function p.1 p.2) = p.2) :=\n  φ.prod_map_implicit_function.mono fun z => congr_arg prod.snd\n#align right_map_implicit_function right_map_implicit_function\n\n",
 "pt_mem_to_local_homeomorph_source":
 "theorem pt_mem_to_local_homeomorph_source : φ.pt ∈ φ.to_local_homeomorph.source :=\n  φ.has_strict_fderiv_at.mem_to_local_homeomorph_source\n#align pt_mem_to_local_homeomorph_source pt_mem_to_local_homeomorph_source\n\n",
 "prod_map_implicit_function":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem prod_map_implicit_function :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      ((nhds) (φ.prod_fun φ.pt)) (φ.prod_fun (φ.implicit_function p.1 p.2) = p) :=\n  φ.has_strict_fderiv_at.eventually_right_inverse.mono fun ⟨z, y⟩ h => h\n#align prod_map_implicit_function prod_map_implicit_function\n\n",
 "prod_fun_apply":
 "/-\nCopyright (c) 2020 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\n@[simp]\ntheorem prod_fun_apply (x : E) : φ.prod_fun x = (φ.left_fun x, φ.right_fun x) :=\n  rfl\n#align prod_fun_apply prod_fun_apply\n\n",
 "mem_implicit_to_local_homeomorph_target":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem mem_implicit_to_local_homeomorph_target (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤») :\n    (f a, (0 : ker f')) ∈ (hf.implicit_to_local_homeomorph f f' hf').target := by\n  apply mem_implicit_to_local_homeomorph_of_complemented_target\n#align mem_implicit_to_local_homeomorph_target mem_implicit_to_local_homeomorph_target\n\n",
 "mem_implicit_to_local_homeomorph_source":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem mem_implicit_to_local_homeomorph_source (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤») :\n    a ∈ (hf.implicit_to_local_homeomorph f f' hf').source :=\n  mem_to_local_homeomorph_source _\n#align mem_implicit_to_local_homeomorph_source mem_implicit_to_local_homeomorph_source\n\n",
 "mem_implicit_to_local_homeomorph_of_complemented_target":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem mem_implicit_to_local_homeomorph_of_complemented_target (hf : has_strict_fderiv_at f f' a)\n    (hf' : range f' = «expr⊤») (hker : (ker f').closed_complemented) :\n    (f a, (0 : ker f')) ∈ (hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker).target := by\n  simpa only [implicit_to_local_homeomorph_of_complemented_self] using\n    (hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker).map_source <|\n      hf.mem_implicit_to_local_homeomorph_of_complemented_source hf' hker\n#align mem_implicit_to_local_homeomorph_of_complemented_target mem_implicit_to_local_homeomorph_of_complemented_target\n\n",
 "mem_implicit_to_local_homeomorph_of_complemented_source":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem mem_implicit_to_local_homeomorph_of_complemented_source (hf : has_strict_fderiv_at f f' a)\n    (hf' : range f' = «expr⊤») (hker : (ker f').closed_complemented) :\n    a ∈ (hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker).source :=\n  mem_to_local_homeomorph_source _\n#align mem_implicit_to_local_homeomorph_of_complemented_source mem_implicit_to_local_homeomorph_of_complemented_source\n\n",
 "map_pt_mem_to_local_homeomorph_target":
 "theorem map_pt_mem_to_local_homeomorph_target : (φ.left_fun φ.pt, φ.right_fun φ.pt) ∈ φ.to_local_homeomorph.target :=\n  φ.to_local_homeomorph.map_source <| φ.pt_mem_to_local_homeomorph_source\n#align map_pt_mem_to_local_homeomorph_target map_pt_mem_to_local_homeomorph_target\n\n",
 "map_nhds_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem map_nhds_eq : map φ.left_fun ((nhds) φ.pt) = (nhds) (φ.left_fun φ.pt) :=\n  show map (prod.fst ∘ φ.prod_fun) ((nhds) φ.pt) = (nhds) (φ.prod_fun φ.pt).1 by\n    rw [← map_map, φ.has_strict_fderiv_at.map_nhds_eq_of_equiv, map_fst_nhds]\n#align map_nhds_eq map_nhds_eq\n\n",
 "map_implicit_function_of_complemented_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- `implicit_function_of_complemented` sends `(z, y)` to a point in `f ⁻¹' z`. -/\ntheorem map_implicit_function_of_complemented_eq (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤»)\n    (hker : (ker f').closed_complemented) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      ((nhds) (f a, 0)) (f (hf.implicit_function_of_complemented f f' hf' hker p.1 p.2) = p.1) :=\n  ((hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker).eventually_right_inverse <|\n        hf.mem_implicit_to_local_homeomorph_of_complemented_target hf' hker).mono\n    fun ⟨z, y⟩ h => congr_arg prod.fst h\n#align map_implicit_function_of_complemented_eq map_implicit_function_of_complemented_eq\n\n",
 "map_implicit_function_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- `implicit_function` sends `(z, y)` to a point in `f ⁻¹' z`. -/\ntheorem map_implicit_function_eq (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤») :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      ((nhds) (f a, 0)) (f (hf.implicit_function f f' hf' p.1 p.2) = p.1) :=\n  by apply map_implicit_function_of_complemented_eq\n#align map_implicit_function_eq map_implicit_function_eq\n\n",
 "left_map_implicit_function":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem left_map_implicit_function :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      ((nhds) (φ.prod_fun φ.pt)) (φ.left_fun (φ.implicit_function p.1 p.2) = p.1) :=\n  φ.prod_map_implicit_function.mono fun z => congr_arg prod.fst\n#align left_map_implicit_function left_map_implicit_function\n\n",
 "implicit_to_local_homeomorph_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem implicit_to_local_homeomorph_self (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤») :\n    hf.implicit_to_local_homeomorph f f' hf' a = (f a, 0) := by apply implicit_to_local_homeomorph_of_complemented_self\n#align implicit_to_local_homeomorph_self implicit_to_local_homeomorph_self\n\n",
 "implicit_to_local_homeomorph_of_complemented_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem implicit_to_local_homeomorph_of_complemented_self (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤»)\n    (hker : (ker f').closed_complemented) :\n    hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker a = (f a, 0) := by\n  simp [hf.implicit_to_local_homeomorph_of_complemented_apply]\n#align implicit_to_local_homeomorph_of_complemented_self implicit_to_local_homeomorph_of_complemented_self\n\n",
 "implicit_to_local_homeomorph_of_complemented_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem implicit_to_local_homeomorph_of_complemented_fst (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤»)\n    (hker : (ker f').closed_complemented) (x : E) :\n    (hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker x).fst = f x :=\n  rfl\n#align implicit_to_local_homeomorph_of_complemented_fst implicit_to_local_homeomorph_of_complemented_fst\n\n",
 "implicit_to_local_homeomorph_of_complemented_apply_ker":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem implicit_to_local_homeomorph_of_complemented_apply_ker (hf : has_strict_fderiv_at f f' a)\n    (hf' : range f' = «expr⊤») (hker : (ker f').closed_complemented) (y : ker f') :\n    hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker (y + a) = (f (y + a), y) := by\n  simp only [implicit_to_local_homeomorph_of_complemented_apply, add_sub_cancel, Classical.choose_spec hker]\n#align implicit_to_local_homeomorph_of_complemented_apply_ker implicit_to_local_homeomorph_of_complemented_apply_ker\n\n",
 "implicit_to_local_homeomorph_of_complemented_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem implicit_to_local_homeomorph_of_complemented_apply (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤»)\n    (hker : (ker f').closed_complemented) (y : E) :\n    hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker y = (f y, Classical.choose hker (y - a)) :=\n  rfl\n#align implicit_to_local_homeomorph_of_complemented_apply implicit_to_local_homeomorph_of_complemented_apply\n\n",
 "implicit_to_local_homeomorph_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem implicit_to_local_homeomorph_fst (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤») (x : E) :\n    (hf.implicit_to_local_homeomorph f f' hf' x).fst = f x :=\n  rfl\n#align implicit_to_local_homeomorph_fst implicit_to_local_homeomorph_fst\n\n",
 "implicit_to_local_homeomorph_apply_ker":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem implicit_to_local_homeomorph_apply_ker (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤»)\n    (y : ker f') : hf.implicit_to_local_homeomorph f f' hf' (y + a) = (f (y + a), y) := by\n  apply implicit_to_local_homeomorph_of_complemented_apply_ker\n#align implicit_to_local_homeomorph_apply_ker implicit_to_local_homeomorph_apply_ker\n\n",
 "implicit_function_of_complemented_apply_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem implicit_function_of_complemented_apply_image (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤»)\n    (hker : (ker f').closed_complemented) : hf.implicit_function_of_complemented f f' hf' hker (f a) 0 = a :=\n  by\n  convert\n    (hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker).left_inv\n      (hf.mem_implicit_to_local_homeomorph_of_complemented_source hf' hker)\n  exact congr_arg prod.snd (hf.implicit_to_local_homeomorph_of_complemented_self hf' hker).symm\n#align implicit_function_of_complemented_apply_image implicit_function_of_complemented_apply_image\n\n",
 "implicit_function_has_strict_fderiv_at":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\ntheorem implicit_function_has_strict_fderiv_at (g'inv : «expr →L[ ] » G 𝕜 E)\n    (hg'inv : φ.right_deriv.comp g'inv = continuous_linear_map.id 𝕜 G) (hg'invf : φ.left_deriv.comp g'inv = 0) :\n    has_strict_fderiv_at (φ.implicit_function (φ.left_fun φ.pt)) g'inv (φ.right_fun φ.pt) :=\n  by\n  have := φ.has_strict_fderiv_at.to_local_inverse\n  simp only [prod_fun] at this\n  convert this.comp (φ.right_fun φ.pt) ((has_strict_fderiv_at_const _ _).prod (has_strict_fderiv_at_id _))\n  simp only [continuous_linear_map.ext_iff, continuous_linear_map.coe_comp', Function.comp_apply] at hg'inv hg'invf⊢\n  simp [continuous_linear_equiv.eq_symm_apply, *]\n#align implicit_function_has_strict_fderiv_at implicit_function_has_strict_fderiv_at\n\n",
 "implicit_function_apply_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem implicit_function_apply_image (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤») :\n    hf.implicit_function f f' hf' (f a) 0 = a := by apply implicit_function_of_complemented_apply_image\n#align implicit_function_apply_image implicit_function_apply_image\n\n",
 "has_strict_fderiv_at":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\nprotected theorem has_strict_fderiv_at :\n    has_strict_fderiv_at φ.prod_fun\n      (φ.left_deriv.equiv_prod_of_surjective_of_is_compl φ.right_deriv φ.left_range φ.right_range φ.is_compl_ker :\n        «expr →L[ ] » E 𝕜 (F × G))\n      φ.pt :=\n  φ.left_has_deriv.prod φ.right_has_deriv\n#align has_strict_fderiv_at has_strict_fderiv_at\n\n",
 "eq_implicit_function_of_complemented":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- Any point in some neighborhood of `a` can be represented as `implicit_function`\nof some point. -/\ntheorem eq_implicit_function_of_complemented (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤»)\n    (hker : (ker f').closed_complemented) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) a)\n      (hf.implicit_function_of_complemented f f' hf' hker (f x)\n          (hf.implicit_to_local_homeomorph_of_complemented f f' hf' hker x).snd =\n        x) :=\n  (implicit_function_data_of_complemented f f' hf hf' hker).implicit_function_apply_image\n#align eq_implicit_function_of_complemented eq_implicit_function_of_complemented\n\n",
 "eq_implicit_function":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- Any point in some neighborhood of `a` can be represented as `implicit_function`\nof some point. -/\ntheorem eq_implicit_function (hf : has_strict_fderiv_at f f' a) (hf' : range f' = «expr⊤») :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) a)\n      (hf.implicit_function f f' hf' (f x) (hf.implicit_to_local_homeomorph f f' hf' x).snd = x) :=\n  by apply eq_implicit_function_of_complemented\n#align eq_implicit_function eq_implicit_function\n\n"}