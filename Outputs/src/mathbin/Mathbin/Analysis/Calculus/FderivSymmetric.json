{"taylor_approx_two_segment":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/-\nCopyright (c) 2021 Sébastien Gouëzel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Sébastien Gouëzel\n-/\n/-- Assume that `f` is differentiable inside a convex set `s`, and that its derivative `f'` is\ndifferentiable at a point `x`. Then, given two vectors `v` and `w` pointing inside `s`, one can\nTaylor-expand to order two the function `f` on the segment `[x + h v, x + h (v + w)]`, giving a\nbilinear estimate for `f (x + hv + hw) - f (x + hv)` in terms of `f' w` and of `f'' ⬝ w`, up to\n`o(h^2)`.\n\nThis is a technical statement used to show that the second derivative is symmetric.\n-/\ntheorem convex.taylor_approx_two_segment {v w : E} (hv : x + v ∈ interior s) (hw : x + v + w ∈ interior s) :\n    «expr =o[ ] »\n      (fun h : exprℝ =>\n        f (x + «expr • » h v + «expr • » h w) - f (x + «expr • » h v) - «expr • » h (f' x w) -\n            «expr • » (h ^ 2) (f'' v w) -\n          «expr • » (h ^ 2 / 2) (f'' w w))\n      (nhds_within.gt 0) fun h => h ^ 2 :=\n  by\n  -- it suffices to check that the expression is bounded by `ε * ((‖v‖ + ‖w‖) * ‖w‖) * h^2` for\n  -- small enough `h`, for any positive `ε`.\n  apply\n    is_o.trans_is_O (is_o_iff.2 fun ε εpos => _) (is_O_const_mul_self ((«expr‖ ‖» v + «expr‖ ‖» w) * «expr‖ ‖» w) _ _)\n  -- consider a ball of radius `δ` around `x` in which the Taylor approximation for `f''` is\n  -- good up to `δ`.\n  rw [has_fderiv_within_at, has_fderiv_at_filter, is_o_iff] at hx\n  rcases Metric.mem_nhdsWithin_iff.1 (hx εpos) with ⟨δ, δpos, sδ⟩\n  have E1 :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      (nhds_within.gt (0 : exprℝ)) (h * («expr‖ ‖» v + «expr‖ ‖» w) < δ) :=\n    by\n    have :\n      Filter.Tendsto (fun h => h * («expr‖ ‖» v + «expr‖ ‖» w)) (nhds_within.gt (0 : exprℝ))\n        ((nhds) (0 * («expr‖ ‖» v + «expr‖ ‖» w))) :=\n      (continuous_id.mul continuous_const).continuous_within_at\n    apply (tendsto_order.1 this).2 δ\n    simpa only [MulZeroClass.zero_mul] using δpos\n  have E2 :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      (nhds_within.gt (0 : exprℝ)) ((h : exprℝ) < 1) :=\n    mem_nhdsWithin_Ioi_iff_exists_Ioo_subset.2 ⟨(1 : exprℝ), by simp only [mem_Ioi, zero_lt_one], fun x hx => hx.2⟩\n  filter_upwards [E1, E2, self_mem_nhdsWithin]with h hδ h_lt_1 hpos\n  -- we consider `h` small enough that all points under consideration belong to this ball,\n  -- and also with `0 < h < 1`.\n  replace hpos : 0 < h := hpos\n  have xt_mem : ∀ t ∈ Icc (0 : exprℝ) 1, x + «expr • » h v + «expr • » (t * h) w ∈ interior s :=\n    by\n    intro t ht\n    have : x + «expr • » h v ∈ interior s := s_conv.add_smul_mem_interior xs hv ⟨hpos, h_lt_1.le⟩\n    rw [← smul_smul]\n    apply s_conv.interior.add_smul_mem this _ ht\n    rw [add_assoc] at hw\n    rw [add_assoc, ← smul_add]\n    exact s_conv.add_smul_mem_interior xs hw ⟨hpos, h_lt_1.le⟩\n  -- define a function `g` on `[0,1]` (identified with `[v, v + w]`) such that `g 1 - g 0` is the\n  -- quantity to be estimated. We will check that its derivative is given by an explicit\n  -- expression `g'`, that we can bound. Then the desired bound for `g 1 - g 0` follows from the\n  -- mean value inequality.\n  let g t :=\n    f (x + «expr • » h v + «expr • » (t * h) w) - «expr • » (t * h) (f' x w) - «expr • » (t * h ^ 2) (f'' v w) -\n      «expr • » ((t * h) ^ 2 / 2) (f'' w w)\n  set g' := fun t =>\n    f' (x + «expr • » h v + «expr • » (t * h) w) («expr • » h w) - «expr • » h (f' x w) - «expr • » (h ^ 2) (f'' v w) -\n      «expr • » (t * h ^ 2) (f'' w w) with\n    hg'\n  -- check that `g'` is the derivative of `g`, by a straightforward computation\n  have g_deriv : ∀ t ∈ Icc (0 : exprℝ) 1, has_deriv_within_at g (g' t) (Icc 0 1) t :=\n    by\n    intro t ht\n    apply_rules [has_deriv_within_at.sub, has_deriv_within_at.add]\n    · refine' (hf _ _).comp_has_deriv_within_at _ _\n      · exact xt_mem t ht\n      apply_rules [has_deriv_at.has_deriv_within_at, has_deriv_at.const_add, has_deriv_at.smul_const,\n        has_deriv_at_mul_const]\n    · apply_rules [has_deriv_at.has_deriv_within_at, has_deriv_at.smul_const, has_deriv_at_mul_const]\n    · apply_rules [has_deriv_at.has_deriv_within_at, has_deriv_at.smul_const, has_deriv_at_mul_const]\n    · suffices H :\n        has_deriv_within_at (fun u => «expr • » ((u * h) ^ 2 / 2) (f'' w w))\n          («expr • » (((2 : ℕ) : exprℝ) * (t * h) ^ (2 - 1) * (1 * h) / 2) (f'' w w)) (Icc 0 1) t\n      · convert H using 2\n        simp only [one_mul, Nat.cast_bit0, pow_one, Nat.cast_one]\n        ring\n      apply_rules [has_deriv_at.has_deriv_within_at, has_deriv_at.smul_const, has_deriv_at_id', has_deriv_at.pow,\n        has_deriv_at.mul_const]\n  -- check that `g'` is uniformly bounded, with a suitable bound `ε * ((‖v‖ + ‖w‖) * ‖w‖) * h^2`.\n  have g'_bound : ∀ t ∈ Ico (0 : exprℝ) 1, «expr‖ ‖» (g' t) ≤ ε * ((«expr‖ ‖» v + «expr‖ ‖» w) * «expr‖ ‖» w) * h ^ 2 :=\n    by\n    intro t ht\n    have I : «expr‖ ‖» («expr • » h v + «expr • » (t * h) w) ≤ h * («expr‖ ‖» v + «expr‖ ‖» w) :=\n      calc\n        «expr‖ ‖» («expr • » h v + «expr • » (t * h) w) ≤ «expr‖ ‖» («expr • » h v) + «expr‖ ‖» («expr • » (t * h) w) :=\n          norm_add_le _ _\n        _ = h * «expr‖ ‖» v + t * (h * «expr‖ ‖» w) := by\n          simp only [norm_smul, Real.norm_eq_abs, hpos.le, abs_of_nonneg, abs_mul, ht.left, mul_assoc]\n        _ ≤ h * «expr‖ ‖» v + 1 * (h * «expr‖ ‖» w) :=\n          (add_le_add le_rfl (mul_le_mul_of_nonneg_right ht.2.le (mul_nonneg hpos.le (norm_nonneg _))))\n        _ = h * («expr‖ ‖» v + «expr‖ ‖» w) := by ring\n        \n    calc\n      «expr‖ ‖» (g' t) =\n          «expr‖ ‖»\n            ((f' (x + «expr • » h v + «expr • » (t * h) w) - f' x - f'' («expr • » h v + «expr • » (t * h) w))\n              («expr • » h w)) :=\n        by\n        rw [hg']\n        have : h * (t * h) = t * (h * h) := by ring\n        simp only [ContinuousLinearMap.coe_sub', ContinuousLinearMap.map_add, pow_two, ContinuousLinearMap.add_apply,\n          Pi.smul_apply, smul_sub, smul_add, smul_smul, ← sub_sub, ContinuousLinearMap.coe_smul', Pi.sub_apply,\n          ContinuousLinearMap.map_smul, this]\n      _ ≤\n          «expr‖ ‖» (f' (x + «expr • » h v + «expr • » (t * h) w) - f' x - f'' («expr • » h v + «expr • » (t * h) w)) *\n            «expr‖ ‖» («expr • » h w) :=\n        (continuous_linear_map.le_op_norm _ _)\n      _ ≤ ε * «expr‖ ‖» («expr • » h v + «expr • » (t * h) w) * «expr‖ ‖» («expr • » h w) :=\n        by\n        apply mul_le_mul_of_nonneg_right _ (norm_nonneg _)\n        have H : x + «expr • » h v + «expr • » (t * h) w ∈ Metric.ball x δ ∩ interior s :=\n          by\n          refine' ⟨_, xt_mem t ⟨ht.1, ht.2.le⟩⟩\n          rw [add_assoc, add_mem_ball_iff_norm]\n          exact I.trans_lt hδ\n        simpa only [mem_set_of_eq, add_assoc x, add_sub_cancel'] using sδ H\n      _ ≤ ε * («expr‖ ‖» («expr • » h v) + «expr‖ ‖» («expr • » h w)) * «expr‖ ‖» («expr • » h w) :=\n        by\n        apply mul_le_mul_of_nonneg_right _ (norm_nonneg _)\n        apply mul_le_mul_of_nonneg_left _ εpos.le\n        apply (norm_add_le _ _).trans\n        refine' add_le_add le_rfl _\n        simp only [norm_smul, Real.norm_eq_abs, abs_mul, abs_of_nonneg, ht.1, hpos.le, mul_assoc]\n        exact mul_le_of_le_one_left (mul_nonneg hpos.le (norm_nonneg _)) ht.2.le\n      _ = ε * ((«expr‖ ‖» v + «expr‖ ‖» w) * «expr‖ ‖» w) * h ^ 2 :=\n        by\n        simp only [norm_smul, Real.norm_eq_abs, abs_mul, abs_of_nonneg, hpos.le]\n        ring\n      \n  -- conclude using the mean value inequality\n  have I : «expr‖ ‖» (g 1 - g 0) ≤ ε * ((«expr‖ ‖» v + «expr‖ ‖» w) * «expr‖ ‖» w) * h ^ 2 := by\n    simpa only [mul_one, sub_zero] using\n      norm_image_sub_le_of_norm_deriv_le_segment' g_deriv g'_bound 1 (right_mem_Icc.2 zero_le_one)\n  convert I using 1\n  · congr 1\n    dsimp only [g]\n    simp only [nat.one_ne_zero, add_zero, one_mul, zero_div, MulZeroClass.zero_mul, sub_zero, zero_smul, ne.def,\n      not_false_iff, bit0_eq_zero, zero_pow']\n    abel\n  ·\n    simp only [Real.norm_eq_abs, abs_mul, add_nonneg (norm_nonneg v) (norm_nonneg w), abs_of_nonneg, mul_assoc,\n      pow_bit0_abs, norm_nonneg, abs_pow]\n#align convex.taylor_approx_two_segment convex.taylor_approx_two_segment\n\n",
 "second_derivative_within_at_symmetric_of_mem_interior":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =O[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Assume that `f` is differentiable inside a convex set `s`, and that its derivative `f'` is\ndifferentiable at a point `x`. Then, given two vectors `v` and `w` pointing inside `s`, one\nhas `f'' v w = f'' w v`. Superseded by `convex.second_derivative_within_at_symmetric`, which\nremoves the assumption that `v` and `w` point inside `s`.\n-/\ntheorem convex.second_derivative_within_at_symmetric_of_mem_interior {v w : E}\n    (h4v : x + «expr • » (4 : exprℝ) v ∈ interior s) (h4w : x + «expr • » (4 : exprℝ) w ∈ interior s) :\n    f'' w v = f'' v w :=\n  by\n  have A : «expr =o[ ] » (fun h : exprℝ => «expr • » (h ^ 2) (f'' w v - f'' v w)) (nhds_within.gt 0) fun h => h ^ 2 :=\n    by\n    convert(s_conv.is_o_alternate_sum_square hf xs hx h4v h4w).sub (s_conv.is_o_alternate_sum_square hf xs hx h4w h4v)\n    ext h\n    simp only [add_comm, smul_add, smul_sub]\n    abel\n  have B : «expr =o[ ] » (fun h : exprℝ => f'' w v - f'' v w) (nhds_within.gt 0) fun h => (1 : exprℝ) :=\n    by\n    have : «expr =O[ ] » (fun h : exprℝ => 1 / h ^ 2) (nhds_within.gt 0) fun h => 1 / h ^ 2 := is_O_refl _ _\n    have C := this.smul_is_o A\n    apply C.congr' _ _\n    · filter_upwards [self_mem_nhdsWithin]\n      intro h hpos\n      rw [← one_smul (exprℝ) (f'' w v - f'' v w), smul_smul, smul_smul]\n      congr 1\n      field_simp [LT.lt.ne' hpos]\n    · filter_upwards [self_mem_nhdsWithin]with _ hpos\n      field_simp [LT.lt.ne' hpos, has_smul.smul]\n  simpa only [sub_eq_zero] using is_o_const_const_iff.1 B\n#align convex.second_derivative_within_at_symmetric_of_mem_interior convex.second_derivative_within_at_symmetric_of_mem_interior\n\n",
 "second_derivative_within_at_symmetric":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If a function is differentiable inside a convex set with nonempty interior, and has a second\nderivative at a point of this convex set, then this second derivative is symmetric. -/\ntheorem convex.second_derivative_within_at_symmetric {s : Set E} (s_conv : Convex (exprℝ) s)\n    (hne : (interior s).nonempty) {f : E → F} {f' : E → «expr →L[ ] » E (exprℝ) F}\n    {f'' : «expr →L[ ] » E (exprℝ) («expr →L[ ] » E (exprℝ) F)} (hf : ∀ x ∈ interior s, has_fderiv_at f (f' x) x)\n    {x : E} (xs : x ∈ s) (hx : has_fderiv_within_at f' f'' (interior s) x) (v w : E) : f'' v w = f'' w v :=\n  by\n  /- we work around a point `x + 4 z` in the interior of `s`. For any vector `m`,\n    then `x + 4 (z + t m)` also belongs to the interior of `s` for small enough `t`. This means that\n    we will be able to apply `second_derivative_within_at_symmetric_of_mem_interior` to show\n    that `f''` is symmetric, after cancelling all the contributions due to `z`. -/\n  rcases hne with ⟨y, hy⟩\n  obtain ⟨z, hz⟩ : ∃ z, z = «expr • » ((1 : exprℝ) / 4) (y - x) := ⟨«expr • » ((1 : exprℝ) / 4) (y - x), rfl⟩\n  have A :\n    ∀ m : E, Filter.Tendsto (fun t : exprℝ => x + «expr • » (4 : exprℝ) (z + «expr • » t m)) ((nhds) 0) ((nhds) y) :=\n    by\n    intro m\n    have : x + «expr • » (4 : exprℝ) (z + «expr • » (0 : exprℝ) m) = y := by simp [hz]\n    rw [← this]\n    refine' tendsto_const_nhds.add _\n    refine' tendsto_const_nhds.smul _\n    refine' tendsto_const_nhds.add _\n    exact continuous_at_id.smul continuousAt_const\n  have B :\n    ∀ m : E,\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        (nhds_within.gt (0 : exprℝ)) (x + «expr • » (4 : exprℝ) (z + «expr • » t m) ∈ interior s) :=\n    by\n    intro m\n    apply nhdsWithin_le_nhds\n    apply A m\n    rw [mem_interior_iff_mem_nhds] at hy\n    exact interior_mem_nhds.2 hy\n  -- we choose `t m > 0` such that `x + 4 (z + (t m) m)` belongs to the interior of `s`, for any\n  -- vector `m`.\n  choose t ts tpos using fun m => ((B m).and self_mem_nhdsWithin).exists\n  -- applying `second_derivative_within_at_symmetric_of_mem_interior` to the vectors `z`\n  -- and `z + (t m) m`, we deduce that `f'' m z = f'' z m` for all `m`.\n  have C : ∀ m : E, f'' m z = f'' z m := by\n    intro m\n    have : f'' (z + «expr • » (t m) m) (z + «expr • » (t 0) 0) = f'' (z + «expr • » (t 0) 0) (z + «expr • » (t m) m) :=\n      s_conv.second_derivative_within_at_symmetric_of_mem_interior hf xs hx (ts 0) (ts m)\n    simp only [ContinuousLinearMap.map_add, ContinuousLinearMap.map_smul, add_right_inj, ContinuousLinearMap.add_apply,\n      Pi.smul_apply, ContinuousLinearMap.coe_smul', add_zero, ContinuousLinearMap.zero_apply, smul_zero,\n      ContinuousLinearMap.map_zero] at this\n    exact smul_right_injective F (tpos m).ne' this\n  -- applying `second_derivative_within_at_symmetric_of_mem_interior` to the vectors `z + (t v) v`\n  -- and `z + (t w) w`, we deduce that `f'' v w = f'' w v`. Cross terms involving `z` can be\n  -- eliminated thanks to the fact proved above that `f'' m z = f'' z m`.\n  have : f'' (z + «expr • » (t v) v) (z + «expr • » (t w) w) = f'' (z + «expr • » (t w) w) (z + «expr • » (t v) v) :=\n    s_conv.second_derivative_within_at_symmetric_of_mem_interior hf xs hx (ts w) (ts v)\n  simp only [ContinuousLinearMap.map_add, ContinuousLinearMap.map_smul, smul_add, smul_smul,\n    ContinuousLinearMap.add_apply, Pi.smul_apply, ContinuousLinearMap.coe_smul', C] at this\n  rw [← sub_eq_zero] at this\n  abel  at this\n  simp only [one_zsmul, neg_smul, sub_eq_zero, mul_comm, ← sub_eq_add_neg] at this\n  apply smul_right_injective F _ this\n  simp [(tpos v).ne', (tpos w).ne']\n#align convex.second_derivative_within_at_symmetric convex.second_derivative_within_at_symmetric\n\n",
 "second_derivative_symmetric_of_eventually":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- If a function is differentiable around `x`, and has two derivatives at `x`, then the second\nderivative is symmetric. -/\ntheorem second_derivative_symmetric_of_eventually {f : E → F} {f' : E → «expr →L[ ] » E (exprℝ) F}\n    {f'' : «expr →L[ ] » E (exprℝ) («expr →L[ ] » E (exprℝ) F)}\n    (hf :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) x)\n        (has_fderiv_at f (f' y) y))\n    (hx : has_fderiv_at f' f'' x) (v w : E) : f'' v w = f'' w v :=\n  by\n  rcases Metric.mem_nhds_iff.1 hf with ⟨ε, εpos, hε⟩\n  have A : (interior (Metric.ball x ε)).nonempty := by rwa [metric.is_open_ball.interior_eq, Metric.nonempty_ball]\n  exact\n    convex.second_derivative_within_at_symmetric (convex_ball x ε) A (fun y hy => hε (interior_subset hy))\n      (Metric.mem_ball_self εpos) hx.has_fderiv_within_at v w\n#align second_derivative_symmetric_of_eventually second_derivative_symmetric_of_eventually\n\n",
 "second_derivative_symmetric":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If a function is differentiable, and has two derivatives at `x`, then the second\nderivative is symmetric. -/\ntheorem second_derivative_symmetric {f : E → F} {f' : E → «expr →L[ ] » E (exprℝ) F}\n    {f'' : «expr →L[ ] » E (exprℝ) («expr →L[ ] » E (exprℝ) F)} (hf : ∀ y, has_fderiv_at f (f' y) y)\n    (hx : has_fderiv_at f' f'' x) (v w : E) : f'' v w = f'' w v :=\n  second_derivative_symmetric_of_eventually (Filter.eventually_of_forall hf) hx v w\n#align second_derivative_symmetric second_derivative_symmetric\n\n",
 "is_o_alternate_sum_square":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/-- One can get `f'' v w` as the limit of `h ^ (-2)` times the alternate sum of the values of `f`\nalong the vertices of a quadrilateral with sides `h v` and `h w` based at `x`.\nIn a setting where `f` is not guaranteed to be continuous at `f`, we can still\nget this if we use a quadrilateral based at `h v + h w`. -/\ntheorem convex.is_o_alternate_sum_square {v w : E} (h4v : x + «expr • » (4 : exprℝ) v ∈ interior s)\n    (h4w : x + «expr • » (4 : exprℝ) w ∈ interior s) :\n    «expr =o[ ] »\n      (fun h : exprℝ =>\n        f (x + «expr • » h («expr • » 2 v + «expr • » 2 w)) + f (x + «expr • » h (v + w)) -\n              f (x + «expr • » h («expr • » 2 v + w)) -\n            f (x + «expr • » h (v + «expr • » 2 w)) -\n          «expr • » (h ^ 2) (f'' v w))\n      (nhds_within.gt 0) fun h => h ^ 2 :=\n  by\n  have A : (1 : exprℝ) / 2 ∈ Ioc (0 : exprℝ) 1 := ⟨by norm_num, by norm_num⟩\n  have B : (1 : exprℝ) / 2 ∈ Icc (0 : exprℝ) 1 := ⟨by norm_num, by norm_num⟩\n  have C : ∀ w : E, «expr • » (2 : exprℝ) w = «expr • » 2 w := fun w => by simp only [two_smul]\n  have h2v2w : x + «expr • » (2 : exprℝ) v + «expr • » (2 : exprℝ) w ∈ interior s :=\n    by\n    convert s_conv.interior.add_smul_sub_mem h4v h4w B using 1\n    simp only [smul_sub, smul_smul, one_div, add_sub_add_left_eq_sub, mul_add, add_smul]\n    norm_num\n    simp only [show (4 : exprℝ) = (2 : exprℝ) + (2 : exprℝ) by norm_num, add_smul]\n    abel\n  have h2vww : x + («expr • » 2 v + w) + w ∈ interior s :=\n    by\n    convert h2v2w using 1\n    simp only [two_smul]\n    abel\n  have h2v : x + «expr • » (2 : exprℝ) v ∈ interior s :=\n    by\n    convert s_conv.add_smul_sub_mem_interior xs h4v A using 1\n    simp only [smul_smul, one_div, add_sub_cancel', add_right_inj]\n    norm_num\n  have h2w : x + «expr • » (2 : exprℝ) w ∈ interior s :=\n    by\n    convert s_conv.add_smul_sub_mem_interior xs h4w A using 1\n    simp only [smul_smul, one_div, add_sub_cancel', add_right_inj]\n    norm_num\n  have hvw : x + (v + w) ∈ interior s :=\n    by\n    convert s_conv.add_smul_sub_mem_interior xs h2v2w A using 1\n    simp only [smul_smul, one_div, add_sub_cancel', add_right_inj, smul_add, smul_sub]\n    norm_num\n    abel\n  have h2vw : x + («expr • » 2 v + w) ∈ interior s :=\n    by\n    convert s_conv.interior.add_smul_sub_mem h2v h2v2w B using 1\n    simp only [smul_add, smul_sub, smul_smul, ← C]\n    norm_num\n    abel\n  have hvww : x + (v + w) + w ∈ interior s :=\n    by\n    convert s_conv.interior.add_smul_sub_mem h2w h2v2w B using 1\n    simp only [one_div, add_sub_cancel', inv_smul_smul₀, add_sub_add_right_eq_sub, ne.def, not_false_iff, bit0_eq_zero,\n      one_ne_zero]\n    rw [two_smul]\n    abel\n  have TA1 := s_conv.taylor_approx_two_segment hf xs hx h2vw h2vww\n  have TA2 := s_conv.taylor_approx_two_segment hf xs hx hvw hvww\n  convert TA1.sub TA2\n  ext h\n  simp only [two_smul, smul_add, ← add_assoc, ContinuousLinearMap.map_add, ContinuousLinearMap.add_apply, Pi.smul_apply,\n    ContinuousLinearMap.coe_smul', ContinuousLinearMap.map_smul]\n  abel\n#align convex.is_o_alternate_sum_square convex.is_o_alternate_sum_square\n\n"}