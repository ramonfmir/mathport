{"sub_const":
 "theorem sub_const (hf : diff_cont_on_cl 𝕜 f s) (c : F) : diff_cont_on_cl 𝕜 (fun x => f x - c) s :=\n  hf.sub diff_cont_on_cl_const\n#align sub_const sub_const\n\n",
 "sub":
 "theorem sub (hf : diff_cont_on_cl 𝕜 f s) (hg : diff_cont_on_cl 𝕜 g s) : diff_cont_on_cl 𝕜 (f - g) s :=\n  ⟨hf.1.sub hg.1, hf.2.sub hg.2⟩\n#align sub sub\n\n",
 "smul_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_const {𝕜' : Type _} [NontriviallyNormedField 𝕜'] [NormedAlgebra 𝕜 𝕜'] [NormedSpace 𝕜' F]\n    [IsScalarTower 𝕜 𝕜' F] {c : E → 𝕜'} {s : Set E} (hc : diff_cont_on_cl 𝕜 c s) (y : F) :\n    diff_cont_on_cl 𝕜 (fun x => «expr • » (c x) y) s :=\n  hc.smul diff_cont_on_cl_const\n#align smul_const smul_const\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul {𝕜' : Type _} [NontriviallyNormedField 𝕜'] [NormedAlgebra 𝕜 𝕜'] [NormedSpace 𝕜' F] [IsScalarTower 𝕜 𝕜' F]\n    {c : E → 𝕜'} {f : E → F} {s : Set E} (hc : diff_cont_on_cl 𝕜 c s) (hf : diff_cont_on_cl 𝕜 f s) :\n    diff_cont_on_cl 𝕜 (fun x => «expr • » (c x) (f x)) s :=\n  ⟨hc.1.smul hf.1, hc.2.smul hf.2⟩\n#align smul smul\n\n",
 "neg":
 "theorem neg (hf : diff_cont_on_cl 𝕜 f s) : diff_cont_on_cl 𝕜 (-f) s :=\n  ⟨hf.1.neg, hf.2.neg⟩\n#align neg neg\n\n",
 "mono":
 "protected theorem mono (h : diff_cont_on_cl 𝕜 f s) (ht : t ⊆ s) : diff_cont_on_cl 𝕜 f t :=\n  ⟨h.differentiable_on.mono ht, h.continuous_on.mono (closure_mono ht)⟩\n#align mono mono\n\n",
 "mk_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem mk_ball {x : E} {r : exprℝ} (hd : differentiable_on 𝕜 f (ball x r)) (hc : ContinuousOn f (closedBall x r)) :\n    diff_cont_on_cl 𝕜 f (ball x r) :=\n  ⟨hd, hc.mono <| closure_ball_subset_closedBall⟩\n#align mk_ball mk_ball\n\n",
 "inv":
 "theorem inv {f : E → 𝕜} (hf : diff_cont_on_cl 𝕜 f s) (h₀ : ∀ x ∈ closure s, f x ≠ 0) : diff_cont_on_cl 𝕜 f⁻¹ s :=\n  ⟨differentiable_on_inv.comp hf.1 fun x hx => h₀ _ (subset_closure hx), hf.2.inv₀ h₀⟩\n#align inv inv\n\n",
 "differentiable_at'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem differentiable_at' (h : diff_cont_on_cl 𝕜 f s) (hx : s ∈ (nhds) x) : differentiable_at 𝕜 f x :=\n  h.differentiable_on.differentiable_at hx\n#align differentiable_at' differentiable_at'\n\n",
 "differentiable_at":
 "protected theorem differentiable_at (h : diff_cont_on_cl 𝕜 f s) (hs : IsOpen s) (hx : x ∈ s) :\n    differentiable_at 𝕜 f x :=\n  h.differentiable_on.differentiable_at <| hs.mem_nhds hx\n#align differentiable_at differentiable_at\n\n",
 "diff_cont_on_cl_univ":
 "theorem diff_cont_on_cl_univ : diff_cont_on_cl 𝕜 f univ ↔ differentiable 𝕜 f :=\n  isClosed_univ.diff_cont_on_cl_iff.trans differentiable_on_univ\n#align diff_cont_on_cl_univ diff_cont_on_cl_univ\n\n",
 "diff_cont_on_cl_iff":
 "theorem is_closed.diff_cont_on_cl_iff (hs : IsClosed s) : diff_cont_on_cl 𝕜 f s ↔ differentiable_on 𝕜 f s :=\n  ⟨fun h => h.differentiable_on, fun h => ⟨h, hs.closure_eq.symm ▸ h.continuous_on⟩⟩\n#align is_closed.diff_cont_on_cl_iff is_closed.diff_cont_on_cl_iff\n\n",
 "diff_cont_on_cl_const":
 "theorem diff_cont_on_cl_const {c : F} : diff_cont_on_cl 𝕜 (fun x : E => c) s :=\n  ⟨differentiable_on_const c, continuousOn_const⟩\n#align diff_cont_on_cl_const diff_cont_on_cl_const\n\n",
 "diff_cont_on_cl_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem differentiable_on.diff_cont_on_cl_ball {U : Set E} {c : E} {R : exprℝ} (hf : differentiable_on 𝕜 f U)\n    (hc : closedBall c R ⊆ U) : diff_cont_on_cl 𝕜 f (ball c R) :=\n  diff_cont_on_cl.mk_ball (hf.mono (ball_subset_closedBall.trans hc)) (hf.continuous_on.mono hc)\n#align differentiable_on.diff_cont_on_cl_ball differentiable_on.diff_cont_on_cl_ball\n\n",
 "diff_cont_on_cl":
 "theorem differentiable.diff_cont_on_cl (h : differentiable 𝕜 f) : diff_cont_on_cl 𝕜 f s :=\n  ⟨h.differentiable_on, h.continuous.continuous_on⟩\n#align differentiable.diff_cont_on_cl differentiable.diff_cont_on_cl\n\n",
 "continuous_on_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem continuous_on_ball [NormedSpace (exprℝ) E] {x : E} {r : exprℝ} (h : diff_cont_on_cl 𝕜 f (ball x r)) :\n    ContinuousOn f (closedBall x r) := by\n  rcases eq_or_ne r 0 with (rfl | hr)\n  · rw [closed_ball_zero]\n    exact continuousOn_singleton f x\n  · rw [← closure_ball x hr]\n    exact h.continuous_on\n#align continuous_on_ball continuous_on_ball\n\n",
 "const_sub":
 "theorem const_sub (hf : diff_cont_on_cl 𝕜 f s) (c : F) : diff_cont_on_cl 𝕜 (fun x => c - f x) s :=\n  diff_cont_on_cl_const.sub hf\n#align const_sub const_sub\n\n",
 "const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem const_smul {R : Type _} [Semiring R] [Module R F] [SMulCommClass 𝕜 R F] [ContinuousConstSMul R F]\n    (hf : diff_cont_on_cl 𝕜 f s) (c : R) : diff_cont_on_cl 𝕜 («expr • » c f) s :=\n  ⟨hf.1.const_smul c, hf.2.const_smul c⟩\n#align const_smul const_smul\n\n",
 "const_add":
 "theorem const_add (hf : diff_cont_on_cl 𝕜 f s) (c : F) : diff_cont_on_cl 𝕜 (fun x => c + f x) s :=\n  diff_cont_on_cl_const.add hf\n#align const_add const_add\n\n",
 "comp_diff_cont_on_cl":
 "theorem differentiable.comp_diff_cont_on_cl {g : G → E} {t : Set G} (hf : differentiable 𝕜 f)\n    (hg : diff_cont_on_cl 𝕜 g t) : diff_cont_on_cl 𝕜 (f ∘ g) t :=\n  hf.diff_cont_on_cl.comp hg (mapsTo_image _ _)\n#align differentiable.comp_diff_cont_on_cl differentiable.comp_diff_cont_on_cl\n\n",
 "comp":
 "theorem comp {g : G → E} {t : Set G} (hf : diff_cont_on_cl 𝕜 f s) (hg : diff_cont_on_cl 𝕜 g t) (h : MapsTo g t s) :\n    diff_cont_on_cl 𝕜 (f ∘ g) t :=\n  ⟨hf.1.comp hg.1 h, hf.2.comp hg.2 <| h.closure_of_continuous_on hg.2⟩\n#align comp comp\n\n",
 "add_const":
 "theorem add_const (hf : diff_cont_on_cl 𝕜 f s) (c : F) : diff_cont_on_cl 𝕜 (fun x => f x + c) s :=\n  hf.add diff_cont_on_cl_const\n#align add_const add_const\n\n",
 "add":
 "theorem add (hf : diff_cont_on_cl 𝕜 f s) (hg : diff_cont_on_cl 𝕜 g s) : diff_cont_on_cl 𝕜 (f + g) s :=\n  ⟨hf.1.add hg.1, hf.2.add hg.2⟩\n#align add add\n\n"}