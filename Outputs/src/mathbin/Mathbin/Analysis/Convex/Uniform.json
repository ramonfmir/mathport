{"exists_forall_sphere_dist_add_le_two_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-\nCopyright (c) 2022 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\ntheorem exists_forall_sphere_dist_add_le_two_sub (hε : 0 < ε) :\n    ∃ δ,\n      0 < δ ∧ ∀ ⦃x : E⦄, «expr‖ ‖» x = 1 → ∀ ⦃y⦄, «expr‖ ‖» y = 1 → ε ≤ «expr‖ ‖» (x - y) → «expr‖ ‖» (x + y) ≤ 2 - δ :=\n  uniform_convex_space.uniform_convex hε\n#align exists_forall_sphere_dist_add_le_two_sub exists_forall_sphere_dist_add_le_two_sub\n\n",
 "exists_forall_closed_ball_dist_add_le_two_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem exists_forall_closed_ball_dist_add_le_two_sub (hε : 0 < ε) :\n    ∃ δ,\n      0 < δ ∧ ∀ ⦃x : E⦄, «expr‖ ‖» x ≤ 1 → ∀ ⦃y⦄, «expr‖ ‖» y ≤ 1 → ε ≤ «expr‖ ‖» (x - y) → «expr‖ ‖» (x + y) ≤ 2 - δ :=\n  by\n  have hε' : 0 < ε / 3 := div_pos hε zero_lt_three\n  obtain ⟨δ, hδ, h⟩ := exists_forall_sphere_dist_add_le_two_sub E hε'\n  set δ' := min (1 / 2) (min (ε / 3) <| δ / 3)\n  refine' ⟨δ', lt_min one_half_pos <| lt_min hε' (div_pos hδ zero_lt_three), fun x hx y hy hxy => _⟩\n  obtain hx' | hx' := le_or_lt («expr‖ ‖» x) (1 - δ')\n  · exact (norm_add_le_of_le hx' hy).trans (sub_add_eq_add_sub _ _ _).le\n  obtain hy' | hy' := le_or_lt («expr‖ ‖» y) (1 - δ')\n  · exact (norm_add_le_of_le hx hy').trans (add_sub_assoc _ _ _).ge\n  have hδ' : 0 < 1 - δ' := sub_pos_of_lt (min_lt_of_left_lt one_half_lt_one)\n  have h₁ : ∀ z : E, 1 - δ' < «expr‖ ‖» z → «expr‖ ‖» («expr • » («expr‖ ‖» z)⁻¹ z) = 1 :=\n    by\n    rintro z hz\n    rw [norm_smul_of_nonneg (inv_nonneg.2 <| norm_nonneg _), inv_mul_cancel (hδ'.trans hz).ne']\n  have h₂ : ∀ z : E, «expr‖ ‖» z ≤ 1 → 1 - δ' ≤ «expr‖ ‖» z → «expr‖ ‖» («expr • » («expr‖ ‖» z)⁻¹ z - z) ≤ δ' :=\n    by\n    rintro z hz hδz\n    nth_rw 3 [← one_smul (exprℝ) z]\n    rwa [← sub_smul, norm_smul_of_nonneg (sub_nonneg_of_le <| one_le_inv (hδ'.trans_le hδz) hz), sub_mul,\n      inv_mul_cancel (hδ'.trans_le hδz).ne', one_mul, sub_le_comm]\n  set x' := «expr • » («expr‖ ‖» x)⁻¹ x\n  set y' := «expr • » («expr‖ ‖» y)⁻¹ y\n  have hxy' : ε / 3 ≤ «expr‖ ‖» (x' - y') :=\n    calc\n      ε / 3 = ε - (ε / 3 + ε / 3) := by ring\n      _ ≤ «expr‖ ‖» (x - y) - («expr‖ ‖» (x' - x) + «expr‖ ‖» (y' - y)) :=\n        (sub_le_sub hxy\n          (add_le_add ((h₂ _ hx hx'.le).trans <| min_le_of_right_le <| min_le_left _ _) <|\n            (h₂ _ hy hy'.le).trans <| min_le_of_right_le <| min_le_left _ _))\n      _ ≤ _ := by\n        have : ∀ x' y', x - y = x' - y' + (x - x') + (y' - y) := fun _ _ => by abel\n        rw [sub_le_iff_le_add, norm_sub_rev _ x, ← add_assoc, this]\n        exact norm_add₃_le _ _ _\n      \n  calc\n    «expr‖ ‖» (x + y) ≤ «expr‖ ‖» (x' + y') + «expr‖ ‖» (x' - x) + «expr‖ ‖» (y' - y) :=\n      by\n      have : ∀ x' y', x + y = x' + y' + (x - x') + (y - y') := fun _ _ => by abel\n      rw [norm_sub_rev, norm_sub_rev y', this]\n      exact norm_add₃_le _ _ _\n    _ ≤ 2 - δ + δ' + δ' := (add_le_add_three (h (h₁ _ hx') (h₁ _ hy') hxy') (h₂ _ hx hx'.le) (h₂ _ hy hy'.le))\n    _ ≤ 2 - δ' := by\n      rw [← le_sub_iff_add_le, ← le_sub_iff_add_le, sub_sub, sub_sub]\n      refine' sub_le_sub_left _ _\n      ring_nf\n      rw [← mul_div_cancel' δ three_ne_zero]\n      exact mul_le_mul_of_nonneg_left (min_le_of_right_le <| min_le_right _ _) three_pos.le\n    \n#align exists_forall_closed_ball_dist_add_le_two_sub exists_forall_closed_ball_dist_add_le_two_sub\n\n",
 "exists_forall_closed_ball_dist_add_le_two_mul_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem exists_forall_closed_ball_dist_add_le_two_mul_sub (hε : 0 < ε) (r : exprℝ) :\n    ∃ δ,\n      0 < δ ∧\n        ∀ ⦃x : E⦄, «expr‖ ‖» x ≤ r → ∀ ⦃y⦄, «expr‖ ‖» y ≤ r → ε ≤ «expr‖ ‖» (x - y) → «expr‖ ‖» (x + y) ≤ 2 * r - δ :=\n  by\n  obtain hr | hr := le_or_lt r 0\n  ·\n    exact\n      ⟨1, one_pos, fun x hx y hy h =>\n        (hε.not_le <| h.trans <| (norm_sub_le _ _).trans <| add_nonpos (hx.trans hr) (hy.trans hr)).elim⟩\n  obtain ⟨δ, hδ, h⟩ := exists_forall_closed_ball_dist_add_le_two_sub E (div_pos hε hr)\n  refine' ⟨δ * r, mul_pos hδ hr, fun x hx y hy hxy => _⟩\n  rw [← div_le_one hr, div_eq_inv_mul, ← norm_smul_of_nonneg (inv_nonneg.2 hr.le)] at hx hy <;> try infer_instance\n  have := h hx hy\n  simp_rw [← smul_add, ← smul_sub, norm_smul_of_nonneg (inv_nonneg.2 hr.le), ← div_eq_inv_mul, div_le_div_right hr,\n    div_le_iff hr, sub_mul] at this\n  exact this hxy\n#align exists_forall_closed_ball_dist_add_le_two_mul_sub exists_forall_closed_ball_dist_add_le_two_mul_sub\n\n"}