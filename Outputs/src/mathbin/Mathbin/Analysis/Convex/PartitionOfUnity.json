{"finsum_smul_mem_convex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Ä¢ ¬ª -/\n/-\nCopyright (c) 2022 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\ntheorem partition_of_unity.finsum_smul_mem_convex {s : set X} (f : partition_of_unity Œπ X s) {g : Œπ ‚Üí X ‚Üí E} {t : set E}\n    {x : X} (hx : x ‚àà s) (hg : ‚àÄ i, f i x ‚â† 0 ‚Üí g i x ‚àà t) (ht : convex (expr‚Ñù) t) :\n    finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\"\n        (¬´expr ‚Ä¢ ¬ª (f i x) (g i x)) ‚àà\n      t :=\n  ht.finsum_mem (fun i => f.nonneg _ _) (f.sum_eq_one hx) hg\n#align partition_of_unity.finsum_smul_mem_convex partition_of_unity.finsum_smul_mem_convex\n\n",
 "exists_continuous_forall_mem_convex_of_local_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚àÄ·∂† in , ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚àÄ·∂† in , ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´exprC( , )¬ª -/\n/-- Let `X` be a normal paracompact topological space (e.g., any extended metric space). Let `E` be\na topological real vector space. Let `t : X ‚Üí set E` be a family of convex sets. Suppose that for\neach point `x : X`, there exists a vector `c : E` that belongs to `t y` for all `y` in a\nneighborhood of `x`. Then there exists a continuous map `g : C(X, E)` such that `g x ‚àà t x` for all\n`x`. See also `exists_continuous_forall_mem_convex_of_local`. -/\ntheorem exists_continuous_forall_mem_convex_of_local_const (ht : ‚àÄ x, convex (expr‚Ñù) (t x))\n    (H :\n      ‚àÄ x : X,\n        ‚àÉ c : E,\n          ¬´expr‚àÄ·∂† in , ¬ª \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚àÄ·∂† in , ¬ª\"\n            ((nhds) x) (c ‚àà t y)) :\n    ‚àÉ g : ¬´exprC( , )¬ª X E, ‚àÄ x, g x ‚àà t x :=\n  exists_continuous_forall_mem_convex_of_local ht fun x =>\n    let ‚ü®c, hc‚ü© := H x\n    ‚ü®_, hc, fun _ => c, continuous_on_const, fun y => id‚ü©\n#align exists_continuous_forall_mem_convex_of_local_const exists_continuous_forall_mem_convex_of_local_const\n\n",
 "exists_continuous_forall_mem_convex_of_local":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚Ä¢ ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´exprC( , )¬ª -/\n/-- Let `X` be a normal paracompact topological space (e.g., any extended metric space). Let `E` be\na topological real vector space. Let `t : X ‚Üí set E` be a family of convex sets. Suppose that for\neach point `x : X`, there exists a neighborhood `U ‚àà ùìù X` and a function `g : X ‚Üí E` that is\ncontinuous on `U` and sends each `y ‚àà U` to a point of `t y`. Then there exists a continuous map\n`g : C(X, E)` such that `g x ‚àà t x` for all `x`. See also\n`exists_continuous_forall_mem_convex_of_local_const`. -/\ntheorem exists_continuous_forall_mem_convex_of_local (ht : ‚àÄ x, convex (expr‚Ñù) (t x))\n    (H : ‚àÄ x : X, ‚àÉ U ‚àà (nhds) x, ‚àÉ g : X ‚Üí E, continuous_on g U ‚àß ‚àÄ y ‚àà U, g y ‚àà t y) :\n    ‚àÉ g : ¬´exprC( , )¬ª X E, ‚àÄ x, g x ‚àà t x :=\n  by\n  choose U hU g hgc hgt using H\n  obtain ‚ü®f, hf‚ü© :=\n    partition_of_unity.exists_is_subordinate is_closed_univ (fun x => interior (U x)) (fun x => is_open_interior)\n      fun x hx => mem_Union.2 ‚ü®x, mem_interior_iff_mem_nhds.2 (hU x)‚ü©\n  refine'\n    ‚ü®‚ü®fun x =>\n        finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\"\n          (¬´expr ‚Ä¢ ¬ª (f i x) (g i x)),\n        hf.continuous_finsum_smul (fun i => is_open_interior) fun i => (hgc i).mono interior_subset‚ü©,\n      fun x => f.finsum_smul_mem_convex (mem_univ x) (fun i hi => hgt _ _ _) (ht _)‚ü©\n  exact interior_subset (hf _ <| subset_closure hi)\n#align exists_continuous_forall_mem_convex_of_local exists_continuous_forall_mem_convex_of_local\n\n"}