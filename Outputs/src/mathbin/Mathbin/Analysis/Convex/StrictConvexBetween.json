{"wbtw_of_dist_eq_of_dist_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Given three collinear points, two (not equal) with distance `r` from `p` and one with\ndistance at most `r` from `p`, the third point is weakly between the other two points. -/\ntheorem collinear.wbtw_of_dist_eq_of_dist_le {p p₁ p₂ p₃ : P} {r : exprℝ} (h : Collinear (exprℝ) ({p₁, p₂, p₃} : Set P))\n    (hp₁ : dist p₁ p = r) (hp₂ : dist p₂ p ≤ r) (hp₃ : dist p₃ p = r) (hp₁p₃ : p₁ ≠ p₃) : wbtw (exprℝ) p₁ p₂ p₃ :=\n  by\n  rcases h.wbtw_or_wbtw_or_wbtw with (hw | hw | hw)\n  · exact hw\n  · by_cases hp₃p₂ : p₃ = p₂\n    · simp [hp₃p₂]\n    have hs : sbtw (exprℝ) p₂ p₃ p₁ := ⟨hw, hp₃p₂, hp₁p₃.symm⟩\n    have hs' := hs.dist_lt_max_dist p\n    rw [hp₁, hp₃, lt_max_iff, lt_self_iff_false, or_false_iff] at hs'\n    exact false.elim (hp₂.not_lt hs')\n  · by_cases hp₁p₂ : p₁ = p₂\n    · simp [hp₁p₂]\n    have hs : sbtw (exprℝ) p₃ p₁ p₂ := ⟨hw, hp₁p₃, hp₁p₂⟩\n    have hs' := hs.dist_lt_max_dist p\n    rw [hp₁, hp₃, lt_max_iff, lt_self_iff_false, false_or_iff] at hs'\n    exact false.elim (hp₂.not_lt hs')\n#align collinear.wbtw_of_dist_eq_of_dist_le collinear.wbtw_of_dist_eq_of_dist_le\n\n",
 "sbtw_of_dist_eq_of_dist_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Given three collinear points, two (not equal) with distance `r` from `p` and one with\ndistance less than `r` from `p`, the third point is strictly between the other two points. -/\ntheorem collinear.sbtw_of_dist_eq_of_dist_lt {p p₁ p₂ p₃ : P} {r : exprℝ} (h : Collinear (exprℝ) ({p₁, p₂, p₃} : Set P))\n    (hp₁ : dist p₁ p = r) (hp₂ : dist p₂ p < r) (hp₃ : dist p₃ p = r) (hp₁p₃ : p₁ ≠ p₃) : sbtw (exprℝ) p₁ p₂ p₃ :=\n  by\n  refine' ⟨h.wbtw_of_dist_eq_of_dist_le hp₁ hp₂.le hp₃ hp₁p₃, _, _⟩\n  · rintro rfl\n    exact hp₂.ne hp₁\n  · rintro rfl\n    exact hp₂.ne hp₃\n#align collinear.sbtw_of_dist_eq_of_dist_lt collinear.sbtw_of_dist_eq_of_dist_lt\n\n",
 "dist_lt_max_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2022 Joseph Myers. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Joseph Myers\n-/\ntheorem sbtw.dist_lt_max_dist (p : P) {p₁ p₂ p₃ : P} (h : sbtw (exprℝ) p₁ p₂ p₃) :\n    dist p₂ p < max (dist p₁ p) (dist p₃ p) :=\n  by\n  have hp₁p₃ : «expr -ᵥ » p₁ p ≠ «expr -ᵥ » p₃ p := by simpa using h.left_ne_right\n  rw [sbtw, ← wbtw_vsub_const_iff p, wbtw, affine_segment_eq_segment, ← insert_endpoints_openSegment,\n    Set.mem_insert_iff, Set.mem_insert_iff] at h\n  rcases h with ⟨h | h | h, hp₂p₁, hp₂p₃⟩\n  · rw [vsub_left_cancel_iff] at h\n    exact false.elim (hp₂p₁ h)\n  · rw [vsub_left_cancel_iff] at h\n    exact false.elim (hp₂p₃ h)\n  · rw [openSegment_eq_image, Set.mem_image] at h\n    rcases h with ⟨r, ⟨hr0, hr1⟩, hr⟩\n    simp_rw [@dist_eq_norm_vsub V, ← hr]\n    exact norm_combo_lt_of_ne (le_max_left _ _) (le_max_right _ _) hp₁p₃ (sub_pos.2 hr1) hr0 (by abel)\n#align sbtw.dist_lt_max_dist sbtw.dist_lt_max_dist\n\n",
 "dist_le_max_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem wbtw.dist_le_max_dist (p : P) {p₁ p₂ p₃ : P} (h : wbtw (exprℝ) p₁ p₂ p₃) :\n    dist p₂ p ≤ max (dist p₁ p) (dist p₃ p) := by\n  by_cases hp₁ : p₂ = p₁; · simp [hp₁]\n  by_cases hp₃ : p₂ = p₃; · simp [hp₃]\n  have hs : sbtw (exprℝ) p₁ p₂ p₃ := ⟨h, hp₁, hp₃⟩\n  exact (hs.dist_lt_max_dist _).le\n#align wbtw.dist_le_max_dist wbtw.dist_le_max_dist\n\n"}