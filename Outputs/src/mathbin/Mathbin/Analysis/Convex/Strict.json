{"vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- The translation of a strictly convex set is also strictly convex. -/\ntheorem strict_convex.vadd (hs : strict_convex 𝕜 s) (x : E) : strict_convex 𝕜 («expr +ᵥ » x s) :=\n  hs.add_left x\n#align strict_convex.vadd strict_convex.vadd\n\n",
 "sub":
 "theorem strict_convex.sub (hs : strict_convex 𝕜 s) (ht : strict_convex 𝕜 t) : strict_convex 𝕜 (s - t) :=\n  (sub_eq_add_neg s t).symm ▸ hs.add ht.neg\n#align strict_convex.sub strict_convex.sub\n\n",
 "strict_convex_univ":
 "theorem strict_convex_univ : strict_convex 𝕜 (univ : set E) :=\n  by\n  intro x hx y hy hxy a b ha hb hab\n  rw [interior_univ]\n  exact mem_univ _\n#align strict_convex_univ strict_convex_univ\n\n",
 "strict_convex_uIoc":
 "theorem strict_convex_uIoc (r s : β) : strict_convex 𝕜 (uIoc r s) :=\n  strict_convex_Ioc _ _\n#align strict_convex_uIoc strict_convex_uIoc\n\n",
 "strict_convex_uIcc":
 "theorem strict_convex_uIcc (r s : β) : strict_convex 𝕜 (uIcc r s) :=\n  strict_convex_Icc _ _\n#align strict_convex_uIcc strict_convex_uIcc\n\n",
 "strict_convex_singleton":
 "theorem strict_convex_singleton (c : E) : strict_convex 𝕜 ({c} : set E) :=\n  pairwise_singleton _ _\n#align strict_convex_singleton strict_convex_singleton\n\n",
 "strict_convex_sUnion":
 "theorem directed_on.strict_convex_sUnion {S : set (set E)} (hdir : DirectedOn (· ⊆ ·) S)\n    (hS : ∀ s ∈ S, strict_convex 𝕜 s) : strict_convex 𝕜 (⋃₀ S) :=\n  by\n  rw [sUnion_eq_Union]\n  exact (directedOn_iff_directed.1 hdir).strict_convex_Union fun s => hS _ s.2\n#align directed_on.strict_convex_sUnion directed_on.strict_convex_sUnion\n\n",
 "strict_convex_of_open":
 "/-- An open convex set is strictly convex. -/\nprotected theorem convex.strict_convex_of_open (h : is_open s) (hs : convex 𝕜 s) : strict_convex 𝕜 s :=\n  fun x hx y hy _ a b ha hb hab => h.interior_eq.symm ▸ hs hx hy ha.le hb.le hab\n#align convex.strict_convex_of_open convex.strict_convex_of_open\n\n",
 "strict_convex_iff_ord_connected":
 "theorem strict_convex_iff_ord_connected : strict_convex 𝕜 s ↔ s.ord_connected :=\n  strict_convex_iff_convex.trans convex_iff_ord_connected\n#align strict_convex_iff_ord_connected strict_convex_iff_ord_connected\n\n",
 "strict_convex_iff_open_segment_subset":
 "/-\nCopyright (c) 2021 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\ntheorem strict_convex_iff_open_segment_subset :\n    strict_convex 𝕜 s ↔ s.pairwise fun x y => open_segment 𝕜 x y ⊆ interior s :=\n  forall₅_congr fun x hx y hy hxy => (open_segment_subset_iff 𝕜).symm\n#align strict_convex_iff_open_segment_subset strict_convex_iff_open_segment_subset\n\n",
 "strict_convex_iff_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Alternative definition of set strict convexity, using division. -/\ntheorem strict_convex_iff_div :\n    strict_convex 𝕜 s ↔\n      s.pairwise fun x y =>\n        ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → «expr • » (a / (a + b)) x + «expr • » (b / (a + b)) y ∈ interior s :=\n  ⟨fun h x hx y hy hxy a b ha hb =>\n    by\n    apply h hx hy hxy (div_pos ha <| add_pos ha hb) (div_pos hb <| add_pos ha hb)\n    rw [← add_div]\n    exact div_self (add_pos ha hb).ne', fun h x hx y hy hxy a b ha hb hab => by\n    convert h hx hy hxy ha hb <;> rw [hab, div_one]⟩\n#align strict_convex_iff_div strict_convex_iff_div\n\n",
 "strict_convex_iff_convex":
 "/-- A set in a linear ordered field is strictly convex if and only if it is convex. -/\n@[simp]\ntheorem strict_convex_iff_convex : strict_convex 𝕜 s ↔ convex 𝕜 s :=\n  ⟨strict_convex.convex, fun hs => hs.ord_connected.strict_convex⟩\n#align strict_convex_iff_convex strict_convex_iff_convex\n\n",
 "strict_convex_iff":
 "theorem is_open.strict_convex_iff (h : is_open s) : strict_convex 𝕜 s ↔ convex 𝕜 s :=\n  ⟨strict_convex.convex, convex.strict_convex_of_open h⟩\n#align is_open.strict_convex_iff is_open.strict_convex_iff\n\n",
 "strict_convex_empty":
 "theorem strict_convex_empty : strict_convex 𝕜 (∅ : set E) :=\n  pairwise_empty _\n#align strict_convex_empty strict_convex_empty\n\n",
 "strict_convex_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem directed.strict_convex_Union {ι : Sort _} {s : ι → set E} (hdir : Directed (· ⊆ ·) s)\n    (hs : ∀ ⦃i : ι⦄, strict_convex 𝕜 (s i)) :\n    strict_convex 𝕜\n      («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s i)) :=\n  by\n  rintro x hx y hy hxy a b ha hb hab\n  rw [mem_Union] at hx hy\n  obtain ⟨i, hx⟩ := hx\n  obtain ⟨j, hy⟩ := hy\n  obtain ⟨k, hik, hjk⟩ := hdir i j\n  exact interior_mono (subset_Union s k) (hs (hik hx) (hjk hy) hxy ha hb hab)\n#align directed.strict_convex_Union directed.strict_convex_Union\n\n",
 "strict_convex_Ioo":
 "theorem strict_convex_Ioo (r s : β) : strict_convex 𝕜 (Ioo r s) :=\n  ordConnected_Ioo.strict_convex\n#align strict_convex_Ioo strict_convex_Ioo\n\n",
 "strict_convex_Ioi":
 "theorem strict_convex_Ioi (r : β) : strict_convex 𝕜 (Ioi r) :=\n  ordConnected_Ioi.strict_convex\n#align strict_convex_Ioi strict_convex_Ioi\n\n",
 "strict_convex_Ioc":
 "theorem strict_convex_Ioc (r s : β) : strict_convex 𝕜 (Ioc r s) :=\n  ordConnected_Ioc.strict_convex\n#align strict_convex_Ioc strict_convex_Ioc\n\n",
 "strict_convex_Iio":
 "theorem strict_convex_Iio (r : β) : strict_convex 𝕜 (Iio r) :=\n  ord_connected_Iio.strict_convex\n#align strict_convex_Iio strict_convex_Iio\n\n",
 "strict_convex_Iic":
 "theorem strict_convex_Iic (r : β) : strict_convex 𝕜 (Iic r) :=\n  ordConnected_Iic.strict_convex\n#align strict_convex_Iic strict_convex_Iic\n\n",
 "strict_convex_Ico":
 "theorem strict_convex_Ico (r s : β) : strict_convex 𝕜 (Ico r s) :=\n  ordConnected_Ico.strict_convex\n#align strict_convex_Ico strict_convex_Ico\n\n",
 "strict_convex_Ici":
 "theorem strict_convex_Ici (r : β) : strict_convex 𝕜 (Ici r) :=\n  ordConnected_Ici.strict_convex\n#align strict_convex_Ici strict_convex_Ici\n\n",
 "strict_convex_Icc":
 "theorem strict_convex_Icc (r s : β) : strict_convex 𝕜 (Icc r s) :=\n  ordConnected_Icc.strict_convex\n#align strict_convex_Icc strict_convex_Icc\n\n",
 "strict_convex":
 "protected theorem set.ord_connected.strict_convex {s : set β} (hs : OrdConnected s) : strict_convex 𝕜 s :=\n  by\n  refine' strict_convex_iff_open_segment_subset.2 fun x hx y hy hxy => _\n  cases' hxy.lt_or_lt with hlt hlt <;> [skip, rw [open_segment_symm]] <;>\n    exact\n      (open_segment_subset_Ioo hlt).trans\n        (is_open_Ioo.subset_interior_iff.2 <| Ioo_subset_Icc_self.trans <| hs.out ‹_› ‹_›)\n#align set.ord_connected.strict_convex set.ord_connected.strict_convex\n\n",
 "smul_mem_of_zero_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_convex.smul_mem_of_zero_mem (hs : strict_convex 𝕜 s) (zero_mem : (0 : E) ∈ s) (hx : x ∈ s) (hx₀ : x ≠ 0)\n    {t : 𝕜} (ht₀ : 0 < t) (ht₁ : t < 1) : «expr • » t x ∈ interior s := by\n  simpa using hs.add_smul_mem zero_mem (by simpa using hx) hx₀ ht₀ ht₁\n#align strict_convex.smul_mem_of_zero_mem strict_convex.smul_mem_of_zero_mem\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_convex.smul (hs : strict_convex 𝕜 s) (c : 𝕝) : strict_convex 𝕜 («expr • » c s) :=\n  by\n  obtain rfl | hc := eq_or_ne c 0\n  · exact (subsingleton_zero_smul_set _).strict_convex\n  · exact hs.linear_image (linear_map.lsmul _ _ c) (is_open_map_smul₀ hc)\n#align strict_convex.smul strict_convex.smul\n\n",
 "preimage_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_convex.preimage_smul (hs : strict_convex 𝕜 s) (c : 𝕜) :\n    strict_convex 𝕜 («expr ⁻¹' » (fun z => «expr • » c z) s) := by\n  classical\n    obtain rfl | hc := eq_or_ne c 0\n    · simp_rw [zero_smul, preimage_const]\n      split_ifs\n      · exact strict_convex_univ\n      · exact strict_convex_empty\n    refine' hs.linear_preimage (linear_map.lsmul _ _ c) _ (smul_right_injective E hc)\n    unfold linear_map.lsmul linear_map.mk₂ linear_map.mk₂' linear_map.mk₂'ₛₗ\n    exact continuous_const_smul _\n#align strict_convex.preimage_smul strict_convex.preimage_smul\n\n",
 "preimage_add_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- The translation of a strictly convex set is also strictly convex. -/\ntheorem strict_convex.preimage_add_right (hs : strict_convex 𝕜 s) (z : E) :\n    strict_convex 𝕜 («expr ⁻¹' » (fun x => z + x) s) :=\n  by\n  intro x hx y hy hxy a b ha hb hab\n  refine' preimage_interior_subset_interior_preimage (continuous_add_left _) _\n  have h := hs hx hy ((add_right_injective _).ne hxy) ha hb hab\n  rwa [smul_add, smul_add, add_add_add_comm, ← add_smul, hab, one_smul] at h\n#align strict_convex.preimage_add_right strict_convex.preimage_add_right\n\n",
 "preimage_add_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- The translation of a strictly convex set is also strictly convex. -/\ntheorem strict_convex.preimage_add_left (hs : strict_convex 𝕜 s) (z : E) :\n    strict_convex 𝕜 («expr ⁻¹' » (fun x => x + z) s) := by simpa only [add_comm] using hs.preimage_add_right z\n#align strict_convex.preimage_add_left strict_convex.preimage_add_left\n\n",
 "open_segment_subset":
 "theorem strict_convex.open_segment_subset (hs : strict_convex 𝕜 s) (hx : x ∈ s) (hy : y ∈ s) (h : x ≠ y) :\n    open_segment 𝕜 x y ⊆ interior s :=\n  strict_convex_iff_open_segment_subset.1 hs hx hy h\n#align strict_convex.open_segment_subset strict_convex.open_segment_subset\n\n",
 "neg":
 "theorem strict_convex.neg (hs : strict_convex 𝕜 s) : strict_convex 𝕜 (-s) :=\n  hs.is_linear_preimage is_linear_map.is_linear_map_neg continuous_id.neg neg_injective\n#align strict_convex.neg strict_convex.neg\n\n",
 "mem_smul_of_zero_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_convex.mem_smul_of_zero_mem (hs : strict_convex 𝕜 s) (zero_mem : (0 : E) ∈ s) (hx : x ∈ s) (hx₀ : x ≠ 0)\n    {t : 𝕜} (ht : 1 < t) : x ∈ «expr • » t (interior s) :=\n  by\n  rw [mem_smul_set_iff_inv_smul_mem₀ (zero_lt_one.trans ht).ne']\n  exact hs.smul_mem_of_zero_mem zero_mem hx hx₀ (inv_pos.2 <| zero_lt_one.trans ht) (inv_lt_one ht)\n#align strict_convex.mem_smul_of_zero_mem strict_convex.mem_smul_of_zero_mem\n\n",
 "linear_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem strict_convex.linear_preimage {s : set F} (hs : strict_convex 𝕜 s) (f : «expr →ₗ[ ] » E 𝕜 F) (hf : continuous f)\n    (hfinj : injective f) : strict_convex 𝕜 (s.preimage f) :=\n  by\n  intro x hx y hy hxy a b ha hb hab\n  refine' preimage_interior_subset_interior_preimage hf _\n  rw [mem_preimage, f.map_add, f.map_smul, f.map_smul]\n  exact hs hx hy (hfinj.ne hxy) ha hb hab\n#align strict_convex.linear_preimage strict_convex.linear_preimage\n\n",
 "linear_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem strict_convex.linear_image [Semiring 𝕝] [Module 𝕝 E] [Module 𝕝 F] [linear_map.compatible_smul E F 𝕜 𝕝]\n    (hs : strict_convex 𝕜 s) (f : «expr →ₗ[ ] » E 𝕝 F) (hf : is_open_map f) : strict_convex 𝕜 («expr '' » f s) :=\n  by\n  rintro _ ⟨x, hx, rfl⟩ _ ⟨y, hy, rfl⟩ hxy a b ha hb hab\n  refine' hf.image_interior_subset _ ⟨«expr • » a x + «expr • » b y, hs hx hy (ne_of_apply_ne _ hxy) ha hb hab, _⟩\n  rw [map_add, f.map_smul_of_tower a, f.map_smul_of_tower b]\n#align strict_convex.linear_image strict_convex.linear_image\n\n",
 "is_linear_preimage":
 "theorem strict_convex.is_linear_preimage {s : set F} (hs : strict_convex 𝕜 s) {f : E → F} (h : is_linear_map 𝕜 f)\n    (hf : continuous f) (hfinj : injective f) : strict_convex 𝕜 (s.preimage f) :=\n  hs.linear_preimage (h.mk' f) hf hfinj\n#align strict_convex.is_linear_preimage strict_convex.is_linear_preimage\n\n",
 "is_linear_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem strict_convex.is_linear_image (hs : strict_convex 𝕜 s) {f : E → F} (h : is_linear_map 𝕜 f)\n    (hf : is_open_map f) : strict_convex 𝕜 («expr '' » f s) :=\n  hs.linear_image (h.mk' f) hf\n#align strict_convex.is_linear_image strict_convex.is_linear_image\n\n",
 "inter":
 "protected theorem strict_convex.inter {t : set E} (hs : strict_convex 𝕜 s) (ht : strict_convex 𝕜 t) :\n    strict_convex 𝕜 (s ∩ t) := by\n  intro x hx y hy hxy a b ha hb hab\n  rw [interior_inter]\n  exact ⟨hs hx.1 hy.1 hxy ha hb hab, ht hx.2 hy.2 hxy ha hb hab⟩\n#align strict_convex.inter strict_convex.inter\n\n",
 "eq_of_open_segment_subset_frontier":
 "theorem strict_convex.eq_of_open_segment_subset_frontier [nontrivial 𝕜] [DenselyOrdered 𝕜] (hs : strict_convex 𝕜 s)\n    (hx : x ∈ s) (hy : y ∈ s) (h : open_segment 𝕜 x y ⊆ frontier s) : x = y :=\n  by\n  obtain ⟨a, ha₀, ha₁⟩ := densely_ordered.dense (0 : 𝕜) 1 zero_lt_one\n  classical\n    by_contra hxy\n    exact\n      (h ⟨a, 1 - a, ha₀, sub_pos_of_lt ha₁, add_sub_cancel'_right _ _, rfl⟩).2\n        (hs hx hy hxy ha₀ (sub_pos_of_lt ha₁) <| add_sub_cancel'_right _ _)\n#align strict_convex.eq_of_open_segment_subset_frontier strict_convex.eq_of_open_segment_subset_frontier\n\n",
 "eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\nprotected theorem strict_convex.eq (hs : strict_convex 𝕜 s) (hx : x ∈ s) (hy : y ∈ s) (ha : 0 < a) (hb : 0 < b)\n    (hab : a + b = 1) (h : «expr • » a x + «expr • » b y ∉ interior s) : x = y :=\n  hs.eq hx hy fun H => h <| H ha hb hab\n#align strict_convex.eq strict_convex.eq\n\n",
 "convex":
 "protected theorem strict_convex.convex (hs : strict_convex 𝕜 s) : convex 𝕜 s :=\n  convex_iff_pairwise_pos.2 fun x hx y hy hxy a b ha hb hab => interior_subset <| hs hx hy hxy ha hb hab\n#align strict_convex.convex strict_convex.convex\n\n",
 "affinity":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_convex.affinity [has_continuous_add E] (hs : strict_convex 𝕜 s) (z : E) (c : 𝕝) :\n    strict_convex 𝕜 («expr +ᵥ » z («expr • » c s)) :=\n  (hs.smul c).vadd z\n#align strict_convex.affinity strict_convex.affinity\n\n",
 "affine_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- The preimage of a strictly convex set under an affine map is strictly convex. -/\ntheorem strict_convex.affine_preimage {s : set F} (hs : strict_convex 𝕜 s) {f : «expr →ᵃ[ ] » E 𝕜 F} (hf : continuous f)\n    (hfinj : injective f) : strict_convex 𝕜 («expr ⁻¹' » f s) :=\n  by\n  intro x hx y hy hxy a b ha hb hab\n  refine' preimage_interior_subset_interior_preimage hf _\n  rw [mem_preimage, convex.combo_affine_apply hab]\n  exact hs hx hy (hfinj.ne hxy) ha hb hab\n#align strict_convex.affine_preimage strict_convex.affine_preimage\n\n",
 "affine_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/-- The image of a strictly convex set under an affine map is strictly convex. -/\ntheorem strict_convex.affine_image (hs : strict_convex 𝕜 s) {f : «expr →ᵃ[ ] » E 𝕜 F} (hf : is_open_map f) :\n    strict_convex 𝕜 («expr '' » f s) :=\n  by\n  rintro _ ⟨x, hx, rfl⟩ _ ⟨y, hy, rfl⟩ hxy a b ha hb hab\n  exact\n    hf.image_interior_subset _\n      ⟨«expr • » a x + «expr • » b y, ⟨hs hx hy (ne_of_apply_ne _ hxy) ha hb hab, convex.combo_affine_apply hab⟩⟩\n#align strict_convex.affine_image strict_convex.affine_image\n\n",
 "add_smul_sub_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_convex.add_smul_sub_mem (h : strict_convex 𝕜 s) (hx : x ∈ s) (hy : y ∈ s) (hxy : x ≠ y) {t : 𝕜}\n    (ht₀ : 0 < t) (ht₁ : t < 1) : x + «expr • » t (y - x) ∈ interior s :=\n  by\n  apply h.open_segment_subset hx hy hxy\n  rw [open_segment_eq_image']\n  exact mem_image_of_mem _ ⟨ht₀, ht₁⟩\n#align strict_convex.add_smul_sub_mem strict_convex.add_smul_sub_mem\n\n",
 "add_smul_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_convex.add_smul_mem (hs : strict_convex 𝕜 s) (hx : x ∈ s) (hxy : x + y ∈ s) (hy : y ≠ 0) {t : 𝕜}\n    (ht₀ : 0 < t) (ht₁ : t < 1) : x + «expr • » t y ∈ interior s :=\n  by\n  have h : x + «expr • » t y = «expr • » (1 - t) x + «expr • » t (x + y) := by\n    rw [smul_add, ← add_assoc, ← add_smul, sub_add_cancel, one_smul]\n  rw [h]\n  refine' hs hx hxy (fun h => hy <| add_left_cancel _) (sub_pos_of_lt ht₁) ht₀ (sub_add_cancel _ _)\n  exact x\n  rw [← h, add_zero]\n#align strict_convex.add_smul_mem strict_convex.add_smul_mem\n\n",
 "add_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem strict_convex.add_right (hs : strict_convex 𝕜 s) (z : E) : strict_convex 𝕜 («expr '' » (fun x => x + z) s) := by\n  simpa only [add_comm] using hs.add_left z\n#align strict_convex.add_right strict_convex.add_right\n\n",
 "add_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem strict_convex.add_left (hs : strict_convex 𝕜 s) (z : E) : strict_convex 𝕜 («expr '' » (fun x => z + x) s) := by\n  simpa only [singleton_add] using (strict_convex_singleton z).add hs\n#align strict_convex.add_left strict_convex.add_left\n\n",
 "add":
 "theorem strict_convex.add (hs : strict_convex 𝕜 s) (ht : strict_convex 𝕜 t) : strict_convex 𝕜 (s + t) :=\n  by\n  rintro _ ⟨v, w, hv, hw, rfl⟩ _ ⟨x, y, hx, hy, rfl⟩ h a b ha hb hab\n  rw [smul_add, smul_add, add_add_add_comm]\n  obtain rfl | hvx := eq_or_ne v x\n  · refine' interior_mono (add_subset_add (singleton_subset_iff.2 hv) subset.rfl) _\n    rw [Convex.combo_self hab, singleton_add]\n    exact\n      (is_open_map_add_left _).image_interior_subset _ (mem_image_of_mem _ <| ht hw hy (ne_of_apply_ne _ h) ha hb hab)\n  exact subset_interior_add_left (add_mem_add (hs hv hx hvx ha hb hab) <| ht.convex hw hy ha.le hb.le hab)\n#align strict_convex.add strict_convex.add\n\n"}