{"of_isLocalMin_of_convex_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print IsMinOn.of_isLocalMin_of_convex_univ /-\n/-- A local minimum of a convex function is a global minimum. -/\ntheorem IsMinOn.of_isLocalMin_of_convex_univ {f : E → β} {a : E} (h_local_min : IsLocalMin f a)\n    (h_conv : ConvexOn (exprℝ) univ f) : ∀ x, f a ≤ f x := fun x =>\n  (IsMinOn.of_isLocalMinOn_of_convexOn (mem_univ a) (h_local_min.on univ) h_conv) (mem_univ x)\n#align is_min_on.of_is_local_min_of_convex_univ IsMinOn.of_isLocalMin_of_convex_univ\n-/\n\n",
 "of_isLocalMinOn_of_convexOn_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print IsMinOn.of_isLocalMinOn_of_convexOn_Icc /-\n/-\nCopyright (c) 2020 Frédéric Dupuis. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Frédéric Dupuis\n-/\n/-- Helper lemma for the more general case: `is_min_on.of_is_local_min_on_of_convex_on`.\n-/\ntheorem IsMinOn.of_isLocalMinOn_of_convexOn_Icc {f : exprℝ → β} {a b : exprℝ} (a_lt_b : a < b)\n    (h_local_min : IsLocalMinOn f (Icc a b) a) (h_conv : ConvexOn (exprℝ) (Icc a b) f) : IsMinOn f (Icc a b) a :=\n  by\n  rintro c hc\n  dsimp only [mem_set_of_eq]\n  rw [IsLocalMinOn, nhdsWithin_Icc_eq_nhdsWithin_Ici a_lt_b] at h_local_min\n  rcases hc.1.eq_or_lt with (rfl | a_lt_c)\n  · exact le_rfl\n  have H₁ :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      (nhds_within.gt a) (f a ≤ f y) :=\n    h_local_min.filter_mono (nhdsWithin_mono _ Ioi_subset_Ici_self)\n  have H₂ :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      (nhds_within.gt a) (y ∈ Ioc a c) :=\n    Ioc_mem_nhdsWithin_Ioi (left_mem_Ico.2 a_lt_c)\n  rcases(H₁.and H₂).exists with ⟨y, hfy, hy_ac⟩\n  rcases(Convex.mem_Ioc a_lt_c).mp hy_ac with ⟨ya, yc, ya₀, yc₀, yac, rfl⟩\n  suffices : «expr • » ya (f a) + «expr • » yc (f a) ≤ «expr • » ya (f a) + «expr • » yc (f c)\n  exact (smul_le_smul_iff_of_pos yc₀).1 (le_of_add_le_add_left this)\n  calc\n    «expr • » ya (f a) + «expr • » yc (f a) = f a := by rw [← add_smul, yac, one_smul]\n    _ ≤ f (ya * a + yc * c) := hfy\n    _ ≤ «expr • » ya (f a) + «expr • » yc (f c) := h_conv.2 (left_mem_Icc.2 a_lt_b.le) hc ya₀ yc₀.le yac\n    \n#align is_min_on.of_is_local_min_on_of_convex_on_Icc IsMinOn.of_isLocalMinOn_of_convexOn_Icc\n-/\n\n",
 "of_isLocalMinOn_of_convexOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print IsMinOn.of_isLocalMinOn_of_convexOn /-\n/-- A local minimum of a convex function is a global minimum, restricted to a set `s`.\n-/\ntheorem IsMinOn.of_isLocalMinOn_of_convexOn {f : E → β} {a : E} (a_in_s : a ∈ s) (h_localmin : IsLocalMinOn f s a)\n    (h_conv : ConvexOn (exprℝ) s f) : IsMinOn f s a :=\n  by\n  intro x x_in_s\n  let g : «expr →ᵃ[ ] » (exprℝ) (exprℝ) E := AffineMap.lineMap a x\n  have hg0 : g 0 = a := AffineMap.lineMap_apply_zero a x\n  have hg1 : g 1 = x := AffineMap.lineMap_apply_one a x\n  have hgc : Continuous g := AffineMap.lineMap_continuous\n  have h_maps : maps_to g (Icc 0 1) s := by\n    simpa only [maps_to', ← segment_eq_image_lineMap] using h_conv.1.segment_subset a_in_s x_in_s\n  have fg_local_min_on : IsLocalMinOn (f ∘ g) (Icc 0 1) 0 :=\n    by\n    rw [← hg0] at h_localmin\n    exact h_localmin.comp_continuous_on h_maps hgc.continuous_on (left_mem_Icc.2 zero_le_one)\n  have fg_min_on : IsMinOn (f ∘ g) (Icc 0 1 : Set (exprℝ)) 0 :=\n    by\n    refine' IsMinOn.of_isLocalMinOn_of_convexOn_Icc one_pos fg_local_min_on _\n    exact (h_conv.comp_affine_map g).subset h_maps (convex_Icc 0 1)\n  simpa only [hg0, hg1, comp_app, mem_set_of_eq] using fg_min_on (right_mem_Icc.2 zero_le_one)\n#align is_min_on.of_is_local_min_on_of_convex_on IsMinOn.of_isLocalMinOn_of_convexOn\n-/\n\n",
 "of_isLocalMax_of_convex_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print IsMaxOn.of_isLocalMax_of_convex_univ /-\n/-- A local maximum of a concave function is a global maximum. -/\ntheorem IsMaxOn.of_isLocalMax_of_convex_univ {f : E → β} {a : E} (h_local_max : IsLocalMax f a)\n    (h_conc : ConcaveOn (exprℝ) univ f) : ∀ x, f x ≤ f a :=\n  @IsMinOn.of_isLocalMin_of_convex_univ _ («expr ᵒᵈ» β) _ _ _ _ _ _ _ _ f a h_local_max h_conc\n#align is_max_on.of_is_local_max_of_convex_univ IsMaxOn.of_isLocalMax_of_convex_univ\n-/\n\n",
 "of_isLocalMaxOn_of_concaveOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print IsMaxOn.of_isLocalMaxOn_of_concaveOn /-\n/-- A local maximum of a concave function is a global maximum, restricted to a set `s`. -/\ntheorem IsMaxOn.of_isLocalMaxOn_of_concaveOn {f : E → β} {a : E} (a_in_s : a ∈ s) (h_localmax : IsLocalMaxOn f s a)\n    (h_conc : ConcaveOn (exprℝ) s f) : IsMaxOn f s a :=\n  @IsMinOn.of_isLocalMinOn_of_convexOn _ («expr ᵒᵈ» β) _ _ _ _ _ _ _ _ s f a a_in_s h_localmax h_conc\n#align is_max_on.of_is_local_max_on_of_concave_on IsMaxOn.of_isLocalMaxOn_of_concaveOn\n-/\n\n"}