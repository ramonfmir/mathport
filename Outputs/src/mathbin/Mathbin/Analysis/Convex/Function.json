{"translate_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- Right translation preserves strict concavity. -/\ntheorem strict_concave_on.translate_right (hf : strict_concave_on 𝕜 s f) (c : E) :\n    strict_concave_on 𝕜 («expr ⁻¹' » (fun z => c + z) s) (f ∘ fun z => c + z) :=\n  hf.dual.translate_right _\n#align strict_concave_on.translate_right strict_concave_on.translate_right\n\n",
 "translate_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- Left translation preserves strict concavity. -/\ntheorem strict_concave_on.translate_left (hf : strict_concave_on 𝕜 s f) (c : E) :\n    strict_concave_on 𝕜 («expr ⁻¹' » (fun z => c + z) s) (f ∘ fun z => z + c) := by\n  simpa only [add_comm] using hf.translate_right _\n#align strict_concave_on.translate_left strict_concave_on.translate_left\n\n",
 "sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/-- The pointwise maximum of strictly convex functions is strictly convex. -/\ntheorem strict_convex_on.sup (hf : strict_convex_on 𝕜 s f) (hg : strict_convex_on 𝕜 s g) :\n    strict_convex_on 𝕜 s («expr ⊔ » f g) :=\n  ⟨hf.left, fun x hx y hy hxy a b ha hb hab =>\n    max_lt\n      (calc\n        f («expr • » a x + «expr • » b y) < «expr • » a (f x) + «expr • » b (f y) := hf.2 hx hy hxy ha hb hab\n        _ ≤ «expr • » a («expr ⊔ » (f x) (g x)) + «expr • » b («expr ⊔ » (f y) (g y)) :=\n          add_le_add (smul_le_smul_of_nonneg le_sup_left ha.le) (smul_le_smul_of_nonneg le_sup_left hb.le)\n        )\n      (calc\n        g («expr • » a x + «expr • » b y) < «expr • » a (g x) + «expr • » b (g y) := hg.2 hx hy hxy ha hb hab\n        _ ≤ «expr • » a («expr ⊔ » (f x) (g x)) + «expr • » b («expr ⊔ » (f y) (g y)) :=\n          add_le_add (smul_le_smul_of_nonneg le_sup_right ha.le) (smul_le_smul_of_nonneg le_sup_right hb.le)\n        )⟩\n#align strict_convex_on.sup strict_convex_on.sup\n\n",
 "subset":
 "theorem strict_concave_on.subset {t : set E} (hf : strict_concave_on 𝕜 t f) (hst : s ⊆ t) (hs : convex 𝕜 s) :\n    strict_concave_on 𝕜 s f :=\n  ⟨hs, fun x hx y hy => hf.2 (hst hx) (hst hy)⟩\n#align strict_concave_on.subset strict_concave_on.subset\n\n",
 "sub_strict_convex_on":
 "theorem concave_on.sub_strict_convex_on (hf : concave_on 𝕜 s f) (hg : strict_convex_on 𝕜 s g) :\n    strict_concave_on 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_strict_concave_on hg.neg\n#align concave_on.sub_strict_convex_on concave_on.sub_strict_convex_on\n\n",
 "sub_strict_concave_on":
 "theorem convex_on.sub_strict_concave_on (hf : convex_on 𝕜 s f) (hg : strict_concave_on 𝕜 s g) :\n    strict_convex_on 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_strict_convex_on hg.neg\n#align convex_on.sub_strict_concave_on convex_on.sub_strict_concave_on\n\n",
 "sub_convex_on":
 "theorem strict_concave_on.sub_convex_on (hf : strict_concave_on 𝕜 s f) (hg : convex_on 𝕜 s g) :\n    strict_concave_on 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_concave_on hg.neg\n#align strict_concave_on.sub_convex_on strict_concave_on.sub_convex_on\n\n",
 "sub_concave_on":
 "theorem strict_convex_on.sub_concave_on (hf : strict_convex_on 𝕜 s f) (hg : concave_on 𝕜 s g) :\n    strict_convex_on 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_convex_on hg.neg\n#align strict_convex_on.sub_concave_on strict_convex_on.sub_concave_on\n\n",
 "sub":
 "theorem strict_concave_on.sub (hf : strict_concave_on 𝕜 s f) (hg : strict_convex_on 𝕜 s g) :\n    strict_concave_on 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add hg.neg\n#align strict_concave_on.sub strict_concave_on.sub\n\n",
 "strict_convex_on_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is strictly convex, it suffices\nto verify the inequality `f (a • x + b • y) < a • f x + b • f y` for `x < y` and positive `a`, `b`.\nThe main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order. -/\ntheorem linear_order.strict_convex_on_of_lt (hs : convex 𝕜 s)\n    (hf :\n      ∀ ⦃x⦄,\n        x ∈ s →\n          ∀ ⦃y⦄,\n            y ∈ s →\n              x < y →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → f («expr • » a x + «expr • » b y) < «expr • » a (f x) + «expr • » b (f y)) :\n    strict_convex_on 𝕜 s f := by\n  refine' ⟨hs, fun x hx y hy hxy a b ha hb hab => _⟩\n  wlog h : x ≤ y using x y a b, y x b a\n  · exact le_total _ _\n  exact hf hx hy (h.lt_of_ne hxy) ha hb hab\n#align linear_order.strict_convex_on_of_lt linear_order.strict_convex_on_of_lt\n\n",
 "strict_convex_on_iff_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_convex_on_iff_div {f : E → β} :\n    strict_convex_on 𝕜 s f ↔\n      convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                x ≠ y →\n                  ∀ ⦃a b : 𝕜⦄,\n                    0 < a →\n                      0 < b →\n                        f («expr • » (a / (a + b)) x + «expr • » (b / (a + b)) y) <\n                          «expr • » (a / (a + b)) (f x) + «expr • » (b / (a + b)) (f y) :=\n  and_congr iff.rfl\n    ⟨by\n      intro h x hx y hy hxy a b ha hb\n      have hab := add_pos ha hb\n      apply h hx hy hxy (div_pos ha hab) (div_pos hb hab)\n      rw [← add_div, div_self hab.ne'], by\n      intro h x hx y hy hxy a b ha hb hab\n      simpa [hab, zero_lt_one] using h hx hy hxy ha hb⟩\n#align strict_convex_on_iff_div strict_convex_on_iff_div\n\n",
 "strict_concave_on_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is strictly concave it suffices\nto verify the inequality `a • f x + b • f y < f (a • x + b • y)` for `x < y` and positive `a`, `b`.\nThe main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order. -/\ntheorem linear_order.strict_concave_on_of_lt (hs : convex 𝕜 s)\n    (hf :\n      ∀ ⦃x⦄,\n        x ∈ s →\n          ∀ ⦃y⦄,\n            y ∈ s →\n              x < y →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → «expr • » a (f x) + «expr • » b (f y) < f («expr • » a x + «expr • » b y)) :\n    strict_concave_on 𝕜 s f :=\n  @linear_order.strict_convex_on_of_lt _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ _ _ hs hf\n#align linear_order.strict_concave_on_of_lt linear_order.strict_concave_on_of_lt\n\n",
 "strict_concave_on_iff_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_concave_on_iff_div {f : E → β} :\n    strict_concave_on 𝕜 s f ↔\n      convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                x ≠ y →\n                  ∀ ⦃a b : 𝕜⦄,\n                    0 < a →\n                      0 < b →\n                        «expr • » (a / (a + b)) (f x) + «expr • » (b / (a + b)) (f y) <\n                          f («expr • » (a / (a + b)) x + «expr • » (b / (a + b)) y) :=\n  @strict_convex_on_iff_div _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ _\n#align strict_concave_on_iff_div strict_concave_on_iff_div\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem concave_on.smul {c : 𝕜} (hc : 0 ≤ c) (hf : concave_on 𝕜 s f) : concave_on 𝕜 s fun x => «expr • » c (f x) :=\n  hf.dual.smul hc\n#align concave_on.smul concave_on.smul\n\n",
 "right_le_of_le_left''":
 "theorem concave_on.right_le_of_le_left'' (hf : concave_on 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x < y) (hyz : y ≤ z)\n    (h : f y ≤ f x) : f z ≤ f y :=\n  hf.dual.le_right_of_left_le'' hx hz hxy hyz h\n#align concave_on.right_le_of_le_left'' concave_on.right_le_of_le_left''\n\n",
 "right_le_of_le_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem concave_on.right_le_of_le_left' (hf : concave_on 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s) (hy : y ∈ s)\n    (ha : 0 ≤ a) (hb : 0 < b) (hab : a + b = 1) (hfx : f («expr • » a x + «expr • » b y) ≤ f x) :\n    f y ≤ f («expr • » a x + «expr • » b y) :=\n  hf.dual.le_right_of_left_le' hx hy ha hb hab hfx\n#align concave_on.right_le_of_le_left' concave_on.right_le_of_le_left'\n\n",
 "right_le_of_le_left":
 "theorem concave_on.right_le_of_le_left (hf : concave_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ open_segment 𝕜 x y) (hxz : f z ≤ f x) : f y ≤ f z :=\n  hf.dual.le_right_of_left_le hx hy hz hxz\n#align concave_on.right_le_of_le_left concave_on.right_le_of_le_left\n\n",
 "open_segment_subset_strict_hypograph":
 "theorem concave_on.open_segment_subset_strict_hypograph (hf : concave_on 𝕜 s f) (p q : E × β)\n    (hp : p.1 ∈ s ∧ p.2 < f p.1) (hq : q.1 ∈ s ∧ q.2 ≤ f q.1) :\n    open_segment 𝕜 p q ⊆ { p : E × β | p.1 ∈ s ∧ p.2 < f p.1 } :=\n  hf.dual.open_segment_subset_strict_epigraph p q hp hq\n#align concave_on.open_segment_subset_strict_hypograph concave_on.open_segment_subset_strict_hypograph\n\n",
 "open_segment_subset_strict_epigraph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem convex_on.open_segment_subset_strict_epigraph (hf : convex_on 𝕜 s f) (p q : E × β) (hp : p.1 ∈ s ∧ f p.1 < p.2)\n    (hq : q.1 ∈ s ∧ f q.1 ≤ q.2) : open_segment 𝕜 p q ⊆ { p : E × β | p.1 ∈ s ∧ f p.1 < p.2 } :=\n  by\n  rintro _ ⟨a, b, ha, hb, hab, rfl⟩\n  refine' ⟨hf.1 hp.1 hq.1 ha.le hb.le hab, _⟩\n  calc\n    f («expr • » a p.1 + «expr • » b q.1) ≤ «expr • » a (f p.1) + «expr • » b (f q.1) := hf.2 hp.1 hq.1 ha.le hb.le hab\n    _ < «expr • » a p.2 + «expr • » b q.2 :=\n      add_lt_add_of_lt_of_le (smul_lt_smul_of_pos hp.2 ha) (smul_le_smul_of_nonneg hq.2 hb.le)\n    \n#align convex_on.open_segment_subset_strict_epigraph convex_on.open_segment_subset_strict_epigraph\n\n",
 "neg_strict_convex_on_iff":
 "/-- A function `-f` is strictly convex iff `f` is strictly concave. -/\n@[simp]\ntheorem neg_strict_convex_on_iff : strict_convex_on 𝕜 s (-f) ↔ strict_concave_on 𝕜 s f :=\n  by\n  constructor\n  · rintro ⟨hconv, h⟩\n    refine' ⟨hconv, fun x hx y hy hxy a b ha hb hab => _⟩\n    simp [neg_apply, neg_lt, add_comm] at h\n    exact h hx hy hxy ha hb hab\n  · rintro ⟨hconv, h⟩\n    refine' ⟨hconv, fun x hx y hy hxy a b ha hb hab => _⟩\n    rw [← neg_lt_neg_iff]\n    simp_rw [neg_add, pi.neg_apply, smul_neg, neg_neg]\n    exact h hx hy hxy ha hb hab\n#align neg_strict_convex_on_iff neg_strict_convex_on_iff\n\n",
 "neg_strict_concave_on_iff":
 "/-- A function `-f` is strictly concave iff `f` is strictly convex. -/\n@[simp]\ntheorem neg_strict_concave_on_iff : strict_concave_on 𝕜 s (-f) ↔ strict_convex_on 𝕜 s f := by\n  rw [← neg_strict_convex_on_iff, neg_neg f]\n#align neg_strict_concave_on_iff neg_strict_concave_on_iff\n\n",
 "neg_convex_on_iff":
 "/-- A function `-f` is convex iff `f` is concave. -/\n@[simp]\ntheorem neg_convex_on_iff : convex_on 𝕜 s (-f) ↔ concave_on 𝕜 s f :=\n  by\n  constructor\n  · rintro ⟨hconv, h⟩\n    refine' ⟨hconv, fun x hx y hy a b ha hb hab => _⟩\n    simp [neg_apply, neg_le, add_comm] at h\n    exact h hx hy ha hb hab\n  · rintro ⟨hconv, h⟩\n    refine' ⟨hconv, fun x hx y hy a b ha hb hab => _⟩\n    rw [← neg_le_neg_iff]\n    simp_rw [neg_add, pi.neg_apply, smul_neg, neg_neg]\n    exact h hx hy ha hb hab\n#align neg_convex_on_iff neg_convex_on_iff\n\n",
 "neg_concave_on_iff":
 "/-- A function `-f` is concave iff `f` is convex. -/\n@[simp]\ntheorem neg_concave_on_iff : concave_on 𝕜 s (-f) ↔ convex_on 𝕜 s f := by rw [← neg_convex_on_iff, neg_neg f]\n#align neg_concave_on_iff neg_concave_on_iff\n\n",
 "lt_right_of_left_lt'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_concave_on.lt_right_of_left_lt' (hf : strict_concave_on 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s)\n    (hy : y ∈ s) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) (hfx : f («expr • » a x + «expr • » b y) < f x) :\n    f y < f («expr • » a x + «expr • » b y) :=\n  hf.dual.lt_right_of_left_lt' hx hy ha hb hab hfx\n#align strict_concave_on.lt_right_of_left_lt' strict_concave_on.lt_right_of_left_lt'\n\n",
 "lt_right_of_left_lt":
 "theorem strict_concave_on.lt_right_of_left_lt (hf : strict_concave_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ open_segment 𝕜 x y) (hxz : f z < f x) : f y < f z :=\n  hf.dual.lt_right_of_left_lt hx hy hz hxz\n#align strict_concave_on.lt_right_of_left_lt strict_concave_on.lt_right_of_left_lt\n\n",
 "lt_on_open_segment'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- A strictly concave function on an open segment is strictly lower-bounded by the min of its\nendpoints. -/\ntheorem strict_concave_on.lt_on_open_segment' (hf : strict_concave_on 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hxy : x ≠ y) {a b : 𝕜} (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) :\n    min (f x) (f y) < f («expr • » a x + «expr • » b y) :=\n  hf.dual.lt_on_open_segment' hx hy hxy ha hb hab\n#align strict_concave_on.lt_on_open_segment' strict_concave_on.lt_on_open_segment'\n\n",
 "lt_on_open_segment":
 "/-- A strictly concave function on an open segment is strictly lower-bounded by the min of its\nendpoints. -/\ntheorem strict_concave_on.lt_on_open_segment (hf : strict_concave_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hxy : x ≠ y) (hz : z ∈ open_segment 𝕜 x y) : min (f x) (f y) < f z :=\n  hf.dual.lt_on_open_segment hx hy hxy hz\n#align strict_concave_on.lt_on_open_segment strict_concave_on.lt_on_open_segment\n\n",
 "lt_left_of_right_lt'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- The following lemmas don't require `module 𝕜 E` if you add the hypothesis `x ≠ y`. At the time of\nthe writing, we decided the resulting lemmas wouldn't be useful. Feel free to reintroduce them. -/\ntheorem strict_convex_on.lt_left_of_right_lt' (hf : strict_convex_on 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s)\n    {a b : 𝕜} (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) (hfy : f y < f («expr • » a x + «expr • » b y)) :\n    f («expr • » a x + «expr • » b y) < f x :=\n  not_le.1 fun h =>\n    lt_irrefl (f («expr • » a x + «expr • » b y)) <|\n      calc\n        f («expr • » a x + «expr • » b y) < «expr • » a (f x) + «expr • » b (f y) :=\n          hf.2 hx hy\n            (by\n              rintro rfl\n              rw [Convex.combo_self hab] at hfy\n              exact lt_irrefl _ hfy)\n            ha hb hab\n        _ < «expr • » a (f («expr • » a x + «expr • » b y)) + «expr • » b (f («expr • » a x + «expr • » b y)) :=\n          add_lt_add_of_le_of_lt (smul_le_smul_of_nonneg h ha.le) (smul_lt_smul_of_pos hfy hb)\n        _ = f («expr • » a x + «expr • » b y) := Convex.combo_self hab _\n        \n#align strict_convex_on.lt_left_of_right_lt' strict_convex_on.lt_left_of_right_lt'\n\n",
 "lt_left_of_right_lt":
 "theorem strict_convex_on.lt_left_of_right_lt (hf : strict_convex_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ open_segment 𝕜 x y) (hyz : f y < f z) : f z < f x :=\n  by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.lt_left_of_right_lt' hx hy ha hb hab hyz\n#align strict_convex_on.lt_left_of_right_lt strict_convex_on.lt_left_of_right_lt\n\n",
 "left_lt_of_lt_right'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_concave_on.left_lt_of_lt_right' (hf : strict_concave_on 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s)\n    {a b : 𝕜} (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) (hfy : f («expr • » a x + «expr • » b y) < f y) :\n    f x < f («expr • » a x + «expr • » b y) :=\n  hf.dual.lt_left_of_right_lt' hx hy ha hb hab hfy\n#align strict_concave_on.left_lt_of_lt_right' strict_concave_on.left_lt_of_lt_right'\n\n",
 "left_lt_of_lt_right":
 "theorem strict_concave_on.left_lt_of_lt_right (hf : strict_concave_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ open_segment 𝕜 x y) (hyz : f z < f y) : f x < f z :=\n  hf.dual.lt_left_of_right_lt hx hy hz hyz\n#align strict_concave_on.left_lt_of_lt_right strict_concave_on.left_lt_of_lt_right\n\n",
 "left_le_of_le_right''":
 "theorem concave_on.left_le_of_le_right'' (hf : concave_on 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x ≤ y) (hyz : y < z)\n    (h : f y ≤ f z) : f x ≤ f y :=\n  hf.dual.le_left_of_right_le'' hx hz hxy hyz h\n#align concave_on.left_le_of_le_right'' concave_on.left_le_of_le_right''\n\n",
 "left_le_of_le_right'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem concave_on.left_le_of_le_right' (hf : concave_on 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜}\n    (ha : 0 < a) (hb : 0 ≤ b) (hab : a + b = 1) (hfy : f («expr • » a x + «expr • » b y) ≤ f y) :\n    f x ≤ f («expr • » a x + «expr • » b y) :=\n  hf.dual.le_left_of_right_le' hx hy ha hb hab hfy\n#align concave_on.left_le_of_le_right' concave_on.left_le_of_le_right'\n\n",
 "left_le_of_le_right":
 "theorem concave_on.left_le_of_le_right (hf : concave_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ open_segment 𝕜 x y) (hyz : f z ≤ f y) : f x ≤ f z :=\n  hf.dual.le_left_of_right_le hx hy hz hyz\n#align concave_on.left_le_of_le_right concave_on.left_le_of_le_right\n\n",
 "le_right_of_left_le''":
 "theorem convex_on.le_right_of_left_le'' (hf : convex_on 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x < y) (hyz : y ≤ z)\n    (h : f x ≤ f y) : f y ≤ f z :=\n  hyz.eq_or_lt.elim (fun hyz => (congr_arg f hyz).le) fun hyz =>\n    hf.le_right_of_left_le hx hz (Ioo_subset_open_segment ⟨hxy, hyz⟩) h\n#align convex_on.le_right_of_left_le'' convex_on.le_right_of_left_le''\n\n",
 "le_right_of_left_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem convex_on.le_right_of_left_le' (hf : convex_on 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s) (hy : y ∈ s) (ha : 0 ≤ a)\n    (hb : 0 < b) (hab : a + b = 1) (hfx : f x ≤ f («expr • » a x + «expr • » b y)) :\n    f («expr • » a x + «expr • » b y) ≤ f y := by\n  rw [add_comm] at hab hfx⊢\n  exact hf.le_left_of_right_le' hy hx hb ha hab hfx\n#align convex_on.le_right_of_left_le' convex_on.le_right_of_left_le'\n\n",
 "le_right_of_left_le":
 "theorem convex_on.le_right_of_left_le (hf : convex_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ open_segment 𝕜 x y) (hxz : f x ≤ f z) : f z ≤ f y :=\n  by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.le_right_of_left_le' hx hy ha.le hb hab hxz\n#align convex_on.le_right_of_left_le convex_on.le_right_of_left_le\n\n",
 "le_on_segment'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- A convex function on a segment is upper-bounded by the max of its endpoints. -/\ntheorem convex_on.le_on_segment' (hf : convex_on 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜} (ha : 0 ≤ a)\n    (hb : 0 ≤ b) (hab : a + b = 1) : f («expr • » a x + «expr • » b y) ≤ max (f x) (f y) :=\n  calc\n    f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx hy ha hb hab\n    _ ≤ «expr • » a (max (f x) (f y)) + «expr • » b (max (f x) (f y)) :=\n      add_le_add (smul_le_smul_of_nonneg (le_max_left _ _) ha) (smul_le_smul_of_nonneg (le_max_right _ _) hb)\n    _ = max (f x) (f y) := Convex.combo_self hab _\n    \n#align convex_on.le_on_segment' convex_on.le_on_segment'\n\n",
 "le_on_segment":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `segment -/\n/-- A convex function on a segment is upper-bounded by the max of its endpoints. -/\ntheorem convex_on.le_on_segment (hf : convex_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s) (hz : z ∈ segment x 𝕜 y) :\n    f z ≤ max (f x) (f y) :=\n  let ⟨a, b, ha, hb, hab, hz⟩ := hz\n  hz ▸ hf.le_on_segment' hx hy ha hb hab\n#align convex_on.le_on_segment convex_on.le_on_segment\n\n",
 "le_left_of_right_le''":
 "theorem convex_on.le_left_of_right_le'' (hf : convex_on 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x ≤ y) (hyz : y < z)\n    (h : f z ≤ f y) : f y ≤ f x :=\n  hxy.eq_or_lt.elim (fun hxy => (congr_arg f hxy).ge) fun hxy =>\n    hf.le_left_of_right_le hx hz (Ioo_subset_open_segment ⟨hxy, hyz⟩) h\n#align convex_on.le_left_of_right_le'' convex_on.le_left_of_right_le''\n\n",
 "le_left_of_right_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem convex_on.le_left_of_right_le' (hf : convex_on 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜} (ha : 0 < a)\n    (hb : 0 ≤ b) (hab : a + b = 1) (hfy : f y ≤ f («expr • » a x + «expr • » b y)) :\n    f («expr • » a x + «expr • » b y) ≤ f x :=\n  le_of_not_lt fun h =>\n    lt_irrefl (f («expr • » a x + «expr • » b y)) <|\n      calc\n        f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx hy ha.le hb hab\n        _ < «expr • » a (f («expr • » a x + «expr • » b y)) + «expr • » b (f («expr • » a x + «expr • » b y)) :=\n          add_lt_add_of_lt_of_le (smul_lt_smul_of_pos h ha) (smul_le_smul_of_nonneg hfy hb)\n        _ = f («expr • » a x + «expr • » b y) := Convex.combo_self hab _\n        \n#align convex_on.le_left_of_right_le' convex_on.le_left_of_right_le'\n\n",
 "le_left_of_right_le":
 "theorem convex_on.le_left_of_right_le (hf : convex_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ open_segment 𝕜 x y) (hyz : f y ≤ f z) : f z ≤ f x :=\n  by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.le_left_of_right_le' hx hy ha hb.le hab hyz\n#align convex_on.le_left_of_right_le convex_on.le_left_of_right_le\n\n",
 "inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/-- The pointwise minimum of strictly concave functions is strictly concave. -/\ntheorem strict_concave_on.inf (hf : strict_concave_on 𝕜 s f) (hg : strict_concave_on 𝕜 s g) :\n    strict_concave_on 𝕜 s («expr ⊓ » f g) :=\n  hf.dual.sup hg\n#align strict_concave_on.inf strict_concave_on.inf\n\n",
 "ge_on_segment'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- A concave function on a segment is lower-bounded by the min of its endpoints. -/\ntheorem concave_on.ge_on_segment' (hf : concave_on 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜} (ha : 0 ≤ a)\n    (hb : 0 ≤ b) (hab : a + b = 1) : min (f x) (f y) ≤ f («expr • » a x + «expr • » b y) :=\n  hf.dual.le_on_segment' hx hy ha hb hab\n#align concave_on.ge_on_segment' concave_on.ge_on_segment'\n\n",
 "ge_on_segment":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `segment -/\n/-- A concave function on a segment is lower-bounded by the min of its endpoints. -/\ntheorem concave_on.ge_on_segment (hf : concave_on 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ segment x 𝕜 y) : min (f x) (f y) ≤ f z :=\n  hf.dual.le_on_segment hx hy hz\n#align concave_on.ge_on_segment concave_on.ge_on_segment\n\n",
 "dual":
 "theorem strict_concave_on.dual (hf : strict_concave_on 𝕜 s f) : strict_convex_on 𝕜 s (to_dual ∘ f) :=\n  hf\n#align strict_concave_on.dual strict_concave_on.dual\n\n",
 "convex_strict_hypograph":
 "theorem concave_on.convex_strict_hypograph (hf : concave_on 𝕜 s f) : convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 < f p.1 } :=\n  hf.dual.convex_strict_epigraph\n#align concave_on.convex_strict_hypograph concave_on.convex_strict_hypograph\n\n",
 "convex_strict_epigraph":
 "theorem convex_on.convex_strict_epigraph (hf : convex_on 𝕜 s f) : convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 < p.2 } :=\n  convex_iff_open_segment_subset.mpr fun p hp q hq => hf.open_segment_subset_strict_epigraph p q hp ⟨hq.1, hq.2.le⟩\n#align convex_on.convex_strict_epigraph convex_on.convex_strict_epigraph\n\n",
 "convex_on_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is convex, it suffices to\nverify the inequality `f (a • x + b • y) ≤ a • f x + b • f y` only for `x < y` and positive `a`,\n`b`. The main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order.\n-/\ntheorem linear_order.convex_on_of_lt (hs : convex 𝕜 s)\n    (hf :\n      ∀ ⦃x⦄,\n        x ∈ s →\n          ∀ ⦃y⦄,\n            y ∈ s →\n              x < y →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y)) :\n    convex_on 𝕜 s f :=\n  by\n  refine' convex_on_iff_pairwise_pos.2 ⟨hs, fun x hx y hy hxy a b ha hb hab => _⟩\n  wlog h : x ≤ y using x y a b, y x b a\n  · exact le_total _ _\n  exact hf hx hy (h.lt_of_ne hxy) ha hb hab\n#align linear_order.convex_on_of_lt linear_order.convex_on_of_lt\n\n",
 "convex_on_of_convex_epigraph":
 "theorem convex_on_of_convex_epigraph (h : convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2 }) : convex_on 𝕜 s f :=\n  ⟨fun x hx y hy a b ha hb hab => (@h (x, f x) ⟨hx, le_rfl⟩ (y, f y) ⟨hy, le_rfl⟩ a b ha hb hab).1,\n    fun x hx y hy a b ha hb hab => (@h (x, f x) ⟨hx, le_rfl⟩ (y, f y) ⟨hy, le_rfl⟩ a b ha hb hab).2⟩\n#align convex_on_of_convex_epigraph convex_on_of_convex_epigraph\n\n",
 "convex_on_iff_pairwise_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem convex_on_iff_pairwise_pos {s : set E} {f : E → β} :\n    convex_on 𝕜 s f ↔\n      convex 𝕜 s ∧\n        s.pairwise fun x y =>\n          ∀ ⦃a b : 𝕜⦄,\n            0 < a → 0 < b → a + b = 1 → f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) :=\n  by\n  rw [convex_on_iff_forall_pos]\n  refine' and_congr_right' ⟨fun h x hx y hy _ a b ha hb hab => h hx hy ha hb hab, fun h x hx y hy a b ha hb hab => _⟩\n  obtain rfl | hxy := eq_or_ne x y\n  · rw [Convex.combo_self hab, Convex.combo_self hab]\n  exact h hx hy hxy ha hb hab\n#align convex_on_iff_pairwise_pos convex_on_iff_pairwise_pos\n\n",
 "convex_on_iff_forall_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem convex_on_iff_forall_pos {s : set E} {f : E → β} :\n    convex_on 𝕜 s f ↔\n      convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) :=\n  by\n  refine'\n    and_congr_right' ⟨fun h x hx y hy a b ha hb hab => h hx hy ha.le hb.le hab, fun h x hx y hy a b ha hb hab => _⟩\n  obtain rfl | ha' := ha.eq_or_lt\n  · rw [zero_add] at hab\n    subst b\n    simp_rw [zero_smul, zero_add, one_smul]\n  obtain rfl | hb' := hb.eq_or_lt\n  · rw [add_zero] at hab\n    subst a\n    simp_rw [zero_smul, add_zero, one_smul]\n  exact h hx hy ha' hb' hab\n#align convex_on_iff_forall_pos convex_on_iff_forall_pos\n\n",
 "convex_on_iff_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem convex_on_iff_div {f : E → β} :\n    convex_on 𝕜 s f ↔\n      convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 ≤ a →\n                    0 ≤ b →\n                      0 < a + b →\n                        f («expr • » (a / (a + b)) x + «expr • » (b / (a + b)) y) ≤\n                          «expr • » (a / (a + b)) (f x) + «expr • » (b / (a + b)) (f y) :=\n  and_congr iff.rfl\n    ⟨by\n      intro h x hx y hy a b ha hb hab\n      apply h hx hy (div_nonneg ha hab.le) (div_nonneg hb hab.le)\n      rw [← add_div, div_self hab.ne'], by\n      intro h x hx y hy a b ha hb hab\n      simpa [hab, zero_lt_one] using h hx hy ha hb⟩\n#align convex_on_iff_div convex_on_iff_div\n\n",
 "convex_on_iff_convex_epigraph":
 "theorem convex_on_iff_convex_epigraph : convex_on 𝕜 s f ↔ convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2 } :=\n  ⟨convex_on.convex_epigraph, convex_on_of_convex_epigraph⟩\n#align convex_on_iff_convex_epigraph convex_on_iff_convex_epigraph\n\n",
 "convex_on_id":
 "theorem convex_on_id {s : set β} (hs : convex 𝕜 s) : convex_on 𝕜 s id :=\n  ⟨hs, by\n    intros\n    rfl⟩\n#align convex_on_id convex_on_id\n\n",
 "convex_on_const":
 "theorem convex_on_const (c : β) (hs : convex 𝕜 s) : convex_on 𝕜 s fun x : E => c :=\n  ⟨hs, fun x y _ _ a b _ _ hab => (Convex.combo_self hab c).ge⟩\n#align convex_on_const convex_on_const\n\n",
 "convex_on":
 "theorem strict_convex_on.convex_on {s : set E} {f : E → β} (hf : strict_convex_on 𝕜 s f) : convex_on 𝕜 s f :=\n  convex_on_iff_pairwise_pos.mpr ⟨hf.1, fun x hx y hy hxy a b ha hb hab => (hf.2 hx hy hxy ha hb hab).le⟩\n#align strict_convex_on.convex_on strict_convex_on.convex_on\n\n",
 "convex_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem convex_on.convex_lt (hf : convex_on 𝕜 s f) (r : β) : convex 𝕜 ({ x ∈ s | f x < r }) :=\n  convex_iff_forall_pos.2 fun x hx y hy a b ha hb hab =>\n    ⟨hf.1 hx.1 hy.1 ha.le hb.le hab,\n      calc\n        f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx.1 hy.1 ha.le hb.le hab\n        _ < «expr • » a r + «expr • » b r :=\n          add_lt_add_of_lt_of_le (smul_lt_smul_of_pos hx.2 ha) (smul_le_smul_of_nonneg hy.2.le hb.le)\n        _ = r := Convex.combo_self hab _\n        ⟩\n#align convex_on.convex_lt convex_on.convex_lt\n\n",
 "convex_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem convex_on.convex_le (hf : convex_on 𝕜 s f) (r : β) : convex 𝕜 ({ x ∈ s | f x ≤ r }) :=\n  fun x hx y hy a b ha hb hab =>\n  ⟨hf.1 hx.1 hy.1 ha hb hab,\n    calc\n      f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx.1 hy.1 ha hb hab\n      _ ≤ «expr • » a r + «expr • » b r := add_le_add (smul_le_smul_of_nonneg hx.2 ha) (smul_le_smul_of_nonneg hy.2 hb)\n      _ = r := Convex.combo_self hab r\n      ⟩\n#align convex_on.convex_le convex_on.convex_le\n\n",
 "convex_hypograph":
 "theorem concave_on.convex_hypograph (hf : concave_on 𝕜 s f) : convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 ≤ f p.1 } :=\n  hf.dual.convex_epigraph\n#align concave_on.convex_hypograph concave_on.convex_hypograph\n\n",
 "convex_gt":
 "theorem concave_on.convex_gt (hf : concave_on 𝕜 s f) (r : β) : convex 𝕜 ({ x ∈ s | r < f x }) :=\n  hf.dual.convex_lt r\n#align concave_on.convex_gt concave_on.convex_gt\n\n",
 "convex_ge":
 "theorem concave_on.convex_ge (hf : concave_on 𝕜 s f) (r : β) : convex 𝕜 ({ x ∈ s | r ≤ f x }) :=\n  hf.dual.convex_le r\n#align concave_on.convex_ge concave_on.convex_ge\n\n",
 "convex_epigraph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem convex_on.convex_epigraph (hf : convex_on 𝕜 s f) : convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2 } :=\n  by\n  rintro ⟨x, r⟩ ⟨hx, hr⟩ ⟨y, t⟩ ⟨hy, ht⟩ a b ha hb hab\n  refine' ⟨hf.1 hx hy ha hb hab, _⟩\n  calc\n    f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx hy ha hb hab\n    _ ≤ «expr • » a r + «expr • » b t := add_le_add (smul_le_smul_of_nonneg hr ha) (smul_le_smul_of_nonneg ht hb)\n    \n#align convex_on.convex_epigraph convex_on.convex_epigraph\n\n",
 "concave_on_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is concave it suffices to\nverify the inequality `a • f x + b • f y ≤ f (a • x + b • y)` for `x < y` and positive `a`, `b`. The\nmain use case is `E = ℝ` however one can apply it, e.g., to `ℝ^n` with lexicographic order. -/\ntheorem linear_order.concave_on_of_lt (hs : convex 𝕜 s)\n    (hf :\n      ∀ ⦃x⦄,\n        x ∈ s →\n          ∀ ⦃y⦄,\n            y ∈ s →\n              x < y →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → «expr • » a (f x) + «expr • » b (f y) ≤ f («expr • » a x + «expr • » b y)) :\n    concave_on 𝕜 s f :=\n  @linear_order.convex_on_of_lt _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ s f hs hf\n#align linear_order.concave_on_of_lt linear_order.concave_on_of_lt\n\n",
 "concave_on_of_convex_hypograph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\ntheorem concave_on_of_convex_hypograph (h : convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 ≤ f p.1 }) : concave_on 𝕜 s f :=\n  @convex_on_of_convex_epigraph 𝕜 E («expr ᵒᵈ» β) _ _ _ _ _ _ _ h\n#align concave_on_of_convex_hypograph concave_on_of_convex_hypograph\n\n",
 "concave_on_iff_pairwise_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem concave_on_iff_pairwise_pos {s : set E} {f : E → β} :\n    concave_on 𝕜 s f ↔\n      convex 𝕜 s ∧\n        s.pairwise fun x y =>\n          ∀ ⦃a b : 𝕜⦄,\n            0 < a → 0 < b → a + b = 1 → «expr • » a (f x) + «expr • » b (f y) ≤ f («expr • » a x + «expr • » b y) :=\n  @convex_on_iff_pairwise_pos 𝕜 E («expr ᵒᵈ» β) _ _ _ _ _ _ _\n#align concave_on_iff_pairwise_pos concave_on_iff_pairwise_pos\n\n",
 "concave_on_iff_forall_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem concave_on_iff_forall_pos {s : set E} {f : E → β} :\n    concave_on 𝕜 s f ↔\n      convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → «expr • » a (f x) + «expr • » b (f y) ≤ f («expr • » a x + «expr • » b y) :=\n  @convex_on_iff_forall_pos 𝕜 E («expr ᵒᵈ» β) _ _ _ _ _ _ _\n#align concave_on_iff_forall_pos concave_on_iff_forall_pos\n\n",
 "concave_on_iff_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem concave_on_iff_div {f : E → β} :\n    concave_on 𝕜 s f ↔\n      convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 ≤ a →\n                    0 ≤ b →\n                      0 < a + b →\n                        «expr • » (a / (a + b)) (f x) + «expr • » (b / (a + b)) (f y) ≤\n                          f («expr • » (a / (a + b)) x + «expr • » (b / (a + b)) y) :=\n  @convex_on_iff_div _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ _\n#align concave_on_iff_div concave_on_iff_div\n\n",
 "concave_on_iff_convex_hypograph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\ntheorem concave_on_iff_convex_hypograph : concave_on 𝕜 s f ↔ convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 ≤ f p.1 } :=\n  @convex_on_iff_convex_epigraph 𝕜 E («expr ᵒᵈ» β) _ _ _ _ _ _ _ f\n#align concave_on_iff_convex_hypograph concave_on_iff_convex_hypograph\n\n",
 "concave_on_id":
 "theorem concave_on_id {s : set β} (hs : convex 𝕜 s) : concave_on 𝕜 s id :=\n  ⟨hs, by\n    intros\n    rfl⟩\n#align concave_on_id concave_on_id\n\n",
 "concave_on_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\ntheorem concave_on_const (c : β) (hs : convex 𝕜 s) : concave_on 𝕜 s fun x : E => c :=\n  @convex_on_const _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ c hs\n#align concave_on_const concave_on_const\n\n",
 "concave_on":
 "theorem strict_concave_on.concave_on {s : set E} {f : E → β} (hf : strict_concave_on 𝕜 s f) : concave_on 𝕜 s f :=\n  hf.dual.convex_on\n#align strict_concave_on.concave_on strict_concave_on.concave_on\n\n",
 "comp_strict_convex_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem strict_concave_on.comp_strict_convex_on (hg : strict_concave_on 𝕜 («expr '' » f s) g)\n    (hf : strict_convex_on 𝕜 s f) (hg' : strict_anti_on g («expr '' » f s)) (hf' : s.inj_on f) :\n    strict_concave_on 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg' hf'\n#align strict_concave_on.comp_strict_convex_on strict_concave_on.comp_strict_convex_on\n\n",
 "comp_strict_concave_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem strict_convex_on.comp_strict_concave_on (hg : strict_convex_on 𝕜 («expr '' » f s) g)\n    (hf : strict_concave_on 𝕜 s f) (hg' : strict_anti_on g («expr '' » f s)) (hf' : s.inj_on f) :\n    strict_convex_on 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg' hf'\n#align strict_convex_on.comp_strict_concave_on strict_convex_on.comp_strict_concave_on\n\n",
 "comp_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- If `g` is concave on `s`, so is `(g ∘ f)` on `f ⁻¹' s` for a linear `f`. -/\ntheorem concave_on.comp_linear_map {f : F → β} {s : set F} (hf : concave_on 𝕜 s f) (g : «expr →ₗ[ ] » E 𝕜 F) :\n    concave_on 𝕜 («expr ⁻¹' » g s) (f ∘ g) :=\n  hf.dual.comp_linear_map g\n#align concave_on.comp_linear_map concave_on.comp_linear_map\n\n",
 "comp_convex_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem concave_on.comp_convex_on (hg : concave_on 𝕜 («expr '' » f s) g) (hf : convex_on 𝕜 s f)\n    (hg' : antitone_on g («expr '' » f s)) : concave_on 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg'\n#align concave_on.comp_convex_on concave_on.comp_convex_on\n\n",
 "comp_concave_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem convex_on.comp_concave_on (hg : convex_on 𝕜 («expr '' » f s) g) (hf : concave_on 𝕜 s f)\n    (hg' : antitone_on g («expr '' » f s)) : convex_on 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg'\n#align convex_on.comp_concave_on convex_on.comp_concave_on\n\n",
 "comp_affine_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- If a function is concave on `s`, it remains concave when precomposed by an affine map. -/\ntheorem concave_on.comp_affine_map {f : F → β} (g : «expr →ᵃ[ ] » E 𝕜 F) {s : set F} (hf : concave_on 𝕜 s f) :\n    concave_on 𝕜 («expr ⁻¹' » g s) (f ∘ g) :=\n  hf.dual.comp_affine_map g\n#align concave_on.comp_affine_map concave_on.comp_affine_map\n\n",
 "comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem strict_concave_on.comp (hg : strict_concave_on 𝕜 («expr '' » f s) g) (hf : strict_concave_on 𝕜 s f)\n    (hg' : strict_mono_on g («expr '' » f s)) (hf' : s.inj_on f) : strict_concave_on 𝕜 s (g ∘ f) :=\n  ⟨hf.1, fun x hx y hy hxy a b ha hb hab =>\n    (hg.2 (mem_image_of_mem f hx) (mem_image_of_mem f hy) (mt (hf' hx hy) hxy) ha hb hab).trans <|\n      hg' (hg.1 (mem_image_of_mem f hx) (mem_image_of_mem f hy) ha.le hb.le hab)\n          (mem_image_of_mem f <| hf.1 hx hy ha.le hb.le hab) <|\n        hf.2 hx hy hxy ha hb hab⟩\n#align strict_concave_on.comp strict_concave_on.comp\n\n",
 "add_strict_convex_on":
 "theorem convex_on.add_strict_convex_on (hf : convex_on 𝕜 s f) (hg : strict_convex_on 𝕜 s g) :\n    strict_convex_on 𝕜 s (f + g) :=\n  add_comm g f ▸ hg.add_convex_on hf\n#align convex_on.add_strict_convex_on convex_on.add_strict_convex_on\n\n",
 "add_strict_concave_on":
 "theorem concave_on.add_strict_concave_on (hf : concave_on 𝕜 s f) (hg : strict_concave_on 𝕜 s g) :\n    strict_concave_on 𝕜 s (f + g) :=\n  hf.dual.add_strict_convex_on hg.dual\n#align concave_on.add_strict_concave_on concave_on.add_strict_concave_on\n\n",
 "add_convex_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem strict_convex_on.add_convex_on (hf : strict_convex_on 𝕜 s f) (hg : convex_on 𝕜 s g) :\n    strict_convex_on 𝕜 s (f + g) :=\n  ⟨hf.1, fun x hx y hy hxy a b ha hb hab =>\n    calc\n      f («expr • » a x + «expr • » b y) + g («expr • » a x + «expr • » b y) <\n          «expr • » a (f x) + «expr • » b (f y) + («expr • » a (g x) + «expr • » b (g y)) :=\n        add_lt_add_of_lt_of_le (hf.2 hx hy hxy ha hb hab) (hg.2 hx hy ha.le hb.le hab)\n      _ = «expr • » a (f x + g x) + «expr • » b (f y + g y) := by rw [smul_add, smul_add, add_add_add_comm]\n      ⟩\n#align strict_convex_on.add_convex_on strict_convex_on.add_convex_on\n\n",
 "add_concave_on":
 "theorem strict_concave_on.add_concave_on (hf : strict_concave_on 𝕜 s f) (hg : concave_on 𝕜 s g) :\n    strict_concave_on 𝕜 s (f + g) :=\n  hf.dual.add_convex_on hg.dual\n#align strict_concave_on.add_concave_on strict_concave_on.add_concave_on\n\n",
 "add":
 "theorem strict_concave_on.add (hf : strict_concave_on 𝕜 s f) (hg : strict_concave_on 𝕜 s g) :\n    strict_concave_on 𝕜 s (f + g) :=\n  hf.dual.add hg\n#align strict_concave_on.add strict_concave_on.add\n\n"}