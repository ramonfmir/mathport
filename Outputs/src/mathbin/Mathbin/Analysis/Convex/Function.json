{"translate_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print StrictConcaveOn.translate_right /-\n/-- Right translation preserves strict concavity. -/\ntheorem StrictConcaveOn.translate_right (hf : StrictConcaveOn 𝕜 s f) (c : E) :\n    StrictConcaveOn 𝕜 («expr ⁻¹' » (fun z => c + z) s) (f ∘ fun z => c + z) :=\n  hf.dual.translate_right _\n#align strict_concave_on.translate_right StrictConcaveOn.translate_right\n-/\n\n",
 "translate_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print StrictConcaveOn.translate_left /-\n/-- Left translation preserves strict concavity. -/\ntheorem StrictConcaveOn.translate_left (hf : StrictConcaveOn 𝕜 s f) (c : E) :\n    StrictConcaveOn 𝕜 («expr ⁻¹' » (fun z => c + z) s) (f ∘ fun z => z + c) := by\n  simpa only [add_comm] using hf.translate_right _\n#align strict_concave_on.translate_left StrictConcaveOn.translate_left\n-/\n\n",
 "sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print StrictConvexOn.sup /-\n/-- The pointwise maximum of strictly convex functions is strictly convex. -/\ntheorem StrictConvexOn.sup (hf : StrictConvexOn 𝕜 s f) (hg : StrictConvexOn 𝕜 s g) :\n    StrictConvexOn 𝕜 s («expr ⊔ » f g) :=\n  ⟨hf.left, fun x hx y hy hxy a b ha hb hab =>\n    max_lt\n      (calc\n        f («expr • » a x + «expr • » b y) < «expr • » a (f x) + «expr • » b (f y) := hf.2 hx hy hxy ha hb hab\n        _ ≤ «expr • » a («expr ⊔ » (f x) (g x)) + «expr • » b («expr ⊔ » (f y) (g y)) :=\n          add_le_add (smul_le_smul_of_nonneg le_sup_left ha.le) (smul_le_smul_of_nonneg le_sup_left hb.le)\n        )\n      (calc\n        g («expr • » a x + «expr • » b y) < «expr • » a (g x) + «expr • » b (g y) := hg.2 hx hy hxy ha hb hab\n        _ ≤ «expr • » a («expr ⊔ » (f x) (g x)) + «expr • » b («expr ⊔ » (f y) (g y)) :=\n          add_le_add (smul_le_smul_of_nonneg le_sup_right ha.le) (smul_le_smul_of_nonneg le_sup_right hb.le)\n        )⟩\n#align strict_convex_on.sup StrictConvexOn.sup\n-/\n\n",
 "subset":
 "#print StrictConcaveOn.subset /-\ntheorem StrictConcaveOn.subset {t : Set E} (hf : StrictConcaveOn 𝕜 t f) (hst : s ⊆ t) (hs : Convex 𝕜 s) :\n    StrictConcaveOn 𝕜 s f :=\n  ⟨hs, fun x hx y hy => hf.2 (hst hx) (hst hy)⟩\n#align strict_concave_on.subset StrictConcaveOn.subset\n-/\n\n",
 "sub_strictConvexOn":
 "#print ConcaveOn.sub_strictConvexOn /-\ntheorem ConcaveOn.sub_strictConvexOn (hf : ConcaveOn 𝕜 s f) (hg : StrictConvexOn 𝕜 s g) : StrictConcaveOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_strict_concave_on hg.neg\n#align concave_on.sub_strict_convex_on ConcaveOn.sub_strictConvexOn\n-/\n\n",
 "sub_strictConcaveOn":
 "#print ConvexOn.sub_strictConcaveOn /-\ntheorem ConvexOn.sub_strictConcaveOn (hf : ConvexOn 𝕜 s f) (hg : StrictConcaveOn 𝕜 s g) : StrictConvexOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_strict_convex_on hg.neg\n#align convex_on.sub_strict_concave_on ConvexOn.sub_strictConcaveOn\n-/\n\n",
 "sub_convexOn":
 "#print StrictConcaveOn.sub_convexOn /-\ntheorem StrictConcaveOn.sub_convexOn (hf : StrictConcaveOn 𝕜 s f) (hg : ConvexOn 𝕜 s g) : StrictConcaveOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_concave_on hg.neg\n#align strict_concave_on.sub_convex_on StrictConcaveOn.sub_convexOn\n-/\n\n",
 "sub_concaveOn":
 "#print StrictConvexOn.sub_concaveOn /-\ntheorem StrictConvexOn.sub_concaveOn (hf : StrictConvexOn 𝕜 s f) (hg : ConcaveOn 𝕜 s g) : StrictConvexOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_convex_on hg.neg\n#align strict_convex_on.sub_concave_on StrictConvexOn.sub_concaveOn\n-/\n\n",
 "sub":
 "#print StrictConcaveOn.sub /-\ntheorem StrictConcaveOn.sub (hf : StrictConcaveOn 𝕜 s f) (hg : StrictConvexOn 𝕜 s g) : StrictConcaveOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add hg.neg\n#align strict_concave_on.sub StrictConcaveOn.sub\n-/\n\n",
 "strictConvexOn_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print LinearOrder.strictConvexOn_of_lt /-\n/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is strictly convex, it suffices\nto verify the inequality `f (a • x + b • y) < a • f x + b • f y` for `x < y` and positive `a`, `b`.\nThe main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order. -/\ntheorem LinearOrder.strictConvexOn_of_lt (hs : Convex 𝕜 s)\n    (hf :\n      ∀ ⦃x⦄,\n        x ∈ s →\n          ∀ ⦃y⦄,\n            y ∈ s →\n              x < y →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → f («expr • » a x + «expr • » b y) < «expr • » a (f x) + «expr • » b (f y)) :\n    StrictConvexOn 𝕜 s f := by\n  refine' ⟨hs, fun x hx y hy hxy a b ha hb hab => _⟩\n  wlog h : x < y\n  · rw [add_comm («expr • » a x), add_comm («expr • » a (f x))]\n    rw [add_comm] at hab\n    refine' this hs hf y hy x hx hxy.symm b a hb ha hab (hxy.lt_or_lt.resolve_left h)\n  exact hf hx hy h ha hb hab\n#align linear_order.strict_convex_on_of_lt LinearOrder.strictConvexOn_of_lt\n-/\n\n",
 "strictConvexOn_iff_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print strictConvexOn_iff_div /-\ntheorem strictConvexOn_iff_div {f : E → β} :\n    StrictConvexOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                x ≠ y →\n                  ∀ ⦃a b : 𝕜⦄,\n                    0 < a →\n                      0 < b →\n                        f («expr • » (a / (a + b)) x + «expr • » (b / (a + b)) y) <\n                          «expr • » (a / (a + b)) (f x) + «expr • » (b / (a + b)) (f y) :=\n  and_congr iff.rfl\n    ⟨by\n      intro h x hx y hy hxy a b ha hb\n      have hab := add_pos ha hb\n      apply h hx hy hxy (div_pos ha hab) (div_pos hb hab)\n      rw [← add_div, div_self hab.ne'], by\n      intro h x hx y hy hxy a b ha hb hab\n      simpa [hab, zero_lt_one] using h hx hy hxy ha hb⟩\n#align strict_convex_on_iff_div strictConvexOn_iff_div\n-/\n\n",
 "strictConcaveOn_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print LinearOrder.strictConcaveOn_of_lt /-\n/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is strictly concave it suffices\nto verify the inequality `a • f x + b • f y < f (a • x + b • y)` for `x < y` and positive `a`, `b`.\nThe main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order. -/\ntheorem LinearOrder.strictConcaveOn_of_lt (hs : Convex 𝕜 s)\n    (hf :\n      ∀ ⦃x⦄,\n        x ∈ s →\n          ∀ ⦃y⦄,\n            y ∈ s →\n              x < y →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → «expr • » a (f x) + «expr • » b (f y) < f («expr • » a x + «expr • » b y)) :\n    StrictConcaveOn 𝕜 s f :=\n  @LinearOrder.strictConvexOn_of_lt _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ _ _ hs hf\n#align linear_order.strict_concave_on_of_lt LinearOrder.strictConcaveOn_of_lt\n-/\n\n",
 "strictConcaveOn_iff_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print strictConcaveOn_iff_div /-\ntheorem strictConcaveOn_iff_div {f : E → β} :\n    StrictConcaveOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                x ≠ y →\n                  ∀ ⦃a b : 𝕜⦄,\n                    0 < a →\n                      0 < b →\n                        «expr • » (a / (a + b)) (f x) + «expr • » (b / (a + b)) (f y) <\n                          f («expr • » (a / (a + b)) x + «expr • » (b / (a + b)) y) :=\n  @strictConvexOn_iff_div _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ _\n#align strict_concave_on_iff_div strictConcaveOn_iff_div\n-/\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConcaveOn.smul /-\ntheorem ConcaveOn.smul {c : 𝕜} (hc : 0 ≤ c) (hf : ConcaveOn 𝕜 s f) : ConcaveOn 𝕜 s fun x => «expr • » c (f x) :=\n  hf.dual.smul hc\n#align concave_on.smul ConcaveOn.smul\n-/\n\n",
 "right_le_of_le_left''":
 "#print ConcaveOn.right_le_of_le_left'' /-\ntheorem ConcaveOn.right_le_of_le_left'' (hf : ConcaveOn 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x < y) (hyz : y ≤ z)\n    (h : f y ≤ f x) : f z ≤ f y :=\n  hf.dual.le_right_of_left_le'' hx hz hxy hyz h\n#align concave_on.right_le_of_le_left'' ConcaveOn.right_le_of_le_left''\n-/\n\n",
 "right_le_of_le_left'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConcaveOn.right_le_of_le_left' /-\ntheorem ConcaveOn.right_le_of_le_left' (hf : ConcaveOn 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s) (hy : y ∈ s) (ha : 0 ≤ a)\n    (hb : 0 < b) (hab : a + b = 1) (hfx : f («expr • » a x + «expr • » b y) ≤ f x) :\n    f y ≤ f («expr • » a x + «expr • » b y) :=\n  hf.dual.le_right_of_left_le' hx hy ha hb hab hfx\n#align concave_on.right_le_of_le_left' ConcaveOn.right_le_of_le_left'\n-/\n\n",
 "right_le_of_le_left":
 "#print ConcaveOn.right_le_of_le_left /-\ntheorem ConcaveOn.right_le_of_le_left (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hxz : f z ≤ f x) : f y ≤ f z :=\n  hf.dual.le_right_of_left_le hx hy hz hxz\n#align concave_on.right_le_of_le_left ConcaveOn.right_le_of_le_left\n-/\n\n",
 "openSegment_subset_strict_hypograph":
 "#print ConcaveOn.openSegment_subset_strict_hypograph /-\ntheorem ConcaveOn.openSegment_subset_strict_hypograph (hf : ConcaveOn 𝕜 s f) (p q : E × β) (hp : p.1 ∈ s ∧ p.2 < f p.1)\n    (hq : q.1 ∈ s ∧ q.2 ≤ f q.1) : openSegment 𝕜 p q ⊆ { p : E × β | p.1 ∈ s ∧ p.2 < f p.1 } :=\n  hf.dual.open_segment_subset_strict_epigraph p q hp hq\n#align concave_on.open_segment_subset_strict_hypograph ConcaveOn.openSegment_subset_strict_hypograph\n-/\n\n",
 "openSegment_subset_strict_epigraph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConvexOn.openSegment_subset_strict_epigraph /-\ntheorem ConvexOn.openSegment_subset_strict_epigraph (hf : ConvexOn 𝕜 s f) (p q : E × β) (hp : p.1 ∈ s ∧ f p.1 < p.2)\n    (hq : q.1 ∈ s ∧ f q.1 ≤ q.2) : openSegment 𝕜 p q ⊆ { p : E × β | p.1 ∈ s ∧ f p.1 < p.2 } :=\n  by\n  rintro _ ⟨a, b, ha, hb, hab, rfl⟩\n  refine' ⟨hf.1 hp.1 hq.1 ha.le hb.le hab, _⟩\n  calc\n    f («expr • » a p.1 + «expr • » b q.1) ≤ «expr • » a (f p.1) + «expr • » b (f q.1) := hf.2 hp.1 hq.1 ha.le hb.le hab\n    _ < «expr • » a p.2 + «expr • » b q.2 :=\n      add_lt_add_of_lt_of_le (smul_lt_smul_of_pos hp.2 ha) (smul_le_smul_of_nonneg hq.2 hb.le)\n    \n#align convex_on.open_segment_subset_strict_epigraph ConvexOn.openSegment_subset_strict_epigraph\n-/\n\n",
 "neg_strictConvexOn_iff":
 "#print neg_strictConvexOn_iff /-\n/-- A function `-f` is strictly convex iff `f` is strictly concave. -/\n@[simp]\ntheorem neg_strictConvexOn_iff : StrictConvexOn 𝕜 s (-f) ↔ StrictConcaveOn 𝕜 s f :=\n  by\n  constructor\n  · rintro ⟨hconv, h⟩\n    refine' ⟨hconv, fun x hx y hy hxy a b ha hb hab => _⟩\n    simp [neg_apply, neg_lt, add_comm] at h\n    exact h hx hy hxy ha hb hab\n  · rintro ⟨hconv, h⟩\n    refine' ⟨hconv, fun x hx y hy hxy a b ha hb hab => _⟩\n    rw [← neg_lt_neg_iff]\n    simp_rw [neg_add, Pi.neg_apply, smul_neg, neg_neg]\n    exact h hx hy hxy ha hb hab\n#align neg_strict_convex_on_iff neg_strictConvexOn_iff\n-/\n\n",
 "neg_strictConcaveOn_iff":
 "#print neg_strictConcaveOn_iff /-\n/-- A function `-f` is strictly concave iff `f` is strictly convex. -/\n@[simp]\ntheorem neg_strictConcaveOn_iff : StrictConcaveOn 𝕜 s (-f) ↔ StrictConvexOn 𝕜 s f := by\n  rw [← neg_strictConvexOn_iff, neg_neg f]\n#align neg_strict_concave_on_iff neg_strictConcaveOn_iff\n-/\n\n",
 "neg_convexOn_iff":
 "#print neg_convexOn_iff /-\n/-- A function `-f` is convex iff `f` is concave. -/\n@[simp]\ntheorem neg_convexOn_iff : ConvexOn 𝕜 s (-f) ↔ ConcaveOn 𝕜 s f :=\n  by\n  constructor\n  · rintro ⟨hconv, h⟩\n    refine' ⟨hconv, fun x hx y hy a b ha hb hab => _⟩\n    simp [neg_apply, neg_le, add_comm] at h\n    exact h hx hy ha hb hab\n  · rintro ⟨hconv, h⟩\n    refine' ⟨hconv, fun x hx y hy a b ha hb hab => _⟩\n    rw [← neg_le_neg_iff]\n    simp_rw [neg_add, Pi.neg_apply, smul_neg, neg_neg]\n    exact h hx hy ha hb hab\n#align neg_convex_on_iff neg_convexOn_iff\n-/\n\n",
 "neg_concaveOn_iff":
 "#print neg_concaveOn_iff /-\n/-- A function `-f` is concave iff `f` is convex. -/\n@[simp]\ntheorem neg_concaveOn_iff : ConcaveOn 𝕜 s (-f) ↔ ConvexOn 𝕜 s f := by rw [← neg_convexOn_iff, neg_neg f]\n#align neg_concave_on_iff neg_concaveOn_iff\n-/\n\n",
 "lt_right_of_left_lt'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConcaveOn.lt_right_of_left_lt' /-\ntheorem ConcaveOn.lt_right_of_left_lt' (hf : ConcaveOn 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s) (hy : y ∈ s) (ha : 0 < a)\n    (hb : 0 < b) (hab : a + b = 1) (hfx : f («expr • » a x + «expr • » b y) < f x) :\n    f y < f («expr • » a x + «expr • » b y) :=\n  hf.dual.lt_right_of_left_lt' hx hy ha hb hab hfx\n#align concave_on.lt_right_of_left_lt' ConcaveOn.lt_right_of_left_lt'\n-/\n\n",
 "lt_right_of_left_lt":
 "#print ConcaveOn.lt_right_of_left_lt /-\ntheorem ConcaveOn.lt_right_of_left_lt (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hxz : f z < f x) : f y < f z :=\n  hf.dual.lt_right_of_left_lt hx hy hz hxz\n#align concave_on.lt_right_of_left_lt ConcaveOn.lt_right_of_left_lt\n-/\n\n",
 "lt_on_open_segment'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print StrictConcaveOn.lt_on_open_segment' /-\n/-- A strictly concave function on an open segment is strictly lower-bounded by the min of its\nendpoints. -/\ntheorem StrictConcaveOn.lt_on_open_segment' (hf : StrictConcaveOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hxy : x ≠ y) {a b : 𝕜} (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) :\n    min (f x) (f y) < f («expr • » a x + «expr • » b y) :=\n  hf.dual.lt_on_open_segment' hx hy hxy ha hb hab\n#align strict_concave_on.lt_on_open_segment' StrictConcaveOn.lt_on_open_segment'\n-/\n\n",
 "lt_on_openSegment":
 "#print StrictConcaveOn.lt_on_openSegment /-\n/-- A strictly concave function on an open segment is strictly lower-bounded by the min of its\nendpoints. -/\ntheorem StrictConcaveOn.lt_on_openSegment (hf : StrictConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hxy : x ≠ y) (hz : z ∈ openSegment 𝕜 x y) : min (f x) (f y) < f z :=\n  hf.dual.lt_on_open_segment hx hy hxy hz\n#align strict_concave_on.lt_on_open_segment StrictConcaveOn.lt_on_openSegment\n-/\n\n",
 "lt_left_of_right_lt'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConvexOn.lt_left_of_right_lt' /-\n/- The following lemmas don't require `module 𝕜 E` if you add the hypothesis `x ≠ y`. At the time of\nthe writing, we decided the resulting lemmas wouldn't be useful. Feel free to reintroduce them. -/\ntheorem ConvexOn.lt_left_of_right_lt' (hf : ConvexOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜} (ha : 0 < a)\n    (hb : 0 < b) (hab : a + b = 1) (hfy : f y < f («expr • » a x + «expr • » b y)) :\n    f («expr • » a x + «expr • » b y) < f x :=\n  not_le.1 fun h =>\n    lt_irrefl (f («expr • » a x + «expr • » b y)) <|\n      calc\n        f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx hy ha.le hb.le hab\n        _ < «expr • » a (f («expr • » a x + «expr • » b y)) + «expr • » b (f («expr • » a x + «expr • » b y)) :=\n          (add_lt_add_of_le_of_lt (smul_le_smul_of_nonneg h ha.le) (smul_lt_smul_of_pos hfy hb))\n        _ = f («expr • » a x + «expr • » b y) := Convex.combo_self hab _\n        \n#align convex_on.lt_left_of_right_lt' ConvexOn.lt_left_of_right_lt'\n-/\n\n",
 "lt_left_of_right_lt":
 "#print ConvexOn.lt_left_of_right_lt /-\ntheorem ConvexOn.lt_left_of_right_lt (hf : ConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hyz : f y < f z) : f z < f x :=\n  by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.lt_left_of_right_lt' hx hy ha hb hab hyz\n#align convex_on.lt_left_of_right_lt ConvexOn.lt_left_of_right_lt\n-/\n\n",
 "left_lt_of_lt_right'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConcaveOn.left_lt_of_lt_right' /-\ntheorem ConcaveOn.left_lt_of_lt_right' (hf : ConcaveOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜} (ha : 0 < a)\n    (hb : 0 < b) (hab : a + b = 1) (hfy : f («expr • » a x + «expr • » b y) < f y) :\n    f x < f («expr • » a x + «expr • » b y) :=\n  hf.dual.lt_left_of_right_lt' hx hy ha hb hab hfy\n#align concave_on.left_lt_of_lt_right' ConcaveOn.left_lt_of_lt_right'\n-/\n\n",
 "left_lt_of_lt_right":
 "#print ConcaveOn.left_lt_of_lt_right /-\ntheorem ConcaveOn.left_lt_of_lt_right (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hyz : f z < f y) : f x < f z :=\n  hf.dual.lt_left_of_right_lt hx hy hz hyz\n#align concave_on.left_lt_of_lt_right ConcaveOn.left_lt_of_lt_right\n-/\n\n",
 "left_le_of_le_right''":
 "#print ConcaveOn.left_le_of_le_right'' /-\ntheorem ConcaveOn.left_le_of_le_right'' (hf : ConcaveOn 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x ≤ y) (hyz : y < z)\n    (h : f y ≤ f z) : f x ≤ f y :=\n  hf.dual.le_left_of_right_le'' hx hz hxy hyz h\n#align concave_on.left_le_of_le_right'' ConcaveOn.left_le_of_le_right''\n-/\n\n",
 "left_le_of_le_right'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConcaveOn.left_le_of_le_right' /-\ntheorem ConcaveOn.left_le_of_le_right' (hf : ConcaveOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜} (ha : 0 < a)\n    (hb : 0 ≤ b) (hab : a + b = 1) (hfy : f («expr • » a x + «expr • » b y) ≤ f y) :\n    f x ≤ f («expr • » a x + «expr • » b y) :=\n  hf.dual.le_left_of_right_le' hx hy ha hb hab hfy\n#align concave_on.left_le_of_le_right' ConcaveOn.left_le_of_le_right'\n-/\n\n",
 "left_le_of_le_right":
 "#print ConcaveOn.left_le_of_le_right /-\ntheorem ConcaveOn.left_le_of_le_right (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hyz : f z ≤ f y) : f x ≤ f z :=\n  hf.dual.le_left_of_right_le hx hy hz hyz\n#align concave_on.left_le_of_le_right ConcaveOn.left_le_of_le_right\n-/\n\n",
 "le_right_of_left_le''":
 "#print ConvexOn.le_right_of_left_le'' /-\ntheorem ConvexOn.le_right_of_left_le'' (hf : ConvexOn 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x < y) (hyz : y ≤ z)\n    (h : f x ≤ f y) : f y ≤ f z :=\n  hyz.eq_or_lt.elim (fun hyz => (congr_arg f hyz).le) fun hyz =>\n    hf.le_right_of_left_le hx hz (Ioo_subset_openSegment ⟨hxy, hyz⟩) h\n#align convex_on.le_right_of_left_le'' ConvexOn.le_right_of_left_le''\n-/\n\n",
 "le_right_of_left_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConvexOn.le_right_of_left_le' /-\ntheorem ConvexOn.le_right_of_left_le' (hf : ConvexOn 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s) (hy : y ∈ s) (ha : 0 ≤ a)\n    (hb : 0 < b) (hab : a + b = 1) (hfx : f x ≤ f («expr • » a x + «expr • » b y)) :\n    f («expr • » a x + «expr • » b y) ≤ f y := by\n  rw [add_comm] at hab hfx⊢\n  exact hf.le_left_of_right_le' hy hx hb ha hab hfx\n#align convex_on.le_right_of_left_le' ConvexOn.le_right_of_left_le'\n-/\n\n",
 "le_right_of_left_le":
 "#print ConvexOn.le_right_of_left_le /-\ntheorem ConvexOn.le_right_of_left_le (hf : ConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hxz : f x ≤ f z) : f z ≤ f y :=\n  by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.le_right_of_left_le' hx hy ha.le hb hab hxz\n#align convex_on.le_right_of_left_le ConvexOn.le_right_of_left_le\n-/\n\n",
 "le_on_segment'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConvexOn.le_on_segment' /-\n/-- A convex function on a segment is upper-bounded by the max of its endpoints. -/\ntheorem ConvexOn.le_on_segment' (hf : ConvexOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜} (ha : 0 ≤ a)\n    (hb : 0 ≤ b) (hab : a + b = 1) : f («expr • » a x + «expr • » b y) ≤ max (f x) (f y) :=\n  calc\n    f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx hy ha hb hab\n    _ ≤ «expr • » a (max (f x) (f y)) + «expr • » b (max (f x) (f y)) :=\n      (add_le_add (smul_le_smul_of_nonneg (le_max_left _ _) ha) (smul_le_smul_of_nonneg (le_max_right _ _) hb))\n    _ = max (f x) (f y) := Convex.combo_self hab _\n    \n#align convex_on.le_on_segment' ConvexOn.le_on_segment'\n-/\n\n",
 "le_on_segment":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `segment -/\n#print ConvexOn.le_on_segment /-\n/-- A convex function on a segment is upper-bounded by the max of its endpoints. -/\ntheorem ConvexOn.le_on_segment (hf : ConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s) (hz : z ∈ segment x 𝕜 y) :\n    f z ≤ max (f x) (f y) :=\n  let ⟨a, b, ha, hb, hab, hz⟩ := hz\n  hz ▸ hf.le_on_segment' hx hy ha hb hab\n#align convex_on.le_on_segment ConvexOn.le_on_segment\n-/\n\n",
 "le_left_of_right_le''":
 "#print ConvexOn.le_left_of_right_le'' /-\ntheorem ConvexOn.le_left_of_right_le'' (hf : ConvexOn 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x ≤ y) (hyz : y < z)\n    (h : f z ≤ f y) : f y ≤ f x :=\n  hxy.eq_or_lt.elim (fun hxy => (congr_arg f hxy).ge) fun hxy =>\n    hf.le_left_of_right_le hx hz (Ioo_subset_openSegment ⟨hxy, hyz⟩) h\n#align convex_on.le_left_of_right_le'' ConvexOn.le_left_of_right_le''\n-/\n\n",
 "le_left_of_right_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConvexOn.le_left_of_right_le' /-\ntheorem ConvexOn.le_left_of_right_le' (hf : ConvexOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜} (ha : 0 < a)\n    (hb : 0 ≤ b) (hab : a + b = 1) (hfy : f y ≤ f («expr • » a x + «expr • » b y)) :\n    f («expr • » a x + «expr • » b y) ≤ f x :=\n  le_of_not_lt fun h =>\n    lt_irrefl (f («expr • » a x + «expr • » b y)) <|\n      calc\n        f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx hy ha.le hb hab\n        _ < «expr • » a (f («expr • » a x + «expr • » b y)) + «expr • » b (f («expr • » a x + «expr • » b y)) :=\n          (add_lt_add_of_lt_of_le (smul_lt_smul_of_pos h ha) (smul_le_smul_of_nonneg hfy hb))\n        _ = f («expr • » a x + «expr • » b y) := Convex.combo_self hab _\n        \n#align convex_on.le_left_of_right_le' ConvexOn.le_left_of_right_le'\n-/\n\n",
 "le_left_of_right_le":
 "#print ConvexOn.le_left_of_right_le /-\ntheorem ConvexOn.le_left_of_right_le (hf : ConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hyz : f y ≤ f z) : f z ≤ f x :=\n  by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.le_left_of_right_le' hx hy ha hb.le hab hyz\n#align convex_on.le_left_of_right_le ConvexOn.le_left_of_right_le\n-/\n\n",
 "inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print StrictConcaveOn.inf /-\n/-- The pointwise minimum of strictly concave functions is strictly concave. -/\ntheorem StrictConcaveOn.inf (hf : StrictConcaveOn 𝕜 s f) (hg : StrictConcaveOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s («expr ⊓ » f g) :=\n  hf.dual.sup hg\n#align strict_concave_on.inf StrictConcaveOn.inf\n-/\n\n",
 "ge_on_segment'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConcaveOn.ge_on_segment' /-\n/-- A concave function on a segment is lower-bounded by the min of its endpoints. -/\ntheorem ConcaveOn.ge_on_segment' (hf : ConcaveOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜} (ha : 0 ≤ a)\n    (hb : 0 ≤ b) (hab : a + b = 1) : min (f x) (f y) ≤ f («expr • » a x + «expr • » b y) :=\n  hf.dual.le_on_segment' hx hy ha hb hab\n#align concave_on.ge_on_segment' ConcaveOn.ge_on_segment'\n-/\n\n",
 "ge_on_segment":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `segment -/\n#print ConcaveOn.ge_on_segment /-\n/-- A concave function on a segment is lower-bounded by the min of its endpoints. -/\ntheorem ConcaveOn.ge_on_segment (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s) (hz : z ∈ segment x 𝕜 y) :\n    min (f x) (f y) ≤ f z :=\n  hf.dual.le_on_segment hx hy hz\n#align concave_on.ge_on_segment ConcaveOn.ge_on_segment\n-/\n\n",
 "dual":
 "#print StrictConcaveOn.dual /-\ntheorem StrictConcaveOn.dual (hf : StrictConcaveOn 𝕜 s f) : StrictConvexOn 𝕜 s (toDual ∘ f) :=\n  hf\n#align strict_concave_on.dual StrictConcaveOn.dual\n-/\n\n",
 "convex_strict_hypograph":
 "#print ConcaveOn.convex_strict_hypograph /-\ntheorem ConcaveOn.convex_strict_hypograph (hf : ConcaveOn 𝕜 s f) : Convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 < f p.1 } :=\n  hf.dual.convex_strict_epigraph\n#align concave_on.convex_strict_hypograph ConcaveOn.convex_strict_hypograph\n-/\n\n",
 "convex_strict_epigraph":
 "#print ConvexOn.convex_strict_epigraph /-\ntheorem ConvexOn.convex_strict_epigraph (hf : ConvexOn 𝕜 s f) : Convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 < p.2 } :=\n  convex_iff_openSegment_subset.mpr fun p hp q hq => hf.open_segment_subset_strict_epigraph p q hp ⟨hq.1, hq.2.le⟩\n#align convex_on.convex_strict_epigraph ConvexOn.convex_strict_epigraph\n-/\n\n",
 "convex_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConvexOn.convex_lt /-\ntheorem ConvexOn.convex_lt (hf : ConvexOn 𝕜 s f) (r : β) : Convex 𝕜 ({ x ∈ s | f x < r }) :=\n  convex_iff_forall_pos.2 fun x hx y hy a b ha hb hab =>\n    ⟨hf.1 hx.1 hy.1 ha.le hb.le hab,\n      calc\n        f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx.1 hy.1 ha.le hb.le hab\n        _ < «expr • » a r + «expr • » b r :=\n          (add_lt_add_of_lt_of_le (smul_lt_smul_of_pos hx.2 ha) (smul_le_smul_of_nonneg hy.2.le hb.le))\n        _ = r := Convex.combo_self hab _\n        ⟩\n#align convex_on.convex_lt ConvexOn.convex_lt\n-/\n\n",
 "convex_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConvexOn.convex_le /-\ntheorem ConvexOn.convex_le (hf : ConvexOn 𝕜 s f) (r : β) : Convex 𝕜 ({ x ∈ s | f x ≤ r }) :=\n  fun x hx y hy a b ha hb hab =>\n  ⟨hf.1 hx.1 hy.1 ha hb hab,\n    calc\n      f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx.1 hy.1 ha hb hab\n      _ ≤ «expr • » a r + «expr • » b r :=\n        (add_le_add (smul_le_smul_of_nonneg hx.2 ha) (smul_le_smul_of_nonneg hy.2 hb))\n      _ = r := Convex.combo_self hab r\n      ⟩\n#align convex_on.convex_le ConvexOn.convex_le\n-/\n\n",
 "convex_hypograph":
 "#print ConcaveOn.convex_hypograph /-\ntheorem ConcaveOn.convex_hypograph (hf : ConcaveOn 𝕜 s f) : Convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 ≤ f p.1 } :=\n  hf.dual.convex_epigraph\n#align concave_on.convex_hypograph ConcaveOn.convex_hypograph\n-/\n\n",
 "convex_gt":
 "#print ConcaveOn.convex_gt /-\ntheorem ConcaveOn.convex_gt (hf : ConcaveOn 𝕜 s f) (r : β) : Convex 𝕜 ({ x ∈ s | r < f x }) :=\n  hf.dual.convex_lt r\n#align concave_on.convex_gt ConcaveOn.convex_gt\n-/\n\n",
 "convex_ge":
 "#print ConcaveOn.convex_ge /-\ntheorem ConcaveOn.convex_ge (hf : ConcaveOn 𝕜 s f) (r : β) : Convex 𝕜 ({ x ∈ s | r ≤ f x }) :=\n  hf.dual.convex_le r\n#align concave_on.convex_ge ConcaveOn.convex_ge\n-/\n\n",
 "convex_epigraph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print ConvexOn.convex_epigraph /-\ntheorem ConvexOn.convex_epigraph (hf : ConvexOn 𝕜 s f) : Convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2 } :=\n  by\n  rintro ⟨x, r⟩ ⟨hx, hr⟩ ⟨y, t⟩ ⟨hy, ht⟩ a b ha hb hab\n  refine' ⟨hf.1 hx hy ha hb hab, _⟩\n  calc\n    f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) := hf.2 hx hy ha hb hab\n    _ ≤ «expr • » a r + «expr • » b t := add_le_add (smul_le_smul_of_nonneg hr ha) (smul_le_smul_of_nonneg ht hb)\n    \n#align convex_on.convex_epigraph ConvexOn.convex_epigraph\n-/\n\n",
 "convexOn_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print LinearOrder.convexOn_of_lt /-\n/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is convex, it suffices to\nverify the inequality `f (a • x + b • y) ≤ a • f x + b • f y` only for `x < y` and positive `a`,\n`b`. The main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order.\n-/\ntheorem LinearOrder.convexOn_of_lt (hs : Convex 𝕜 s)\n    (hf :\n      ∀ ⦃x⦄,\n        x ∈ s →\n          ∀ ⦃y⦄,\n            y ∈ s →\n              x < y →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y)) :\n    ConvexOn 𝕜 s f :=\n  by\n  refine' convexOn_iff_pairwise_pos.2 ⟨hs, fun x hx y hy hxy a b ha hb hab => _⟩\n  wlog h : x < y\n  · rw [add_comm («expr • » a x), add_comm («expr • » a (f x))]\n    rw [add_comm] at hab\n    refine' this hs hf y hy x hx hxy.symm b a hb ha hab (hxy.lt_or_lt.resolve_left h)\n  exact hf hx hy h ha hb hab\n#align linear_order.convex_on_of_lt LinearOrder.convexOn_of_lt\n-/\n\n",
 "convexOn_of_convex_epigraph":
 "#print convexOn_of_convex_epigraph /-\ntheorem convexOn_of_convex_epigraph (h : Convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2 }) : ConvexOn 𝕜 s f :=\n  ⟨fun x hx y hy a b ha hb hab => (@h (x, f x) ⟨hx, le_rfl⟩ (y, f y) ⟨hy, le_rfl⟩ a b ha hb hab).1,\n    fun x hx y hy a b ha hb hab => (@h (x, f x) ⟨hx, le_rfl⟩ (y, f y) ⟨hy, le_rfl⟩ a b ha hb hab).2⟩\n#align convex_on_of_convex_epigraph convexOn_of_convex_epigraph\n-/\n\n",
 "convexOn_iff_pairwise_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print convexOn_iff_pairwise_pos /-\ntheorem convexOn_iff_pairwise_pos {s : Set E} {f : E → β} :\n    ConvexOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        s.pairwise fun x y =>\n          ∀ ⦃a b : 𝕜⦄,\n            0 < a → 0 < b → a + b = 1 → f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) :=\n  by\n  rw [convexOn_iff_forall_pos]\n  refine' and_congr_right' ⟨fun h x hx y hy _ a b ha hb hab => h hx hy ha hb hab, fun h x hx y hy a b ha hb hab => _⟩\n  obtain rfl | hxy := eq_or_ne x y\n  · rw [Convex.combo_self hab, Convex.combo_self hab]\n  exact h hx hy hxy ha hb hab\n#align convex_on_iff_pairwise_pos convexOn_iff_pairwise_pos\n-/\n\n",
 "convexOn_iff_forall_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print convexOn_iff_forall_pos /-\ntheorem convexOn_iff_forall_pos {s : Set E} {f : E → β} :\n    ConvexOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → f («expr • » a x + «expr • » b y) ≤ «expr • » a (f x) + «expr • » b (f y) :=\n  by\n  refine'\n    and_congr_right' ⟨fun h x hx y hy a b ha hb hab => h hx hy ha.le hb.le hab, fun h x hx y hy a b ha hb hab => _⟩\n  obtain rfl | ha' := ha.eq_or_lt\n  · rw [zero_add] at hab\n    subst b\n    simp_rw [zero_smul, zero_add, one_smul]\n  obtain rfl | hb' := hb.eq_or_lt\n  · rw [add_zero] at hab\n    subst a\n    simp_rw [zero_smul, add_zero, one_smul]\n  exact h hx hy ha' hb' hab\n#align convex_on_iff_forall_pos convexOn_iff_forall_pos\n-/\n\n",
 "convexOn_iff_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print convexOn_iff_div /-\ntheorem convexOn_iff_div {f : E → β} :\n    ConvexOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 ≤ a →\n                    0 ≤ b →\n                      0 < a + b →\n                        f («expr • » (a / (a + b)) x + «expr • » (b / (a + b)) y) ≤\n                          «expr • » (a / (a + b)) (f x) + «expr • » (b / (a + b)) (f y) :=\n  and_congr iff.rfl\n    ⟨by\n      intro h x hx y hy a b ha hb hab\n      apply h hx hy (div_nonneg ha hab.le) (div_nonneg hb hab.le)\n      rw [← add_div, div_self hab.ne'], by\n      intro h x hx y hy a b ha hb hab\n      simpa [hab, zero_lt_one] using h hx hy ha hb⟩\n#align convex_on_iff_div convexOn_iff_div\n-/\n\n",
 "convexOn_iff_convex_epigraph":
 "#print convexOn_iff_convex_epigraph /-\ntheorem convexOn_iff_convex_epigraph : ConvexOn 𝕜 s f ↔ Convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2 } :=\n  ⟨ConvexOn.convex_epigraph, convexOn_of_convex_epigraph⟩\n#align convex_on_iff_convex_epigraph convexOn_iff_convex_epigraph\n-/\n\n",
 "convexOn_id":
 "#print convexOn_id /-\ntheorem convexOn_id {s : Set β} (hs : Convex 𝕜 s) : ConvexOn 𝕜 s id :=\n  ⟨hs, by\n    intros\n    rfl⟩\n#align convex_on_id convexOn_id\n-/\n\n",
 "convexOn_const":
 "#print convexOn_const /-\ntheorem convexOn_const (c : β) (hs : Convex 𝕜 s) : ConvexOn 𝕜 s fun x : E => c :=\n  ⟨hs, fun x y _ _ a b _ _ hab => (Convex.combo_self hab c).ge⟩\n#align convex_on_const convexOn_const\n-/\n\n",
 "convexOn":
 "#print StrictConvexOn.convexOn /-\ntheorem StrictConvexOn.convexOn {s : Set E} {f : E → β} (hf : StrictConvexOn 𝕜 s f) : ConvexOn 𝕜 s f :=\n  convexOn_iff_pairwise_pos.mpr ⟨hf.1, fun x hx y hy hxy a b ha hb hab => (hf.2 hx hy hxy ha hb hab).le⟩\n#align strict_convex_on.convex_on StrictConvexOn.convexOn\n-/\n\n",
 "concaveOn_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print LinearOrder.concaveOn_of_lt /-\n/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is concave it suffices to\nverify the inequality `a • f x + b • f y ≤ f (a • x + b • y)` for `x < y` and positive `a`, `b`. The\nmain use case is `E = ℝ` however one can apply it, e.g., to `ℝ^n` with lexicographic order. -/\ntheorem LinearOrder.concaveOn_of_lt (hs : Convex 𝕜 s)\n    (hf :\n      ∀ ⦃x⦄,\n        x ∈ s →\n          ∀ ⦃y⦄,\n            y ∈ s →\n              x < y →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → «expr • » a (f x) + «expr • » b (f y) ≤ f («expr • » a x + «expr • » b y)) :\n    ConcaveOn 𝕜 s f :=\n  @LinearOrder.convexOn_of_lt _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ s f hs hf\n#align linear_order.concave_on_of_lt LinearOrder.concaveOn_of_lt\n-/\n\n",
 "concaveOn_of_convex_hypograph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print concaveOn_of_convex_hypograph /-\ntheorem concaveOn_of_convex_hypograph (h : Convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 ≤ f p.1 }) : ConcaveOn 𝕜 s f :=\n  @convexOn_of_convex_epigraph 𝕜 E («expr ᵒᵈ» β) _ _ _ _ _ _ _ h\n#align concave_on_of_convex_hypograph concaveOn_of_convex_hypograph\n-/\n\n",
 "concaveOn_iff_pairwise_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print concaveOn_iff_pairwise_pos /-\ntheorem concaveOn_iff_pairwise_pos {s : Set E} {f : E → β} :\n    ConcaveOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        s.pairwise fun x y =>\n          ∀ ⦃a b : 𝕜⦄,\n            0 < a → 0 < b → a + b = 1 → «expr • » a (f x) + «expr • » b (f y) ≤ f («expr • » a x + «expr • » b y) :=\n  @convexOn_iff_pairwise_pos 𝕜 E («expr ᵒᵈ» β) _ _ _ _ _ _ _\n#align concave_on_iff_pairwise_pos concaveOn_iff_pairwise_pos\n-/\n\n",
 "concaveOn_iff_forall_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print concaveOn_iff_forall_pos /-\ntheorem concaveOn_iff_forall_pos {s : Set E} {f : E → β} :\n    ConcaveOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 < a →\n                    0 < b → a + b = 1 → «expr • » a (f x) + «expr • » b (f y) ≤ f («expr • » a x + «expr • » b y) :=\n  @convexOn_iff_forall_pos 𝕜 E («expr ᵒᵈ» β) _ _ _ _ _ _ _\n#align concave_on_iff_forall_pos concaveOn_iff_forall_pos\n-/\n\n",
 "concaveOn_iff_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print concaveOn_iff_div /-\ntheorem concaveOn_iff_div {f : E → β} :\n    ConcaveOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        ∀ ⦃x⦄,\n          x ∈ s →\n            ∀ ⦃y⦄,\n              y ∈ s →\n                ∀ ⦃a b : 𝕜⦄,\n                  0 ≤ a →\n                    0 ≤ b →\n                      0 < a + b →\n                        «expr • » (a / (a + b)) (f x) + «expr • » (b / (a + b)) (f y) ≤\n                          f («expr • » (a / (a + b)) x + «expr • » (b / (a + b)) y) :=\n  @convexOn_iff_div _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ _\n#align concave_on_iff_div concaveOn_iff_div\n-/\n\n",
 "concaveOn_iff_convex_hypograph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print concaveOn_iff_convex_hypograph /-\ntheorem concaveOn_iff_convex_hypograph : ConcaveOn 𝕜 s f ↔ Convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 ≤ f p.1 } :=\n  @convexOn_iff_convex_epigraph 𝕜 E («expr ᵒᵈ» β) _ _ _ _ _ _ _ f\n#align concave_on_iff_convex_hypograph concaveOn_iff_convex_hypograph\n-/\n\n",
 "concaveOn_id":
 "#print concaveOn_id /-\ntheorem concaveOn_id {s : Set β} (hs : Convex 𝕜 s) : ConcaveOn 𝕜 s id :=\n  ⟨hs, by\n    intros\n    rfl⟩\n#align concave_on_id concaveOn_id\n-/\n\n",
 "concaveOn_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print concaveOn_const /-\ntheorem concaveOn_const (c : β) (hs : Convex 𝕜 s) : ConcaveOn 𝕜 s fun x : E => c :=\n  @convexOn_const _ _ («expr ᵒᵈ» β) _ _ _ _ _ _ c hs\n#align concave_on_const concaveOn_const\n-/\n\n",
 "concaveOn":
 "#print StrictConcaveOn.concaveOn /-\ntheorem StrictConcaveOn.concaveOn {s : Set E} {f : E → β} (hf : StrictConcaveOn 𝕜 s f) : ConcaveOn 𝕜 s f :=\n  hf.dual.convex_on\n#align strict_concave_on.concave_on StrictConcaveOn.concaveOn\n-/\n\n",
 "comp_strictConvexOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print StrictConcaveOn.comp_strictConvexOn /-\ntheorem StrictConcaveOn.comp_strictConvexOn (hg : StrictConcaveOn 𝕜 («expr '' » f s) g) (hf : StrictConvexOn 𝕜 s f)\n    (hg' : StrictAntiOn g («expr '' » f s)) (hf' : s.inj_on f) : StrictConcaveOn 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg' hf'\n#align strict_concave_on.comp_strict_convex_on StrictConcaveOn.comp_strictConvexOn\n-/\n\n",
 "comp_strictConcaveOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print StrictConvexOn.comp_strictConcaveOn /-\ntheorem StrictConvexOn.comp_strictConcaveOn (hg : StrictConvexOn 𝕜 («expr '' » f s) g) (hf : StrictConcaveOn 𝕜 s f)\n    (hg' : StrictAntiOn g («expr '' » f s)) (hf' : s.inj_on f) : StrictConvexOn 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg' hf'\n#align strict_convex_on.comp_strict_concave_on StrictConvexOn.comp_strictConcaveOn\n-/\n\n",
 "comp_linearMap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print ConcaveOn.comp_linearMap /-\n/-- If `g` is concave on `s`, so is `(g ∘ f)` on `f ⁻¹' s` for a linear `f`. -/\ntheorem ConcaveOn.comp_linearMap {f : F → β} {s : Set F} (hf : ConcaveOn 𝕜 s f) (g : «expr →ₗ[ ] » E 𝕜 F) :\n    ConcaveOn 𝕜 («expr ⁻¹' » g s) (f ∘ g) :=\n  hf.dual.comp_linear_map g\n#align concave_on.comp_linear_map ConcaveOn.comp_linearMap\n-/\n\n",
 "comp_convexOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print ConcaveOn.comp_convexOn /-\ntheorem ConcaveOn.comp_convexOn (hg : ConcaveOn 𝕜 («expr '' » f s) g) (hf : ConvexOn 𝕜 s f)\n    (hg' : AntitoneOn g («expr '' » f s)) : ConcaveOn 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg'\n#align concave_on.comp_convex_on ConcaveOn.comp_convexOn\n-/\n\n",
 "comp_concaveOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print ConvexOn.comp_concaveOn /-\ntheorem ConvexOn.comp_concaveOn (hg : ConvexOn 𝕜 («expr '' » f s) g) (hf : ConcaveOn 𝕜 s f)\n    (hg' : AntitoneOn g («expr '' » f s)) : ConvexOn 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg'\n#align convex_on.comp_concave_on ConvexOn.comp_concaveOn\n-/\n\n",
 "comp_affineMap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print ConcaveOn.comp_affineMap /-\n/-- If a function is concave on `s`, it remains concave when precomposed by an affine map. -/\ntheorem ConcaveOn.comp_affineMap {f : F → β} (g : «expr →ᵃ[ ] » E 𝕜 F) {s : Set F} (hf : ConcaveOn 𝕜 s f) :\n    ConcaveOn 𝕜 («expr ⁻¹' » g s) (f ∘ g) :=\n  hf.dual.comp_affine_map g\n#align concave_on.comp_affine_map ConcaveOn.comp_affineMap\n-/\n\n",
 "comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print StrictConcaveOn.comp /-\ntheorem StrictConcaveOn.comp (hg : StrictConcaveOn 𝕜 («expr '' » f s) g) (hf : StrictConcaveOn 𝕜 s f)\n    (hg' : StrictMonoOn g («expr '' » f s)) (hf' : s.inj_on f) : StrictConcaveOn 𝕜 s (g ∘ f) :=\n  ⟨hf.1, fun x hx y hy hxy a b ha hb hab =>\n    (hg.2 (mem_image_of_mem f hx) (mem_image_of_mem f hy) (mt (hf' hx hy) hxy) ha hb hab).trans <|\n      hg' (hg.1 (mem_image_of_mem f hx) (mem_image_of_mem f hy) ha.le hb.le hab)\n          (mem_image_of_mem f <| hf.1 hx hy ha.le hb.le hab) <|\n        hf.2 hx hy hxy ha hb hab⟩\n#align strict_concave_on.comp StrictConcaveOn.comp\n-/\n\n",
 "add_strictConvexOn":
 "#print ConvexOn.add_strictConvexOn /-\ntheorem ConvexOn.add_strictConvexOn (hf : ConvexOn 𝕜 s f) (hg : StrictConvexOn 𝕜 s g) : StrictConvexOn 𝕜 s (f + g) :=\n  add_comm g f ▸ hg.add_convex_on hf\n#align convex_on.add_strict_convex_on ConvexOn.add_strictConvexOn\n-/\n\n",
 "add_strictConcaveOn":
 "#print ConcaveOn.add_strictConcaveOn /-\ntheorem ConcaveOn.add_strictConcaveOn (hf : ConcaveOn 𝕜 s f) (hg : StrictConcaveOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s (f + g) :=\n  hf.dual.add_strict_convex_on hg.dual\n#align concave_on.add_strict_concave_on ConcaveOn.add_strictConcaveOn\n-/\n\n",
 "add_convexOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print StrictConvexOn.add_convexOn /-\ntheorem StrictConvexOn.add_convexOn (hf : StrictConvexOn 𝕜 s f) (hg : ConvexOn 𝕜 s g) : StrictConvexOn 𝕜 s (f + g) :=\n  ⟨hf.1, fun x hx y hy hxy a b ha hb hab =>\n    calc\n      f («expr • » a x + «expr • » b y) + g («expr • » a x + «expr • » b y) <\n          «expr • » a (f x) + «expr • » b (f y) + («expr • » a (g x) + «expr • » b (g y)) :=\n        add_lt_add_of_lt_of_le (hf.2 hx hy hxy ha hb hab) (hg.2 hx hy ha.le hb.le hab)\n      _ = «expr • » a (f x + g x) + «expr • » b (f y + g y) := by rw [smul_add, smul_add, add_add_add_comm]\n      ⟩\n#align strict_convex_on.add_convex_on StrictConvexOn.add_convexOn\n-/\n\n",
 "add_concaveOn":
 "#print StrictConcaveOn.add_concaveOn /-\ntheorem StrictConcaveOn.add_concaveOn (hf : StrictConcaveOn 𝕜 s f) (hg : ConcaveOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s (f + g) :=\n  hf.dual.add_convex_on hg.dual\n#align strict_concave_on.add_concave_on StrictConcaveOn.add_concaveOn\n-/\n\n",
 "add":
 "#print StrictConcaveOn.add /-\ntheorem StrictConcaveOn.add (hf : StrictConcaveOn 𝕜 s f) (hg : StrictConcaveOn 𝕜 s g) : StrictConcaveOn 𝕜 s (f + g) :=\n  hf.dual.add hg\n#align strict_concave_on.add StrictConcaveOn.add\n-/\n\n"}