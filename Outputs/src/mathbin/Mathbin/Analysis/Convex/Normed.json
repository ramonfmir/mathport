{"thickening":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print Convex.thickening /-\ntheorem Convex.thickening (hs : Convex (exprℝ) s) (δ : exprℝ) : Convex (exprℝ) (thickening δ s) :=\n  by\n  rw [← add_ball_zero]\n  exact hs.add (convex_ball 0 _)\n#align convex.thickening Convex.thickening\n-/\n\n",
 "isConnected_setOf_sameRay_and_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print isConnected_setOf_sameRay_and_ne_zero /-\n/-- The set of nonzero vectors in the same ray as the nonzero vector `x` is connected. -/\ntheorem isConnected_setOf_sameRay_and_ne_zero {x : E} (hx : x ≠ 0) : IsConnected { y | SameRay (exprℝ) x y ∧ y ≠ 0 } :=\n  by\n  simp_rw [← exists_pos_left_iff_sameRay_and_ne_zero hx]\n  exact is_connected_Ioi.image _ (continuous_id.smul continuous_const).continuous_on\n#align is_connected_set_of_same_ray_and_ne_zero isConnected_setOf_sameRay_and_ne_zero\n-/\n\n",
 "isConnected_setOf_sameRay":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print isConnected_setOf_sameRay /-\n/-- The set of vectors in the same ray as `x` is connected. -/\ntheorem isConnected_setOf_sameRay (x : E) : IsConnected { y | SameRay (exprℝ) x y } :=\n  by\n  by_cases hx : x = 0; · simpa [hx] using isConnected_univ\n  simp_rw [← exists_nonneg_left_iff_sameRay hx]\n  exact is_connected_Ici.image _ (continuous_id.smul continuous_const).continuous_on\n#align is_connected_set_of_same_ray isConnected_setOf_sameRay\n-/\n\n",
 "dist_add_dist_of_mem_segment":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `segment -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print dist_add_dist_of_mem_segment /-\ntheorem dist_add_dist_of_mem_segment {x y z : E} (h : y ∈ segment x (exprℝ) z) : dist x y + dist y z = dist x z :=\n  by\n  simp only [dist_eq_norm, mem_segment_iff_sameRay] at *\n  simpa only [sub_add_sub_cancel', norm_sub_rev] using h.norm_add.symm\n#align dist_add_dist_of_mem_segment dist_add_dist_of_mem_segment\n-/\n\n",
 "cthickening":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print Convex.cthickening /-\ntheorem Convex.cthickening (hs : Convex (exprℝ) s) (δ : exprℝ) : Convex (exprℝ) (cthickening δ s) :=\n  by\n  obtain hδ | hδ := le_total 0 δ\n  · rw [cthickening_eq_Inter_thickening hδ]\n    exact convex_interᵢ₂ fun _ _ => hs.thickening _\n  · rw [cthickening_of_nonpos hδ]\n    exact hs.closure\n#align convex.cthickening Convex.cthickening\n-/\n\n",
 "convex_closedBall":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convex_closedBall /-\ntheorem convex_closedBall (a : E) (r : exprℝ) : Convex (exprℝ) (Metric.closedBall a r) := by\n  simpa only [Metric.closedBall, sep_univ] using (convexOn_univ_dist a).convex_le r\n#align convex_closed_ball convex_closedBall\n-/\n\n",
 "convex_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convex_ball /-\ntheorem convex_ball (a : E) (r : exprℝ) : Convex (exprℝ) (Metric.ball a r) := by\n  simpa only [Metric.ball, sep_univ] using (convexOn_univ_dist a).convex_lt r\n#align convex_ball convex_ball\n-/\n\n",
 "convexOn_univ_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convexOn_univ_norm /-\n/-- The norm on a real normed space is convex on the whole space. See also `seminorm.convex_on`\nand `convex_on_norm`. -/\ntheorem convexOn_univ_norm : ConvexOn (exprℝ) univ (norm : E → exprℝ) :=\n  convexOn_norm convex_univ\n#align convex_on_univ_norm convexOn_univ_norm\n-/\n\n",
 "convexOn_univ_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convexOn_univ_dist /-\ntheorem convexOn_univ_dist (z : E) : ConvexOn (exprℝ) univ fun z' => dist z' z :=\n  convexOn_dist z convex_univ\n#align convex_on_univ_dist convexOn_univ_dist\n-/\n\n",
 "convexOn_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convexOn_norm /-\n/-\nCopyright (c) 2020 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Alexander Bentkamp, Yury Kudryashov\n-/\n/-- The norm on a real normed space is convex on any convex set. See also `seminorm.convex_on`\nand `convex_on_univ_norm`. -/\ntheorem convexOn_norm (hs : Convex (exprℝ) s) : ConvexOn (exprℝ) s norm :=\n  ⟨hs, fun x hx y hy a b ha hb hab =>\n    calc\n      «expr‖ ‖» («expr • » a x + «expr • » b y) ≤ «expr‖ ‖» («expr • » a x) + «expr‖ ‖» («expr • » b y) :=\n        norm_add_le _ _\n      _ = a * «expr‖ ‖» x + b * «expr‖ ‖» y := by\n        rw [norm_smul, norm_smul, Real.norm_of_nonneg ha, Real.norm_of_nonneg hb]\n      ⟩\n#align convex_on_norm convexOn_norm\n-/\n\n",
 "convexOn_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convexOn_dist /-\ntheorem convexOn_dist (z : E) (hs : Convex (exprℝ) s) : ConvexOn (exprℝ) s fun z' => dist z' z := by\n  simpa [dist_eq_norm, preimage_preimage] using\n    (convexOn_norm (hs.translate (-z))).comp_affine_map (AffineMap.id (exprℝ) E - AffineMap.const (exprℝ) E z)\n#align convex_on_dist convexOn_dist\n-/\n\n",
 "convexHull_exists_dist_ge2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convexHull_exists_dist_ge2 /-\n/-- Given a point `x` in the convex hull of `s` and a point `y` in the convex hull of `t`,\nthere exist points `x' ∈ s` and `y' ∈ t` at distance at least `dist x y`. -/\ntheorem convexHull_exists_dist_ge2 {s t : Set E} {x y : E} (hx : x ∈ convexHull (exprℝ) s)\n    (hy : y ∈ convexHull (exprℝ) t) : ∃ x' ∈ s, ∃ y' ∈ t, dist x y ≤ dist x' y' :=\n  by\n  rcases convexHull_exists_dist_ge hx y with ⟨x', hx', Hx'⟩\n  rcases convexHull_exists_dist_ge hy x' with ⟨y', hy', Hy'⟩\n  use x', hx', y', hy'\n  exact le_trans Hx' (dist_comm y x' ▸ dist_comm y' x' ▸ Hy')\n#align convex_hull_exists_dist_ge2 convexHull_exists_dist_ge2\n-/\n\n",
 "convexHull_exists_dist_ge":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convexHull_exists_dist_ge /-\n/-- Given a point `x` in the convex hull of `s` and a point `y`, there exists a point\nof `s` at distance at least `dist x y` from `y`. -/\ntheorem convexHull_exists_dist_ge {s : Set E} {x : E} (hx : x ∈ convexHull (exprℝ) s) (y : E) :\n    ∃ x' ∈ s, dist x y ≤ dist x' y :=\n  (convexOn_dist y (convex_convexHull (exprℝ) _)).exists_ge_of_mem_convex_hull hx\n#align convex_hull_exists_dist_ge convexHull_exists_dist_ge\n-/\n\n",
 "convexHull_ediam":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convexHull_ediam /-\n/-- Emetric diameter of the convex hull of a set `s` equals the emetric diameter of `s. -/\n@[simp]\ntheorem convexHull_ediam (s : Set E) : EMetric.diam (convexHull (exprℝ) s) = EMetric.diam s :=\n  by\n  refine' (EMetric.diam_le fun x hx y hy => _).antisymm (EMetric.diam_mono <| subset_convexHull (exprℝ) s)\n  rcases convexHull_exists_dist_ge2 hx hy with ⟨x', hx', y', hy', H⟩\n  rw [edist_dist]\n  apply le_trans (ENNReal.ofReal_le_ofReal H)\n  rw [← edist_dist]\n  exact EMetric.edist_le_diam_of_mem hx' hy'\n#align convex_hull_ediam convexHull_ediam\n-/\n\n",
 "convexHull_diam":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convexHull_diam /-\n/-- Diameter of the convex hull of a set `s` equals the emetric diameter of `s. -/\n@[simp]\ntheorem convexHull_diam (s : Set E) : Metric.diam (convexHull (exprℝ) s) = Metric.diam s := by\n  simp only [Metric.diam, convexHull_ediam]\n#align convex_hull_diam convexHull_diam\n-/\n\n",
 "bounded_convexHull":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print bounded_convexHull /-\n/-- Convex hull of `s` is bounded if and only if `s` is bounded. -/\n@[simp]\ntheorem bounded_convexHull {s : Set E} : Metric.Bounded (convexHull (exprℝ) s) ↔ Metric.Bounded s := by\n  simp only [Metric.bounded_iff_ediam_ne_top, convexHull_ediam]\n#align bounded_convex_hull bounded_convexHull\n-/\n\n"}