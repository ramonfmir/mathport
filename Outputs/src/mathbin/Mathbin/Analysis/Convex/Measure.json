{"null_measurable_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- A convex set in a finite dimensional real vector space is null measurable with respect to an\nadditive Haar measure on this space. -/\nprotected theorem null_measurable_set (hs : Convex (exprℝ) s) : NullMeasurableSet s μ :=\n  null_measurable_set_of_null_frontier (hs.add_haar_frontier μ)\n#align null_measurable_set null_measurable_set\n\n",
 "add_haar_frontier":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌊ ⌋₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2022 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\n/-- Haar measure of the frontier of a convex set is zero. -/\ntheorem add_haar_frontier (hs : Convex (exprℝ) s) : μ (frontier s) = 0 :=\n  by\n  /- If `s` is included in a hyperplane, then `frontier s ⊆ closure s` is included in the same\n    hyperplane, hence it has measure zero. -/\n  cases' ne_or_eq (affineSpan (exprℝ) s) («expr⊤») with hspan hspan\n  · refine' measure_mono_null _ (add_haar_affine_subspace _ _ hspan)\n    exact\n      frontier_subset_closure.trans\n        (closure_minimal (subset_affineSpan _ _) (affineSpan (exprℝ) s).closed_of_finite_dimensional)\n  rw [← hs.interior_nonempty_iff_affine_span_eq_top] at hspan\n  rcases hspan with ⟨x, hx⟩\n  /- Without loss of generality, `s` is bounded. Indeed, `∂s ⊆ ⋃ n, ∂(s ∩ ball x (n + 1))`, hence it\n    suffices to prove that `∀ n, μ (s ∩ ball x (n + 1)) = 0`; the latter set is bounded.\n    -/\n  suffices H : ∀ t : Set E, Convex (exprℝ) t → x ∈ interior t → bounded t → μ (frontier t) = 0\n  · set B : ℕ → Set E := fun n => ball x (n + 1)\n    have :\n      μ\n          («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n            (frontier (s ∩ B n))) =\n        0 :=\n      by\n      refine'\n        measure_Union_null fun n => H _ (hs.inter (convex_ball _ _)) _ (bounded_ball.mono (inter_subset_right _ _))\n      rw [interior_inter, is_open_ball.interior_eq]\n      exact ⟨hx, mem_ball_self (add_pos_of_nonneg_of_pos n.cast_nonneg zero_lt_one)⟩\n    refine' measure_mono_null (fun y hy => _) this\n    clear this\n    set N : ℕ := «expr⌊ ⌋₊» (dist y x)\n    refine' mem_Union.2 ⟨N, _⟩\n    have hN : y ∈ B N := by\n      simp only [B, N]\n      simp [Nat.lt_floor_add_one]\n    suffices : y ∈ frontier (s ∩ B N) ∩ B N\n    exact this.1\n    rw [frontier_inter_open_inter is_open_ball]\n    exact ⟨hy, hN⟩\n  clear hx hs s\n  intro s hs hx hb\n  /- Since `s` is bounded, we have `μ (interior s) ≠ ∞`, hence it suffices to prove\n    `μ (closure s) ≤ μ (interior s)`. -/\n  replace hb : μ (interior s) ≠ ennreal.top\n  exact (hb.mono interior_subset).measure_lt_top.ne\n  suffices μ (closure s) ≤ μ (interior s) by\n    rwa [frontier, measure_diff interior_subset_closure is_open_interior.measurable_set hb, tsub_eq_zero_iff_le]\n  /- Due to `convex.closure_subset_image_homothety_interior_of_one_lt`, for any `r > 1` we have\n    `closure s ⊆ homothety x r '' interior s`, hence `μ (closure s) ≤ r ^ d * μ (interior s)`,\n    where `d = finrank ℝ E`. -/\n  set d : ℕ := FiniteDimensional.finrank (exprℝ) E\n  have : ∀ r : nnreal, 1 < r → μ (closure s) ≤ ↑(r ^ d) * μ (interior s) :=\n    by\n    intro r hr\n    refine' (measure_mono <| hs.closure_subset_image_homothety_interior_of_one_lt hx r hr).trans_eq _\n    rw [add_haar_image_homothety, ← NNReal.coe_pow, NNReal.abs_eq, ENNReal.ofReal_coe_nnreal]\n  have :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      (nhds_within.gt (1 : nnreal)) (μ (closure s) ≤ ↑(r ^ d) * μ (interior s)) :=\n    mem_of_superset self_mem_nhdsWithin this\n  -- Taking the limit as `r → 1`, we get `μ (closure s) ≤ μ (interior s)`.\n  refine' ge_of_tendsto _ this\n  refine'\n    (((ENNReal.continuous_mul_const hb).comp (ennreal.continuous_coe.comp (continuous_pow d))).tendsto' _ _ _).mono_left\n      nhdsWithin_le_nhds\n  simp\n#align add_haar_frontier add_haar_frontier\n\n"}