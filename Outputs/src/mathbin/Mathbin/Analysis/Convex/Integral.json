{"set_average_mem_hypograph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- **Jensen's inequality**: if a function `g : E → ℝ` is concave and continuous on a convex closed\nset `s`, `μ` is a finite non-zero measure on `α`, and `f : α → E` is a function sending\n`μ`-a.e. points of a set `t` to `s`, then the average value of `g ∘ f` over `t` is less than or\nequal to the value of `g` at the average value of `f` over `t` provided that both `f` and `g ∘ f`\nare integrable. -/\ntheorem concave_on.set_average_mem_hypograph (hg : concave_on (exprℝ) s g) (hgc : continuous_on g s) (hsc : is_closed s)\n    (h0 : μ t ≠ 0) (ht : μ t ≠ ennreal.top)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n        (μ.restrict t) (f x ∈ s))\n    (hfi : integrable_on f t μ) (hgi : integrable_on (g ∘ f) t μ) :\n    («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t (f x)\n          μ,\n        «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n          (g (f x)) μ) ∈\n      { p : E × exprℝ | p.1 ∈ s ∧ p.2 ≤ g p.1 } :=\n  by\n  simpa only [mem_set_of_eq, pi.neg_apply, average_neg, neg_le_neg_iff] using\n    hg.neg.set_average_mem_epigraph hgc.neg hsc h0 ht hfs hfi hgi.neg\n#align concave_on.set_average_mem_hypograph concave_on.set_average_mem_hypograph\n\n",
 "set_average_mem_epigraph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- **Jensen's inequality**: if a function `g : E → ℝ` is convex and continuous on a convex closed\nset `s`, `μ` is a finite non-zero measure on `α`, and `f : α → E` is a function sending\n`μ`-a.e. points of a set `t` to `s`, then the value of `g` at the average value of `f` over `t` is\nless than or equal to the average value of `g ∘ f` over `t` provided that both `f` and `g ∘ f` are\nintegrable. -/\ntheorem convex_on.set_average_mem_epigraph (hg : convex_on (exprℝ) s g) (hgc : continuous_on g s) (hsc : is_closed s)\n    (h0 : μ t ≠ 0) (ht : μ t ≠ ennreal.top)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n        (μ.restrict t) (f x ∈ s))\n    (hfi : integrable_on f t μ) (hgi : integrable_on (g ∘ f) t μ) :\n    («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t (f x)\n          μ,\n        «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n          (g (f x)) μ) ∈\n      { p : E × exprℝ | p.1 ∈ s ∧ g p.1 ≤ p.2 } :=\n  by\n  haveI : fact (μ t < ennreal.top) := ⟨ht.lt_top⟩\n  refine' hg.average_mem_epigraph hgc hsc _ hfs hfi hgi\n  rwa [ne.def, restrict_eq_zero]\n#align convex_on.set_average_mem_epigraph convex_on.set_average_mem_epigraph\n\n",
 "set_average_mem_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/-- If `μ` is a non-zero finite measure on `α`, `s` is a convex set in `E`, and `f` is an integrable\nfunction sending `μ`-a.e. points to `s`, then the average value of `f` belongs to `closure s`:\n`⨍ x, f x ∂μ ∈ s`. See also `convex.center_mass_mem` for a finite sum version of this lemma. -/\ntheorem convex.set_average_mem_closure (hs : convex (exprℝ) s) (h0 : μ t ≠ 0) (ht : μ t ≠ ennreal.top)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n        (μ.restrict t) (f x ∈ s))\n    (hfi : integrable_on f t μ) :\n    «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t (f x)\n        μ ∈\n      closure s :=\n  hs.closure.set_average_mem is_closed_closure h0 ht (hfs.mono fun x hx => subset_closure hx) hfi\n#align convex.set_average_mem_closure convex.set_average_mem_closure\n\n",
 "set_average_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/-- If `μ` is a non-zero finite measure on `α`, `s` is a convex closed set in `E`, and `f` is an\nintegrable function sending `μ`-a.e. points to `s`, then the average value of `f` belongs to `s`:\n`⨍ x, f x ∂μ ∈ s`. See also `convex.center_mass_mem` for a finite sum version of this lemma. -/\ntheorem convex.set_average_mem (hs : convex (exprℝ) s) (hsc : is_closed s) (h0 : μ t ≠ 0) (ht : μ t ≠ ennreal.top)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n        (μ.restrict t) (f x ∈ s))\n    (hfi : integrable_on f t μ) :\n    «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t (f x)\n        μ ∈\n      s :=\n  by\n  haveI : fact (μ t < ennreal.top) := ⟨ht.lt_top⟩\n  refine' hs.average_mem hsc _ hfs hfi\n  rwa [ne.def, restrict_eq_zero]\n#align convex.set_average_mem convex.set_average_mem\n\n",
 "map_set_average_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/-- **Jensen's inequality**: if a function `g : E → ℝ` is convex and continuous on a convex closed\nset `s`, `μ` is a finite non-zero measure on `α`, and `f : α → E` is a function sending\n`μ`-a.e. points of a set `t` to `s`, then the value of `g` at the average value of `f` over `t` is\nless than or equal to the average value of `g ∘ f` over `t` provided that both `f` and `g ∘ f` are\nintegrable. -/\ntheorem convex_on.map_set_average_le (hg : convex_on (exprℝ) s g) (hgc : continuous_on g s) (hsc : is_closed s)\n    (h0 : μ t ≠ 0) (ht : μ t ≠ ennreal.top)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n        (μ.restrict t) (f x ∈ s))\n    (hfi : integrable_on f t μ) (hgi : integrable_on (g ∘ f) t μ) :\n    g\n        («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n          (f x) μ) ≤\n      «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n        (g (f x)) μ :=\n  (hg.set_average_mem_epigraph hgc hsc h0 ht hfs hfi hgi).2\n#align convex_on.map_set_average_le convex_on.map_set_average_le\n\n",
 "map_integral_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/-- **Jensen's inequality**: if a function `g : E → ℝ` is convex and continuous on a convex closed\nset `s`, `μ` is a probability measure on `α`, and `f : α → E` is a function sending `μ`-a.e.  points\nto `s`, then the value of `g` at the expected value of `f` is less than or equal to the expected\nvalue of `g ∘ f` provided that both `f` and `g ∘ f` are integrable. See also\n`convex_on.map_center_mass_le` for a finite sum version of this lemma. -/\ntheorem convex_on.map_integral_le [is_probability_measure μ] (hg : convex_on (exprℝ) s g) (hgc : continuous_on g s)\n    (hsc : is_closed s)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) (hgi : integrable (g ∘ f) μ) :\n    g («expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (f x) μ) ≤\n      «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (g (f x)) μ :=\n  by simpa only [average_eq_integral] using hg.map_average_le hgc hsc (is_probability_measure.ne_zero μ) hfs hfi hgi\n#align convex_on.map_integral_le convex_on.map_integral_le\n\n",
 "map_average_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/-- **Jensen's inequality**: if a function `g : E → ℝ` is convex and continuous on a convex closed\nset `s`, `μ` is a finite non-zero measure on `α`, and `f : α → E` is a function sending\n`μ`-a.e. points to `s`, then the value of `g` at the average value of `f` is less than or equal to\nthe average value of `g ∘ f` provided that both `f` and `g ∘ f` are integrable. See also\n`convex_on.map_center_mass_le` for a finite sum version of this lemma. -/\ntheorem convex_on.map_average_le [is_finite_measure μ] (hg : convex_on (exprℝ) s g) (hgc : continuous_on g s)\n    (hsc : is_closed s) (hμ : μ ≠ 0)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) (hgi : integrable (g ∘ f) μ) :\n    g («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x) μ) ≤\n      «expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (g (f x)) μ :=\n  (hg.average_mem_epigraph hgc hsc hμ hfs hfi hgi).2\n#align convex_on.map_average_le convex_on.map_average_le\n\n",
 "le_map_set_average":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/-- **Jensen's inequality**: if a function `g : E → ℝ` is concave and continuous on a convex closed\nset `s`, `μ` is a finite non-zero measure on `α`, and `f : α → E` is a function sending\n`μ`-a.e. points of a set `t` to `s`, then the average value of `g ∘ f` over `t` is less than or\nequal to the value of `g` at the average value of `f` over `t` provided that both `f` and `g ∘ f`\nare integrable. -/\ntheorem concave_on.le_map_set_average (hg : concave_on (exprℝ) s g) (hgc : continuous_on g s) (hsc : is_closed s)\n    (h0 : μ t ≠ 0) (ht : μ t ≠ ennreal.top)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n        (μ.restrict t) (f x ∈ s))\n    (hfi : integrable_on f t μ) (hgi : integrable_on (g ∘ f) t μ) :\n    «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n        (g (f x)) μ ≤\n      g\n        («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n          (f x) μ) :=\n  (hg.set_average_mem_hypograph hgc hsc h0 ht hfs hfi hgi).2\n#align concave_on.le_map_set_average concave_on.le_map_set_average\n\n",
 "le_map_integral":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/-- **Jensen's inequality**: if a function `g : E → ℝ` is concave and continuous on a convex closed\nset `s`, `μ` is a probability measure on `α`, and `f : α → E` is a function sending `μ`-a.e.  points\nto `s`, then the expected value of `g ∘ f` is less than or equal to the value of `g` at the expected\nvalue of `f` provided that both `f` and `g ∘ f` are integrable. -/\ntheorem concave_on.le_map_integral [is_probability_measure μ] (hg : concave_on (exprℝ) s g) (hgc : continuous_on g s)\n    (hsc : is_closed s)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) (hgi : integrable (g ∘ f) μ) :\n    «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (g (f x)) μ ≤\n      g («expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (f x) μ) :=\n  by simpa only [average_eq_integral] using hg.le_map_average hgc hsc (is_probability_measure.ne_zero μ) hfs hfi hgi\n#align concave_on.le_map_integral concave_on.le_map_integral\n\n",
 "le_map_average":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/-- **Jensen's inequality**: if a function `g : E → ℝ` is concave and continuous on a convex closed\nset `s`, `μ` is a finite non-zero measure on `α`, and `f : α → E` is a function sending\n`μ`-a.e. points to `s`, then the average value of `g ∘ f` is less than or equal to the value of `g`\nat the average value of `f` provided that both `f` and `g ∘ f` are integrable. See also\n`concave_on.le_map_center_mass` for a finite sum version of this lemma. -/\ntheorem concave_on.le_map_average [is_finite_measure μ] (hg : concave_on (exprℝ) s g) (hgc : continuous_on g s)\n    (hsc : is_closed s) (hμ : μ ≠ 0)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) (hgi : integrable (g ∘ f) μ) :\n    «expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (g (f x)) μ ≤\n      g («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x) μ) :=\n  (hg.average_mem_hypograph hgc hsc hμ hfs hfi hgi).2\n#align concave_on.le_map_average concave_on.le_map_average\n\n",
 "integral_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/-\nCopyright (c) 2020 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov\n-/\n/-- If `μ` is a probability measure on `α`, `s` is a convex closed set in `E`, and `f` is an\nintegrable function sending `μ`-a.e. points to `s`, then the expected value of `f` belongs to `s`:\n`∫ x, f x ∂μ ∈ s`. See also `convex.sum_mem` for a finite sum version of this lemma. -/\ntheorem convex.integral_mem [is_probability_measure μ] (hs : convex (exprℝ) s) (hsc : is_closed s)\n    (hf :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) :\n    «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (f x) μ ∈ s :=\n  by\n  borelize E\n  rcases hfi.ae_strongly_measurable with ⟨g, hgm, hfg⟩\n  haveI : separable_space (range g ∩ s : set E) := (hgm.is_separable_range.mono (inter_subset_left _ _)).separable_space\n  obtain ⟨y₀, h₀⟩ : (range g ∩ s).nonempty :=\n    by\n    rcases(hf.and hfg).exists with ⟨x₀, h₀⟩\n    exact ⟨f x₀, by simp only [h₀.2, mem_range_self], h₀.1⟩\n  rw [integral_congr_ae hfg]\n  rw [integrable_congr hfg] at hfi\n  have hg :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (g x ∈ closure (range g ∩ s)) :=\n    by\n    filter_upwards [hfg.rw (fun x y => y ∈ s) hf] with x hx\n    apply subset_closure\n    exact ⟨mem_range_self _, hx⟩\n  set G : ℕ → simple_func α E := simple_func.approx_on _ hgm.measurable (range g ∩ s) y₀ h₀\n  have :\n    tendsto (fun n => (G n).integral μ) at_top\n      (nhds <|\n        «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (g x) μ) :=\n    tendsto_integral_approx_on_of_measurable hfi _ hg _ (integrable_const _)\n  refine' hsc.mem_of_tendsto this (eventually_of_forall fun n => hs.sum_mem _ _ _)\n  · exact fun _ _ => ennreal.to_real_nonneg\n  · rw [← ennreal.to_real_sum, (G n).sum_range_measure_preimage_singleton, measure_univ, ennreal.one_to_real]\n    exact fun _ _ => measure_ne_top _ _\n  · simp only [simple_func.mem_range, forall_range_iff]\n    intro x\n    apply inter_subset_right (range g)\n    exact simple_func.approx_on_mem hgm.measurable _ _ _\n#align convex.integral_mem convex.integral_mem\n\n",
 "average_mem_interior_of_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/-- If an integrable function `f : α → E` takes values in a convex set `s` and for some set `t` of\npositive measure, the average value of `f` over `t` belongs to the interior of `s`, then the average\nof `f` over the whole space belongs to the interior of `s`. -/\ntheorem convex.average_mem_interior_of_set [is_finite_measure μ] (hs : convex (exprℝ) s) (h0 : μ t ≠ 0)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ)\n    (ht :\n      «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t (f x)\n          μ ∈\n        interior s) :\n    «expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x) μ ∈\n      interior s :=\n  by\n  rw [← measure_to_measurable] at h0; rw [← restrict_to_measurable (measure_ne_top μ t)] at ht\n  by_cases h0' : μ («expr ᶜ» (to_measurable μ t)) = 0\n  · rw [← ae_eq_univ] at h0'\n    rwa [restrict_congr_set h0', restrict_univ] at ht\n  exact\n    hs.open_segment_interior_closure_subset_interior ht\n      (hs.set_average_mem_closure h0' (measure_ne_top _ _) (ae_restrict_of_ae hfs) hfi.integrable_on)\n      (average_mem_open_segment_compl_self (measurable_set_to_measurable μ t).null_measurable_set h0 h0' hfi)\n#align convex.average_mem_interior_of_set convex.average_mem_interior_of_set\n\n",
 "average_mem_hypograph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem concave_on.average_mem_hypograph [is_finite_measure μ] (hg : concave_on (exprℝ) s g) (hgc : continuous_on g s)\n    (hsc : is_closed s) (hμ : μ ≠ 0)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) (hgi : integrable (g ∘ f) μ) :\n    («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x) μ,\n        «expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (g (f x))\n          μ) ∈\n      { p : E × exprℝ | p.1 ∈ s ∧ p.2 ≤ g p.1 } :=\n  by\n  simpa only [mem_set_of_eq, pi.neg_apply, average_neg, neg_le_neg_iff] using\n    hg.neg.average_mem_epigraph hgc.neg hsc hμ hfs hfi hgi.neg\n#align concave_on.average_mem_hypograph concave_on.average_mem_hypograph\n\n",
 "average_mem_epigraph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem convex_on.average_mem_epigraph [is_finite_measure μ] (hg : convex_on (exprℝ) s g) (hgc : continuous_on g s)\n    (hsc : is_closed s) (hμ : μ ≠ 0)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) (hgi : integrable (g ∘ f) μ) :\n    («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x) μ,\n        «expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (g (f x))\n          μ) ∈\n      { p : E × exprℝ | p.1 ∈ s ∧ g p.1 ≤ p.2 } :=\n  by\n  have ht_mem :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      ((f x, g (f x)) ∈ { p : E × exprℝ | p.1 ∈ s ∧ g p.1 ≤ p.2 }) :=\n    hfs.mono fun x hx => ⟨hx, le_rfl⟩\n  simpa only [average_pair hfi hgi] using hg.convex_epigraph.average_mem (hsc.epigraph hgc) hμ ht_mem (hfi.prod_mk hgi)\n#align convex_on.average_mem_epigraph convex_on.average_mem_epigraph\n\n",
 "average_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/-- If `μ` is a non-zero finite measure on `α`, `s` is a convex closed set in `E`, and `f` is an\nintegrable function sending `μ`-a.e. points to `s`, then the average value of `f` belongs to `s`:\n`⨍ x, f x ∂μ ∈ s`. See also `convex.center_mass_mem` for a finite sum version of this lemma. -/\ntheorem convex.average_mem [is_finite_measure μ] (hs : convex (exprℝ) s) (hsc : is_closed s) (hμ : μ ≠ 0)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) :\n    «expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x) μ ∈ s :=\n  by\n  have : is_probability_measure («expr • » (μ univ)⁻¹ μ) := is_probability_measure_smul hμ\n  refine' hs.integral_mem hsc (ae_mono' _ hfs) hfi.to_average\n  exact absolutely_continuous.smul (refl _) _\n#align convex.average_mem convex.average_mem\n\n",
 "ae_eq_const_or_norm_set_integral_lt_of_norm_le_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ » -/\n/-- If `E` is a strictly convex normed space and `f : α → E` is a function such that `‖f x‖ ≤ C`\na.e. on a set `t` of finite measure, then either this function is a.e. equal to its average value on\n`t`, or the norm of its integral over `t` is strictly less than `(μ t).to_real * C`. -/\ntheorem ae_eq_const_or_norm_set_integral_lt_of_norm_le_const [strict_convex_space (exprℝ) E] (ht : μ t ≠ ennreal.top)\n    (h_le :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n        (μ.restrict t) («expr‖ ‖» (f x) ≤ C)) :\n    «expr =ᵐ[ ] » f (μ.restrict t)\n        (const α\n          («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n            (f x) μ)) ∨\n      «expr‖ ‖»\n          («expr∫ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in , ∂ »\" t\n            (f x) μ) <\n        (μ t).to_real * C :=\n  by\n  haveI := fact.mk ht.lt_top\n  rw [← restrict_apply_univ]\n  exact ae_eq_const_or_norm_integral_lt_of_norm_le_const h_le\n#align ae_eq_const_or_norm_set_integral_lt_of_norm_le_const ae_eq_const_or_norm_set_integral_lt_of_norm_le_const\n\n",
 "ae_eq_const_or_norm_integral_lt_of_norm_le_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/-- If `E` is a strictly convex normed space and `f : α → E` is a function such that `‖f x‖ ≤ C`\na.e., then either this function is a.e. equal to its average value, or the norm of its integral is\nstrictly less than `(μ univ).to_real * C`. -/\ntheorem ae_eq_const_or_norm_integral_lt_of_norm_le_const [strict_convex_space (exprℝ) E] [is_finite_measure μ]\n    (h_le :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ C)) :\n    «expr =ᵐ[ ] » f μ\n        (const α\n          («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x)\n            μ)) ∨\n      «expr‖ ‖»\n          («expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\" (f x)\n            μ) <\n        (μ univ).to_real * C :=\n  by\n  cases' eq_or_ne μ 0 with h₀ h₀\n  · left\n    simp [h₀]\n  have hμ : 0 < (μ univ).to_real := by simp [ennreal.to_real_pos_iff, pos_iff_ne_zero, h₀, measure_lt_top]\n  refine' (ae_eq_const_or_norm_average_lt_of_norm_le_const h_le).imp_right fun H => _\n  rwa [average_eq, norm_smul, norm_inv, real.norm_eq_abs, abs_of_pos hμ, ← div_eq_inv_mul, div_lt_iff' hμ] at H\n#align ae_eq_const_or_norm_integral_lt_of_norm_le_const ae_eq_const_or_norm_integral_lt_of_norm_le_const\n\n",
 "ae_eq_const_or_norm_average_lt_of_norm_le_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/-- If `E` is a strictly convex normed space and `f : α → E` is a function such that `‖f x‖ ≤ C`\na.e., then either this function is a.e. equal to its average value, or the norm of its average value\nis strictly less than `C`. -/\ntheorem ae_eq_const_or_norm_average_lt_of_norm_le_const [strict_convex_space (exprℝ) E]\n    (h_le :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        («expr‖ ‖» (f x) ≤ C)) :\n    «expr =ᵐ[ ] » f μ\n        (const α\n          («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x)\n            μ)) ∨\n      «expr‖ ‖»\n          («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x)\n            μ) <\n        C :=\n  by\n  cases' le_or_lt C 0 with hC0 hC0\n  · have : «expr =ᵐ[ ] » f μ 0 := h_le.mono fun x hx => norm_le_zero_iff.1 (hx.trans hC0)\n    simp only [average_congr this, pi.zero_apply, average_zero]\n    exact or.inl this\n  by_cases hfi : integrable f μ; swap\n  · simp [average_eq, integral_undef hfi, hC0, ennreal.to_real_pos_iff]\n  cases' (le_top : μ univ ≤ ennreal.top).eq_or_lt with hμt hμt; · simp [average_eq, hμt, hC0]\n  haveI : is_finite_measure μ := ⟨hμt⟩\n  replace h_le :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (f x ∈ closed_ball (0 : E) C);\n  · simpa only [mem_closed_ball_zero_iff]\n  simpa only [interior_closed_ball _ hC0.ne', mem_ball_zero_iff] using\n    (strict_convex_closed_ball (exprℝ) (0 : E) C).ae_eq_const_or_average_mem_interior is_closed_ball h_le hfi\n#align ae_eq_const_or_norm_average_lt_of_norm_le_const ae_eq_const_or_norm_average_lt_of_norm_le_const\n\n",
 "ae_eq_const_or_map_average_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/-- **Jensen's inequality**, strict version: if an integrable function `f : α → E` takes values in a\nconvex closed set `s`, and `g : E → ℝ` is continuous and strictly convex on `s`, then\neither `f` is a.e. equal to its average value, or `g (⨍ x, f x ∂μ) < ⨍ x, g (f x) ∂μ`. -/\ntheorem strict_convex_on.ae_eq_const_or_map_average_lt [is_finite_measure μ] (hg : strict_convex_on (exprℝ) s g)\n    (hgc : continuous_on g s) (hsc : is_closed s)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) (hgi : integrable (g ∘ f) μ) :\n    «expr =ᵐ[ ] » f μ\n        (const α\n          («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x)\n            μ)) ∨\n      g («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x) μ) <\n        «expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (g (f x))\n          μ :=\n  by\n  have :\n    ∀ {t},\n      μ t ≠ 0 →\n        «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n              (f x) μ ∈\n            s ∧\n          g\n              («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\"\n                t (f x) μ) ≤\n            «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n              (g (f x)) μ :=\n    fun t ht =>\n    hg.convex_on.set_average_mem_epigraph hgc hsc ht (measure_ne_top _ _) (ae_restrict_of_ae hfs) hfi.integrable_on\n      hgi.integrable_on\n  refine' (ae_eq_const_or_exists_average_ne_compl hfi).imp_right _\n  rintro ⟨t, hm, h₀, h₀', hne⟩\n  rcases average_mem_open_segment_compl_self hm.null_measurable_set h₀ h₀' (hfi.prod_mk hgi) with\n    ⟨a, b, ha, hb, hab, h_avg⟩\n  simp only [average_pair hfi hgi, average_pair hfi.integrable_on hgi.integrable_on, Prod.smul_mk, Prod.mk_add_mk,\n    prod.mk.inj_iff, (· ∘ ·)] at h_avg\n  rw [← h_avg.1, ← h_avg.2]\n  calc\n    g\n          («expr • » a\n              («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\"\n                t (f x) μ) +\n            «expr • » b\n              («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\"\n                («expr ᶜ» t) (f x) μ)) <\n        a *\n            g\n              («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\"\n                t (f x) μ) +\n          b *\n            g\n              («expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\"\n                («expr ᶜ» t) (f x) μ) :=\n      hg.2 (this h₀).1 (this h₀').1 hne ha hb hab\n    _ ≤\n        a *\n            «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n              (g (f x)) μ +\n          b *\n            «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\"\n              («expr ᶜ» t) (g (f x)) μ :=\n      add_le_add (mul_le_mul_of_nonneg_left (this h₀).2 ha.le) (mul_le_mul_of_nonneg_left (this h₀').2 hb.le)\n    \n#align strict_convex_on.ae_eq_const_or_map_average_lt strict_convex_on.ae_eq_const_or_map_average_lt\n\n",
 "ae_eq_const_or_lt_map_average":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/-- **Jensen's inequality**, strict version: if an integrable function `f : α → E` takes values in a\nconvex closed set `s`, and `g : E → ℝ` is continuous and strictly concave on `s`, then\neither `f` is a.e. equal to its average value, or `⨍ x, g (f x) ∂μ < g (⨍ x, f x ∂μ)`. -/\ntheorem strict_concave_on.ae_eq_const_or_lt_map_average [is_finite_measure μ] (hg : strict_concave_on (exprℝ) s g)\n    (hgc : continuous_on g s) (hsc : is_closed s)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) (hgi : integrable (g ∘ f) μ) :\n    «expr =ᵐ[ ] » f μ\n        (const α\n          («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x)\n            μ)) ∨\n      «expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (g (f x)) μ <\n        g\n          («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x)\n            μ) :=\n  by\n  simpa only [pi.neg_apply, average_neg, neg_lt_neg_iff] using\n    hg.neg.ae_eq_const_or_map_average_lt hgc.neg hsc hfs hfi hgi.neg\n#align strict_concave_on.ae_eq_const_or_lt_map_average strict_concave_on.ae_eq_const_or_lt_map_average\n\n",
 "ae_eq_const_or_exists_average_ne_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/-- If `f : α → E` is an integrable function, then either it is a.e. equal to the constant\n`⨍ x, f x ∂μ` or there exists a measurable set such that `μ t ≠ 0`, `μ tᶜ ≠ 0`, and the average\nvalues of `f` over `t` and `tᶜ` are different. -/\ntheorem ae_eq_const_or_exists_average_ne_compl [is_finite_measure μ] (hfi : integrable f μ) :\n    «expr =ᵐ[ ] » f μ\n        (const α\n          («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x)\n            μ)) ∨\n      ∃ t,\n        measurable_set t ∧\n          μ t ≠ 0 ∧\n            μ («expr ᶜ» t) ≠ 0 ∧\n              «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\"\n                  t (f x) μ ≠\n                «expr⨍ in , ∂ »\n                  \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" («expr ᶜ» t)\n                  (f x) μ :=\n  by\n  refine' or_iff_not_imp_right.mpr fun H => _; push_neg  at H\n  refine' hfi.ae_eq_of_forall_set_integral_eq _ _ (integrable_const _) fun t ht ht' => _; clear ht'\n  simp only [const_apply, set_integral_const]\n  by_cases h₀ : μ t = 0\n  · rw [restrict_eq_zero.2 h₀, integral_zero_measure, h₀, ennreal.zero_to_real, zero_smul]\n  by_cases h₀' : μ («expr ᶜ» t) = 0\n  · rw [← ae_eq_univ] at h₀'\n    rw [restrict_congr_set h₀', restrict_univ, measure_congr h₀', measure_smul_average]\n  have := average_mem_open_segment_compl_self ht.null_measurable_set h₀ h₀' hfi\n  rw [← H t ht h₀ h₀', open_segment_same, mem_singleton_iff] at this\n  rw [this, measure_smul_set_average _ (measure_ne_top μ _)]\n#align ae_eq_const_or_exists_average_ne_compl ae_eq_const_or_exists_average_ne_compl\n\n",
 "ae_eq_const_or_average_mem_interior":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨍ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ » -/\n/-- If an integrable function `f : α → E` takes values in a strictly convex closed set `s`, then\neither it is a.e. equal to its average value, or its average value belongs to the interior of\n`s`. -/\ntheorem strict_convex.ae_eq_const_or_average_mem_interior [is_finite_measure μ] (hs : strict_convex (exprℝ) s)\n    (hsc : is_closed s)\n    (hfs :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ (f x ∈ s))\n    (hfi : integrable f μ) :\n    «expr =ᵐ[ ] » f μ\n        (const α\n          («expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x)\n            μ)) ∨\n      «expr⨍ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ , ∂ »\" (f x) μ ∈\n        interior s :=\n  by\n  have :\n    ∀ {t},\n      μ t ≠ 0 →\n        «expr⨍ in , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨍ in , ∂ »\" t\n            (f x) μ ∈\n          s :=\n    fun t ht => hs.convex.set_average_mem hsc ht (measure_ne_top _ _) (ae_restrict_of_ae hfs) hfi.integrable_on\n  refine' (ae_eq_const_or_exists_average_ne_compl hfi).imp_right _\n  rintro ⟨t, hm, h₀, h₀', hne⟩\n  exact\n    hs.open_segment_subset (this h₀) (this h₀') hne\n      (average_mem_open_segment_compl_self hm.null_measurable_set h₀ h₀' hfi)\n#align strict_convex.ae_eq_const_or_average_mem_interior strict_convex.ae_eq_const_or_average_mem_interior\n\n"}