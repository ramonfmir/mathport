{"zero_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[simp]\ntheorem zero_apply {x : E} : (0 : «expr𝓢( , )» E F) x = 0 :=\n  rfl\n#align zero_apply zero_apply\n\n",
 "to_bounded_continuous_function_lm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[simp]\ntheorem to_bounded_continuous_function_lm_apply (f : «expr𝓢( , )» E F) (x : E) :\n    to_bounded_continuous_function_lm 𝕜 E F f x = f x :=\n  rfl\n#align to_bounded_continuous_function_lm_apply to_bounded_continuous_function_lm_apply\n\n",
 "to_bounded_continuous_function_clm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[simp]\ntheorem to_bounded_continuous_function_clm_apply (f : «expr𝓢( , )» E F) (x : E) :\n    to_bounded_continuous_function_clm 𝕜 E F f x = f x :=\n  rfl\n#align to_bounded_continuous_function_clm_apply to_bounded_continuous_function_clm_apply\n\n",
 "to_bounded_continuous_function_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[simp]\ntheorem to_bounded_continuous_function_apply (f : «expr𝓢( , )» E F) (x : E) :\n    f.to_bounded_continuous_function x = f x :=\n  rfl\n#align to_bounded_continuous_function_apply to_bounded_continuous_function_apply\n\n",
 "sub_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n-- exact fails with deterministic timeout\n@[simp]\ntheorem sub_apply {f g : «expr𝓢( , )» E F} {x : E} : (f - g) x = f x - g x :=\n  rfl\n#align sub_apply sub_apply\n\n",
 "smul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_apply {f : «expr𝓢( , )» E F} {c : 𝕜} {x : E} : («expr • » c f) x = «expr • » c (f x) :=\n  rfl\n#align smul_apply smul_apply\n\n",
 "smooth":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Every Schwartz function is smooth. -/\ntheorem smooth (f : «expr𝓢( , )» E F) (n : «exprℕ∞») : cont_diff (exprℝ) n f :=\n  f.smooth'.of_le le_top\n#align smooth smooth\n\n",
 "seminorm_le_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If one controls the seminorm for every `x`, then one controls the seminorm. -/\ntheorem seminorm_le_bound (k n : ℕ) (f : «expr𝓢( , )» E F) {M : exprℝ} (hMp : 0 ≤ M)\n    (hM : ∀ x, «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n f x) ≤ M) : seminorm 𝕜 k n f ≤ M :=\n  f.seminorm_aux_le_bound k n hMp hM\n#align seminorm_le_bound seminorm_le_bound\n\n",
 "seminorm_aux_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\ntheorem seminorm_aux_zero (k n : ℕ) : (0 : «expr𝓢( , )» E F).seminorm_aux k n = 0 :=\n  le_antisymm (seminorm_aux_le_bound k n _ rfl.le fun _ => by simp [pi.zero_def]) (seminorm_aux_nonneg _ _ _)\n#align seminorm_aux_zero seminorm_aux_zero\n\n",
 "seminorm_aux_smul_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem seminorm_aux_smul_le (k n : ℕ) (c : 𝕜) (f : «expr𝓢( , )» E F) :\n    («expr • » c f).seminorm_aux k n ≤ «expr‖ ‖» c * f.seminorm_aux k n :=\n  by\n  refine'\n    («expr • » c f).seminorm_aux_le_bound k n (mul_nonneg (norm_nonneg _) (seminorm_aux_nonneg _ _ _)) fun x =>\n      (decay_smul_aux k n f c x).le.trans _\n  rw [mul_assoc]\n  exact mul_le_mul_of_nonneg_left (f.le_seminorm_aux k n x) (norm_nonneg _)\n#align seminorm_aux_smul_le seminorm_aux_smul_le\n\n",
 "seminorm_aux_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\ntheorem seminorm_aux_nonneg (k n : ℕ) (f : «expr𝓢( , )» E F) : 0 ≤ f.seminorm_aux k n :=\n  le_cinfₛ (bounds_nonempty k n f) fun _ ⟨hx, _⟩ => hx\n#align seminorm_aux_nonneg seminorm_aux_nonneg\n\n",
 "seminorm_aux_le_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If one controls the norm of every `A x`, then one controls the norm of `A`. -/\ntheorem seminorm_aux_le_bound (k n : ℕ) (f : «expr𝓢( , )» E F) {M : exprℝ} (hMp : 0 ≤ M)\n    (hM : ∀ x, «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n f x) ≤ M) : f.seminorm_aux k n ≤ M :=\n  cinfₛ_le (bounds_bdd_below k n f) ⟨hMp, hM⟩\n#align seminorm_aux_le_bound seminorm_aux_le_bound\n\n",
 "seminorm_aux_add_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\ntheorem seminorm_aux_add_le (k n : ℕ) (f g : «expr𝓢( , )» E F) :\n    (f + g).seminorm_aux k n ≤ f.seminorm_aux k n + g.seminorm_aux k n :=\n  (f + g).seminorm_aux_le_bound k n (add_nonneg (seminorm_aux_nonneg _ _ _) (seminorm_aux_nonneg _ _ _)) fun x =>\n    (decay_add_le_aux k n f g x).trans <| add_le_add (f.le_seminorm_aux k n x) (g.le_seminorm_aux k n x)\n#align seminorm_aux_add_le seminorm_aux_add_le\n\n",
 "schwartz_with_seminorms":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem _root_.schwartz_with_seminorms : with_seminorms (schwartz_seminorm_family 𝕜 E F) :=\n  by\n  have A : with_seminorms (schwartz_seminorm_family (exprℝ) E F) := ⟨rfl⟩\n  rw [seminorm_family.with_seminorms_iff_nhds_eq_infi] at A⊢\n  rw [A]\n  rfl\n#align schwartz_with_seminorms schwartz_with_seminorms\n\n",
 "schwartz_seminorm_family_apply_zero":
 "@[simp]\ntheorem schwartz_seminorm_family_apply_zero : schwartz_seminorm_family 𝕜 E F 0 = schwartz_map.seminorm 𝕜 0 0 :=\n  rfl\n#align schwartz_seminorm_family_apply_zero schwartz_seminorm_family_apply_zero\n\n",
 "schwartz_seminorm_family_apply":
 "@[simp]\ntheorem schwartz_seminorm_family_apply (n k : ℕ) :\n    schwartz_seminorm_family 𝕜 E F (n, k) = schwartz_map.seminorm 𝕜 n k :=\n  rfl\n#align schwartz_seminorm_family_apply schwartz_seminorm_family_apply\n\n",
 "norm_pow_mul_le_seminorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_pow_mul_le_seminorm (f : «expr𝓢( , )» E F) (k : ℕ) (x₀ : E) :\n    «expr‖ ‖» x₀ ^ k * «expr‖ ‖» (f x₀) ≤ (schwartz_map.seminorm 𝕜 k 0) f :=\n  by\n  have := schwartz_map.le_seminorm 𝕜 k 0 f x₀\n  rwa [norm_iterated_fderiv_zero] at this\n#align norm_pow_mul_le_seminorm norm_pow_mul_le_seminorm\n\n",
 "norm_le_seminorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_le_seminorm (f : «expr𝓢( , )» E F) (x₀ : E) : «expr‖ ‖» (f x₀) ≤ (schwartz_map.seminorm 𝕜 0 0) f :=\n  by\n  have := norm_pow_mul_le_seminorm 𝕜 f 0 x₀\n  rwa [pow_zero, one_mul] at this\n#align norm_le_seminorm norm_le_seminorm\n\n",
 "norm_iterated_fderiv_le_seminorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem norm_iterated_fderiv_le_seminorm (f : «expr𝓢( , )» E F) (n : ℕ) (x₀ : E) :\n    «expr‖ ‖» (iterated_fderiv (exprℝ) n f x₀) ≤ (schwartz_map.seminorm 𝕜 0 n) f :=\n  by\n  have := schwartz_map.le_seminorm 𝕜 0 n f x₀\n  rwa [pow_zero, one_mul] at this\n#align norm_iterated_fderiv_le_seminorm norm_iterated_fderiv_le_seminorm\n\n",
 "le_seminorm_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem le_seminorm_aux (k n : ℕ) (f : «expr𝓢( , )» E F) (x : E) :\n    «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n («expr⇑ » f) x) ≤ f.seminorm_aux k n :=\n  le_cinfₛ (bounds_nonempty k n f) fun y ⟨_, h⟩ => h x\n#align le_seminorm_aux le_seminorm_aux\n\n",
 "le_seminorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The seminorm controls the Schwartz estimate for any fixed `x`. -/\ntheorem le_seminorm (k n : ℕ) (f : «expr𝓢( , )» E F) (x : E) :\n    «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n f x) ≤ seminorm 𝕜 k n f :=\n  f.le_seminorm_aux k n x\n#align le_seminorm le_seminorm\n\n",
 "fderiv_lm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[simp, norm_cast]\ntheorem fderiv_lm_apply (f : «expr𝓢( , )» E F) : fderiv_lm 𝕜 f = schwartz_map.fderiv f :=\n  rfl\n#align fderiv_lm_apply fderiv_lm_apply\n\n",
 "fderiv_clm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[simp, norm_cast]\ntheorem fderiv_clm_apply (f : «expr𝓢( , )» E F) : fderiv_clm 𝕜 f = schwartz_map.fderiv f :=\n  rfl\n#align fderiv_clm_apply fderiv_clm_apply\n\n",
 "fderiv_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem fderiv_apply (f : «expr𝓢( , )» E F) (x : E) : f.fderiv x = fderiv (exprℝ) f x :=\n  rfl\n#align fderiv_apply fderiv_apply\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[ext]\ntheorem ext {f g : «expr𝓢( , )» E F} (h : ∀ x, (f : E → F) x = g x) : f = g :=\n  fun_like.ext f g h\n#align ext ext\n\n",
 "differentiable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Every Schwartz function is differentiable. -/\n@[protected]\ntheorem differentiable (f : «expr𝓢( , )» E F) : differentiable (exprℝ) f :=\n  (f.smooth 1).differentiable rfl.le\n#align differentiable differentiable\n\n",
 "delta_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[simp]\ntheorem delta_apply (x₀ : E) (f : «expr𝓢( , )» E F) : delta 𝕜 F x₀ f = f x₀ :=\n  rfl\n#align delta_apply delta_apply\n\n",
 "decay_smul_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem decay_smul_aux (k n : ℕ) (f : «expr𝓢( , )» E F) (c : 𝕜) (x : E) :\n    «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n («expr • » c f) x) =\n      «expr‖ ‖» c * «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n f x) :=\n  by rw [mul_comm («expr‖ ‖» c), mul_assoc, iterated_fderiv_const_smul_apply (f.smooth _), norm_smul]\n#align decay_smul_aux decay_smul_aux\n\n",
 "decay_neg_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem decay_neg_aux (k n : ℕ) (f : «expr𝓢( , )» E F) (x : E) :\n    «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n (-f) x) =\n      «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n f x) :=\n  by\n  nth_rw 4 [← norm_neg]\n  congr\n  exact iterated_fderiv_neg_apply\n#align decay_neg_aux decay_neg_aux\n\n",
 "decay_add_le_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem decay_add_le_aux (k n : ℕ) (f g : «expr𝓢( , )» E F) (x : E) :\n    «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n (f + g) x) ≤\n      «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n f x) +\n        «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n g x) :=\n  by\n  rw [← mul_add]\n  refine' mul_le_mul_of_nonneg_left _ (by positivity)\n  convert norm_add_le _ _\n  exact iterated_fderiv_add_apply (f.smooth _) (g.smooth _)\n#align decay_add_le_aux decay_add_le_aux\n\n",
 "decay":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2022 Moritz Doll. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Moritz Doll\n-/\n/-- All derivatives of a Schwartz function are rapidly decaying. -/\ntheorem decay (f : «expr𝓢( , )» E F) (k n : ℕ) :\n    ∃ (C : exprℝ)(hC : 0 < C), ∀ x, «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n f x) ≤ C :=\n  by\n  rcases f.decay' k n with ⟨C, hC⟩\n  exact ⟨max C 1, by positivity, fun x => (hC x).trans (le_max_left _ _)⟩\n#align decay decay\n\n",
 "continuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/-- Every Schwartz function is continuous. -/\n@[continuity, protected]\ntheorem continuous (f : «expr𝓢( , )» E F) : continuous f :=\n  (f.smooth 0).continuous\n#align continuous continuous\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\ntheorem coe_zero : ↑(0 : «expr𝓢( , )» E F) = (0 : E → F) :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_hom_injective":
 "theorem coe_hom_injective : function.injective (coe_hom E F) :=\n  by\n  rw [coe_coe_hom]\n  exact fun_like.coe_injective\n#align coe_hom_injective coe_hom_injective\n\n",
 "coe_fn_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[simp]\ntheorem coe_fn_zero : coe_fn (0 : «expr𝓢( , )» E F) = (0 : E → F) :=\n  rfl\n#align coe_fn_zero coe_fn_zero\n\n",
 "coe_fderiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp, norm_cast]\ntheorem coe_fderiv (f : «expr𝓢( , )» E F) : «expr⇑ » f.fderiv = fderiv (exprℝ) f :=\n  rfl\n#align coe_fderiv coe_fderiv\n\n",
 "coe_coe_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\ntheorem coe_coe_hom : (coe_hom E F : «expr𝓢( , )» E F → E → F) = coe_fn :=\n  rfl\n#align coe_coe_hom coe_coe_hom\n\n",
 "bounds_nonempty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem bounds_nonempty (k n : ℕ) (f : «expr𝓢( , )» E F) :\n    ∃ c : exprℝ, c ∈ { c : exprℝ | 0 ≤ c ∧ ∀ x : E, «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n f x) ≤ c } :=\n  let ⟨M, hMp, hMb⟩ := f.decay k n\n  ⟨M, le_of_lt hMp, hMb⟩\n#align bounds_nonempty bounds_nonempty\n\n",
 "bounds_bdd_below":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem bounds_bdd_below (k n : ℕ) (f : «expr𝓢( , )» E F) :\n    BddBelow { c | 0 ≤ c ∧ ∀ x, «expr‖ ‖» x ^ k * «expr‖ ‖» (iterated_fderiv (exprℝ) n f x) ≤ c } :=\n  ⟨0, fun _ ⟨hn, _⟩ => hn⟩\n#align bounds_bdd_below bounds_bdd_below\n\n",
 "add_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝓢( , )» -/\n@[simp]\ntheorem add_apply {f g : «expr𝓢( , )» E F} {x : E} : (f + g) x = f x + g x :=\n  rfl\n#align add_apply add_apply\n\n"}