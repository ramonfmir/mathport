{"supr_rayleigh_eq_supr_rayleigh_sphere":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\ntheorem supr_rayleigh_eq_supr_rayleigh_sphere {r : exprℝ} (hr : 0 < r) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        ((exprrayleigh_quotient) x) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        ((exprrayleigh_quotient) x) :=\n  show\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        ((exprrayleigh_quotient) x) =\n      _\n    by simp only [← @supₛ_image' _ _ _ _ (exprrayleigh_quotient), T.image_rayleigh_eq_image_rayleigh_sphere hr]\n#align supr_rayleigh_eq_supr_rayleigh_sphere supr_rayleigh_eq_supr_rayleigh_sphere\n\n",
 "subsingleton_of_no_eigenvalue_finite_dimensional":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem subsingleton_of_no_eigenvalue_finite_dimensional (hT : T.is_symmetric)\n    (hT' : ∀ μ : 𝕜, module.End.eigenspace (T : «expr →ₗ[ ] » E 𝕜 E) μ = «expr⊥») : subsingleton E :=\n  (subsingleton_or_nontrivial E).resolve_right fun h => absurd (hT' _) hT.has_eigenvalue_supr_of_finite_dimensional\n#align subsingleton_of_no_eigenvalue_finite_dimensional subsingleton_of_no_eigenvalue_finite_dimensional\n\n",
 "rayleigh_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/-\nCopyright (c) 2021 Heather Macbeth. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Heather Macbeth, Frédéric Dupuis\n-/\ntheorem rayleigh_smul (x : E) {c : 𝕜} (hc : c ≠ 0) :\n    (exprrayleigh_quotient) («expr • » c x) = (exprrayleigh_quotient) x :=\n  by\n  by_cases hx : x = 0\n  · simp [hx]\n  have : «expr‖ ‖» c ≠ 0 := by simp [hc]\n  have : «expr‖ ‖» x ≠ 0 := by simp [hx]\n  field_simp [norm_smul, T.re_apply_inner_self_smul]\n  ring\n#align rayleigh_smul rayleigh_smul\n\n",
 "linearly_dependent_of_is_local_extr_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem linearly_dependent_of_is_local_extr_on (hT : is_self_adjoint T) {x₀ : F}\n    (hextr : is_local_extr_on T.re_apply_inner_self (sphere (0 : F) («expr‖ ‖» x₀)) x₀) :\n    ∃ a b : exprℝ, (a, b) ≠ 0 ∧ «expr • » a x₀ + «expr • » b (T x₀) = 0 :=\n  by\n  have H : is_local_extr_on T.re_apply_inner_self { x : F | «expr‖ ‖» x ^ 2 = «expr‖ ‖» x₀ ^ 2 } x₀ :=\n    by\n    convert hextr\n    ext x\n    simp [dist_eq_norm]\n  -- find Lagrange multipliers for the function `T.re_apply_inner_self` and the\n  -- hypersurface-defining function `λ x, ‖x‖ ^ 2`\n  obtain ⟨a, b, h₁, h₂⟩ :=\n    is_local_extr_on.exists_multipliers_of_has_strict_fderiv_at_1d H (has_strict_fderiv_at_norm_sq x₀)\n      (hT.is_symmetric.has_strict_fderiv_at_re_apply_inner_self x₀)\n  refine' ⟨a, b, h₁, _⟩\n  apply (inner_product_space.to_dual_map (exprℝ) F).injective\n  simp only [linear_isometry.map_add, linear_isometry.map_smul, linear_isometry.map_zero]\n  change «expr • » a (innerSL x₀) + «expr • » b (innerSL (T x₀)) = 0\n  apply smul_right_injective («expr →L[ ] » F (exprℝ) (exprℝ)) (two_ne_zero : (2 : exprℝ) ≠ 0)\n  simpa only [_root_.bit0, add_smul, smul_add, one_smul, add_zero] using h₂\n#align linearly_dependent_of_is_local_extr_on linearly_dependent_of_is_local_extr_on\n\n",
 "infi_rayleigh_eq_infi_rayleigh_sphere":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\ntheorem infi_rayleigh_eq_infi_rayleigh_sphere {r : exprℝ} (hr : 0 < r) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        ((exprrayleigh_quotient) x) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        ((exprrayleigh_quotient) x) :=\n  show\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        ((exprrayleigh_quotient) x) =\n      _\n    by simp only [← @infₛ_image' _ _ _ _ (exprrayleigh_quotient), T.image_rayleigh_eq_image_rayleigh_sphere hr]\n#align infi_rayleigh_eq_infi_rayleigh_sphere infi_rayleigh_eq_infi_rayleigh_sphere\n\n",
 "image_rayleigh_eq_image_rayleigh_sphere":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\ntheorem image_rayleigh_eq_image_rayleigh_sphere {r : exprℝ} (hr : 0 < r) :\n    «expr '' » (exprrayleigh_quotient) («expr ᶜ» {0}) = «expr '' » (exprrayleigh_quotient) (sphere 0 r) :=\n  by\n  ext a\n  constructor\n  · rintro ⟨x, hx : x ≠ 0, hxT⟩\n    have : «expr‖ ‖» x ≠ 0 := by simp [hx]\n    let c : 𝕜 := ↑(«expr‖ ‖» x)⁻¹ * r\n    have : c ≠ 0 := by simp [c, hx, hr.ne']\n    refine' ⟨«expr • » c x, _, _⟩\n    · field_simp [norm_smul, is_R_or_C.norm_eq_abs, abs_of_nonneg hr.le]\n    · rw [T.rayleigh_smul x this]\n      exact hxT\n  · rintro ⟨x, hx, hxT⟩\n    exact ⟨x, ne_zero_of_mem_sphere hr.ne' ⟨x, hx⟩, hxT⟩\n#align image_rayleigh_eq_image_rayleigh_sphere image_rayleigh_eq_image_rayleigh_sphere\n\n",
 "has_strict_fderiv_at_re_apply_inner_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem _root_.linear_map.is_symmetric.has_strict_fderiv_at_re_apply_inner_self {T : «expr →L[ ] » F (exprℝ) F}\n    (hT : (T : «expr →ₗ[ ] » F (exprℝ) F).is_symmetric) (x₀ : F) :\n    has_strict_fderiv_at T.re_apply_inner_self (_root_.bit0 (innerSL (T x₀) : «expr →L[ ] » F (exprℝ) (exprℝ))) x₀ :=\n  by\n  convert T.has_strict_fderiv_at.inner (has_strict_fderiv_at_id x₀)\n  ext y\n  simp_rw [_root_.bit0, continuous_linear_map.comp_apply, continuous_linear_map.add_apply, innerSL_apply,\n    fderiv_inner_clm_apply, id.def, continuous_linear_map.prod_apply, continuous_linear_map.id_apply, hT.apply_clm x₀ y,\n    real_inner_comm _ x₀]\n#align\n  linear_map.is_symmetric.has_strict_fderiv_at_re_apply_inner_self linear_map.is_symmetric.has_strict_fderiv_at_re_apply_inner_self\n\n",
 "has_eigenvector_of_is_min_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/-- For a self-adjoint operator `T`, a minimum of the Rayleigh quotient of `T` on a sphere centred\nat the origin is an eigenvector of `T`, with eigenvalue the global infimum of the Rayleigh\nquotient. -/\ntheorem has_eigenvector_of_is_min_on (hT : is_self_adjoint T) {x₀ : E} (hx₀ : x₀ ≠ 0)\n    (hextr : is_min_on T.re_apply_inner_self (sphere (0 : E) («expr‖ ‖» x₀)) x₀) :\n    has_eigenvector (T : «expr →ₗ[ ] » E 𝕜 E)\n      (↑(«expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          ((exprrayleigh_quotient) x)))\n      x₀ :=\n  by\n  convert hT.has_eigenvector_of_is_local_extr_on hx₀ (or.inl hextr.localize)\n  have hx₀' : 0 < «expr‖ ‖» x₀ := by simp [hx₀]\n  have hx₀'' : x₀ ∈ sphere (0 : E) («expr‖ ‖» x₀) := by simp\n  rw [T.infi_rayleigh_eq_infi_rayleigh_sphere hx₀']\n  refine' is_min_on.infi_eq hx₀'' _\n  intro x hx\n  dsimp\n  have : «expr‖ ‖» x = «expr‖ ‖» x₀ := by simpa using hx\n  rw [this]\n  exact div_le_div_of_le (sq_nonneg («expr‖ ‖» x₀)) (hextr hx)\n#align has_eigenvector_of_is_min_on has_eigenvector_of_is_min_on\n\n",
 "has_eigenvector_of_is_max_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/-- For a self-adjoint operator `T`, a maximum of the Rayleigh quotient of `T` on a sphere centred\nat the origin is an eigenvector of `T`, with eigenvalue the global supremum of the Rayleigh\nquotient. -/\ntheorem has_eigenvector_of_is_max_on (hT : is_self_adjoint T) {x₀ : E} (hx₀ : x₀ ≠ 0)\n    (hextr : is_max_on T.re_apply_inner_self (sphere (0 : E) («expr‖ ‖» x₀)) x₀) :\n    has_eigenvector (T : «expr →ₗ[ ] » E 𝕜 E)\n      (↑(«expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          ((exprrayleigh_quotient) x)))\n      x₀ :=\n  by\n  convert hT.has_eigenvector_of_is_local_extr_on hx₀ (or.inr hextr.localize)\n  have hx₀' : 0 < «expr‖ ‖» x₀ := by simp [hx₀]\n  have hx₀'' : x₀ ∈ sphere (0 : E) («expr‖ ‖» x₀) := by simp\n  rw [T.supr_rayleigh_eq_supr_rayleigh_sphere hx₀']\n  refine' is_max_on.supr_eq hx₀'' _\n  intro x hx\n  dsimp\n  have : «expr‖ ‖» x = «expr‖ ‖» x₀ := by simpa using hx\n  rw [this]\n  exact div_le_div_of_le (sq_nonneg («expr‖ ‖» x₀)) (hextr hx)\n#align has_eigenvector_of_is_max_on has_eigenvector_of_is_max_on\n\n",
 "has_eigenvector_of_is_local_extr_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\n/-- For a self-adjoint operator `T`, a local extremum of the Rayleigh quotient of `T` on a sphere\ncentred at the origin is an eigenvector of `T`. -/\ntheorem has_eigenvector_of_is_local_extr_on (hT : is_self_adjoint T) {x₀ : E} (hx₀ : x₀ ≠ 0)\n    (hextr : is_local_extr_on T.re_apply_inner_self (sphere (0 : E) («expr‖ ‖» x₀)) x₀) :\n    has_eigenvector (T : «expr →ₗ[ ] » E 𝕜 E) (↑((exprrayleigh_quotient) x₀)) x₀ :=\n  by\n  refine' ⟨_, hx₀⟩\n  rw [module.End.mem_eigenspace_iff]\n  exact hT.eq_smul_self_of_is_local_extr_on hextr\n#align has_eigenvector_of_is_local_extr_on has_eigenvector_of_is_local_extr_on\n\n",
 "has_eigenvalue_supr_of_finite_dimensional":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The supremum of the Rayleigh quotient of a symmetric operator `T` on a nontrivial\nfinite-dimensional vector space is an eigenvalue for that operator. -/\ntheorem has_eigenvalue_supr_of_finite_dimensional (hT : T.is_symmetric) :\n    has_eigenvalue T\n      ↑(«expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          (is_R_or_C.re («expr⟪ , ⟫» (T x) x) / «expr‖ ‖» (x : E) ^ 2)) :=\n  by\n  haveI := finite_dimensional.proper_is_R_or_C 𝕜 E\n  let T' := hT.to_self_adjoint\n  obtain ⟨x, hx⟩ : ∃ x : E, x ≠ 0 := exists_ne 0\n  have H₁ : is_compact (sphere (0 : E) («expr‖ ‖» x)) := is_compact_sphere _ _\n  have H₂ : (sphere (0 : E) («expr‖ ‖» x)).nonempty := ⟨x, by simp⟩\n  -- key point: in finite dimension, a continuous function on the sphere has a max\n  obtain ⟨x₀, hx₀', hTx₀⟩ := H₁.exists_forall_ge H₂ T'.val.re_apply_inner_self_continuous.continuous_on\n  have hx₀ : «expr‖ ‖» x₀ = «expr‖ ‖» x := by simpa using hx₀'\n  have : is_max_on T'.val.re_apply_inner_self (sphere 0 («expr‖ ‖» x₀)) x₀ := by simpa only [← hx₀] using hTx₀\n  have hx₀_ne : x₀ ≠ 0 :=\n    by\n    have : «expr‖ ‖» x₀ ≠ 0 := by simp only [hx₀, norm_eq_zero, hx, ne.def, not_false_iff]\n    simpa [← norm_eq_zero, ne.def]\n  exact has_eigenvalue_of_has_eigenvector (T'.prop.has_eigenvector_of_is_max_on hx₀_ne this)\n#align has_eigenvalue_supr_of_finite_dimensional has_eigenvalue_supr_of_finite_dimensional\n\n",
 "has_eigenvalue_infi_of_finite_dimensional":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The infimum of the Rayleigh quotient of a symmetric operator `T` on a nontrivial\nfinite-dimensional vector space is an eigenvalue for that operator. -/\ntheorem has_eigenvalue_infi_of_finite_dimensional (hT : T.is_symmetric) :\n    has_eigenvalue T\n      ↑(«expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          (is_R_or_C.re («expr⟪ , ⟫» (T x) x) / «expr‖ ‖» (x : E) ^ 2)) :=\n  by\n  haveI := finite_dimensional.proper_is_R_or_C 𝕜 E\n  let T' := hT.to_self_adjoint\n  obtain ⟨x, hx⟩ : ∃ x : E, x ≠ 0 := exists_ne 0\n  have H₁ : is_compact (sphere (0 : E) («expr‖ ‖» x)) := is_compact_sphere _ _\n  have H₂ : (sphere (0 : E) («expr‖ ‖» x)).nonempty := ⟨x, by simp⟩\n  -- key point: in finite dimension, a continuous function on the sphere has a min\n  obtain ⟨x₀, hx₀', hTx₀⟩ := H₁.exists_forall_le H₂ T'.val.re_apply_inner_self_continuous.continuous_on\n  have hx₀ : «expr‖ ‖» x₀ = «expr‖ ‖» x := by simpa using hx₀'\n  have : is_min_on T'.val.re_apply_inner_self (sphere 0 («expr‖ ‖» x₀)) x₀ := by simpa only [← hx₀] using hTx₀\n  have hx₀_ne : x₀ ≠ 0 :=\n    by\n    have : «expr‖ ‖» x₀ ≠ 0 := by simp only [hx₀, norm_eq_zero, hx, ne.def, not_false_iff]\n    simpa [← norm_eq_zero, ne.def]\n  exact has_eigenvalue_of_has_eigenvector (T'.prop.has_eigenvector_of_is_min_on hx₀_ne this)\n#align has_eigenvalue_infi_of_finite_dimensional has_eigenvalue_infi_of_finite_dimensional\n\n",
 "eq_smul_self_of_is_local_extr_on_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\ntheorem eq_smul_self_of_is_local_extr_on_real (hT : is_self_adjoint T) {x₀ : F}\n    (hextr : is_local_extr_on T.re_apply_inner_self (sphere (0 : F) («expr‖ ‖» x₀)) x₀) :\n    T x₀ = «expr • » ((exprrayleigh_quotient) x₀) x₀ :=\n  by\n  obtain ⟨a, b, h₁, h₂⟩ := hT.linearly_dependent_of_is_local_extr_on hextr\n  by_cases hx₀ : x₀ = 0\n  · simp [hx₀]\n  by_cases hb : b = 0\n  · have : a ≠ 0 := by simpa [hb] using h₁\n    refine' absurd _ hx₀\n    apply smul_right_injective F this\n    simpa [hb] using h₂\n  let c : exprℝ := -b⁻¹ * a\n  have hc : T x₀ = «expr • » c x₀ :=\n    by\n    have : b * (b⁻¹ * a) = a := by field_simp [mul_comm]\n    apply smul_right_injective F hb\n    simp [c, eq_neg_of_add_eq_zero_left h₂, ← mul_smul, this]\n  convert hc\n  have : «expr‖ ‖» x₀ ≠ 0 := by simp [hx₀]\n  field_simp\n  simpa [inner_smul_left, real_inner_self_eq_norm_mul_norm, sq] using congr_arg (fun x => «expr⟪ , ⟫_ℝ» x x₀) hc\n#align eq_smul_self_of_is_local_extr_on_real eq_smul_self_of_is_local_extr_on_real\n\n",
 "eq_smul_self_of_is_local_extr_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrayleigh_quotient -/\ntheorem eq_smul_self_of_is_local_extr_on (hT : is_self_adjoint T) {x₀ : E}\n    (hextr : is_local_extr_on T.re_apply_inner_self (sphere (0 : E) («expr‖ ‖» x₀)) x₀) :\n    T x₀ = «expr • » (↑((exprrayleigh_quotient) x₀) : 𝕜) x₀ :=\n  by\n  letI := inner_product_space.is_R_or_C_to_real 𝕜 E\n  let hSA := hT.is_symmetric.restrict_scalars.to_self_adjoint.prop\n  exact hSA.eq_smul_self_of_is_local_extr_on_real hextr\n#align eq_smul_self_of_is_local_extr_on eq_smul_self_of_is_local_extr_on\n\n"}