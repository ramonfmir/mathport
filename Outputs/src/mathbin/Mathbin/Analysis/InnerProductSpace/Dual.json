{"unique_continuous_linear_map_of_bilin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ♯» -/\ntheorem unique_continuous_linear_map_of_bilin {v f : E} (is_lax_milgram : ∀ w, «expr⟪ , ⟫» f w = B v w) :\n    f = («expr ♯» B) v := by\n  refine' ext_inner_right 𝕜 _\n  intro w\n  rw [continuous_linear_map_of_bilin_apply]\n  exact is_lax_milgram w\n#align unique_continuous_linear_map_of_bilin unique_continuous_linear_map_of_bilin\n\n",
 "to_dual_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem to_dual_symm_apply {x : E} {y : normed_space.dual 𝕜 E} : «expr⟪ , ⟫» ((to_dual 𝕜 E).symm y) x = y x :=\n  by\n  rw [← to_dual_apply]\n  simp only [linear_isometry_equiv.apply_symm_apply]\n#align to_dual_symm_apply to_dual_symm_apply\n\n",
 "to_dual_map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-\nCopyright (c) 2020 Frédéric Dupuis. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Frédéric Dupuis\n-/\n@[simp]\ntheorem to_dual_map_apply {x y : E} : to_dual_map 𝕜 E x y = «expr⟪ , ⟫» x y :=\n  rfl\n#align to_dual_map_apply to_dual_map_apply\n\n",
 "to_dual_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem to_dual_apply {x y : E} : to_dual 𝕜 E x y = «expr⟪ , ⟫» x y :=\n  rfl\n#align to_dual_apply to_dual_apply\n\n",
 "innerSL_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L⋆[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\ntheorem innerSL_norm [nontrivial E] : «expr‖ ‖» (innerSL : «expr →L⋆[ ] » E 𝕜 («expr →L[ ] » E 𝕜 𝕜)) = 1 :=\n  show «expr‖ ‖» (to_dual_map 𝕜 E).to_continuous_linear_map = 1 from linear_isometry.norm_to_continuous_linear_map _\n#align innerSL_norm innerSL_norm\n\n",
 "ext_inner_right_basis":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem ext_inner_right_basis {ι : Type _} {x y : E} (b : basis ι 𝕜 E)\n    (h : ∀ i : ι, «expr⟪ , ⟫» x (b i) = «expr⟪ , ⟫» y (b i)) : x = y :=\n  by\n  refine' ext_inner_left_basis b fun i => _\n  rw [← inner_conj_sym]\n  nth_rw_rhs 1 [← inner_conj_sym]\n  exact congr_arg (star_ring_end) (h i)\n#align ext_inner_right_basis ext_inner_right_basis\n\n",
 "ext_inner_left_basis":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem ext_inner_left_basis {ι : Type _} {x y : E} (b : basis ι 𝕜 E)\n    (h : ∀ i : ι, «expr⟪ , ⟫» (b i) x = «expr⟪ , ⟫» (b i) y) : x = y :=\n  by\n  apply (to_dual_map 𝕜 E).map_eq_iff.mp\n  refine' (function.injective.eq_iff continuous_linear_map.coe_injective).mp (basis.ext b _)\n  intro i\n  simp only [to_dual_map_apply, continuous_linear_map.coe_coe]\n  rw [← inner_conj_sym]\n  nth_rw_rhs 1 [← inner_conj_sym]\n  exact congr_arg (star_ring_end) (h i)\n#align ext_inner_left_basis ext_inner_left_basis\n\n",
 "continuous_linear_map_of_bilin_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ♯» -/\n@[simp]\ntheorem continuous_linear_map_of_bilin_apply (v w : E) : «expr⟪ , ⟫» ((«expr ♯» B) v) w = B v w := by\n  simp [continuous_linear_map_of_bilin]\n#align continuous_linear_map_of_bilin_apply continuous_linear_map_of_bilin_apply\n\n"}