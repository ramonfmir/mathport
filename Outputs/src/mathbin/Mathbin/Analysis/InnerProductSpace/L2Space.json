{"tsum_inner_mul_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\nprotected theorem tsum_inner_mul_inner (b : hilbert_basis ι 𝕜 E) (x y : E) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        («expr⟪ , ⟫» x (b i) * «expr⟪ , ⟫» (b i) y) =\n      «expr⟪ , ⟫» x y :=\n  (b.has_sum_inner_mul_inner x y).tsum_eq\n#align tsum_inner_mul_inner tsum_inner_mul_inner\n\n",
 "summable_of_lp":
 "protected theorem summable_of_lp (f : lp G 2) : summable fun i => V i (f i) :=\n  by\n  rw [hV.summable_iff_norm_sq_summable]\n  convert (lp.mem_ℓp f).summable _\n  · norm_cast\n  · norm_num\n#align summable_of_lp summable_of_lp\n\n",
 "summable_inner_mul_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\nprotected theorem summable_inner_mul_inner (b : hilbert_basis ι 𝕜 E) (x y : E) :\n    summable fun i => «expr⟪ , ⟫» x (b i) * «expr⟪ , ⟫» (b i) y :=\n  (b.has_sum_inner_mul_inner x y).summable\n#align summable_inner_mul_inner summable_inner_mul_inner\n\n",
 "summable_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-\nCopyright (c) 2022 Heather Macbeth. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Heather Macbeth\n-/\ntheorem summable_inner (f g : lp G 2) : summable fun i => «expr⟪ , ⟫» (f i) (g i) :=\n  by\n  -- Apply the Direct Comparison Test, comparing with ∑' i, ‖f i‖ * ‖g i‖ (summable by Hölder)\n  refine' summable_of_norm_bounded (fun i => «expr‖ ‖» (f i) * «expr‖ ‖» (g i)) (lp.summable_mul _ f g) _\n  · rw [real.is_conjugate_exponent_iff] <;> norm_num\n  intro i\n  -- Then apply Cauchy-Schwarz pointwise\n  exact norm_inner_le_norm _ _\n#align summable_inner summable_inner\n\n",
 "repr_symm_single":
 "@[simp]\nprotected theorem repr_symm_single (b : hilbert_basis ι 𝕜 E) (i : ι) : b.repr.symm (lp.single 2 i (1 : 𝕜)) = b i :=\n  rfl\n#align repr_symm_single repr_symm_single\n\n",
 "repr_self":
 "@[simp]\nprotected theorem repr_self (b : hilbert_basis ι 𝕜 E) (i : ι) : b.repr (b i) = lp.single 2 i (1 : 𝕜) := by\n  rw [← b.repr_symm_single, linear_isometry_equiv.apply_symm_apply]\n#align repr_self repr_self\n\n",
 "repr_apply_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\nprotected theorem repr_apply_apply (b : hilbert_basis ι 𝕜 E) (v : E) (i : ι) : b.repr v i = «expr⟪ , ⟫» (b i) v :=\n  by\n  rw [← b.repr.inner_map_map (b i) v, b.repr_self, lp.inner_single_left]\n  simp\n#align repr_apply_apply repr_apply_apply\n\n",
 "range_linear_isometry":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/-- The canonical linear isometry from the `lp 2` of a mutually orthogonal family of subspaces of\n`E` into E, has range the closure of the span of the subspaces. -/\nprotected theorem range_linear_isometry [∀ i, complete_space (G i)] :\n    hV.linear_isometry.to_linear_map.range =\n      («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          (V i).to_linear_map.range).topological_closure :=\n  by\n  refine' le_antisymm _ _\n  · rintro x ⟨f, rfl⟩\n    refine' mem_closure_of_tendsto (hV.has_sum_linear_isometry f) (eventually_of_forall _)\n    intro s\n    rw [SetLike.mem_coe]\n    refine' sum_mem _\n    intro i hi\n    refine' mem_supr_of_mem i _\n    exact linear_map.mem_range_self _ (f i)\n  · apply topological_closure_minimal\n    · refine' supᵢ_le _\n      rintro i x ⟨x, rfl⟩\n      use lp.single 2 i x\n      exact hV.linear_isometry_apply_single x\n    exact hV.linear_isometry.isometry.uniform_inducing.is_complete_range.is_closed\n#align range_linear_isometry range_linear_isometry\n\n",
 "orthonormal":
 "@[simp]\nprotected theorem orthonormal (b : hilbert_basis ι 𝕜 E) : orthonormal 𝕜 b :=\n  by\n  rw [orthonormal_iff_ite]\n  intro i j\n  rw [← b.repr.inner_map_map (b i) (b j), b.repr_self, b.repr_self, lp.inner_single_left, lp.single_apply]\n  simp\n#align orthonormal orthonormal\n\n",
 "mk_internal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/-- This is `orthogonal_family.is_hilbert_sum` in the case of actual inclusions from subspaces. -/\ntheorem is_hilbert_sum.mk_internal [∀ i, complete_space <| F i]\n    (hFortho : @orthogonal_family 𝕜 E _ _ _ (fun i => F i) _ fun i => (F i).subtypeₗᵢ)\n    (hFtotal :\n      «expr⊤» ≤\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n            (F i)).topological_closure) :\n    @is_hilbert_sum _ 𝕜 _ E _ _ (fun i => F i) _ fun i => (F i).subtypeₗᵢ :=\n  is_hilbert_sum.mk hFortho (by simpa [subtypeₗᵢ_to_linear_map, range_subtype] using hFtotal)\n#align is_hilbert_sum.mk_internal is_hilbert_sum.mk_internal\n\n",
 "mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/-- If `V : Π i, G i →ₗᵢ[𝕜] E` is an orthogonal family such that the supremum of the ranges of\n`V i` is dense, then `(E, V)` is a Hilbert sum of `G`. -/\ntheorem is_hilbert_sum.mk [∀ i, complete_space <| G i] (hVortho : orthogonal_family 𝕜 V)\n    (hVtotal :\n      «expr⊤» ≤\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n            (V i).to_linear_map.range).topological_closure) :\n    is_hilbert_sum 𝕜 E V :=\n  { orthogonal_family := hVortho\n    surjective_isometry := by\n      rw [← linear_isometry.coe_to_linear_map]\n      exact linear_map.range_eq_top.mp (eq_top_iff.mpr <| hVtotal.trans_eq hVortho.range_linear_isometry.symm) }\n#align is_hilbert_sum.mk is_hilbert_sum.mk\n\n",
 "linear_isometry_equiv_symm_apply_single_one":
 "theorem _root_.orthonormal.linear_isometry_equiv_symm_apply_single_one (h i) :\n    (hv.is_hilbert_sum h).linear_isometry_equiv.symm (lp.single 2 i 1) = v i := by\n  rw [is_hilbert_sum.linear_isometry_equiv_symm_apply_single, linear_isometry.to_span_singleton_apply, one_smul]\n#align orthonormal.linear_isometry_equiv_symm_apply_single_one orthonormal.linear_isometry_equiv_symm_apply_single_one\n\n",
 "linear_isometry_equiv_symm_apply_single":
 "/-- In the canonical isometric isomorphism between a Hilbert sum `E` of `G : ι → Type*` and\n`lp G 2`, an \"elementary basis vector\" in `lp G 2` supported at `i : ι` is the image of the\nassociated element in `E`. -/\n@[simp]\nprotected theorem is_hilbert_sum.linear_isometry_equiv_symm_apply_single (hV : is_hilbert_sum 𝕜 E V) {i : ι} (x : G i) :\n    hV.linear_isometry_equiv.symm (lp.single 2 i x) = V i x := by\n  simp [is_hilbert_sum.linear_isometry_equiv, orthogonal_family.linear_isometry_apply_single]\n#align is_hilbert_sum.linear_isometry_equiv_symm_apply_single is_hilbert_sum.linear_isometry_equiv_symm_apply_single\n\n",
 "linear_isometry_equiv_symm_apply_dfinsupp_sum_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n/-- In the canonical isometric isomorphism between a Hilbert sum `E` of `G : ι → Type*` and\n`lp G 2`, a finitely-supported vector in `lp G 2` is the image of the associated finite sum of\nelements of `E`. -/\n@[simp]\nprotected theorem is_hilbert_sum.linear_isometry_equiv_symm_apply_dfinsupp_sum_single (hV : is_hilbert_sum 𝕜 E V)\n    (W₀ : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (G i)) :\n    hV.linear_isometry_equiv.symm (W₀.sum (lp.single 2)) = W₀.sum fun i => V i := by\n  simp [is_hilbert_sum.linear_isometry_equiv, orthogonal_family.linear_isometry_apply_dfinsupp_sum_single]\n#align\n  is_hilbert_sum.linear_isometry_equiv_symm_apply_dfinsupp_sum_single is_hilbert_sum.linear_isometry_equiv_symm_apply_dfinsupp_sum_single\n\n",
 "linear_isometry_equiv_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- In the canonical isometric isomorphism between a Hilbert sum `E` of `G` and `lp G 2`,\na vector `w : lp G 2` is the image of the infinite sum of the associated elements in `E`. -/\nprotected theorem is_hilbert_sum.linear_isometry_equiv_symm_apply (hV : is_hilbert_sum 𝕜 E V) (w : lp G 2) :\n    hV.linear_isometry_equiv.symm w =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (V i (w i)) :=\n  by simp [is_hilbert_sum.linear_isometry_equiv, orthogonal_family.linear_isometry_apply]\n#align is_hilbert_sum.linear_isometry_equiv_symm_apply is_hilbert_sum.linear_isometry_equiv_symm_apply\n\n",
 "linear_isometry_equiv_apply_dfinsupp_sum_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n/-- In the canonical isometric isomorphism between a Hilbert sum `E` of `G : ι → Type*` and\n`lp G 2`, a finitely-supported vector in `lp G 2` is the image of the associated finite sum of\nelements of `E`. -/\n@[simp]\nprotected theorem is_hilbert_sum.linear_isometry_equiv_apply_dfinsupp_sum_single (hV : is_hilbert_sum 𝕜 E V)\n    (W₀ : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (G i)) :\n    (hV.linear_isometry_equiv (W₀.sum fun i => V i) : ∀ i, G i) = W₀ :=\n  by\n  rw [← hV.linear_isometry_equiv_symm_apply_dfinsupp_sum_single]\n  rw [linear_isometry_equiv.apply_symm_apply]\n  ext i\n  simp (config := { contextual := true }) [dfinsupp.sum, lp.single_apply]\n#align\n  is_hilbert_sum.linear_isometry_equiv_apply_dfinsupp_sum_single is_hilbert_sum.linear_isometry_equiv_apply_dfinsupp_sum_single\n\n",
 "linear_isometry_apply_single":
 "@[simp]\nprotected theorem linear_isometry_apply_single {i : ι} (x : G i) : hV.linear_isometry (lp.single 2 i x) = V i x :=\n  by\n  rw [hV.linear_isometry_apply, ← tsum_ite_eq i (V i x)]\n  congr\n  ext j\n  rw [lp.single_apply]\n  split_ifs\n  · subst h\n  · simp\n#align linear_isometry_apply_single linear_isometry_apply_single\n\n",
 "linear_isometry_apply_dfinsupp_sum_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n@[simp]\nprotected theorem linear_isometry_apply_dfinsupp_sum_single\n    (W₀ : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (G i)) :\n    hV.linear_isometry (W₀.sum (lp.single 2)) = W₀.sum fun i => V i :=\n  by\n  have :\n    hV.linear_isometry\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" W₀.support\n          (lp.single 2 i (W₀ i))) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" W₀.support\n        (hV.linear_isometry (lp.single 2 i (W₀ i))) :=\n    hV.linear_isometry.to_linear_map.map_sum\n  simp (config := { contextual := true }) [dfinsupp.sum, this]\n#align linear_isometry_apply_dfinsupp_sum_single linear_isometry_apply_dfinsupp_sum_single\n\n",
 "linear_isometry_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n-- needed for lattice instance on `finset ι`, for `filter.at_top_ne_bot`\nprotected theorem linear_isometry_apply (f : lp G 2) :\n    hV.linear_isometry f =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (V i (f i)) :=\n  rfl\n#align linear_isometry_apply linear_isometry_apply\n\n",
 "is_hilbert_sum_orthogonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\ntheorem submodule.is_hilbert_sum_orthogonal (K : submodule 𝕜 E) [hK : complete_space K] :\n    @is_hilbert_sum _ 𝕜 _ E _ _ (fun b => ((cond b K («expr ᗮ» K) : submodule 𝕜 E) : Type _)) _ fun b =>\n      (cond b K («expr ᗮ» K)).subtypeₗᵢ :=\n  by\n  have : ∀ b, complete_space ((cond b K («expr ᗮ» K) : submodule 𝕜 E) : Type _) :=\n    by\n    intro b\n    cases b <;> first |exact orthogonal.complete_space K|assumption\n  refine' is_hilbert_sum.mk_internal _ K.orthogonal_family_self _\n  refine' le_trans _ (submodule.le_topological_closure _)\n  rw [supᵢ_bool_eq, cond, cond]\n  refine' Codisjoint.top_le _\n  exact submodule.is_compl_orthogonal_of_complete_space.codisjoint\n#align submodule.is_hilbert_sum_orthogonal submodule.is_hilbert_sum_orthogonal\n\n",
 "is_hilbert_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- Given a total orthonormal family `v : ι → E`, `E` is a Hilbert sum of `λ i : ι, 𝕜` relative to\nthe family of linear isometries `λ i, λ k, k • v i`. -/\ntheorem orthonormal.is_hilbert_sum {v : ι → E} (hv : orthonormal 𝕜 v)\n    (hsp : «expr⊤» ≤ (span 𝕜 (Set.range v)).topological_closure) :\n    @is_hilbert_sum _ 𝕜 _ _ _ _ (fun i : ι => 𝕜) _ fun i => linear_isometry.to_span_singleton 𝕜 E (hv.1 i) :=\n  is_hilbert_sum.mk hv.orthogonal_family\n    (by\n      convert hsp\n      simp [← linear_map.span_singleton_eq_range, ← submodule.span_Union])\n#align orthonormal.is_hilbert_sum orthonormal.is_hilbert_sum\n\n",
 "inner_single_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_single_right (i : ι) (a : G i) (f : lp G 2) : «expr⟪ , ⟫» f (lp.single 2 i a) = «expr⟪ , ⟫» (f i) a := by\n  simpa [inner_conj_sym] using congr_arg (star_ring_end) (inner_single_left i a f)\n#align inner_single_right inner_single_right\n\n",
 "inner_single_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_single_left (i : ι) (a : G i) (f : lp G 2) : «expr⟪ , ⟫» (lp.single 2 i a) f = «expr⟪ , ⟫» a (f i) :=\n  by\n  refine' (has_sum_inner (lp.single 2 i a) f).unique _\n  convert has_sum_ite_eq i («expr⟪ , ⟫» a (f i))\n  ext j\n  rw [lp.single_apply]\n  split_ifs\n  · subst h\n  · simp\n#align inner_single_left inner_single_left\n\n",
 "inner_eq_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_eq_tsum (f g : lp G 2) :\n    «expr⟪ , ⟫» f g =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        («expr⟪ , ⟫» (f i) (g i)) :=\n  rfl\n#align inner_eq_tsum inner_eq_tsum\n\n",
 "has_sum_repr_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℓ²( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℓ²( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\nprotected theorem has_sum_repr_symm (b : hilbert_basis ι 𝕜 E) (f : «exprℓ²( , )» ι 𝕜) :\n    has_sum (fun i => «expr • » (f i) (b i)) (b.repr.symm f) :=\n  by\n  suffices H :\n    (fun i : ι => «expr • » (f i) (b i)) = fun b_1 : ι =>\n      b.repr.symm.to_continuous_linear_equiv ((fun i : ι => lp.single 2 i (f i)) b_1)\n  · rw [H]\n    have : has_sum (fun i : ι => lp.single 2 i (f i)) f := lp.has_sum_single ennreal.two_ne_top f\n    exact (↑b.repr.symm.to_continuous_linear_equiv : «expr →L[ ] » («exprℓ²( , )» ι 𝕜) 𝕜 E).has_sum this\n  ext i\n  apply b.repr.injective\n  have : lp.single 2 i (f i * 1) = «expr • » (f i) (lp.single 2 i 1) := lp.single_smul 2 i (1 : 𝕜) (f i)\n  rw [mul_one] at this\n  rw [linear_isometry_equiv.map_smul, b.repr_self, ← this, linear_isometry_equiv.coe_to_continuous_linear_equiv]\n  exact (b.repr.apply_symm_apply (lp.single 2 i (f i))).symm\n#align has_sum_repr_symm has_sum_repr_symm\n\n",
 "has_sum_repr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\nprotected theorem has_sum_repr (b : hilbert_basis ι 𝕜 E) (x : E) : has_sum (fun i => «expr • » (b.repr x i) (b i)) x :=\n  by simpa using b.has_sum_repr_symm (b.repr x)\n#align has_sum_repr has_sum_repr\n\n",
 "has_sum_orthogonal_projection":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\nprotected theorem has_sum_orthogonal_projection {U : submodule 𝕜 E} [complete_space U] (b : hilbert_basis ι 𝕜 U)\n    (x : E) : has_sum (fun i => «expr • » («expr⟪ , ⟫» (b i : E) x) (b i)) (orthogonal_projection U x) := by\n  simpa only [b.repr_apply_apply, inner_orthogonal_projection_eq_of_mem_left] using\n    b.has_sum_repr (orthogonal_projection U x)\n#align has_sum_orthogonal_projection has_sum_orthogonal_projection\n\n",
 "has_sum_linear_isometry_equiv_symm":
 "/-- In the canonical isometric isomorphism between a Hilbert sum `E` of `G` and `lp G 2`,\na vector `w : lp G 2` is the image of the infinite sum of the associated elements in `E`, and this\nsum indeed converges. -/\nprotected theorem is_hilbert_sum.has_sum_linear_isometry_equiv_symm (hV : is_hilbert_sum 𝕜 E V) (w : lp G 2) :\n    has_sum (fun i => V i (w i)) (hV.linear_isometry_equiv.symm w) := by\n  simp [is_hilbert_sum.linear_isometry_equiv, orthogonal_family.has_sum_linear_isometry]\n#align is_hilbert_sum.has_sum_linear_isometry_equiv_symm is_hilbert_sum.has_sum_linear_isometry_equiv_symm\n\n",
 "has_sum_linear_isometry":
 "protected theorem has_sum_linear_isometry (f : lp G 2) : has_sum (fun i => V i (f i)) (hV.linear_isometry f) :=\n  (hV.summable_of_lp f).has_sum\n#align has_sum_linear_isometry has_sum_linear_isometry\n\n",
 "has_sum_inner_mul_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\nprotected theorem has_sum_inner_mul_inner (b : hilbert_basis ι 𝕜 E) (x y : E) :\n    has_sum (fun i => «expr⟪ , ⟫» x (b i) * «expr⟪ , ⟫» (b i) y) («expr⟪ , ⟫» x y) :=\n  by\n  convert (b.has_sum_repr y).mapL (innerSL x)\n  ext i\n  rw [innerSL_apply, b.repr_apply_apply, inner_smul_right, mul_comm]\n#align has_sum_inner_mul_inner has_sum_inner_mul_inner\n\n",
 "has_sum_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem has_sum_inner (f g : lp G 2) : has_sum (fun i => «expr⟪ , ⟫» (f i) (g i)) («expr⟪ , ⟫» f g) :=\n  (summable_inner f g).has_sum\n#align has_sum_inner has_sum_inner\n\n",
 "finite_spans_dense":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem finite_spans_dense (b : hilbert_basis ι 𝕜 E) :\n    («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          (span 𝕜 (J.image b : set E))).topological_closure =\n      «expr⊤» :=\n  eq_top_iff.mpr <|\n    b.dense_span.ge.trans\n      (by\n        simp_rw [← submodule.span_Union]\n        exact\n          topological_closure_mono\n            (span_mono <|\n              set.range_subset_iff.mpr fun i =>\n                Set.mem_unionᵢ_of_mem {i} <|\n                  finset.mem_coe.mpr <| Finset.mem_image_of_mem _ <| Finset.mem_singleton_self i))\n#align finite_spans_dense finite_spans_dense\n\n",
 "exists_hilbert_basis_extension":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/-- A Hilbert space admits a Hilbert basis extending a given orthonormal subset. -/\ntheorem _root_.orthonormal.exists_hilbert_basis_extension {s : set E} (hs : orthonormal 𝕜 (coe : s → E)) :\n    ∃ (w : set E)(b : hilbert_basis w 𝕜 E), s ⊆ w ∧ «expr⇑ » b = (coe : w → E) :=\n  let ⟨w, hws, hw_ortho, hw_max⟩ := exists_maximal_orthonormal hs\n  ⟨w,\n    hilbert_basis.mk_of_orthogonal_eq_bot hw_ortho\n      (by simpa [maximal_orthonormal_iff_orthogonal_complement_eq_bot hw_ortho] using hw_max),\n    hws, hilbert_basis.coe_of_orthogonal_eq_bot_mk _ _⟩\n#align orthonormal.exists_hilbert_basis_extension orthonormal.exists_hilbert_basis_extension\n\n",
 "exists_hilbert_basis":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/-- A Hilbert space admits a Hilbert basis. -/\ntheorem _root_.exists_hilbert_basis : ∃ (w : set E)(b : hilbert_basis w 𝕜 E), «expr⇑ » b = (coe : w → E) :=\n  let ⟨w, hw, hw', hw''⟩ := (orthonormal_empty 𝕜 E).exists_hilbert_basis_extension\n  ⟨w, hw, hw''⟩\n#align exists_hilbert_basis exists_hilbert_basis\n\n",
 "dense_span":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\nprotected theorem dense_span (b : hilbert_basis ι 𝕜 E) : (span 𝕜 (Set.range b)).topological_closure = «expr⊤» := by\n  classical\n    rw [eq_top_iff]\n    rintro x -\n    refine' mem_closure_of_tendsto (b.has_sum_repr x) (eventually_of_forall _)\n    intro s\n    simp only [SetLike.mem_coe]\n    refine' sum_mem _\n    rintro i -\n    refine' smul_mem _ _ _\n    exact subset_span ⟨i, rfl⟩\n#align dense_span dense_span\n\n",
 "coe_to_orthonormal_basis":
 "-- Note : this should be `b.repr` composed with an identification of `lp (λ i : ι, 𝕜) p` with\n-- `pi_Lp p (λ i : ι, 𝕜)` (in this case with `p = 2`), but we don't have this yet (July 2022).\n@[simp]\ntheorem coe_to_orthonormal_basis [fintype ι] (b : hilbert_basis ι 𝕜 E) : (b.to_orthonormal_basis : ι → E) = b :=\n  orthonormal_basis.coe_mk _ _\n#align coe_to_orthonormal_basis coe_to_orthonormal_basis\n\n",
 "coe_to_hilbert_basis":
 "-- Note : this should be `b.repr` composed with an identification of `lp (λ i : ι, 𝕜) p` with\n-- `pi_Lp p (λ i : ι, 𝕜)` (in this case with `p = 2`), but we don't have this yet (July 2022).\n@[simp]\ntheorem _root_.orthonormal_basis.coe_to_hilbert_basis [fintype ι] (b : orthonormal_basis ι 𝕜 E) :\n    (b.to_hilbert_basis : ι → E) = b :=\n  hilbert_basis.coe_mk _ _\n#align orthonormal_basis.coe_to_hilbert_basis orthonormal_basis.coe_to_hilbert_basis\n\n",
 "coe_of_orthogonal_eq_bot_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\nprotected theorem coe_of_orthogonal_eq_bot_mk (hsp : «expr ᗮ» (span 𝕜 (Set.range v)) = «expr⊥») :\n    «expr⇑ » (hilbert_basis.mk_of_orthogonal_eq_bot hv hsp) = v :=\n  hilbert_basis.coe_mk hv _\n#align coe_of_orthogonal_eq_bot_mk coe_of_orthogonal_eq_bot_mk\n\n",
 "coe_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\nprotected theorem coe_mk (hsp : «expr⊤» ≤ (span 𝕜 (Set.range v)).topological_closure) :\n    «expr⇑ » (hilbert_basis.mk hv hsp) = v := by\n  apply funext <| orthonormal.linear_isometry_equiv_symm_apply_single_one hv hsp\n#align coe_mk coe_mk\n\n"}