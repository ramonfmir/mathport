{"norm_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem differentiable_on.norm_sq (hf : differentiable_on (exprℝ) f s) :\n    differentiable_on (exprℝ) (fun y => «expr‖ ‖» (f y) ^ 2) s := fun x hx => (hf x hx).norm_sq\n#align differentiable_on.norm_sq differentiable_on.norm_sq\n\n",
 "norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem differentiable_on.norm (hf : differentiable_on (exprℝ) f s) (h0 : ∀ x ∈ s, f x ≠ 0) :\n    differentiable_on (exprℝ) (fun y => «expr‖ ‖» (f y)) s := fun x hx => (hf x hx).norm (h0 x hx)\n#align differentiable_on.norm differentiable_on.norm\n\n",
 "inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem differentiable.inner (hf : differentiable (exprℝ) f) (hg : differentiable (exprℝ) g) :\n    differentiable (exprℝ) fun x => «expr⟪ , ⟫» (f x) (g x) := fun x => (hf x).inner (hg x)\n#align differentiable.inner differentiable.inner\n\n",
 "has_strict_fderiv_at_norm_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_strict_fderiv_at_norm_sq (x : F) :\n    has_strict_fderiv_at (fun x => «expr‖ ‖» x ^ 2) (bit0 (innerSL x : «expr →L[ ] » F (exprℝ) (exprℝ))) x :=\n  by\n  simp only [sq, ← inner_self_eq_norm_mul_norm]\n  convert (has_strict_fderiv_at_id x).inner (has_strict_fderiv_at_id x)\n  ext y\n  simp [bit0, real_inner_comm]\n#align has_strict_fderiv_at_norm_sq has_strict_fderiv_at_norm_sq\n\n",
 "has_strict_fderiv_at_euclidean":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∘L » -/\ntheorem has_strict_fderiv_at_euclidean :\n    has_strict_fderiv_at f f' y ↔\n      ∀ i, has_strict_fderiv_at (fun x => f x i) («expr ∘L » (euclidean_space.proj i) f') y :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_has_strict_fderiv_at_iff, has_strict_fderiv_at_pi']\n  rfl\n#align has_strict_fderiv_at_euclidean has_strict_fderiv_at_euclidean\n\n",
 "has_fderiv_within_at_euclidean":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∘L » -/\ntheorem has_fderiv_within_at_euclidean :\n    has_fderiv_within_at f f' t y ↔\n      ∀ i, has_fderiv_within_at (fun x => f x i) («expr ∘L » (euclidean_space.proj i) f') t y :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_has_fderiv_within_at_iff, has_fderiv_within_at_pi']\n  rfl\n#align has_fderiv_within_at_euclidean has_fderiv_within_at_euclidean\n\n",
 "fderiv_inner_clm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-\nCopyright (c) 2020 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\n@[simp]\ntheorem fderiv_inner_clm_apply (p x : E × E) : fderiv_inner_clm p x = «expr⟪ , ⟫» p.1 x.2 + «expr⟪ , ⟫» x.1 p.2 :=\n  rfl\n#align fderiv_inner_clm_apply fderiv_inner_clm_apply\n\n",
 "fderiv_inner_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem fderiv_inner_apply (hf : differentiable_at (exprℝ) f x) (hg : differentiable_at (exprℝ) g x) (y : G) :\n    fderiv (exprℝ) (fun t => «expr⟪ , ⟫» (f t) (g t)) x y =\n      «expr⟪ , ⟫» (f x) (fderiv (exprℝ) g x y) + «expr⟪ , ⟫» (fderiv (exprℝ) f x y) (g x) :=\n  by\n  rw [(hf.has_fderiv_at.inner hg.has_fderiv_at).fderiv]\n  rfl\n#align fderiv_inner_apply fderiv_inner_apply\n\n",
 "dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem differentiable_on.dist (hf : differentiable_on (exprℝ) f s) (hg : differentiable_on (exprℝ) g s)\n    (hne : ∀ x ∈ s, f x ≠ g x) : differentiable_on (exprℝ) (fun y => dist (f y) (g y)) s := fun x hx =>\n  (hf x hx).dist (hg x hx) (hne x hx)\n#align differentiable_on.dist differentiable_on.dist\n\n",
 "differentiable_within_at_euclidean":
 "theorem differentiable_within_at_euclidean :\n    differentiable_within_at 𝕜 f t y ↔ ∀ i, differentiable_within_at 𝕜 (fun x => f x i) t y :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_differentiable_within_at_iff, differentiable_within_at_pi]\n  rfl\n#align differentiable_within_at_euclidean differentiable_within_at_euclidean\n\n",
 "differentiable_on_euclidean":
 "theorem differentiable_on_euclidean : differentiable_on 𝕜 f t ↔ ∀ i, differentiable_on 𝕜 (fun x => f x i) t :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_differentiable_on_iff, differentiable_on_pi]\n  rfl\n#align differentiable_on_euclidean differentiable_on_euclidean\n\n",
 "differentiable_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem differentiable_inner : differentiable (exprℝ) fun p : E × E => «expr⟪ , ⟫» p.1 p.2 :=\n  is_bounded_bilinear_map_inner.differentiable_at\n#align differentiable_inner differentiable_inner\n\n",
 "differentiable_euclidean":
 "theorem differentiable_euclidean : differentiable 𝕜 f ↔ ∀ i, differentiable 𝕜 fun x => f x i :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_differentiable_iff, differentiable_pi]\n  rfl\n#align differentiable_euclidean differentiable_euclidean\n\n",
 "differentiable_at_euclidean":
 "theorem differentiable_at_euclidean : differentiable_at 𝕜 f y ↔ ∀ i, differentiable_at 𝕜 (fun x => f x i) y :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_differentiable_at_iff, differentiable_at_pi]\n  rfl\n#align differentiable_at_euclidean differentiable_at_euclidean\n\n",
 "deriv_inner_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem deriv_inner_apply {f g : exprℝ → E} {x : exprℝ} (hf : differentiable_at (exprℝ) f x)\n    (hg : differentiable_at (exprℝ) g x) :\n    deriv (fun t => «expr⟪ , ⟫» (f t) (g t)) x = «expr⟪ , ⟫» (f x) (deriv g x) + «expr⟪ , ⟫» (deriv f x) (g x) :=\n  (hf.has_deriv_at.inner hg.has_deriv_at).deriv\n#align deriv_inner_apply deriv_inner_apply\n\n",
 "cont_diff_within_at_euclidean":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\ntheorem cont_diff_within_at_euclidean {n : «exprℕ∞»} :\n    cont_diff_within_at 𝕜 n f t y ↔ ∀ i, cont_diff_within_at 𝕜 n (fun x => f x i) t y :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_cont_diff_within_at_iff, cont_diff_within_at_pi]\n  rfl\n#align cont_diff_within_at_euclidean cont_diff_within_at_euclidean\n\n",
 "cont_diff_on_homeomorph_unit_ball_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cont_diff_on_homeomorph_unit_ball_symm {f : E → E}\n    (h : ∀ (y) (hy : y ∈ ball (0 : E) 1), f y = homeomorph_unit_ball.symm ⟨y, hy⟩) :\n    cont_diff_on (exprℝ) n f <| ball 0 1 := by\n  intro y hy\n  apply cont_diff_at.cont_diff_within_at\n  have hf : «expr =ᶠ[ ] » f ((nhds) y) fun y => «expr • » (1 - «expr‖ ‖» (y : E) ^ 2).sqrt⁻¹ (y : E) :=\n    by\n    rw [eventually_eq_iff_exists_mem]\n    refine' ⟨ball (0 : E) 1, mem_nhds_iff.mpr ⟨ball (0 : E) 1, Set.Subset.refl _, is_open_ball, hy⟩, fun z hz => _⟩\n    rw [h z hz]\n    rfl\n  refine' cont_diff_at.congr_of_eventually_eq _ hf\n  suffices cont_diff_at (exprℝ) n (fun y => (1 - «expr‖ ‖» (y : E) ^ 2).sqrt⁻¹) y by exact this.smul cont_diff_at_id\n  have h : 0 < 1 - «expr‖ ‖» (y : E) ^ 2 := by\n    rwa [mem_ball_zero_iff, ← _root_.abs_one, ← abs_norm_eq_norm, ← sq_lt_sq, one_pow, ← sub_pos] at hy\n  refine' cont_diff_at.inv _ (real.sqrt_ne_zero'.mpr h)\n  refine' cont_diff_at.comp _ (cont_diff_at_sqrt h.ne.symm) _\n  exact cont_diff_at_const.sub cont_diff_norm_sq.cont_diff_at\n#align cont_diff_on_homeomorph_unit_ball_symm cont_diff_on_homeomorph_unit_ball_symm\n\n",
 "cont_diff_on_euclidean":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\ntheorem cont_diff_on_euclidean {n : «exprℕ∞»} : cont_diff_on 𝕜 n f t ↔ ∀ i, cont_diff_on 𝕜 n (fun x => f x i) t :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_cont_diff_on_iff, cont_diff_on_pi]\n  rfl\n#align cont_diff_on_euclidean cont_diff_on_euclidean\n\n",
 "cont_diff_norm_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem cont_diff_norm_sq : cont_diff (exprℝ) n fun x : E => «expr‖ ‖» x ^ 2 :=\n  by\n  simp only [sq, ← inner_self_eq_norm_mul_norm]\n  exact (re_clm : «expr →L[ ] » 𝕜 (exprℝ) (exprℝ)).cont_diff.comp (cont_diff_id.inner cont_diff_id)\n#align cont_diff_norm_sq cont_diff_norm_sq\n\n",
 "cont_diff_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem cont_diff_inner {n} : cont_diff (exprℝ) n fun p : E × E => «expr⟪ , ⟫» p.1 p.2 :=\n  is_bounded_bilinear_map_inner.cont_diff\n#align cont_diff_inner cont_diff_inner\n\n",
 "cont_diff_homeomorph_unit_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cont_diff_homeomorph_unit_ball : cont_diff (exprℝ) n fun x : E => (homeomorph_unit_ball x : E) :=\n  by\n  suffices cont_diff (exprℝ) n fun x => (1 + «expr‖ ‖» x ^ 2).sqrt⁻¹ by exact this.smul cont_diff_id\n  have h : ∀ x : E, 0 < 1 + «expr‖ ‖» x ^ 2 := fun x => by positivity\n  refine' cont_diff.inv _ fun x => real.sqrt_ne_zero'.mpr (h x)\n  exact (cont_diff_const.add cont_diff_norm_sq).sqrt fun x => (h x).ne.symm\n#align cont_diff_homeomorph_unit_ball cont_diff_homeomorph_unit_ball\n\n",
 "cont_diff_euclidean":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\ntheorem cont_diff_euclidean {n : «exprℕ∞»} : cont_diff 𝕜 n f ↔ ∀ i, cont_diff 𝕜 n fun x => f x i :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_cont_diff_iff, cont_diff_pi]\n  rfl\n#align cont_diff_euclidean cont_diff_euclidean\n\n",
 "cont_diff_at_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cont_diff_at_norm {x : E} (hx : x ≠ 0) : cont_diff_at (exprℝ) n norm x :=\n  by\n  have : «expr‖ ‖» (id x) ^ 2 ≠ 0 := pow_ne_zero _ (norm_pos_iff.2 hx).ne'\n  simpa only [id, sqrt_sq, norm_nonneg] using cont_diff_at_id.norm_sq.sqrt this\n#align cont_diff_at_norm cont_diff_at_norm\n\n",
 "cont_diff_at_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem cont_diff_at_inner {p : E × E} {n} : cont_diff_at (exprℝ) n (fun p : E × E => «expr⟪ , ⟫» p.1 p.2) p :=\n  cont_diff_inner.cont_diff_at\n#align cont_diff_at_inner cont_diff_at_inner\n\n",
 "cont_diff_at_euclidean":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\ntheorem cont_diff_at_euclidean {n : «exprℕ∞»} : cont_diff_at 𝕜 n f y ↔ ∀ i, cont_diff_at 𝕜 n (fun x => f x i) y :=\n  by\n  rw [← (euclidean_space.equiv ι 𝕜).comp_cont_diff_at_iff, cont_diff_at_pi]\n  rfl\n#align cont_diff_at_euclidean cont_diff_at_euclidean\n\n"}