{"nhds_basis_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem nhds_basis_closed_ball {x : E} : ((nhds) x).has_basis (fun r : exprℝ => 0 < r) (closed_ball x) :=\n  by\n  rw [to_euclidean.to_homeomorph.nhds_eq_comap x]\n  exact metric.nhds_basis_closed_ball.comap _\n#align nhds_basis_closed_ball nhds_basis_closed_ball\n\n",
 "nhds_basis_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem nhds_basis_ball {x : E} : ((nhds) x).has_basis (fun r : exprℝ => 0 < r) (ball x) :=\n  by\n  rw [to_euclidean.to_homeomorph.nhds_eq_comap x]\n  exact metric.nhds_basis_ball.comap _\n#align nhds_basis_ball nhds_basis_ball\n\n",
 "mem_ball_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem mem_ball_self {x : E} {r : exprℝ} (hr : 0 < r) : x ∈ ball x r :=\n  Metric.mem_ball_self hr\n#align mem_ball_self mem_ball_self\n\n",
 "is_open_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_open_ball {x : E} {r : exprℝ} : IsOpen (ball x r) :=\n  Metric.isOpen_ball.preimage to_euclidean.continuous\n#align is_open_ball is_open_ball\n\n",
 "is_compact_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_compact_closed_ball {x : E} {r : exprℝ} : IsCompact (closed_ball x r) :=\n  by\n  rw [closed_ball_eq_image]\n  exact (is_compact_closed_ball _ _).image to_euclidean.symm.continuous\n#align is_compact_closed_ball is_compact_closed_ball\n\n",
 "is_closed_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_closed_closed_ball {x : E} {r : exprℝ} : IsClosed (closed_ball x r) :=\n  is_compact_closed_ball.is_closed\n#align is_closed_closed_ball is_closed_closed_ball\n\n",
 "exists_pos_lt_subset_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print exists_pos_lt_subset_ball /-\ntheorem exists_pos_lt_subset_ball {R : exprℝ} {s : Set E} {x : E} (hR : 0 < R) (hs : IsClosed s) (h : s ⊆ ball x R) :\n    ∃ r ∈ Ioo 0 R, s ⊆ ball x r := by\n  rw [ball_eq_preimage, ← image_subset_iff] at h\n  rcases exists_pos_lt_subset_ball hR (to_euclidean.is_closed_image.2 hs) h with ⟨r, hr, hsr⟩\n  exact ⟨r, hr, image_subset_iff.1 hsr⟩\n#align exists_pos_lt_subset_ball exists_pos_lt_subset_ball\n-/\n\n",
 "euclidean_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cont_diff.euclidean_dist (hf : cont_diff (exprℝ) n f) (hg : cont_diff (exprℝ) n g) (h : ∀ x, f x ≠ g x) :\n    cont_diff (exprℝ) n fun x => euclidean.dist (f x) (g x) :=\n  by\n  simp only [euclidean.dist]\n  apply @cont_diff.dist (exprℝ)\n  exacts[(@to_euclidean G _ _ _ _ _ _ _).cont_diff.comp hf, (@to_euclidean G _ _ _ _ _ _ _).cont_diff.comp hg, fun x =>\n    to_euclidean.injective.ne (h x)]\n#align cont_diff.euclidean_dist cont_diff.euclidean_dist\n\n",
 "closure_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print closure_ball /-\ntheorem closure_ball (x : E) {r : exprℝ} (h : r ≠ 0) : closure (ball x r) = closed_ball x r := by\n  rw [ball_eq_preimage, ← to_euclidean.preimage_closure, closure_ball (to_euclidean x) h, closed_ball_eq_preimage]\n#align closure_ball closure_ball\n-/\n\n",
 "closed_ball_mem_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem closed_ball_mem_nhds {x : E} {r : exprℝ} (hr : 0 < r) : closed_ball x r ∈ (nhds) x :=\n  nhds_basis_closed_ball.mem_of_mem hr\n#align closed_ball_mem_nhds closed_ball_mem_nhds\n\n",
 "closed_ball_eq_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem closed_ball_eq_preimage (x : E) (r : exprℝ) :\n    closed_ball x r = «expr ⁻¹' » to_euclidean (Metric.closedBall (to_euclidean x) r) :=\n  rfl\n#align closed_ball_eq_preimage closed_ball_eq_preimage\n\n",
 "closed_ball_eq_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem closed_ball_eq_image (x : E) (r : exprℝ) :\n    closed_ball x r = «expr '' » to_euclidean.symm (Metric.closedBall (to_euclidean x) r) := by\n  rw [to_euclidean.image_symm_eq_preimage, closed_ball_eq_preimage]\n#align closed_ball_eq_image closed_ball_eq_image\n\n",
 "ball_subset_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem ball_subset_closed_ball {x : E} {r : exprℝ} : ball x r ⊆ closed_ball x r := fun y (hy : _ < _) => le_of_lt hy\n#align ball_subset_closed_ball ball_subset_closed_ball\n\n",
 "ball_mem_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem ball_mem_nhds {x : E} {r : exprℝ} (hr : 0 < r) : ball x r ∈ (nhds) x :=\n  nhds_basis_ball.mem_of_mem hr\n#align ball_mem_nhds ball_mem_nhds\n\n",
 "ball_eq_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-\nCopyright (c) 2021 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\ntheorem ball_eq_preimage (x : E) (r : exprℝ) : ball x r = «expr ⁻¹' » to_euclidean (Metric.ball (to_euclidean x) r) :=\n  rfl\n#align ball_eq_preimage ball_eq_preimage\n\n"}