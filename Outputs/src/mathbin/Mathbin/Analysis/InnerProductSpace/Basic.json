{"tsum_inner_products_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Bessel's inequality. -/\ntheorem orthonormal.tsum_inner_products_le (hv : orthonormal 𝕜 v) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        («expr‖ ‖» («expr⟪ , ⟫» (v i) x) ^ 2) ≤\n      «expr‖ ‖» x ^ 2 :=\n  by\n  refine' tsum_le_of_sum_le' _ fun s => hv.sum_inner_products_le x\n  simp only [norm_nonneg, pow_nonneg]\n#align orthonormal.tsum_inner_products_le orthonormal.tsum_inner_products_le\n\n",
 "top_orthogonal_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem submodule.top_orthogonal_eq_bot : «expr ᗮ» («expr⊤» : submodule 𝕜 E) = «expr⊥» :=\n  by\n  ext\n  rw [submodule.mem_bot, submodule.mem_orthogonal]\n  exact\n    ⟨fun h => inner_self_eq_zero.mp (h x submodule.mem_top),\n      by\n      rintro rfl\n      simp⟩\n#align submodule.top_orthogonal_eq_bot submodule.top_orthogonal_eq_bot\n\n",
 "to_subtype_range":
 "/-- If `v : ι → E` is an orthonormal family, then `coe : (range v) → E` is an orthonormal\nfamily. -/\ntheorem orthonormal.to_subtype_range {v : ι → E} (hv : orthonormal 𝕜 v) : orthonormal 𝕜 (coe : Set.range v → E) :=\n  (orthonormal_subtype_range hv.linear_independent.injective).2 hv\n#align orthonormal.to_subtype_range orthonormal.to_subtype_range\n\n",
 "to_sesq_form_apply_norm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem to_sesq_form_apply_norm_le {f : «expr →L[ ] » E 𝕜 E'} {v : E'} :\n    «expr‖ ‖» (to_sesq_form f v) ≤ «expr‖ ‖» f * «expr‖ ‖» v :=\n  by\n  refine' op_norm_le_bound _ (mul_nonneg (norm_nonneg _) (norm_nonneg _)) _\n  intro x\n  have h₁ : «expr‖ ‖» (f x) ≤ «expr‖ ‖» f * «expr‖ ‖» x := le_op_norm _ _\n  have h₂ := @norm_inner_le_norm 𝕜 E' _ _ v (f x)\n  calc\n    «expr‖ ‖» («expr⟪ , ⟫» v (f x)) ≤ «expr‖ ‖» v * «expr‖ ‖» (f x) := h₂\n    _ ≤ «expr‖ ‖» v * («expr‖ ‖» f * «expr‖ ‖» x) := mul_le_mul_of_nonneg_left h₁ (norm_nonneg v)\n    _ = «expr‖ ‖» f * «expr‖ ‖» v * «expr‖ ‖» x := by ring\n    \n#align to_sesq_form_apply_norm_le to_sesq_form_apply_norm_le\n\n",
 "to_sesq_form_apply_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n@[simp]\ntheorem to_sesq_form_apply_coe (f : «expr →L[ ] » E 𝕜 E') (x : E') : to_sesq_form f x = (innerSL x).comp f :=\n  rfl\n#align to_sesq_form_apply_coe to_sesq_form_apply_coe\n\n",
 "summable_iff_norm_sq_summable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- A family `f` of mutually-orthogonal elements of `E` is summable, if and only if\n`(λ i, ‖f i‖ ^ 2)` is summable. -/\ntheorem orthogonal_family.summable_iff_norm_sq_summable [complete_space E] (f : ∀ i, G i) :\n    (summable fun i => V i (f i)) ↔ summable fun i => «expr‖ ‖» (f i) ^ 2 := by\n  classical\n    simp only [summable_iff_cauchy_seq_finset, normed_add_comm_group.cauchy_seq_iff, real.norm_eq_abs]\n    constructor\n    · intro hf ε hε\n      obtain ⟨a, H⟩ := hf _ (sqrt_pos.mpr hε)\n      use a\n      intro s₁ hs₁ s₂ hs₂\n      rw [← finset.sum_sdiff_sub_sum_sdiff]\n      refine' (_root_.abs_sub _ _).trans_lt _\n      have : ∀ i, 0 ≤ «expr‖ ‖» (f i) ^ 2 := fun i : ι => sq_nonneg _\n      simp only [finset.abs_sum_of_nonneg' this]\n      have :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₁ \\ s₂)\n              («expr‖ ‖» (f i) ^ 2) +\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₂ \\ s₁)\n              («expr‖ ‖» (f i) ^ 2) <\n          sqrt ε ^ 2 :=\n        by\n        rw [← hV.norm_sq_diff_sum, sq_lt_sq, _root_.abs_of_nonneg (sqrt_nonneg _), _root_.abs_of_nonneg (norm_nonneg _)]\n        exact H s₁ hs₁ s₂ hs₂\n      have hη := sq_sqrt (le_of_lt hε)\n      linarith\n    · intro hf ε hε\n      have hε' : 0 < ε ^ 2 / 2 := half_pos (sq_pos_of_pos hε)\n      obtain ⟨a, H⟩ := hf _ hε'\n      use a\n      intro s₁ hs₁ s₂ hs₂\n      refine' (abs_lt_of_sq_lt_sq' _ (le_of_lt hε)).2\n      have has : a ≤ «expr ⊓ » s₁ s₂ := le_inf hs₁ hs₂\n      rw [hV.norm_sq_diff_sum]\n      have Hs₁ :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₁ \\ s₂)\n            («expr‖ ‖» (f x) ^ 2) <\n          ε ^ 2 / 2 :=\n        by\n        convert H _ hs₁ _ has\n        have : «expr ⊓ » s₁ s₂ ⊆ s₁ := Finset.inter_subset_left _ _\n        rw [← finset.sum_sdiff this, add_tsub_cancel_right, finset.abs_sum_of_nonneg']\n        · simp\n        · exact fun i => sq_nonneg _\n      have Hs₂ :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₂ \\ s₁)\n            («expr‖ ‖» (f x) ^ 2) <\n          ε ^ 2 / 2 :=\n        by\n        convert H _ hs₂ _ has\n        have : «expr ⊓ » s₁ s₂ ⊆ s₂ := Finset.inter_subset_right _ _\n        rw [← finset.sum_sdiff this, add_tsub_cancel_right, finset.abs_sum_of_nonneg']\n        · simp\n        · exact fun i => sq_nonneg _\n      linarith\n#align orthogonal_family.summable_iff_norm_sq_summable orthogonal_family.summable_iff_norm_sq_summable\n\n",
 "sum_inner_products_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Bessel's inequality for finite sums. -/\ntheorem orthonormal.sum_inner_products_le {s : Finset ι} (hv : orthonormal 𝕜 v) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr‖ ‖» («expr⟪ , ⟫» (v i) x) ^ 2) ≤\n      «expr‖ ‖» x ^ 2 :=\n  by\n  have h₂ :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          («expr⟪ , ⟫» (v i) x * «expr⟪ , ⟫» x (v j) * «expr⟪ , ⟫» (v j) (v i))) =\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          («expr⟪ , ⟫» (v k) x * «expr⟪ , ⟫» x (v k)) :\n        𝕜) :=\n    hv.inner_left_right_finset\n  have h₃ : ∀ z : 𝕜, re (z * (star_ring_end) z) = «expr‖ ‖» z ^ 2 :=\n    by\n    intro z\n    simp only [mul_conj, norm_sq_eq_def']\n    norm_cast\n  suffices hbf :\n    «expr‖ ‖»\n          (x -\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n              («expr • » («expr⟪ , ⟫» (v i) x) (v i))) ^\n        2 =\n      «expr‖ ‖» x ^ 2 -\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          («expr‖ ‖» («expr⟪ , ⟫» (v i) x) ^ 2)\n  · rw [← sub_nonneg, ← hbf]\n    simp only [norm_nonneg, pow_nonneg]\n  rw [norm_sub_sq, sub_add]\n  simp only [inner_product_space.norm_sq_eq_inner, inner_sum]\n  simp only [sum_inner, two_mul, inner_smul_right, inner_conj_sym, ← mul_assoc, h₂, ← h₃, inner_conj_sym,\n    add_monoid_hom.map_sum, finset.mul_sum, ← finset.sum_sub_distrib, inner_smul_left, add_sub_cancel']\n#align orthonormal.sum_inner_products_le orthonormal.sum_inner_products_le\n\n",
 "sum_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem dfinsupp.sum_inner {ι : Type _} [dec : decidable_eq ι] {α : ι → Type _} [∀ i, add_zero_class (α i)]\n    [∀ (i) (x : α i), decidable (x ≠ 0)] (f : ∀ i, α i → E)\n    (l : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i))\n    (x : E) : «expr⟪ , ⟫» (l.sum f) x = l.sum fun i a => «expr⟪ , ⟫» (f i a) x := by\n  simp (config := { contextual := true }) only [dfinsupp.sum, sum_inner, smul_eq_mul]\n#align dfinsupp.sum_inner dfinsupp.sum_inner\n\n",
 "sub_mem_orthogonal_of_inner_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\ntheorem submodule.sub_mem_orthogonal_of_inner_right {x y : E}\n    (h : ∀ v : K, «expr⟪ , ⟫» (v : E) x = «expr⟪ , ⟫» (v : E) y) : x - y ∈ «expr ᗮ» K :=\n  by\n  intro u hu\n  rw [inner_sub_right, sub_eq_zero]\n  exact h ⟨u, hu⟩\n#align submodule.sub_mem_orthogonal_of_inner_right submodule.sub_mem_orthogonal_of_inner_right\n\n",
 "sub_mem_orthogonal_of_inner_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\ntheorem submodule.sub_mem_orthogonal_of_inner_left {x y : E} (h : ∀ v : K, «expr⟪ , ⟫» x v = «expr⟪ , ⟫» y v) :\n    x - y ∈ «expr ᗮ» K := by\n  rw [submodule.mem_orthogonal']\n  intro u hu\n  rw [inner_sub_left, sub_eq_zero]\n  exact h ⟨u, hu⟩\n#align submodule.sub_mem_orthogonal_of_inner_left submodule.sub_mem_orthogonal_of_inner_left\n\n",
 "sqrt_norm_sq_eq_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprnorm_sqF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem sqrt_norm_sq_eq_norm {x : F} : sqrt ((exprnorm_sqF) x) = «expr‖ ‖» x :=\n  rfl\n#align sqrt_norm_sq_eq_norm sqrt_norm_sq_eq_norm\n\n",
 "real_inner_sub_sub_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/-- Expand `⟪x - y, x - y⟫_ℝ` -/\ntheorem real_inner_sub_sub_self {x y : F} :\n    «expr⟪ , ⟫_ℝ» (x - y) (x - y) = «expr⟪ , ⟫_ℝ» x x - 2 * «expr⟪ , ⟫_ℝ» x y + «expr⟪ , ⟫_ℝ» y y :=\n  by\n  have : «expr⟪ , ⟫_ℝ» y x = «expr⟪ , ⟫_ℝ» x y := by rw [← inner_conj_sym] <;> rfl\n  simp only [inner_sub_sub_self, this, add_left_inj]\n  ring\n#align real_inner_sub_sub_self real_inner_sub_sub_self\n\n",
 "real_inner_smul_self_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The inner product of a vector with a multiple of itself. -/\ntheorem real_inner_smul_self_right (x : F) (r : exprℝ) :\n    «expr⟪ , ⟫_ℝ» x («expr • » r x) = r * («expr‖ ‖» x * «expr‖ ‖» x) := by\n  rw [inner_smul_right, ← real_inner_self_eq_norm_mul_norm]\n#align real_inner_smul_self_right real_inner_smul_self_right\n\n",
 "real_inner_smul_self_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The inner product of a vector with a multiple of itself. -/\ntheorem real_inner_smul_self_left (x : F) (r : exprℝ) :\n    «expr⟪ , ⟫_ℝ» («expr • » r x) x = r * («expr‖ ‖» x * «expr‖ ‖» x) := by\n  rw [real_inner_smul_left, ← real_inner_self_eq_norm_mul_norm]\n#align real_inner_smul_self_left real_inner_smul_self_left\n\n",
 "real_inner_smul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\ntheorem real_inner_smul_right {x y : F} {r : exprℝ} : «expr⟪ , ⟫_ℝ» x («expr • » r y) = r * «expr⟪ , ⟫_ℝ» x y :=\n  inner_smul_right\n#align real_inner_smul_right real_inner_smul_right\n\n",
 "real_inner_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\ntheorem real_inner_smul_left {x y : F} {r : exprℝ} : «expr⟪ , ⟫_ℝ» («expr • » r x) y = r * «expr⟪ , ⟫_ℝ» x y :=\n  inner_smul_left\n#align real_inner_smul_left real_inner_smul_left\n\n",
 "real_inner_self_nonpos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\ntheorem real_inner_self_nonpos {x : F} : «expr⟪ , ⟫_ℝ» x x ≤ 0 ↔ x = 0 :=\n  by\n  have h := @inner_self_nonpos (exprℝ) F _ _ x\n  simpa using h\n#align real_inner_self_nonpos real_inner_self_nonpos\n\n",
 "real_inner_self_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\ntheorem real_inner_self_nonneg {x : F} : 0 ≤ «expr⟪ , ⟫_ℝ» x x :=\n  @inner_self_nonneg (exprℝ) F _ _ x\n#align real_inner_self_nonneg real_inner_self_nonneg\n\n",
 "real_inner_self_eq_norm_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem real_inner_self_eq_norm_sq (x : F) : «expr⟪ , ⟫_ℝ» x x = «expr‖ ‖» x ^ 2 := by\n  rw [pow_two, real_inner_self_eq_norm_mul_norm]\n#align real_inner_self_eq_norm_sq real_inner_self_eq_norm_sq\n\n",
 "real_inner_self_eq_norm_mul_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem real_inner_self_eq_norm_mul_norm (x : F) : «expr⟪ , ⟫_ℝ» x x = «expr‖ ‖» x * «expr‖ ‖» x :=\n  by\n  have h := @inner_self_eq_norm_mul_norm (exprℝ) F _ _ x\n  simpa using h\n#align real_inner_self_eq_norm_mul_norm real_inner_self_eq_norm_mul_norm\n\n",
 "real_inner_self_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\ntheorem real_inner_self_abs {x : F} : (exprabsR) («expr⟪ , ⟫_ℝ» x x) = «expr⟪ , ⟫_ℝ» x x :=\n  by\n  have h := @inner_self_abs_to_K (exprℝ) F _ _ x\n  simpa using h\n#align real_inner_self_abs real_inner_self_abs\n\n",
 "real_inner_mul_inner_self_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/-- Cauchy–Schwarz inequality for real inner products. -/\ntheorem real_inner_mul_inner_self_le (x y : F) :\n    «expr⟪ , ⟫_ℝ» x y * «expr⟪ , ⟫_ℝ» x y ≤ «expr⟪ , ⟫_ℝ» x x * «expr⟪ , ⟫_ℝ» y y :=\n  by\n  have h₁ : «expr⟪ , ⟫_ℝ» y x = «expr⟪ , ⟫_ℝ» x y := by rw [← inner_conj_sym] <;> rfl\n  have h₂ := @inner_mul_inner_self_le (exprℝ) F _ _ x y\n  dsimp at h₂\n  have h₃ := abs_mul_abs_self («expr⟪ , ⟫_ℝ» x y)\n  rw [h₁] at h₂\n  simpa [h₃] using h₂\n#align real_inner_mul_inner_self_le real_inner_mul_inner_self_le\n\n",
 "real_inner_le_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Cauchy–Schwarz inequality with norm -/\ntheorem real_inner_le_norm (x y : F) : «expr⟪ , ⟫_ℝ» x y ≤ «expr‖ ‖» x * «expr‖ ‖» y :=\n  le_trans (le_abs_self _) (abs_real_inner_le_norm _ _)\n#align real_inner_le_norm real_inner_le_norm\n\n",
 "real_inner_eq_re_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem real_inner_eq_re_inner (x y : E) :\n    @has_inner.inner (exprℝ) E (has_inner.is_R_or_C_to_real 𝕜 E) x y = re («expr⟪ , ⟫» x y) :=\n  rfl\n#align real_inner_eq_re_inner real_inner_eq_re_inner\n\n",
 "real_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Polarization identity: The real inner product, in terms of the norm. -/\ntheorem real_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two (x y : F) :\n    «expr⟪ , ⟫_ℝ» x y =\n      («expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y - «expr‖ ‖» (x - y) * «expr‖ ‖» (x - y)) / 2 :=\n  re_to_real.symm.trans <| re_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two x y\n#align\n  real_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two real_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two\n\n",
 "real_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Polarization identity: The real inner product, in terms of the norm. -/\ntheorem real_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two (x y : F) :\n    «expr⟪ , ⟫_ℝ» x y =\n      («expr‖ ‖» (x + y) * «expr‖ ‖» (x + y) - «expr‖ ‖» x * «expr‖ ‖» x - «expr‖ ‖» y * «expr‖ ‖» y) / 2 :=\n  re_to_real.symm.trans <| re_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two x y\n#align\n  real_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two real_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two\n\n",
 "real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_pos_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The inner product of a nonzero vector with a positive multiple of\nitself, divided by the product of their norms, has value 1. -/\ntheorem real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_pos_mul {x : F} {r : exprℝ} (hx : x ≠ 0) (hr : 0 < r) :\n    «expr⟪ , ⟫_ℝ» x («expr • » r x) / («expr‖ ‖» x * «expr‖ ‖» («expr • » r x)) = 1 :=\n  by\n  rw [real_inner_smul_self_right, norm_smul, real.norm_eq_abs, ← mul_assoc («expr‖ ‖» x), mul_comm _ ((exprabsR) r),\n    mul_assoc, _root_.abs_of_nonneg (le_of_lt hr), div_self]\n  exact mul_ne_zero (ne_of_gt hr) fun h => hx (norm_eq_zero.1 (eq_zero_of_mul_self_eq_zero h))\n#align\n  real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_pos_mul real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_pos_mul\n\n",
 "real_inner_div_norm_mul_norm_eq_one_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The inner product of two vectors, divided by the product of their\nnorms, has value 1 if and only if they are nonzero and one is\na positive multiple of the other. -/\ntheorem real_inner_div_norm_mul_norm_eq_one_iff (x y : F) :\n    «expr⟪ , ⟫_ℝ» x y / («expr‖ ‖» x * «expr‖ ‖» y) = 1 ↔ x ≠ 0 ∧ ∃ r : exprℝ, 0 < r ∧ y = «expr • » r x :=\n  by\n  constructor\n  · intro h\n    have ha := h\n    apply_fun exprabsR  at ha\n    norm_num at ha\n    rcases(abs_real_inner_div_norm_mul_norm_eq_one_iff x y).1 ha with ⟨hx, ⟨r, ⟨hr, hy⟩⟩⟩\n    use hx, r\n    refine' and.intro _ hy\n    by_contra hrneg\n    rw [hy] at h\n    rw [real_inner_div_norm_mul_norm_eq_neg_one_of_ne_zero_of_neg_mul hx (lt_of_le_of_ne (le_of_not_lt hrneg) hr)] at h\n    norm_num at h\n  · intro h\n    rcases h with ⟨hx, ⟨r, ⟨hr, hy⟩⟩⟩\n    rw [hy]\n    exact real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_pos_mul hx hr\n#align real_inner_div_norm_mul_norm_eq_one_iff real_inner_div_norm_mul_norm_eq_one_iff\n\n",
 "real_inner_div_norm_mul_norm_eq_neg_one_of_ne_zero_of_neg_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The inner product of a nonzero vector with a negative multiple of\nitself, divided by the product of their norms, has value -1. -/\ntheorem real_inner_div_norm_mul_norm_eq_neg_one_of_ne_zero_of_neg_mul {x : F} {r : exprℝ} (hx : x ≠ 0) (hr : r < 0) :\n    «expr⟪ , ⟫_ℝ» x («expr • » r x) / («expr‖ ‖» x * «expr‖ ‖» («expr • » r x)) = -1 :=\n  by\n  rw [real_inner_smul_self_right, norm_smul, real.norm_eq_abs, ← mul_assoc («expr‖ ‖» x), mul_comm _ ((exprabsR) r),\n    mul_assoc, abs_of_neg hr, neg_mul, div_neg_eq_neg_div, div_self]\n  exact mul_ne_zero (ne_of_lt hr) fun h => hx (norm_eq_zero.1 (eq_zero_of_mul_self_eq_zero h))\n#align\n  real_inner_div_norm_mul_norm_eq_neg_one_of_ne_zero_of_neg_mul real_inner_div_norm_mul_norm_eq_neg_one_of_ne_zero_of_neg_mul\n\n",
 "real_inner_div_norm_mul_norm_eq_neg_one_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The inner product of two vectors, divided by the product of their\nnorms, has value -1 if and only if they are nonzero and one is\na negative multiple of the other. -/\ntheorem real_inner_div_norm_mul_norm_eq_neg_one_iff (x y : F) :\n    «expr⟪ , ⟫_ℝ» x y / («expr‖ ‖» x * «expr‖ ‖» y) = -1 ↔ x ≠ 0 ∧ ∃ r : exprℝ, r < 0 ∧ y = «expr • » r x :=\n  by\n  constructor\n  · intro h\n    have ha := h\n    apply_fun exprabsR  at ha\n    norm_num at ha\n    rcases(abs_real_inner_div_norm_mul_norm_eq_one_iff x y).1 ha with ⟨hx, ⟨r, ⟨hr, hy⟩⟩⟩\n    use hx, r\n    refine' and.intro _ hy\n    by_contra hrpos\n    rw [hy] at h\n    rw [real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_pos_mul hx (lt_of_le_of_ne (le_of_not_lt hrpos) hr.symm)] at h\n    norm_num at h\n  · intro h\n    rcases h with ⟨hx, ⟨r, ⟨hr, hy⟩⟩⟩\n    rw [hy]\n    exact real_inner_div_norm_mul_norm_eq_neg_one_of_ne_zero_of_neg_mul hx hr\n#align real_inner_div_norm_mul_norm_eq_neg_one_iff real_inner_div_norm_mul_norm_eq_neg_one_iff\n\n",
 "real_inner_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\ntheorem real_inner_comm (x y : F) : «expr⟪ , ⟫_ℝ» y x = «expr⟪ , ⟫_ℝ» x y :=\n  @inner_conj_sym (exprℝ) _ _ _ x y\n#align real_inner_comm real_inner_comm\n\n",
 "real_inner_add_sub_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The sum and difference of two vectors are orthogonal if and only\nif they have the same norm. -/\ntheorem real_inner_add_sub_eq_zero_iff (x y : F) : «expr⟪ , ⟫_ℝ» (x + y) (x - y) = 0 ↔ «expr‖ ‖» x = «expr‖ ‖» y :=\n  by\n  conv_rhs => rw [← mul_self_inj_of_nonneg (norm_nonneg _) (norm_nonneg _)]\n  simp only [← inner_self_eq_norm_mul_norm, inner_add_left, inner_sub_right, real_inner_comm y x, sub_eq_zero,\n    re_to_real]\n  constructor\n  · intro h\n    rw [add_comm] at h\n    linarith\n  · intro h\n    linarith\n#align real_inner_add_sub_eq_zero_iff real_inner_add_sub_eq_zero_iff\n\n",
 "real_inner_add_add_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/-- Expand `⟪x + y, x + y⟫_ℝ` -/\ntheorem real_inner_add_add_self {x y : F} :\n    «expr⟪ , ⟫_ℝ» (x + y) (x + y) = «expr⟪ , ⟫_ℝ» x x + 2 * «expr⟪ , ⟫_ℝ» x y + «expr⟪ , ⟫_ℝ» y y :=\n  by\n  have : «expr⟪ , ⟫_ℝ» y x = «expr⟪ , ⟫_ℝ» x y := by rw [← inner_conj_sym] <;> rfl\n  simp only [inner_add_add_self, this, add_left_inj]\n  ring\n#align real_inner_add_add_self real_inner_add_add_self\n\n",
 "real_inner_I_smul_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem real_inner_I_smul_self (x : E) :\n    @has_inner.inner (exprℝ) E (has_inner.is_R_or_C_to_real 𝕜 E) x («expr • » (I : 𝕜) x) = 0 := by\n  simp [real_inner_eq_re_inner, inner_smul_right]\n#align real_inner_I_smul_self real_inner_I_smul_self\n\n",
 "re_inner_le_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem re_inner_le_norm (x y : E) : re («expr⟪ , ⟫» x y) ≤ «expr‖ ‖» x * «expr‖ ‖» y :=\n  le_trans (re_le_abs (inner x y)) (abs_inner_le_norm x y)\n#align re_inner_le_norm re_inner_le_norm\n\n",
 "re_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Polarization identity: The real part of the  inner product, in terms of the norm. -/\ntheorem re_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two (x y : E) :\n    re («expr⟪ , ⟫» x y) =\n      («expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y - «expr‖ ‖» (x - y) * «expr‖ ‖» (x - y)) / 2 :=\n  by\n  rw [norm_sub_mul_self]\n  ring\n#align\n  re_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two re_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two\n\n",
 "re_inner_eq_norm_add_mul_self_sub_norm_sub_mul_self_div_four":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Polarization identity: The real part of the  inner product, in terms of the norm. -/\ntheorem re_inner_eq_norm_add_mul_self_sub_norm_sub_mul_self_div_four (x y : E) :\n    re («expr⟪ , ⟫» x y) = («expr‖ ‖» (x + y) * «expr‖ ‖» (x + y) - «expr‖ ‖» (x - y) * «expr‖ ‖» (x - y)) / 4 :=\n  by\n  rw [norm_add_mul_self, norm_sub_mul_self]\n  ring\n#align\n  re_inner_eq_norm_add_mul_self_sub_norm_sub_mul_self_div_four re_inner_eq_norm_add_mul_self_sub_norm_sub_mul_self_div_four\n\n",
 "re_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Polarization identity: The real part of the  inner product, in terms of the norm. -/\ntheorem re_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two (x y : E) :\n    re («expr⟪ , ⟫» x y) =\n      («expr‖ ‖» (x + y) * «expr‖ ‖» (x + y) - «expr‖ ‖» x * «expr‖ ‖» x - «expr‖ ‖» y * «expr‖ ‖» y) / 2 :=\n  by\n  rw [norm_add_mul_self]\n  ring\n#align\n  re_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two re_inner_eq_norm_add_mul_self_sub_norm_mul_self_sub_norm_mul_self_div_two\n\n",
 "re_apply_inner_self_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem continuous_linear_map.re_apply_inner_self_smul (T : «expr →L[ ] » E 𝕜 E) (x : E) {c : 𝕜} :\n    T.re_apply_inner_self («expr • » c x) = «expr‖ ‖» c ^ 2 * T.re_apply_inner_self x := by\n  simp only [continuous_linear_map.map_smul, continuous_linear_map.re_apply_inner_self_apply, inner_smul_left,\n    inner_smul_right, ← mul_assoc, mul_conj, norm_sq_eq_def', ← smul_re,\n    algebra.smul_def («expr‖ ‖» c ^ 2) («expr⟪ , ⟫» (T x) x), algebra_map_eq_of_real]\n#align continuous_linear_map.re_apply_inner_self_smul continuous_linear_map.re_apply_inner_self_smul\n\n",
 "re_apply_inner_self_continuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\ntheorem continuous_linear_map.re_apply_inner_self_continuous (T : «expr →L[ ] » E 𝕜 E) :\n    continuous T.re_apply_inner_self :=\n  re_clm.continuous.comp <| T.continuous.inner continuous_id\n#align continuous_linear_map.re_apply_inner_self_continuous continuous_linear_map.re_apply_inner_self_continuous\n\n",
 "re_apply_inner_self_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem continuous_linear_map.re_apply_inner_self_apply (T : «expr →L[ ] » E 𝕜 E) (x : E) :\n    T.re_apply_inner_self x = re («expr⟪ , ⟫» (T x) x) :=\n  rfl\n#align continuous_linear_map.re_apply_inner_self_apply continuous_linear_map.re_apply_inner_self_apply\n\n",
 "parallelogram_law_with_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem parallelogram_law_with_norm (x y : E) :\n    «expr‖ ‖» (x + y) * «expr‖ ‖» (x + y) + «expr‖ ‖» (x - y) * «expr‖ ‖» (x - y) =\n      2 * («expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y) :=\n  by\n  simp only [← inner_self_eq_norm_mul_norm]\n  rw [← re.map_add, parallelogram_law, two_mul, two_mul]\n  simp only [re.map_add]\n#align parallelogram_law_with_norm parallelogram_law_with_norm\n\n",
 "parallelogram_law_with_nnnorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem parallelogram_law_with_nnnorm (x y : E) :\n    «expr‖ ‖₊» (x + y) * «expr‖ ‖₊» (x + y) + «expr‖ ‖₊» (x - y) * «expr‖ ‖₊» (x - y) =\n      2 * («expr‖ ‖₊» x * «expr‖ ‖₊» x + «expr‖ ‖₊» y * «expr‖ ‖₊» y) :=\n  subtype.ext <| parallelogram_law_with_norm x y\n#align parallelogram_law_with_nnnorm parallelogram_law_with_nnnorm\n\n",
 "parallelogram_law":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- Parallelogram law -/\ntheorem parallelogram_law {x y : E} :\n    «expr⟪ , ⟫» (x + y) (x + y) + «expr⟪ , ⟫» (x - y) (x - y) = 2 * («expr⟪ , ⟫» x x + «expr⟪ , ⟫» y y) := by\n  simp [inner_add_add_self, inner_sub_sub_self, two_mul, sub_eq_add_neg, add_comm, add_left_comm]\n#align parallelogram_law parallelogram_law\n\n",
 "orthonormal_subtype_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/-- An injective family `v : ι → E` is orthonormal if and only if `coe : (range v) → E` is\northonormal. -/\ntheorem orthonormal_subtype_range {v : ι → E} (hv : function.injective v) :\n    orthonormal 𝕜 (coe : Set.range v → E) ↔ orthonormal 𝕜 v :=\n  by\n  let f : «expr ≃ » ι (Set.range v) := Equiv.ofInjective v hv\n  refine' ⟨fun h => h.comp f f.injective, fun h => _⟩\n  rw [← Equiv.self_comp_ofInjective_symm hv]\n  exact h.comp f.symm f.symm.injective\n#align orthonormal_subtype_range orthonormal_subtype_range\n\n",
 "orthonormal_subtype_iff_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- `if ... then ... else` characterization of a set of vectors being orthonormal.  (Inner product\nequals Kronecker delta.) -/\ntheorem orthonormal_subtype_iff_ite {s : set E} :\n    orthonormal 𝕜 (coe : s → E) ↔ ∀ v ∈ s, ∀ w ∈ s, «expr⟪ , ⟫» v w = if v = w then 1 else 0 :=\n  by\n  rw [orthonormal_iff_ite]\n  constructor\n  · intro h v hv w hw\n    convert h ⟨v, hv⟩ ⟨w, hw⟩ using 1\n    simp\n  · rintro h ⟨v, hv⟩ ⟨w, hw⟩\n    convert h v hv w hw using 1\n    simp\n#align orthonormal_subtype_iff_ite orthonormal_subtype_iff_ite\n\n",
 "orthonormal_span":
 "theorem orthonormal_span {ι : Type _} {v : ι → E} (hv : orthonormal 𝕜 v) :\n    @orthonormal 𝕜 (submodule.span 𝕜 (Set.range v)) _ _ ι fun i : ι =>\n      ⟨v i, submodule.subset_span (Set.mem_range_self i)⟩ :=\n  hv.cod_restrict (submodule.span 𝕜 (Set.range v)) fun i => submodule.subset_span (Set.mem_range_self i)\n#align orthonormal_span orthonormal_span\n\n",
 "orthonormal_sigma_orthonormal":
 "theorem orthogonal_family.orthonormal_sigma_orthonormal {α : ι → Type _} {v_family : ∀ i, α i → G i}\n    (hv_family : ∀ i, orthonormal 𝕜 (v_family i)) : orthonormal 𝕜 fun a : Σi, α i => V a.1 (v_family a.1 a.2) :=\n  by\n  constructor\n  · rintro ⟨i, v⟩\n    simpa only [linear_isometry.norm_map] using (hv_family i).left v\n  rintro ⟨i, v⟩ ⟨j, w⟩ hvw\n  by_cases hij : i = j\n  · subst hij\n    have : v ≠ w := fun h => by\n      subst h\n      exact hvw rfl\n    simpa only [linear_isometry.inner_map_map] using (hv_family i).2 this\n  · exact hV hij (v_family i v) (v_family j w)\n#align orthogonal_family.orthonormal_sigma_orthonormal orthogonal_family.orthonormal_sigma_orthonormal\n\n",
 "orthonormal_sUnion_of_directed":
 "theorem orthonormal_sUnion_of_directed {s : set (set E)} (hs : DirectedOn (· ⊆ ·) s)\n    (h : ∀ a ∈ s, orthonormal 𝕜 (fun x => x : (a : set E) → E)) : orthonormal 𝕜 (fun x => x : ⋃₀ s → E) := by\n  rw [Set.unionₛ_eq_unionᵢ] <;> exact orthonormal_Union_of_directed hs.directed_coe (by simpa using h)\n#align orthonormal_sUnion_of_directed orthonormal_sUnion_of_directed\n\n",
 "orthonormal_of_forall_eq_or_eq_neg":
 "/-- Given an orthonormal family, a second family of vectors is orthonormal if every vector equals\nthe corresponding vector in the original family or its negation. -/\ntheorem orthonormal.orthonormal_of_forall_eq_or_eq_neg {v w : ι → E} (hv : orthonormal 𝕜 v)\n    (hw : ∀ i, w i = v i ∨ w i = -v i) : orthonormal 𝕜 w := by\n  classical\n    rw [orthonormal_iff_ite] at *\n    intro i j\n    cases' hw i with hi hi <;> cases' hw j with hj hj <;> split_ifs with h <;>\n      simpa only [hi, hj, h, inner_neg_right, inner_neg_left, neg_neg, eq_self_iff_true, neg_eq_zero] using hv i j\n#align orthonormal.orthonormal_of_forall_eq_or_eq_neg orthonormal.orthonormal_of_forall_eq_or_eq_neg\n\n",
 "orthonormal_iff_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- `if ... then ... else` characterization of an indexed set of vectors being orthonormal.  (Inner\nproduct equals Kronecker delta.) -/\ntheorem orthonormal_iff_ite {v : ι → E} :\n    orthonormal 𝕜 v ↔ ∀ i j, «expr⟪ , ⟫» (v i) (v j) = if i = j then (1 : 𝕜) else (0 : 𝕜) :=\n  by\n  constructor\n  · intro hv i j\n    split_ifs\n    · simp [h, inner_self_eq_norm_sq_to_K, hv.1]\n    · exact hv.2 h\n  · intro h\n    constructor\n    · intro i\n      have h' : «expr‖ ‖» (v i) ^ 2 = 1 ^ 2 := by simp [norm_sq_eq_inner, h i i]\n      have h₁ : 0 ≤ «expr‖ ‖» (v i) := norm_nonneg _\n      have h₂ : (0 : exprℝ) ≤ 1 := zero_le_one\n      rwa [sq_eq_sq h₁ h₂] at h'\n    · intro i j hij\n      simpa [hij] using h i j\n#align orthonormal_iff_ite orthonormal_iff_ite\n\n",
 "orthonormal_empty":
 "/- The material that follows, culminating in the existence of a maximal orthonormal subset, is\nadapted from the corresponding development of the theory of linearly independents sets.  See\n`exists_linear_independent` in particular. -/\ntheorem orthonormal_empty : orthonormal 𝕜 (fun x => x : (∅ : set E) → E) := by\n  classical simp [orthonormal_subtype_iff_ite]\n#align orthonormal_empty orthonormal_empty\n\n",
 "orthonormal_comp_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗᵢ[ ] » -/\n/-- A linear isometry preserves the property of being orthonormal. -/\ntheorem linear_isometry.orthonormal_comp_iff {v : ι → E} (f : «expr →ₗᵢ[ ] » E 𝕜 E') :\n    orthonormal 𝕜 (f ∘ v) ↔ orthonormal 𝕜 v := by classical simp_rw [orthonormal_iff_ite, linear_isometry.inner_map_map]\n#align linear_isometry.orthonormal_comp_iff linear_isometry.orthonormal_comp_iff\n\n",
 "orthonormal_Union_of_directed":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem orthonormal_Union_of_directed {η : Type _} {s : η → set E} (hs : Directed (· ⊆ ·) s)\n    (h : ∀ i, orthonormal 𝕜 (fun x => x : s i → E)) :\n    orthonormal 𝕜\n      (fun x => x :\n        «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s i) → E) :=\n  by\n  classical\n    rw [orthonormal_subtype_iff_ite]\n    rintro x ⟨_, ⟨i, rfl⟩, hxi⟩ y ⟨_, ⟨j, rfl⟩, hyj⟩\n    obtain ⟨k, hik, hjk⟩ := hs i j\n    have h_orth : orthonormal 𝕜 (fun x => x : s k → E) := h k\n    rw [orthonormal_subtype_iff_ite] at h_orth\n    exact h_orth x (hik hxi) y (hjk hyj)\n#align orthonormal_Union_of_directed orthonormal_Union_of_directed\n\n",
 "orthogonal_orthogonal_monotone":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/-- `submodule.orthogonal.orthogonal` preserves the `≤` ordering of two\nsubspaces. -/\ntheorem submodule.orthogonal_orthogonal_monotone {K₁ K₂ : submodule 𝕜 E} (h : K₁ ≤ K₂) :\n    «expr ᗮ» («expr ᗮ» K₁) ≤ «expr ᗮ» («expr ᗮ» K₂) :=\n  submodule.orthogonal_le (submodule.orthogonal_le h)\n#align submodule.orthogonal_orthogonal_monotone submodule.orthogonal_orthogonal_monotone\n\n",
 "orthogonal_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/-- `submodule.orthogonal` reverses the `≤` ordering of two\nsubspaces. -/\ntheorem submodule.orthogonal_le {K₁ K₂ : submodule 𝕜 E} (h : K₁ ≤ K₂) : «expr ᗮ» K₂ ≤ «expr ᗮ» K₁ :=\n  (submodule.orthogonal_gc 𝕜 E).monotone_l h\n#align submodule.orthogonal_le submodule.orthogonal_le\n\n",
 "orthogonal_gc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/-- `submodule.orthogonal` gives a `galois_connection` between\n`submodule 𝕜 E` and its `order_dual`. -/\ntheorem submodule.orthogonal_gc :\n    @GaloisConnection (submodule 𝕜 E) («expr ᵒᵈ» (submodule 𝕜 E)) _ _ submodule.orthogonal submodule.orthogonal :=\n  fun K₁ K₂ =>\n  ⟨fun h v hv u hu => submodule.inner_left_of_mem_orthogonal hv (h hu), fun h v hv u hu =>\n    submodule.inner_left_of_mem_orthogonal hv (h hu)⟩\n#align submodule.orthogonal_gc submodule.orthogonal_gc\n\n",
 "orthogonal_family_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\ntheorem submodule.orthogonal_family_self :\n    @orthogonal_family 𝕜 E _ _ _ (fun b => ((cond b K («expr ᗮ» K) : submodule 𝕜 E) : Type _)) _ fun b =>\n      (cond b K («expr ᗮ» K)).subtypeₗᵢ\n  | tt, tt => absurd rfl\n  | tt, ff => fun _ x y => submodule.inner_right_of_mem_orthogonal x.prop y.prop\n  | ff, tt => fun _ x y => submodule.inner_left_of_mem_orthogonal y.prop x.prop\n  | ff, ff => absurd rfl\n#align submodule.orthogonal_family_self submodule.orthogonal_family_self\n\n",
 "orthogonal_family":
 "theorem orthonormal.orthogonal_family {v : ι → E} (hv : orthonormal 𝕜 v) :\n    @orthogonal_family 𝕜 _ _ _ _ (fun i : ι => 𝕜) _ fun i => linear_isometry.to_span_singleton 𝕜 E (hv.1 i) :=\n  fun i j hij a b => by simp [inner_smul_left, inner_smul_right, hv.2 hij]\n#align orthonormal.orthogonal_family orthonormal.orthogonal_family\n\n",
 "orthogonal_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem submodule.orthogonal_eq_top_iff : «expr ᗮ» K = «expr⊤» ↔ K = «expr⊥» :=\n  by\n  refine'\n    ⟨_, by\n      rintro rfl\n      exact submodule.bot_orthogonal_eq_top⟩\n  intro h\n  have : «expr ⊓ » K («expr ᗮ» K) = «expr⊥» := K.orthogonal_disjoint.eq_bot\n  rwa [h, inf_comm, top_inf_eq] at this\n#align submodule.orthogonal_eq_top_iff submodule.orthogonal_eq_top_iff\n\n",
 "orthogonal_eq_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-- `Kᗮ` can be characterized as the intersection of the kernels of the operations of\ninner product with each of the elements of `K`. -/\ntheorem orthogonal_eq_inter :\n    «expr ᗮ» K =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (linear_map.ker (innerSL (v : E) : «expr →L[ ] » E 𝕜 𝕜)) :=\n  by\n  apply le_antisymm\n  · rw [le_infᵢ_iff]\n    rintro ⟨v, hv⟩ w hw\n    simpa using hw _ hv\n  · intro v hv w hw\n    simp only [submodule.mem_infi] at hv\n    exact hv ⟨w, hw⟩\n#align orthogonal_eq_inter orthogonal_eq_inter\n\n",
 "orthogonal_disjoint":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/-- `K` and `Kᗮ` have trivial intersection. -/\ntheorem submodule.orthogonal_disjoint : Disjoint K («expr ᗮ» K) := by simp [disjoint_iff, K.inf_orthogonal_eq_bot]\n#align submodule.orthogonal_disjoint submodule.orthogonal_disjoint\n\n",
 "norm_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem orthogonal_family.norm_sum (l : ∀ i, G i) (s : Finset ι) :\n    «expr‖ ‖»\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n            (V i (l i))) ^\n        2 =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr‖ ‖» (l i) ^ 2) :=\n  by\n  have :\n    («expr‖ ‖»\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n              (V i (l i))) ^\n          2 :\n        𝕜) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr‖ ‖» (l i) ^ 2) :=\n    by simp only [← inner_self_eq_norm_sq_to_K, hV.inner_sum]\n  exact_mod_cast this\n#align orthogonal_family.norm_sum orthogonal_family.norm_sum\n\n",
 "norm_sub_sq_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Expand the square -/\ntheorem norm_sub_sq_real {x y : F} :\n    «expr‖ ‖» (x - y) ^ 2 = «expr‖ ‖» x ^ 2 - 2 * «expr⟪ , ⟫_ℝ» x y + «expr‖ ‖» y ^ 2 :=\n  norm_sub_sq\n#align norm_sub_sq_real norm_sub_sq_real\n\n",
 "norm_sub_sq_eq_norm_sq_add_norm_sq_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Pythagorean theorem, subtracting vectors, vector inner product\nform. -/\ntheorem norm_sub_sq_eq_norm_sq_add_norm_sq_real {x y : F} (h : «expr⟪ , ⟫_ℝ» x y = 0) :\n    «expr‖ ‖» (x - y) * «expr‖ ‖» (x - y) = «expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y :=\n  (norm_sub_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero x y).2 h\n#align norm_sub_sq_eq_norm_sq_add_norm_sq_real norm_sub_sq_eq_norm_sq_add_norm_sq_real\n\n",
 "norm_sub_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/-- Pythagorean theorem, subtracting vectors, if-and-only-if vector\ninner product form. -/\ntheorem norm_sub_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero (x y : F) :\n    «expr‖ ‖» (x - y) * «expr‖ ‖» (x - y) = «expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y ↔\n      «expr⟪ , ⟫_ℝ» x y = 0 :=\n  by\n  rw [norm_sub_mul_self, add_right_cancel_iff, sub_eq_add_neg, add_right_eq_self, neg_eq_zero, mul_eq_zero]\n  norm_num\n#align\n  norm_sub_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero norm_sub_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero\n\n",
 "norm_sub_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr †» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Expand the square -/\ntheorem norm_sub_sq {x y : E} : «expr‖ ‖» (x - y) ^ 2 = «expr‖ ‖» x ^ 2 - 2 * re («expr⟪ , ⟫» x y) + «expr‖ ‖» y ^ 2 :=\n  by\n  repeat' rw [sq, ← inner_self_eq_norm_mul_norm]\n  rw [inner_sub_sub_self]\n  calc\n    re («expr⟪ , ⟫» x x - «expr⟪ , ⟫» x y - «expr⟪ , ⟫» y x + «expr⟪ , ⟫» y y) =\n        re («expr⟪ , ⟫» x x) - re («expr⟪ , ⟫» x y) - re («expr⟪ , ⟫» y x) + re («expr⟪ , ⟫» y y) :=\n      by simp only [map_add, map_sub]\n    _ = -re («expr⟪ , ⟫» y x) - re («expr⟪ , ⟫» x y) + re («expr⟪ , ⟫» x x) + re («expr⟪ , ⟫» y y) := by ring\n    _ = -re («expr †» («expr⟪ , ⟫» x y)) - re («expr⟪ , ⟫» x y) + re («expr⟪ , ⟫» x x) + re («expr⟪ , ⟫» y y) := by\n      rw [inner_conj_sym]\n    _ = -re («expr⟪ , ⟫» x y) - re («expr⟪ , ⟫» x y) + re («expr⟪ , ⟫» x x) + re («expr⟪ , ⟫» y y) := by rw [conj_re]\n    _ = re («expr⟪ , ⟫» x x) - 2 * re («expr⟪ , ⟫» x y) + re («expr⟪ , ⟫» y y) := by ring\n    \n#align norm_sub_sq norm_sub_sq\n\n",
 "norm_sub_mul_self_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Expand the square -/\ntheorem norm_sub_mul_self_real {x y : F} :\n    «expr‖ ‖» (x - y) * «expr‖ ‖» (x - y) =\n      «expr‖ ‖» x * «expr‖ ‖» x - 2 * «expr⟪ , ⟫_ℝ» x y + «expr‖ ‖» y * «expr‖ ‖» y :=\n  by\n  have h := @norm_sub_mul_self (exprℝ) F _ _\n  simpa using h\n#align norm_sub_mul_self_real norm_sub_mul_self_real\n\n",
 "norm_sub_mul_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Expand the square -/\ntheorem norm_sub_mul_self {x y : E} :\n    «expr‖ ‖» (x - y) * «expr‖ ‖» (x - y) =\n      «expr‖ ‖» x * «expr‖ ‖» x - 2 * re («expr⟪ , ⟫» x y) + «expr‖ ‖» y * «expr‖ ‖» y :=\n  by\n  repeat' rw [← sq]\n  exact norm_sub_sq\n#align norm_sub_mul_self norm_sub_mul_self\n\n",
 "norm_sub_eq_sqrt_iff_real_inner_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/-- Pythagorean theorem, subtracting vectors, if-and-if vector inner product form using square\nroots. -/\ntheorem norm_sub_eq_sqrt_iff_real_inner_eq_zero {x y : F} :\n    «expr‖ ‖» (x - y) = sqrt («expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y) ↔ «expr⟪ , ⟫_ℝ» x y = 0 := by\n  rw [← norm_sub_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero, eq_comm,\n    sqrt_eq_iff_mul_self_eq (add_nonneg (mul_self_nonneg _) (mul_self_nonneg _)) (norm_nonneg _)]\n#align norm_sub_eq_sqrt_iff_real_inner_eq_zero norm_sub_eq_sqrt_iff_real_inner_eq_zero\n\n",
 "norm_sub_eq_norm_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Given two orthogonal vectors, their sum and difference have equal norms. -/\ntheorem norm_sub_eq_norm_add {v w : E} (h : «expr⟪ , ⟫» v w = 0) : «expr‖ ‖» (w - v) = «expr‖ ‖» (w + v) :=\n  by\n  rw [← mul_self_inj_of_nonneg (norm_nonneg _) (norm_nonneg _)]\n  simp only [h, ← inner_self_eq_norm_mul_norm, sub_neg_eq_add, sub_zero, map_sub, zero_re', zero_sub, add_zero, map_add,\n    inner_add_right, inner_sub_left, inner_sub_right, inner_re_symm, zero_add]\n#align norm_sub_eq_norm_add norm_sub_eq_norm_add\n\n",
 "norm_sq_diff_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem orthogonal_family.norm_sq_diff_sum (f : ∀ i, G i) (s₁ s₂ : Finset ι) :\n    «expr‖ ‖»\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s₁\n              (V i (f i)) -\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s₂\n              (V i (f i))) ^\n        2 =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₁ \\ s₂)\n          («expr‖ ‖» (f i) ^ 2) +\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₂ \\ s₁)\n          («expr‖ ‖» (f i) ^ 2) :=\n  by\n  rw [← finset.sum_sdiff_sub_sum_sdiff, sub_eq_add_neg, ← finset.sum_neg_distrib]\n  let F : ∀ i, G i := fun i => if i ∈ s₁ then f i else -f i\n  have hF₁ : ∀ i ∈ s₁ \\ s₂, F i = f i := fun i hi => if_pos (Finset.sdiff_subset _ _ hi)\n  have hF₂ : ∀ i ∈ s₂ \\ s₁, F i = -f i := fun i hi => if_neg (finset.mem_sdiff.mp hi).2\n  have hF : ∀ i, «expr‖ ‖» (F i) = «expr‖ ‖» (f i) := by\n    intro i\n    dsimp only [F]\n    split_ifs <;> simp only [eq_self_iff_true, norm_neg]\n  have :\n    «expr‖ ‖»\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₁ \\ s₂)\n              (V i (F i)) +\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₂ \\ s₁)\n              (V i (F i))) ^\n        2 =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₁ \\ s₂)\n          («expr‖ ‖» (F i) ^ 2) +\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (s₂ \\ s₁)\n          («expr‖ ‖» (F i) ^ 2) :=\n    by\n    have hs : Disjoint (s₁ \\ s₂) (s₂ \\ s₁) := disjoint_sdiff_sdiff\n    simpa only [finset.sum_union hs] using hV.norm_sum F (s₁ \\ s₂ ∪ s₂ \\ s₁)\n  convert this using 4\n  · refine' finset.sum_congr rfl fun i hi => _\n    simp only [hF₁ i hi]\n  · refine' finset.sum_congr rfl fun i hi => _\n    simp only [hF₂ i hi, linear_isometry.map_neg]\n  · simp only [hF]\n  · simp only [hF]\n#align orthogonal_family.norm_sq_diff_sum orthogonal_family.norm_sq_diff_sum\n\n",
 "norm_inner_le_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_inner_le_norm (x y : E) : «expr‖ ‖» («expr⟪ , ⟫» x y) ≤ «expr‖ ‖» x * «expr‖ ‖» y :=\n  (is_R_or_C.norm_eq_abs _).le.trans (abs_inner_le_norm x y)\n#align norm_inner_le_norm norm_inner_le_norm\n\n",
 "norm_eq_sqrt_real_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\ntheorem norm_eq_sqrt_real_inner (x : F) : «expr‖ ‖» x = sqrt («expr⟪ , ⟫_ℝ» x x) :=\n  by\n  have h := @norm_eq_sqrt_inner (exprℝ) F _ _ x\n  simpa using h\n#align norm_eq_sqrt_real_inner norm_eq_sqrt_real_inner\n\n",
 "norm_eq_sqrt_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem norm_eq_sqrt_inner (x : E) : «expr‖ ‖» x = sqrt (re («expr⟪ , ⟫» x x)) :=\n  calc\n    «expr‖ ‖» x = sqrt («expr‖ ‖» x ^ 2) := (sqrt_sq (norm_nonneg _)).symm\n    _ = sqrt (re («expr⟪ , ⟫» x x)) := congr_arg _ (norm_sq_eq_inner _)\n    \n#align norm_eq_sqrt_inner norm_eq_sqrt_inner\n\n",
 "norm_add_sq_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Expand the square -/\ntheorem norm_add_sq_real {x y : F} :\n    «expr‖ ‖» (x + y) ^ 2 = «expr‖ ‖» x ^ 2 + 2 * «expr⟪ , ⟫_ℝ» x y + «expr‖ ‖» y ^ 2 :=\n  by\n  have h := @norm_add_sq (exprℝ) F _ _\n  simpa using h\n#align norm_add_sq_real norm_add_sq_real\n\n",
 "norm_add_sq_eq_norm_sq_add_norm_sq_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Pythagorean theorem, vector inner product form. -/\ntheorem norm_add_sq_eq_norm_sq_add_norm_sq_real {x y : F} (h : «expr⟪ , ⟫_ℝ» x y = 0) :\n    «expr‖ ‖» (x + y) * «expr‖ ‖» (x + y) = «expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y :=\n  (norm_add_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero x y).2 h\n#align norm_add_sq_eq_norm_sq_add_norm_sq_real norm_add_sq_eq_norm_sq_add_norm_sq_real\n\n",
 "norm_add_sq_eq_norm_sq_add_norm_sq_of_inner_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Pythagorean theorem, vector inner product form. -/\ntheorem norm_add_sq_eq_norm_sq_add_norm_sq_of_inner_eq_zero (x y : E) (h : «expr⟪ , ⟫» x y = 0) :\n    «expr‖ ‖» (x + y) * «expr‖ ‖» (x + y) = «expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y :=\n  by\n  rw [norm_add_mul_self, add_right_cancel_iff, add_right_eq_self, mul_eq_zero]\n  apply or.inr\n  simp only [h, zero_re']\n#align norm_add_sq_eq_norm_sq_add_norm_sq_of_inner_eq_zero norm_add_sq_eq_norm_sq_add_norm_sq_of_inner_eq_zero\n\n",
 "norm_add_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/-- Pythagorean theorem, if-and-only-if vector inner product form. -/\ntheorem norm_add_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero (x y : F) :\n    «expr‖ ‖» (x + y) * «expr‖ ‖» (x + y) = «expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y ↔\n      «expr⟪ , ⟫_ℝ» x y = 0 :=\n  by\n  rw [norm_add_mul_self, add_right_cancel_iff, add_right_eq_self, mul_eq_zero]\n  norm_num\n#align\n  norm_add_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero norm_add_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero\n\n",
 "norm_add_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Expand the square -/\ntheorem norm_add_sq {x y : E} : «expr‖ ‖» (x + y) ^ 2 = «expr‖ ‖» x ^ 2 + 2 * re («expr⟪ , ⟫» x y) + «expr‖ ‖» y ^ 2 :=\n  by\n  repeat' rw [sq, ← inner_self_eq_norm_mul_norm]\n  rw [inner_add_add_self, two_mul]\n  simp only [add_assoc, add_left_inj, add_right_inj, AddMonoidHom.map_add]\n  rw [← inner_conj_sym, conj_re]\n#align norm_add_sq norm_add_sq\n\n",
 "norm_add_mul_self_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Expand the square -/\ntheorem norm_add_mul_self_real {x y : F} :\n    «expr‖ ‖» (x + y) * «expr‖ ‖» (x + y) =\n      «expr‖ ‖» x * «expr‖ ‖» x + 2 * «expr⟪ , ⟫_ℝ» x y + «expr‖ ‖» y * «expr‖ ‖» y :=\n  by\n  have h := @norm_add_mul_self (exprℝ) F _ _\n  simpa using h\n#align norm_add_mul_self_real norm_add_mul_self_real\n\n",
 "norm_add_mul_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Expand the square -/\ntheorem norm_add_mul_self {x y : E} :\n    «expr‖ ‖» (x + y) * «expr‖ ‖» (x + y) =\n      «expr‖ ‖» x * «expr‖ ‖» x + 2 * re («expr⟪ , ⟫» x y) + «expr‖ ‖» y * «expr‖ ‖» y :=\n  by\n  repeat' rw [← sq]\n  exact norm_add_sq\n#align norm_add_mul_self norm_add_mul_self\n\n",
 "norm_add_eq_sqrt_iff_real_inner_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/-- Pythagorean theorem, if-and-if vector inner product form using square roots. -/\ntheorem norm_add_eq_sqrt_iff_real_inner_eq_zero {x y : F} :\n    «expr‖ ‖» (x + y) = sqrt («expr‖ ‖» x * «expr‖ ‖» x + «expr‖ ‖» y * «expr‖ ‖» y) ↔ «expr⟪ , ⟫_ℝ» x y = 0 := by\n  rw [← norm_add_sq_eq_norm_sq_add_norm_sq_iff_real_inner_eq_zero, eq_comm,\n    sqrt_eq_iff_mul_self_eq (add_nonneg (mul_self_nonneg _) (mul_self_nonneg _)) (norm_nonneg _)]\n#align norm_add_eq_sqrt_iff_real_inner_eq_zero norm_add_eq_sqrt_iff_real_inner_eq_zero\n\n",
 "nnnorm_inner_le_nnnorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_inner_le_nnnorm (x y : E) : «expr‖ ‖₊» («expr⟪ , ⟫» x y) ≤ «expr‖ ‖₊» x * «expr‖ ‖₊» y :=\n  norm_inner_le_norm x y\n#align nnnorm_inner_le_nnnorm nnnorm_inner_le_nnnorm\n\n",
 "ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem orthonormal.ne_zero {v : ι → E} (hv : orthonormal 𝕜 v) (i : ι) : v i ≠ 0 :=\n  by\n  have : «expr‖ ‖» (v i) ≠ 0 := by\n    rw [hv.1 i]\n    norm_num\n  simpa using this\n#align orthonormal.ne_zero orthonormal.ne_zero\n\n",
 "mem_orthogonal_singleton_iff_inner_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- A vector is in `(𝕜 ∙ u)ᗮ` iff it is orthogonal to `u`. -/\ntheorem submodule.mem_orthogonal_singleton_iff_inner_right {u v : E} :\n    v ∈ «expr ᗮ» («expr ∙ » 𝕜 u) ↔ «expr⟪ , ⟫» u v = 0 :=\n  by\n  refine' ⟨submodule.inner_right_of_mem_orthogonal (submodule.mem_span_singleton_self u), _⟩\n  intro hv w hw\n  rw [submodule.mem_span_singleton] at hw\n  obtain ⟨c, rfl⟩ := hw\n  simp [inner_smul_left, hv]\n#align submodule.mem_orthogonal_singleton_iff_inner_right submodule.mem_orthogonal_singleton_iff_inner_right\n\n",
 "mem_orthogonal_singleton_iff_inner_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- A vector in `(𝕜 ∙ u)ᗮ` is orthogonal to `u`. -/\ntheorem submodule.mem_orthogonal_singleton_iff_inner_left {u v : E} :\n    v ∈ «expr ᗮ» («expr ∙ » 𝕜 u) ↔ «expr⟪ , ⟫» v u = 0 := by\n  rw [submodule.mem_orthogonal_singleton_iff_inner_right, inner_eq_zero_sym]\n#align submodule.mem_orthogonal_singleton_iff_inner_left submodule.mem_orthogonal_singleton_iff_inner_left\n\n",
 "mem_orthogonal'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- When a vector is in `Kᗮ`, with the inner product the\nother way round. -/\ntheorem submodule.mem_orthogonal' (v : E) : v ∈ «expr ᗮ» K ↔ ∀ u ∈ K, «expr⟪ , ⟫» v u = 0 := by\n  simp_rw [submodule.mem_orthogonal, inner_eq_zero_sym]\n#align submodule.mem_orthogonal' submodule.mem_orthogonal'\n\n",
 "mem_orthogonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- When a vector is in `Kᗮ`. -/\ntheorem submodule.mem_orthogonal (v : E) : v ∈ «expr ᗮ» K ↔ ∀ u ∈ K, «expr⟪ , ⟫» u v = 0 :=\n  iff.rfl\n#align submodule.mem_orthogonal submodule.mem_orthogonal\n\n",
 "map_linear_isometry_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/-- A linear isometric equivalence, applied with `basis.map`, preserves the property of being\northonormal. -/\ntheorem orthonormal.map_linear_isometry_equiv {v : basis ι 𝕜 E} (hv : orthonormal 𝕜 v) (f : «expr ≃ₗᵢ[ ] » E 𝕜 E') :\n    orthonormal 𝕜 (v.map f.to_linear_equiv) :=\n  hv.comp_linear_isometry_equiv f\n#align orthonormal.map_linear_isometry_equiv orthonormal.map_linear_isometry_equiv\n\n",
 "map_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\ntheorem orthonormal.map_equiv {v : basis ι 𝕜 E} (hv : orthonormal 𝕜 v) {v' : basis ι' 𝕜 E'} (hv' : orthonormal 𝕜 v')\n    (e : «expr ≃ » ι ι') : v.map (hv.equiv hv' e).to_linear_equiv = v'.reindex e.symm :=\n  v.map_equiv _ _\n#align orthonormal.map_equiv orthonormal.map_equiv\n\n",
 "linear_independent_of_ne_zero_of_inner_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- A family of vectors is linearly independent if they are nonzero\nand orthogonal. -/\ntheorem linear_independent_of_ne_zero_of_inner_eq_zero {ι : Type _} {v : ι → E} (hz : ∀ i, v i ≠ 0)\n    (ho : ∀ i j, i ≠ j → «expr⟪ , ⟫» (v i) (v j) = 0) : linear_independent 𝕜 v :=\n  by\n  rw [linear_independent_iff']\n  intro s g hg i hi\n  have h' :\n    g i * inner (v i) (v i) =\n      inner (v i)\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          («expr • » (g j) (v j))) :=\n    by\n    rw [inner_sum]\n    symm\n    convert finset.sum_eq_single i _ _\n    · rw [inner_smul_right]\n    · intro j hj hji\n      rw [inner_smul_right, ho i j hji.symm, mul_zero]\n    · exact fun h => false.elim (h hi)\n  simpa [hg, hz] using h'\n#align linear_independent_of_ne_zero_of_inner_eq_zero linear_independent_of_ne_zero_of_inner_eq_zero\n\n",
 "linear_independent":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- An orthonormal set is linearly independent. -/\ntheorem orthonormal.linear_independent {v : ι → E} (hv : orthonormal 𝕜 v) : linear_independent 𝕜 v :=\n  by\n  rw [linear_independent_iff]\n  intro l hl\n  ext i\n  have key : «expr⟪ , ⟫» (v i) (finsupp.total ι E 𝕜 v l) = «expr⟪ , ⟫» (v i) 0 := by rw [hl]\n  simpa only [hv.inner_right_finsupp, inner_zero_right] using key\n#align orthonormal.linear_independent orthonormal.linear_independent\n\n",
 "le_orthogonal_orthogonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/-- `K` is contained in `Kᗮᗮ`. -/\ntheorem submodule.le_orthogonal_orthogonal : K ≤ «expr ᗮ» («expr ᗮ» K) :=\n  (submodule.orthogonal_gc 𝕜 E).le_u_l _\n#align submodule.le_orthogonal_orthogonal submodule.le_orthogonal_orthogonal\n\n",
 "isometry_of_orthonormal_to_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem linear_map.isometry_of_orthonormal_to_linear_map (f : «expr →ₗ[ ] » E 𝕜 E') {v : basis ι 𝕜 E}\n    (hv : orthonormal 𝕜 v) (hf : orthonormal 𝕜 (f ∘ v)) : (f.isometry_of_orthonormal hv hf).to_linear_map = f :=\n  rfl\n#align linear_map.isometry_of_orthonormal_to_linear_map linear_map.isometry_of_orthonormal_to_linear_map\n\n",
 "isometry_of_orthonormal_to_linear_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n@[simp]\ntheorem linear_equiv.isometry_of_orthonormal_to_linear_equiv (f : «expr ≃ₗ[ ] » E 𝕜 E') {v : basis ι 𝕜 E}\n    (hv : orthonormal 𝕜 v) (hf : orthonormal 𝕜 (f ∘ v)) : (f.isometry_of_orthonormal hv hf).to_linear_equiv = f :=\n  rfl\n#align linear_equiv.isometry_of_orthonormal_to_linear_equiv linear_equiv.isometry_of_orthonormal_to_linear_equiv\n\n",
 "isometry_of_inner_to_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem linear_map.isometry_of_inner_to_linear_map (f : «expr →ₗ[ ] » E 𝕜 E') (h) :\n    (f.isometry_of_inner h).to_linear_map = f :=\n  rfl\n#align linear_map.isometry_of_inner_to_linear_map linear_map.isometry_of_inner_to_linear_map\n\n",
 "isometry_of_inner_to_linear_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n@[simp]\ntheorem linear_equiv.isometry_of_inner_to_linear_equiv (f : «expr ≃ₗ[ ] » E 𝕜 E') (h) :\n    (f.isometry_of_inner h).to_linear_equiv = f :=\n  rfl\n#align linear_equiv.isometry_of_inner_to_linear_equiv linear_equiv.isometry_of_inner_to_linear_equiv\n\n",
 "is_closed_orthogonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/-- The orthogonal complement of any submodule `K` is closed. -/\ntheorem submodule.is_closed_orthogonal : is_closed («expr ᗮ» K : set E) :=\n  by\n  rw [orthogonal_eq_inter K]\n  have := fun v : K => continuous_linear_map.is_closed_ker (innerSL (v : E) : «expr →L[ ] » E 𝕜 𝕜)\n  convert is_closed_Inter this\n  simp only [submodule.infi_coe]\n#align submodule.is_closed_orthogonal submodule.is_closed_orthogonal\n\n",
 "is_bounded_bilinear_map_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- When an inner product space `E` over `𝕜` is considered as a real normed space, its inner\nproduct satisfies `is_bounded_bilinear_map`.\n\nIn order to state these results, we need a `normed_space ℝ E` instance. We will later establish\nsuch an instance by restriction-of-scalars, `inner_product_space.is_R_or_C_to_real 𝕜 E`, but this\ninstance may be not definitionally equal to some other “natural” instance. So, we assume\n`[normed_space ℝ E]`.\n-/\ntheorem is_bounded_bilinear_map_inner [normed_space (exprℝ) E] :\n    is_bounded_bilinear_map (exprℝ) fun p : E × E => «expr⟪ , ⟫» p.1 p.2 :=\n  { add_left := fun _ _ _ => inner_add_left\n    smul_left := fun r x y => by simp only [← algebra_map_smul 𝕜 r x, algebra_map_eq_of_real, inner_smul_real_left]\n    add_right := fun _ _ _ => inner_add_right\n    smul_right := fun r x y => by simp only [← algebra_map_smul 𝕜 r y, algebra_map_eq_of_real, inner_smul_real_right]\n    bound :=\n      ⟨1, zero_lt_one, fun x y => by\n        rw [one_mul]\n        exact norm_inner_le_norm x y⟩ }\n#align is_bounded_bilinear_map_inner is_bounded_bilinear_map_inner\n\n",
 "innerₛₗ_apply_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem innerₛₗ_apply_coe (v : E) : (innerₛₗ v : E → 𝕜) = fun w => «expr⟪ , ⟫» v w :=\n  rfl\n#align innerₛₗ_apply_coe innerₛₗ_apply_coe\n\n",
 "innerₛₗ_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem innerₛₗ_apply (v w : E) : innerₛₗ v w = «expr⟪ , ⟫» v w :=\n  rfl\n#align innerₛₗ_apply innerₛₗ_apply\n\n",
 "inner_zero_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_zero_right {x : E} : «expr⟪ , ⟫» x 0 = 0 := by rw [← inner_conj_sym, inner_zero_left, RingHom.map_zero]\n#align inner_zero_right inner_zero_right\n\n",
 "inner_zero_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_zero_left {x : E} : «expr⟪ , ⟫» 0 x = 0 := by\n  rw [← zero_smul 𝕜 (0 : E), inner_smul_left, RingHom.map_zero, zero_mul]\n#align inner_zero_left inner_zero_left\n\n",
 "inner_sum_smul_sum_smul_of_sum_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The inner product of two weighted sums, where the weights in each\nsum add to 0, in terms of the norms of pairwise differences. -/\ntheorem inner_sum_smul_sum_smul_of_sum_eq_zero {ι₁ : Type _} {s₁ : Finset ι₁} {w₁ : ι₁ → exprℝ} (v₁ : ι₁ → F)\n    (h₁ : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s₁ (w₁ i) = 0)\n    {ι₂ : Type _} {s₂ : Finset ι₂} {w₂ : ι₂ → exprℝ} (v₂ : ι₂ → F)\n    (h₂ :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s₂ (w₂ i) = 0) :\n    «expr⟪ , ⟫_ℝ»\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s₁\n          («expr • » (w₁ i₁) (v₁ i₁)))\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s₂\n          («expr • » (w₂ i₂) (v₂ i₂))) =\n      -finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s₁\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s₂\n              (w₁ i₁ * w₂ i₂ * («expr‖ ‖» (v₁ i₁ - v₂ i₂) * «expr‖ ‖» (v₁ i₁ - v₂ i₂)))) /\n        2 :=\n  by\n  simp_rw [sum_inner, inner_sum, real_inner_smul_left, real_inner_smul_right,\n    real_inner_eq_norm_mul_self_add_norm_mul_self_sub_norm_sub_mul_self_div_two, ← div_sub_div_same, ← div_add_div_same,\n    mul_sub_left_distrib, left_distrib, finset.sum_sub_distrib, finset.sum_add_distrib, ← finset.mul_sum, ←\n    finset.sum_mul, h₁, h₂, zero_mul, mul_zero, finset.sum_const_zero, zero_add, zero_sub, finset.mul_sum, neg_div,\n    finset.sum_div, mul_div_assoc, mul_assoc]\n#align inner_sum_smul_sum_smul_of_sum_eq_zero inner_sum_smul_sum_smul_of_sum_eq_zero\n\n",
 "inner_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem orthogonal_family.inner_sum (l₁ l₂ : ∀ i, G i) (s : Finset ι) :\n    «expr⟪ , ⟫»\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (V i (l₁ i)))\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          (V j (l₂ j))) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr⟪ , ⟫» (l₁ i) (l₂ i)) :=\n  by\n  classical calc\n      «expr⟪ , ⟫»\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n              (V i (l₁ i)))\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n              (V j (l₂ j))) =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n              («expr⟪ , ⟫» (V i (l₁ i)) (V j (l₂ j)))) :=\n        by simp only [sum_inner, inner_sum]\n      _ =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n              (ite (i = j) («expr⟪ , ⟫» (V i (l₁ i)) (V j (l₂ j))) 0)) :=\n        by\n        congr with i\n        congr with j\n        apply hV.eq_ite\n      _ =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n            («expr⟪ , ⟫» (l₁ i) (l₂ i)) :=\n        by simp only [finset.sum_ite_of_true, finset.sum_ite_eq', linear_isometry.inner_map_map, imp_self, imp_true_iff]\n      \n#align orthogonal_family.inner_sum orthogonal_family.inner_sum\n\n",
 "inner_sub_sub_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n-- Expand `⟪x - y, x - y⟫`\ntheorem inner_sub_sub_self {x y : E} :\n    «expr⟪ , ⟫» (x - y) (x - y) = «expr⟪ , ⟫» x x - «expr⟪ , ⟫» x y - «expr⟪ , ⟫» y x + «expr⟪ , ⟫» y y := by\n  simp only [inner_sub_left, inner_sub_right] <;> ring\n#align inner_sub_sub_self inner_sub_sub_self\n\n",
 "inner_sub_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_sub_right {x y z : E} : «expr⟪ , ⟫» x (y - z) = «expr⟪ , ⟫» x y - «expr⟪ , ⟫» x z := by\n  simp [sub_eq_add_neg, inner_add_right]\n#align inner_sub_right inner_sub_right\n\n",
 "inner_sub_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_sub_left {x y z : E} : «expr⟪ , ⟫» (x - y) z = «expr⟪ , ⟫» x z - «expr⟪ , ⟫» y z := by\n  simp [sub_eq_add_neg, inner_add_left]\n#align inner_sub_left inner_sub_left\n\n",
 "inner_smul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_smul_right {x y : E} {r : 𝕜} : «expr⟪ , ⟫» x («expr • » r y) = r * «expr⟪ , ⟫» x y := by\n  rw [← inner_conj_sym, inner_smul_left, RingHom.map_mul, conj_conj, inner_conj_sym]\n#align inner_smul_right inner_smul_right\n\n",
 "inner_smul_real_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_smul_real_right {x y : E} {r : exprℝ} :\n    «expr⟪ , ⟫» x («expr • » (r : 𝕜) y) = «expr • » r («expr⟪ , ⟫» x y) :=\n  by\n  rw [inner_smul_right, algebra.smul_def]\n  rfl\n#align inner_smul_real_right inner_smul_real_right\n\n",
 "inner_smul_real_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_smul_real_left {x y : E} {r : exprℝ} :\n    «expr⟪ , ⟫» («expr • » (r : 𝕜) x) y = «expr • » r («expr⟪ , ⟫» x y) :=\n  by\n  rw [inner_smul_left, conj_of_real, algebra.smul_def]\n  rfl\n#align inner_smul_real_left inner_smul_real_left\n\n",
 "inner_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr †» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_smul_left {x y : E} {r : 𝕜} : «expr⟪ , ⟫» («expr • » r x) y = «expr †» r * «expr⟪ , ⟫» x y :=\n  inner_product_space.smul_left _ _ _\n#align inner_smul_left inner_smul_left\n\n",
 "inner_self_re_to_K":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_self_re_to_K {x : E} : (re («expr⟪ , ⟫» x x) : 𝕜) = «expr⟪ , ⟫» x x :=\n  is_R_or_C.ext_iff.2 ⟨by simp only [of_real_re], by simp only [inner_self_nonneg_im, of_real_im]⟩\n#align inner_self_re_to_K inner_self_re_to_K\n\n",
 "inner_self_re_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_self_re_abs {x : E} : re («expr⟪ , ⟫» x x) = abs («expr⟪ , ⟫» x x) :=\n  by\n  conv_rhs => rw [← inner_self_re_to_K]\n  symm\n  exact is_R_or_C.abs_of_nonneg inner_self_nonneg\n#align inner_self_re_abs inner_self_re_abs\n\n",
 "inner_self_nonpos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_self_nonpos {x : E} : re («expr⟪ , ⟫» x x) ≤ 0 ↔ x = 0 :=\n  by\n  constructor\n  · intro h\n    rw [← inner_self_eq_zero]\n    have H₁ : re («expr⟪ , ⟫» x x) ≥ 0 := inner_self_nonneg\n    have H₂ : re («expr⟪ , ⟫» x x) = 0 := le_antisymm h H₁\n    rw [is_R_or_C.ext_iff]\n    exact ⟨by simp [H₂], by simp [inner_self_nonneg_im]⟩\n  · rintro rfl\n    simp only [inner_zero_left, AddMonoidHom.map_zero]\n#align inner_self_nonpos inner_self_nonpos\n\n",
 "inner_self_nonneg_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_self_nonneg_im {x : E} : im («expr⟪ , ⟫» x x) = 0 := by rw [← @of_real_inj 𝕜, im_eq_conj_sub] <;> simp\n#align inner_self_nonneg_im inner_self_nonneg_im\n\n",
 "inner_self_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_self_nonneg {x : E} : 0 ≤ re («expr⟪ , ⟫» x x) := by\n  rw [← norm_sq_eq_inner] <;> exact pow_nonneg (norm_nonneg x) 2\n#align inner_self_nonneg inner_self_nonneg\n\n",
 "inner_self_im_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_self_im_zero {x : E} : im («expr⟪ , ⟫» x x) = 0 :=\n  inner_self_nonneg_im\n#align inner_self_im_zero inner_self_im_zero\n\n",
 "inner_self_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_self_eq_zero {x : E} : «expr⟪ , ⟫» x x = 0 ↔ x = 0 :=\n  by\n  constructor\n  · intro h\n    have h₁ : re («expr⟪ , ⟫» x x) = 0 := by rw [is_R_or_C.ext_iff] at h <;> simp only [h.1, zero_re']\n    rw [← norm_sq_eq_inner x] at h₁\n    rw [← norm_eq_zero]\n    exact pow_eq_zero h₁\n  · rintro rfl\n    exact inner_zero_left\n#align inner_self_eq_zero inner_self_eq_zero\n\n",
 "inner_self_eq_norm_sq_to_K":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem inner_self_eq_norm_sq_to_K (x : E) : «expr⟪ , ⟫» x x = («expr‖ ‖» x ^ 2 : 𝕜) :=\n  by\n  suffices (is_R_or_C.re («expr⟪ , ⟫» x x) : 𝕜) = «expr‖ ‖» x ^ 2 by simpa only [inner_self_re_to_K] using this\n  exact_mod_cast (norm_sq_eq_inner x).symm\n#align inner_self_eq_norm_sq_to_K inner_self_eq_norm_sq_to_K\n\n",
 "inner_self_eq_norm_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem inner_self_eq_norm_sq (x : E) : re («expr⟪ , ⟫» x x) = «expr‖ ‖» x ^ 2 := by\n  rw [pow_two, inner_self_eq_norm_mul_norm]\n#align inner_self_eq_norm_sq inner_self_eq_norm_sq\n\n",
 "inner_self_eq_norm_mul_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem inner_self_eq_norm_mul_norm (x : E) : re («expr⟪ , ⟫» x x) = «expr‖ ‖» x * «expr‖ ‖» x := by\n  rw [norm_eq_sqrt_inner, ← sqrt_mul inner_self_nonneg (re («expr⟪ , ⟫» x x)), sqrt_mul_self inner_self_nonneg]\n#align inner_self_eq_norm_mul_norm inner_self_eq_norm_mul_norm\n\n",
 "inner_self_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr †» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_self_conj {x : E} : «expr †» («expr⟪ , ⟫» x x) = «expr⟪ , ⟫» x x := by\n  rw [is_R_or_C.ext_iff] <;> exact ⟨by rw [conj_re], by rw [conj_im, inner_self_im_zero, neg_zero]⟩\n#align inner_self_conj inner_self_conj\n\n",
 "inner_self_abs_to_K":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsK -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_self_abs_to_K {x : E} : ((exprabsK) («expr⟪ , ⟫» x x) : 𝕜) = «expr⟪ , ⟫» x x :=\n  by\n  rw [← inner_self_re_abs]\n  exact inner_self_re_to_K\n#align inner_self_abs_to_K inner_self_abs_to_K\n\n",
 "inner_right_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The inner product of a linear combination of a set of orthonormal vectors with one of those\nvectors picks out the coefficient of that vector. -/\ntheorem orthonormal.inner_right_sum {v : ι → E} (hv : orthonormal 𝕜 v) (l : ι → 𝕜) {s : Finset ι} {i : ι} (hi : i ∈ s) :\n    «expr⟪ , ⟫» (v i)\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          («expr • » (l i) (v i))) =\n      l i :=\n  by classical simp [inner_sum, inner_smul_right, orthonormal_iff_ite.mp hv, hi]\n#align orthonormal.inner_right_sum orthonormal.inner_right_sum\n\n",
 "inner_right_of_mem_orthogonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- A vector in `K` is orthogonal to one in `Kᗮ`. -/\ntheorem submodule.inner_right_of_mem_orthogonal {u v : E} (hu : u ∈ K) (hv : v ∈ «expr ᗮ» K) : «expr⟪ , ⟫» u v = 0 :=\n  (K.mem_orthogonal v).1 hv u hu\n#align submodule.inner_right_of_mem_orthogonal submodule.inner_right_of_mem_orthogonal\n\n",
 "inner_right_fintype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem orthogonal_family.inner_right_fintype [fintype ι] (l : ∀ i, G i) (i : ι) (v : G i) :\n    «expr⟪ , ⟫» (V i v)\n        (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (V j (l j))) =\n      «expr⟪ , ⟫» v (l i) :=\n  by\n  classical calc\n      «expr⟪ , ⟫» (V i v)\n            (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n              (V j (l j))) =\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n            («expr⟪ , ⟫» (V i v) (V j (l j))) :=\n        by rw [inner_sum]\n      _ =\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n            (ite (i = j) («expr⟪ , ⟫» (V i v) (V j (l j))) 0) :=\n        congr_arg (finset.sum finset.univ) <| funext fun j => hV.eq_ite v (l j)\n      _ = «expr⟪ , ⟫» v (l i) := by simp only [finset.sum_ite_eq, finset.mem_univ, (V i).inner_map_map, if_true]\n      \n#align orthogonal_family.inner_right_fintype orthogonal_family.inner_right_fintype\n\n",
 "inner_right_finsupp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- The inner product of a linear combination of a set of orthonormal vectors with one of those\nvectors picks out the coefficient of that vector. -/\ntheorem orthonormal.inner_right_finsupp {v : ι → E} (hv : orthonormal 𝕜 v) (l : «expr →₀ » ι 𝕜) (i : ι) :\n    «expr⟪ , ⟫» (v i) (finsupp.total ι E 𝕜 v l) = l i := by\n  classical simp [finsupp.total_apply, finsupp.inner_sum, orthonormal_iff_ite.mp hv]\n#align orthonormal.inner_right_finsupp orthonormal.inner_right_finsupp\n\n",
 "inner_right_dfinsupp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem orthogonal_family.inner_right_dfinsupp\n    (l : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (G i)) (i : ι)\n    (v : G i) : «expr⟪ , ⟫» (V i v) (l.sum fun j => V j) = «expr⟪ , ⟫» v (l i) :=\n  calc\n    «expr⟪ , ⟫» (V i v) (l.sum fun j => V j) = l.sum fun j => fun w => «expr⟪ , ⟫» (V i v) (V j w) :=\n      dfinsupp.inner_sum (fun j => V j) l (V i v)\n    _ = l.sum fun j => fun w => ite (i = j) («expr⟪ , ⟫» (V i v) (V j w)) 0 :=\n      congr_arg l.sum <| funext fun j => funext <| hV.eq_ite v\n    _ = «expr⟪ , ⟫» v (l i) :=\n      by\n      simp only [dfinsupp.sum, submodule.coe_inner, finset.sum_ite_eq, ite_eq_left_iff, dfinsupp.mem_support_to_fun]\n      split_ifs with h h\n      · simp only [linear_isometry.inner_map_map]\n      · simp only [of_not_not h, inner_zero_right]\n    \n#align orthogonal_family.inner_right_dfinsupp orthogonal_family.inner_right_dfinsupp\n\n",
 "inner_re_zero_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_re_zero_right {x : E} : re («expr⟪ , ⟫» x 0) = 0 := by simp only [inner_zero_right, AddMonoidHom.map_zero]\n#align inner_re_zero_right inner_re_zero_right\n\n",
 "inner_re_zero_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_re_zero_left {x : E} : re («expr⟪ , ⟫» 0 x) = 0 := by simp only [inner_zero_left, AddMonoidHom.map_zero]\n#align inner_re_zero_left inner_re_zero_left\n\n",
 "inner_re_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_re_symm {x y : E} : re («expr⟪ , ⟫» x y) = re («expr⟪ , ⟫» y x) := by rw [← inner_conj_sym, conj_re]\n#align inner_re_symm inner_re_symm\n\n",
 "inner_products_summable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- The sum defined in Bessel's inequality is summable. -/\ntheorem orthonormal.inner_products_summable (hv : orthonormal 𝕜 v) :\n    summable fun i => «expr‖ ‖» («expr⟪ , ⟫» (v i) x) ^ 2 :=\n  by\n  use\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr‖ ‖» («expr⟪ , ⟫» (v i) x) ^ 2))\n  apply has_sum_of_is_lub_of_nonneg\n  · intro b\n    simp only [norm_nonneg, pow_nonneg]\n  · refine' isLUB_csupᵢ _\n    use «expr‖ ‖» x ^ 2\n    rintro y ⟨s, rfl⟩\n    exact hv.sum_inner_products_le x\n#align orthonormal.inner_products_summable orthonormal.inner_products_summable\n\n",
 "inner_norm_sq_eq_inner_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprext_iff -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprnorm_sqF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_norm_sq_eq_inner_self (x : F) : ((exprnorm_sqF) x : 𝕜) = «expr⟪ , ⟫» x x :=\n  by\n  rw [exprext_iff]\n  exact ⟨by simp only [of_real_re] <;> rfl, by simp only [inner_self_nonneg_im, of_real_im]⟩\n#align inner_norm_sq_eq_inner_self inner_norm_sq_eq_inner_self\n\n",
 "inner_neg_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_neg_right {x y : E} : «expr⟪ , ⟫» x (-y) = -«expr⟪ , ⟫» x y := by\n  rw [← inner_conj_sym, inner_neg_left] <;> simp only [RingHom.map_neg, inner_conj_sym]\n#align inner_neg_right inner_neg_right\n\n",
 "inner_neg_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_neg_neg {x y : E} : «expr⟪ , ⟫» (-x) (-y) = «expr⟪ , ⟫» x y := by simp\n#align inner_neg_neg inner_neg_neg\n\n",
 "inner_neg_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_neg_left {x y : E} : «expr⟪ , ⟫» (-x) y = -«expr⟪ , ⟫» x y :=\n  by\n  rw [← neg_one_smul 𝕜 x, inner_smul_left]\n  simp\n#align inner_neg_left inner_neg_left\n\n",
 "inner_mul_inner_self_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr †» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr †» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:72:18: unsupported non-interactive tactic tactic.field_simp.ne_zero -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- Cauchy–Schwarz inequality. This proof follows \"Proof 2\" on Wikipedia. -/\ntheorem inner_mul_inner_self_le (x y : E) :\n    abs («expr⟪ , ⟫» x y) * abs («expr⟪ , ⟫» y x) ≤ re («expr⟪ , ⟫» x x) * re («expr⟪ , ⟫» y y) :=\n  by\n  by_cases hy : y = 0\n  · rw [hy]\n    simp only [is_R_or_C.abs_zero, inner_zero_left, mul_zero, AddMonoidHom.map_zero]\n  · have hy' : «expr⟪ , ⟫» y y ≠ 0 := inner_self_eq_zero.not.2 hy\n    set T := «expr⟪ , ⟫» y x / «expr⟪ , ⟫» y y with hT\n    have h₁ : re («expr⟪ , ⟫» y x) = re («expr⟪ , ⟫» x y) := inner_re_symm\n    have h₂ : im («expr⟪ , ⟫» y x) = -im («expr⟪ , ⟫» x y) := inner_im_symm\n    have h₃ :\n      «expr⟪ , ⟫» y x * «expr⟪ , ⟫» x y * «expr⟪ , ⟫» y y / («expr⟪ , ⟫» y y * «expr⟪ , ⟫» y y) =\n        «expr⟪ , ⟫» y x * «expr⟪ , ⟫» x y / «expr⟪ , ⟫» y y :=\n      by\n      rw [mul_div_assoc]\n      have : «expr⟪ , ⟫» y y / («expr⟪ , ⟫» y y * «expr⟪ , ⟫» y y) = 1 / «expr⟪ , ⟫» y y := by\n        rw [div_mul_eq_div_mul_one_div, div_self hy', one_mul]\n      rw [this, div_eq_mul_inv, one_mul, ← div_eq_mul_inv]\n    have h₄ : «expr⟪ , ⟫» y y = re («expr⟪ , ⟫» y y) := inner_self_re_to_K.symm\n    have h₅ : re («expr⟪ , ⟫» y y) > 0 :=\n      by\n      refine' lt_of_le_of_ne inner_self_nonneg _\n      intro H\n      apply hy'\n      rw [is_R_or_C.ext_iff]\n      exact ⟨by simp only [H, zero_re'], by simp only [inner_self_nonneg_im, AddMonoidHom.map_zero]⟩\n    have h₆ : re («expr⟪ , ⟫» y y) ≠ 0 := ne_of_gt h₅\n    have hmain :=\n      calc\n        0 ≤ re («expr⟪ , ⟫» (x - «expr • » T y) (x - «expr • » T y)) := inner_self_nonneg\n        _ =\n            re («expr⟪ , ⟫» x x) - re («expr⟪ , ⟫» («expr • » T y) x) - re («expr⟪ , ⟫» x («expr • » T y)) +\n              re («expr⟪ , ⟫» («expr • » T y) («expr • » T y)) :=\n          by\n          simp only [inner_sub_sub_self, inner_smul_left, inner_smul_right, h₁, h₂, neg_mul, AddMonoidHom.map_add,\n            conj_im, AddMonoidHom.map_sub, mul_neg, conj_re, neg_neg, mul_re]\n        _ =\n            re («expr⟪ , ⟫» x x) - re («expr †» T * «expr⟪ , ⟫» y x) - re (T * «expr⟪ , ⟫» x y) +\n              re (T * «expr †» T * «expr⟪ , ⟫» y y) :=\n          by simp only [inner_smul_left, inner_smul_right, mul_assoc]\n        _ = re («expr⟪ , ⟫» x x) - re («expr⟪ , ⟫» x y / «expr⟪ , ⟫» y y * «expr⟪ , ⟫» y x) := by\n          simp (disch :=\n            run_tac\n              tactic.field_simp.ne_zero) only [map_div₀,\n            h₃, inner_conj_sym, sub_add_cancel, field_simps]\n        _ = re («expr⟪ , ⟫» x x) - re («expr⟪ , ⟫» x y * «expr⟪ , ⟫» y x / «expr⟪ , ⟫» y y) := by\n          rw [← mul_div_right_comm]\n        _ = re («expr⟪ , ⟫» x x) - re («expr⟪ , ⟫» x y * «expr⟪ , ⟫» y x / re («expr⟪ , ⟫» y y)) := by\n          conv_lhs => rw [h₄]\n        _ = re («expr⟪ , ⟫» x x) - re («expr⟪ , ⟫» x y * «expr⟪ , ⟫» y x) / re («expr⟪ , ⟫» y y) := by\n          rw [div_re_of_real]\n        _ = re («expr⟪ , ⟫» x x) - abs («expr⟪ , ⟫» x y * «expr⟪ , ⟫» y x) / re («expr⟪ , ⟫» y y) := by\n          rw [inner_mul_conj_re_abs]\n        _ = re («expr⟪ , ⟫» x x) - abs («expr⟪ , ⟫» x y) * abs («expr⟪ , ⟫» y x) / re («expr⟪ , ⟫» y y) := by\n          rw [is_R_or_C.abs_mul]\n        \n    have hmain' : abs («expr⟪ , ⟫» x y) * abs («expr⟪ , ⟫» y x) / re («expr⟪ , ⟫» y y) ≤ re («expr⟪ , ⟫» x x) := by\n      linarith\n    have := (mul_le_mul_right h₅).mpr hmain'\n    rwa [div_mul_cancel (abs («expr⟪ , ⟫» x y) * abs («expr⟪ , ⟫» y x)) h₆] at this\n#align inner_mul_inner_self_le inner_mul_inner_self_le\n\n",
 "inner_mul_conj_re_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_mul_conj_re_abs {x y : E} :\n    re («expr⟪ , ⟫» x y * «expr⟪ , ⟫» y x) = abs («expr⟪ , ⟫» x y * «expr⟪ , ⟫» y x) :=\n  by\n  rw [← inner_conj_sym, mul_comm]\n  exact re_eq_abs_of_mul_conj (inner y x)\n#align inner_mul_conj_re_abs inner_mul_conj_re_abs\n\n",
 "inner_map_self_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/-- A linear map `T` is zero, if and only if the identity `⟪T x, x⟫_ℂ = 0` holds for all `x`.\n-/\ntheorem inner_map_self_eq_zero (T : «expr →ₗ[ ] » V (exprℂ) V) : (∀ x : V, «expr⟪ , ⟫_ℂ» (T x) x = 0) ↔ T = 0 :=\n  by\n  constructor\n  · intro hT\n    ext x\n    simp only [linear_map.zero_apply, ← inner_self_eq_zero, inner_map_polarization, hT]\n    norm_num\n  · rintro rfl x\n    simp only [linear_map.zero_apply, inner_zero_left]\n#align inner_map_self_eq_zero inner_map_self_eq_zero\n\n",
 "inner_map_polarization'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem inner_map_polarization' (T : «expr →ₗ[ ] » V (exprℂ) V) (x y : V) :\n    «expr⟪ , ⟫_ℂ» (T x) y =\n      («expr⟪ , ⟫_ℂ» (T (x + y)) (x + y) - «expr⟪ , ⟫_ℂ» (T (x - y)) (x - y) -\n            complex.I * «expr⟪ , ⟫_ℂ» (T (x + «expr • » complex.I y)) (x + «expr • » complex.I y) +\n          complex.I * «expr⟪ , ⟫_ℂ» (T (x - «expr • » complex.I y)) (x - «expr • » complex.I y)) /\n        4 :=\n  by\n  simp only [map_add, map_sub, inner_add_left, inner_add_right, linear_map.map_smul, inner_smul_left, inner_smul_right,\n    complex.conj_I, ← pow_two, complex.I_sq, inner_sub_left, inner_sub_right, mul_add, ← mul_assoc, mul_neg, neg_neg,\n    sub_neg_eq_add, one_mul, neg_one_mul, mul_sub, sub_sub]\n  ring\n#align inner_map_polarization' inner_map_polarization'\n\n",
 "inner_map_polarization":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n-- See note [lower instance priority]\n/-- A complex polarization identity, with a linear map\n-/\ntheorem inner_map_polarization (T : «expr →ₗ[ ] » V (exprℂ) V) (x y : V) :\n    «expr⟪ , ⟫_ℂ» (T y) x =\n      («expr⟪ , ⟫_ℂ» (T (x + y)) (x + y) - «expr⟪ , ⟫_ℂ» (T (x - y)) (x - y) +\n            complex.I * «expr⟪ , ⟫_ℂ» (T (x + «expr • » complex.I y)) (x + «expr • » complex.I y) -\n          complex.I * «expr⟪ , ⟫_ℂ» (T (x - «expr • » complex.I y)) (x - «expr • » complex.I y)) /\n        4 :=\n  by\n  simp only [map_add, map_sub, inner_add_left, inner_add_right, linear_map.map_smul, inner_smul_left, inner_smul_right,\n    complex.conj_I, ← pow_two, complex.I_sq, inner_sub_left, inner_sub_right, mul_add, ← mul_assoc, mul_neg, neg_neg,\n    sub_neg_eq_add, one_mul, neg_one_mul, mul_sub, sub_sub]\n  ring\n#align inner_map_polarization inner_map_polarization\n\n",
 "inner_map_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- A linear isometric equivalence preserves the inner product. -/\n@[simp]\ntheorem linear_isometry_equiv.inner_map_map (f : «expr ≃ₗᵢ[ ] » E 𝕜 E') (x y : E) :\n    «expr⟪ , ⟫» (f x) (f y) = «expr⟪ , ⟫» x y :=\n  f.to_linear_isometry.inner_map_map x y\n#align linear_isometry_equiv.inner_map_map linear_isometry_equiv.inner_map_map\n\n",
 "inner_map_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- The inner product on an inner product space of dimension 2 can be evaluated in terms\nof a complex-number representation of the space. -/\ntheorem inner_map_complex [inner_product_space (exprℝ) G] (f : «expr ≃ₗᵢ[ ] » G (exprℝ) (exprℂ)) (x y : G) :\n    «expr⟪ , ⟫_ℝ» x y = ((star_ring_end) (f x) * f y).re := by rw [← complex.inner, f.inner_map_map]\n#align inner_map_complex inner_map_complex\n\n",
 "inner_lt_one_iff_real_of_norm_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/-- If the inner product of two unit vectors is strictly less than `1`, then the two vectors are\ndistinct. One form of the equality case for Cauchy-Schwarz. -/\ntheorem inner_lt_one_iff_real_of_norm_one {x y : F} (hx : «expr‖ ‖» x = 1) (hy : «expr‖ ‖» y = 1) :\n    «expr⟪ , ⟫_ℝ» x y < 1 ↔ x ≠ y := by convert inner_lt_norm_mul_iff_real <;> simp [hx, hy]\n#align inner_lt_one_iff_real_of_norm_one inner_lt_one_iff_real_of_norm_one\n\n",
 "inner_lt_norm_mul_iff_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem inner_lt_norm_mul_iff_real {x y : F} :\n    «expr⟪ , ⟫_ℝ» x y < «expr‖ ‖» x * «expr‖ ‖» y ↔ «expr • » («expr‖ ‖» y) x ≠ «expr • » («expr‖ ‖» x) y :=\n  calc\n    «expr⟪ , ⟫_ℝ» x y < «expr‖ ‖» x * «expr‖ ‖» y ↔ «expr⟪ , ⟫_ℝ» x y ≠ «expr‖ ‖» x * «expr‖ ‖» y :=\n      ⟨ne_of_lt, lt_of_le_of_ne (real_inner_le_norm _ _)⟩\n    _ ↔ «expr • » («expr‖ ‖» y) x ≠ «expr • » («expr‖ ‖» x) y := not_congr inner_eq_norm_mul_iff_real\n    \n#align inner_lt_norm_mul_iff_real inner_lt_norm_mul_iff_real\n\n",
 "inner_left_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- The inner product of a linear combination of a set of orthonormal vectors with one of those\nvectors picks out the coefficient of that vector. -/\ntheorem orthonormal.inner_left_sum {v : ι → E} (hv : orthonormal 𝕜 v) (l : ι → 𝕜) {s : Finset ι} {i : ι} (hi : i ∈ s) :\n    «expr⟪ , ⟫»\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          («expr • » (l i) (v i)))\n        (v i) =\n      (star_ring_end) (l i) :=\n  by\n  classical simp only [sum_inner, inner_smul_left, orthonormal_iff_ite.mp hv, hi, mul_boole, finset.sum_ite_eq',\n      if_true]\n#align orthonormal.inner_left_sum orthonormal.inner_left_sum\n\n",
 "inner_left_right_finset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The double sum of weighted inner products of pairs of vectors from an orthonormal sequence is the\nsum of the weights.\n-/\ntheorem orthonormal.inner_left_right_finset {s : Finset ι} {v : ι → E} (hv : orthonormal 𝕜 v) {a : ι → ι → 𝕜} :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          («expr • » (a i j) («expr⟪ , ⟫» (v j) (v i)))) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (a k k) :=\n  by classical simp [orthonormal_iff_ite.mp hv, finset.sum_ite_of_true]\n#align orthonormal.inner_left_right_finset orthonormal.inner_left_right_finset\n\n",
 "inner_left_of_mem_orthogonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- A vector in `Kᗮ` is orthogonal to one in `K`. -/\ntheorem submodule.inner_left_of_mem_orthogonal {u v : E} (hu : u ∈ K) (hv : v ∈ «expr ᗮ» K) : «expr⟪ , ⟫» v u = 0 := by\n  rw [inner_eq_zero_sym] <;> exact submodule.inner_right_of_mem_orthogonal hu hv\n#align submodule.inner_left_of_mem_orthogonal submodule.inner_left_of_mem_orthogonal\n\n",
 "inner_left_fintype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- The inner product of a linear combination of a set of orthonormal vectors with one of those\nvectors picks out the coefficient of that vector. -/\ntheorem orthonormal.inner_left_fintype [fintype ι] {v : ι → E} (hv : orthonormal 𝕜 v) (l : ι → 𝕜) (i : ι) :\n    «expr⟪ , ⟫»\n        (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          («expr • » (l i) (v i)))\n        (v i) =\n      (star_ring_end) (l i) :=\n  hv.inner_left_sum l (finset.mem_univ _)\n#align orthonormal.inner_left_fintype orthonormal.inner_left_fintype\n\n",
 "inner_left_finsupp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- The inner product of a linear combination of a set of orthonormal vectors with one of those\nvectors picks out the coefficient of that vector. -/\ntheorem orthonormal.inner_left_finsupp {v : ι → E} (hv : orthonormal 𝕜 v) (l : «expr →₀ » ι 𝕜) (i : ι) :\n    «expr⟪ , ⟫» (finsupp.total ι E 𝕜 v l) (v i) = (star_ring_end) (l i) := by\n  rw [← inner_conj_sym, hv.inner_right_finsupp]\n#align orthonormal.inner_left_finsupp orthonormal.inner_left_finsupp\n\n",
 "inner_im_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_im_symm {x y : E} : im («expr⟪ , ⟫» x y) = -im («expr⟪ , ⟫» y x) := by rw [← inner_conj_sym, conj_im]\n#align inner_im_symm inner_im_symm\n\n",
 "inner_finsupp_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- A linear combination of some subset of an orthonormal set is orthogonal to other members of the\nset. -/\ntheorem orthonormal.inner_finsupp_eq_zero {v : ι → E} (hv : orthonormal 𝕜 v) {s : set ι} {i : ι} (hi : i ∉ s)\n    {l : «expr →₀ » ι 𝕜} (hl : l ∈ finsupp.supported 𝕜 𝕜 s) : «expr⟪ , ⟫» (finsupp.total ι E 𝕜 v l) (v i) = 0 :=\n  by\n  rw [finsupp.mem_supported'] at hl\n  simp only [hv.inner_left_finsupp, hl i hi, map_zero]\n#align orthonormal.inner_finsupp_eq_zero orthonormal.inner_finsupp_eq_zero\n\n",
 "inner_finsupp_eq_sum_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- The inner product of two linear combinations of a set of orthonormal vectors, expressed as\na sum over the second `finsupp`. -/\ntheorem orthonormal.inner_finsupp_eq_sum_right {v : ι → E} (hv : orthonormal 𝕜 v) (l₁ l₂ : «expr →₀ » ι 𝕜) :\n    «expr⟪ , ⟫» (finsupp.total ι E 𝕜 v l₁) (finsupp.total ι E 𝕜 v l₂) = l₂.sum fun i y => (star_ring_end) (l₁ i) * y :=\n  by simp only [l₂.total_apply _, finsupp.inner_sum, hv.inner_left_finsupp, mul_comm, smul_eq_mul]\n#align orthonormal.inner_finsupp_eq_sum_right orthonormal.inner_finsupp_eq_sum_right\n\n",
 "inner_finsupp_eq_sum_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- The inner product of two linear combinations of a set of orthonormal vectors, expressed as\na sum over the first `finsupp`. -/\ntheorem orthonormal.inner_finsupp_eq_sum_left {v : ι → E} (hv : orthonormal 𝕜 v) (l₁ l₂ : «expr →₀ » ι 𝕜) :\n    «expr⟪ , ⟫» (finsupp.total ι E 𝕜 v l₁) (finsupp.total ι E 𝕜 v l₂) = l₁.sum fun i y => (star_ring_end) y * l₂ i := by\n  simp only [l₁.total_apply _, finsupp.sum_inner, hv.inner_right_finsupp, smul_eq_mul]\n#align orthonormal.inner_finsupp_eq_sum_left orthonormal.inner_finsupp_eq_sum_left\n\n",
 "inner_eq_zero_sym":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_eq_zero_sym {x y : E} : «expr⟪ , ⟫» x y = 0 ↔ «expr⟪ , ⟫» y x = 0 :=\n  ⟨fun h => by simp [← inner_conj_sym, h], fun h => by simp [← inner_conj_sym, h]⟩\n#align inner_eq_zero_sym inner_eq_zero_sym\n\n",
 "inner_eq_sum_norm_sq_div_four":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprIK -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprIK -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprIK -/\n/-- Polarization identity: The inner product, in terms of the norm. -/\ntheorem inner_eq_sum_norm_sq_div_four (x y : E) :\n    «expr⟪ , ⟫» x y =\n      («expr‖ ‖» (x + y) ^ 2 - «expr‖ ‖» (x - y) ^ 2 +\n          («expr‖ ‖» (x - «expr • » (exprIK) y) ^ 2 - «expr‖ ‖» (x + «expr • » (exprIK) y) ^ 2) * exprIK) /\n        4 :=\n  by\n  rw [← re_add_im («expr⟪ , ⟫» x y), re_inner_eq_norm_add_mul_self_sub_norm_sub_mul_self_div_four,\n    im_inner_eq_norm_sub_I_smul_mul_self_sub_norm_add_I_smul_mul_self_div_four]\n  push_cast\n  simp only [sq, ← mul_div_right_comm, ← add_div]\n#align inner_eq_sum_norm_sq_div_four inner_eq_sum_norm_sq_div_four\n\n",
 "inner_eq_norm_mul_iff_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If the inner product of two vectors is equal to the product of their norms (i.e.,\n`⟪x, y⟫ = ‖x‖ * ‖y‖`), then the two vectors are nonnegative real multiples of each other. One form\nof the equality case for Cauchy-Schwarz.\nCompare `abs_inner_eq_norm_iff`, which takes the weaker hypothesis `abs ⟪x, y⟫ = ‖x‖ * ‖y‖`. -/\ntheorem inner_eq_norm_mul_iff_real {x y : F} :\n    «expr⟪ , ⟫_ℝ» x y = «expr‖ ‖» x * «expr‖ ‖» y ↔ «expr • » («expr‖ ‖» y) x = «expr • » («expr‖ ‖» x) y :=\n  inner_eq_norm_mul_iff\n#align inner_eq_norm_mul_iff_real inner_eq_norm_mul_iff_real\n\n",
 "inner_eq_norm_mul_iff_of_norm_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- If the inner product of two unit vectors is `1`, then the two vectors are equal. One form of\nthe equality case for Cauchy-Schwarz. -/\ntheorem inner_eq_norm_mul_iff_of_norm_one {x y : E} (hx : «expr‖ ‖» x = 1) (hy : «expr‖ ‖» y = 1) :\n    «expr⟪ , ⟫» x y = 1 ↔ x = y := by convert inner_eq_norm_mul_iff using 2 <;> simp [hx, hy]\n#align inner_eq_norm_mul_iff_of_norm_one inner_eq_norm_mul_iff_of_norm_one\n\n",
 "inner_eq_norm_mul_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If the inner product of two vectors is equal to the product of their norms (i.e.,\n`⟪x, y⟫ = ‖x‖ * ‖y‖`), then the two vectors are nonnegative real multiples of each other. One form\nof the equality case for Cauchy-Schwarz.\nCompare `abs_inner_eq_norm_iff`, which takes the weaker hypothesis `abs ⟪x, y⟫ = ‖x‖ * ‖y‖`. -/\ntheorem inner_eq_norm_mul_iff {x y : E} :\n    «expr⟪ , ⟫» x y = («expr‖ ‖» x : 𝕜) * «expr‖ ‖» y ↔ «expr • » («expr‖ ‖» y : 𝕜) x = «expr • » («expr‖ ‖» x : 𝕜) y :=\n  by\n  by_cases h : x = 0 ∨ y = 0\n  -- WLOG `x` and `y` are nonzero\n  · cases h <;> simp [h]\n  calc\n    «expr⟪ , ⟫» x y = («expr‖ ‖» x : 𝕜) * «expr‖ ‖» y ↔ «expr‖ ‖» x * «expr‖ ‖» y = re («expr⟪ , ⟫» x y) :=\n      by\n      norm_cast\n      constructor\n      · intro h'\n        simp [h']\n      · have cauchy_schwarz := abs_inner_le_norm x y\n        intro h'\n        rw [h'] at cauchy_schwarz⊢\n        rwa [re_eq_self_of_le]\n    _ ↔ 2 * «expr‖ ‖» x * «expr‖ ‖» y * («expr‖ ‖» x * «expr‖ ‖» y - re («expr⟪ , ⟫» x y)) = 0 := by\n      simp [h, show (2 : exprℝ) ≠ 0 by norm_num, sub_eq_zero]\n    _ ↔\n        «expr‖ ‖» («expr • » («expr‖ ‖» y : 𝕜) x - «expr • » («expr‖ ‖» x : 𝕜) y) *\n            «expr‖ ‖» («expr • » («expr‖ ‖» y : 𝕜) x - «expr • » («expr‖ ‖» x : 𝕜) y) =\n          0 :=\n      by\n      simp only [norm_sub_mul_self, inner_smul_left, inner_smul_right, norm_smul, conj_of_real, is_R_or_C.norm_eq_abs,\n        abs_of_real, of_real_im, of_real_re, mul_re, abs_norm_eq_norm]\n      refine' eq.congr _ rfl\n      ring\n    _ ↔ «expr • » («expr‖ ‖» y : 𝕜) x = «expr • » («expr‖ ‖» x : 𝕜) y := by simp [norm_sub_eq_zero_iff]\n    \n#align inner_eq_norm_mul_iff inner_eq_norm_mul_iff\n\n",
 "inner_conj_sym":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr †» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem inner_conj_sym (x y : E) : «expr †» («expr⟪ , ⟫» y x) = «expr⟪ , ⟫» x y :=\n  inner_product_space.conj_sym _ _\n#align inner_conj_sym inner_conj_sym\n\n",
 "inner_coe":
 "@[simp]\ntheorem inner_coe (a b : E) : inner (a : completion E) (b : completion E) = (inner a b : 𝕜) :=\n  (dense_inducing_coe.prod dense_inducing_coe).extend_eq (continuous_inner : continuous (uncurry inner : E × E → 𝕜))\n    (a, b)\n#align inner_coe inner_coe\n\n",
 "inner_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem is_R_or_C.inner_apply (x y : 𝕜) : «expr⟪ , ⟫» x y = (star_ring_end) x * y :=\n  rfl\n#align is_R_or_C.inner_apply is_R_or_C.inner_apply\n\n",
 "inner_add_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_add_right {x y z : E} : «expr⟪ , ⟫» x (y + z) = «expr⟪ , ⟫» x y + «expr⟪ , ⟫» x z :=\n  by\n  rw [← inner_conj_sym, inner_add_left, RingHom.map_add]\n  simp only [inner_conj_sym]\n#align inner_add_right inner_add_right\n\n",
 "inner_add_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_add_left {x y z : E} : «expr⟪ , ⟫» (x + y) z = «expr⟪ , ⟫» x z + «expr⟪ , ⟫» y z :=\n  inner_product_space.add_left _ _ _\n#align inner_add_left inner_add_left\n\n",
 "inner_add_add_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- Expand `⟪x + y, x + y⟫` -/\ntheorem inner_add_add_self {x y : E} :\n    «expr⟪ , ⟫» (x + y) (x + y) = «expr⟪ , ⟫» x x + «expr⟪ , ⟫» x y + «expr⟪ , ⟫» y x + «expr⟪ , ⟫» y y := by\n  simp only [inner_add_left, inner_add_right] <;> ring\n#align inner_add_add_self inner_add_add_self\n\n",
 "inner_abs_conj_sym":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem inner_abs_conj_sym {x y : E} : abs («expr⟪ , ⟫» x y) = abs («expr⟪ , ⟫» y x) := by\n  rw [← inner_conj_sym, abs_conj]\n#align inner_abs_conj_sym inner_abs_conj_sym\n\n",
 "innerSL_flip_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem innerSL_flip_apply {x y : E} : innerSL_flip x y = «expr⟪ , ⟫» y x :=\n  rfl\n#align innerSL_flip_apply innerSL_flip_apply\n\n",
 "innerSL_apply_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- `innerSL` is an isometry. Note that the associated `linear_isometry` is defined in\n`inner_product_space.dual` as `to_dual_map`.  -/\n@[simp]\ntheorem innerSL_apply_norm {x : E} : «expr‖ ‖» (innerSL x : «expr →L[ ] » E 𝕜 𝕜) = «expr‖ ‖» x :=\n  by\n  refine'\n    le_antisymm ((innerSL x : «expr →L[ ] » E 𝕜 𝕜).op_norm_le_bound (norm_nonneg _) fun y => norm_inner_le_norm _ _) _\n  cases' eq_or_lt_of_le (norm_nonneg x) with h h\n  · have : x = 0 := norm_eq_zero.mp (eq.symm h)\n    simp [this]\n  · refine' (mul_le_mul_right h).mp _\n    calc\n      «expr‖ ‖» x * «expr‖ ‖» x = «expr‖ ‖» x ^ 2 := by ring\n      _ = re («expr⟪ , ⟫» x x) := norm_sq_eq_inner _\n      _ ≤ abs («expr⟪ , ⟫» x x) := re_le_abs _\n      _ = «expr‖ ‖» (innerSL x x) := by\n        rw [← is_R_or_C.norm_eq_abs]\n        rfl\n      _ ≤ «expr‖ ‖» (innerSL x) * «expr‖ ‖» x := (innerSL x : «expr →L[ ] » E 𝕜 𝕜).le_op_norm _\n      \n#align innerSL_apply_norm innerSL_apply_norm\n\n",
 "innerSL_apply_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem innerSL_apply_coe (v : E) : (innerSL v : E → 𝕜) = fun w => «expr⟪ , ⟫» v w :=\n  rfl\n#align innerSL_apply_coe innerSL_apply_coe\n\n",
 "innerSL_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n@[simp]\ntheorem innerSL_apply (v w : E) : innerSL v w = «expr⟪ , ⟫» v w :=\n  rfl\n#align innerSL_apply innerSL_apply\n\n",
 "inner":
 "protected theorem continuous.inner {α : Type _} [topological_space α] {f g : α → completion E} (hf : continuous f)\n    (hg : continuous g) : continuous (fun x : α => inner (f x) (g x) : α → 𝕜) :=\n  uniform_space.completion.continuous_inner.comp (hf.prod_mk hg : _)\n#align continuous.inner continuous.inner\n\n",
 "infi_orthogonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/-- The inf of an indexed family of orthogonal subspaces equals the\nsubspace orthogonal to the sup. -/\ntheorem submodule.infi_orthogonal {ι : Type _} (K : ι → submodule 𝕜 E) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" («expr ᗮ» (K i)) =\n      «expr ᗮ» (supᵢ K) :=\n  (submodule.orthogonal_gc 𝕜 E).l_supr.symm\n#align submodule.infi_orthogonal submodule.infi_orthogonal\n\n",
 "inf_orthogonal_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/-- `K` and `Kᗮ` have trivial intersection. -/\ntheorem submodule.inf_orthogonal_eq_bot : «expr ⊓ » K («expr ᗮ» K) = «expr⊥» :=\n  by\n  rw [submodule.eq_bot_iff]\n  intro x\n  rw [submodule.mem_inf]\n  exact fun ⟨hx, ho⟩ => inner_self_eq_zero.1 (ho x hx)\n#align submodule.inf_orthogonal_eq_bot submodule.inf_orthogonal_eq_bot\n\n",
 "inf_orthogonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/-- The inf of two orthogonal subspaces equals the subspace orthogonal\nto the sup. -/\ntheorem submodule.inf_orthogonal (K₁ K₂ : submodule 𝕜 E) :\n    «expr ⊓ » («expr ᗮ» K₁) («expr ᗮ» K₂) = «expr ᗮ» («expr ⊔ » K₁ K₂) :=\n  (submodule.orthogonal_gc 𝕜 E).l_sup.symm\n#align submodule.inf_orthogonal submodule.inf_orthogonal\n\n",
 "independent":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- An orthogonal family forms an independent family of subspaces; that is, any collection of\nelements each from a different subspace in the family is linearly independent. In particular, the\npairwise intersections of elements of the family are 0. -/\ntheorem orthogonal_family.independent {V : ι → submodule 𝕜 E}\n    (hV : @orthogonal_family 𝕜 _ _ _ _ (fun i => V i) _ fun i => (V i).subtypeₗᵢ) : complete_lattice.independent V := by\n  classical\n    apply complete_lattice.independent_of_dfinsupp_lsum_injective\n    rw [← @linear_map.ker_eq_bot _ _ _ _ _ _ (direct_sum.add_comm_group fun i => V i), submodule.eq_bot_iff]\n    intro v hv\n    rw [linear_map.mem_ker] at hv\n    ext i\n    suffices «expr⟪ , ⟫» (v i : E) (v i) = 0 by simpa only [inner_self_eq_zero] using this\n    calc\n      «expr⟪ , ⟫» (v i : E) (v i) = «expr⟪ , ⟫» (v i : E) (dfinsupp.lsum ℕ (fun i => (V i).subtype) v) := by\n        simpa only [dfinsupp.sum_add_hom_apply, dfinsupp.lsum_apply_apply] using\n          (hV.inner_right_dfinsupp v i (v i)).symm\n      _ = 0 := by simp only [hv, inner_zero_right]\n      \n#align orthogonal_family.independent orthogonal_family.independent\n\n",
 "im_inner_eq_norm_sub_I_smul_mul_self_sub_norm_add_I_smul_mul_self_div_four":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprIK -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprIK -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprIK -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprIK -/\n/-- Polarization identity: The imaginary part of the inner product, in terms of the norm. -/\ntheorem im_inner_eq_norm_sub_I_smul_mul_self_sub_norm_add_I_smul_mul_self_div_four (x y : E) :\n    im («expr⟪ , ⟫» x y) =\n      («expr‖ ‖» (x - «expr • » (exprIK) y) * «expr‖ ‖» (x - «expr • » (exprIK) y) -\n          «expr‖ ‖» (x + «expr • » (exprIK) y) * «expr‖ ‖» (x + «expr • » (exprIK) y)) /\n        4 :=\n  by\n  simp only [norm_add_mul_self, norm_sub_mul_self, inner_smul_right, I_mul_re]\n  ring\n#align\n  im_inner_eq_norm_sub_I_smul_mul_self_sub_norm_add_I_smul_mul_self_div_four im_inner_eq_norm_sub_I_smul_mul_self_sub_norm_add_I_smul_mul_self_div_four\n\n",
 "ext_inner_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem ext_inner_right {x y : E} (h : ∀ v, «expr⟪ , ⟫» x v = «expr⟪ , ⟫» y v) : x = y := by\n  rw [← sub_eq_zero, ← inner_self_eq_zero, inner_sub_left, sub_eq_zero, h (x - y)]\n#align ext_inner_right ext_inner_right\n\n",
 "ext_inner_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℂ» -/\n/-- Two linear maps `S` and `T` are equal, if and only if the identity `⟪S x, x⟫_ℂ = ⟪T x, x⟫_ℂ` holds\nfor all `x`.\n-/\ntheorem ext_inner_map (S T : «expr →ₗ[ ] » V (exprℂ) V) :\n    (∀ x : V, «expr⟪ , ⟫_ℂ» (S x) x = «expr⟪ , ⟫_ℂ» (T x) x) ↔ S = T :=\n  by\n  rw [← sub_eq_zero, ← inner_map_self_eq_zero]\n  refine' forall_congr' fun x => _\n  rw [linear_map.sub_apply, inner_sub_left, sub_eq_zero]\n#align ext_inner_map ext_inner_map\n\n",
 "ext_inner_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem ext_inner_left {x y : E} (h : ∀ v, «expr⟪ , ⟫» v x = «expr⟪ , ⟫» v y) : x = y := by\n  rw [← sub_eq_zero, ← inner_self_eq_zero, inner_sub_right, sub_eq_zero, h (x - y)]\n#align ext_inner_left ext_inner_left\n\n",
 "exists_maximal_orthonormal":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (w «expr ⊇ » s) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊇ » -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (u «expr ⊇ » w) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊇ » -/\n/-- Given an orthonormal set `v` of vectors in `E`, there exists a maximal orthonormal set\ncontaining it. -/\ntheorem exists_maximal_orthonormal {s : set E} (hs : orthonormal 𝕜 (coe : s → E)) :\n    ∃ (w : _)(_ : «expr ⊇ » w s),\n      orthonormal 𝕜 (coe : w → E) ∧ ∀ (u) (_ : «expr ⊇ » u w), orthonormal 𝕜 (coe : u → E) → u = w :=\n  by\n  obtain ⟨b, bi, sb, h⟩ := zorn_subset_nonempty { b | orthonormal 𝕜 (coe : b → E) } _ _ hs\n  · refine' ⟨b, sb, bi, _⟩\n    exact fun u hus hu => h u hu hus\n  · refine' fun c hc cc c0 => ⟨⋃₀ c, _, _⟩\n    · exact orthonormal_sUnion_of_directed cc.directed_on fun x xc => hc xc\n    · exact fun _ => Set.subset_unionₛ_of_mem\n#align exists_maximal_orthonormal exists_maximal_orthonormal\n\n",
 "equiv_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem orthonormal.equiv_trans {v : basis ι 𝕜 E} (hv : orthonormal 𝕜 v) {v' : basis ι' 𝕜 E'} (hv' : orthonormal 𝕜 v')\n    (e : «expr ≃ » ι ι') {v'' : basis ι'' 𝕜 E''} (hv'' : orthonormal 𝕜 v'') (e' : «expr ≃ » ι' ι'') :\n    (hv.equiv hv' e).trans (hv'.equiv hv'' e') = hv.equiv hv'' (e.trans e') :=\n  v.ext_linear_isometry_equiv fun i => by\n    simp only [linear_isometry_equiv.trans_apply, orthonormal.equiv_apply, e.coe_trans]\n#align orthonormal.equiv_trans orthonormal.equiv_trans\n\n",
 "equiv_to_linear_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem orthonormal.equiv_to_linear_equiv {v : basis ι 𝕜 E} (hv : orthonormal 𝕜 v) {v' : basis ι' 𝕜 E'}\n    (hv' : orthonormal 𝕜 v') (e : «expr ≃ » ι ι') : (hv.equiv hv' e).to_linear_equiv = v.equiv v' e :=\n  rfl\n#align orthonormal.equiv_to_linear_equiv orthonormal.equiv_to_linear_equiv\n\n",
 "equiv_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem orthonormal.equiv_symm {v : basis ι 𝕜 E} (hv : orthonormal 𝕜 v) {v' : basis ι' 𝕜 E'} (hv' : orthonormal 𝕜 v')\n    (e : «expr ≃ » ι ι') : (hv.equiv hv' e).symm = hv'.equiv hv e.symm :=\n  v'.ext_linear_isometry_equiv fun i =>\n    (hv.equiv hv' e).injective <| by\n      simp only [linear_isometry_equiv.apply_symm_apply, orthonormal.equiv_apply, e.apply_symm_apply]\n#align orthonormal.equiv_symm orthonormal.equiv_symm\n\n",
 "equiv_refl":
 "@[simp]\ntheorem orthonormal.equiv_refl {v : basis ι 𝕜 E} (hv : orthonormal 𝕜 v) :\n    hv.equiv hv (equiv.refl ι) = linear_isometry_equiv.refl 𝕜 E :=\n  v.ext_linear_isometry_equiv fun i => by\n    simp only [orthonormal.equiv_apply, equiv.coe_refl, id.def, linear_isometry_equiv.coe_refl]\n#align orthonormal.equiv_refl orthonormal.equiv_refl\n\n",
 "equiv_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem orthonormal.equiv_apply {ι' : Type _} {v : basis ι 𝕜 E} (hv : orthonormal 𝕜 v) {v' : basis ι' 𝕜 E'}\n    (hv' : orthonormal 𝕜 v') (e : «expr ≃ » ι ι') (i : ι) : hv.equiv hv' e (v i) = v' (e i) :=\n  basis.equiv_apply _ _ _ _\n#align orthonormal.equiv_apply orthonormal.equiv_apply\n\n",
 "eq_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\ntheorem orthogonal_family.eq_ite {i j : ι} (v : G i) (w : G j) :\n    «expr⟪ , ⟫» (V i v) (V j w) = ite (i = j) («expr⟪ , ⟫» (V i v) (V j w)) 0 :=\n  by\n  split_ifs\n  · rfl\n  · exact hV h v w\n#align orthogonal_family.eq_ite orthogonal_family.eq_ite\n\n",
 "dist_div_norm_sq_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Formula for the distance between the images of two nonzero points under an inversion with center\nzero. See also `euclidean_geometry.dist_inversion_inversion` for inversions around a general\npoint. -/\ntheorem dist_div_norm_sq_smul {x y : F} (hx : x ≠ 0) (hy : y ≠ 0) (R : exprℝ) :\n    dist («expr • » ((R / «expr‖ ‖» x) ^ 2) x) («expr • » ((R / «expr‖ ‖» y) ^ 2) y) =\n      R ^ 2 / («expr‖ ‖» x * «expr‖ ‖» y) * dist x y :=\n  have hx' : «expr‖ ‖» x ≠ 0 := norm_ne_zero_iff.2 hx\n  have hy' : «expr‖ ‖» y ≠ 0 := norm_ne_zero_iff.2 hy\n  calc\n    dist («expr • » ((R / «expr‖ ‖» x) ^ 2) x) («expr • » ((R / «expr‖ ‖» y) ^ 2) y) =\n        sqrt («expr‖ ‖» («expr • » ((R / «expr‖ ‖» x) ^ 2) x - «expr • » ((R / «expr‖ ‖» y) ^ 2) y) ^ 2) :=\n      by rw [dist_eq_norm, sqrt_sq (norm_nonneg _)]\n    _ = sqrt ((R ^ 2 / («expr‖ ‖» x * «expr‖ ‖» y)) ^ 2 * «expr‖ ‖» (x - y) ^ 2) :=\n      congr_arg sqrt <|\n        by\n        field_simp [sq, norm_sub_mul_self_real, norm_smul, real_inner_smul_left, inner_smul_right,\n          real.norm_of_nonneg (mul_self_nonneg _)]\n        ring\n    _ = R ^ 2 / («expr‖ ‖» x * «expr‖ ‖» y) * dist x y := by\n      rw [sqrt_mul (sq_nonneg _), sqrt_sq (norm_nonneg _),\n        sqrt_sq (div_nonneg (sq_nonneg _) (mul_nonneg (norm_nonneg _) (norm_nonneg _))), dist_eq_norm]\n    \n#align dist_div_norm_sq_smul dist_div_norm_sq_smul\n\n",
 "continuous_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\nprotected theorem continuous_inner : continuous (uncurry inner : completion E × completion E → 𝕜) :=\n  by\n  let inner' : «expr →+ » E («expr →+ » E 𝕜) :=\n    { to_fun := fun x => (innerₛₗ x).to_add_monoid_hom\n      map_zero' := by ext x <;> exact inner_zero_left\n      map_add' := fun x y => by ext z <;> exact inner_add_left }\n  have : continuous fun p : E × E => inner' p.1 p.2 := continuous_inner\n  rw [completion.has_inner, uncurry_curry _]\n  change\n    continuous (((dense_inducing_to_compl E).prod (dense_inducing_to_compl E)).extend fun p : E × E => inner' p.1 p.2)\n  exact (dense_inducing_to_compl E).extend_Z_bilin (dense_inducing_to_compl E) this\n#align continuous_inner continuous_inner\n\n",
 "comp_linear_isometry_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗᵢ[ ] » -/\n/-- A linear isometric equivalence preserves the property of being orthonormal. -/\ntheorem orthonormal.comp_linear_isometry_equiv {v : ι → E} (hv : orthonormal 𝕜 v) (f : «expr ≃ₗᵢ[ ] » E 𝕜 E') :\n    orthonormal 𝕜 (f ∘ v) :=\n  hv.comp_linear_isometry f.to_linear_isometry\n#align orthonormal.comp_linear_isometry_equiv orthonormal.comp_linear_isometry_equiv\n\n",
 "comp_linear_isometry":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗᵢ[ ] » -/\n/-- A linear isometry preserves the property of being orthonormal. -/\ntheorem orthonormal.comp_linear_isometry {v : ι → E} (hv : orthonormal 𝕜 v) (f : «expr →ₗᵢ[ ] » E 𝕜 E') :\n    orthonormal 𝕜 (f ∘ v) := by rwa [f.orthonormal_comp_iff]\n#align orthonormal.comp_linear_isometry orthonormal.comp_linear_isometry\n\n",
 "comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗᵢ[ ] » -/\n/-- The composition of an orthogonal family of subspaces with an injective function is also an\northogonal family. -/\ntheorem orthogonal_family.comp {γ : Type _} {f : γ → ι} (hf : function.injective f) :\n    orthogonal_family 𝕜 fun g : γ => (V (f g) : «expr →ₗᵢ[ ] » (G (f g)) 𝕜 E) := fun i j hij v w => hV (hf.ne hij) v w\n#align orthogonal_family.comp orthogonal_family.comp\n\n",
 "collected_basis_orthonormal":
 "theorem direct_sum.is_internal.collected_basis_orthonormal {V : ι → submodule 𝕜 E}\n    (hV : @orthogonal_family 𝕜 _ _ _ _ (fun i => V i) _ fun i => (V i).subtypeₗᵢ)\n    (hV_sum : direct_sum.is_internal fun i => V i) {α : ι → Type _} {v_family : ∀ i, basis (α i) 𝕜 (V i)}\n    (hv_family : ∀ i, orthonormal 𝕜 (v_family i)) : orthonormal 𝕜 (hV_sum.collected_basis v_family) := by\n  simpa only [hV_sum.collected_basis_coe] using hV.orthonormal_sigma_orthonormal hv_family\n#align direct_sum.is_internal.collected_basis_orthonormal direct_sum.is_internal.collected_basis_orthonormal\n\n",
 "coe_isometry_of_orthonormal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem linear_equiv.coe_isometry_of_orthonormal (f : «expr ≃ₗ[ ] » E 𝕜 E') {v : basis ι 𝕜 E} (hv : orthonormal 𝕜 v)\n    (hf : orthonormal 𝕜 (f ∘ v)) : «expr⇑ » (f.isometry_of_orthonormal hv hf) = f :=\n  rfl\n#align linear_equiv.coe_isometry_of_orthonormal linear_equiv.coe_isometry_of_orthonormal\n\n",
 "coe_isometry_of_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem linear_equiv.coe_isometry_of_inner (f : «expr ≃ₗ[ ] » E 𝕜 E') (h) : «expr⇑ » (f.isometry_of_inner h) = f :=\n  rfl\n#align linear_equiv.coe_isometry_of_inner linear_equiv.coe_isometry_of_inner\n\n",
 "coe_inner":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/-- The inner product on submodules is the same as on the ambient space. -/\n@[simp]\ntheorem submodule.coe_inner (W : submodule 𝕜 E) (x y : W) : «expr⟪ , ⟫» x y = «expr⟪ , ⟫» (x : E) ↑y :=\n  rfl\n#align submodule.coe_inner submodule.coe_inner\n\n",
 "coe_basis_of_orthonormal_of_card_eq_finrank":
 "@[simp]\ntheorem coe_basis_of_orthonormal_of_card_eq_finrank [fintype ι] [nonempty ι] {v : ι → E} (hv : orthonormal 𝕜 v)\n    (card_eq : fintype.card ι = finrank 𝕜 E) : (basis_of_orthonormal_of_card_eq_finrank hv card_eq : ι → E) = v :=\n  coe_basis_of_linear_independent_of_card_eq_finrank _ _\n#align coe_basis_of_orthonormal_of_card_eq_finrank coe_basis_of_orthonormal_of_card_eq_finrank\n\n",
 "cod_restrict":
 "theorem orthonormal.cod_restrict {ι : Type _} {v : ι → E} (hv : orthonormal 𝕜 v) (s : submodule 𝕜 E)\n    (hvs : ∀ i, v i ∈ s) : @orthonormal 𝕜 s _ _ ι (Set.codRestrict v s hvs) :=\n  s.subtypeₗᵢ.orthonormal_comp_iff.mp hv\n#align orthonormal.cod_restrict orthonormal.cod_restrict\n\n",
 "bot_orthogonal_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem submodule.bot_orthogonal_eq_top : «expr ᗮ» («expr⊥» : submodule 𝕜 E) = «expr⊤» :=\n  by\n  rw [← submodule.top_orthogonal_eq_bot, eq_top_iff]\n  exact submodule.le_orthogonal_orthogonal («expr⊤»)\n#align submodule.bot_orthogonal_eq_top submodule.bot_orthogonal_eq_top\n\n",
 "abs_real_inner_le_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Cauchy–Schwarz inequality with norm -/\ntheorem abs_real_inner_le_norm (x y : F) : (exprabsR) («expr⟪ , ⟫_ℝ» x y) ≤ «expr‖ ‖» x * «expr‖ ‖» y :=\n  by\n  have h := @abs_inner_le_norm (exprℝ) F _ _ x y\n  simpa using h\n#align abs_real_inner_le_norm abs_real_inner_le_norm\n\n",
 "abs_real_inner_div_norm_mul_norm_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- The real inner product of two vectors, divided by the product of their\nnorms, has absolute value at most 1. -/\ntheorem abs_real_inner_div_norm_mul_norm_le_one (x y : F) :\n    (exprabsR) («expr⟪ , ⟫_ℝ» x y / («expr‖ ‖» x * «expr‖ ‖» y)) ≤ 1 :=\n  by\n  rw [_root_.abs_div]\n  by_cases h : 0 = (exprabsR) («expr‖ ‖» x * «expr‖ ‖» y)\n  · rw [← h, div_zero]\n    norm_num\n  · change 0 ≠ (exprabsR) («expr‖ ‖» x * «expr‖ ‖» y) at h\n    rw [div_le_iff' (lt_of_le_of_ne (ge_iff_le.mp (_root_.abs_nonneg («expr‖ ‖» x * «expr‖ ‖» y))) h)]\n    convert abs_real_inner_le_norm x y using 1\n    rw [_root_.abs_mul, _root_.abs_of_nonneg (norm_nonneg x), _root_.abs_of_nonneg (norm_nonneg y), mul_one]\n#align abs_real_inner_div_norm_mul_norm_le_one abs_real_inner_div_norm_mul_norm_le_one\n\n",
 "abs_real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The inner product of a nonzero vector with a nonzero multiple of\nitself, divided by the product of their norms, has absolute value\n1. -/\ntheorem abs_real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul {x : F} {r : exprℝ} (hx : x ≠ 0)\n    (hr : r ≠ 0) : (exprabsR) («expr⟪ , ⟫_ℝ» x («expr • » r x)) / («expr‖ ‖» x * «expr‖ ‖» («expr • » r x)) = 1 :=\n  by\n  rw [← abs_to_real]\n  exact abs_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul hx hr\n#align\n  abs_real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul abs_real_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul\n\n",
 "abs_real_inner_div_norm_mul_norm_eq_one_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabsR -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫_ℝ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The inner product of two vectors, divided by the product of their\nnorms, has absolute value 1 if and only if they are nonzero and one is\na multiple of the other. One form of equality case for Cauchy-Schwarz. -/\ntheorem abs_real_inner_div_norm_mul_norm_eq_one_iff (x y : F) :\n    (exprabsR) («expr⟪ , ⟫_ℝ» x y / («expr‖ ‖» x * «expr‖ ‖» y)) = 1 ↔ x ≠ 0 ∧ ∃ r : exprℝ, r ≠ 0 ∧ y = «expr • » r x :=\n  by\n  have := @abs_inner_div_norm_mul_norm_eq_one_iff (exprℝ) F _ _ x y\n  simpa [coe_real_eq_id] using this\n#align abs_real_inner_div_norm_mul_norm_eq_one_iff abs_real_inner_div_norm_mul_norm_eq_one_iff\n\n",
 "abs_inner_le_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Cauchy–Schwarz inequality with norm -/\ntheorem abs_inner_le_norm (x y : E) : abs («expr⟪ , ⟫» x y) ≤ «expr‖ ‖» x * «expr‖ ‖» y :=\n  nonneg_le_nonneg_of_sq_le_sq (mul_nonneg (norm_nonneg _) (norm_nonneg _))\n    (by\n      have : «expr‖ ‖» x * «expr‖ ‖» y * («expr‖ ‖» x * «expr‖ ‖» y) = re («expr⟪ , ⟫» x x) * re («expr⟪ , ⟫» y y)\n      simp only [inner_self_eq_norm_mul_norm]; ring\n      rw [this]\n      conv_lhs =>\n        congr\n        skip\n        rw [inner_abs_conj_sym]\n      exact inner_mul_inner_self_le _ _)\n#align abs_inner_le_norm abs_inner_le_norm\n\n",
 "abs_inner_eq_norm_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- If the inner product of two vectors is equal to the product of their norms, then the two vectors\nare multiples of each other. One form of the equality case for Cauchy-Schwarz.\nCompare `inner_eq_norm_mul_iff`, which takes the stronger hypothesis `⟪x, y⟫ = ‖x‖ * ‖y‖`. -/\ntheorem abs_inner_eq_norm_iff (x y : E) (hx0 : x ≠ 0) (hy0 : y ≠ 0) :\n    abs («expr⟪ , ⟫» x y) = «expr‖ ‖» x * «expr‖ ‖» y ↔ ∃ r : 𝕜, r ≠ 0 ∧ y = «expr • » r x :=\n  by\n  have hxy0 : «expr‖ ‖» x * «expr‖ ‖» y ≠ 0 := mul_ne_zero (norm_eq_zero.not.2 hx0) (norm_eq_zero.not.2 hy0)\n  have h₁ :\n    abs («expr⟪ , ⟫» x y) = «expr‖ ‖» x * «expr‖ ‖» y ↔ abs («expr⟪ , ⟫» x y / («expr‖ ‖» x * «expr‖ ‖» y)) = 1 :=\n    by\n    rw [← algebra_map.coe_mul, is_R_or_C.abs_div, is_R_or_C.abs_of_nonneg, div_eq_one_iff_eq hxy0]\n    positivity\n  rw [h₁, abs_inner_div_norm_mul_norm_eq_one_iff x y]\n  exact and_iff_right hx0\n#align abs_inner_eq_norm_iff abs_inner_eq_norm_iff\n\n",
 "abs_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The inner product of a nonzero vector with a nonzero multiple of\nitself, divided by the product of their norms, has absolute value\n1. -/\ntheorem abs_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul {x : E} {r : 𝕜} (hx : x ≠ 0) (hr : r ≠ 0) :\n    abs («expr⟪ , ⟫» x («expr • » r x)) / («expr‖ ‖» x * «expr‖ ‖» («expr • » r x)) = 1 :=\n  by\n  have hx' : «expr‖ ‖» x ≠ 0 := by simp [norm_eq_zero, hx]\n  have hr' : abs r ≠ 0 := by simp [is_R_or_C.abs_eq_zero, hr]\n  rw [inner_smul_right, is_R_or_C.abs_mul, ← inner_self_re_abs, inner_self_eq_norm_mul_norm, norm_smul]\n  rw [is_R_or_C.norm_eq_abs, ← mul_assoc, ← div_div, mul_div_cancel _ hx', ← div_div, mul_comm, mul_div_cancel _ hr',\n    div_self hx']\n#align\n  abs_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul abs_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul\n\n",
 "abs_inner_div_norm_mul_norm_eq_one_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟪ , ⟫» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The inner product of two vectors, divided by the product of their\nnorms, has absolute value 1 if and only if they are nonzero and one is\na multiple of the other. One form of equality case for Cauchy-Schwarz. -/\ntheorem abs_inner_div_norm_mul_norm_eq_one_iff (x y : E) :\n    abs («expr⟪ , ⟫» x y / («expr‖ ‖» x * «expr‖ ‖» y)) = 1 ↔ x ≠ 0 ∧ ∃ r : 𝕜, r ≠ 0 ∧ y = «expr • » r x :=\n  by\n  constructor\n  · intro h\n    have hx0 : x ≠ 0 := by\n      intro hx0\n      rw [hx0, inner_zero_left, zero_div] at h\n      norm_num at h\n    refine' and.intro hx0 _\n    set r := «expr⟪ , ⟫» x y / («expr‖ ‖» x * «expr‖ ‖» x) with hr\n    use r\n    set t := y - «expr • » r x with ht\n    have ht0 : «expr⟪ , ⟫» x t = 0 := by\n      rw [ht, inner_sub_right, inner_smul_right, hr]\n      norm_cast\n      rw [← inner_self_eq_norm_mul_norm, inner_self_re_to_K, div_mul_cancel _ fun h => hx0 (inner_self_eq_zero.1 h),\n        sub_self]\n    replace h : «expr‖ ‖» («expr • » r x) / «expr‖ ‖» (t + «expr • » r x) = 1\n    · rw [← sub_add_cancel y («expr • » r x), ← ht, inner_add_right, ht0, zero_add, inner_smul_right, is_R_or_C.abs_div,\n        is_R_or_C.abs_mul, ← inner_self_re_abs, inner_self_eq_norm_mul_norm] at h\n      norm_cast  at h\n      rwa [_root_.abs_mul, abs_norm_eq_norm, abs_norm_eq_norm, ← mul_assoc, mul_comm,\n        mul_div_mul_left _ _ fun h => hx0 (norm_eq_zero.1 h), ← is_R_or_C.norm_eq_abs, ← norm_smul] at h\n    have hr0 : r ≠ 0 := by\n      intro hr0\n      rw [hr0, zero_smul, norm_zero, zero_div] at h\n      norm_num at h\n    refine' and.intro hr0 _\n    have h2 : «expr‖ ‖» («expr • » r x) ^ 2 = «expr‖ ‖» (t + «expr • » r x) ^ 2 := by rw [eq_of_div_eq_one h]\n    replace h2 :\n      «expr⟪ , ⟫» («expr • » r x) («expr • » r x) =\n        «expr⟪ , ⟫» t t + «expr⟪ , ⟫» t («expr • » r x) + «expr⟪ , ⟫» («expr • » r x) t +\n          «expr⟪ , ⟫» («expr • » r x) («expr • » r x)\n    · rw [sq, sq, ← inner_self_eq_norm_mul_norm, ← inner_self_eq_norm_mul_norm] at h2\n      have h2' := congr_arg (fun z : exprℝ => (z : 𝕜)) h2\n      simp_rw [inner_self_re_to_K, inner_add_add_self] at h2'\n      exact h2'\n    conv at h2 in «expr⟪ , ⟫» («expr • » r x) t => rw [inner_smul_left, ht0, mul_zero]\n    symm at h2\n    have h₁ : «expr⟪ , ⟫» t («expr • » r x) = 0 :=\n      by\n      rw [inner_smul_right, ← inner_conj_sym, ht0]\n      simp\n    rw [add_zero, h₁, add_left_eq_self, add_zero, inner_self_eq_zero] at h2\n    rw [h2] at ht\n    exact eq_of_sub_eq_zero ht.symm\n  · intro h\n    rcases h with ⟨hx, ⟨r, ⟨hr, hy⟩⟩⟩\n    rw [hy, is_R_or_C.abs_div]\n    norm_cast\n    rw [_root_.abs_mul, abs_norm_eq_norm, abs_norm_eq_norm]\n    exact abs_inner_div_norm_mul_norm_eq_one_of_ne_zero_of_ne_zero_mul hx hr\n#align abs_inner_div_norm_mul_norm_eq_one_iff abs_inner_div_norm_mul_norm_eq_one_iff\n\n",
 "Inf_orthogonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᗮ» -/\n/-- The inf of a set of orthogonal subspaces equals the subspace orthogonal to the sup. -/\ntheorem submodule.Inf_orthogonal (s : set <| submodule 𝕜 E) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" («expr ᗮ» K) =\n      «expr ᗮ» (supₛ s) :=\n  (submodule.orthogonal_gc 𝕜 E).l_Sup.symm\n#align submodule.Inf_orthogonal submodule.Inf_orthogonal\n\n"}