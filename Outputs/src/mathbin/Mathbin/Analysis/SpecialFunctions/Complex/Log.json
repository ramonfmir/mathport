{"two_pi_I_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem two_pi_I_ne_zero : (2 * real.pi * I : exprℂ) ≠ 0 := by norm_num [real.pi_ne_zero, I_ne_zero]\n#align two_pi_I_ne_zero two_pi_I_ne_zero\n\n",
 "tendsto_log_nhds_within_im_nonneg_of_re_neg_of_im_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tendsto_log_nhds_within_im_nonneg_of_re_neg_of_im_zero {z : exprℂ} (hre : z.re < 0) (him : z.im = 0) :\n    Tendsto log (nhds_within { z : exprℂ | 0 ≤ z.im } z) (nhds <| real.log (abs z) + real.pi * I) := by\n  simpa only [log, arg_eq_pi_iff.2 ⟨hre, him⟩] using (continuous_within_at_log_of_re_neg_of_im_zero hre him).tendsto\n#align tendsto_log_nhds_within_im_nonneg_of_re_neg_of_im_zero tendsto_log_nhds_within_im_nonneg_of_re_neg_of_im_zero\n\n",
 "tendsto_log_nhds_within_im_neg_of_re_neg_of_im_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tendsto_log_nhds_within_im_neg_of_re_neg_of_im_zero {z : exprℂ} (hre : z.re < 0) (him : z.im = 0) :\n    Tendsto log (nhds_within { z : exprℂ | z.im < 0 } z) (nhds <| real.log (abs z) - real.pi * I) :=\n  by\n  have :=\n    (continuous_of_real.continuous_at.comp_continuous_within_at (continuous_abs.continuous_within_at.log _)).tendsto.add\n      (((continuous_of_real.tendsto _).comp <| tendsto_arg_nhds_within_im_neg_of_re_neg_of_im_zero hre him).mul\n        tendsto_const_nhds)\n  convert this\n  · simp [sub_eq_add_neg]\n  · lift z to exprℝ using him\n    simpa using hre.ne\n#align tendsto_log_nhds_within_im_neg_of_re_neg_of_im_zero tendsto_log_nhds_within_im_neg_of_re_neg_of_im_zero\n\n",
 "range_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem range_exp : range exp = «expr ᶜ» {0} :=\n  Set.ext fun x =>\n    ⟨by\n      rintro ⟨x, rfl⟩\n      exact exp_ne_zero x, fun hx => ⟨log x, exp_log hx⟩⟩\n#align range_exp range_exp\n\n",
 "of_real_log":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem of_real_log {x : exprℝ} (hx : 0 ≤ x) : (x.log : exprℂ) = log x :=\n  Complex.ext (by rw [log_re, of_real_re, abs_of_nonneg hx]) (by rw [of_real_im, log_im, arg_of_real_of_nonneg hx])\n#align of_real_log of_real_log\n\n",
 "neg_pi_lt_log_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem neg_pi_lt_log_im (x : exprℂ) : -real.pi < (log x).im := by simp only [log_im, neg_pi_lt_arg]\n#align neg_pi_lt_log_im neg_pi_lt_log_im\n\n",
 "map_exp_comap_re_at_top":
 "@[simp]\ntheorem map_exp_comap_re_at_top : map exp (comap re atTop) = comap abs atTop :=\n  by\n  rw [← comap_exp_comap_abs_at_top, map_comap, range_exp, inf_eq_left, le_principal_iff]\n  exact eventually_ne_of_tendsto_norm_atTop tendsto_comap 0\n#align map_exp_comap_re_at_top map_exp_comap_re_at_top\n\n",
 "map_exp_comap_re_at_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n@[simp]\ntheorem map_exp_comap_re_at_bot : map exp (comap re atBot) = nhds_within.ne 0 := by\n  rw [← comap_exp_nhds_zero, map_comap, range_exp, nhdsWithin]\n#align map_exp_comap_re_at_bot map_exp_comap_re_at_bot\n\n",
 "log_zero":
 "@[simp]\ntheorem log_zero : log 0 = 0 := by simp [log]\n#align log_zero log_zero\n\n",
 "log_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Abhimanyu Pallavi Sudhir, Jean Lo, Calle Sönne, Benjamin Davidson\n-/\ntheorem log_re (x : exprℂ) : x.log.re = x.abs.log := by simp [log]\n#align log_re log_re\n\n",
 "log_one":
 "@[simp]\ntheorem log_one : log 1 = 0 := by simp [log]\n#align log_one log_one\n\n",
 "log_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem log_of_real_re (x : exprℝ) : (log (x : exprℂ)).re = real.log x := by simp [log_re]\n#align log_of_real_re log_of_real_re\n\n",
 "log_of_real_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem log_of_real_mul {r : exprℝ} (hr : 0 < r) {x : exprℂ} (hx : x ≠ 0) : log (r * x) = real.log r + log x :=\n  by\n  replace hx := complex.abs.ne_zero_iff.mpr hx\n  simp_rw [log, map_mul, abs_of_real, arg_real_mul _ hr, abs_of_pos hr, real.log_mul hr.ne' hx, of_real_add, add_assoc]\n#align log_of_real_mul log_of_real_mul\n\n",
 "log_neg_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem log_neg_one : log (-1) = real.pi * I := by simp [log]\n#align log_neg_one log_neg_one\n\n",
 "log_neg_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem log_neg_I : log (-I) = -(real.pi / 2) * I := by simp [log]\n#align log_neg_I log_neg_I\n\n",
 "log_mul_of_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem log_mul_of_real (r : exprℝ) (hr : 0 < r) (x : exprℂ) (hx : x ≠ 0) : log (x * r) = real.log r + log x := by\n  rw [mul_comm, log_of_real_mul hr hx, add_comm]\n#align log_mul_of_real log_mul_of_real\n\n",
 "log_inv_eq_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem log_inv_eq_ite (x : exprℂ) : log x⁻¹ = if x.arg = real.pi then -(star_ring_end) (log x) else -log x :=\n  by\n  by_cases hx : x = 0\n  · simp [hx]\n  rw [inv_def, log_mul_of_real, real.log_inv, of_real_neg, ← sub_eq_neg_add, log_conj_eq_ite]\n  · simp_rw [log, map_add, map_mul, conj_of_real, conj_I, norm_sq_eq_abs, real.log_pow, Nat.cast_two, of_real_mul,\n      of_real_bit0, of_real_one, neg_add, mul_neg, two_mul, neg_neg]\n    split_ifs\n    · rw [add_sub_right_comm, sub_add_cancel']\n    · rw [add_sub_right_comm, sub_add_cancel']\n  · rwa [inv_pos, Complex.normSq_pos]\n  · rwa [map_ne_zero]\n#align log_inv_eq_ite log_inv_eq_ite\n\n",
 "log_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem log_inv (x : exprℂ) (hx : x.arg ≠ real.pi) : log x⁻¹ = -log x := by rw [log_inv_eq_ite, if_neg hx]\n#align log_inv log_inv\n\n",
 "log_im_le_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem log_im_le_pi (x : exprℂ) : (log x).im ≤ real.pi := by simp only [log_im, arg_le_pi]\n#align log_im_le_pi log_im_le_pi\n\n",
 "log_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem log_im (x : exprℂ) : x.log.im = x.arg := by simp [log]\n#align log_im log_im\n\n",
 "log_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem log_exp {x : exprℂ} (hx₁ : -real.pi < x.im) (hx₂ : x.im ≤ real.pi) : log (exp x) = x := by\n  rw [log, abs_exp, real.log_exp, exp_eq_exp_re_mul_sin_add_cos, ← of_real_exp,\n    arg_mul_cos_add_sin_mul_I (Real.exp_pos _) ⟨hx₁, hx₂⟩, re_add_im]\n#align log_exp log_exp\n\n",
 "log_conj_eq_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem log_conj_eq_ite (x : exprℂ) :\n    log ((star_ring_end) x) = if x.arg = real.pi then log x else (star_ring_end) (log x) :=\n  by\n  simp_rw [log, abs_conj, arg_conj, map_add, map_mul, conj_of_real]\n  split_ifs with hx\n  · rw [hx]\n  simp_rw [of_real_neg, conj_I, mul_neg, neg_mul]\n#align log_conj_eq_ite log_conj_eq_ite\n\n",
 "log_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem log_conj (x : exprℂ) (h : x.arg ≠ real.pi) : log ((star_ring_end) x) = (star_ring_end) (log x) := by\n  rw [log_conj_eq_ite, if_neg h]\n#align log_conj log_conj\n\n",
 "log_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem log_I : log I = real.pi / 2 * I := by simp [log]\n#align log_I log_I\n\n",
 "exp_log":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem exp_log {x : exprℂ} (hx : x ≠ 0) : exp (log x) = x := by\n  rw [log, exp_add_mul_I, ← of_real_sin, sin_arg, ← of_real_cos, cos_arg hx, ← of_real_exp, real.exp_log (abs.pos hx),\n    mul_add, of_real_div, of_real_div, mul_div_cancel' _ (of_real_ne_zero.2 <| abs.ne_zero hx), ← mul_assoc,\n    mul_div_cancel' _ (of_real_ne_zero.2 <| abs.ne_zero hx), re_add_im]\n#align exp_log exp_log\n\n",
 "exp_inj_of_neg_pi_lt_of_le_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem exp_inj_of_neg_pi_lt_of_le_pi {x y : exprℂ} (hx₁ : -real.pi < x.im) (hx₂ : x.im ≤ real.pi)\n    (hy₁ : -real.pi < y.im) (hy₂ : y.im ≤ real.pi) (hxy : exp x = exp y) : x = y := by\n  rw [← log_exp hx₁ hx₂, ← log_exp hy₁ hy₂, hxy]\n#align exp_inj_of_neg_pi_lt_of_le_pi exp_inj_of_neg_pi_lt_of_le_pi\n\n",
 "exp_eq_one_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem exp_eq_one_iff {x : exprℂ} : exp x = 1 ↔ ∃ n : ℤ, x = n * (2 * real.pi * I) :=\n  by\n  constructor\n  · intro h\n    rcases existsUnique_add_zsmul_mem_Ioc real.two_pi_pos x.im (-real.pi) with ⟨n, hn, -⟩\n    use -n\n    rw [Int.cast_neg, neg_mul, eq_neg_iff_add_eq_zero]\n    have : (x + n * (2 * real.pi * I)).im ∈ Ioc (-real.pi) (real.pi) := by simpa [two_mul, mul_add] using hn\n    rw [← log_exp this.1 this.2, exp_periodic.int_mul n, h, log_one]\n  · rintro ⟨n, rfl⟩\n    exact (exp_periodic.int_mul n).eq.trans exp_zero\n#align exp_eq_one_iff exp_eq_one_iff\n\n",
 "exp_eq_exp_iff_exp_sub_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem exp_eq_exp_iff_exp_sub_eq_one {x y : exprℂ} : exp x = exp y ↔ exp (x - y) = 1 := by\n  rw [exp_sub, div_eq_one_iff_eq (exp_ne_zero _)]\n#align exp_eq_exp_iff_exp_sub_eq_one exp_eq_exp_iff_exp_sub_eq_one\n\n",
 "exp_eq_exp_iff_exists_int":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem exp_eq_exp_iff_exists_int {x y : exprℂ} : exp x = exp y ↔ ∃ n : ℤ, x = y + n * (2 * real.pi * I) := by\n  simp only [exp_eq_exp_iff_exp_sub_eq_one, exp_eq_one_iff, sub_eq_iff_eq_add']\n#align exp_eq_exp_iff_exists_int exp_eq_exp_iff_exists_int\n\n",
 "countable_preimage_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem countable_preimage_exp {s : Set (exprℂ)} : («expr ⁻¹' » exp s).countable ↔ s.countable :=\n  by\n  refine' ⟨fun hs => _, fun hs => _⟩\n  · refine' ((hs.image exp).insert 0).mono _\n    rw [image_preimage_eq_inter_range, range_exp, ← diff_eq, ← union_singleton, diff_union_self]\n    exact subset_union_left _ _\n  · rw [← bUnion_preimage_singleton]\n    refine' hs.bUnion fun z hz => _\n    rcases em (∃ w, exp w = z) with (⟨w, rfl⟩ | hne)\n    · simp only [preimage, mem_singleton_iff, exp_eq_exp_iff_exists_int, set_of_exists]\n      exact countable_Union fun m => countable_singleton _\n    · push_neg  at hne\n      simp [preimage, hne]\n#align countable_preimage_exp countable_preimage_exp\n\n",
 "continuous_within_at_log_of_re_neg_of_im_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem continuous_within_at_log_of_re_neg_of_im_zero {z : exprℂ} (hre : z.re < 0) (him : z.im = 0) :\n    ContinuousWithinAt log { z : exprℂ | 0 ≤ z.im } z :=\n  by\n  have :=\n    (continuous_of_real.continuous_at.comp_continuous_within_at (continuous_abs.continuous_within_at.log _)).tendsto.add\n      ((continuous_of_real.continuous_at.comp_continuous_within_at <|\n            continuous_within_at_arg_of_re_neg_of_im_zero hre him).mul\n        tendsto_const_nhds)\n  convert this\n  · lift z to exprℝ using him\n    simpa using hre.ne\n#align continuous_within_at_log_of_re_neg_of_im_zero continuous_within_at_log_of_re_neg_of_im_zero\n\n",
 "continuous_at_clog":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem continuous_at_clog {x : exprℂ} (h : 0 < x.re ∨ x.im ≠ 0) : ContinuousAt log x :=\n  by\n  refine' ContinuousAt.add _ _\n  · refine' continuous_of_real.continuous_at.comp _\n    refine' (real.continuous_at_log _).comp complex.continuous_abs.continuous_at\n    rw [complex.abs.ne_zero_iff]\n    rintro rfl\n    simpa using h\n  · have h_cont_mul : Continuous fun x : exprℂ => x * I := continuous_id'.mul continuous_const\n    refine' h_cont_mul.continuous_at.comp (continuous_of_real.continuous_at.comp _)\n    exact continuous_at_arg h\n#align continuous_at_clog continuous_at_clog\n\n",
 "clog":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem continuous.clog {f : α → exprℂ} (h₁ : Continuous f) (h₂ : ∀ x, 0 < (f x).re ∨ (f x).im ≠ 0) :\n    Continuous fun t => log (f t) :=\n  continuous_iff_continuousAt.2 fun x => h₁.continuous_at.clog (h₂ x)\n#align continuous.clog continuous.clog\n\n"}