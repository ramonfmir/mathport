{"tendsto_arg_nhds_within_im_nonneg_of_re_neg_of_im_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tendsto_arg_nhds_within_im_nonneg_of_re_neg_of_im_zero {z : exprℂ} (hre : z.re < 0) (him : z.im = 0) :\n    Tendsto arg (nhds_within { z : exprℂ | 0 ≤ z.im } z) ((nhds) (real.pi)) := by\n  simpa only [arg_eq_pi_iff.2 ⟨hre, him⟩] using (continuous_within_at_arg_of_re_neg_of_im_zero hre him).tendsto\n#align tendsto_arg_nhds_within_im_nonneg_of_re_neg_of_im_zero tendsto_arg_nhds_within_im_nonneg_of_re_neg_of_im_zero\n\n",
 "tendsto_arg_nhds_within_im_neg_of_re_neg_of_im_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tendsto_arg_nhds_within_im_neg_of_re_neg_of_im_zero {z : exprℂ} (hre : z.re < 0) (him : z.im = 0) :\n    Tendsto arg (nhds_within { z : exprℂ | z.im < 0 } z) ((nhds) (-real.pi)) :=\n  by\n  suffices H :\n    tendsto (fun x : exprℂ => real.arcsin ((-x).im / x.abs) - real.pi) (nhds_within { z : exprℂ | z.im < 0 } z)\n      ((nhds) (-real.pi))\n  · refine' H.congr' _\n    have :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) z)\n        (x.re < 0) :=\n      continuous_re.tendsto z (gt_mem_nhds hre)\n    filter_upwards [self_mem_nhdsWithin, mem_nhdsWithin_of_mem_nhds this]with _ him hre\n    rw [arg, if_neg hre.not_le, if_neg him.not_le]\n  convert(real.continuous_at_arcsin.comp_continuous_within_at\n          ((continuous_im.continuous_at.comp_continuous_within_at continuousWithinAt_neg).div\n            continuous_abs.continuous_within_at _)).sub\n      tendsto_const_nhds\n  · simp [him]\n  · lift z to exprℝ using him\n    simpa using hre.ne\n#align tendsto_arg_nhds_within_im_neg_of_re_neg_of_im_zero tendsto_arg_nhds_within_im_neg_of_re_neg_of_im_zero\n\n",
 "tan_arg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem tan_arg (x : exprℂ) : Real.tan (arg x) = x.im / x.re :=\n  by\n  by_cases h : x = 0\n  · simp only [h, zero_div, Complex.zero_im, complex.arg_zero, Real.tan_zero, Complex.zero_re]\n  rw [Real.tan_eq_sin_div_cos, sin_arg, cos_arg h, div_div_div_cancel_right _ (abs.ne_zero h)]\n#align tan_arg tan_arg\n\n",
 "sin_arg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Abhimanyu Pallavi Sudhir, Jean Lo, Calle Sönne, Benjamin Davidson\n-/\ntheorem sin_arg (x : exprℂ) : Real.sin (arg x) = x.im / x.abs := by\n  unfold arg <;> split_ifs <;>\n    simp [sub_eq_add_neg, arg,\n      real.sin_arcsin (abs_le.1 (abs_im_div_abs_le_one x)).1 (abs_le.1 (abs_im_div_abs_le_one x)).2, Real.sin_add,\n      neg_div, real.arcsin_neg, Real.sin_neg]\n#align sin_arg sin_arg\n\n",
 "range_exp_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem range_exp_mul_I : (range fun x : exprℝ => exp (x * I)) = Metric.sphere 0 1 :=\n  by\n  ext x\n  simp only [mem_sphere_zero_iff_norm, norm_eq_abs, abs_eq_one_iff, mem_range]\n#align range_exp_mul_I range_exp_mul_I\n\n",
 "range_arg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n@[simp]\ntheorem range_arg : range arg = Ioc (-real.pi) (real.pi) :=\n  (range_subset_iff.2 arg_mem_Ioc).antisymm fun x hx => ⟨_, arg_cos_add_sin_mul_I hx⟩\n#align range_arg range_arg\n\n",
 "neg_pi_lt_arg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem neg_pi_lt_arg (x : exprℂ) : -real.pi < arg x :=\n  (arg_mem_Ioc x).1\n#align neg_pi_lt_arg neg_pi_lt_arg\n\n",
 "neg_pi_div_two_le_arg_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem neg_pi_div_two_le_arg_iff {z : exprℂ} : -(real.pi / 2) ≤ arg z ↔ 0 ≤ re z ∨ 0 ≤ im z :=\n  by\n  cases' le_or_lt 0 (re z) with hre hre\n  · simp only [hre, arg_of_re_nonneg hre, real.neg_pi_div_two_le_arcsin, true_or_iff]\n  simp only [hre.not_le, false_or_iff]\n  cases' le_or_lt 0 (im z) with him him\n  · simp only [him]\n    rw [iff_true_iff, arg_of_re_neg_of_im_nonneg hre him]\n    exact (real.neg_pi_div_two_le_arcsin _).trans (le_add_of_nonneg_right real.pi_pos.le)\n  · simp only [him.not_le]\n    rw [iff_false_iff, not_le, arg_of_re_neg_of_im_neg hre him, sub_lt_iff_lt_add', ← sub_eq_add_neg, sub_half,\n      real.arcsin_lt_pi_div_two, div_lt_one, neg_im, ← abs_of_neg him, abs_im_lt_abs]\n    exacts[hre.ne, abs.pos <| ne_of_apply_ne re hre.ne]\n#align neg_pi_div_two_le_arg_iff neg_pi_div_two_le_arg_iff\n\n",
 "ext_abs_arg_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem ext_abs_arg_iff {x y : exprℂ} : x = y ↔ abs x = abs y ∧ arg x = arg y :=\n  ⟨fun h => h ▸ ⟨rfl, rfl⟩, and_imp.2 ext_abs_arg⟩\n#align ext_abs_arg_iff ext_abs_arg_iff\n\n",
 "ext_abs_arg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem ext_abs_arg {x y : exprℂ} (h₁ : x.abs = y.abs) (h₂ : x.arg = y.arg) : x = y := by\n  rw [← abs_mul_exp_arg_mul_I x, ← abs_mul_exp_arg_mul_I y, h₁, h₂]\n#align ext_abs_arg ext_abs_arg\n\n",
 "cos_arg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem cos_arg {x : exprℂ} (hx : x ≠ 0) : Real.cos (arg x) = x.re / x.abs :=\n  by\n  have habs : 0 < abs x := abs.pos hx\n  have him : |im x / abs x| ≤ 1 := by\n    rw [_root_.abs_div, abs_abs]\n    exact div_le_one_of_le x.abs_im_le_abs (abs.nonneg x)\n  rw [abs_le] at him\n  rw [arg]\n  split_ifs with h₁ h₂ h₂\n  · rw [real.cos_arcsin]\n    field_simp [Real.sqrt_sq, habs.le, *]\n  · rw [real.cos_add_pi, real.cos_arcsin]\n    field_simp [Real.sqrt_div (sq_nonneg _), Real.sqrt_sq_eq_abs, _root_.abs_of_neg (not_le.1 h₁), *]\n  · rw [real.cos_sub_pi, real.cos_arcsin]\n    field_simp [Real.sqrt_div (sq_nonneg _), Real.sqrt_sq_eq_abs, _root_.abs_of_neg (not_le.1 h₁), *]\n#align cos_arg cos_arg\n\n",
 "continuous_within_at_arg_of_re_neg_of_im_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem continuous_within_at_arg_of_re_neg_of_im_zero {z : exprℂ} (hre : z.re < 0) (him : z.im = 0) :\n    ContinuousWithinAt arg { z : exprℂ | 0 ≤ z.im } z :=\n  by\n  have : «expr =ᶠ[ ] » arg (nhds_within { z : exprℂ | 0 ≤ z.im } z) fun x => real.arcsin ((-x).im / x.abs) + real.pi :=\n    by\n    have :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) z)\n        (x.re < 0) :=\n      continuous_re.tendsto z (gt_mem_nhds hre)\n    filter_upwards [self_mem_nhdsWithin, mem_nhdsWithin_of_mem_nhds this]with _ him hre\n    rw [arg, if_neg hre.not_le, if_pos him]\n  refine' ContinuousWithinAt.congr_of_eventuallyEq _ this _\n  · refine'\n      (real.continuous_at_arcsin.comp_continuous_within_at\n            ((continuous_im.continuous_at.comp_continuous_within_at continuousWithinAt_neg).div\n              continuous_abs.continuous_within_at _)).add\n        tendsto_const_nhds\n    lift z to exprℝ using him\n    simpa using hre.ne\n  · rw [arg, if_neg hre.not_le, if_pos him.ge]\n#align continuous_within_at_arg_of_re_neg_of_im_zero continuous_within_at_arg_of_re_neg_of_im_zero\n\n",
 "continuous_at_arg_coe_angle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem continuous_at_arg_coe_angle (h : x ≠ 0) : ContinuousAt (coe ∘ arg : exprℂ → real.angle) x :=\n  by\n  by_cases hs : 0 < x.re ∨ x.im ≠ 0\n  · exact real.angle.continuous_coe.continuous_at.comp (continuous_at_arg hs)\n  · rw [← function.comp.right_id (coe ∘ arg),\n      (Function.funext_iff.2 fun _ => (neg_neg _).symm : (id : exprℂ → exprℂ) = has_neg.neg ∘ has_neg.neg), ←\n      function.comp.assoc]\n    refine' ContinuousAt.comp _ continuous_neg.continuous_at\n    suffices ContinuousAt (Function.update ((coe ∘ arg) ∘ has_neg.neg : exprℂ → real.angle) 0 (real.pi)) (-x) by\n      rwa [continuousAt_update_of_ne (neg_ne_zero.2 h)] at this\n    have ha :\n      Function.update ((coe ∘ arg) ∘ has_neg.neg : exprℂ → real.angle) 0 (real.pi) = fun z =>\n        (arg z : real.angle) + real.pi :=\n      by\n      rw [Function.update_eq_iff]\n      exact ⟨by simp, fun z hz => arg_neg_coe_angle hz⟩\n    rw [ha]\n    push_neg  at hs\n    refine' (real.angle.continuous_coe.continuous_at.comp (continuous_at_arg (or.inl _))).add continuousAt_const\n    rw [neg_re, neg_pos]\n    exact hs.1.lt_of_ne fun h0 => h (ext_iff.2 ⟨h0, hs.2⟩)\n#align continuous_at_arg_coe_angle continuous_at_arg_coe_angle\n\n",
 "continuous_at_arg":
 "theorem continuous_at_arg (h : 0 < x.re ∨ x.im ≠ 0) : ContinuousAt arg x :=\n  by\n  have h₀ : abs x ≠ 0 := by\n    rw [abs.ne_zero_iff]\n    rintro rfl\n    simpa using h\n  rw [← lt_or_lt_iff_ne] at h\n  rcases h with (hx_re | hx_im | hx_im)\n  exacts[(real.continuous_at_arcsin.comp (continuous_im.continuous_at.div continuous_abs.continuous_at h₀)).congr\n      (arg_eq_nhds_of_re_pos hx_re).symm,\n    (real.continuous_arccos.continuous_at.comp\n            (continuous_re.continuous_at.div continuous_abs.continuous_at h₀)).neg.congr\n      (arg_eq_nhds_of_im_neg hx_im).symm,\n    (real.continuous_arccos.continuous_at.comp (continuous_re.continuous_at.div continuous_abs.continuous_at h₀)).congr\n      (arg_eq_nhds_of_im_pos hx_im).symm]\n#align continuous_at_arg continuous_at_arg\n\n",
 "arg_zero":
 "@[simp]\ntheorem arg_zero : arg 0 = 0 := by simp [arg, le_refl]\n#align arg_zero arg_zero\n\n",
 "arg_real_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem arg_real_mul (x : exprℂ) {r : exprℝ} (hr : 0 < r) : arg (r * x) = arg x :=\n  by\n  rcases eq_or_ne x 0 with (rfl | hx); · rw [MulZeroClass.mul_zero]\n  conv_lhs =>\n    rw [← abs_mul_cos_add_sin_mul_I x, ← mul_assoc, ← of_real_mul,\n      arg_mul_cos_add_sin_mul_I (mul_pos hr (abs.pos hx)) x.arg_mem_Ioc]\n#align arg_real_mul arg_real_mul\n\n",
 "arg_one":
 "@[simp]\ntheorem arg_one : arg 1 = 0 := by simp [arg, zero_le_one]\n#align arg_one arg_one\n\n",
 "arg_of_real_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem arg_of_real_of_nonneg {x : exprℝ} (hx : 0 ≤ x) : arg x = 0 := by simp [arg, hx]\n#align arg_of_real_of_nonneg arg_of_real_of_nonneg\n\n",
 "arg_of_real_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_of_real_of_neg {x : exprℝ} (hx : x < 0) : arg x = real.pi :=\n  arg_eq_pi_iff.2 ⟨hx, rfl⟩\n#align arg_of_real_of_neg arg_of_real_of_neg\n\n",
 "arg_of_re_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem arg_of_re_nonneg {x : exprℂ} (hx : 0 ≤ x.re) : arg x = real.arcsin (x.im / x.abs) :=\n  if_pos hx\n#align arg_of_re_nonneg arg_of_re_nonneg\n\n",
 "arg_of_re_neg_of_im_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_of_re_neg_of_im_nonneg {x : exprℂ} (hx_re : x.re < 0) (hx_im : 0 ≤ x.im) :\n    arg x = real.arcsin ((-x).im / x.abs) + real.pi := by simp only [arg, hx_re.not_le, hx_im, if_true, if_false]\n#align arg_of_re_neg_of_im_nonneg arg_of_re_neg_of_im_nonneg\n\n",
 "arg_of_re_neg_of_im_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_of_re_neg_of_im_neg {x : exprℂ} (hx_re : x.re < 0) (hx_im : x.im < 0) :\n    arg x = real.arcsin ((-x).im / x.abs) - real.pi := by simp only [arg, hx_re.not_le, hx_im.not_le, if_false]\n#align arg_of_re_neg_of_im_neg arg_of_re_neg_of_im_neg\n\n",
 "arg_of_im_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem arg_of_im_pos {z : exprℂ} (hz : 0 < z.im) : arg z = real.arccos (z.re / abs z) :=\n  arg_of_im_nonneg_of_ne_zero hz.le fun h => hz.ne' <| h.symm ▸ rfl\n#align arg_of_im_pos arg_of_im_pos\n\n",
 "arg_of_im_nonneg_of_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem arg_of_im_nonneg_of_ne_zero {z : exprℂ} (h₁ : 0 ≤ z.im) (h₂ : z ≠ 0) : arg z = real.arccos (z.re / abs z) := by\n  rw [← cos_arg h₂, real.arccos_cos (arg_nonneg_iff.2 h₁) (arg_le_pi _)]\n#align arg_of_im_nonneg_of_ne_zero arg_of_im_nonneg_of_ne_zero\n\n",
 "arg_of_im_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem arg_of_im_neg {z : exprℂ} (hz : z.im < 0) : arg z = -real.arccos (z.re / abs z) :=\n  by\n  have h₀ : z ≠ 0 := mt (congr_arg im) hz.ne\n  rw [← cos_arg h₀, ← Real.cos_neg, real.arccos_cos, neg_neg]\n  exacts[neg_nonneg.2 (arg_neg_iff.2 hz).le, neg_le.2 (neg_pi_lt_arg z).le]\n#align arg_of_im_neg arg_of_im_neg\n\n",
 "arg_nonneg_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem arg_nonneg_iff {z : exprℂ} : 0 ≤ arg z ↔ 0 ≤ z.im :=\n  by\n  rcases eq_or_ne z 0 with (rfl | h₀); · simp\n  calc\n    0 ≤ arg z ↔ 0 ≤ Real.sin (arg z) :=\n      ⟨fun h => real.sin_nonneg_of_mem_Icc ⟨h, arg_le_pi z⟩,\n        by\n        contrapose!\n        intro h\n        exact real.sin_neg_of_neg_of_neg_pi_lt h (neg_pi_lt_arg _)⟩\n    _ ↔ _ := by rw [sin_arg, le_div_iff (abs.pos h₀), MulZeroClass.zero_mul]\n    \n#align arg_nonneg_iff arg_nonneg_iff\n\n",
 "arg_neg_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n@[simp]\ntheorem arg_neg_one : arg (-1) = real.pi := by simp [arg, le_refl, not_le.2 (zero_lt_one' (exprℝ))]\n#align arg_neg_one arg_neg_one\n\n",
 "arg_neg_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem arg_neg_iff {z : exprℂ} : arg z < 0 ↔ z.im < 0 :=\n  lt_iff_lt_of_le_iff_le arg_nonneg_iff\n#align arg_neg_iff arg_neg_iff\n\n",
 "arg_neg_eq_arg_sub_pi_of_im_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_neg_eq_arg_sub_pi_of_im_pos {x : exprℂ} (hi : 0 < x.im) : arg (-x) = arg x - real.pi :=\n  by\n  rw [arg_of_im_pos hi, arg_of_im_neg (show (-x).im < 0 from Left.neg_neg_iff.2 hi)]\n  simp [neg_div, real.arccos_neg]\n#align arg_neg_eq_arg_sub_pi_of_im_pos arg_neg_eq_arg_sub_pi_of_im_pos\n\n",
 "arg_neg_eq_arg_sub_pi_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_neg_eq_arg_sub_pi_iff {x : exprℂ} : arg (-x) = arg x - real.pi ↔ 0 < x.im ∨ x.im = 0 ∧ x.re < 0 :=\n  by\n  rcases lt_trichotomy x.im 0 with (hi | hi | hi)\n  ·\n    simp [hi, hi.ne, hi.not_lt, arg_neg_eq_arg_add_pi_of_im_neg, sub_eq_add_neg, ← add_eq_zero_iff_eq_neg,\n      real.pi_ne_zero]\n  · rw [(ext rfl hi : x = x.re)]\n    rcases lt_trichotomy x.re 0 with (hr | hr | hr)\n    · rw [arg_of_real_of_neg hr, ← of_real_neg, arg_of_real_of_nonneg (Left.neg_pos_iff.2 hr).le]\n      simp [hr]\n    · simp [hr, hi, real.pi_ne_zero]\n    · rw [arg_of_real_of_nonneg hr.le, ← of_real_neg, arg_of_real_of_neg (Left.neg_neg_iff.2 hr)]\n      simp [hr.not_lt, ← add_eq_zero_iff_eq_neg, real.pi_ne_zero]\n  · simp [hi, arg_neg_eq_arg_sub_pi_of_im_pos]\n#align arg_neg_eq_arg_sub_pi_iff arg_neg_eq_arg_sub_pi_iff\n\n",
 "arg_neg_eq_arg_add_pi_of_im_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_neg_eq_arg_add_pi_of_im_neg {x : exprℂ} (hi : x.im < 0) : arg (-x) = arg x + real.pi :=\n  by\n  rw [arg_of_im_neg hi, arg_of_im_pos (show 0 < (-x).im from Left.neg_pos_iff.2 hi)]\n  simp [neg_div, real.arccos_neg, add_comm, ← sub_eq_add_neg]\n#align arg_neg_eq_arg_add_pi_of_im_neg arg_neg_eq_arg_add_pi_of_im_neg\n\n",
 "arg_neg_eq_arg_add_pi_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_neg_eq_arg_add_pi_iff {x : exprℂ} : arg (-x) = arg x + real.pi ↔ x.im < 0 ∨ x.im = 0 ∧ 0 < x.re :=\n  by\n  rcases lt_trichotomy x.im 0 with (hi | hi | hi)\n  · simp [hi, arg_neg_eq_arg_add_pi_of_im_neg]\n  · rw [(ext rfl hi : x = x.re)]\n    rcases lt_trichotomy x.re 0 with (hr | hr | hr)\n    · rw [arg_of_real_of_neg hr, ← of_real_neg, arg_of_real_of_nonneg (Left.neg_pos_iff.2 hr).le]\n      simp [hr.not_lt, ← two_mul, real.pi_ne_zero]\n    · simp [hr, hi, real.pi_ne_zero.symm]\n    · rw [arg_of_real_of_nonneg hr.le, ← of_real_neg, arg_of_real_of_neg (Left.neg_neg_iff.2 hr)]\n      simp [hr]\n  ·\n    simp [hi, hi.ne.symm, hi.not_lt, arg_neg_eq_arg_sub_pi_of_im_pos, sub_eq_add_neg, ← add_eq_zero_iff_neg_eq,\n      real.pi_ne_zero]\n#align arg_neg_eq_arg_add_pi_iff arg_neg_eq_arg_add_pi_iff\n\n",
 "arg_neg_coe_angle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_neg_coe_angle {x : exprℂ} (hx : x ≠ 0) : (arg (-x) : real.angle) = arg x + real.pi :=\n  by\n  rcases lt_trichotomy x.im 0 with (hi | hi | hi)\n  · rw [arg_neg_eq_arg_add_pi_of_im_neg hi, real.angle.coe_add]\n  · rw [(ext rfl hi : x = x.re)]\n    rcases lt_trichotomy x.re 0 with (hr | hr | hr)\n    ·\n      rw [arg_of_real_of_neg hr, ← of_real_neg, arg_of_real_of_nonneg (Left.neg_pos_iff.2 hr).le, ← real.angle.coe_add,\n        ← two_mul, real.angle.coe_two_pi, real.angle.coe_zero]\n    · exact false.elim (hx (ext hr hi))\n    ·\n      rw [arg_of_real_of_nonneg hr.le, ← of_real_neg, arg_of_real_of_neg (Left.neg_neg_iff.2 hr), real.angle.coe_zero,\n        zero_add]\n  · rw [arg_neg_eq_arg_sub_pi_of_im_pos hi, real.angle.coe_sub, real.angle.sub_coe_pi_eq_add_coe_pi]\n#align arg_neg_coe_angle arg_neg_coe_angle\n\n",
 "arg_neg_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n@[simp]\ntheorem arg_neg_I : arg (-I) = -(real.pi / 2) := by simp [arg, le_refl]\n#align arg_neg_I arg_neg_I\n\n",
 "arg_mul_cos_add_sin_mul_I_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌊ ⌋» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_mul_cos_add_sin_mul_I_sub {r : exprℝ} (hr : 0 < r) (θ : exprℝ) :\n    arg (r * (cos θ + sin θ * I)) - θ = 2 * real.pi * «expr⌊ ⌋» ((real.pi - θ) / (2 * real.pi)) :=\n  by\n  rw [arg_mul_cos_add_sin_mul_I_eq_to_Ioc_mod hr, to_Ioc_mod_sub_self, to_Ioc_div_eq_neg_floor, zsmul_eq_mul]\n  ring_nf\n#align arg_mul_cos_add_sin_mul_I_sub arg_mul_cos_add_sin_mul_I_sub\n\n",
 "arg_mul_cos_add_sin_mul_I_eq_to_Ioc_mod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_mul_cos_add_sin_mul_I_eq_to_Ioc_mod {r : exprℝ} (hr : 0 < r) (θ : exprℝ) :\n    arg (r * (cos θ + sin θ * I)) = to_Ioc_mod real.two_pi_pos (-real.pi) θ :=\n  by\n  have hi : to_Ioc_mod real.two_pi_pos (-real.pi) θ ∈ Ioc (-real.pi) (real.pi) :=\n    by\n    convert to_Ioc_mod_mem_Ioc _ _ _\n    ring\n  convert arg_mul_cos_add_sin_mul_I hr hi using 3\n  simp [to_Ioc_mod, cos_sub_int_mul_two_pi, sin_sub_int_mul_two_pi]\n#align arg_mul_cos_add_sin_mul_I_eq_to_Ioc_mod arg_mul_cos_add_sin_mul_I_eq_to_Ioc_mod\n\n",
 "arg_mul_cos_add_sin_mul_I_coe_angle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌊ ⌋» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem arg_mul_cos_add_sin_mul_I_coe_angle {r : exprℝ} (hr : 0 < r) (θ : real.angle) :\n    (arg (r * (real.angle.cos θ + real.angle.sin θ * I)) : real.angle) = θ :=\n  by\n  induction θ using real.angle.induction_on\n  rw [real.angle.cos_coe, real.angle.sin_coe, real.angle.angle_eq_iff_two_pi_dvd_sub]\n  use «expr⌊ ⌋» ((real.pi - θ) / (2 * real.pi))\n  exact_mod_cast arg_mul_cos_add_sin_mul_I_sub hr θ\n#align arg_mul_cos_add_sin_mul_I_coe_angle arg_mul_cos_add_sin_mul_I_coe_angle\n\n",
 "arg_mul_cos_add_sin_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_mul_cos_add_sin_mul_I {r : exprℝ} (hr : 0 < r) {θ : exprℝ} (hθ : θ ∈ Ioc (-real.pi) (real.pi)) :\n    arg (r * (cos θ + sin θ * I)) = θ :=\n  by\n  simp only [arg, map_mul, abs_cos_add_sin_mul_I, abs_of_nonneg hr.le, mul_one]\n  simp only [of_real_mul_re, of_real_mul_im, neg_im, ← of_real_cos, ← of_real_sin, ← mk_eq_add_mul_I, neg_div,\n    mul_div_cancel_left _ hr.ne', mul_nonneg_iff_right_nonneg_of_pos hr]\n  by_cases h₁ : θ ∈ Icc (-(real.pi / 2)) (real.pi / 2)\n  · rw [if_pos]\n    exacts[real.arcsin_sin' h₁, real.cos_nonneg_of_mem_Icc h₁]\n  · rw [mem_Icc, not_and_or, not_le, not_le] at h₁\n    cases h₁\n    · replace hθ := hθ.1\n      have hcos : Real.cos θ < 0 := by\n        rw [← neg_pos, ← real.cos_add_pi]\n        refine' real.cos_pos_of_mem_Ioo ⟨_, _⟩ <;> linarith\n      have hsin : Real.sin θ < 0 := real.sin_neg_of_neg_of_neg_pi_lt (by linarith) hθ\n      rw [if_neg, if_neg, ← real.sin_add_pi, real.arcsin_sin, add_sub_cancel] <;> [linarith, linarith,\n        exact hsin.not_le, exact hcos.not_le]\n    · replace hθ := hθ.2\n      have hcos : Real.cos θ < 0 := real.cos_neg_of_pi_div_two_lt_of_lt h₁ (by linarith)\n      have hsin : 0 ≤ Real.sin θ := real.sin_nonneg_of_mem_Icc ⟨by linarith, hθ⟩\n      rw [if_neg, if_pos, ← real.sin_sub_pi, real.arcsin_sin, sub_add_cancel] <;> [linarith, linarith, exact hsin,\n        exact hcos.not_le]\n#align arg_mul_cos_add_sin_mul_I arg_mul_cos_add_sin_mul_I\n\n",
 "arg_mul_coe_angle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem arg_mul_coe_angle {x y : exprℂ} (hx : x ≠ 0) (hy : y ≠ 0) : (arg (x * y) : real.angle) = arg x + arg y :=\n  by\n  convert arg_mul_cos_add_sin_mul_I_coe_angle (mul_pos (abs.pos hx) (abs.pos hy)) (arg x + arg y : real.angle) using 3\n  simp_rw [← real.angle.coe_add, real.angle.sin_coe, real.angle.cos_coe, of_real_cos, of_real_sin, cos_add_sin_I,\n    of_real_add, add_mul, exp_add, of_real_mul]\n  rw [mul_assoc, mul_comm (exp _), ← mul_assoc (abs y : exprℂ), abs_mul_exp_arg_mul_I, mul_comm y, ← mul_assoc,\n    abs_mul_exp_arg_mul_I]\n#align arg_mul_coe_angle arg_mul_coe_angle\n\n",
 "arg_mem_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_mem_Ioc (z : exprℂ) : arg z ∈ Ioc (-real.pi) (real.pi) :=\n  by\n  have hπ : 0 < real.pi := real.pi_pos\n  rcases eq_or_ne z 0 with (rfl | hz); simp [hπ, hπ.le]\n  rcases existsUnique_add_zsmul_mem_Ioc real.two_pi_pos (arg z) (-real.pi) with ⟨N, hN, -⟩\n  rw [two_mul, neg_add_cancel_left, ← two_mul, zsmul_eq_mul] at hN\n  rw [← abs_mul_cos_add_sin_mul_I z, ← cos_add_int_mul_two_pi _ N, ← sin_add_int_mul_two_pi _ N]\n  simp only [← of_real_one, ← of_real_bit0, ← of_real_mul, ← of_real_add, ← of_real_int_cast]\n  rwa [arg_mul_cos_add_sin_mul_I (abs.pos hz) hN]\n#align arg_mem_Ioc arg_mem_Ioc\n\n",
 "arg_lt_pi_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_lt_pi_iff {z : exprℂ} : arg z < real.pi ↔ 0 ≤ z.re ∨ z.im ≠ 0 := by\n  rw [(arg_le_pi z).lt_iff_ne, not_iff_comm, not_or, not_le, Classical.not_not, arg_eq_pi_iff]\n#align arg_lt_pi_iff arg_lt_pi_iff\n\n",
 "arg_le_pi_div_two_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_le_pi_div_two_iff {z : exprℂ} : arg z ≤ real.pi / 2 ↔ 0 ≤ re z ∨ im z < 0 :=\n  by\n  cases' le_or_lt 0 (re z) with hre hre\n  · simp only [hre, arg_of_re_nonneg hre, real.arcsin_le_pi_div_two, true_or_iff]\n  simp only [hre.not_le, false_or_iff]\n  cases' le_or_lt 0 (im z) with him him\n  · simp only [him.not_lt]\n    rw [iff_false_iff, not_le, arg_of_re_neg_of_im_nonneg hre him, ← sub_lt_iff_lt_add, half_sub,\n      real.neg_pi_div_two_lt_arcsin, neg_im, neg_div, neg_lt_neg_iff, div_lt_one, ← _root_.abs_of_nonneg him,\n      abs_im_lt_abs]\n    exacts[hre.ne, abs.pos <| ne_of_apply_ne re hre.ne]\n  · simp only [him]\n    rw [iff_true_iff, arg_of_re_neg_of_im_neg hre him]\n    exact (sub_le_self _ real.pi_pos.le).trans (real.arcsin_le_pi_div_two _)\n#align arg_le_pi_div_two_iff arg_le_pi_div_two_iff\n\n",
 "arg_le_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_le_pi (x : exprℂ) : arg x ≤ real.pi :=\n  (arg_mem_Ioc x).2\n#align arg_le_pi arg_le_pi\n\n",
 "arg_inv_coe_angle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem arg_inv_coe_angle (x : exprℂ) : (arg x⁻¹ : real.angle) = -arg x := by\n  by_cases h : arg x = real.pi <;> simp [arg_inv, h]\n#align arg_inv_coe_angle arg_inv_coe_angle\n\n",
 "arg_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_inv (x : exprℂ) : arg x⁻¹ = if arg x = real.pi then real.pi else -arg x :=\n  by\n  rw [← arg_conj, inv_def, mul_comm]\n  by_cases hx : x = 0\n  · simp [hx]\n  · exact arg_real_mul ((star_ring_end) x) (by simp [hx])\n#align arg_inv arg_inv\n\n",
 "arg_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem arg_eq_zero_iff {z : exprℂ} : arg z = 0 ↔ 0 ≤ z.re ∧ z.im = 0 :=\n  by\n  refine' ⟨fun h => _, _⟩\n  · rw [← abs_mul_cos_add_sin_mul_I z, h]\n    simp [abs.nonneg]\n  · cases' z with x y\n    rintro ⟨h, rfl : y = 0⟩\n    exact arg_of_real_of_nonneg h\n#align arg_eq_zero_iff arg_eq_zero_iff\n\n",
 "arg_eq_pi_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_eq_pi_iff {z : exprℂ} : arg z = real.pi ↔ z.re < 0 ∧ z.im = 0 :=\n  by\n  by_cases h₀ : z = 0; · simp [h₀, lt_irrefl, real.pi_ne_zero.symm]\n  constructor\n  · intro h\n    rw [← abs_mul_cos_add_sin_mul_I z, h]\n    simp [h₀]\n  · cases' z with x y\n    rintro ⟨h : x < 0, rfl : y = 0⟩\n    rw [← arg_neg_one, ← arg_real_mul (-1) (neg_pos.2 h)]\n    simp [← of_real_def]\n#align arg_eq_pi_iff arg_eq_pi_iff\n\n",
 "arg_eq_pi_div_two_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_eq_pi_div_two_iff {z : exprℂ} : arg z = real.pi / 2 ↔ z.re = 0 ∧ 0 < z.im :=\n  by\n  by_cases h₀ : z = 0; · simp [h₀, lt_irrefl, real.pi_div_two_pos.ne]\n  constructor\n  · intro h\n    rw [← abs_mul_cos_add_sin_mul_I z, h]\n    simp [h₀]\n  · cases' z with x y\n    rintro ⟨rfl : x = 0, hy : 0 < y⟩\n    rw [← arg_I, ← arg_real_mul I hy, of_real_mul', I_re, I_im, MulZeroClass.mul_zero, mul_one]\n#align arg_eq_pi_div_two_iff arg_eq_pi_div_two_iff\n\n",
 "arg_eq_nhds_of_re_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem arg_eq_nhds_of_re_pos (hx : 0 < x.re) : «expr =ᶠ[ ] » arg ((nhds) x) fun x => real.arcsin (x.im / x.abs) :=\n  ((continuous_re.tendsto _).eventually (lt_mem_nhds hx)).mono fun y hy => arg_of_re_nonneg hy.le\n#align arg_eq_nhds_of_re_pos arg_eq_nhds_of_re_pos\n\n",
 "arg_eq_nhds_of_re_neg_of_im_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_eq_nhds_of_re_neg_of_im_pos (hx_re : x.re < 0) (hx_im : 0 < x.im) :\n    «expr =ᶠ[ ] » arg ((nhds) x) fun x => real.arcsin ((-x).im / x.abs) + real.pi :=\n  by\n  suffices h_forall_nhds :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) x)\n      (y.re < 0 ∧ 0 < y.im)\n  exact h_forall_nhds.mono fun y hy => arg_of_re_neg_of_im_nonneg hy.1 hy.2.le\n  refine' IsOpen.eventually_mem _ (⟨hx_re, hx_im⟩ : x.re < 0 ∧ 0 < x.im)\n  exact IsOpen.and (isOpen_lt continuous_re continuous_zero) (isOpen_lt continuous_zero continuous_im)\n#align arg_eq_nhds_of_re_neg_of_im_pos arg_eq_nhds_of_re_neg_of_im_pos\n\n",
 "arg_eq_nhds_of_re_neg_of_im_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_eq_nhds_of_re_neg_of_im_neg (hx_re : x.re < 0) (hx_im : x.im < 0) :\n    «expr =ᶠ[ ] » arg ((nhds) x) fun x => real.arcsin ((-x).im / x.abs) - real.pi :=\n  by\n  suffices h_forall_nhds :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) x)\n      (y.re < 0 ∧ y.im < 0)\n  exact h_forall_nhds.mono fun y hy => arg_of_re_neg_of_im_neg hy.1 hy.2\n  refine' IsOpen.eventually_mem _ (⟨hx_re, hx_im⟩ : x.re < 0 ∧ x.im < 0)\n  exact IsOpen.and (isOpen_lt continuous_re continuous_zero) (isOpen_lt continuous_im continuous_zero)\n#align arg_eq_nhds_of_re_neg_of_im_neg arg_eq_nhds_of_re_neg_of_im_neg\n\n",
 "arg_eq_nhds_of_im_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem arg_eq_nhds_of_im_pos (hz : 0 < im z) : «expr =ᶠ[ ] » arg ((nhds) z) fun x => real.arccos (x.re / abs x) :=\n  ((continuous_im.tendsto _).eventually (lt_mem_nhds hz)).mono fun x => arg_of_im_pos\n#align arg_eq_nhds_of_im_pos arg_eq_nhds_of_im_pos\n\n",
 "arg_eq_nhds_of_im_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem arg_eq_nhds_of_im_neg (hz : im z < 0) : «expr =ᶠ[ ] » arg ((nhds) z) fun x => -real.arccos (x.re / abs x) :=\n  ((continuous_im.tendsto _).eventually (gt_mem_nhds hz)).mono fun x => arg_of_im_neg\n#align arg_eq_nhds_of_im_neg arg_eq_nhds_of_im_neg\n\n",
 "arg_eq_neg_pi_div_two_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_eq_neg_pi_div_two_iff {z : exprℂ} : arg z = -(real.pi / 2) ↔ z.re = 0 ∧ z.im < 0 :=\n  by\n  by_cases h₀ : z = 0; · simp [h₀, lt_irrefl, real.pi_ne_zero]\n  constructor\n  · intro h\n    rw [← abs_mul_cos_add_sin_mul_I z, h]\n    simp [h₀]\n  · cases' z with x y\n    rintro ⟨rfl : x = 0, hy : y < 0⟩\n    rw [← arg_neg_I, ← arg_real_mul (-I) (neg_pos.2 hy), mk_eq_add_mul_I]\n    simp\n#align arg_eq_neg_pi_div_two_iff arg_eq_neg_pi_div_two_iff\n\n",
 "arg_eq_arg_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem arg_eq_arg_iff {x y : exprℂ} (hx : x ≠ 0) (hy : y ≠ 0) : arg x = arg y ↔ (abs y / abs x : exprℂ) * x = y :=\n  by\n  simp only [ext_abs_arg_iff, map_mul, map_div₀, abs_of_real, abs_abs, div_mul_cancel _ (abs.ne_zero hx),\n    eq_self_iff_true, true_and_iff]\n  rw [← of_real_div, arg_real_mul]\n  exact div_pos (abs.pos hy) (abs.pos hx)\n#align arg_eq_arg_iff arg_eq_arg_iff\n\n",
 "arg_div_coe_angle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem arg_div_coe_angle {x y : exprℂ} (hx : x ≠ 0) (hy : y ≠ 0) : (arg (x / y) : real.angle) = arg x - arg y := by\n  rw [div_eq_mul_inv, arg_mul_coe_angle hx (inv_ne_zero hy), arg_inv_coe_angle, sub_eq_add_neg]\n#align arg_div_coe_angle arg_div_coe_angle\n\n",
 "arg_cos_add_sin_mul_I_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌊ ⌋» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_cos_add_sin_mul_I_sub (θ : exprℝ) :\n    arg (cos θ + sin θ * I) - θ = 2 * real.pi * «expr⌊ ⌋» ((real.pi - θ) / (2 * real.pi)) := by\n  rw [← one_mul (_ + _), ← of_real_one, arg_mul_cos_add_sin_mul_I_sub zero_lt_one]\n#align arg_cos_add_sin_mul_I_sub arg_cos_add_sin_mul_I_sub\n\n",
 "arg_cos_add_sin_mul_I_eq_to_Ioc_mod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_cos_add_sin_mul_I_eq_to_Ioc_mod (θ : exprℝ) :\n    arg (cos θ + sin θ * I) = to_Ioc_mod real.two_pi_pos (-real.pi) θ := by\n  rw [← one_mul (_ + _), ← of_real_one, arg_mul_cos_add_sin_mul_I_eq_to_Ioc_mod zero_lt_one]\n#align arg_cos_add_sin_mul_I_eq_to_Ioc_mod arg_cos_add_sin_mul_I_eq_to_Ioc_mod\n\n",
 "arg_cos_add_sin_mul_I_coe_angle":
 "theorem arg_cos_add_sin_mul_I_coe_angle (θ : real.angle) :\n    (arg (real.angle.cos θ + real.angle.sin θ * I) : real.angle) = θ := by\n  rw [← one_mul (_ + _), ← of_real_one, arg_mul_cos_add_sin_mul_I_coe_angle zero_lt_one]\n#align arg_cos_add_sin_mul_I_coe_angle arg_cos_add_sin_mul_I_coe_angle\n\n",
 "arg_cos_add_sin_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_cos_add_sin_mul_I {θ : exprℝ} (hθ : θ ∈ Ioc (-real.pi) (real.pi)) : arg (cos θ + sin θ * I) = θ := by\n  rw [← one_mul (_ + _), ← of_real_one, arg_mul_cos_add_sin_mul_I zero_lt_one hθ]\n#align arg_cos_add_sin_mul_I arg_cos_add_sin_mul_I\n\n",
 "arg_conj_coe_angle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem arg_conj_coe_angle (x : exprℂ) : (arg ((star_ring_end) x) : real.angle) = -arg x := by\n  by_cases h : arg x = real.pi <;> simp [arg_conj, h]\n#align arg_conj_coe_angle arg_conj_coe_angle\n\n",
 "arg_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem arg_conj (x : exprℂ) : arg ((star_ring_end) x) = if arg x = real.pi then real.pi else -arg x :=\n  by\n  simp_rw [arg_eq_pi_iff, arg, neg_im, conj_im, conj_re, abs_conj, neg_div, neg_neg, real.arcsin_neg,\n    apply_ite has_neg.neg, neg_add, neg_sub, neg_neg, ← sub_eq_add_neg, sub_neg_eq_add, add_comm (real.pi)]\n  rcases lt_trichotomy x.re 0 with (hr | hr | hr) <;> rcases lt_trichotomy x.im 0 with (hi | hi | hi)\n  · simp [hr, hr.not_le, hi.le, hi.ne, not_le.2 hi]\n  · simp [hr, hr.not_le, hi]\n  · simp [hr, hr.not_le, hi.ne.symm, hi.le, not_le.2 hi]\n  · simp [hr]\n  · simp [hr]\n  · simp [hr]\n  · simp [hr, hr.le, hi.ne]\n  · simp [hr, hr.le, hr.le.not_lt]\n  · simp [hr, hr.le, hr.le.not_lt]\n#align arg_conj arg_conj\n\n",
 "arg_coe_angle_to_real_eq_arg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem arg_coe_angle_to_real_eq_arg (z : exprℂ) : (arg z : real.angle).to_real = arg z :=\n  by\n  rw [real.angle.to_real_coe_eq_self_iff_mem_Ioc]\n  exact arg_mem_Ioc _\n#align arg_coe_angle_to_real_eq_arg arg_coe_angle_to_real_eq_arg\n\n",
 "arg_coe_angle_eq_iff_eq_to_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem arg_coe_angle_eq_iff_eq_to_real {z : exprℂ} {θ : real.angle} : (arg z : real.angle) = θ ↔ arg z = θ.to_real :=\n  by rw [← real.angle.to_real_inj, arg_coe_angle_to_real_eq_arg]\n#align arg_coe_angle_eq_iff_eq_to_real arg_coe_angle_eq_iff_eq_to_real\n\n",
 "arg_coe_angle_eq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem arg_coe_angle_eq_iff {x y : exprℂ} : (arg x : real.angle) = arg y ↔ arg x = arg y := by\n  simp_rw [← real.angle.to_real_inj, arg_coe_angle_to_real_eq_arg]\n#align arg_coe_angle_eq_iff arg_coe_angle_eq_iff\n\n",
 "arg_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n@[simp]\ntheorem arg_I : arg I = real.pi / 2 := by simp [arg, le_refl]\n#align arg_I arg_I\n\n",
 "abs_mul_exp_arg_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem abs_mul_exp_arg_mul_I (x : exprℂ) : ↑(abs x) * exp (arg x * I) = x :=\n  by\n  rcases eq_or_ne x 0 with (rfl | hx)\n  · simp\n  · have : abs x ≠ 0 := abs.ne_zero hx\n    ext <;> field_simp [sin_arg, cos_arg hx, this, mul_comm (abs x)]\n#align abs_mul_exp_arg_mul_I abs_mul_exp_arg_mul_I\n\n",
 "abs_mul_cos_add_sin_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem abs_mul_cos_add_sin_mul_I (x : exprℂ) : (abs x * (cos (arg x) + sin (arg x) * I) : exprℂ) = x := by\n  rw [← exp_mul_I, abs_mul_exp_arg_mul_I]\n#align abs_mul_cos_add_sin_mul_I abs_mul_cos_add_sin_mul_I\n\n",
 "abs_eq_one_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem abs_eq_one_iff (z : exprℂ) : abs z = 1 ↔ ∃ θ : exprℝ, exp (θ * I) = z :=\n  by\n  refine' ⟨fun hz => ⟨arg z, _⟩, _⟩\n  ·\n    calc\n      exp (arg z * I) = abs z * exp (arg z * I) := by rw [hz, of_real_one, one_mul]\n      _ = z := abs_mul_exp_arg_mul_I z\n      \n  · rintro ⟨θ, rfl⟩\n    exact Complex.abs_exp_ofReal_mul_I θ\n#align abs_eq_one_iff abs_eq_one_iff\n\n",
 "abs_arg_le_pi_div_two_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n@[simp]\ntheorem abs_arg_le_pi_div_two_iff {z : exprℂ} : |arg z| ≤ real.pi / 2 ↔ 0 ≤ re z := by\n  rw [abs_le, arg_le_pi_div_two_iff, neg_pi_div_two_le_arg_iff, ← or_and_left, ← not_le, and_not_self_iff, or_false_iff]\n#align abs_arg_le_pi_div_two_iff abs_arg_le_pi_div_two_iff\n\n",
 "abs_arg_le_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem abs_arg_le_pi (z : exprℂ) : |arg z| ≤ real.pi :=\n  abs_le.2 ⟨(neg_pi_lt_arg z).le, arg_le_pi z⟩\n#align abs_arg_le_pi abs_arg_le_pi\n\n"}