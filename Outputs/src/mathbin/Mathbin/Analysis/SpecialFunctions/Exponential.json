{"has_strict_fderiv_at_exp_zero_of_radius_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-\nCopyright (c) 2021 Anatole Dedecker. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Anatole Dedecker\n-/\n/-- The exponential in a Banach-algebra `𝔸` over a normed field `𝕂` has strict Fréchet-derivative\n`1 : 𝔸 →L[𝕂] 𝔸` at zero, as long as it converges on a neighborhood of zero. -/\ntheorem has_strict_fderiv_at_exp_zero_of_radius_pos (h : 0 < (exp_series 𝕂 𝔸).radius) :\n    has_strict_fderiv_at (exp 𝕂) (1 : «expr →L[ ] » 𝔸 𝕂 𝔸) 0 :=\n  by\n  convert(has_fpower_series_at_exp_zero_of_radius_pos h).has_strict_fderiv_at\n  ext x\n  change x = exp_series 𝕂 𝔸 1 fun _ => x\n  simp [exp_series_apply_eq]\n#align has_strict_fderiv_at_exp_zero_of_radius_pos has_strict_fderiv_at_exp_zero_of_radius_pos\n\n",
 "has_strict_fderiv_at_exp_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-- The exponential in a Banach-algebra `𝔸` over `𝕂 = ℝ` or `𝕂 = ℂ` has strict Fréchet-derivative\n`1 : 𝔸 →L[𝕂] 𝔸` at zero. -/\ntheorem has_strict_fderiv_at_exp_zero : has_strict_fderiv_at (exp 𝕂) (1 : «expr →L[ ] » 𝔸 𝕂 𝔸) 0 :=\n  has_strict_fderiv_at_exp_zero_of_radius_pos (exp_series_radius_pos 𝕂 𝔸)\n#align has_strict_fderiv_at_exp_zero has_strict_fderiv_at_exp_zero\n\n",
 "has_strict_fderiv_at_exp_of_mem_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-- The exponential map in a commutative Banach-algebra `𝔸` over a normed field `𝕂` of\ncharacteristic zero has strict Fréchet-derivative `exp 𝕂 x • 1 : 𝔸 →L[𝕂] 𝔸` at any point `x` in\nthe disk of convergence. -/\ntheorem has_strict_fderiv_at_exp_of_mem_ball [CharZero 𝕂] {x : 𝔸}\n    (hx : x ∈ EMetric.ball (0 : 𝔸) (exp_series 𝕂 𝔸).radius) :\n    has_strict_fderiv_at (exp 𝕂) («expr • » (exp 𝕂 x) 1 : «expr →L[ ] » 𝔸 𝕂 𝔸) x :=\n  let ⟨p, hp⟩ := analytic_at_exp_of_mem_ball x hx\n  hp.has_fderiv_at.unique (has_fderiv_at_exp_of_mem_ball hx) ▸ hp.has_strict_fderiv_at\n#align has_strict_fderiv_at_exp_of_mem_ball has_strict_fderiv_at_exp_of_mem_ball\n\n",
 "has_strict_fderiv_at_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-- The exponential map in a commutative Banach-algebra `𝔸` over `𝕂 = ℝ` or `𝕂 = ℂ` has strict\nFréchet-derivative `exp 𝕂 x • 1 : 𝔸 →L[𝕂] 𝔸` at any point `x`. -/\ntheorem has_strict_fderiv_at_exp {x : 𝔸} :\n    has_strict_fderiv_at (exp 𝕂) («expr • » (exp 𝕂 x) 1 : «expr →L[ ] » 𝔸 𝕂 𝔸) x :=\n  has_strict_fderiv_at_exp_of_mem_ball ((exp_series_radius_eq_top 𝕂 𝔸).symm ▸ edist_lt_top _ _)\n#align has_strict_fderiv_at_exp has_strict_fderiv_at_exp\n\n",
 "has_strict_deriv_at_exp_zero_of_radius_pos":
 "/-- The exponential map in a complete normed field `𝕂` of characteristic zero has strict derivative\n`1` at zero, as long as it converges on a neighborhood of zero. -/\ntheorem has_strict_deriv_at_exp_zero_of_radius_pos (h : 0 < (exp_series 𝕂 𝕂).radius) :\n    has_strict_deriv_at (exp 𝕂) (1 : 𝕂) 0 :=\n  (has_strict_fderiv_at_exp_zero_of_radius_pos h).has_strict_deriv_at\n#align has_strict_deriv_at_exp_zero_of_radius_pos has_strict_deriv_at_exp_zero_of_radius_pos\n\n",
 "has_strict_deriv_at_exp_zero":
 "/-- The exponential map in `𝕂 = ℝ` or `𝕂 = ℂ` has strict derivative `1` at zero. -/\ntheorem has_strict_deriv_at_exp_zero : has_strict_deriv_at (exp 𝕂) (1 : 𝕂) 0 :=\n  has_strict_deriv_at_exp_zero_of_radius_pos (exp_series_radius_pos 𝕂 𝕂)\n#align has_strict_deriv_at_exp_zero has_strict_deriv_at_exp_zero\n\n",
 "has_strict_deriv_at_exp_of_mem_ball":
 "/-- The exponential map in a complete normed field `𝕂` of characteristic zero has strict derivative\n`exp 𝕂 x` at any point `x` in the disk of convergence. -/\ntheorem has_strict_deriv_at_exp_of_mem_ball [CharZero 𝕂] {x : 𝕂}\n    (hx : x ∈ EMetric.ball (0 : 𝕂) (exp_series 𝕂 𝕂).radius) : has_strict_deriv_at (exp 𝕂) (exp 𝕂 x) x := by\n  simpa using (has_strict_fderiv_at_exp_of_mem_ball hx).has_strict_deriv_at\n#align has_strict_deriv_at_exp_of_mem_ball has_strict_deriv_at_exp_of_mem_ball\n\n",
 "has_strict_deriv_at_exp":
 "/-- The exponential map in `𝕂 = ℝ` or `𝕂 = ℂ` has strict derivative `exp 𝕂 x` at any point\n`x`. -/\ntheorem has_strict_deriv_at_exp {x : 𝕂} : has_strict_deriv_at (exp 𝕂) (exp 𝕂 x) x :=\n  has_strict_deriv_at_exp_of_mem_ball ((exp_series_radius_eq_top 𝕂 𝕂).symm ▸ edist_lt_top _ _)\n#align has_strict_deriv_at_exp has_strict_deriv_at_exp\n\n",
 "has_fderiv_at_exp_zero_of_radius_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-- The exponential in a Banach-algebra `𝔸` over a normed field `𝕂` has Fréchet-derivative\n`1 : 𝔸 →L[𝕂] 𝔸` at zero, as long as it converges on a neighborhood of zero. -/\ntheorem has_fderiv_at_exp_zero_of_radius_pos (h : 0 < (exp_series 𝕂 𝔸).radius) :\n    has_fderiv_at (exp 𝕂) (1 : «expr →L[ ] » 𝔸 𝕂 𝔸) 0 :=\n  (has_strict_fderiv_at_exp_zero_of_radius_pos h).has_fderiv_at\n#align has_fderiv_at_exp_zero_of_radius_pos has_fderiv_at_exp_zero_of_radius_pos\n\n",
 "has_fderiv_at_exp_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-- The exponential in a Banach-algebra `𝔸` over `𝕂 = ℝ` or `𝕂 = ℂ` has Fréchet-derivative\n`1 : 𝔸 →L[𝕂] 𝔸` at zero. -/\ntheorem has_fderiv_at_exp_zero : has_fderiv_at (exp 𝕂) (1 : «expr →L[ ] » 𝔸 𝕂 𝔸) 0 :=\n  has_strict_fderiv_at_exp_zero.has_fderiv_at\n#align has_fderiv_at_exp_zero has_fderiv_at_exp_zero\n\n",
 "has_fderiv_at_exp_of_mem_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-- The exponential map in a commutative Banach-algebra `𝔸` over a normed field `𝕂` of\ncharacteristic zero has Fréchet-derivative `exp 𝕂 x • 1 : 𝔸 →L[𝕂] 𝔸` at any point `x` in the\ndisk of convergence. -/\ntheorem has_fderiv_at_exp_of_mem_ball [CharZero 𝕂] {x : 𝔸} (hx : x ∈ EMetric.ball (0 : 𝔸) (exp_series 𝕂 𝔸).radius) :\n    has_fderiv_at (exp 𝕂) («expr • » (exp 𝕂 x) 1 : «expr →L[ ] » 𝔸 𝕂 𝔸) x :=\n  by\n  have hpos : 0 < (exp_series 𝕂 𝔸).radius := (zero_le _).trans_lt hx\n  rw [has_fderiv_at_iff_is_o_nhds_zero]\n  suffices\n    «expr =ᶠ[ ] » (fun h => exp 𝕂 x * (exp 𝕂 (0 + h) - exp 𝕂 0 - ContinuousLinearMap.id 𝕂 𝔸 h)) ((nhds) 0) fun h =>\n      exp 𝕂 (x + h) - exp 𝕂 x - «expr • » (exp 𝕂 x) (ContinuousLinearMap.id 𝕂 𝔸 h)\n    by\n    refine' (is_o.const_mul_left _ _).congr' this (eventually_eq.refl _ _)\n    rw [← has_fderiv_at_iff_is_o_nhds_zero]\n    exact has_fderiv_at_exp_zero_of_radius_pos hpos\n  have :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      ((nhds) (0 : 𝔸)) (h ∈ EMetric.ball (0 : 𝔸) (exp_series 𝕂 𝔸).radius) :=\n    EMetric.ball_mem_nhds _ hpos\n  filter_upwards [this]with _ hh\n  rw [exp_add_of_mem_ball hx hh, exp_zero, zero_add, ContinuousLinearMap.id_apply, smul_eq_mul]\n  ring\n#align has_fderiv_at_exp_of_mem_ball has_fderiv_at_exp_of_mem_ball\n\n",
 "has_fderiv_at_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →L[ ] » -/\n/-- The exponential map in a commutative Banach-algebra `𝔸` over `𝕂 = ℝ` or `𝕂 = ℂ` has\nFréchet-derivative `exp 𝕂 x • 1 : 𝔸 →L[𝕂] 𝔸` at any point `x`. -/\ntheorem has_fderiv_at_exp {x : 𝔸} : has_fderiv_at (exp 𝕂) («expr • » (exp 𝕂 x) 1 : «expr →L[ ] » 𝔸 𝕂 𝔸) x :=\n  has_strict_fderiv_at_exp.has_fderiv_at\n#align has_fderiv_at_exp has_fderiv_at_exp\n\n",
 "has_deriv_at_exp_zero_of_radius_pos":
 "/-- The exponential map in a complete normed field `𝕂` of characteristic zero has derivative\n`1` at zero, as long as it converges on a neighborhood of zero. -/\ntheorem has_deriv_at_exp_zero_of_radius_pos (h : 0 < (exp_series 𝕂 𝕂).radius) : has_deriv_at (exp 𝕂) (1 : 𝕂) 0 :=\n  (has_strict_deriv_at_exp_zero_of_radius_pos h).has_deriv_at\n#align has_deriv_at_exp_zero_of_radius_pos has_deriv_at_exp_zero_of_radius_pos\n\n",
 "has_deriv_at_exp_zero":
 "/-- The exponential map in `𝕂 = ℝ` or `𝕂 = ℂ` has derivative `1` at zero. -/\ntheorem has_deriv_at_exp_zero : has_deriv_at (exp 𝕂) (1 : 𝕂) 0 :=\n  has_strict_deriv_at_exp_zero.has_deriv_at\n#align has_deriv_at_exp_zero has_deriv_at_exp_zero\n\n",
 "has_deriv_at_exp_of_mem_ball":
 "/-- The exponential map in a complete normed field `𝕂` of characteristic zero has derivative\n`exp 𝕂 x` at any point `x` in the disk of convergence. -/\ntheorem has_deriv_at_exp_of_mem_ball [CharZero 𝕂] {x : 𝕂} (hx : x ∈ EMetric.ball (0 : 𝕂) (exp_series 𝕂 𝕂).radius) :\n    has_deriv_at (exp 𝕂) (exp 𝕂 x) x :=\n  (has_strict_deriv_at_exp_of_mem_ball hx).has_deriv_at\n#align has_deriv_at_exp_of_mem_ball has_deriv_at_exp_of_mem_ball\n\n",
 "has_deriv_at_exp":
 "/-- The exponential map in `𝕂 = ℝ` or `𝕂 = ℂ` has derivative `exp 𝕂 x` at any point `x`. -/\ntheorem has_deriv_at_exp {x : 𝕂} : has_deriv_at (exp 𝕂) (exp 𝕂 x) x :=\n  has_strict_deriv_at_exp.has_deriv_at\n#align has_deriv_at_exp has_deriv_at_exp\n\n",
 "exp_eq_exp_ℝ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem real.exp_eq_exp_ℝ : Real.exp = exp (exprℝ) := by\n  ext x\n  exact_mod_cast congr_fun complex.exp_eq_exp_ℂ x\n#align real.exp_eq_exp_ℝ real.exp_eq_exp_ℝ\n\n",
 "exp_eq_exp_ℂ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem complex.exp_eq_exp_ℂ : Complex.exp = exp (exprℂ) :=\n  by\n  refine' funext fun x => _\n  rw [Complex.exp, exp_eq_tsum_div]\n  exact tendsto_nhds_unique x.exp'.tendsto_limit (exp_series_div_summable (exprℝ) x).has_sum.tendsto_sum_nat\n#align complex.exp_eq_exp_ℂ complex.exp_eq_exp_ℂ\n\n"}