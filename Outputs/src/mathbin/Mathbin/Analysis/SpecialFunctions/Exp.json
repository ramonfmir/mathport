{"tendsto_pow_mul_exp_neg_at_top_nhds_0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- The function `x^n * exp(-x)` tends to `0` at `+∞`, for any natural number `n`. -/\ntheorem tendsto_pow_mul_exp_neg_at_top_nhds_0 (n : ℕ) : tendsto (fun x => x ^ n * exp (-x)) at_top ((nhds) 0) :=\n  (tendsto_inv_at_top_zero.comp (tendsto_exp_div_pow_at_top n)).congr fun x => by\n    rw [comp_app, inv_eq_one_div, div_div_eq_mul_div, one_mul, div_eq_mul_inv, exp_neg]\n#align tendsto_pow_mul_exp_neg_at_top_nhds_0 tendsto_pow_mul_exp_neg_at_top_nhds_0\n\n",
 "tendsto_mul_exp_add_div_pow_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The function `(b * exp x + c) / (x ^ n)` tends to `+∞` at `+∞`, for any natural number\n`n` and any real numbers `b` and `c` such that `b` is positive. -/\ntheorem tendsto_mul_exp_add_div_pow_at_top (b c : exprℝ) (n : ℕ) (hb : 0 < b) :\n    tendsto (fun x => (b * exp x + c) / x ^ n) at_top at_top :=\n  by\n  rcases eq_or_ne n 0 with (rfl | hn)\n  · simp only [pow_zero, div_one]\n    exact (tendsto_exp_at_top.const_mul_at_top hb).at_top_add tendsto_const_nhds\n  simp only [add_div, mul_div_assoc]\n  exact\n    ((tendsto_exp_div_pow_at_top n).const_mul_at_top hb).at_top_add\n      (tendsto_const_nhds.div_at_top (tendsto_pow_at_top hn))\n#align tendsto_mul_exp_add_div_pow_at_top tendsto_mul_exp_add_div_pow_at_top\n\n",
 "tendsto_exp_nhds_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_exp_nhds_zero_iff {α : Type _} {l : filter α} {f : α → exprℂ} :\n    tendsto (fun x => exp (f x)) l ((nhds) 0) ↔ tendsto (fun x => re (f x)) l at_bot := by\n  rw [← tendsto_comap_iff, comap_exp_nhds_zero, tendsto_comap_iff]\n#align tendsto_exp_nhds_zero_iff tendsto_exp_nhds_zero_iff\n\n",
 "tendsto_exp_nhds_0_nhds_1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- The real exponential function tends to `1` at `0`. -/\ntheorem tendsto_exp_nhds_0_nhds_1 : tendsto exp ((nhds) 0) ((nhds) 1) :=\n  by\n  convert continuous_exp.tendsto 0\n  simp\n#align tendsto_exp_nhds_0_nhds_1 tendsto_exp_nhds_0_nhds_1\n\n",
 "tendsto_exp_neg_at_top_nhds_0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- The real exponential function tends to `0` at `-∞` or, equivalently, `exp(-x)` tends to `0`\nat `+∞` -/\ntheorem tendsto_exp_neg_at_top_nhds_0 : tendsto (fun x => exp (-x)) at_top ((nhds) 0) :=\n  (tendsto_inv_at_top_zero.comp tendsto_exp_at_top).congr fun x => (exp_neg x).symm\n#align tendsto_exp_neg_at_top_nhds_0 tendsto_exp_neg_at_top_nhds_0\n\n",
 "tendsto_exp_div_pow_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌈ ⌉₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⌈ ⌉₊» -/\n/-- The function `exp(x)/x^n` tends to `+∞` at `+∞`, for any natural number `n` -/\ntheorem tendsto_exp_div_pow_at_top (n : ℕ) : tendsto (fun x => exp x / x ^ n) at_top at_top :=\n  by\n  refine' (at_top_basis_Ioi.tendsto_iff (at_top_basis' 1)).2 fun C hC₁ => _\n  have hC₀ : 0 < C := zero_lt_one.trans_le hC₁\n  have : 0 < (exp 1 * C)⁻¹ := inv_pos.2 (mul_pos (exp_pos _) hC₀)\n  obtain ⟨N, hN⟩ : ∃ N, ∀ k ≥ N, (↑k ^ n : exprℝ) / exp 1 ^ k < (exp 1 * C)⁻¹ :=\n    eventually_at_top.1\n      ((tendsto_pow_const_div_const_pow_of_one_lt n (one_lt_exp_iff.2 zero_lt_one)).eventually (gt_mem_nhds this))\n  simp only [← exp_nat_mul, mul_one, div_lt_iff, exp_pos, ← div_eq_inv_mul] at hN\n  refine' ⟨N, trivial, fun x hx => _⟩\n  rw [Set.mem_Ioi] at hx\n  have hx₀ : 0 < x := N.cast_nonneg.trans_lt hx\n  rw [Set.mem_Ici, le_div_iff (pow_pos hx₀ _), ← le_div_iff' hC₀]\n  calc\n    x ^ n ≤ «expr⌈ ⌉₊» x ^ n := pow_le_pow_of_le_left hx₀.le (Nat.le_ceil _) _\n    _ ≤ exp («expr⌈ ⌉₊» x) / (exp 1 * C) := (hN _ (Nat.lt_ceil.2 hx).le).le\n    _ ≤ exp (x + 1) / (exp 1 * C) :=\n      div_le_div_of_le (mul_pos (exp_pos _) hC₀).le (exp_le_exp.2 <| (Nat.ceil_lt_add_one hx₀.le).le)\n    _ = exp x / C := by rw [add_comm, exp_add, mul_div_mul_left _ _ (exp_pos _).ne']\n    \n#align tendsto_exp_div_pow_at_top tendsto_exp_div_pow_at_top\n\n",
 "tendsto_exp_comp_nhds_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n@[simp]\ntheorem tendsto_exp_comp_nhds_zero {f : α → exprℝ} : tendsto (fun x => exp (f x)) l ((nhds) 0) ↔ tendsto f l at_bot :=\n  by rw [← tendsto_comap_iff, comap_exp_nhds_zero]\n#align tendsto_exp_comp_nhds_zero tendsto_exp_comp_nhds_zero\n\n",
 "tendsto_exp_comp_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem tendsto_exp_comp_at_top {f : α → exprℝ} : tendsto (fun x => exp (f x)) l at_top ↔ tendsto f l at_top := by\n  rw [← tendsto_comap_iff, comap_exp_at_top]\n#align tendsto_exp_comp_at_top tendsto_exp_comp_at_top\n\n",
 "tendsto_exp_comap_re_at_top":
 "/-- `complex.abs (complex.exp z) → ∞` as `complex.re z → ∞`. TODO: use `bornology.cobounded`. -/\ntheorem tendsto_exp_comap_re_at_top : tendsto exp (comap re at_top) (comap abs at_top) :=\n  comap_exp_comap_abs_at_top ▸ tendsto_comap\n#align tendsto_exp_comap_re_at_top tendsto_exp_comap_re_at_top\n\n",
 "tendsto_exp_comap_re_at_bot_nhds_within":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\ntheorem tendsto_exp_comap_re_at_bot_nhds_within : tendsto exp (comap re at_bot) (nhds_within.ne 0) :=\n  comap_exp_nhds_within_zero ▸ tendsto_comap\n#align tendsto_exp_comap_re_at_bot_nhds_within tendsto_exp_comap_re_at_bot_nhds_within\n\n",
 "tendsto_exp_comap_re_at_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- `complex.exp z → 0` as `complex.re z → -∞`.-/\ntheorem tendsto_exp_comap_re_at_bot : tendsto exp (comap re at_bot) ((nhds) 0) :=\n  comap_exp_nhds_zero ▸ tendsto_comap\n#align tendsto_exp_comap_re_at_bot tendsto_exp_comap_re_at_bot\n\n",
 "tendsto_exp_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/-- The real exponential function tends to `+∞` at `+∞`. -/\ntheorem tendsto_exp_at_top : tendsto exp at_top at_top :=\n  by\n  have A : tendsto (fun x : exprℝ => x + 1) at_top at_top := tendsto_at_top_add_const_right at_top 1 tendsto_id\n  have B :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" at_top\n      (x + 1 ≤ exp x) :=\n    eventually_at_top.2 ⟨0, fun x hx => add_one_le_exp x⟩\n  exact tendsto_at_top_mono' at_top B A\n#align tendsto_exp_at_top tendsto_exp_at_top\n\n",
 "tendsto_exp_at_bot_nhds_within":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\ntheorem tendsto_exp_at_bot_nhds_within : tendsto exp at_bot (nhds_within.gt 0) :=\n  tendsto_inf.2 ⟨tendsto_exp_at_bot, tendsto_principal.2 <| eventually_of_forall exp_pos⟩\n#align tendsto_exp_at_bot_nhds_within tendsto_exp_at_bot_nhds_within\n\n",
 "tendsto_exp_at_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_exp_at_bot : tendsto exp at_bot ((nhds) 0) :=\n  (tendsto_exp_neg_at_top_nhds_0.comp tendsto_neg_at_bot_at_top).congr fun x => congr_arg exp <| neg_neg x\n#align tendsto_exp_at_bot tendsto_exp_at_bot\n\n",
 "tendsto_div_pow_mul_exp_add_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- The function `(x ^ n) / (b * exp x + c)` tends to `0` at `+∞`, for any natural number\n`n` and any real numbers `b` and `c` such that `b` is nonzero. -/\ntheorem tendsto_div_pow_mul_exp_add_at_top (b c : exprℝ) (n : ℕ) (hb : 0 ≠ b) :\n    tendsto (fun x => x ^ n / (b * exp x + c)) at_top ((nhds) 0) :=\n  by\n  have H : ∀ d e, 0 < d → tendsto (fun x : exprℝ => x ^ n / (d * exp x + e)) at_top ((nhds) 0) :=\n    by\n    intro b' c' h\n    convert (tendsto_mul_exp_add_div_pow_at_top b' c' n h).inv_tendsto_at_top\n    ext x\n    simpa only [pi.inv_apply] using (inv_div _ _).symm\n  cases lt_or_gt_of_ne hb\n  · exact H b c h\n  · convert (H (-b) (-c) (neg_pos.mpr h)).neg\n    · ext x\n      field_simp\n      rw [← neg_add (b * exp x) c, neg_div_neg_eq]\n    · exact neg_zero.symm\n#align tendsto_div_pow_mul_exp_add_at_top tendsto_div_pow_mul_exp_add_at_top\n\n",
 "tendsto_comp_exp_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem tendsto_comp_exp_at_top {f : exprℝ → α} : tendsto (fun x => f (exp x)) at_top l ↔ tendsto f at_top l := by\n  rw [← tendsto_map'_iff, map_exp_at_top]\n#align tendsto_comp_exp_at_top tendsto_comp_exp_at_top\n\n",
 "tendsto_comp_exp_at_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\ntheorem tendsto_comp_exp_at_bot {f : exprℝ → α} :\n    tendsto (fun x => f (exp x)) at_bot l ↔ tendsto f (nhds_within.gt 0) l := by rw [← map_exp_at_bot, tendsto_map'_iff]\n#align tendsto_comp_exp_at_bot tendsto_comp_exp_at_bot\n\n",
 "range_exp":
 "@[simp]\ntheorem range_exp : range exp = Ioi 0 := by\n  rw [← coe_comp_exp_order_iso, range_comp, exp_order_iso.range_eq, image_univ, Subtype.range_coe]\n#align range_exp range_exp\n\n",
 "map_exp_at_top":
 "@[simp]\ntheorem map_exp_at_top : map exp at_top = at_top := by\n  rw [← coe_comp_exp_order_iso, ← filter.map_map, order_iso.map_at_top, map_coe_Ioi_at_top]\n#align map_exp_at_top map_exp_at_top\n\n",
 "map_exp_at_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n@[simp]\ntheorem map_exp_at_bot : map exp at_bot = nhds_within.gt 0 := by\n  rw [← coe_comp_exp_order_iso, ← filter.map_map, exp_order_iso.map_at_bot, ← map_coe_Ioi_at_bot]\n#align map_exp_at_bot map_exp_at_bot\n\n",
 "locally_lipschitz_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem locally_lipschitz_exp {r : exprℝ} (hr_nonneg : 0 ≤ r) (hr_le : r ≤ 1) (x y : exprℂ)\n    (hyx : «expr‖ ‖» (y - x) < r) : «expr‖ ‖» (exp y - exp x) ≤ (1 + r) * «expr‖ ‖» (exp x) * «expr‖ ‖» (y - x) :=\n  by\n  have hy_eq : y = x + (y - x) := by abel\n  have hyx_sq_le : «expr‖ ‖» (y - x) ^ 2 ≤ r * «expr‖ ‖» (y - x) :=\n    by\n    rw [pow_two]\n    exact mul_le_mul hyx.le le_rfl (norm_nonneg _) hr_nonneg\n  have h_sq :\n    ∀ z,\n      «expr‖ ‖» z ≤ 1 →\n        «expr‖ ‖» (exp (x + z) - exp x) ≤ «expr‖ ‖» z * «expr‖ ‖» (exp x) + «expr‖ ‖» (exp x) * «expr‖ ‖» z ^ 2 :=\n    by\n    intro z hz\n    have : «expr‖ ‖» (exp (x + z) - exp x - «expr • » z (exp x)) ≤ «expr‖ ‖» (exp x) * «expr‖ ‖» z ^ 2 :=\n      exp_bound_sq x z hz\n    rw [← sub_le_iff_le_add', ← norm_smul z]\n    exact (norm_sub_norm_le _ _).trans this\n  calc\n    «expr‖ ‖» (exp y - exp x) = «expr‖ ‖» (exp (x + (y - x)) - exp x) := by nth_rw 1 [hy_eq]\n    _ ≤ «expr‖ ‖» (y - x) * «expr‖ ‖» (exp x) + «expr‖ ‖» (exp x) * «expr‖ ‖» (y - x) ^ 2 :=\n      h_sq (y - x) (hyx.le.trans hr_le)\n    _ ≤ «expr‖ ‖» (y - x) * «expr‖ ‖» (exp x) + «expr‖ ‖» (exp x) * (r * «expr‖ ‖» (y - x)) :=\n      add_le_add_left (mul_le_mul le_rfl hyx_sq_le (sq_nonneg _) (norm_nonneg _)) _\n    _ = (1 + r) * «expr‖ ‖» (exp x) * «expr‖ ‖» (y - x) := by ring\n    \n#align locally_lipschitz_exp locally_lipschitz_exp\n\n",
 "is_o_pow_exp_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\ntheorem is_o_pow_exp_at_top {n : ℕ} : «expr =o[ ] » (fun x => x ^ n) at_top real.exp := by\n  simpa [is_o_iff_tendsto fun x hx => ((exp_pos x).ne' hx).elim] using\n    tendsto_div_pow_mul_exp_add_at_top 1 0 n zero_ne_one\n#align is_o_pow_exp_at_top is_o_pow_exp_at_top\n\n",
 "is_o_one_exp_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem is_o_one_exp_comp {f : α → exprℝ} :\n    («expr =o[ ] » (fun x => 1 : α → exprℝ) l fun x => exp (f x)) ↔ tendsto f l at_top := by\n  simp only [← exp_zero, is_o_exp_comp_exp_comp, sub_zero]\n#align is_o_one_exp_comp is_o_one_exp_comp\n\n",
 "is_o_exp_comp_exp_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\n@[simp]\ntheorem is_o_exp_comp_exp_comp {f g : α → exprℝ} :\n    («expr =o[ ] » (fun x => exp (f x)) l fun x => exp (g x)) ↔ tendsto (fun x => g x - f x) l at_top := by\n  simp only [is_o_iff_tendsto, exp_ne_zero, ← exp_sub, ← tendsto_neg_at_top_iff, false_imp_iff, imp_true_iff,\n    tendsto_exp_comp_nhds_zero, neg_sub]\n#align is_o_exp_comp_exp_comp is_o_exp_comp_exp_comp\n\n",
 "is_bounded_under_le_exp_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem is_bounded_under_le_exp_comp {f : α → exprℝ} :\n    (is_bounded_under (· ≤ ·) l fun x => exp (f x)) ↔ is_bounded_under (· ≤ ·) l f :=\n  exp_monotone.is_bounded_under_le_comp tendsto_exp_at_top\n#align is_bounded_under_le_exp_comp is_bounded_under_le_exp_comp\n\n",
 "is_bounded_under_ge_exp_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem is_bounded_under_ge_exp_comp (l : filter α) (f : α → exprℝ) : is_bounded_under (· ≥ ·) l fun x => exp (f x) :=\n  is_bounded_under_of ⟨0, fun x => (exp_pos _).le⟩\n#align is_bounded_under_ge_exp_comp is_bounded_under_ge_exp_comp\n\n",
 "is_Theta_exp_comp_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =Θ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- `real.exp (f x)` is bounded away from zero and infinity along a filter `l` if and only if\n`|f x|` is bounded from above along this filter. -/\n@[simp]\ntheorem is_Theta_exp_comp_one {f : α → exprℝ} :\n    «expr =Θ[ ] » (fun x => exp (f x)) l (fun x => 1 : α → exprℝ) ↔ is_bounded_under (· ≤ ·) l fun x => |f x| := by\n  simp only [← exp_zero, is_Theta_exp_comp_exp_comp, sub_zero]\n#align is_Theta_exp_comp_one is_Theta_exp_comp_one\n\n",
 "is_Theta_exp_comp_exp_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =Θ[ ] » -/\n@[simp]\ntheorem is_Theta_exp_comp_exp_comp {f g : α → exprℝ} :\n    («expr =Θ[ ] » (fun x => exp (f x)) l fun x => exp (g x)) ↔ is_bounded_under (· ≤ ·) l fun x => |f x - g x| := by\n  simp only [is_bounded_under_le_abs, ← is_bounded_under_le_neg, neg_sub, is_Theta, is_O_exp_comp_exp_comp, pi.sub_def]\n#align is_Theta_exp_comp_exp_comp is_Theta_exp_comp_exp_comp\n\n",
 "is_O_one_exp_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =O[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- `real.exp (f x)` is bounded away from zero along a filter if and only if this filter is bounded\nfrom below under `f`. -/\n@[simp]\ntheorem is_O_one_exp_comp {f : α → exprℝ} :\n    («expr =O[ ] » (fun x => 1 : α → exprℝ) l fun x => exp (f x)) ↔ is_bounded_under (· ≥ ·) l f := by\n  simp only [← exp_zero, is_O_exp_comp_exp_comp, pi.sub_def, zero_sub, is_bounded_under_le_neg]\n#align is_O_one_exp_comp is_O_one_exp_comp\n\n",
 "is_O_exp_comp_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =O[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- `real.exp (f x)` is bounded away from zero along a filter if and only if this filter is bounded\nfrom below under `f`. -/\ntheorem is_O_exp_comp_one {f : α → exprℝ} :\n    «expr =O[ ] » (fun x => exp (f x)) l (fun x => 1 : α → exprℝ) ↔ is_bounded_under (· ≤ ·) l f := by\n  simp only [is_O_one_iff, norm_eq_abs, abs_exp, is_bounded_under_le_exp_comp]\n#align is_O_exp_comp_one is_O_exp_comp_one\n\n",
 "is_O_exp_comp_exp_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =O[ ] » -/\n@[simp]\ntheorem is_O_exp_comp_exp_comp {f g : α → exprℝ} :\n    («expr =O[ ] » (fun x => exp (f x)) l fun x => exp (g x)) ↔ is_bounded_under (· ≤ ·) l (f - g) :=\n  iff.trans (is_O_iff_is_bounded_under_le_div <| eventually_of_forall fun x => exp_ne_zero _) <| by\n    simp only [norm_eq_abs, abs_exp, ← exp_sub, is_bounded_under_le_exp_comp, pi.sub_def]\n#align is_O_exp_comp_exp_comp is_O_exp_comp_exp_comp\n\n",
 "exp_half":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem exp_half (x : exprℝ) : exp (x / 2) = sqrt (exp x) := by\n  rw [eq_comm, sqrt_eq_iff_sq_eq, sq, ← exp_add, add_halves] <;> exact (exp_pos _).le\n#align exp_half exp_half\n\n",
 "exp_bound_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Abhimanyu Pallavi Sudhir, Jean Lo, Calle Sönne\n-/\ntheorem exp_bound_sq (x z : exprℂ) (hz : «expr‖ ‖» z ≤ 1) :\n    «expr‖ ‖» (exp (x + z) - exp x - «expr • » z (exp x)) ≤ «expr‖ ‖» (exp x) * «expr‖ ‖» z ^ 2 :=\n  calc\n    «expr‖ ‖» (exp (x + z) - exp x - z * exp x) = «expr‖ ‖» (exp x * (exp z - 1 - z)) :=\n      by\n      congr\n      rw [exp_add]\n      ring\n    _ = «expr‖ ‖» (exp x) * «expr‖ ‖» (exp z - 1 - z) := norm_mul _ _\n    _ ≤ «expr‖ ‖» (exp x) * «expr‖ ‖» z ^ 2 := mul_le_mul_of_nonneg_left (abs_exp_sub_one_sub_id_le hz) (norm_nonneg _)\n    \n#align exp_bound_sq exp_bound_sq\n\n",
 "exp":
 "theorem continuous.exp (h : continuous f) : continuous fun y => exp (f y) :=\n  continuous_iff_continuous_at.2 fun x => h.continuous_at.exp\n#align continuous.exp continuous.exp\n\n",
 "continuous_on_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem continuous_on_exp {s : set (exprℝ)} : continuous_on exp s :=\n  continuous_exp.continuous_on\n#align continuous_on_exp continuous_on_exp\n\n",
 "continuous_exp":
 "@[continuity]\ntheorem continuous_exp : continuous exp :=\n  complex.continuous_re.comp complex.continuous_of_real.cexp\n#align continuous_exp continuous_exp\n\n",
 "comap_exp_nhds_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem comap_exp_nhds_zero : comap exp ((nhds) 0) = comap re at_bot :=\n  calc\n    comap exp ((nhds) 0) = comap re (comap real.exp ((nhds) 0)) := by\n      simp only [comap_comap, ← comap_abs_nhds_zero, (· ∘ ·), abs_exp]\n    _ = comap re at_bot := by rw [real.comap_exp_nhds_zero]\n    \n#align comap_exp_nhds_zero comap_exp_nhds_zero\n\n",
 "comap_exp_nhds_within_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\ntheorem comap_exp_nhds_within_zero : comap exp (nhds_within.ne 0) = comap re at_bot :=\n  by\n  have : «expr ⁻¹' » exp («expr ᶜ» {0}) = univ := eq_univ_of_forall exp_ne_zero\n  simp [nhds_within, comap_exp_nhds_zero, this]\n#align comap_exp_nhds_within_zero comap_exp_nhds_within_zero\n\n",
 "comap_exp_nhds_within_Ioi_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n@[simp]\ntheorem comap_exp_nhds_within_Ioi_zero : comap exp (nhds_within.gt 0) = at_bot := by\n  rw [← map_exp_at_bot, comap_map exp_injective]\n#align comap_exp_nhds_within_Ioi_zero comap_exp_nhds_within_Ioi_zero\n\n",
 "comap_exp_comap_abs_at_top":
 "theorem comap_exp_comap_abs_at_top : comap exp (comap abs at_top) = comap re at_top :=\n  calc\n    comap exp (comap abs at_top) = comap re (comap real.exp at_top) := by simp only [comap_comap, (· ∘ ·), abs_exp]\n    _ = comap re at_top := by rw [real.comap_exp_at_top]\n    \n#align comap_exp_comap_abs_at_top comap_exp_comap_abs_at_top\n\n",
 "comap_exp_at_top":
 "@[simp]\ntheorem comap_exp_at_top : comap exp at_top = at_top := by\n  rw [← map_exp_at_top, comap_map exp_injective, map_exp_at_top]\n#align comap_exp_at_top comap_exp_at_top\n\n",
 "coe_exp_order_iso_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem coe_exp_order_iso_apply (x : exprℝ) : (exp_order_iso x : exprℝ) = exp x :=\n  rfl\n#align coe_exp_order_iso_apply coe_exp_order_iso_apply\n\n",
 "coe_comp_exp_order_iso":
 "@[simp]\ntheorem coe_comp_exp_order_iso : coe ∘ exp_order_iso = exp :=\n  rfl\n#align coe_comp_exp_order_iso coe_comp_exp_order_iso\n\n",
 "cexp":
 "theorem continuous.cexp (h : continuous f) : continuous fun y => exp (f y) :=\n  continuous_iff_continuous_at.2 fun x => h.continuous_at.cexp\n#align continuous.cexp continuous.cexp\n\n"}