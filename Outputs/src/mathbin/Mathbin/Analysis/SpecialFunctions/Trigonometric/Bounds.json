{"sin_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2022 David Loeffler. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: David Loeffler\n-/\n/-- For 0 < x, we have sin x < x. -/\ntheorem sin_lt {x : exprℝ} (h : 0 < x) : sin x < x :=\n  by\n  cases' lt_or_le 1 x with h' h'\n  · exact (sin_le_one x).trans_lt h'\n  have hx : |x| = x := abs_of_nonneg h.le\n  have := le_of_abs_le (sin_bound <| show |x| ≤ 1 by rwa [hx])\n  rw [sub_le_iff_le_add', hx] at this\n  apply this.trans_lt\n  rw [sub_add, sub_lt_self_iff, sub_pos, div_eq_mul_inv (x ^ 3)]\n  refine' mul_lt_mul' _ (by norm_num) (by norm_num) (pow_pos h 3)\n  apply pow_le_pow_of_le_one h.le h'\n  norm_num\n#align sin_lt sin_lt\n\n",
 "sin_gt_sub_cube":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- For 0 < x ≤ 1 we have x - x ^ 3 / 4 < sin x.\n\nThis is also true for x > 1, but it's nontrivial for x just above 1. This inequality is not\ntight; the tighter inequality is sin x > x - x ^ 3 / 6 for all x > 0, but this inequality has\na simpler proof. -/\ntheorem sin_gt_sub_cube {x : exprℝ} (h : 0 < x) (h' : x ≤ 1) : x - x ^ 3 / 4 < sin x :=\n  by\n  have hx : |x| = x := abs_of_nonneg h.le\n  have := neg_le_of_abs_le (sin_bound <| show |x| ≤ 1 by rwa [hx])\n  rw [le_sub_iff_add_le, hx] at this\n  refine' lt_of_lt_of_le _ this\n  have : x ^ 3 / 4 - x ^ 3 / 6 = x ^ 3 * 12⁻¹ := by norm_num [div_eq_mul_inv, ← mul_sub]\n  rw [add_comm, sub_add, sub_neg_eq_add, sub_lt_sub_iff_left, ← lt_sub_iff_add_lt', this]\n  refine' mul_lt_mul' _ (by norm_num) (by norm_num) (pow_pos h 3)\n  apply pow_le_pow_of_le_one h.le h'\n  norm_num\n#align sin_gt_sub_cube sin_gt_sub_cube\n\n",
 "lt_tan":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- For all `0 ≤ x < π/2` we have `x < tan x`.\n\nThis is proved by checking that the function `tan x - x` vanishes\nat zero and has non-negative derivative. -/\ntheorem lt_tan (x : exprℝ) (h1 : 0 < x) (h2 : x < real.pi / 2) : x < tan x :=\n  by\n  let U := Ico 0 (real.pi / 2)\n  have intU : interior U = Ioo 0 (real.pi / 2) := interior_Ico\n  have half_pi_pos : 0 < real.pi / 2 := div_pos pi_pos two_pos\n  have cos_pos : ∀ {y : exprℝ}, y ∈ U → 0 < cos y := by\n    intro y hy\n    exact cos_pos_of_mem_Ioo (Ico_subset_Ioo_left (neg_lt_zero.mpr half_pi_pos) hy)\n  have sin_pos : ∀ {y : exprℝ}, y ∈ interior U → 0 < sin y :=\n    by\n    intro y hy\n    rw [intU] at hy\n    exact sin_pos_of_mem_Ioo (Ioo_subset_Ioo_right (div_le_self pi_pos.le one_le_two) hy)\n  have tan_cts_U : continuous_on tan U :=\n    by\n    apply continuous_on.mono continuous_on_tan\n    intro z hz\n    simp only [mem_set_of_eq]\n    exact (cos_pos hz).ne'\n  have tan_minus_id_cts : continuous_on (fun y : exprℝ => tan y - y) U := tan_cts_U.sub continuous_on_id\n  have deriv_pos : ∀ y : exprℝ, y ∈ interior U → 0 < deriv (fun y' : exprℝ => tan y' - y') y :=\n    by\n    intro y hy\n    have := cos_pos (interior_subset hy)\n    simp only [deriv_tan_sub_id y this.ne', one_div, gt_iff_lt, sub_pos]\n    have bd2 : cos y ^ 2 < 1 := by\n      apply lt_of_le_of_ne y.cos_sq_le_one\n      rw [cos_sq']\n      simpa only [ne.def, sub_eq_self, pow_eq_zero_iff, Nat.succ_pos'] using (sin_pos hy).ne'\n    rwa [lt_inv, inv_one]\n    · exact zero_lt_one\n    simpa only [sq, mul_self_pos] using this.ne'\n  have mono := convex.strict_mono_on_of_deriv_pos (convex_Ico 0 (real.pi / 2)) tan_minus_id_cts deriv_pos\n  have zero_in_U : (0 : exprℝ) ∈ U := by rwa [left_mem_Ico]\n  have x_in_U : x ∈ U := ⟨h1.le, h2⟩\n  simpa only [tan_zero, sub_zero, sub_pos] using mono zero_in_U x_in_U h1\n#align lt_tan lt_tan\n\n",
 "deriv_tan_sub_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The derivative of `tan x - x` is `1/(cos x)^2 - 1` away from the zeroes of cos. -/\ntheorem deriv_tan_sub_id (x : exprℝ) (h : cos x ≠ 0) : deriv (fun y : exprℝ => tan y - y) x = 1 / cos x ^ 2 - 1 :=\n  has_deriv_at.deriv <| by simpa using (has_deriv_at_tan h).add (has_deriv_at_id x).neg\n#align deriv_tan_sub_id deriv_tan_sub_id\n\n"}