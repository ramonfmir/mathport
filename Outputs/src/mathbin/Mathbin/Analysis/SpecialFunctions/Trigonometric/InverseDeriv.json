{"has_strict_deriv_at_arcsin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_strict_deriv_at_arcsin {x : exprℝ} (h₁ : x ≠ -1) (h₂ : x ≠ 1) :\n    has_strict_deriv_at arcsin (1 / sqrt (1 - x ^ 2)) x :=\n  (deriv_arcsin_aux h₁ h₂).1\n#align has_strict_deriv_at_arcsin has_strict_deriv_at_arcsin\n\n",
 "has_strict_deriv_at_arccos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_strict_deriv_at_arccos {x : exprℝ} (h₁ : x ≠ -1) (h₂ : x ≠ 1) :\n    has_strict_deriv_at arccos (-(1 / sqrt (1 - x ^ 2))) x :=\n  (has_strict_deriv_at_arcsin h₁ h₂).const_sub (real.pi / 2)\n#align has_strict_deriv_at_arccos has_strict_deriv_at_arccos\n\n",
 "has_deriv_within_at_arcsin_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_deriv_within_at_arcsin_Iic {x : exprℝ} (h : x ≠ 1) :\n    has_deriv_within_at arcsin (1 / sqrt (1 - x ^ 2)) (Iic x) x :=\n  by\n  rcases em (x = -1) with (rfl | h')\n  ·\n    convert (has_deriv_within_at_const _ _ (-(real.pi / 2))).congr _ _ <;>\n      simp (config := { contextual := true }) [arcsin_of_le_neg_one]\n  · exact (has_deriv_at_arcsin h' h).has_deriv_within_at\n#align has_deriv_within_at_arcsin_Iic has_deriv_within_at_arcsin_Iic\n\n",
 "has_deriv_within_at_arcsin_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_deriv_within_at_arcsin_Ici {x : exprℝ} (h : x ≠ -1) :\n    has_deriv_within_at arcsin (1 / sqrt (1 - x ^ 2)) (Ici x) x :=\n  by\n  rcases em (x = 1) with (rfl | h')\n  ·\n    convert (has_deriv_within_at_const _ _ (real.pi / 2)).congr _ _ <;>\n      simp (config := { contextual := true }) [arcsin_of_one_le]\n  · exact (has_deriv_at_arcsin h h').has_deriv_within_at\n#align has_deriv_within_at_arcsin_Ici has_deriv_within_at_arcsin_Ici\n\n",
 "has_deriv_within_at_arccos_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_deriv_within_at_arccos_Iic {x : exprℝ} (h : x ≠ 1) :\n    has_deriv_within_at arccos (-(1 / sqrt (1 - x ^ 2))) (Iic x) x :=\n  (has_deriv_within_at_arcsin_Iic h).const_sub _\n#align has_deriv_within_at_arccos_Iic has_deriv_within_at_arccos_Iic\n\n",
 "has_deriv_within_at_arccos_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_deriv_within_at_arccos_Ici {x : exprℝ} (h : x ≠ -1) :\n    has_deriv_within_at arccos (-(1 / sqrt (1 - x ^ 2))) (Ici x) x :=\n  (has_deriv_within_at_arcsin_Ici h).const_sub _\n#align has_deriv_within_at_arccos_Ici has_deriv_within_at_arccos_Ici\n\n",
 "has_deriv_at_arcsin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_deriv_at_arcsin {x : exprℝ} (h₁ : x ≠ -1) (h₂ : x ≠ 1) : has_deriv_at arcsin (1 / sqrt (1 - x ^ 2)) x :=\n  (has_strict_deriv_at_arcsin h₁ h₂).has_deriv_at\n#align has_deriv_at_arcsin has_deriv_at_arcsin\n\n",
 "has_deriv_at_arccos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem has_deriv_at_arccos {x : exprℝ} (h₁ : x ≠ -1) (h₂ : x ≠ 1) : has_deriv_at arccos (-(1 / sqrt (1 - x ^ 2))) x :=\n  (has_deriv_at_arcsin h₁ h₂).const_sub (real.pi / 2)\n#align has_deriv_at_arccos has_deriv_at_arccos\n\n",
 "differentiable_within_at_arcsin_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem differentiable_within_at_arcsin_Iic {x : exprℝ} : differentiable_within_at (exprℝ) arcsin (Iic x) x ↔ x ≠ 1 :=\n  by\n  refine' ⟨fun h => _, fun h => (has_deriv_within_at_arcsin_Iic h).differentiable_within_at⟩\n  rw [← neg_neg x, ← image_neg_Ici] at h\n  have := (h.comp (-x) differentiable_within_at_id.neg (maps_to_image _ _)).neg\n  simpa [(· ∘ ·), differentiable_within_at_arcsin_Ici] using this\n#align differentiable_within_at_arcsin_Iic differentiable_within_at_arcsin_Iic\n\n",
 "differentiable_within_at_arcsin_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem differentiable_within_at_arcsin_Ici {x : exprℝ} : differentiable_within_at (exprℝ) arcsin (Ici x) x ↔ x ≠ -1 :=\n  by\n  refine' ⟨_, fun h => (has_deriv_within_at_arcsin_Ici h).differentiable_within_at⟩\n  rintro h rfl\n  have : «expr =ᶠ[ ] » (sin ∘ arcsin) (nhds_within.ge (-1 : exprℝ)) id := by\n    filter_upwards [Icc_mem_nhds_within_Ici ⟨le_rfl, neg_lt_self (zero_lt_one' (exprℝ))⟩] with x using sin_arcsin'\n  have := h.has_deriv_within_at.sin.congr_of_eventually_eq this.symm (by simp)\n  simpa using (unique_diff_on_Ici _ _ left_mem_Ici).eq_deriv _ this (has_deriv_within_at_id _ _)\n#align differentiable_within_at_arcsin_Ici differentiable_within_at_arcsin_Ici\n\n",
 "differentiable_within_at_arccos_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem differentiable_within_at_arccos_Iic {x : exprℝ} : differentiable_within_at (exprℝ) arccos (Iic x) x ↔ x ≠ 1 :=\n  (differentiable_within_at_const_sub_iff _).trans differentiable_within_at_arcsin_Iic\n#align differentiable_within_at_arccos_Iic differentiable_within_at_arccos_Iic\n\n",
 "differentiable_within_at_arccos_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem differentiable_within_at_arccos_Ici {x : exprℝ} : differentiable_within_at (exprℝ) arccos (Ici x) x ↔ x ≠ -1 :=\n  (differentiable_within_at_const_sub_iff _).trans differentiable_within_at_arcsin_Ici\n#align differentiable_within_at_arccos_Ici differentiable_within_at_arccos_Ici\n\n",
 "differentiable_on_arcsin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem differentiable_on_arcsin : differentiable_on (exprℝ) arcsin («expr ᶜ» {-1, 1}) := fun x hx =>\n  (differentiable_at_arcsin.2 ⟨fun h => hx (or.inl h), fun h => hx (or.inr h)⟩).differentiable_within_at\n#align differentiable_on_arcsin differentiable_on_arcsin\n\n",
 "differentiable_on_arccos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem differentiable_on_arccos : differentiable_on (exprℝ) arccos («expr ᶜ» {-1, 1}) :=\n  differentiable_on_arcsin.const_sub _\n#align differentiable_on_arccos differentiable_on_arccos\n\n",
 "differentiable_at_arcsin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem differentiable_at_arcsin {x : exprℝ} : differentiable_at (exprℝ) arcsin x ↔ x ≠ -1 ∧ x ≠ 1 :=\n  ⟨fun h =>\n    ⟨differentiable_within_at_arcsin_Ici.1 h.differentiable_within_at,\n      differentiable_within_at_arcsin_Iic.1 h.differentiable_within_at⟩,\n    fun h => (has_deriv_at_arcsin h.1 h.2).differentiable_at⟩\n#align differentiable_at_arcsin differentiable_at_arcsin\n\n",
 "differentiable_at_arccos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem differentiable_at_arccos {x : exprℝ} : differentiable_at (exprℝ) arccos x ↔ x ≠ -1 ∧ x ≠ 1 :=\n  (differentiable_at_const_sub_iff _).trans differentiable_at_arcsin\n#align differentiable_at_arccos differentiable_at_arccos\n\n",
 "deriv_arcsin_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Abhimanyu Pallavi Sudhir, Jean Lo, Calle Sönne, Benjamin Davidson\n-/\ntheorem deriv_arcsin_aux {x : exprℝ} (h₁ : x ≠ -1) (h₂ : x ≠ 1) :\n    has_strict_deriv_at arcsin (1 / sqrt (1 - x ^ 2)) x ∧ cont_diff_at (exprℝ) («expr⊤») arcsin x :=\n  by\n  cases' h₁.lt_or_lt with h₁ h₁\n  · have : 1 - x ^ 2 < 0 := by nlinarith [h₁]\n    rw [sqrt_eq_zero'.2 this.le, div_zero]\n    have : «expr =ᶠ[ ] » arcsin ((nhds) x) fun _ => -(real.pi / 2) :=\n      (gt_mem_nhds h₁).mono fun y hy => arcsin_of_le_neg_one hy.le\n    exact\n      ⟨(has_strict_deriv_at_const _ _).congr_of_eventually_eq this.symm, cont_diff_at_const.congr_of_eventually_eq this⟩\n  cases' h₂.lt_or_lt with h₂ h₂\n  · have : 0 < sqrt (1 - x ^ 2) := sqrt_pos.2 (by nlinarith [h₁, h₂])\n    simp only [← cos_arcsin, one_div] at this⊢\n    exact\n      ⟨sin_local_homeomorph.has_strict_deriv_at_symm ⟨h₁, h₂⟩ this.ne' (has_strict_deriv_at_sin _),\n        sin_local_homeomorph.cont_diff_at_symm_deriv this.ne' ⟨h₁, h₂⟩ (has_deriv_at_sin _) cont_diff_sin.cont_diff_at⟩\n  · have : 1 - x ^ 2 < 0 := by nlinarith [h₂]\n    rw [sqrt_eq_zero'.2 this.le, div_zero]\n    have : «expr =ᶠ[ ] » arcsin ((nhds) x) fun _ => real.pi / 2 :=\n      (lt_mem_nhds h₂).mono fun y hy => arcsin_of_one_le hy.le\n    exact\n      ⟨(has_strict_deriv_at_const _ _).congr_of_eventually_eq this.symm, cont_diff_at_const.congr_of_eventually_eq this⟩\n#align deriv_arcsin_aux deriv_arcsin_aux\n\n",
 "deriv_arcsin":
 "@[simp]\ntheorem deriv_arcsin : deriv arcsin = fun x => 1 / sqrt (1 - x ^ 2) :=\n  by\n  funext x\n  by_cases h : x ≠ -1 ∧ x ≠ 1\n  · exact (has_deriv_at_arcsin h.1 h.2).deriv\n  · rw [deriv_zero_of_not_differentiable_at (mt differentiable_at_arcsin.1 h)]\n    simp only [not_and_or, ne.def, not_not] at h\n    rcases h with (rfl | rfl) <;> simp\n#align deriv_arcsin deriv_arcsin\n\n",
 "deriv_arccos":
 "@[simp]\ntheorem deriv_arccos : deriv arccos = fun x => -(1 / sqrt (1 - x ^ 2)) :=\n  funext fun x => (deriv_const_sub _).trans <| by simp only [deriv_arcsin]\n#align deriv_arccos deriv_arccos\n\n",
 "cont_diff_on_arcsin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem cont_diff_on_arcsin {n : «exprℕ∞»} : cont_diff_on (exprℝ) n arcsin («expr ᶜ» {-1, 1}) := fun x hx =>\n  (cont_diff_at_arcsin (mt or.inl hx) (mt or.inr hx)).cont_diff_within_at\n#align cont_diff_on_arcsin cont_diff_on_arcsin\n\n",
 "cont_diff_on_arccos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem cont_diff_on_arccos {n : «exprℕ∞»} : cont_diff_on (exprℝ) n arccos («expr ᶜ» {-1, 1}) :=\n  cont_diff_on_const.sub cont_diff_on_arcsin\n#align cont_diff_on_arccos cont_diff_on_arccos\n\n",
 "cont_diff_at_arcsin_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cont_diff_at_arcsin_iff {x : exprℝ} {n : «exprℕ∞»} : cont_diff_at (exprℝ) n arcsin x ↔ n = 0 ∨ x ≠ -1 ∧ x ≠ 1 :=\n  ⟨fun h =>\n    or_iff_not_imp_left.2 fun hn => differentiable_at_arcsin.1 <| h.differentiable_at <| enat.one_le_iff_ne_zero.2 hn,\n    fun h =>\n    h.elim (fun hn => hn.symm ▸ (cont_diff_zero.2 continuous_arcsin).cont_diff_at) fun hx =>\n      cont_diff_at_arcsin hx.1 hx.2⟩\n#align cont_diff_at_arcsin_iff cont_diff_at_arcsin_iff\n\n",
 "cont_diff_at_arcsin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cont_diff_at_arcsin {x : exprℝ} (h₁ : x ≠ -1) (h₂ : x ≠ 1) {n : «exprℕ∞»} : cont_diff_at (exprℝ) n arcsin x :=\n  (deriv_arcsin_aux h₁ h₂).2.of_le le_top\n#align cont_diff_at_arcsin cont_diff_at_arcsin\n\n",
 "cont_diff_at_arccos_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cont_diff_at_arccos_iff {x : exprℝ} {n : «exprℕ∞»} : cont_diff_at (exprℝ) n arccos x ↔ n = 0 ∨ x ≠ -1 ∧ x ≠ 1 :=\n  by\n  refine' iff.trans ⟨fun h => _, fun h => _⟩ cont_diff_at_arcsin_iff <;>\n    simpa [arccos] using (@cont_diff_at_const _ _ _ _ _ _ _ _ _ _ (real.pi / 2)).sub h\n#align cont_diff_at_arccos_iff cont_diff_at_arccos_iff\n\n",
 "cont_diff_at_arccos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cont_diff_at_arccos {x : exprℝ} (h₁ : x ≠ -1) (h₂ : x ≠ 1) {n : «exprℕ∞»} : cont_diff_at (exprℝ) n arccos x :=\n  cont_diff_at_const.sub (cont_diff_at_arcsin h₁ h₂)\n#align cont_diff_at_arccos cont_diff_at_arccos\n\n"}