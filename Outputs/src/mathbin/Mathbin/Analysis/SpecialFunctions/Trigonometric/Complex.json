{"tan_two_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem tan_two_mul {z : exprℂ} : tan (2 * z) = 2 * tan z / (1 - tan z ^ 2) :=\n  by\n  by_cases h : ∀ k : ℤ, z ≠ (2 * k + 1) * real.pi / 2\n  · rw [two_mul, two_mul, sq, tan_add (or.inl ⟨h, h⟩)]\n  · rw [not_forall_not] at h\n    rw [two_mul, two_mul, sq, tan_add (or.inr ⟨h, h⟩)]\n#align tan_two_mul tan_two_mul\n\n",
 "tan_ne_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tan_ne_zero_iff {θ : exprℂ} : tan θ ≠ 0 ↔ ∀ k : ℤ, θ ≠ k * real.pi / 2 := by\n  rw [← not_exists, not_iff_not, tan_eq_zero_iff]\n#align tan_ne_zero_iff tan_ne_zero_iff\n\n",
 "tan_int_mul_pi_div_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tan_int_mul_pi_div_two (n : ℤ) : tan (n * real.pi / 2) = 0 :=\n  tan_eq_zero_iff.mpr (by use n)\n#align tan_int_mul_pi_div_two tan_int_mul_pi_div_two\n\n",
 "tan_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tan_eq_zero_iff {θ : exprℂ} : tan θ = 0 ↔ ∃ k : ℤ, θ = k * real.pi / 2 :=\n  by\n  have h := (sin_two_mul θ).symm\n  rw [mul_assoc] at h\n  rw [tan, div_eq_zero_iff, ← mul_eq_zero, ← MulZeroClass.zero_mul (1 / 2 : exprℂ), mul_one_div,\n    CancelDenoms.cancel_factors_eq_div h two_ne_zero, mul_comm]\n  simpa only [zero_div, MulZeroClass.zero_mul, ne.def, not_false_iff, field_simps] using sin_eq_zero_iff\n#align tan_eq_zero_iff tan_eq_zero_iff\n\n",
 "tan_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tan_eq {z : exprℂ}\n    (h :\n      ((∀ k : ℤ, (z.re : exprℂ) ≠ (2 * k + 1) * real.pi / 2) ∧\n          ∀ l : ℤ, (z.im : exprℂ) * I ≠ (2 * l + 1) * real.pi / 2) ∨\n        (∃ k : ℤ, (z.re : exprℂ) = (2 * k + 1) * real.pi / 2) ∧\n          ∃ l : ℤ, (z.im : exprℂ) * I = (2 * l + 1) * real.pi / 2) :\n    tan z = (tan z.re + tanh z.im * I) / (1 - tan z.re * tanh z.im * I) := by\n  convert tan_add_mul_I h <;> exact (re_add_im z).symm\n#align tan_eq tan_eq\n\n",
 "tan_add_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tan_add_mul_I {x y : exprℂ}\n    (h :\n      ((∀ k : ℤ, x ≠ (2 * k + 1) * real.pi / 2) ∧ ∀ l : ℤ, y * I ≠ (2 * l + 1) * real.pi / 2) ∨\n        (∃ k : ℤ, x = (2 * k + 1) * real.pi / 2) ∧ ∃ l : ℤ, y * I = (2 * l + 1) * real.pi / 2) :\n    tan (x + y * I) = (tan x + tanh y * I) / (1 - tan x * tanh y * I) := by rw [tan_add h, tan_mul_I, mul_assoc]\n#align tan_add_mul_I tan_add_mul_I\n\n",
 "tan_add'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tan_add' {x y : exprℂ} (h : (∀ k : ℤ, x ≠ (2 * k + 1) * real.pi / 2) ∧ ∀ l : ℤ, y ≠ (2 * l + 1) * real.pi / 2) :\n    tan (x + y) = (tan x + tan y) / (1 - tan x * tan y) :=\n  tan_add (or.inl h)\n#align tan_add' tan_add'\n\n",
 "tan_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem tan_add {x y : exprℂ}\n    (h :\n      ((∀ k : ℤ, x ≠ (2 * k + 1) * real.pi / 2) ∧ ∀ l : ℤ, y ≠ (2 * l + 1) * real.pi / 2) ∨\n        (∃ k : ℤ, x = (2 * k + 1) * real.pi / 2) ∧ ∃ l : ℤ, y = (2 * l + 1) * real.pi / 2) :\n    tan (x + y) = (tan x + tan y) / (1 - tan x * tan y) :=\n  by\n  rcases h with (⟨h1, h2⟩ | ⟨⟨k, rfl⟩, ⟨l, rfl⟩⟩)\n  · rw [tan, sin_add, cos_add, ←\n      div_div_div_cancel_right (sin x * cos y + cos x * sin y)\n        (mul_ne_zero (cos_ne_zero_iff.mpr h1) (cos_ne_zero_iff.mpr h2)),\n      add_div, sub_div]\n    simp only [← div_mul_div_comm, ← tan, mul_one, one_mul, div_self (cos_ne_zero_iff.mpr h1),\n      div_self (cos_ne_zero_iff.mpr h2)]\n  · obtain ⟨t, hx, hy, hxy⟩ := tan_int_mul_pi_div_two, t (2 * k + 1), t (2 * l + 1), t (2 * k + 1 + (2 * l + 1))\n    simp only [Int.cast_add, Int.cast_bit0, Int.cast_mul, Int.cast_one, hx, hy] at hx hy hxy\n    rw [hx, hy, add_zero, zero_div, mul_div_assoc, mul_div_assoc, ←\n      add_mul (2 * (k : exprℂ) + 1) (2 * l + 1) (real.pi / 2), ← mul_div_assoc, hxy]\n#align tan_add tan_add\n\n",
 "sin_surjective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem sin_surjective : function.surjective sin := by\n  intro x\n  rcases cos_surjective x with ⟨z, rfl⟩\n  exact ⟨z + real.pi / 2, sin_add_pi_div_two z⟩\n#align sin_surjective sin_surjective\n\n",
 "sin_ne_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem sin_ne_zero_iff {θ : exprℂ} : sin θ ≠ 0 ↔ ∀ k : ℤ, θ ≠ k * real.pi := by\n  rw [← not_exists, not_iff_not, sin_eq_zero_iff]\n#align sin_ne_zero_iff sin_ne_zero_iff\n\n",
 "sin_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem sin_eq_zero_iff {θ : exprℂ} : sin θ = 0 ↔ ∃ k : ℤ, θ = k * real.pi :=\n  by\n  rw [← complex.cos_sub_pi_div_two, cos_eq_zero_iff]\n  constructor\n  · rintro ⟨k, hk⟩\n    use k + 1\n    field_simp [eq_add_of_sub_eq hk]\n    ring\n  · rintro ⟨k, rfl⟩\n    use k - 1\n    field_simp\n    ring\n#align sin_eq_zero_iff sin_eq_zero_iff\n\n",
 "sin_eq_sin_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem sin_eq_sin_iff {x y : exprℝ} :\n    sin x = sin y ↔ ∃ k : ℤ, y = 2 * k * real.pi + x ∨ y = (2 * k + 1) * real.pi - x := by\n  exact_mod_cast @complex.sin_eq_sin_iff x y\n#align sin_eq_sin_iff sin_eq_sin_iff\n\n",
 "range_sin":
 "@[simp]\ntheorem range_sin : range sin = Set.univ :=\n  sin_surjective.range_eq\n#align range_sin range_sin\n\n",
 "range_cos":
 "@[simp]\ntheorem range_cos : range cos = Set.univ :=\n  cos_surjective.range_eq\n#align range_cos range_cos\n\n",
 "mul_lt_sin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem mul_lt_sin {x : exprℝ} (hx : 0 < x) (hx' : x < real.pi / 2) : 2 / real.pi * x < sin x :=\n  by\n  rw [← inv_div]\n  simpa [-inv_div, pi_div_two_pos.ne'] using @lt_sin_mul ((real.pi / 2)⁻¹ * x) _ _\n  · exact mul_pos (inv_pos.2 pi_div_two_pos) hx\n  · rwa [← div_eq_inv_mul, div_lt_one pi_div_two_pos]\n#align mul_lt_sin mul_lt_sin\n\n",
 "mul_le_sin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- In the range `[0, π / 2]`, we have a linear lower bound on `sin`. This inequality forms one half\nof Jordan's inequality, the other half is `real.sin_lt` -/\ntheorem mul_le_sin {x : exprℝ} (hx : 0 ≤ x) (hx' : x ≤ real.pi / 2) : 2 / real.pi * x ≤ sin x :=\n  by\n  rw [← inv_div]\n  simpa [-inv_div, pi_div_two_pos.ne'] using @le_sin_mul ((real.pi / 2)⁻¹ * x) _ _\n  · exact mul_nonneg (inv_nonneg.2 pi_div_two_pos.le) hx\n  · rwa [← div_eq_inv_mul, div_le_one pi_div_two_pos]\n#align mul_le_sin mul_le_sin\n\n",
 "lt_sin_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem lt_sin_mul {x : exprℝ} (hx : 0 < x) (hx' : x < 1) : x < sin (real.pi / 2 * x) := by\n  simpa [mul_comm x] using\n    strict_concave_on_sin_Icc.2 ⟨le_rfl, pi_pos.le⟩ ⟨pi_div_two_pos.le, half_le_self pi_pos.le⟩ pi_div_two_pos.ne\n      (sub_pos.2 hx') hx\n#align lt_sin_mul lt_sin_mul\n\n",
 "le_sin_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem le_sin_mul {x : exprℝ} (hx : 0 ≤ x) (hx' : x ≤ 1) : x ≤ sin (real.pi / 2 * x) := by\n  simpa [mul_comm x] using\n    strict_concave_on_sin_Icc.concave_on.2 ⟨le_rfl, pi_pos.le⟩ ⟨pi_div_two_pos.le, half_le_self pi_pos.le⟩\n      (sub_nonneg.2 hx') hx\n#align le_sin_mul le_sin_mul\n\n",
 "cos_surjective":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (w «expr ≠ » 0) -/\ntheorem cos_surjective : function.surjective cos := by\n  intro x\n  obtain ⟨w, w₀, hw⟩ : ∃ (w : _)(_ : w ≠ 0), 1 * w * w + -2 * x * w + 1 = 0 :=\n    by\n    rcases exists_quadratic_eq_zero one_ne_zero ⟨_, (cpow_nat_inv_pow _ two_ne_zero).symm.trans <| pow_two _⟩ with\n      ⟨w, hw⟩\n    refine' ⟨w, _, hw⟩\n    rintro rfl\n    simpa only [zero_add, one_ne_zero, MulZeroClass.mul_zero] using hw\n  refine' ⟨log w / I, cos_eq_iff_quadratic.2 _⟩\n  rw [div_mul_cancel _ I_ne_zero, exp_log w₀]\n  convert hw\n  ring\n#align cos_surjective cos_surjective\n\n",
 "cos_ne_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem cos_ne_zero_iff {θ : exprℝ} : cos θ ≠ 0 ↔ ∀ k : ℤ, θ ≠ (2 * k + 1) * real.pi / 2 := by\n  rw [← not_exists, not_iff_not, cos_eq_zero_iff]\n#align cos_ne_zero_iff cos_ne_zero_iff\n\n",
 "cos_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem cos_eq_zero_iff {θ : exprℝ} : cos θ = 0 ↔ ∃ k : ℤ, θ = (2 * k + 1) * real.pi / 2 := by\n  exact_mod_cast @complex.cos_eq_zero_iff θ\n#align cos_eq_zero_iff cos_eq_zero_iff\n\n",
 "cos_eq_iff_quadratic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem cos_eq_iff_quadratic {z w : exprℂ} : cos z = w ↔ exp (z * I) ^ 2 - 2 * w * exp (z * I) + 1 = 0 :=\n  by\n  rw [← sub_eq_zero]\n  field_simp [cos, exp_neg, exp_ne_zero]\n  refine' Eq.congr _ rfl\n  ring\n#align cos_eq_iff_quadratic cos_eq_iff_quadratic\n\n",
 "cos_eq_cos_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem cos_eq_cos_iff {x y : exprℝ} : cos x = cos y ↔ ∃ k : ℤ, y = 2 * k * real.pi + x ∨ y = 2 * k * real.pi - x := by\n  exact_mod_cast @complex.cos_eq_cos_iff x y\n#align cos_eq_cos_iff cos_eq_cos_iff\n\n",
 "continuous_tan":
 "@[continuity]\ntheorem continuous_tan : Continuous fun x : { x | cos x ≠ 0 } => tan x :=\n  continuousOn_iff_continuous_restrict.1 continuous_on_tan\n#align continuous_tan continuous_tan\n\n",
 "continuous_on_tan":
 "theorem continuous_on_tan : ContinuousOn tan { x | cos x ≠ 0 } :=\n  continuous_on_sin.div continuous_on_cos fun x => id\n#align continuous_on_tan continuous_on_tan\n\n"}