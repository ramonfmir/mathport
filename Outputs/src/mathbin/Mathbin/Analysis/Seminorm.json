{"zero_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n@[simp]\ntheorem zero_comp (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) : (0 : Seminorm 𝕜₂ E₂).comp f = 0 :=\n  ext fun _ => rfl\n#align zero_comp zero_comp\n\n",
 "zero_apply":
 "@[simp]\ntheorem zero_apply (x : E) : (0 : Seminorm 𝕜 E) x = 0 :=\n  rfl\n#align zero_apply zero_apply\n\n",
 "vadd_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- The image of a closed ball under addition with a singleton is another closed ball. -/\ntheorem vadd_closed_ball (p : Seminorm 𝕜 E) : «expr +ᵥ » x (p.closed_ball y r) = p.closed_ball («expr +ᵥ » x y) r :=\n  letI := AddGroupSeminorm.toSeminormedAddCommGroup p.to_add_group_seminorm\n  Metric.vadd_closedBall x y r\n#align vadd_closed_ball vadd_closed_ball\n\n",
 "vadd_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- The image of a ball under addition with a singleton is another ball. -/\ntheorem vadd_ball (p : Seminorm 𝕜 E) : «expr +ᵥ » x (p.ball y r) = p.ball («expr +ᵥ » x y) r :=\n  letI := AddGroupSeminorm.toSeminormedAddCommGroup p.to_add_group_seminorm\n  Metric.vadd_ball x y r\n#align vadd_ball vadd_ball\n\n",
 "uniform_continuous'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\nprotected theorem uniform_continuous' [UniformSpace E] [UniformAddGroup E] [ContinuousConstSMul 𝕜 E] {p : Seminorm 𝕜 E}\n    {r : exprℝ} (hr : 0 < r) (hp : p.closed_ball 0 r ∈ ((nhds) 0 : Filter E)) : UniformContinuous p :=\n  Seminorm.uniformContinuous_of_continuousAt_zero (continuousAt_zero' hr hp)\n#align uniform_continuous' uniform_continuous'\n\n",
 "uniformContinuous_of_continuousAt_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print uniformContinuous_of_continuousAt_zero /-\nprotected theorem uniformContinuous_of_continuousAt_zero [UniformSpace E] [UniformAddGroup E] {p : Seminorm 𝕝 E}\n    (hp : ContinuousAt p 0) : UniformContinuous p :=\n  by\n  have hp : Filter.Tendsto p ((nhds) 0) ((nhds) 0) := map_zero p ▸ hp\n  rw [UniformContinuous, uniformity_eq_comap_nhds_zero_swapped, Metric.uniformity_eq_comap_nhds_zero,\n    Filter.tendsto_comap_iff]\n  exact\n    tendsto_of_tendsto_of_tendsto_of_le_of_le tendsto_const_nhds (hp.comp Filter.tendsto_comap) (fun xy => dist_nonneg)\n      fun xy => p.norm_sub_map_le_sub _ _\n#align uniform_continuous_of_continuous_at_zero uniformContinuous_of_continuousAt_zero\n-/\n\n",
 "symmetric_ball_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem symmetric_ball_zero (r : exprℝ) (hx : x ∈ ball p 0 r) : -x ∈ ball p 0 r :=\n  balanced_ball_zero p r (-1) (by rw [norm_neg, norm_one]) ⟨x, hx, by rw [neg_smul, one_smul]⟩\n#align symmetric_ball_zero symmetric_ball_zero\n\n",
 "sup_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem sup_apply (p q : Seminorm 𝕜 E) (x : E) : («expr ⊔ » p q) x = «expr ⊔ » (p x) (q x) :=\n  rfl\n#align sup_apply sup_apply\n\n",
 "sub_mem_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem sub_mem_ball (p : Seminorm 𝕜 E) (x₁ x₂ y : E) (r : exprℝ) : x₁ - x₂ ∈ p.ball y r ↔ x₁ ∈ p.ball (x₂ + y) r := by\n  simp_rw [mem_ball, sub_sub]\n#align sub_mem_ball sub_mem_ball\n\n",
 "smul_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_sup [SMul R (exprℝ)] [SMul R (nnreal)] [IsScalarTower R (nnreal) (exprℝ)] (r : R) (p q : Seminorm 𝕜 E) :\n    «expr • » r («expr ⊔ » p q) = «expr ⊔ » («expr • » r p) («expr • » r q) :=\n  have real.smul_max : ∀ x y : exprℝ, «expr • » r (max x y) = max («expr • » r x) («expr • » r y) := fun x y => by\n    simpa only [← smul_eq_mul, ← NNReal.smul_def, smul_one_smul (nnreal) r (_ : exprℝ)] using\n      mul_max_of_nonneg x y («expr • » r 1 : nnreal).coe_nonneg\n  ext fun x => real.smul_max _ _\n#align smul_sup smul_sup\n\n",
 "smul_le_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_le_smul {p q : Seminorm 𝕜 E} {a b : nnreal} (hpq : p ≤ q) (hab : a ≤ b) : «expr • » a p ≤ «expr • » b q :=\n  by\n  simp_rw [le_def, coe_smul]\n  intro x\n  simp_rw [Pi.smul_apply, NNReal.smul_def, smul_eq_mul]\n  exact mul_le_mul hab (hpq x) (map_nonneg p x) (NNReal.coe_nonneg b)\n#align smul_le_smul smul_le_smul\n\n",
 "smul_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_inf [SMul R (exprℝ)] [SMul R (nnreal)] [IsScalarTower R (nnreal) (exprℝ)] (r : R) (p q : Seminorm 𝕜 E) :\n    «expr • » r («expr ⊓ » p q) = «expr ⊓ » («expr • » r p) («expr • » r q) :=\n  by\n  ext\n  simp_rw [smul_apply, inf_apply, smul_apply, ← smul_one_smul (nnreal) r (_ : exprℝ), NNReal.smul_def, smul_eq_mul,\n    Real.mul_infᵢ_of_nonneg (Subtype.prop _), mul_add]\n#align smul_inf smul_inf\n\n",
 "smul_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_comp (p : Seminorm 𝕜₂ E₂) (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) (c : R) :\n    («expr • » c p).comp f = «expr • » c (p.comp f) :=\n  ext fun _ => rfl\n#align smul_comp smul_comp\n\n",
 "smul_closed_ball_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem smul_closed_ball_zero {p : Seminorm 𝕜 E} {k : 𝕜} {r : exprℝ} (hk : 0 < «expr‖ ‖» k) :\n    «expr • » k (p.closed_ball 0 r) = p.closed_ball 0 («expr‖ ‖» k * r) :=\n  by\n  refine' subset_antisymm smul_closed_ball_subset _\n  intro x\n  rw [Set.mem_smul_set, Seminorm.mem_closedBall_zero]\n  refine' fun hx => ⟨«expr • » k⁻¹ x, _, _⟩\n  ·\n    rwa [Seminorm.mem_closedBall_zero, map_smul_eq_mul, norm_inv, ← mul_le_mul_left hk, ← mul_assoc, ←\n      div_eq_mul_inv («expr‖ ‖» k) («expr‖ ‖» k), div_self (ne_of_gt hk), one_mul]\n  rw [← smul_assoc, smul_eq_mul, ← div_eq_mul_inv, div_self (norm_pos_iff.mp hk), one_smul]\n#align smul_closed_ball_zero smul_closed_ball_zero\n\n",
 "smul_closed_ball_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem smul_closed_ball_subset {p : Seminorm 𝕜 E} {k : 𝕜} {r : exprℝ} :\n    «expr • » k (p.closed_ball 0 r) ⊆ p.closed_ball 0 («expr‖ ‖» k * r) :=\n  by\n  rintro x ⟨y, hy, h⟩\n  rw [Seminorm.mem_closedBall_zero, ← h, map_smul_eq_mul]\n  rw [Seminorm.mem_closedBall_zero] at hy\n  exact mul_le_mul_of_nonneg_left hy (norm_nonneg _)\n#align smul_closed_ball_subset smul_closed_ball_subset\n\n",
 "smul_ball_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem smul_ball_zero {p : Seminorm 𝕜 E} {k : 𝕜} {r : exprℝ} (hk : k ≠ 0) :\n    «expr • » k (p.ball 0 r) = p.ball 0 («expr‖ ‖» k * r) :=\n  by\n  ext\n  rw [mem_smul_set_iff_inv_smul_mem₀ hk, p.mem_ball_zero, p.mem_ball_zero, map_smul_eq_mul, norm_inv, ← div_eq_inv_mul,\n    div_lt_iff (norm_pos_iff.2 hk), mul_comm]\n#align smul_ball_zero smul_ball_zero\n\n",
 "smul_ball_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem smul_ball_preimage (p : Seminorm 𝕜 E) (y : E) (r : exprℝ) (a : 𝕜) (ha : a ≠ 0) :\n    «expr ⁻¹' » ((«expr • » · ·) a) (p.ball y r) = p.ball («expr • » a⁻¹ y) (r / «expr‖ ‖» a) :=\n  Set.ext fun _ => by\n    rw [mem_preimage, mem_ball, mem_ball, lt_div_iff (norm_pos_iff.mpr ha), mul_comm, ← map_smul_eq_mul p, smul_sub,\n      smul_inv_smul₀ ha]\n#align smul_ball_preimage smul_ball_preimage\n\n",
 "smul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_apply [SMul R (exprℝ)] [SMul R (nnreal)] [IsScalarTower R (nnreal) (exprℝ)] (r : R) (p : Seminorm 𝕜 E)\n    (x : E) : («expr • » r p) x = «expr • » r (p x) :=\n  rfl\n#align smul_apply smul_apply\n\n",
 "restrict_scalars_closed_ball":
 "@[simp]\ntheorem restrict_scalars_closed_ball (p : Seminorm 𝕜' E) : (p.restrict_scalars 𝕜).closed_ball = p.closed_ball :=\n  rfl\n#align restrict_scalars_closed_ball restrict_scalars_closed_ball\n\n",
 "restrict_scalars_ball":
 "@[simp]\ntheorem restrict_scalars_ball (p : Seminorm 𝕜' E) : (p.restrict_scalars 𝕜).ball = p.ball :=\n  rfl\n#align restrict_scalars_ball restrict_scalars_ball\n\n",
 "preimage_metric_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem preimage_metric_closed_ball {r : exprℝ} : «expr ⁻¹' » p (Metric.closedBall 0 r) = { x | p x ≤ r } :=\n  by\n  ext x\n  simp only [mem_set_of, mem_preimage, mem_closedBall_zero_iff, Real.norm_of_nonneg (map_nonneg p _)]\n#align preimage_metric_closed_ball preimage_metric_closed_ball\n\n",
 "preimage_metric_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem preimage_metric_ball {r : exprℝ} : «expr ⁻¹' » p (Metric.ball 0 r) = { x | p x < r } :=\n  by\n  ext x\n  simp only [mem_set_of, mem_preimage, mem_ball_zero_iff, Real.norm_of_nonneg (map_nonneg p _)]\n#align preimage_metric_ball preimage_metric_ball\n\n",
 "norm_sub_map_le_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_sub_map_le_sub (p : Seminorm 𝕜 E) (x y : E) : «expr‖ ‖» (p x - p y) ≤ p (x - y) :=\n  abs_sub_map_le_sub p x y\n#align norm_sub_map_le_sub norm_sub_map_le_sub\n\n",
 "neg_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print neg_ball /-\n@[simp]\ntheorem neg_ball (p : Seminorm 𝕜 E) (r : exprℝ) (x : E) : -ball p x r = ball p (-x) r :=\n  by\n  ext\n  rw [mem_neg, mem_ball, mem_ball, ← neg_add', sub_neg_eq_add, map_neg_eq_map]\n#align neg_ball neg_ball\n-/\n\n",
 "mem_closed_ball_zero":
 "theorem mem_closed_ball_zero : y ∈ closedBall p 0 r ↔ p y ≤ r := by rw [mem_closed_ball, sub_zero]\n#align mem_closed_ball_zero mem_closed_ball_zero\n\n",
 "mem_closed_ball_self":
 "theorem mem_closed_ball_self (hr : 0 ≤ r) : x ∈ closedBall p x r := by simp [hr]\n#align mem_closed_ball_self mem_closed_ball_self\n\n",
 "mem_closed_ball":
 "@[simp]\ntheorem mem_closed_ball : y ∈ closedBall p x r ↔ p (y - x) ≤ r :=\n  iff.rfl\n#align mem_closed_ball mem_closed_ball\n\n",
 "mem_ball_zero":
 "theorem mem_ball_zero : y ∈ ball p 0 r ↔ p y < r := by rw [mem_ball, sub_zero]\n#align mem_ball_zero mem_ball_zero\n\n",
 "mem_ball_self":
 "theorem mem_ball_self (hr : 0 < r) : x ∈ ball p x r := by simp [hr]\n#align mem_ball_self mem_ball_self\n\n",
 "mem_ball":
 "@[simp]\ntheorem mem_ball : y ∈ ball p x r ↔ p (y - x) < r :=\n  iff.rfl\n#align mem_ball mem_ball\n\n",
 "lt_def":
 "theorem lt_def {p q : Seminorm 𝕜 E} : p < q ↔ p ≤ q ∧ ∃ x, p x < q x :=\n  Pi.lt_def\n#align lt_def lt_def\n\n",
 "le_def":
 "theorem le_def {p q : Seminorm 𝕜 E} : p ≤ q ↔ ∀ x, p x ≤ q x :=\n  iff.rfl\n#align le_def le_def\n\n",
 "is_lub_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↥ » -/\nprivate theorem seminorm.is_lub_Sup (s : Set (Seminorm 𝕜 E)) (hs₁ : BddAbove s) (hs₂ : s.nonempty) : IsLUB s (supₛ s) :=\n  by\n  refine' ⟨fun p hp x => _, fun p hp x => _⟩ <;> haveI : Nonempty («expr↥ » s) := hs₂.coe_sort <;>\n    rw [Seminorm.coe_supₛ_eq hs₁, supᵢ_apply]\n  · rcases hs₁ with ⟨q, hq⟩\n    exact le_csupᵢ ⟨q x, forall_range_iff.mpr fun i : s => hq i.2 x⟩ ⟨p, hp⟩\n  · exact csupᵢ_le fun q => hp q.2 x\n#align seminorm.is_lub_Sup seminorm.is_lub_Sup\n\n",
 "inf_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem inf_apply (p q : Seminorm 𝕜 E) (x : E) :\n    («expr ⊓ » p q) x =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (p u + q (x - u)) :=\n  rfl\n#align inf_apply inf_apply\n\n",
 "finset_sup_le_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem finset_sup_le_sum (p : ι → Seminorm 𝕜 E) (s : Finset ι) :\n    s.sup p ≤ finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (p i) :=\n  by\n  classical\n    refine' finset.sup_le_iff.mpr _\n    intro i hi\n    rw [Finset.sum_eq_sum_diff_singleton_add hi, le_add_iff_nonneg_left]\n    exact bot_le\n#align finset_sup_le_sum finset_sup_le_sum\n\n",
 "finset_sup_apply_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem finset_sup_apply_lt {p : ι → Seminorm 𝕜 E} {s : Finset ι} {x : E} {a : exprℝ} (ha : 0 < a)\n    (h : ∀ i, i ∈ s → p i x < a) : s.sup p x < a :=\n  by\n  lift a to nnreal using ha.le\n  rw [finset_sup_apply, NNReal.coe_lt_coe, Finset.sup_lt_iff]\n  · exact h\n  · exact nnreal.coe_pos.mpr ha\n#align finset_sup_apply_lt finset_sup_apply_lt\n\n",
 "finset_sup_apply_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem finset_sup_apply_le {p : ι → Seminorm 𝕜 E} {s : Finset ι} {x : E} {a : exprℝ} (ha : 0 ≤ a)\n    (h : ∀ i, i ∈ s → p i x ≤ a) : s.sup p x ≤ a :=\n  by\n  lift a to nnreal using ha\n  rw [finset_sup_apply, NNReal.coe_le_coe]\n  exact Finset.sup_le h\n#align finset_sup_apply_le finset_sup_apply_le\n\n",
 "finset_sup_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\ntheorem finset_sup_apply (p : ι → Seminorm 𝕜 E) (s : Finset ι) (x : E) :\n    s.sup p x = ↑(s.sup fun i => ⟨p i x, map_nonneg (p i) x⟩ : nnreal) :=\n  by\n  induction' s using Finset.cons_induction_on with a s ha ih\n  · rw [Finset.sup_empty, Finset.sup_empty, coe_bot, _root_.bot_eq_zero, Pi.zero_apply, Nonneg.coe_zero]\n  ·\n    rw [Finset.sup_cons, Finset.sup_cons, coe_sup, sup_eq_max, Pi.sup_apply, sup_eq_max, NNReal.coe_max, Subtype.coe_mk,\n      ih]\n#align finset_sup_apply finset_sup_apply\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2019 Jean Lo. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jean Lo, Yaël Dillies, Moritz Doll\n-/\n-- `𝕜` is an `out_param`, so this is a false positive.\n@[ext]\ntheorem ext {p q : Seminorm 𝕜 E} (h : ∀ x, (p : E → exprℝ) x = q x) : p = q :=\n  FunLike.ext p q h\n#align ext ext\n\n",
 "convex_closedBall":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convex_closedBall /-\n/-- Closed seminorm-balls are convex. -/\ntheorem convex_closedBall : Convex (exprℝ) (closedBall p x r) :=\n  by\n  rw [closed_ball_eq_bInter_ball]\n  exact convex_interᵢ₂ fun _ _ => convex_ball _ _ _\n#align convex_closed_ball convex_closedBall\n-/\n\n",
 "convex_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print convex_ball /-\n/-- Seminorm-balls are convex. -/\ntheorem convex_ball : Convex (exprℝ) (ball p x r) :=\n  by\n  convert(p.convex_on.translate_left (-x)).convex_lt r\n  ext y\n  rw [preimage_univ, sep_univ, p.mem_ball, sub_eq_add_neg]\n  rfl\n#align convex_ball convex_ball\n-/\n\n",
 "continuous_of_le":
 "theorem continuous_of_le [TopologicalSpace E] [TopologicalAddGroup E] [ContinuousConstSMul 𝕜 E] {p q : Seminorm 𝕜 E}\n    (hq : Continuous q) (hpq : p ≤ q) : Continuous p :=\n  by\n  refine'\n    Seminorm.continuous one_pos\n      (Filter.mem_of_superset (IsOpen.mem_nhds _ <| q.mem_ball_self zero_lt_one) (ball_antitone hpq))\n  rw [ball_zero_eq]\n  exact isOpen_lt hq continuous_const\n#align continuous_of_le continuous_of_le\n\n",
 "continuous_of_continuousAt_zero":
 "#print continuous_of_continuousAt_zero /-\nprotected theorem continuous_of_continuousAt_zero [TopologicalSpace E] [TopologicalAddGroup E] {p : Seminorm 𝕝 E}\n    (hp : ContinuousAt p 0) : Continuous p :=\n  by\n  letI := TopologicalAddGroup.toUniformSpace E\n  haveI : UniformAddGroup E := comm_topologicalAddGroup_is_uniform\n  exact (Seminorm.uniformContinuous_of_continuousAt_zero hp).continuous\n#align continuous_of_continuous_at_zero continuous_of_continuousAt_zero\n-/\n\n",
 "continuous_at_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem continuous_at_zero' [TopologicalSpace E] [ContinuousConstSMul 𝕜 E] {p : Seminorm 𝕜 E} {r : exprℝ} (hr : 0 < r)\n    (hp : p.closed_ball 0 r ∈ ((nhds) 0 : Filter E)) : ContinuousAt p 0 :=\n  by\n  refine' metric.nhds_basis_closed_ball.tendsto_right_iff.mpr _\n  intro ε hε\n  rw [map_zero]\n  suffices p.closed_ball 0 ε ∈ ((nhds) 0 : Filter E) by rwa [Seminorm.closedBall_zero_eq_preimage_closedBall] at this\n  rcases exists_norm_lt 𝕜 (div_pos hε hr) with ⟨k, hk0, hkε⟩\n  have hk0' := norm_pos_iff.mp hk0\n  have := (set_smul_mem_nhds_zero_iff hk0').mpr hp\n  refine' Filter.mem_of_superset this (smul_set_subset_iff.mpr fun x hx => _)\n  rw [mem_closed_ball_zero, map_smul_eq_mul, ← div_mul_cancel ε hr.ne.symm]\n  exact mul_le_mul hkε.le (p.mem_closed_ball_zero.mp hx) (map_nonneg _ _) (div_nonneg hε.le hr.le)\n#align continuous_at_zero' continuous_at_zero'\n\n",
 "continuous_at_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem continuous_at_zero [TopologicalSpace E] [ContinuousConstSMul 𝕜 E] {p : Seminorm 𝕜 E} {r : exprℝ} (hr : 0 < r)\n    (hp : p.ball 0 r ∈ ((nhds) 0 : Filter E)) : ContinuousAt p 0 :=\n  continuousAt_zero' hr (Filter.mem_of_superset hp <| p.ball_subset_closed_ball _ _)\n#align continuous_at_zero continuous_at_zero\n\n",
 "continuous'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\nprotected theorem continuous' [TopologicalSpace E] [TopologicalAddGroup E] [ContinuousConstSMul 𝕜 E] {p : Seminorm 𝕜 E}\n    {r : exprℝ} (hr : 0 < r) (hp : p.closed_ball 0 r ∈ ((nhds) 0 : Filter E)) : Continuous p :=\n  Seminorm.continuous_of_continuousAt_zero (continuousAt_zero' hr hp)\n#align continuous' continuous'\n\n",
 "comp_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n@[simp]\ntheorem comp_zero (p : Seminorm 𝕜₂ E₂) : p.comp (0 : «expr →ₛₗ[ ] » E σ₁₂ E₂) = 0 :=\n  ext fun _ => map_zero p\n#align comp_zero comp_zero\n\n",
 "comp_smul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem comp_smul_apply (p : Seminorm 𝕜₂ E₂) (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) (c : 𝕜₂) (x : E) :\n    p.comp («expr • » c f) x = «expr‖ ‖» c * p (f x) :=\n  map_smul_eq_mul p _ _\n#align comp_smul_apply comp_smul_apply\n\n",
 "comp_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem comp_smul (p : Seminorm 𝕜₂ E₂) (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) (c : 𝕜₂) :\n    p.comp («expr • » c f) = «expr • » («expr‖ ‖₊» c) (p.comp f) :=\n  ext fun _ => by\n    rw [comp_apply, smul_apply, LinearMap.smul_apply, map_smul_eq_mul, NNReal.smul_def, coe_nnnorm, smul_eq_mul,\n      comp_apply]\n#align comp_smul comp_smul\n\n",
 "comp_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem comp_mono {p q : Seminorm 𝕜₂ E₂} (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) (hp : p ≤ q) : p.comp f ≤ q.comp f := fun _ =>\n  hp _\n#align comp_mono comp_mono\n\n",
 "comp_id":
 "@[simp]\ntheorem comp_id (p : Seminorm 𝕜 E) : p.comp LinearMap.id = p :=\n  ext fun _ => rfl\n#align comp_id comp_id\n\n",
 "comp_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem comp_comp [RingHomCompTriple σ₁₂ σ₂₃ σ₁₃] (p : Seminorm 𝕜₃ E₃) (g : «expr →ₛₗ[ ] » E₂ σ₂₃ E₃)\n    (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) : p.comp (g.comp f) = (p.comp g).comp f :=\n  ext fun _ => rfl\n#align comp_comp comp_comp\n\n",
 "comp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n@[simp]\ntheorem comp_apply (p : Seminorm 𝕜₂ E₂) (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) (x : E) : (p.comp f) x = p (f x) :=\n  rfl\n#align comp_apply comp_apply\n\n",
 "comp_add_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem comp_add_le (p : Seminorm 𝕜₂ E₂) (f g : «expr →ₛₗ[ ] » E σ₁₂ E₂) : p.comp (f + g) ≤ p.comp f + p.comp g :=\n  fun _ => map_add_le_add p _ _\n#align comp_add_le comp_add_le\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_zero : «expr⇑ » (0 : Seminorm 𝕜 E) = 0 :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_supr_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\nprotected theorem coe_supr_eq {ι : Type _} {p : ι → Seminorm 𝕜 E} (hp : BddAbove (range p)) :\n    coe_fn («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (p i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (p i) :=\n  by rw [← supₛ_range, Seminorm.coe_supₛ_eq hp] <;> exact supᵢ_range' (coe_fn : Seminorm 𝕜 E → E → exprℝ) p\n#align coe_supr_eq coe_supr_eq\n\n",
 "coe_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem coe_sup (p q : Seminorm 𝕜 E) : «expr⇑ » («expr ⊔ » p q) = «expr ⊔ » p q :=\n  rfl\n#align coe_sup coe_sup\n\n",
 "coe_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem coe_smul [SMul R (exprℝ)] [SMul R (nnreal)] [IsScalarTower R (nnreal) (exprℝ)] (r : R) (p : Seminorm 𝕜 E) :\n    «expr⇑ » («expr • » r p) = «expr • » r p :=\n  rfl\n#align coe_smul coe_smul\n\n",
 "coe_restrict_scalars":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem coe_restrict_scalars (p : Seminorm 𝕜' E) : (p.restrict_scalars 𝕜 : E → exprℝ) = p :=\n  rfl\n#align coe_restrict_scalars coe_restrict_scalars\n\n",
 "coe_normSeminorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n#print coe_normSeminorm /-\n@[simp]\ntheorem coe_normSeminorm : «expr⇑ » (normSeminorm 𝕜 E) = norm :=\n  rfl\n#align coe_norm_seminorm coe_normSeminorm\n-/\n\n",
 "coe_lt_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp, norm_cast]\ntheorem coe_lt_coe {p q : Seminorm 𝕜 E} : (p : E → exprℝ) < q ↔ p < q :=\n  iff.rfl\n#align coe_lt_coe coe_lt_coe\n\n",
 "coe_le_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp, norm_cast]\ntheorem coe_le_coe {p q : Seminorm 𝕜 E} : (p : E → exprℝ) ≤ q ↔ p ≤ q :=\n  iff.rfl\n#align coe_le_coe coe_le_coe\n\n",
 "coe_fn_add_monoid_hom_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem coe_fn_add_monoid_hom_injective : function.injective (coeFnAddMonoidHom 𝕜 E) :=\n  show @function.injective (Seminorm 𝕜 E) (E → exprℝ) coe_fn from FunLike.coe_injective\n#align coe_fn_add_monoid_hom_injective coe_fn_add_monoid_hom_injective\n\n",
 "coe_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem coe_comp (p : Seminorm 𝕜₂ E₂) (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) : «expr⇑ » (p.comp f) = p ∘ f :=\n  rfl\n#align coe_comp coe_comp\n\n",
 "coe_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem coe_bot : «expr⇑ » («expr⊥» : Seminorm 𝕜 E) = 0 :=\n  rfl\n#align coe_bot coe_bot\n\n",
 "coe_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem coe_add (p q : Seminorm 𝕜 E) : «expr⇑ » (p + q) = p + q :=\n  rfl\n#align coe_add coe_add\n\n",
 "coe_Sup_eq'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\nprotected theorem coe_Sup_eq' {s : Set <| Seminorm 𝕜 E} (hs : BddAbove («expr '' » coe_fn s : Set (E → exprℝ))) :\n    coe_fn (supₛ s) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" p :=\n  congr_arg _ (dif_pos hs)\n#align coe_Sup_eq' coe_Sup_eq'\n\n",
 "coe_Sup_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\nprotected theorem coe_Sup_eq {s : Set <| Seminorm 𝕜 E} (hs : BddAbove s) :\n    coe_fn (supₛ s) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" p :=\n  Seminorm.coe_supₛ_eq' (Seminorm.bddAbove_iff.mp hs)\n#align coe_Sup_eq coe_Sup_eq\n\n",
 "closed_ball_zero_eq_preimage_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem closed_ball_zero_eq_preimage_closed_ball {r : exprℝ} :\n    p.closed_ball 0 r = «expr ⁻¹' » p (Metric.closedBall 0 r) := by\n  rw [closed_ball_zero_eq, preimage_metric_closed_ball]\n#align closed_ball_zero_eq_preimage_closed_ball closed_ball_zero_eq_preimage_closed_ball\n\n",
 "closed_ball_zero_eq":
 "theorem closed_ball_zero_eq : closedBall p 0 r = { y : E | p y ≤ r } :=\n  Set.ext fun x => p.mem_closed_ball_zero\n#align closed_ball_zero_eq closed_ball_zero_eq\n\n",
 "closed_ball_zero'":
 "@[simp]\ntheorem closed_ball_zero' (x : E) (hr : 0 < r) : closedBall (0 : Seminorm 𝕜 E) x r = Set.univ :=\n  eq_univ_of_subset (ball_subset_closedBall _ _ _) (ball_zero' x hr)\n#align closed_ball_zero' closed_ball_zero'\n\n",
 "closed_ball_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem closed_ball_sup (p : Seminorm 𝕜 E) (q : Seminorm 𝕜 E) (e : E) (r : exprℝ) :\n    closedBall («expr ⊔ » p q) e r = closedBall p e r ∩ closedBall q e r := by\n  simp_rw [closed_ball, ← Set.setOf_and, coe_sup, Pi.sup_apply, sup_le_iff]\n#align closed_ball_sup closed_ball_sup\n\n",
 "closed_ball_smul_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem closed_ball_smul_closed_ball (p : Seminorm 𝕜 E) (r₁ r₂ : exprℝ) :\n    «expr • » (Metric.closedBall (0 : 𝕜) r₁) (p.closed_ball 0 r₂) ⊆ p.closed_ball 0 (r₁ * r₂) :=\n  by\n  rw [Set.subset_def]\n  intro x hx\n  rw [Set.mem_smul] at hx\n  rcases hx with ⟨a, y, ha, hy, hx⟩\n  rw [← hx, mem_closed_ball_zero, map_smul_eq_mul]\n  rw [mem_closedBall_zero_iff] at ha\n  exact mul_le_mul ha (p.mem_closed_ball_zero.mp hy) (map_nonneg _ y) ((norm_nonneg a).trans ha)\n#align closed_ball_smul_closed_ball closed_ball_smul_closed_ball\n\n",
 "closed_ball_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem closed_ball_smul (p : Seminorm 𝕜 E) {c : NNReal} (hc : 0 < c) (r : exprℝ) (x : E) :\n    («expr • » c p).closed_ball x r = p.closed_ball x (r / c) :=\n  by\n  ext\n  rw [mem_closed_ball, mem_closed_ball, smul_apply, NNReal.smul_def, smul_eq_mul, mul_comm,\n    le_div_iff (nnreal.coe_pos.mpr hc)]\n#align closed_ball_smul closed_ball_smul\n\n",
 "closed_ball_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem closed_ball_mono {p : Seminorm 𝕜 E} {r₁ r₂ : exprℝ} (h : r₁ ≤ r₂) : p.closed_ball x r₁ ⊆ p.closed_ball x r₂ :=\n  fun _ (hx : _ ≤ _) => hx.trans h\n#align closed_ball_mono closed_ball_mono\n\n",
 "closed_ball_finset_sup_eq_Inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem closed_ball_finset_sup_eq_Inter (p : ι → Seminorm 𝕜 E) (s : Finset ι) (x : E) {r : exprℝ} (hr : 0 ≤ r) :\n    closedBall (s.sup p) x r =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (closedBall (p i) x r) :=\n  by\n  lift r to NNReal using hr\n  simp_rw [closed_ball, Inter_set_of, finset_sup_apply, NNReal.coe_le_coe, Finset.sup_le_iff, ← NNReal.coe_le_coe,\n    Subtype.coe_mk]\n#align closed_ball_finset_sup_eq_Inter closed_ball_finset_sup_eq_Inter\n\n",
 "closed_ball_finset_sup'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem closed_ball_finset_sup' (p : ι → Seminorm 𝕜 E) (s : Finset ι) (H : s.nonempty) (e : E) (r : exprℝ) :\n    closedBall (s.sup' H p) e r = s.inf' H fun i => closedBall (p i) e r :=\n  by\n  induction' H using Finset.Nonempty.cons_induction with a a s ha hs ih\n  · classical simp\n  · rw [Finset.sup'_cons hs, Finset.inf'_cons hs, closed_ball_sup, inf_eq_inter, ih]\n#align closed_ball_finset_sup' closed_ball_finset_sup'\n\n",
 "closed_ball_finset_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem closed_ball_finset_sup (p : ι → Seminorm 𝕜 E) (s : Finset ι) (x : E) {r : exprℝ} (hr : 0 ≤ r) :\n    closedBall (s.sup p) x r = s.inf fun i => closedBall (p i) x r :=\n  by\n  rw [Finset.inf_eq_infᵢ]\n  exact closed_ball_finset_sup_eq_Inter _ _ _ hr\n#align closed_ball_finset_sup closed_ball_finset_sup\n\n",
 "closed_ball_eq_emptyset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem closed_ball_eq_emptyset (p : Seminorm 𝕜 E) {x : E} {r : exprℝ} (hr : r < 0) : p.closed_ball x r = ∅ :=\n  by\n  ext\n  rw [Seminorm.mem_closedBall, Set.mem_empty_iff_false, iff_false_iff, not_le]\n  exact hr.trans_le (map_nonneg _ _)\n#align closed_ball_eq_emptyset closed_ball_eq_emptyset\n\n",
 "closed_ball_eq_bInter_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem closed_ball_eq_bInter_ball (x r) :\n    closedBall p x r =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (ball p x ρ) :=\n  by ext y <;> simp_rw [mem_closed_ball, mem_Inter₂, mem_ball, ← forall_lt_iff_le']\n#align closed_ball_eq_bInter_ball closed_ball_eq_bInter_ball\n\n",
 "closed_ball_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem closed_ball_comp (p : Seminorm 𝕜₂ E₂) (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) (x : E) (r : exprℝ) :\n    (p.comp f).closed_ball x r = «expr ⁻¹' » f (p.closed_ball (f x) r) :=\n  by\n  ext\n  simp_rw [closed_ball, mem_preimage, comp_apply, Set.mem_setOf_eq, map_sub]\n#align closed_ball_comp closed_ball_comp\n\n",
 "closed_ball_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem closed_ball_bot {r : exprℝ} (x : E) (hr : 0 < r) : closedBall («expr⊥» : Seminorm 𝕜 E) x r = Set.univ :=\n  closedBall_zero' x hr\n#align closed_ball_bot closed_ball_bot\n\n",
 "closed_ball_antitone":
 "theorem closed_ball_antitone {p q : Seminorm 𝕜 E} (h : q ≤ p) : p.closed_ball x r ⊆ q.closed_ball x r := fun _ =>\n  (h _).trans\n#align closed_ball_antitone closed_ball_antitone\n\n",
 "closed_ball_add_closed_ball_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem closed_ball_add_closed_ball_subset (p : Seminorm 𝕜 E) (r₁ r₂ : exprℝ) (x₁ x₂ : E) :\n    p.closed_ball (x₁ : E) r₁ + p.closed_ball (x₂ : E) r₂ ⊆ p.closed_ball (x₁ + x₂) (r₁ + r₂) :=\n  by\n  rintro x ⟨y₁, y₂, hy₁, hy₂, rfl⟩\n  rw [mem_closed_ball, add_sub_add_comm]\n  exact (map_add_le_add p _ _).trans (add_le_add hy₁ hy₂)\n#align closed_ball_add_closed_ball_subset closed_ball_add_closed_ball_subset\n\n",
 "bot_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print bot_eq_zero /-\ntheorem bot_eq_zero : («expr⊥» : Seminorm 𝕜 E) = 0 :=\n  rfl\n#align bot_eq_zero bot_eq_zero\n-/\n\n",
 "bdd_below_range_add":
 "/-- Auxiliary lemma to show that the infimum of seminorms is well-defined. -/\ntheorem bdd_below_range_add : BddBelow (range fun u => p u + q (x - u)) :=\n  ⟨0, by\n    rintro _ ⟨x, rfl⟩\n    dsimp\n    positivity⟩\n#align bdd_below_range_add bdd_below_range_add\n\n",
 "bdd_above_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\nprotected theorem bdd_above_iff {s : Set <| Seminorm 𝕜 E} :\n    BddAbove s ↔ BddAbove («expr '' » coe_fn s : Set (E → exprℝ)) :=\n  ⟨fun ⟨q, hq⟩ => ⟨q, ball_image_of_ball fun p hp => hq hp⟩, fun H =>\n    ⟨supₛ s, fun p hp x => by\n      rw [Seminorm.coe_supₛ_eq' H, supᵢ_apply]\n      rcases H with ⟨q, hq⟩\n      exact le_csupᵢ ⟨q x, forall_range_iff.mpr fun i : s => hq (mem_image_of_mem _ i.2) x⟩ ⟨p, hp⟩⟩⟩\n#align bdd_above_iff bdd_above_iff\n\n",
 "ball_zero_eq_preimage_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem ball_zero_eq_preimage_ball {r : exprℝ} : p.ball 0 r = «expr ⁻¹' » p (Metric.ball 0 r) := by\n  rw [ball_zero_eq, preimage_metric_ball]\n#align ball_zero_eq_preimage_ball ball_zero_eq_preimage_ball\n\n",
 "ball_zero_eq":
 "#print ball_zero_eq /-\ntheorem ball_zero_eq : ball p 0 r = { y : E | p y < r } :=\n  Set.ext fun x => p.mem_ball_zero\n#align ball_zero_eq ball_zero_eq\n-/\n\n",
 "ball_zero_absorbs_ball_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem ball_zero_absorbs_ball_zero (p : Seminorm 𝕜 E) {r₁ r₂ : exprℝ} (hr₁ : 0 < r₁) :\n    Absorbs 𝕜 (p.ball 0 r₁) (p.ball 0 r₂) :=\n  by\n  rcases exists_pos_lt_mul hr₁ r₂ with ⟨r, hr₀, hr⟩\n  refine' ⟨r, hr₀, fun a ha x hx => _⟩\n  rw [smul_ball_zero (norm_pos_iff.1 <| hr₀.trans_le ha), p.mem_ball_zero]\n  rw [p.mem_ball_zero] at hx\n  exact hx.trans (hr.trans_le <| mul_le_mul_of_nonneg_right ha hr₁.le)\n#align ball_zero_absorbs_ball_zero ball_zero_absorbs_ball_zero\n\n",
 "ball_zero'":
 "@[simp]\ntheorem ball_zero' (x : E) (hr : 0 < r) : ball (0 : Seminorm 𝕜 E) x r = Set.univ :=\n  by\n  rw [Set.eq_univ_iff_forall, ball]\n  simp [hr]\n#align ball_zero' ball_zero'\n\n",
 "ball_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem ball_sup (p : Seminorm 𝕜 E) (q : Seminorm 𝕜 E) (e : E) (r : exprℝ) :\n    ball («expr ⊔ » p q) e r = ball p e r ∩ ball q e r := by\n  simp_rw [ball, ← Set.setOf_and, coe_sup, Pi.sup_apply, sup_lt_iff]\n#align ball_sup ball_sup\n\n",
 "ball_subset_closed_ball":
 "theorem ball_subset_closed_ball (x r) : ball p x r ⊆ closedBall p x r := fun y (hy : _ < _) => hy.le\n#align ball_subset_closed_ball ball_subset_closed_ball\n\n",
 "ball_smul_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem ball_smul_ball (p : Seminorm 𝕜 E) (r₁ r₂ : exprℝ) :\n    «expr • » (Metric.ball (0 : 𝕜) r₁) (p.ball 0 r₂) ⊆ p.ball 0 (r₁ * r₂) :=\n  by\n  rw [Set.subset_def]\n  intro x hx\n  rw [Set.mem_smul] at hx\n  rcases hx with ⟨a, y, ha, hy, hx⟩\n  rw [← hx, mem_ball_zero, map_smul_eq_mul]\n  exact mul_lt_mul'' (mem_ball_zero_iff.mp ha) (p.mem_ball_zero.mp hy) (norm_nonneg a) (map_nonneg p y)\n#align ball_smul_ball ball_smul_ball\n\n",
 "ball_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem ball_smul (p : Seminorm 𝕜 E) {c : NNReal} (hc : 0 < c) (r : exprℝ) (x : E) :\n    («expr • » c p).ball x r = p.ball x (r / c) := by\n  ext\n  rw [mem_ball, mem_ball, smul_apply, NNReal.smul_def, smul_eq_mul, mul_comm, lt_div_iff (nnreal.coe_pos.mpr hc)]\n#align ball_smul ball_smul\n\n",
 "ball_norm_mul_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem ball_norm_mul_subset {p : Seminorm 𝕜 E} {k : 𝕜} {r : exprℝ} :\n    p.ball 0 («expr‖ ‖» k * r) ⊆ «expr • » k (p.ball 0 r) :=\n  by\n  rcases eq_or_ne k 0 with (rfl | hk)\n  · rw [norm_zero, MulZeroClass.zero_mul, ball_eq_emptyset _ le_rfl]\n    exact empty_subset _\n  · intro x\n    rw [Set.mem_smul_set, Seminorm.mem_ball_zero]\n    refine' fun hx => ⟨«expr • » k⁻¹ x, _, _⟩\n    ·\n      rwa [Seminorm.mem_ball_zero, map_smul_eq_mul, norm_inv, ← mul_lt_mul_left <| norm_pos_iff.mpr hk, ← mul_assoc, ←\n        div_eq_mul_inv («expr‖ ‖» k) («expr‖ ‖» k), div_self (ne_of_gt <| norm_pos_iff.mpr hk), one_mul]\n    rw [← smul_assoc, smul_eq_mul, ← div_eq_mul_inv, div_self hk, one_smul]\n#align ball_norm_mul_subset ball_norm_mul_subset\n\n",
 "ball_normSeminorm":
 "#print ball_normSeminorm /-\n@[simp]\ntheorem ball_normSeminorm : (normSeminorm 𝕜 E).ball = Metric.ball :=\n  by\n  ext (x r y)\n  simp only [Seminorm.mem_ball, Metric.mem_ball, coe_normSeminorm, dist_eq_norm]\n#align ball_norm_seminorm ball_normSeminorm\n-/\n\n",
 "ball_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print ball_mono /-\ntheorem ball_mono {p : Seminorm 𝕜 E} {r₁ r₂ : exprℝ} (h : r₁ ≤ r₂) : p.ball x r₁ ⊆ p.ball x r₂ := fun _ (hx : _ < _) =>\n  hx.trans_le h\n#align ball_mono ball_mono\n-/\n\n",
 "ball_finset_sup_eq_Inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem ball_finset_sup_eq_Inter (p : ι → Seminorm 𝕜 E) (s : Finset ι) (x : E) {r : exprℝ} (hr : 0 < r) :\n    ball (s.sup p) x r =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (ball (p i) x r) :=\n  by\n  lift r to NNReal using hr.le\n  simp_rw [ball, Inter_set_of, finset_sup_apply, NNReal.coe_lt_coe, Finset.sup_lt_iff (show «expr⊥» < r from hr), ←\n    NNReal.coe_lt_coe, Subtype.coe_mk]\n#align ball_finset_sup_eq_Inter ball_finset_sup_eq_Inter\n\n",
 "ball_finset_sup'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem ball_finset_sup' (p : ι → Seminorm 𝕜 E) (s : Finset ι) (H : s.nonempty) (e : E) (r : exprℝ) :\n    ball (s.sup' H p) e r = s.inf' H fun i => ball (p i) e r :=\n  by\n  induction' H using Finset.Nonempty.cons_induction with a a s ha hs ih\n  · classical simp\n  · rw [Finset.sup'_cons hs, Finset.inf'_cons hs, ball_sup, inf_eq_inter, ih]\n#align ball_finset_sup' ball_finset_sup'\n\n",
 "ball_finset_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem ball_finset_sup (p : ι → Seminorm 𝕜 E) (s : Finset ι) (x : E) {r : exprℝ} (hr : 0 < r) :\n    ball (s.sup p) x r = s.inf fun i => ball (p i) x r :=\n  by\n  rw [Finset.inf_eq_infᵢ]\n  exact ball_finset_sup_eq_Inter _ _ _ hr\n#align ball_finset_sup ball_finset_sup\n\n",
 "ball_eq_emptyset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem ball_eq_emptyset (p : Seminorm 𝕜 E) {x : E} {r : exprℝ} (hr : r ≤ 0) : p.ball x r = ∅ :=\n  by\n  ext\n  rw [Seminorm.mem_ball, Set.mem_empty_iff_false, iff_false_iff, not_lt]\n  exact hr.trans (map_nonneg p _)\n#align ball_eq_emptyset ball_eq_emptyset\n\n",
 "ball_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem ball_comp (p : Seminorm 𝕜₂ E₂) (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) (x : E) (r : exprℝ) :\n    (p.comp f).ball x r = «expr ⁻¹' » f (p.ball (f x) r) :=\n  by\n  ext\n  simp_rw [ball, mem_preimage, comp_apply, Set.mem_setOf_eq, map_sub]\n#align ball_comp ball_comp\n\n",
 "ball_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem ball_bot {r : exprℝ} (x : E) (hr : 0 < r) : ball («expr⊥» : Seminorm 𝕜 E) x r = Set.univ :=\n  ball_zero' x hr\n#align ball_bot ball_bot\n\n",
 "ball_antitone":
 "theorem ball_antitone {p q : Seminorm 𝕜 E} (h : q ≤ p) : p.ball x r ⊆ q.ball x r := fun _ => (h _).trans_lt\n#align ball_antitone ball_antitone\n\n",
 "ball_add_ball_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem ball_add_ball_subset (p : Seminorm 𝕜 E) (r₁ r₂ : exprℝ) (x₁ x₂ : E) :\n    p.ball (x₁ : E) r₁ + p.ball (x₂ : E) r₂ ⊆ p.ball (x₁ + x₂) (r₁ + r₂) :=\n  by\n  rintro x ⟨y₁, y₂, hy₁, hy₂, rfl⟩\n  rw [mem_ball, add_sub_add_comm]\n  exact (map_add_le_add p _ _).trans_lt (add_lt_add hy₁ hy₂)\n#align ball_add_ball_subset ball_add_ball_subset\n\n",
 "balanced_closed_ball_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Closed seminorm-balls at the origin are balanced. -/\ntheorem balanced_closed_ball_zero (r : exprℝ) : Balanced 𝕜 (closedBall p 0 r) :=\n  by\n  rintro a ha x ⟨y, hy, hx⟩\n  rw [mem_closed_ball_zero, ← hx, map_smul_eq_mul]\n  calc\n    _ ≤ p y := mul_le_of_le_one_left (map_nonneg p _) ha\n    _ ≤ r := by rwa [mem_closed_ball_zero] at hy\n    \n#align balanced_closed_ball_zero balanced_closed_ball_zero\n\n",
 "balanced_ball_zero":
 "#print balanced_ball_zero /-\n/-- Balls at the origin are balanced. -/\ntheorem balanced_ball_zero : Balanced 𝕜 (Metric.ball (0 : E) r) :=\n  by\n  rw [← ball_normSeminorm 𝕜]\n  exact (normSeminorm _ _).balanced_ball_zero r\n#align balanced_ball_zero balanced_ball_zero\n-/\n\n",
 "add_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem add_comp (p q : Seminorm 𝕜₂ E₂) (f : «expr →ₛₗ[ ] » E σ₁₂ E₂) : (p + q).comp f = p.comp f + q.comp f :=\n  ext fun _ => rfl\n#align add_comp add_comp\n\n",
 "add_apply":
 "@[simp]\ntheorem add_apply (p q : Seminorm 𝕜 E) (x : E) : (p + q) x = p x + q x :=\n  rfl\n#align add_apply add_apply\n\n",
 "absorbent_closed_ball_zero":
 "/-- Closed seminorm-balls at the origin are absorbent. -/\nprotected theorem absorbent_closed_ball_zero (hr : 0 < r) : Absorbent 𝕜 (closedBall p (0 : E) r) :=\n  (p.absorbent_ball_zero hr).subset (p.ball_subset_closed_ball _ _)\n#align absorbent_closed_ball_zero absorbent_closed_ball_zero\n\n",
 "absorbent_closed_ball":
 "/-- Seminorm-balls containing the origin are absorbent. -/\nprotected theorem absorbent_closed_ball (hpr : p x < r) : Absorbent 𝕜 (closedBall p x r) :=\n  by\n  refine' (p.absorbent_closed_ball_zero <| sub_pos.2 hpr).subset fun y hy => _\n  rw [p.mem_closed_ball_zero] at hy\n  exact p.mem_closed_ball.2 ((map_sub_le_add p _ _).trans <| add_le_of_le_sub_right hy)\n#align absorbent_closed_ball absorbent_closed_ball\n\n",
 "absorbent_ball_zero":
 "#print absorbent_ball_zero /-\n/-- Balls at the origin are absorbent. -/\ntheorem absorbent_ball_zero (hr : 0 < r) : Absorbent 𝕜 (Metric.ball (0 : E) r) :=\n  by\n  rw [← ball_normSeminorm 𝕜]\n  exact (normSeminorm _ _).absorbent_ball_zero hr\n#align absorbent_ball_zero absorbent_ball_zero\n-/\n\n",
 "absorbent_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print absorbent_ball /-\n/-- Balls containing the origin are absorbent. -/\ntheorem absorbent_ball (hx : «expr‖ ‖» x < r) : Absorbent 𝕜 (Metric.ball x r) :=\n  by\n  rw [← ball_normSeminorm 𝕜]\n  exact (normSeminorm _ _).absorbent_ball hx\n#align absorbent_ball absorbent_ball\n-/\n\n",
 "UniformContinuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print UniformContinuous /-\nprotected theorem UniformContinuous [UniformSpace E] [UniformAddGroup E] [ContinuousConstSMul 𝕜 E] {p : Seminorm 𝕜 E}\n    {r : exprℝ} (hr : 0 < r) (hp : p.ball 0 r ∈ ((nhds) 0 : Filter E)) : UniformContinuous p :=\n  Seminorm.uniformContinuous_of_continuousAt_zero (continuousAt_zero hr hp)\n#align uniform_continuous UniformContinuous\n-/\n\n",
 "ConvexOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print ConvexOn /-\n/-- A seminorm is convex. Also see `convex_on_norm`. -/\nprotected theorem ConvexOn : ConvexOn (exprℝ) univ p :=\n  by\n  refine' ⟨convex_univ, fun x _ y _ a b ha hb hab => _⟩\n  calc\n    p («expr • » a x + «expr • » b y) ≤ p («expr • » a x) + p («expr • » b y) := map_add_le_add p _ _\n    _ = «expr‖ ‖» («expr • » a (1 : 𝕜)) * p x + «expr‖ ‖» («expr • » b (1 : 𝕜)) * p y := by\n      rw [← map_smul_eq_mul p, ← map_smul_eq_mul p, smul_one_smul, smul_one_smul]\n    _ = a * p x + b * p y := by\n      rw [norm_smul, norm_smul, norm_one, mul_one, mul_one, Real.norm_of_nonneg ha, Real.norm_of_nonneg hb]\n    \n#align convex_on ConvexOn\n-/\n\n",
 "Continuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Continuous /-\nprotected theorem Continuous [TopologicalSpace E] [TopologicalAddGroup E] [ContinuousConstSMul 𝕜 E] {p : Seminorm 𝕜 E}\n    {r : exprℝ} (hr : 0 < r) (hp : p.ball 0 r ∈ ((nhds) 0 : Filter E)) : Continuous p :=\n  Seminorm.continuous_of_continuousAt_zero (continuousAt_zero hr hp)\n#align continuous Continuous\n-/\n\n"}