{"union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- If a set `s` is to the left of a set `t`, and both contain the boundary point `x`, then\nthe variation of `f` along `s ∪ t` is the sum of the variations. -/\ntheorem union (f : α → E) {s t : Set α} {x : α} (hs : IsGreatest s x) (ht : IsLeast t x) :\n    evariation_on f (s ∪ t) = evariation_on f s + evariation_on f t := by\n  classical\n    apply le_antisymm _ (evariation_on.add_le_union f fun a ha b hb => le_trans (hs.2 ha) (ht.2 hb))\n    apply supᵢ_le _\n    rintro ⟨n, ⟨u, hu, ust⟩⟩\n    obtain ⟨v, m, hv, vst, xv, huv⟩ :\n      ∃ (v : ℕ → α)(m : ℕ),\n        Monotone v ∧\n          (∀ i, v i ∈ s ∪ t) ∧\n            x ∈ «expr '' » v (Iio m) ∧\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (Finset.range n) (edist (f (u (i + 1))) (f (u i))) ≤\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (Finset.range m) (edist (f (v (j + 1))) (f (v j)))\n    exact evariation_on.add_point f (mem_union_left t hs.1) u hu ust n\n    obtain ⟨N, hN, Nx⟩ : ∃ N, N < m ∧ v N = x\n    exact xv\n    calc\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n            (edist (f (u (j + 1))) (f (u j))) ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range m) (edist (f (v (j + 1))) (f (v j))) :=\n        huv\n      _ =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.Ico 0 N) (edist (f (v (j + 1))) (f (v j))) +\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.Ico N m) (edist (f (v (j + 1))) (f (v j))) :=\n        by rw [Finset.range_eq_Ico, Finset.sum_Ico_consecutive _ (zero_le _) hN.le]\n      _ ≤ evariation_on f s + evariation_on f t := by\n        refine' add_le_add _ _\n        · apply sum_le_of_monotone_on_Icc _ (hv.monotone_on _) fun i hi => _\n          rcases vst i with (h | h)\n          · exact h\n          have : v i = x := by\n            apply le_antisymm\n            · rw [← Nx]\n              exact hv hi.2\n            · exact ht.2 h\n          rw [this]\n          exact hs.1\n        · apply sum_le_of_monotone_on_Icc _ (hv.monotone_on _) fun i hi => _\n          rcases vst i with (h | h)\n          swap\n          · exact h\n          have : v i = x := by\n            apply le_antisymm\n            · exact hs.2 h\n            · rw [← Nx]\n              exact hv hi.1\n          rw [this]\n          exact ht.1\n      \n#align union union\n\n",
 "sum_le_of_monotone_on_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_le_of_monotone_on_Iic (f : α → E) {s : Set α} {n : ℕ} {u : ℕ → α} (hu : MonotoneOn u (Iic n))\n    (us : ∀ i ≤ n, u i ∈ s) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n        (edist (f (u (i + 1))) (f (u i))) ≤\n      evariation_on f s :=\n  by\n  let v i := if i ≤ n then u i else u n\n  have vs : ∀ i, v i ∈ s := by\n    intro i\n    simp only [v]\n    split_ifs\n    · exact us i h\n    · exact us n le_rfl\n  have hv : Monotone v := by\n    apply monotone_nat_of_le_succ fun i => _\n    simp only [v]\n    rcases lt_trichotomy i n with (hi | rfl | hi)\n    · have : i + 1 ≤ n := by linarith\n      simp only [hi.le, this, if_true]\n      exact hu hi.le this (nat.le_succ i)\n    · simp only [le_refl, if_true, add_le_iff_nonpos_right, le_zero_iff, nat.one_ne_zero, if_false]\n    · have A : ¬i ≤ n := by linarith\n      have B : ¬i + 1 ≤ n := by linarith\n      simp [A, B]\n  convert sum_le f n hv vs using 1\n  apply Finset.sum_congr rfl fun i hi => _\n  simp only [Finset.mem_range] at hi\n  have : i + 1 ≤ n := by linarith\n  simp only [v]\n  simp [this, hi.le]\n#align sum_le_of_monotone_on_Iic sum_le_of_monotone_on_Iic\n\n",
 "sum_le_of_monotone_on_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_le_of_monotone_on_Icc (f : α → E) {s : Set α} {m n : ℕ} {u : ℕ → α} (hu : MonotoneOn u (Icc m n))\n    (us : ∀ i ∈ Icc m n, u i ∈ s) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.Ico m n)\n        (edist (f (u (i + 1))) (f (u i))) ≤\n      evariation_on f s :=\n  by\n  rcases le_or_lt n m with (hnm | hmn)\n  · simp only [Finset.Ico_eq_empty_of_le hnm, Finset.sum_empty, zero_le']\n  let v i := u (m + i)\n  have hv : MonotoneOn v (Iic (n - m)) := by\n    intro a ha b hb hab\n    simp only [le_tsub_iff_left hmn.le, mem_Iic] at ha hb\n    exact hu ⟨le_add_right le_rfl, ha⟩ ⟨le_add_right le_rfl, hb⟩ (add_le_add le_rfl hab)\n  have vs : ∀ i ∈ Iic (n - m), v i ∈ s := by\n    intro i hi\n    simp only [le_tsub_iff_left hmn.le, mem_Iic] at hi\n    exact us _ ⟨le_add_right le_rfl, hi⟩\n  calc\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.Ico m n)\n          (edist (f (u (i + 1))) (f (u i))) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range (n - m)) (edist (f (u (m + i + 1))) (f (u (m + i)))) :=\n      by\n      rw [Finset.range_eq_Ico]\n      convert(Finset.sum_Ico_add (fun i => edist (f (u (i + 1))) (f (u i))) 0 (n - m) m).symm\n      · rw [zero_add]\n      · rw [tsub_add_cancel_of_le hmn.le]\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range (n - m)) (edist (f (v (i + 1))) (f (v i))) :=\n      by\n      apply Finset.sum_congr rfl fun i hi => _\n      simp only [v, add_assoc]\n    _ ≤ evariation_on f s := sum_le_of_monotone_on_Iic f hv vs\n    \n#align sum_le_of_monotone_on_Icc sum_le_of_monotone_on_Icc\n\n",
 "sum_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_le (f : α → E) {s : Set α} (n : ℕ) {u : ℕ → α} (hu : Monotone u) (us : ∀ i, u i ∈ s) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n        (edist (f (u (i + 1))) (f (u i))) ≤\n      evariation_on f s :=\n  le_supᵢ_of_le ⟨n, u, hu, us⟩ le_rfl\n#align sum_le sum_le\n\n",
 "subsingleton_Icc_of_ge":
 "-- porting note: move to file `data.set.intervals.basic` once the port is over,\n-- and use it in theorem `polynomial_functions_closure_eq_top`\n-- in the file `topology/continuous_function/weierstrass.lean`\ntheorem _root_.set.subsingleton_Icc_of_ge {α : Type _} [partial_order α] {a b : α} (h : b ≤ a) :\n    Set.Subsingleton (Icc a b) := by\n  rintro c ⟨ac, cb⟩ d ⟨ad, db⟩\n  cases le_antisymm (cb.trans h) ac\n  cases le_antisymm (db.trans h) ad\n  rfl\n#align set.subsingleton_Icc_of_ge set.subsingleton_Icc_of_ge\n\n",
 "subsingleton":
 "@[simp]\nprotected theorem subsingleton (f : α → E) {s : Set α} (hs : s.subsingleton) : evariation_on f s = 0 :=\n  constant_on (hs.image f)\n#align subsingleton subsingleton\n\n",
 "sub_self_monotone_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[protected]\ntheorem sub_self_monotone_on {f : α → exprℝ} {s : Set α} (hf : has_locally_bounded_variation_on f s) {a : α}\n    (as : a ∈ s) : MonotoneOn (variation_on_from_to f s a - f) s :=\n  by\n  rintro b bs c cs bc\n  rw [Pi.sub_apply, Pi.sub_apply, le_sub_iff_add_le, add_comm_sub, ← le_sub_iff_add_le']\n  calc\n    f c - f b ≤ |f c - f b| := le_abs_self _\n    _ = dist (f b) (f c) := by rw [dist_comm, Real.dist_eq]\n    _ ≤ variation_on_from_to f s b c := by\n      rw [eq_of_le f s bc, dist_edist]\n      apply ENNReal.toReal_mono (hf b c bs cs)\n      apply evariation_on.edist_le f\n      exacts[⟨bs, le_rfl, bc⟩, ⟨cs, bc, le_rfl⟩]\n    _ = variation_on_from_to f s a c - variation_on_from_to f s a b := by rw [← add hf as bs cs, add_sub_cancel']\n    \n#align sub_self_monotone_on sub_self_monotone_on\n\n",
 "sub_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem _root_.has_bounded_variation_on.sub_le {f : α → exprℝ} {s : Set α} (h : has_bounded_variation_on f s) {x y : α}\n    (hx : x ∈ s) (hy : y ∈ s) : f x - f y ≤ (evariation_on f s).to_real :=\n  by\n  apply (le_abs_self _).trans\n  rw [← Real.dist_eq]\n  exact h.dist_le hx hy\n#align has_bounded_variation_on.sub_le has_bounded_variation_on.sub_le\n\n",
 "self":
 "@[protected]\ntheorem self (a : α) : variation_on_from_to f s a a = 0 :=\n  by\n  dsimp only [variation_on_from_to]\n  rw [if_pos le_rfl, Icc_self, evariation_on.subsingleton, ENNReal.zero_toReal]\n  exact fun x hx y hy => hx.2.trans hy.2.symm\n#align self self\n\n",
 "nonpos_of_ge":
 "@[protected]\ntheorem nonpos_of_ge {a b : α} (h : b ≤ a) : variation_on_from_to f s a b ≤ 0 :=\n  by\n  rw [eq_neg_swap]\n  exact neg_nonpos_of_nonneg (nonneg_of_le f s h)\n#align nonpos_of_ge nonpos_of_ge\n\n",
 "nonneg_of_le":
 "@[protected]\ntheorem nonneg_of_le {a b : α} (h : a ≤ b) : 0 ≤ variation_on_from_to f s a b := by\n  simp only [variation_on_from_to, if_pos h, ENNReal.toReal_nonneg]\n#align nonneg_of_le nonneg_of_le\n\n",
 "nonempty_monotone_mem":
 "/-\nCopyright (c) 2022 Sébastien Gouëzel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Sébastien Gouëzel\n-/\ntheorem nonempty_monotone_mem {s : Set α} (hs : s.nonempty) : Nonempty { u // Monotone u ∧ ∀ i : ℕ, u i ∈ s } :=\n  by\n  obtain ⟨x, hx⟩ := hs\n  exact ⟨⟨fun i => x, fun i j hij => le_rfl, fun i => hx⟩⟩\n#align nonempty_monotone_mem nonempty_monotone_mem\n\n",
 "mono":
 "theorem _root_.has_bounded_variation_on.mono {f : α → E} {s : Set α} (h : has_bounded_variation_on f s) {t : Set α}\n    (ht : t ⊆ s) : has_bounded_variation_on f t :=\n  (lt_of_le_of_lt (evariation_on.mono f ht) (lt_top_iff_ne_top.2 h)).ne\n#align has_bounded_variation_on.mono has_bounded_variation_on.mono\n\n",
 "lower_semicontinuous_uniform_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵤ[ ] » -/\n/-- The map `λ f, evariation_on f s` is lower semicontinuous for uniform convergence on `s`.\n-/\ntheorem lower_semicontinuous_uniform_on (s : Set α) :\n    LowerSemicontinuous fun f : «expr →ᵤ[ ] » α {s} E => evariation_on f s :=\n  by\n  intro f\n  apply @lower_continuous_aux _ _ _ _ (UniformOnFun α E {s}) id ((nhds) f) f s _\n  have := @tendsto_id _ ((nhds) f)\n  rw [UniformOnFun.tendsto_iff_tendstoUniformlyOn] at this\n  simp_rw [← tendstoUniformlyOn_singleton_iff_tendsto]\n  exact fun x xs => (this s rfl).mono (singleton_subset_iff.mpr xs)\n#align lower_semicontinuous_uniform_on lower_semicontinuous_uniform_on\n\n",
 "lower_continuous_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\ntheorem lower_continuous_aux {ι : Type _} {F : ι → α → E} {p : Filter ι} {f : α → E} {s : Set α}\n    (Ffs : ∀ x ∈ s, Tendsto (fun i => F i x) p ((nhds) (f x))) {v : ennreal} (hv : v < evariation_on f s) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" p\n      (v < evariation_on (F n) s) :=\n  by\n  obtain ⟨⟨n, ⟨u, um, us⟩⟩, hlt⟩ :\n    ∃ p : ℕ × { u : ℕ → α // Monotone u ∧ ∀ i, u i ∈ s },\n      v <\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range p.1) (edist (f ((p.2 : ℕ → α) (i + 1))) (f ((p.2 : ℕ → α) i))) :=\n    lt_supr_iff.mp hv\n  have :\n    tendsto\n      (fun j =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          (edist (F j (u (i + 1))) (F j (u i))))\n      p\n      ((nhds)\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range n) (edist (f (u (i + 1))) (f (u i))))) :=\n    by\n    apply tendsto_finset_sum\n    exact fun i hi => tendsto.edist (Ffs (u i.succ) (us i.succ)) (Ffs (u i) (us i))\n  exact (eventually_gt_of_tendsto_gt hlt this).mono fun i h => lt_of_lt_of_le h (sum_le (F i) n um us)\n#align lower_continuous_aux lower_continuous_aux\n\n",
 "has_locally_bounded_variation_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem lipschitz_with.has_locally_bounded_variation_on {f : exprℝ → E} {C : nnreal} (hf : LipschitzWith C f)\n    (s : Set (exprℝ)) : has_locally_bounded_variation_on f s :=\n  (hf.lipschitz_on_with s).has_locally_bounded_variation_on\n#align lipschitz_with.has_locally_bounded_variation_on lipschitz_with.has_locally_bounded_variation_on\n\n",
 "exists_monotone_on_sub_monotone_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If a real valued function has bounded variation on a set, then it is a difference of monotone\nfunctions there. -/\ntheorem has_locally_bounded_variation_on.exists_monotone_on_sub_monotone_on {f : α → exprℝ} {s : Set α}\n    (h : has_locally_bounded_variation_on f s) : ∃ p q : α → exprℝ, MonotoneOn p s ∧ MonotoneOn q s ∧ f = p - q :=\n  by\n  rcases eq_empty_or_nonempty s with (rfl | ⟨c, cs⟩)\n  · exact ⟨f, 0, subsingleton_empty.monotone_on _, subsingleton_empty.monotone_on _, (sub_zero f).symm⟩\n  ·\n    exact\n      ⟨_, _, variation_on_from_to.monotone_on h cs, variation_on_from_to.sub_self_monotone_on h cs,\n        (sub_sub_cancel _ _).symm⟩\n#align has_locally_bounded_variation_on.exists_monotone_on_sub_monotone_on has_locally_bounded_variation_on.exists_monotone_on_sub_monotone_on\n\n",
 "evariation_on_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem monotone_on.evariation_on_le {f : α → exprℝ} {s : Set α} (hf : MonotoneOn f s) {a b : α} (as : a ∈ s)\n    (bs : b ∈ s) : evariation_on f (s ∩ Icc a b) ≤ ENNReal.ofReal (f b - f a) :=\n  by\n  apply supᵢ_le _\n  rintro ⟨n, ⟨u, hu, us⟩⟩\n  calc\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          (edist (f (u (i + 1))) (f (u i))) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          (ENNReal.ofReal (f (u (i + 1)) - f (u i))) :=\n      by\n      apply Finset.sum_congr rfl fun i hi => _\n      simp only [Finset.mem_range] at hi\n      rw [edist_dist, Real.dist_eq, abs_of_nonneg]\n      exact sub_nonneg_of_le (hf (us i).1 (us (i + 1)).1 (hu (nat.le_succ _)))\n    _ =\n        ENNReal.ofReal\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range n) (f (u (i + 1)) - f (u i))) :=\n      by\n      rw [ENNReal.ofReal_sum_of_nonneg]\n      intro i hi\n      exact sub_nonneg_of_le (hf (us i).1 (us (i + 1)).1 (hu (nat.le_succ _)))\n    _ = ENNReal.ofReal (f (u n) - f (u 0)) := by rw [Finset.sum_range_sub fun i => f (u i)]\n    _ ≤ ENNReal.ofReal (f b - f a) := by\n      apply ENNReal.ofReal_le_ofReal\n      exact sub_le_sub (hf (us n).1 bs (us n).2.2) (hf as (us 0).1 (us 0).2.1)\n    \n#align monotone_on.evariation_on_le monotone_on.evariation_on_le\n\n",
 "eq_zero_iff_of_le":
 "@[protected]\ntheorem eq_zero_iff_of_le {f : α → E} {s : Set α} (hf : has_locally_bounded_variation_on f s) {a b : α} (ha : a ∈ s)\n    (hb : b ∈ s) (ab : a ≤ b) :\n    variation_on_from_to f s a b = 0 ↔ ∀ ⦃x⦄ (hx : x ∈ s ∩ Icc a b) ⦃y⦄ (hy : y ∈ s ∩ Icc a b), edist (f x) (f y) = 0 :=\n  by rw [eq_of_le _ _ ab, ENNReal.toReal_eq_zero_iff, or_iff_left (hf a b ha hb), evariation_on.eq_zero_iff]\n#align eq_zero_iff_of_le eq_zero_iff_of_le\n\n",
 "eq_zero_iff_of_ge":
 "@[protected]\ntheorem eq_zero_iff_of_ge {f : α → E} {s : Set α} (hf : has_locally_bounded_variation_on f s) {a b : α} (ha : a ∈ s)\n    (hb : b ∈ s) (ba : b ≤ a) :\n    variation_on_from_to f s a b = 0 ↔ ∀ ⦃x⦄ (hx : x ∈ s ∩ Icc b a) ⦃y⦄ (hy : y ∈ s ∩ Icc b a), edist (f x) (f y) = 0 :=\n  by\n  rw [eq_of_ge _ _ ba, neg_eq_zero, ENNReal.toReal_eq_zero_iff, or_iff_left (hf b a hb ha), evariation_on.eq_zero_iff]\n#align eq_zero_iff_of_ge eq_zero_iff_of_ge\n\n",
 "eq_zero_iff":
 "@[protected]\ntheorem eq_zero_iff {f : α → E} {s : Set α} (hf : has_locally_bounded_variation_on f s) {a b : α} (ha : a ∈ s)\n    (hb : b ∈ s) :\n    variation_on_from_to f s a b = 0 ↔\n      ∀ ⦃x⦄ (hx : x ∈ s ∩ uIcc a b) ⦃y⦄ (hy : y ∈ s ∩ uIcc a b), edist (f x) (f y) = 0 :=\n  by\n  rcases le_total a b with (ab | ba)\n  · rw [uIcc_of_le ab]\n    exact eq_zero_iff_of_le hf ha hb ab\n  · rw [uIcc_of_ge ba]\n    exact eq_zero_iff_of_ge hf ha hb ba\n#align eq_zero_iff eq_zero_iff\n\n",
 "eq_of_le":
 "@[protected]\ntheorem eq_of_le {a b : α} (h : a ≤ b) : variation_on_from_to f s a b = (evariation_on f (s ∩ Icc a b)).to_real :=\n  if_pos h\n#align eq_of_le eq_of_le\n\n",
 "eq_of_ge":
 "@[protected]\ntheorem eq_of_ge {a b : α} (h : b ≤ a) : variation_on_from_to f s a b = -(evariation_on f (s ∩ Icc b a)).to_real := by\n  rw [eq_neg_swap, neg_inj, eq_of_le f s h]\n#align eq_of_ge eq_of_ge\n\n",
 "eq_of_eq_on":
 "theorem eq_of_eq_on {f f' : α → E} {s : Set α} (h : EqOn f f' s) : evariation_on f s = evariation_on f' s :=\n  eq_of_edist_zero_on fun x xs => by rw [h xs, edist_self]\n#align eq_of_eq_on eq_of_eq_on\n\n",
 "eq_of_edist_zero_on":
 "theorem eq_of_edist_zero_on {f f' : α → E} {s : Set α} (h : ∀ ⦃x⦄, x ∈ s → edist (f x) (f' x) = 0) :\n    evariation_on f s = evariation_on f' s := by\n  dsimp only [evariation_on]\n  congr 1 with p : 1\n  congr 1 with i : 1\n  rw [edist_congr_right (h <| p.snd.prop.2 (i + 1)), edist_congr_left (h <| p.snd.prop.2 i)]\n#align eq_of_edist_zero_on eq_of_edist_zero_on\n\n",
 "eq_neg_swap":
 "@[protected]\ntheorem eq_neg_swap (a b : α) : variation_on_from_to f s a b = -variation_on_from_to f s b a :=\n  by\n  rcases lt_trichotomy a b with (ab | rfl | ba)\n  · simp only [variation_on_from_to, if_pos ab.le, if_neg ab.not_le, neg_neg]\n  · simp only [self, neg_zero]\n  · simp only [variation_on_from_to, if_pos ba.le, if_neg ba.not_le, neg_neg]\n#align eq_neg_swap eq_neg_swap\n\n",
 "eq_left_iff":
 "@[protected]\ntheorem eq_left_iff {f : α → E} {s : Set α} (hf : has_locally_bounded_variation_on f s) {a b c : α} (ha : a ∈ s)\n    (hb : b ∈ s) (hc : c ∈ s) :\n    variation_on_from_to f s a b = variation_on_from_to f s a c ↔ variation_on_from_to f s b c = 0 := by\n  simp only [← add hf ha hb hc, self_eq_add_right]\n#align eq_left_iff eq_left_iff\n\n",
 "edist_zero_of_eq_zero":
 "@[protected]\ntheorem edist_zero_of_eq_zero {f : α → E} {s : Set α} (hf : has_locally_bounded_variation_on f s) {a b : α} (ha : a ∈ s)\n    (hb : b ∈ s) (h : variation_on_from_to f s a b = 0) : edist (f a) (f b) = 0 :=\n  by\n  wlog h' : a ≤ b\n  · rw [edist_comm]\n    apply this hf hb ha _ (le_of_not_le h')\n    rw [eq_neg_swap, h, neg_zero]\n  · apply le_antisymm _ (zero_le _)\n    rw [← ENNReal.ofReal_zero, ← h, eq_of_le f s h', ENNReal.ofReal_toReal (hf a b ha hb)]\n    apply evariation_on.edist_le\n    exacts[⟨ha, ⟨le_rfl, h'⟩⟩, ⟨hb, ⟨h', le_rfl⟩⟩]\n#align edist_zero_of_eq_zero edist_zero_of_eq_zero\n\n",
 "edist_le":
 "theorem edist_le (f : α → E) {s : Set α} {x y : α} (hx : x ∈ s) (hy : y ∈ s) : edist (f x) (f y) ≤ evariation_on f s :=\n  by\n  wlog hxy : x ≤ y\n  · rw [edist_comm]\n    exact this f hy hx (le_of_not_le hxy)\n  let u : ℕ → α := fun n => if n = 0 then x else y\n  have hu : Monotone u := by\n    intro m n hmn\n    dsimp only [u]\n    split_ifs\n    exacts[le_rfl, hxy, by linarith [pos_iff_ne_zero.2 h], le_rfl]\n  have us : ∀ i, u i ∈ s := by\n    intro i\n    dsimp only [u]\n    split_ifs\n    exacts[hx, hy]\n  convert sum_le f 1 hu us\n  simp [u, edist_comm]\n#align edist_le edist_le\n\n",
 "dist_le":
 "theorem _root_.has_bounded_variation_on.dist_le {E : Type _} [PseudoMetricSpace E] {f : α → E} {s : Set α}\n    (h : has_bounded_variation_on f s) {x y : α} (hx : x ∈ s) (hy : y ∈ s) :\n    dist (f x) (f y) ≤ (evariation_on f s).to_real :=\n  by\n  rw [← ENNReal.ofReal_le_ofReal_iff ENNReal.toReal_nonneg, ENNReal.ofReal_toReal h, ← edist_dist]\n  exact edist_le f hx hy\n#align has_bounded_variation_on.dist_le has_bounded_variation_on.dist_le\n\n",
 "constant_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem constant_on {f : α → E} {s : Set α} (hf : («expr '' » f s).subsingleton) : evariation_on f s = 0 :=\n  by\n  rw [eq_zero_iff]\n  rintro x xs y ys\n  rw [hf ⟨x, xs, rfl⟩ ⟨y, ys, rfl⟩, edist_self]\n#align constant_on constant_on\n\n",
 "comp_of_dual":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem comp_of_dual (f : α → E) (s : Set α) : evariation_on (f ∘ ofDual) («expr ⁻¹' » ofDual s) = evariation_on f s :=\n  by\n  convert comp_eq_of_antitone_on f of_dual fun _ _ _ _ => id\n  simp only [Equiv.image_preimage]\n#align comp_of_dual comp_of_dual\n\n",
 "comp_le_of_monotone_on":
 "theorem comp_le_of_monotone_on (f : α → E) {s : Set α} {t : Set β} (φ : β → α) (hφ : MonotoneOn φ t)\n    (φst : MapsTo φ t s) : evariation_on (f ∘ φ) t ≤ evariation_on f s :=\n  supᵢ_le fun ⟨n, u, hu, ut⟩ =>\n    le_supᵢ_of_le ⟨n, φ ∘ u, fun x y xy => hφ (ut x) (ut y) (hu xy), fun i => φst (ut i)⟩ le_rfl\n#align comp_le_of_monotone_on comp_le_of_monotone_on\n\n",
 "comp_le_of_antitone_on":
 "theorem comp_le_of_antitone_on (f : α → E) {s : Set α} {t : Set β} (φ : β → α) (hφ : AntitoneOn φ t)\n    (φst : MapsTo φ t s) : evariation_on (f ∘ φ) t ≤ evariation_on f s :=\n  by\n  refine' supᵢ_le _\n  rintro ⟨n, u, hu, ut⟩\n  rw [← Finset.sum_range_reflect]\n  refine'\n    (Finset.sum_congr rfl fun x hx => _).trans_le\n      (le_supᵢ_of_le\n        ⟨n, fun i => φ (u <| n - i), fun x y xy => hφ (ut _) (ut _) (hu <| n.sub_le_sub_left xy), fun i => φst (ut _)⟩\n        le_rfl)\n  dsimp only [Subtype.coe_mk]\n  rw [edist_comm, nat.sub_sub, add_comm, nat.sub_succ, nat.add_one, nat.succ_pred_eq_of_pos]\n  simpa only [tsub_pos_iff_lt, Finset.mem_range] using hx\n#align comp_le_of_antitone_on comp_le_of_antitone_on\n\n",
 "comp_inter_Icc_eq_of_monotone_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem comp_inter_Icc_eq_of_monotone_on (f : α → E) {t : Set β} (φ : β → α) (hφ : MonotoneOn φ t) {x y : β}\n    (hx : x ∈ t) (hy : y ∈ t) :\n    evariation_on (f ∘ φ) (t ∩ Icc x y) = evariation_on f («expr '' » φ t ∩ Icc (φ x) (φ y)) :=\n  by\n  rcases le_total x y with (h | h)\n  · convert comp_eq_of_monotone_on f φ (hφ.mono (Set.inter_subset_left t (Icc x y)))\n    apply le_antisymm\n    · rintro _ ⟨⟨u, us, rfl⟩, vφx, vφy⟩\n      rcases le_total x u with (xu | ux)\n      · rcases le_total u y with (uy | yu)\n        · exact ⟨u, ⟨us, ⟨xu, uy⟩⟩, rfl⟩\n        · rw [le_antisymm vφy (hφ hy us yu)]\n          exact ⟨y, ⟨hy, ⟨h, le_rfl⟩⟩, rfl⟩\n      · rw [← le_antisymm vφx (hφ us hx ux)]\n        exact ⟨x, ⟨hx, ⟨le_rfl, h⟩⟩, rfl⟩\n    · rintro _ ⟨u, ⟨⟨hu, xu, uy⟩, rfl⟩⟩\n      refine' ⟨⟨u, hu, rfl⟩, ⟨hφ hx hu xu, hφ hu hy uy⟩⟩\n  · rw [evariation_on.subsingleton, evariation_on.subsingleton]\n    exacts[(set.subsingleton_Icc_of_ge (hφ hy hx h)).anti (Set.inter_subset_right _ _),\n      (set.subsingleton_Icc_of_ge h).anti (Set.inter_subset_right _ _)]\n#align comp_inter_Icc_eq_of_monotone_on comp_inter_Icc_eq_of_monotone_on\n\n",
 "comp_has_locally_bounded_variation_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\ntheorem lipschitz_with.comp_has_locally_bounded_variation_on {f : E → F} {C : nnreal} (hf : LipschitzWith C f)\n    {g : α → E} {s : Set α} (h : has_locally_bounded_variation_on g s) : has_locally_bounded_variation_on (f ∘ g) s :=\n  (hf.lipschitz_on_with univ).comp_has_locally_bounded_variation_on (mapsTo_univ _ _) h\n#align lipschitz_with.comp_has_locally_bounded_variation_on lipschitz_with.comp_has_locally_bounded_variation_on\n\n",
 "comp_has_bounded_variation_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\ntheorem lipschitz_with.comp_has_bounded_variation_on {f : E → F} {C : nnreal} (hf : LipschitzWith C f) {g : α → E}\n    {s : Set α} (h : has_bounded_variation_on g s) : has_bounded_variation_on (f ∘ g) s :=\n  (hf.lipschitz_on_with univ).comp_has_bounded_variation_on (mapsTo_univ _ _) h\n#align lipschitz_with.comp_has_bounded_variation_on lipschitz_with.comp_has_bounded_variation_on\n\n",
 "comp_evariation_on_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\ntheorem lipschitz_on_with.comp_evariation_on_le {f : E → F} {C : nnreal} {t : Set E} (h : LipschitzOnWith C f t)\n    {g : α → E} {s : Set α} (hg : MapsTo g s t) : evariation_on (f ∘ g) s ≤ C * evariation_on g s :=\n  by\n  apply supᵢ_le _\n  rintro ⟨n, ⟨u, hu, us⟩⟩\n  calc\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          (edist (f (g (u (i + 1)))) (f (g (u i)))) ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          (C * edist (g (u (i + 1))) (g (u i))) :=\n      Finset.sum_le_sum fun i hi => h (hg (us _)) (hg (us _))\n    _ =\n        C *\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range n) (edist (g (u (i + 1))) (g (u i))) :=\n      by rw [Finset.mul_sum]\n    _ ≤ C * evariation_on g s := mul_le_mul_left' (evariation_on.sum_le _ _ hu us) _\n    \n#align lipschitz_on_with.comp_evariation_on_le lipschitz_on_with.comp_evariation_on_le\n\n",
 "comp_eq_of_monotone_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[protected]\ntheorem comp_eq_of_monotone_on (f : α → E) {t : Set β} (φ : β → α) (hφ : MonotoneOn φ t) {x y : β} (hx : x ∈ t)\n    (hy : y ∈ t) : variation_on_from_to (f ∘ φ) t x y = variation_on_from_to f («expr '' » φ t) (φ x) (φ y) :=\n  by\n  rcases le_total x y with (h | h)\n  · rw [eq_of_le _ _ h, eq_of_le _ _ (hφ hx hy h), evariation_on.comp_inter_Icc_eq_of_monotone_on f φ hφ hx hy]\n  · rw [eq_of_ge _ _ h, eq_of_ge _ _ (hφ hy hx h), evariation_on.comp_inter_Icc_eq_of_monotone_on f φ hφ hy hx]\n#align comp_eq_of_monotone_on comp_eq_of_monotone_on\n\n",
 "comp_eq_of_antitone_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem comp_eq_of_antitone_on (f : α → E) {t : Set β} (φ : β → α) (hφ : AntitoneOn φ t) :\n    evariation_on (f ∘ φ) t = evariation_on f («expr '' » φ t) :=\n  by\n  apply le_antisymm (comp_le_of_antitone_on f φ hφ (maps_to_image φ t))\n  cases isEmpty_or_nonempty β\n  · convert zero_le _\n    exact evariation_on.subsingleton f ((subsingleton_of_subsingleton.image _).anti (surj_on_image φ t))\n  let ψ := φ.inv_fun_on t\n  have ψφs : eq_on (φ ∘ ψ) id («expr '' » φ t) := (surj_on_image φ t).right_inv_on_inv_fun_on\n  have ψts := (surj_on_image φ t).maps_to_inv_fun_on\n  have hψ : AntitoneOn ψ («expr '' » φ t) := Function.antitoneOn_of_rightInvOn_of_mapsTo hφ ψφs ψts\n  change evariation_on (f ∘ id) («expr '' » φ t) ≤ evariation_on (f ∘ φ) t\n  rw [← eq_of_eq_on (ψφs.comp_left : eq_on (f ∘ φ ∘ ψ) (f ∘ id) («expr '' » φ t))]\n  exact comp_le_of_antitone_on _ ψ hψ ψts\n#align comp_eq_of_antitone_on comp_eq_of_antitone_on\n\n",
 "ae_differentiable_within_at_of_mem_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- A bounded variation function into `ℝ` is differentiable almost everywhere. Superseded by\n`ae_differentiable_within_at_of_mem`. -/\ntheorem ae_differentiable_within_at_of_mem_real {f : exprℝ → exprℝ} {s : Set (exprℝ)}\n    (h : has_locally_bounded_variation_on f s) :\n    «expr∀ᵐ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , »\"\n      (x ∈ s → differentiable_within_at (exprℝ) f s x) :=\n  by\n  obtain ⟨p, q, hp, hq, fpq⟩ : ∃ p q, MonotoneOn p s ∧ MonotoneOn q s ∧ f = p - q\n  exact h.exists_monotone_on_sub_monotone_on\n  filter_upwards [hp.ae_differentiable_within_at_of_mem, hq.ae_differentiable_within_at_of_mem]with x hxp hxq xs\n  have fpq : ∀ x, f x = p x - q x := by simp [fpq]\n  refine' ((hxp xs).sub (hxq xs)).congr (fun y hy => fpq y) (fpq x)\n#align ae_differentiable_within_at_of_mem_real ae_differentiable_within_at_of_mem_real\n\n",
 "ae_differentiable_within_at_of_mem_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- A bounded variation function into a finite dimensional product vector space is differentiable\nalmost everywhere. Superseded by `ae_differentiable_within_at_of_mem`. -/\ntheorem ae_differentiable_within_at_of_mem_pi {ι : Type _} [Fintype ι] {f : exprℝ → ι → exprℝ} {s : Set (exprℝ)}\n    (h : has_locally_bounded_variation_on f s) :\n    «expr∀ᵐ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , »\"\n      (x ∈ s → differentiable_within_at (exprℝ) f s x) :=\n  by\n  have A : ∀ i : ι, LipschitzWith 1 fun x : ι → exprℝ => x i := fun i => LipschitzWith.eval i\n  have :\n    ∀ i : ι,\n      «expr∀ᵐ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , »\"\n        (x ∈ s → differentiable_within_at (exprℝ) (fun x : exprℝ => f x i) s x) :=\n    by\n    intro i\n    apply ae_differentiable_within_at_of_mem_real\n    exact lipschitz_with.comp_has_locally_bounded_variation_on (A i) h\n  filter_upwards [ae_all_iff.2 this]with x hx xs\n  exact differentiable_within_at_pi.2 fun i => hx i xs\n#align ae_differentiable_within_at_of_mem_pi ae_differentiable_within_at_of_mem_pi\n\n",
 "ae_differentiable_within_at_of_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- A real function into a finite dimensional real vector space which is Lipschitz on a set\nis differentiable almost everywhere in this set . -/\ntheorem lipschitz_on_with.ae_differentiable_within_at_of_mem {C : nnreal} {f : exprℝ → V} {s : Set (exprℝ)}\n    (h : LipschitzOnWith C f s) :\n    «expr∀ᵐ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , »\"\n      (x ∈ s → differentiable_within_at (exprℝ) f s x) :=\n  h.has_locally_bounded_variation_on.ae_differentiable_within_at_of_mem\n#align lipschitz_on_with.ae_differentiable_within_at_of_mem lipschitz_on_with.ae_differentiable_within_at_of_mem\n\n",
 "ae_differentiable_within_at":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- A real function into a finite dimensional real vector space which is Lipschitz on a set\nis differentiable almost everywhere in this set. -/\ntheorem lipschitz_on_with.ae_differentiable_within_at {C : nnreal} {f : exprℝ → V} {s : Set (exprℝ)}\n    (h : LipschitzOnWith C f s) (hs : MeasurableSet s) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n      (volume.restrict s) (differentiable_within_at (exprℝ) f s x) :=\n  h.has_locally_bounded_variation_on.ae_differentiable_within_at hs\n#align lipschitz_on_with.ae_differentiable_within_at lipschitz_on_with.ae_differentiable_within_at\n\n",
 "ae_differentiable_at":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- A real Lipschitz function into a finite dimensional real vector space is differentiable\nalmost everywhere. -/\ntheorem lipschitz_with.ae_differentiable_at {C : nnreal} {f : exprℝ → V} (h : LipschitzWith C f) :\n    «expr∀ᵐ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ , »\"\n      (differentiable_at (exprℝ) f x) :=\n  (h.has_locally_bounded_variation_on univ).ae_differentiable_at\n#align lipschitz_with.ae_differentiable_at lipschitz_with.ae_differentiable_at\n\n",
 "add_point":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- Consider a monotone function `u` parameterizing some points of a set `s`. Given `x ∈ s`, then\none can find another monotone function `v` parameterizing the same points as `u`, with `x` added.\nIn particular, the variation of a function along `u` is bounded by its variation along `v`. -/\ntheorem add_point (f : α → E) {s : Set α} {x : α} (hx : x ∈ s) (u : ℕ → α) (hu : Monotone u) (us : ∀ i, u i ∈ s)\n    (n : ℕ) :\n    ∃ (v : ℕ → α)(m : ℕ),\n      Monotone v ∧\n        (∀ i, v i ∈ s) ∧\n          x ∈ «expr '' » v (Iio m) ∧\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.range n) (edist (f (u (i + 1))) (f (u i))) ≤\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.range m) (edist (f (v (j + 1))) (f (v j))) :=\n  by\n  rcases le_or_lt (u n) x with (h | h)\n  · let v i := if i ≤ n then u i else x\n    have vs : ∀ i, v i ∈ s := by\n      intro i\n      simp only [v]\n      split_ifs\n      · exact us i\n      · exact hx\n    have hv : Monotone v := by\n      apply monotone_nat_of_le_succ fun i => _\n      simp only [v]\n      rcases lt_trichotomy i n with (hi | rfl | hi)\n      · have : i + 1 ≤ n := nat.succ_le_of_lt hi\n        simp only [hi.le, this, if_true]\n        exact hu (nat.le_succ i)\n      · simp only [le_refl, if_true, add_le_iff_nonpos_right, le_zero_iff, nat.one_ne_zero, if_false, h]\n      · have A : ¬i ≤ n := hi.not_le\n        have B : ¬i + 1 ≤ n := fun h => A (i.le_succ.trans h)\n        simp only [A, B, if_false]\n    refine' ⟨v, n + 2, hv, vs, (mem_image _ _ _).2 ⟨n + 1, _, _⟩, _⟩\n    · rw [mem_Iio]\n      exact nat.lt_succ_self (n + 1)\n    · have : ¬n + 1 ≤ n := nat.not_succ_le_self n\n      simp only [this, ite_eq_right_iff, IsEmpty.forall_iff]\n    ·\n      calc\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n              (edist (f (u (i + 1))) (f (u i))) =\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range n) (edist (f (v (i + 1))) (f (v i))) :=\n          by\n          apply Finset.sum_congr rfl fun i hi => _\n          simp only [Finset.mem_range] at hi\n          have : i + 1 ≤ n := nat.succ_le_of_lt hi\n          dsimp only [v]\n          simp only [hi.le, this, if_true]\n        _ ≤\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range (n + 2)) (edist (f (v (j + 1))) (f (v j))) :=\n          Finset.sum_le_sum_of_subset (Finset.range_mono (nat.le_add_right n 2))\n        \n  have exists_N : ∃ N, N ≤ n ∧ x < u N := ⟨n, le_rfl, h⟩\n  let N := nat.find exists_N\n  have hN : N ≤ n ∧ x < u N := nat.find_spec exists_N\n  let w : ℕ → α := fun i => if i < N then u i else if i = N then x else u (i - 1)\n  have ws : ∀ i, w i ∈ s := by\n    dsimp only [w]\n    intro i\n    split_ifs\n    exacts[us _, hx, us _]\n  have hw : Monotone w := by\n    apply monotone_nat_of_le_succ fun i => _\n    dsimp only [w]\n    rcases lt_trichotomy (i + 1) N with (hi | hi | hi)\n    · have : i < N := nat.lt_of_le_of_lt (nat.le_succ i) hi\n      simp only [hi, this, if_true]\n      exact hu (nat.le_succ _)\n    · have A : i < N := hi ▸ i.lt_succ_self\n      have B : ¬i + 1 < N := by\n        rw [← hi]\n        exact fun h => h.ne rfl\n      rw [if_pos A, if_neg B, if_pos hi]\n      have T := nat.find_min exists_N A\n      push_neg  at T\n      exact T (A.le.trans hN.1)\n    · have A : ¬i < N := (nat.lt_succ_iff.mp hi).not_lt\n      have B : ¬i + 1 < N := hi.not_lt\n      have C : ¬i + 1 = N := hi.ne.symm\n      have D : i + 1 - 1 = i := nat.pred_succ i\n      rw [if_neg A, if_neg B, if_neg C, D]\n      split_ifs\n      · exact hN.2.le.trans (hu (le_of_not_lt A))\n      · exact hu (nat.pred_le _)\n  refine' ⟨w, n + 1, hw, ws, (mem_image _ _ _).2 ⟨N, hN.1.trans_lt (nat.lt_succ_self n), _⟩, _⟩\n  · dsimp only [w]\n    rw [if_neg (lt_irrefl N), if_pos rfl]\n  rcases eq_or_lt_of_le (zero_le N) with (Npos | Npos)\n  ·\n    calc\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n            (edist (f (u (i + 1))) (f (u i))) =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range n) (edist (f (w (1 + i + 1))) (f (w (1 + i)))) :=\n        by\n        apply Finset.sum_congr rfl fun i hi => _\n        dsimp only [w]\n        simp only [← Npos, nat.not_lt_zero, Nat.add_succ_sub_one, add_zero, if_false, add_eq_zero_iff, nat.one_ne_zero,\n          false_and_iff, Nat.succ_add_sub_one, zero_add]\n        rw [add_comm 1 i]\n      _ =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.Ico 1 (n + 1)) (edist (f (w (i + 1))) (f (w i))) :=\n        by\n        rw [Finset.range_eq_Ico]\n        exact Finset.sum_Ico_add (fun i => edist (f (w (i + 1))) (f (w i))) 0 n 1\n      _ ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range (n + 1)) (edist (f (w (j + 1))) (f (w j))) :=\n        by\n        apply Finset.sum_le_sum_of_subset _\n        rw [Finset.range_eq_Ico]\n        exact Finset.Ico_subset_Ico zero_le_one le_rfl\n      \n  ·\n    calc\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n            (edist (f (u (i + 1))) (f (u i))) =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.Ico 0 (N - 1)) (edist (f (u (i + 1))) (f (u i))) +\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.Ico (N - 1) N) (edist (f (u (i + 1))) (f (u i))) +\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.Ico N n) (edist (f (u (i + 1))) (f (u i))) :=\n        by\n        rw [Finset.sum_Ico_consecutive, Finset.sum_Ico_consecutive, Finset.range_eq_Ico]\n        · exact zero_le _\n        · exact hN.1\n        · exact zero_le _\n        · exact nat.pred_le _\n      _ =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.Ico 0 (N - 1)) (edist (f (w (i + 1))) (f (w i))) +\n              edist (f (u N)) (f (u (N - 1))) +\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.Ico N n) (edist (f (w (1 + i + 1))) (f (w (1 + i)))) :=\n        by\n        congr 1; congr 1\n        · apply Finset.sum_congr rfl fun i hi => _\n          simp only [Finset.mem_Ico, zero_le', true_and_iff] at hi\n          dsimp only [w]\n          have A : i + 1 < N := Nat.lt_pred_iff.1 hi\n          have B : i < N := nat.lt_of_succ_lt A\n          rw [if_pos A, if_pos B]\n        · have A : N - 1 + 1 = N := nat.succ_pred_eq_of_pos Npos\n          have : Finset.Ico (N - 1) N = {N - 1} := by rw [← Nat.Ico_succ_singleton, A]\n          simp only [this, A, Finset.sum_singleton]\n        · apply Finset.sum_congr rfl fun i hi => _\n          simp only [Finset.mem_Ico] at hi\n          dsimp only [w]\n          have A : ¬1 + i + 1 < N := fun h => by\n            rw [add_assoc, add_comm] at h\n            exact hi.left.not_lt (i.lt_succ_self.trans (i.succ.lt_succ_self.trans h))\n          have B : ¬1 + i + 1 = N := fun h => by\n            rw [← h, add_assoc, add_comm] at hi\n            exact nat.not_succ_le_self i (i.succ.le_succ.trans hi.left)\n          have C : ¬1 + i < N := fun h => by\n            rw [add_comm] at h\n            exact hi.left.not_lt (i.lt_succ_self.trans h)\n          have D : ¬1 + i = N := fun h => by\n            rw [← h, add_comm, Nat.succ_le_iff] at hi\n            exact hi.left.ne rfl\n          rw [if_neg A, if_neg B, if_neg C, if_neg D]\n          congr 3 <;>\n            · rw [add_comm, nat.sub_one]\n              apply nat.pred_succ\n      _ =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.Ico 0 (N - 1)) (edist (f (w (i + 1))) (f (w i))) +\n              edist (f (w (N + 1))) (f (w (N - 1))) +\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.Ico (N + 1) (n + 1)) (edist (f (w (i + 1))) (f (w i))) :=\n        by\n        congr 1; congr 1\n        · dsimp only [w]\n          have A : ¬N + 1 < N := Nat.not_succ_lt_self\n          have B : N - 1 < N := nat.pred_lt Npos.ne'\n          simp only [A, not_and, not_lt, nat.succ_ne_self, Nat.add_succ_sub_one, add_zero, if_false, B, if_true]\n        · exact Finset.sum_Ico_add (fun i => edist (f (w (i + 1))) (f (w i))) N n 1\n      _ ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.Ico 0 (N - 1)) (edist (f (w (i + 1))) (f (w i))) +\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (Finset.Ico (N - 1) (N + 1)) (edist (f (w (i + 1))) (f (w i))) +\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.Ico (N + 1) (n + 1)) (edist (f (w (i + 1))) (f (w i))) :=\n        by\n        refine' add_le_add (add_le_add le_rfl _) le_rfl\n        have A : N - 1 + 1 = N := nat.succ_pred_eq_of_pos Npos\n        have B : N - 1 + 1 < N + 1 := A.symm ▸ N.lt_succ_self\n        have C : N - 1 < N + 1 := lt_of_le_of_lt N.pred_le N.lt_succ_self\n        rw [Finset.sum_eq_sum_Ico_succ_bot C, Finset.sum_eq_sum_Ico_succ_bot B, A, Finset.Ico_self, Finset.sum_empty,\n          add_zero, add_comm (edist _ _)]\n        exact edist_triangle _ _ _\n      _ =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range (n + 1)) (edist (f (w (j + 1))) (f (w j))) :=\n        by\n        rw [Finset.sum_Ico_consecutive, Finset.sum_Ico_consecutive, Finset.range_eq_Ico]\n        · exact zero_le _\n        · exact nat.succ_le_succ hN.left\n        · exact zero_le _\n        · exact N.pred_le.trans N.le_succ\n      \n#align add_point add_point\n\n",
 "add_le_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The variation of a function on the union of two sets `s` and `t`, with `s` to the left of `t`,\nbounds the sum of the variations along `s` and `t`. -/\ntheorem add_le_union (f : α → E) {s t : Set α} (h : ∀ x ∈ s, ∀ y ∈ t, x ≤ y) :\n    evariation_on f s + evariation_on f t ≤ evariation_on f (s ∪ t) :=\n  by\n  by_cases hs : s = ∅\n  · simp [hs]\n  have : Nonempty { u // Monotone u ∧ ∀ i : ℕ, u i ∈ s } := nonempty_monotone_mem (nonempty_iff_ne_empty.2 hs)\n  by_cases ht : t = ∅\n  · simp [ht]\n  have : Nonempty { u // Monotone u ∧ ∀ i : ℕ, u i ∈ t } := nonempty_monotone_mem (nonempty_iff_ne_empty.2 ht)\n  refine' ENNReal.supᵢ_add_supᵢ_le _\n  /- We start from two sequences `u` and `v` along `s` and `t` respectively, and we build a new\n    sequence `w` along `s ∪ t` by juxtaposing them. Its variation is larger than the sum of the\n    variations. -/\n  rintro ⟨n, ⟨u, hu, us⟩⟩ ⟨m, ⟨v, hv, vt⟩⟩\n  let w i := if i ≤ n then u i else v (i - (n + 1))\n  have wst : ∀ i, w i ∈ s ∪ t := by\n    intro i\n    by_cases hi : i ≤ n\n    · simp [w, hi, us]\n    · simp [w, hi, vt]\n  have hw : Monotone w := by\n    intro i j hij\n    dsimp only [w]\n    split_ifs\n    · exact hu hij\n    · apply h _ (us _) _ (vt _)\n    · exfalso\n      exact h_1 (hij.trans h_2)\n    · apply hv (tsub_le_tsub hij le_rfl)\n  calc\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n            (edist (f (u (i + 1))) (f (u i))) +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range m) (edist (f (v (i + 1))) (f (v i))) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n            (edist (f (w (i + 1))) (f (w i))) +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range m) (edist (f (w (n + 1 + i + 1))) (f (w (n + 1 + i)))) :=\n      by\n      dsimp only [w]\n      congr 1\n      · apply Finset.sum_congr rfl fun i hi => _\n        simp only [Finset.mem_range] at hi\n        have : i + 1 ≤ n := nat.succ_le_of_lt hi\n        simp [hi.le, this]\n      · apply Finset.sum_congr rfl fun i hi => _\n        simp only [Finset.mem_range] at hi\n        have B : ¬n + 1 + i ≤ n := by linarith\n        have A : ¬n + 1 + i + 1 ≤ n := fun h => B ((n + 1 + i).le_succ.trans h)\n        have C : n + 1 + i - n = i + 1 := by\n          rw [tsub_eq_iff_eq_add_of_le]\n          · abel\n          · exact n.le_succ.trans (n.succ.le_add_right i)\n        simp only [A, B, C, nat.succ_sub_succ_eq_sub, if_false, add_tsub_cancel_left]\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n            (edist (f (w (i + 1))) (f (w i))) +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.Ico (n + 1) (n + 1 + m)) (edist (f (w (i + 1))) (f (w i))) :=\n      by\n      congr 1\n      rw [Finset.range_eq_Ico]\n      convert Finset.sum_Ico_add (fun i : ℕ => edist (f (w (i + 1))) (f (w i))) 0 m (n + 1) using 3 <;> abel\n    _ ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range (n + 1 + m)) (edist (f (w (i + 1))) (f (w i))) :=\n      by\n      rw [← Finset.sum_union]\n      · apply Finset.sum_le_sum_of_subset _\n        rintro i hi\n        simp only [Finset.mem_union, Finset.mem_range, Finset.mem_Ico] at hi⊢\n        cases hi\n        · exact lt_of_lt_of_le hi (n.le_succ.trans (n.succ.le_add_right m))\n        · exact hi.2\n      · apply Finset.disjoint_left.2 fun i hi h'i => _\n        simp only [Finset.mem_Ico, Finset.mem_range] at hi h'i\n        exact hi.not_lt (nat.lt_of_succ_le h'i.left)\n    _ ≤ evariation_on f (s ∪ t) := sum_le f _ hw wst\n    \n#align add_le_union add_le_union\n\n",
 "add":
 "@[protected]\ntheorem add {f : α → E} {s : Set α} (hf : has_locally_bounded_variation_on f s) {a b c : α} (ha : a ∈ s) (hb : b ∈ s)\n    (hc : c ∈ s) : variation_on_from_to f s a b + variation_on_from_to f s b c = variation_on_from_to f s a c :=\n  by\n  symm\n  refine' additive_of_isTotal (· ≤ ·) (variation_on_from_to f s) (· ∈ s) _ _ ha hb hc\n  · rintro x y xs ys\n    simp only [eq_neg_swap f s y x, Subtype.coe_mk, add_right_neg, forall_true_left]\n  · rintro x y z xy yz xs ys zs\n    rw [eq_of_le f s xy, eq_of_le f s yz, eq_of_le f s (xy.trans yz), ←\n      ENNReal.toReal_add (hf x y xs ys) (hf y z ys zs), evariation_on.Icc_add_Icc f xy yz ys]\n#align add add\n\n",
 "MonotoneOn":
 "#print MonotoneOn /-\n@[protected]\ntheorem MonotoneOn (hf : has_locally_bounded_variation_on f s) {a : α} (as : a ∈ s) :\n    MonotoneOn (variation_on_from_to f s a) s := by\n  rintro b bs c cs bc\n  rw [← add hf as bs cs]\n  exact le_add_of_nonneg_right (nonneg_of_le f s bc)\n#align monotone_on MonotoneOn\n-/\n\n",
 "LowerSemicontinuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵤ[ ] » -/\n#print LowerSemicontinuous /-\n/-- The map `λ f, evariation_on f s` is lower semicontinuous for pointwise convergence *on `s`*.\nPointwise convergence on `s` is encoded here as uniform convergence on the family consisting of the\nsingletons of elements of `s`.\n-/\n@[protected]\ntheorem LowerSemicontinuous (s : Set α) :\n    LowerSemicontinuous fun f : «expr →ᵤ[ ] » α (s.image singleton) E => evariation_on f s :=\n  by\n  intro f\n  apply @lower_continuous_aux _ _ _ _ (UniformOnFun α E (s.image singleton)) id ((nhds) f) f s _\n  simpa only [UniformOnFun.tendsto_iff_tendstoUniformlyOn, mem_image, forall_exists_index, and_imp,\n    forall_apply_eq_imp_iff₂, tendstoUniformlyOn_singleton_iff_tendsto] using @tendsto_id _ ((nhds) f)\n#align lower_semicontinuous LowerSemicontinuous\n-/\n\n",
 "Icc_add_Icc":
 "theorem Icc_add_Icc (f : α → E) {s : Set α} {a b c : α} (hab : a ≤ b) (hbc : b ≤ c) (hb : b ∈ s) :\n    evariation_on f (s ∩ Icc a b) + evariation_on f (s ∩ Icc b c) = evariation_on f (s ∩ Icc a c) :=\n  by\n  have A : IsGreatest (s ∩ Icc a b) b := ⟨⟨hb, hab, le_rfl⟩, (inter_subset_right _ _).trans Icc_subset_Iic_self⟩\n  have B : IsLeast (s ∩ Icc b c) b := ⟨⟨hb, le_rfl, hbc⟩, (inter_subset_right _ _).trans Icc_subset_Ici_self⟩\n  rw [← evariation_on.union f A B, ← inter_union_distrib_left, Icc_union_Icc_eq_Icc hab hbc]\n#align Icc_add_Icc Icc_add_Icc\n\n",
 "AntitoneOn":
 "#print AntitoneOn /-\n@[protected]\ntheorem AntitoneOn (hf : has_locally_bounded_variation_on f s) {b : α} (bs : b ∈ s) :\n    AntitoneOn (fun a => variation_on_from_to f s a b) s :=\n  by\n  rintro a as c cs ac\n  dsimp only\n  rw [← add hf as cs bs]\n  exact le_add_of_nonneg_left (nonneg_of_le f s ac)\n#align antitone_on AntitoneOn\n-/\n\n"}