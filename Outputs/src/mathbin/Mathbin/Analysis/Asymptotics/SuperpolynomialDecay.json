{"trans_eventually_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᶠ[ ] » -/\ntheorem superpolynomial_decay.trans_eventually_le (hk : «expr ≤ᶠ[ ] » 0 l k) (hg : superpolynomial_decay l k g)\n    (hg' : superpolynomial_decay l k g') (hfg : «expr ≤ᶠ[ ] » g l f) (hfg' : «expr ≤ᶠ[ ] » f l g') :\n    superpolynomial_decay l k f := fun z =>\n  tendsto_of_tendsto_of_tendsto_of_le_of_le' (hg z) (hg' z)\n    (hfg.mp (hk.mono fun x hx hx' => mul_le_mul_of_nonneg_left hx' (pow_nonneg hx z)))\n    (hfg'.mp (hk.mono fun x hx hx' => mul_le_mul_of_nonneg_left hx' (pow_nonneg hx z)))\n#align superpolynomial_decay.trans_eventually_le superpolynomial_decay.trans_eventually_le\n\n",
 "trans_eventually_abs_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᶠ[ ] » -/\ntheorem superpolynomial_decay.trans_eventually_abs_le (hf : superpolynomial_decay l k f)\n    (hfg : «expr ≤ᶠ[ ] » (abs ∘ g) l (abs ∘ f)) : superpolynomial_decay l k g :=\n  by\n  rw [superpolynomial_decay_iff_abs_tendsto_zero] at hf⊢\n  refine' fun z =>\n    tendsto_of_tendsto_of_tendsto_of_le_of_le' tendsto_const_nhds (hf z) (eventually_of_forall fun x => abs_nonneg _)\n      (hfg.mono fun x hx => _)\n  calc\n    |k x ^ z * g x| = |k x ^ z| * |g x| := abs_mul (k x ^ z) (g x)\n    _ ≤ |k x ^ z| * |f x| := mul_le_mul le_rfl hx (abs_nonneg _) (abs_nonneg _)\n    _ = |k x ^ z * f x| := (abs_mul (k x ^ z) (f x)).symm\n    \n#align superpolynomial_decay.trans_eventually_abs_le superpolynomial_decay.trans_eventually_abs_le\n\n",
 "trans_abs_le":
 "theorem superpolynomial_decay.trans_abs_le (hf : superpolynomial_decay l k f) (hfg : ∀ x, |g x| ≤ |f x|) :\n    superpolynomial_decay l k g :=\n  hf.trans_eventually_abs_le (eventually_of_forall hfg)\n#align superpolynomial_decay.trans_abs_le superpolynomial_decay.trans_abs_le\n\n",
 "superpolynomial_decay_zero":
 "@[simp]\ntheorem superpolynomial_decay_zero (l : filter α) (k : α → β) : superpolynomial_decay l k 0 := fun z => by\n  simpa only [pi.zero_apply, mul_zero] using tendsto_const_nhds\n#align superpolynomial_decay_zero superpolynomial_decay_zero\n\n",
 "superpolynomial_decay_param_pow_mul_iff":
 "theorem superpolynomial_decay_param_pow_mul_iff (hk : tendsto k l at_top) (n : ℕ) :\n    superpolynomial_decay l k (k ^ n * f) ↔ superpolynomial_decay l k f :=\n  by\n  induction' n with n hn\n  · simp\n  · simpa [pow_succ, ← mul_comm k, mul_assoc, superpolynomial_decay_param_mul_iff (k ^ n * f) hk] using hn\n#align superpolynomial_decay_param_pow_mul_iff superpolynomial_decay_param_pow_mul_iff\n\n",
 "superpolynomial_decay_param_mul_iff":
 "theorem superpolynomial_decay_param_mul_iff (hk : tendsto k l at_top) :\n    superpolynomial_decay l k (k * f) ↔ superpolynomial_decay l k f :=\n  ⟨fun h =>\n    (h.inv_param_mul hk).congr' ((hk.eventually_ne_at_top 0).mono fun x hx => by simp [← mul_assoc, inv_mul_cancel hx]),\n    fun h => h.param_mul⟩\n#align superpolynomial_decay_param_mul_iff superpolynomial_decay_param_mul_iff\n\n",
 "superpolynomial_decay_mul_param_pow_iff":
 "theorem superpolynomial_decay_mul_param_pow_iff (hk : tendsto k l at_top) (n : ℕ) :\n    superpolynomial_decay l k (f * k ^ n) ↔ superpolynomial_decay l k f := by\n  simpa [mul_comm f] using superpolynomial_decay_param_pow_mul_iff f hk n\n#align superpolynomial_decay_mul_param_pow_iff superpolynomial_decay_mul_param_pow_iff\n\n",
 "superpolynomial_decay_mul_param_iff":
 "theorem superpolynomial_decay_mul_param_iff (hk : tendsto k l at_top) :\n    superpolynomial_decay l k (f * k) ↔ superpolynomial_decay l k f := by\n  simpa [mul_comm k] using superpolynomial_decay_param_mul_iff f hk\n#align superpolynomial_decay_mul_param_iff superpolynomial_decay_mul_param_iff\n\n",
 "superpolynomial_decay_mul_const_iff":
 "theorem superpolynomial_decay_mul_const_iff [has_continuous_mul β] {c : β} (hc0 : c ≠ 0) :\n    (superpolynomial_decay l k fun n => f n * c) ↔ superpolynomial_decay l k f :=\n  ⟨fun h => (h.mul_const c⁻¹).congr fun x => by simp [mul_assoc, mul_inv_cancel hc0], fun h => h.mul_const c⟩\n#align superpolynomial_decay_mul_const_iff superpolynomial_decay_mul_const_iff\n\n",
 "superpolynomial_decay_iff_zpow_tendsto_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem superpolynomial_decay_iff_zpow_tendsto_zero (hk : tendsto k l at_top) :\n    superpolynomial_decay l k f ↔ ∀ z : ℤ, tendsto (fun a : α => k a ^ z * f a) l ((nhds) 0) :=\n  by\n  refine' ⟨fun h z => _, fun h n => by simpa only [zpow_ofNat] using h (n : ℤ)⟩\n  by_cases hz : 0 ≤ z\n  · lift z to ℕ using hz\n    simpa using h z\n  · have : tendsto (fun a => k a ^ z) l ((nhds) 0) := tendsto.comp (tendsto_zpow_at_top_zero (not_le.1 hz)) hk\n    have h : tendsto f l ((nhds) 0) := by simpa using h 0\n    exact zero_mul (0 : β) ▸ this.mul h\n#align superpolynomial_decay_iff_zpow_tendsto_zero superpolynomial_decay_iff_zpow_tendsto_zero\n\n",
 "superpolynomial_decay_iff_superpolynomial_decay_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem superpolynomial_decay_iff_superpolynomial_decay_norm :\n    superpolynomial_decay l k f ↔ superpolynomial_decay l (fun a => «expr‖ ‖» (k a)) fun a => «expr‖ ‖» (f a) :=\n  (superpolynomial_decay_iff_norm_tendsto_zero l k f).trans (by simp [superpolynomial_decay])\n#align superpolynomial_decay_iff_superpolynomial_decay_norm superpolynomial_decay_iff_superpolynomial_decay_norm\n\n",
 "superpolynomial_decay_iff_superpolynomial_decay_abs":
 "theorem superpolynomial_decay_iff_superpolynomial_decay_abs :\n    superpolynomial_decay l k f ↔ superpolynomial_decay l (fun a => |k a|) fun a => |f a| :=\n  (superpolynomial_decay_iff_abs_tendsto_zero l k f).trans (by simp_rw [superpolynomial_decay, abs_mul, abs_pow])\n#align superpolynomial_decay_iff_superpolynomial_decay_abs superpolynomial_decay_iff_superpolynomial_decay_abs\n\n",
 "superpolynomial_decay_iff_norm_tendsto_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem superpolynomial_decay_iff_norm_tendsto_zero :\n    superpolynomial_decay l k f ↔ ∀ n : ℕ, tendsto (fun a : α => «expr‖ ‖» (k a ^ n * f a)) l ((nhds) 0) :=\n  ⟨fun h z => tendsto_zero_iff_norm_tendsto_zero.1 (h z), fun h z => tendsto_zero_iff_norm_tendsto_zero.2 (h z)⟩\n#align superpolynomial_decay_iff_norm_tendsto_zero superpolynomial_decay_iff_norm_tendsto_zero\n\n",
 "superpolynomial_decay_iff_is_o":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =o[ ] » -/\ntheorem superpolynomial_decay_iff_is_o (hk : tendsto k l at_top) :\n    superpolynomial_decay l k f ↔ ∀ z : ℤ, «expr =o[ ] » f l fun a : α => k a ^ z :=\n  by\n  refine' ⟨fun h z => _, fun h => (superpolynomial_decay_iff_is_O f hk).2 fun z => (h z).is_O⟩\n  have hk0 :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" l\n      (k x ≠ 0) :=\n    hk.eventually_ne_at_top 0\n  have : «expr =o[ ] » (fun x : α => (1 : β)) l k :=\n    is_o_of_tendsto' (hk0.mono fun x hkx hkx' => absurd hkx' hkx) (by simpa using hk.inv_tendsto_at_top)\n  have : «expr =o[ ] » f l fun x : α => k x * k x ^ (z - 1) := by\n    simpa using this.mul_is_O ((superpolynomial_decay_iff_is_O f hk).1 h <| z - 1)\n  refine' this.trans_is_O (is_O.of_bound 1 (hk0.mono fun x hkx => le_of_eq _))\n  rw [one_mul, zpow_sub_one₀ hkx, mul_comm (k x), mul_assoc, inv_mul_cancel hkx, mul_one]\n#align superpolynomial_decay_iff_is_o superpolynomial_decay_iff_is_o\n\n",
 "superpolynomial_decay_iff_is_O":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =O[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =O[ ] » -/\ntheorem superpolynomial_decay_iff_is_O (hk : tendsto k l at_top) :\n    superpolynomial_decay l k f ↔ ∀ z : ℤ, «expr =O[ ] » f l fun a : α => k a ^ z :=\n  by\n  refine' (superpolynomial_decay_iff_zpow_tendsto_zero f hk).trans _\n  have hk0 :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" l\n      (k x ≠ 0) :=\n    hk.eventually_ne_at_top 0\n  refine' ⟨fun h z => _, fun h z => _⟩\n  · refine' is_O_of_div_tendsto_nhds (hk0.mono fun x hx hxz => absurd (zpow_eq_zero hxz) hx) 0 _\n    have : (fun a : α => k a ^ z)⁻¹ = fun a : α => k a ^ (-z) := funext fun x => by simp\n    rw [div_eq_mul_inv, mul_comm f, this]\n    exact h (-z)\n  · suffices : «expr =O[ ] » (fun a : α => k a ^ z * f a) l fun a : α => (k a)⁻¹\n    exact is_O.trans_tendsto this hk.inv_tendsto_at_top\n    refine' ((is_O_refl (fun a => k a ^ z) l).mul (h (-(z + 1)))).trans (is_O.of_bound 1 <| hk0.mono fun a ha0 => _)\n    simp only [one_mul, neg_add z 1, zpow_add₀ ha0, ← mul_assoc, zpow_neg, mul_inv_cancel (zpow_ne_zero z ha0),\n      zpow_one]\n#align superpolynomial_decay_iff_is_O superpolynomial_decay_iff_is_O\n\n",
 "superpolynomial_decay_iff_abs_tendsto_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem superpolynomial_decay_iff_abs_tendsto_zero :\n    superpolynomial_decay l k f ↔ ∀ n : ℕ, tendsto (fun a : α => |k a ^ n * f a|) l ((nhds) 0) :=\n  ⟨fun h z => (tendsto_zero_iff_abs_tendsto_zero _).1 (h z), fun h z => (tendsto_zero_iff_abs_tendsto_zero _).2 (h z)⟩\n#align superpolynomial_decay_iff_abs_tendsto_zero superpolynomial_decay_iff_abs_tendsto_zero\n\n",
 "superpolynomial_decay_iff_abs_is_bounded_under":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem superpolynomial_decay_iff_abs_is_bounded_under (hk : tendsto k l at_top) :\n    superpolynomial_decay l k f ↔ ∀ z : ℕ, is_bounded_under (· ≤ ·) l fun a : α => |k a ^ z * f a| :=\n  by\n  refine'\n    ⟨fun h z => tendsto.is_bounded_under_le (tendsto.abs (h z)), fun h =>\n      (superpolynomial_decay_iff_abs_tendsto_zero l k f).2 fun z => _⟩\n  obtain ⟨m, hm⟩ := h (z + 1)\n  have h1 : tendsto (fun a : α => (0 : β)) l ((nhds) 0) := tendsto_const_nhds\n  have h2 : tendsto (fun a : α => |(k a)⁻¹| * m) l ((nhds) 0) :=\n    zero_mul m ▸ tendsto.mul_const m ((tendsto_zero_iff_abs_tendsto_zero _).1 hk.inv_tendsto_at_top)\n  refine'\n    tendsto_of_tendsto_of_tendsto_of_le_of_le' h1 h2 (eventually_of_forall fun x => abs_nonneg _)\n      ((eventually_map.1 hm).mp _)\n  refine' (hk.eventually_ne_at_top 0).mono fun x hk0 hx => _\n  refine' eq.trans_le _ (mul_le_mul_of_nonneg_left hx <| abs_nonneg (k x)⁻¹)\n  rw [← abs_mul, ← mul_assoc, pow_succ, ← mul_assoc, inv_mul_cancel hk0, one_mul]\n#align superpolynomial_decay_iff_abs_is_bounded_under superpolynomial_decay_iff_abs_is_bounded_under\n\n",
 "superpolynomial_decay_const_mul_iff":
 "theorem superpolynomial_decay_const_mul_iff [has_continuous_mul β] {c : β} (hc0 : c ≠ 0) :\n    (superpolynomial_decay l k fun n => c * f n) ↔ superpolynomial_decay l k f :=\n  ⟨fun h => (h.const_mul c⁻¹).congr fun x => by simp [← mul_assoc, inv_mul_cancel hc0], fun h => h.const_mul c⟩\n#align superpolynomial_decay_const_mul_iff superpolynomial_decay_const_mul_iff\n\n",
 "polynomial_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem superpolynomial_decay.polynomial_mul [has_continuous_add β] [has_continuous_mul β]\n    (hf : superpolynomial_decay l k f) (p : polynomial β) : superpolynomial_decay l k fun x => (p.eval <| k x) * f x :=\n  polynomial.induction_on' p (fun p q hp hq => by simpa [add_mul] using hp.add hq) fun n c => by\n    simpa [mul_assoc] using (hf.param_pow_mul n).const_mul c\n#align superpolynomial_decay.polynomial_mul superpolynomial_decay.polynomial_mul\n\n",
 "param_zpow_mul":
 "theorem superpolynomial_decay.param_zpow_mul (hk : tendsto k l at_top) (hf : superpolynomial_decay l k f) (z : ℤ) :\n    superpolynomial_decay l k fun a => k a ^ z * f a :=\n  by\n  rw [superpolynomial_decay_iff_zpow_tendsto_zero _ hk] at hf⊢\n  refine' fun z' => (hf <| z' + z).congr' ((hk.eventually_ne_at_top 0).mono fun x hx => _)\n  simp [zpow_add₀ hx, mul_assoc, pi.mul_apply]\n#align superpolynomial_decay.param_zpow_mul superpolynomial_decay.param_zpow_mul\n\n",
 "param_pow_mul":
 "theorem superpolynomial_decay.param_pow_mul (hf : superpolynomial_decay l k f) (n : ℕ) :\n    superpolynomial_decay l k (k ^ n * f) := by\n  induction' n with n hn\n  · simpa only [one_mul, pow_zero] using hf\n  · simpa only [pow_succ, mul_assoc] using hn.param_mul\n#align superpolynomial_decay.param_pow_mul superpolynomial_decay.param_pow_mul\n\n",
 "param_mul":
 "theorem superpolynomial_decay.param_mul (hf : superpolynomial_decay l k f) : superpolynomial_decay l k (k * f) :=\n  fun z =>\n  tendsto_nhds.2 fun s hs hs0 =>\n    l.sets_of_superset ((tendsto_nhds.1 (hf <| z + 1)) s hs hs0) fun x hx => by\n      simpa only [Set.mem_preimage, pi.mul_apply, ← mul_assoc, ← pow_succ'] using hx\n#align superpolynomial_decay.param_mul superpolynomial_decay.param_mul\n\n",
 "param_inv_mul":
 "theorem superpolynomial_decay.param_inv_mul (hk : tendsto k l at_top) (hf : superpolynomial_decay l k f) :\n    superpolynomial_decay l k (f * k⁻¹) :=\n  (hf.inv_param_mul hk).congr fun _ => mul_comm _ _\n#align superpolynomial_decay.param_inv_mul superpolynomial_decay.param_inv_mul\n\n",
 "mul_polynomial":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem superpolynomial_decay.mul_polynomial [has_continuous_add β] [has_continuous_mul β]\n    (hf : superpolynomial_decay l k f) (p : polynomial β) : superpolynomial_decay l k fun x => f x * (p.eval <| k x) :=\n  (hf.polynomial_mul p).congr fun _ => mul_comm _ _\n#align superpolynomial_decay.mul_polynomial superpolynomial_decay.mul_polynomial\n\n",
 "mul_param_zpow":
 "theorem superpolynomial_decay.mul_param_zpow (hk : tendsto k l at_top) (hf : superpolynomial_decay l k f) (z : ℤ) :\n    superpolynomial_decay l k fun a => f a * k a ^ z :=\n  (hf.param_zpow_mul hk z).congr fun _ => mul_comm _ _\n#align superpolynomial_decay.mul_param_zpow superpolynomial_decay.mul_param_zpow\n\n",
 "mul_param_pow":
 "theorem superpolynomial_decay.mul_param_pow (hf : superpolynomial_decay l k f) (n : ℕ) :\n    superpolynomial_decay l k (f * k ^ n) :=\n  (hf.param_pow_mul n).congr fun _ => mul_comm _ _\n#align superpolynomial_decay.mul_param_pow superpolynomial_decay.mul_param_pow\n\n",
 "mul_param":
 "theorem superpolynomial_decay.mul_param (hf : superpolynomial_decay l k f) : superpolynomial_decay l k (f * k) :=\n  hf.param_mul.congr fun _ => mul_comm _ _\n#align superpolynomial_decay.mul_param superpolynomial_decay.mul_param\n\n",
 "mul_const":
 "theorem superpolynomial_decay.mul_const [has_continuous_mul β] (hf : superpolynomial_decay l k f) (c : β) :\n    superpolynomial_decay l k fun n => f n * c := fun z => by\n  simpa only [← mul_assoc, zero_mul] using tendsto.mul_const c (hf z)\n#align superpolynomial_decay.mul_const superpolynomial_decay.mul_const\n\n",
 "mul":
 "theorem superpolynomial_decay.mul [has_continuous_mul β] (hf : superpolynomial_decay l k f)\n    (hg : superpolynomial_decay l k g) : superpolynomial_decay l k (f * g) := fun z => by\n  simpa only [mul_assoc, one_mul, mul_zero, pow_zero] using (hf z).mul (hg 0)\n#align superpolynomial_decay.mul superpolynomial_decay.mul\n\n",
 "inv_param_mul":
 "theorem superpolynomial_decay.inv_param_mul (hk : tendsto k l at_top) (hf : superpolynomial_decay l k f) :\n    superpolynomial_decay l k (k⁻¹ * f) := by simpa using hf.param_zpow_mul hk (-1)\n#align superpolynomial_decay.inv_param_mul superpolynomial_decay.inv_param_mul\n\n",
 "const_mul":
 "theorem superpolynomial_decay.const_mul [has_continuous_mul β] (hf : superpolynomial_decay l k f) (c : β) :\n    superpolynomial_decay l k fun n => c * f n :=\n  (hf.mul_const c).congr fun _ => mul_comm _ _\n#align superpolynomial_decay.const_mul superpolynomial_decay.const_mul\n\n",
 "congr'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/-\nCopyright (c) 2021 Devon Tuma. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Devon Tuma\n-/\ntheorem superpolynomial_decay.congr' (hf : superpolynomial_decay l k f) (hfg : «expr =ᶠ[ ] » f l g) :\n    superpolynomial_decay l k g := fun z => (hf z).congr' (eventually_eq.mul (eventually_eq.refl l _) hfg)\n#align superpolynomial_decay.congr' superpolynomial_decay.congr'\n\n",
 "congr":
 "theorem superpolynomial_decay.congr (hf : superpolynomial_decay l k f) (hfg : ∀ x, f x = g x) :\n    superpolynomial_decay l k g := fun z => (hf z).congr fun x => (congr_arg fun a => k x ^ z * a) <| hfg x\n#align superpolynomial_decay.congr superpolynomial_decay.congr\n\n",
 "add":
 "theorem superpolynomial_decay.add [has_continuous_add β] (hf : superpolynomial_decay l k f)\n    (hg : superpolynomial_decay l k g) : superpolynomial_decay l k (f + g) := fun z => by\n  simpa only [mul_add, add_zero, pi.add_apply] using (hf z).add (hg z)\n#align superpolynomial_decay.add superpolynomial_decay.add\n\n"}