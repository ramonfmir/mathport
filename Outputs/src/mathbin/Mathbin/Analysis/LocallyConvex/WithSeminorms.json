{"with_seminorms_of_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem seminorm_family.with_seminorms_of_nhds (p : seminorm_family 𝕜 E ι)\n    (h : (nhds) (0 : E) = p.module_filter_basis.to_filter_basis.filter) : with_seminorms p :=\n  by\n  refine' ⟨TopologicalAddGroup.ext inferInstance p.add_group_filter_basis.is_topological_add_group _⟩\n  rw [AddGroupFilterBasis.nhds_zero_eq]\n  exact h\n#align seminorm_family.with_seminorms_of_nhds seminorm_family.with_seminorms_of_nhds\n\n",
 "with_seminorms_of_has_basis":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem seminorm_family.with_seminorms_of_has_basis (p : seminorm_family 𝕜 E ι)\n    (h : ((nhds) (0 : E)).has_basis (fun s : Set E => s ∈ p.basis_sets) id) : with_seminorms p :=\n  p.with_seminorms_of_nhds <| Filter.HasBasis.eq_of_same_basis h p.add_group_filter_basis.to_filter_basis.has_basis\n#align seminorm_family.with_seminorms_of_has_basis seminorm_family.with_seminorms_of_has_basis\n\n",
 "with_seminorms_induced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem linear_map.with_seminorms_induced [hι : Nonempty ι] {q : seminorm_family 𝕜₂ F ι} (hq : with_seminorms q)\n    (f : «expr →ₛₗ[ ] » E σ₁₂ F) : @with_seminorms 𝕜 E ι _ _ _ _ (q.comp f) (induced f inferInstance) :=\n  by\n  letI : TopologicalSpace E := induced f inferInstance\n  letI : TopologicalAddGroup E := topologicalAddGroup_induced f\n  rw [(q.comp f).with_seminorms_iff_nhds_eq_infi, nhds_induced, map_zero, q.with_seminorms_iff_nhds_eq_infi.mp hq,\n    Filter.comap_infᵢ]\n  refine' infᵢ_congr fun i => _\n  exact Filter.comap_comap\n#align linear_map.with_seminorms_induced linear_map.with_seminorms_induced\n\n",
 "with_seminorms_iff_uniform_space_eq_infi":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr «expr = »(_, «expr⨅ , »((i), _))]] -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/-- The uniform structure induced by a family of seminorms is exactly the infimum of the ones\ninduced by each seminorm individually. We express this as a characterization of\n`with_seminorms p`. -/\ntheorem seminorm_family.with_seminorms_iff_uniform_space_eq_infi [u : UniformSpace E] [UniformAddGroup E]\n    (p : seminorm_family 𝕜 E ι) :\n    with_seminorms p ↔\n      u =\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          (p i).to_add_group_seminorm.to_seminormed_add_comm_group.to_uniform_space :=\n  by\n  rw [p.with_seminorms_iff_nhds_eq_infi,\n    UniformAddGroup.ext_iff inferInstance (uniformAddGroup_infᵢ fun i => inferInstance), toTopologicalSpace_infᵢ,\n    nhds_infᵢ]\n  trace\n    \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr «expr = »(_, «expr⨅ , »((i), _))]]\"\n  exact @comap_norm_nhds_zero _ (p i).to_add_group_seminorm.to_seminormed_add_group\n  all_goals infer_instance\n#align seminorm_family.with_seminorms_iff_uniform_space_eq_infi seminorm_family.with_seminorms_iff_uniform_space_eq_infi\n\n",
 "with_seminorms_iff_topological_space_eq_infi":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr «expr = »(_, «expr⨅ , »((i), _))]] -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/-- The topology induced by a family of seminorms is exactly the infimum of the ones induced by\neach seminorm individually. We express this as a characterization of `with_seminorms p`. -/\ntheorem seminorm_family.with_seminorms_iff_topological_space_eq_infi (p : seminorm_family 𝕜 E ι) :\n    with_seminorms p ↔\n      t =\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          (p i).to_add_group_seminorm.to_seminormed_add_comm_group.to_uniform_space.to_topological_space :=\n  by\n  rw [p.with_seminorms_iff_nhds_eq_infi,\n    TopologicalAddGroup.ext_iff inferInstance (topologicalAddGroup_infᵢ fun i => inferInstance), nhds_infᵢ]\n  trace\n    \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr «expr = »(_, «expr⨅ , »((i), _))]]\"\n  exact @comap_norm_nhds_zero _ (p i).to_add_group_seminorm.to_seminormed_add_group\n  all_goals infer_instance\n#align seminorm_family.with_seminorms_iff_topological_space_eq_infi seminorm_family.with_seminorms_iff_topological_space_eq_infi\n\n",
 "with_seminorms_iff_nhds_eq_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem seminorm_family.with_seminorms_iff_nhds_eq_infi (p : seminorm_family 𝕜 E ι) :\n    with_seminorms p ↔\n      ((nhds) 0 : Filter E) =\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          (((nhds) 0).comap (p i)) :=\n  by\n  rw [← p.filter_eq_infi]\n  refine' ⟨fun h => _, p.with_seminorms_of_nhds⟩\n  rw [h.topology_eq_with_seminorms]\n  exact AddGroupFilterBasis.nhds_zero_eq _\n#align seminorm_family.with_seminorms_iff_nhds_eq_infi seminorm_family.with_seminorms_iff_nhds_eq_infi\n\n",
 "with_seminorms_eq":
 "theorem with_seminorms.with_seminorms_eq {p : seminorm_family 𝕜 E ι} [t : TopologicalSpace E] (hp : with_seminorms p) :\n    t = p.module_filter_basis.topology :=\n  hp.1\n#align with_seminorms.with_seminorms_eq with_seminorms.with_seminorms_eq\n\n",
 "with_seminorms":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem inducing.with_seminorms [hι : Nonempty ι] {q : seminorm_family 𝕜₂ F ι} (hq : with_seminorms q)\n    [TopologicalSpace E] {f : «expr →ₛₗ[ ] » E σ₁₂ F} (hf : Inducing f) : with_seminorms (q.comp f) :=\n  by\n  rw [hf.induced]\n  exact f.with_seminorms_induced hq\n#align inducing.with_seminorms inducing.with_seminorms\n\n",
 "topological_add_group":
 "theorem with_seminorms.topological_add_group (hp : with_seminorms p) : TopologicalAddGroup E :=\n  by\n  rw [hp.with_seminorms_eq]\n  exact AddGroupFilterBasis.isTopologicalAddGroup _\n#align with_seminorms.topological_add_group with_seminorms.topological_add_group\n\n",
 "to_locally_convex_space'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- Not an instance since `𝕜` can't be inferred. See `normed_space.to_locally_convex_space` for a\nslightly weaker instance version. -/\ntheorem normed_space.to_locally_convex_space' [NormedSpace 𝕜 E] [Module (exprℝ) E] [IsScalarTower (exprℝ) 𝕜 E] :\n    locally_convex_space (exprℝ) E :=\n  (norm_with_seminorms 𝕜 E).to_locally_convex_space\n#align normed_space.to_locally_convex_space' normed_space.to_locally_convex_space'\n\n",
 "to_locally_convex_space":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem with_seminorms.to_locally_convex_space {p : seminorm_family 𝕜 E ι} (hp : with_seminorms p) :\n    locally_convex_space (exprℝ) E :=\n  by\n  apply of_basis_zero (exprℝ) E id fun s => s ∈ p.basis_sets\n  · rw [hp.1, AddGroupFilterBasis.nhds_eq _, AddGroupFilterBasis.N_zero]\n    exact FilterBasis.hasBasis _\n  · intro s hs\n    change s ∈ Set.unionᵢ _ at hs\n    simp_rw [Set.mem_unionᵢ, Set.mem_singleton_iff] at hs\n    rcases hs with ⟨I, r, hr, rfl⟩\n    exact convex_ball _ _ _\n#align with_seminorms.to_locally_convex_space with_seminorms.to_locally_convex_space\n\n",
 "tendsto_nhds_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- Limit `→ ∞` for `with_seminorms`. -/\ntheorem with_seminorms.tendsto_nhds_at_top (hp : with_seminorms p) (u : F → E) (y₀ : E) :\n    Filter.Tendsto u Filter.atTop ((nhds) y₀) ↔ ∀ i ε, 0 < ε → ∃ x₀, ∀ x, x₀ ≤ x → p i (u x - y₀) < ε :=\n  by\n  rw [hp.tendsto_nhds u y₀]\n  exact forall₃_congr fun _ _ _ => Filter.eventually_atTop\n#align with_seminorms.tendsto_nhds_at_top with_seminorms.tendsto_nhds_at_top\n\n",
 "tendsto_nhds'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/-- Convergence along filters for `with_seminorms`.\n\nVariant with `finset.sup`. -/\ntheorem with_seminorms.tendsto_nhds' (hp : with_seminorms p) (u : F → E) {f : Filter F} (y₀ : E) :\n    Filter.Tendsto u f ((nhds) y₀) ↔\n      ∀ (s : Finset ι) (ε),\n        0 < ε →\n          «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n            (s.sup p (u x - y₀) < ε) :=\n  by simp [hp.has_basis_ball.tendsto_right_iff]\n#align with_seminorms.tendsto_nhds' with_seminorms.tendsto_nhds'\n\n",
 "tendsto_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/-- Convergence along filters for `with_seminorms`. -/\ntheorem with_seminorms.tendsto_nhds (hp : with_seminorms p) (u : F → E) {f : Filter F} (y₀ : E) :\n    Filter.Tendsto u f ((nhds) y₀) ↔\n      ∀ i ε,\n        0 < ε →\n          «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n            (p i (u x - y₀) < ε) :=\n  by\n  rw [hp.tendsto_nhds' u y₀]\n  exact\n    ⟨fun h i => by simpa only [Finset.sup_singleton] using h {i}, fun h s ε hε =>\n      (s.eventually_all.2 fun i _ => h i ε hε).mono fun _ => finset_sup_apply_lt hε⟩\n#align with_seminorms.tendsto_nhds with_seminorms.tendsto_nhds\n\n",
 "t1_of_separating":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (x «expr ≠ » 0) -/\n/- Note that through the following lemmas, one also immediately has that separating families\nof seminorms induce T₂ and T₃ topologies by `topological_add_group.t2_space`\nand `topological_add_group.t3_space` -/\n/-- A separating family of seminorms induces a T₁ topology. -/\ntheorem with_seminorms.t1_of_separating (hp : with_seminorms p) (h : ∀ (x) (_ : x ≠ 0), ∃ i, p i x ≠ 0) : T1Space E :=\n  by\n  haveI := hp.topological_add_group\n  refine' TopologicalAddGroup.t1Space _ _\n  rw [← isOpen_compl_iff, hp.is_open_iff_mem_balls]\n  rintro x (hx : x ≠ 0)\n  cases' h x hx with i pi_nonzero\n  refine' ⟨{i}, p i x, by positivity, subset_compl_singleton_iff.mpr _⟩\n  rw [Finset.sup_singleton, mem_ball, zero_sub, map_neg_eq_map, not_lt]\n#align with_seminorms.t1_of_separating with_seminorms.t1_of_separating\n\n",
 "separating_of_t1":
 "/-- A family of seminorms inducing a T₁ topology is separating. -/\ntheorem with_seminorms.separating_of_t1 [T1Space E] (hp : with_seminorms p) (x : E) (hx : x ≠ 0) : ∃ i, p i x ≠ 0 :=\n  by\n  have := ((t1Space_TFAE E).out 0 9).mp inferInstance\n  by_contra' h\n  refine' hx (this _)\n  rw [hp.has_basis_zero_ball.specializes_iff]\n  rintro ⟨s, r⟩ (hr : 0 < r)\n  simp only [ball_finset_sup_eq_Inter _ _ _ hr, mem_Inter₂, mem_ball_zero, h, hr, forall_true_iff]\n#align with_seminorms.separating_of_t1 with_seminorms.separating_of_t1\n\n",
 "separating_iff_t1":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (x «expr ≠ » 0) -/\n/-- A family of seminorms is separating iff it induces a T₁ topology. -/\ntheorem with_seminorms.separating_iff_t1 (hp : with_seminorms p) : (∀ (x) (_ : x ≠ 0), ∃ i, p i x ≠ 0) ↔ T1Space E :=\n  by\n  refine' ⟨with_seminorms.t1_of_separating hp, _⟩\n  intro\n  exact with_seminorms.separating_of_t1 hp\n#align with_seminorms.separating_iff_t1 with_seminorms.separating_iff_t1\n\n",
 "norm_with_seminorms":
 "/-- The topology of a `normed_space 𝕜 E` is induced by the seminorm `norm_seminorm 𝕜 E`. -/\ntheorem norm_with_seminorms (𝕜 E) [NormedField 𝕜] [SeminormedAddCommGroup E] [NormedSpace 𝕜 E] :\n    with_seminorms fun _ : Fin 1 => normSeminorm 𝕜 E :=\n  by\n  let p : seminorm_family 𝕜 E (Fin 1) := fun _ => normSeminorm 𝕜 E\n  refine' ⟨seminormed_add_comm_group.to_topological_add_group.ext p.add_group_filter_basis.is_topological_add_group _⟩\n  refine' Filter.HasBasis.eq_of_same_basis Metric.nhds_basis_ball _\n  rw [← ball_normSeminorm 𝕜 E]\n  refine'\n    Filter.HasBasis.to_hasBasis p.add_group_filter_basis.nhds_zero_has_basis _ fun r hr =>\n      ⟨(normSeminorm 𝕜 E).ball 0 r, p.basis_sets_singleton_mem 0 hr, rfl.subset⟩\n  rintro U (hU : U ∈ p.basis_sets)\n  rcases p.basis_sets_iff.mp hU with ⟨s, r, hr, hU⟩\n  use r, hr\n  rw [hU, id.def]\n  by_cases h : s.nonempty\n  · rw [Finset.sup_const h]\n  rw [finset.not_nonempty_iff_eq_empty.mp h, Finset.sup_empty, ball_bot _ hr]\n  exact Set.subset_univ _\n#align norm_with_seminorms norm_with_seminorms\n\n",
 "mem_nhds_iff":
 "/-- The `x`-neighbourhoods of a space whose topology is induced by a family of seminorms\nare exactly the sets which contain seminorm balls around `x`.-/\ntheorem with_seminorms.mem_nhds_iff (hp : with_seminorms p) (x : E) (U : Set E) :\n    U ∈ nhds x ↔ ∃ s : Finset ι, ∃ r > 0, (s.sup p).ball x r ⊆ U := by rw [hp.has_basis_ball.mem_iff, Prod.exists]\n#align with_seminorms.mem_nhds_iff with_seminorms.mem_nhds_iff\n\n",
 "is_vonN_bounded_iff_seminorm_bounded":
 "theorem with_seminorms.is_vonN_bounded_iff_seminorm_bounded {s : Set E} (hp : with_seminorms p) :\n    Bornology.IsVonNBounded 𝕜 s ↔ ∀ i : ι, ∃ (r : _)(hr : 0 < r), ∀ x ∈ s, p i x < r :=\n  by\n  rw [hp.is_vonN_bounded_iff_finset_seminorm_bounded]\n  constructor\n  · intro hI i\n    convert hI {i}\n    rw [Finset.sup_singleton]\n  intro hi I\n  by_cases hI : I.nonempty\n  · choose r hr h using hi\n    have h' : 0 < I.sup' hI r := by\n      rcases hI.bex with ⟨i, hi⟩\n      exact lt_of_lt_of_le (hr i) (Finset.le_sup' r hi)\n    refine' ⟨I.sup' hI r, h', fun x hx => finset_sup_apply_lt h' fun i hi => _⟩\n    refine' lt_of_lt_of_le (h i x hx) _\n    simp only [Finset.le_sup'_iff, exists_prop]\n    exact ⟨i, hi, (Eq.refl _).le⟩\n  simp only [finset.not_nonempty_iff_eq_empty.mp hI, Finset.sup_empty, coe_bot, Pi.zero_apply, exists_prop]\n  exact ⟨1, zero_lt_one, fun _ _ => zero_lt_one⟩\n#align with_seminorms.is_vonN_bounded_iff_seminorm_bounded with_seminorms.is_vonN_bounded_iff_seminorm_bounded\n\n",
 "is_vonN_bounded_iff_finset_seminorm_bounded":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem with_seminorms.is_vonN_bounded_iff_finset_seminorm_bounded {s : Set E} (hp : with_seminorms p) :\n    Bornology.IsVonNBounded 𝕜 s ↔ ∀ I : Finset ι, ∃ (r : _)(hr : 0 < r), ∀ x ∈ s, I.sup p x < r :=\n  by\n  rw [hp.has_basis.is_vonN_bounded_basis_iff]\n  constructor\n  · intro h I\n    simp only [id.def] at h\n    specialize h ((I.sup p).ball 0 1) (p.basis_sets_mem I zero_lt_one)\n    rcases h with ⟨r, hr, h⟩\n    cases' NormedField.exists_lt_norm 𝕜 r with a ha\n    specialize h a (le_of_lt ha)\n    rw [Seminorm.smul_ball_zero (norm_pos_iff.1 <| hr.trans ha), mul_one] at h\n    refine' ⟨«expr‖ ‖» a, lt_trans hr ha, _⟩\n    intro x hx\n    specialize h hx\n    exact (Finset.sup I p).mem_ball_zero.mp h\n  intro h s' hs'\n  rcases p.basis_sets_iff.mp hs' with ⟨I, r, hr, hs'⟩\n  rw [id.def, hs']\n  rcases h I with ⟨r', hr', h'⟩\n  simp_rw [← (I.sup p).mem_ball_zero] at h'\n  refine' Absorbs.mono_right _ h'\n  exact (Finset.sup I p).ball_zero_absorbs_ball_zero hr\n#align with_seminorms.is_vonN_bounded_iff_finset_seminorm_bounded with_seminorms.is_vonN_bounded_iff_finset_seminorm_bounded\n\n",
 "is_open_iff_mem_balls":
 "/-- The open sets of a space whose topology is induced by a family of seminorms\nare exactly the sets which contain seminorm balls around all of their points.-/\ntheorem with_seminorms.is_open_iff_mem_balls (hp : with_seminorms p) (U : Set E) :\n    IsOpen U ↔ ∀ x ∈ U, ∃ s : Finset ι, ∃ r > 0, (s.sup p).ball x r ⊆ U := by\n  simp_rw [← with_seminorms.mem_nhds_iff hp _ U, isOpen_iff_mem_nhds]\n#align with_seminorms.is_open_iff_mem_balls with_seminorms.is_open_iff_mem_balls\n\n",
 "is_bounded_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem is_bounded_sup {p : ι → Seminorm 𝕜 E} {q : ι' → Seminorm 𝕜₂ F} {f : «expr →ₛₗ[ ] » E σ₁₂ F}\n    (hf : is_bounded p q f) (s' : Finset ι') :\n    ∃ (C : nnreal)(s : Finset ι), (s'.sup q).comp f ≤ «expr • » C (s.sup p) := by\n  classical\n    obtain rfl | hs' := s'.eq_empty_or_nonempty\n    · exact ⟨1, ∅, by simp [Seminorm.bot_eq_zero]⟩\n    choose fₛ fC hf using hf\n    use «expr • » s'.card (s'.sup fC), Finset.bunionᵢ s' fₛ\n    have hs : ∀ i : ι', i ∈ s' → (q i).comp f ≤ «expr • » (s'.sup fC) ((Finset.bunionᵢ s' fₛ).sup p) :=\n      by\n      intro i hi\n      refine' (hf i).trans (smul_le_smul _ (Finset.le_sup hi))\n      exact Finset.sup_mono (Finset.subset_bunionᵢ_of_mem fₛ hi)\n    refine' (comp_mono f (finset_sup_le_sum q s')).trans _\n    simp_rw [← pullback_apply, AddMonoidHom.map_sum, pullback_apply]\n    refine' (Finset.sum_le_sum hs).trans _\n    rw [Finset.sum_const, smul_assoc]\n    exact le_rfl\n#align is_bounded_sup is_bounded_sup\n\n",
 "is_bounded_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n-- Todo: This should be phrased entirely in terms of the von Neumann bornology.\ntheorem is_bounded_const (ι' : Type _) [Nonempty ι'] {p : ι → Seminorm 𝕜 E} {q : Seminorm 𝕜₂ F}\n    (f : «expr →ₛₗ[ ] » E σ₁₂ F) :\n    is_bounded p (fun _ : ι' => q) f ↔ ∃ (s : Finset ι)(C : nnreal), q.comp f ≤ «expr • » C (s.sup p) := by\n  simp only [is_bounded, forall_const]\n#align is_bounded_const is_bounded_const\n\n",
 "image_is_vonN_bounded_iff_seminorm_bounded":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem with_seminorms.image_is_vonN_bounded_iff_seminorm_bounded (f : G → E) {s : Set G} (hp : with_seminorms p) :\n    Bornology.IsVonNBounded 𝕜 («expr '' » f s) ↔ ∀ i : ι, ∃ (r : _)(hr : 0 < r), ∀ x ∈ s, p i (f x) < r := by\n  simp_rw [hp.is_vonN_bounded_iff_seminorm_bounded, Set.ball_image_iff]\n#align with_seminorms.image_is_vonN_bounded_iff_seminorm_bounded with_seminorms.image_is_vonN_bounded_iff_seminorm_bounded\n\n",
 "image_is_vonN_bounded_iff_finset_seminorm_bounded":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem with_seminorms.image_is_vonN_bounded_iff_finset_seminorm_bounded (f : G → E) {s : Set G}\n    (hp : with_seminorms p) :\n    Bornology.IsVonNBounded 𝕜 («expr '' » f s) ↔ ∀ I : Finset ι, ∃ (r : _)(hr : 0 < r), ∀ x ∈ s, I.sup p (f x) < r := by\n  simp_rw [hp.is_vonN_bounded_iff_finset_seminorm_bounded, Set.ball_image_iff]\n#align with_seminorms.image_is_vonN_bounded_iff_finset_seminorm_bounded with_seminorms.image_is_vonN_bounded_iff_finset_seminorm_bounded\n\n",
 "has_basis_zero_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem with_seminorms.has_basis_zero_ball (hp : with_seminorms p) :\n    ((nhds) (0 : E)).has_basis (fun sr : Finset ι × exprℝ => 0 < sr.2) fun sr => (sr.1.sup p).ball 0 sr.2 :=\n  by\n  refine' ⟨fun V => _⟩\n  simp only [hp.has_basis.mem_iff, seminorm_family.basis_sets_iff, Prod.exists]\n  constructor\n  · rintro ⟨-, ⟨s, r, hr, rfl⟩, hV⟩\n    exact ⟨s, r, hr, hV⟩\n  · rintro ⟨s, r, hr, hV⟩\n    exact ⟨_, ⟨s, r, hr, rfl⟩, hV⟩\n#align with_seminorms.has_basis_zero_ball with_seminorms.has_basis_zero_ball\n\n",
 "has_basis_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem with_seminorms.has_basis_ball (hp : with_seminorms p) {x : E} :\n    ((nhds) (x : E)).has_basis (fun sr : Finset ι × exprℝ => 0 < sr.2) fun sr => (sr.1.sup p).ball x sr.2 :=\n  by\n  haveI : TopologicalAddGroup E := hp.topological_add_group\n  rw [← map_add_left_nhds_zero]\n  convert hp.has_basis_zero_ball.map ((· + ·) x)\n  ext sr : 1\n  have : (sr.fst.sup p).ball («expr +ᵥ » x 0) sr.snd = «expr +ᵥ » x ((sr.fst.sup p).ball 0 sr.snd) :=\n    Eq.symm (Seminorm.vadd_ball (sr.fst.sup p))\n  rwa [vadd_eq_add, add_zero] at this\n#align with_seminorms.has_basis_ball with_seminorms.has_basis_ball\n\n",
 "has_basis":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem with_seminorms.has_basis (hp : with_seminorms p) :\n    ((nhds) (0 : E)).has_basis (fun s : Set E => s ∈ p.basis_sets) id :=\n  by\n  rw [congr_fun (congr_arg (@nhds E) hp.1) 0]\n  exact AddGroupFilterBasis.nhds_zero_hasBasis _\n#align with_seminorms.has_basis with_seminorms.has_basis\n\n",
 "first_countable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- If the topology of a space is induced by a countable family of seminorms, then the topology\nis first countable. -/\ntheorem with_seminorms.first_countable (hp : with_seminorms p) : TopologicalSpace.FirstCountableTopology E :=\n  by\n  have : ((nhds) (0 : E)).is_countably_generated :=\n    by\n    rw [p.with_seminorms_iff_nhds_eq_infi.mp hp]\n    exact Filter.infᵢ.isCountablyGenerated _\n  haveI : (uniformity E).is_countably_generated := UniformAddGroup.uniformity_countably_generated\n  exact UniformSpace.firstCountableTopology E\n#align with_seminorms.first_countable with_seminorms.first_countable\n\n",
 "finset_sup_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem seminorm_family.finset_sup_comp (q : seminorm_family 𝕜₂ F ι) (s : Finset ι) (f : «expr →ₛₗ[ ] » E σ₁₂ F) :\n    (s.sup q).comp f = s.sup (q.comp f) := by\n  ext x\n  rw [Seminorm.comp_apply, Seminorm.finset_sup_apply, Seminorm.finset_sup_apply]\n  rfl\n#align seminorm_family.finset_sup_comp seminorm_family.finset_sup_comp\n\n",
 "filter_eq_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem filter_eq_infi (p : seminorm_family 𝕜 E ι) :\n    p.module_filter_basis.to_filter_basis.filter =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (((nhds) 0).comap (p i)) :=\n  by\n  refine' le_antisymm (le_infᵢ fun i => _) _\n  · rw [p.module_filter_basis.to_filter_basis.has_basis.le_basis_iff (metric.nhds_basis_ball.comap _)]\n    intro ε hε\n    refine' ⟨(p i).ball 0 ε, _, _⟩\n    · rw [← (Finset.sup_singleton : _ = p i)]\n      exact p.basis_sets_mem {i} hε\n    · rw [id, (p i).ball_zero_eq_preimage_ball]\n  · rw [p.module_filter_basis.to_filter_basis.has_basis.ge_iff]\n    rintro U (hU : U ∈ p.basis_sets)\n    rcases p.basis_sets_iff.mp hU with ⟨s, r, hr, rfl⟩\n    rw [id, Seminorm.ball_finset_sup_eq_interᵢ _ _ _ hr, s.Inter_mem_sets]\n    exact fun i hi =>\n      Filter.mem_infᵢ_of_mem i\n        ⟨Metric.ball 0 r, Metric.ball_mem_nhds 0 hr, Eq.subset (p i).ball_zero_eq_preimage_ball.symm⟩\n#align filter_eq_infi filter_eq_infi\n\n",
 "continuous_seminorm":
 "theorem with_seminorms.continuous_seminorm [NontriviallyNormedField 𝕝] [Module 𝕝 E] [ContinuousConstSMul 𝕝 E]\n    {p : seminorm_family 𝕝 E ι} (hp : with_seminorms p) (i : ι) : Continuous (p i) :=\n  by\n  refine' Seminorm.continuous one_pos _\n  rw [p.with_seminorms_iff_nhds_eq_infi.mp hp, ball_zero_eq_preimage_ball]\n  exact Filter.mem_infᵢ_of_mem i (Filter.preimage_mem_comap <| Metric.ball_mem_nhds _ one_pos)\n#align with_seminorms.continuous_seminorm with_seminorms.continuous_seminorm\n\n",
 "continuous_of_continuous_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem continuous_of_continuous_comp {q : seminorm_family 𝕝₂ F ι'} [TopologicalSpace E] [TopologicalAddGroup E]\n    [TopologicalSpace F] [TopologicalAddGroup F] (hq : with_seminorms q) (f : «expr →ₛₗ[ ] » E τ₁₂ F)\n    (hf : ∀ i, Continuous ((q i).comp f)) : Continuous f :=\n  by\n  refine' continuous_of_continuousAt_zero f _\n  simp_rw [ContinuousAt, f.map_zero, q.with_seminorms_iff_nhds_eq_infi.mp hq, Filter.tendsto_infᵢ,\n    Filter.tendsto_comap_iff]\n  intro i\n  convert(hf i).continuous_at\n  exact (map_zero _).symm\n#align continuous_of_continuous_comp continuous_of_continuous_comp\n\n",
 "continuous_iff_continuous_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem continuous_iff_continuous_comp {q : seminorm_family 𝕜₂ F ι'} [TopologicalSpace E] [TopologicalAddGroup E]\n    [TopologicalSpace F] [TopologicalAddGroup F] [ContinuousConstSMul 𝕜₂ F] (hq : with_seminorms q)\n    (f : «expr →ₛₗ[ ] » E σ₁₂ F) : Continuous f ↔ ∀ i, Continuous ((q i).comp f) :=\n  ⟨fun h i => Continuous.comp (hq.continuous_seminorm i) h, continuous_of_continuous_comp hq f⟩\n#align continuous_iff_continuous_comp continuous_iff_continuous_comp\n\n",
 "continuous_from_bounded":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem continuous_from_bounded {p : seminorm_family 𝕝 E ι} {q : seminorm_family 𝕝₂ F ι'} [TopologicalSpace E]\n    [TopologicalAddGroup E] (hp : with_seminorms p) [TopologicalSpace F] [TopologicalAddGroup F] (hq : with_seminorms q)\n    (f : «expr →ₛₗ[ ] » E τ₁₂ F) (hf : seminorm.is_bounded p q f) : Continuous f :=\n  by\n  refine' continuous_of_continuous_comp hq _ fun i => Seminorm.continuous_of_continuousAt_zero _\n  rw [Metric.continuousAt_iff', map_zero]\n  intro r hr\n  rcases hf i with ⟨s₁, C, hf⟩\n  have hC' : 0 < C + 1 := by positivity\n  rw [hp.has_basis.eventually_iff]\n  refine' ⟨(s₁.sup p).ball 0 (r / (C + 1)), p.basis_sets_mem _ (by positivity), _⟩\n  simp_rw [← Metric.mem_ball, ← mem_preimage, ← ball_zero_eq_preimage_ball]\n  refine' subset.trans _ (ball_antitone hf)\n  norm_cast\n  rw [← ball_smul (s₁.sup p) hC']\n  refine' ball_antitone (smul_le_smul le_rfl _)\n  simp only [le_add_iff_nonneg_right, zero_le']\n#align continuous_from_bounded continuous_from_bounded\n\n",
 "cont_with_seminorms_normed_space":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem cont_with_seminorms_normed_space (F) [SeminormedAddCommGroup F] [NormedSpace 𝕝₂ F] [UniformSpace E]\n    [UniformAddGroup E] {p : ι → Seminorm 𝕝 E} (hp : with_seminorms p) (f : «expr →ₛₗ[ ] » E τ₁₂ F)\n    (hf : ∃ (s : Finset ι)(C : nnreal), (normSeminorm 𝕝₂ F).comp f ≤ «expr • » C (s.sup p)) : Continuous f :=\n  by\n  rw [← seminorm.is_bounded_const (Fin 1)] at hf\n  exact continuous_from_bounded hp (norm_with_seminorms 𝕝₂ F) f hf\n#align cont_with_seminorms_normed_space cont_with_seminorms_normed_space\n\n",
 "cont_normed_space_to_with_seminorms":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem cont_normed_space_to_with_seminorms (E) [SeminormedAddCommGroup E] [NormedSpace 𝕝 E] [UniformSpace F]\n    [UniformAddGroup F] {q : ι → Seminorm 𝕝₂ F} (hq : with_seminorms q) (f : «expr →ₛₗ[ ] » E τ₁₂ F)\n    (hf : ∀ i : ι, ∃ C : nnreal, (q i).comp f ≤ «expr • » C (normSeminorm 𝕝 E)) : Continuous f :=\n  by\n  rw [← seminorm.const_is_bounded (Fin 1)] at hf\n  exact continuous_from_bounded (norm_with_seminorms 𝕝 E) hq f hf\n#align cont_normed_space_to_with_seminorms cont_normed_space_to_with_seminorms\n\n",
 "const_is_bounded":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem const_is_bounded (ι : Type _) [Nonempty ι] {p : Seminorm 𝕜 E} {q : ι' → Seminorm 𝕜₂ F}\n    (f : «expr →ₛₗ[ ] » E σ₁₂ F) : is_bounded (fun _ : ι => p) q f ↔ ∀ i, ∃ C : nnreal, (q i).comp f ≤ «expr • » C p :=\n  by\n  constructor <;> intro h i\n  · rcases h i with ⟨s, C, h⟩\n    exact ⟨C, le_trans h (smul_le_smul (Finset.sup_le fun _ _ => le_rfl) le_rfl)⟩\n  use {Classical.arbitrary ι}\n  simp only [h, Finset.sup_singleton]\n#align const_is_bounded const_is_bounded\n\n",
 "comp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem seminorm_family.comp_apply (q : seminorm_family 𝕜₂ F ι) (i : ι) (f : «expr →ₛₗ[ ] » E σ₁₂ F) :\n    q.comp f i = (q i).comp f :=\n  rfl\n#align seminorm_family.comp_apply seminorm_family.comp_apply\n\n",
 "basis_sets_zero":
 "theorem basis_sets_zero (U) (hU : U ∈ p.basis_sets) : (0 : E) ∈ U :=\n  by\n  rcases p.basis_sets_iff.mp hU with ⟨ι', r, hr, hU⟩\n  rw [hU, mem_ball_zero, map_zero]\n  exact hr\n#align basis_sets_zero basis_sets_zero\n\n",
 "basis_sets_smul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem basis_sets_smul_right (v : E) (U : Set E) (hU : U ∈ p.basis_sets) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) 0)\n      («expr • » x v ∈ U) :=\n  by\n  rcases p.basis_sets_iff.mp hU with ⟨s, r, hr, hU⟩\n  rw [hU, Filter.eventually_iff]\n  simp_rw [(s.sup p).mem_ball_zero, map_smul_eq_mul]\n  by_cases h : 0 < (s.sup p) v\n  · simp_rw [(lt_div_iff h).symm]\n    rw [← _root_.ball_zero_eq]\n    exact Metric.ball_mem_nhds 0 (div_pos hr h)\n  simp_rw [le_antisymm (not_lt.mp h) (map_nonneg _ v), MulZeroClass.mul_zero, hr]\n  exact IsOpen.mem_nhds isOpen_univ (mem_univ 0)\n#align basis_sets_smul_right basis_sets_smul_right\n\n",
 "basis_sets_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem basis_sets_smul_left (x : 𝕜) (U : Set E) (hU : U ∈ p.basis_sets) :\n    ∃ (V : Set E)(H : V ∈ p.add_group_filter_basis.sets), V ⊆ «expr ⁻¹' » (fun y : E => «expr • » x y) U :=\n  by\n  rcases p.basis_sets_iff.mp hU with ⟨s, r, hr, hU⟩\n  rw [hU]\n  by_cases h : x ≠ 0\n  · rw [(s.sup p).smul_ball_preimage 0 r x h, smul_zero]\n    use (s.sup p).ball 0 (r / «expr‖ ‖» x)\n    exact ⟨p.basis_sets_mem s (div_pos hr (norm_pos_iff.mpr h)), subset.rfl⟩\n  refine' ⟨(s.sup p).ball 0 r, p.basis_sets_mem s hr, _⟩\n  simp only [not_ne_iff.mp h, subset_def, mem_ball_zero, hr, mem_univ, map_zero, imp_true_iff, preimage_const_of_mem,\n    zero_smul]\n#align basis_sets_smul_left basis_sets_smul_left\n\n",
 "basis_sets_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem basis_sets_smul (U) (hU : U ∈ p.basis_sets) :\n    ∃ (V : Set 𝕜)(H : V ∈ (nhds) (0 : 𝕜))(W : Set E)(H : W ∈ p.add_group_filter_basis.sets), «expr • » V W ⊆ U :=\n  by\n  rcases p.basis_sets_iff.mp hU with ⟨s, r, hr, hU⟩\n  refine' ⟨Metric.ball 0 r.sqrt, Metric.ball_mem_nhds 0 (real.sqrt_pos.mpr hr), _⟩\n  refine' ⟨(s.sup p).ball 0 r.sqrt, p.basis_sets_mem s (real.sqrt_pos.mpr hr), _⟩\n  refine' Set.Subset.trans (ball_smul_ball (s.sup p) r.sqrt r.sqrt) _\n  rw [hU, Real.mul_self_sqrt (le_of_lt hr)]\n#align basis_sets_smul basis_sets_smul\n\n",
 "basis_sets_singleton_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem basis_sets_singleton_mem (i : ι) {r : exprℝ} (hr : 0 < r) : (p i).ball 0 r ∈ p.basis_sets :=\n  (basis_sets_iff _).mpr ⟨{i}, _, hr, by rw [Finset.sup_singleton]⟩\n#align basis_sets_singleton_mem basis_sets_singleton_mem\n\n",
 "basis_sets_nonempty":
 "theorem basis_sets_nonempty [Nonempty ι] : p.basis_sets.nonempty :=\n  by\n  let i := Classical.arbitrary ι\n  refine' set.nonempty_def.mpr ⟨(p i).ball 0 1, _⟩\n  exact p.basis_sets_singleton_mem i zero_lt_one\n#align basis_sets_nonempty basis_sets_nonempty\n\n",
 "basis_sets_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem basis_sets_neg (U) (hU' : U ∈ p.basis_sets) :\n    ∃ (V : Set E)(H : V ∈ p.basis_sets), V ⊆ «expr ⁻¹' » (fun x : E => -x) U :=\n  by\n  rcases p.basis_sets_iff.mp hU' with ⟨s, r, hr, hU⟩\n  rw [hU, neg_preimage, neg_ball (s.sup p), neg_zero]\n  exact ⟨U, hU', Eq.subset hU⟩\n#align basis_sets_neg basis_sets_neg\n\n",
 "basis_sets_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem basis_sets_mem (i : Finset ι) {r : exprℝ} (hr : 0 < r) : (i.sup p).ball 0 r ∈ p.basis_sets :=\n  (basis_sets_iff _).mpr ⟨i, _, hr, rfl⟩\n#align basis_sets_mem basis_sets_mem\n\n",
 "basis_sets_intersect":
 "theorem basis_sets_intersect (U V : Set E) (hU : U ∈ p.basis_sets) (hV : V ∈ p.basis_sets) :\n    ∃ (z : Set E)(H : z ∈ p.basis_sets), z ⊆ U ∩ V := by\n  classical\n    rcases p.basis_sets_iff.mp hU with ⟨s, r₁, hr₁, hU⟩\n    rcases p.basis_sets_iff.mp hV with ⟨t, r₂, hr₂, hV⟩\n    use ((s ∪ t).sup p).ball 0 (min r₁ r₂)\n    refine' ⟨p.basis_sets_mem (s ∪ t) (lt_min_iff.mpr ⟨hr₁, hr₂⟩), _⟩\n    rw [hU, hV, ball_finset_sup_eq_Inter _ _ _ (lt_min_iff.mpr ⟨hr₁, hr₂⟩), ball_finset_sup_eq_Inter _ _ _ hr₁,\n      ball_finset_sup_eq_Inter _ _ _ hr₂]\n    exact\n      Set.subset_inter\n        (Set.interᵢ₂_mono' fun i hi => ⟨i, Finset.subset_union_left _ _ hi, ball_mono <| min_le_left _ _⟩)\n        (Set.interᵢ₂_mono' fun i hi => ⟨i, Finset.subset_union_right _ _ hi, ball_mono <| min_le_right _ _⟩)\n#align basis_sets_intersect basis_sets_intersect\n\n",
 "basis_sets_iff":
 "/-\nCopyright (c) 2022 Moritz Doll. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Moritz Doll, Anatole Dedecker\n-/\ntheorem basis_sets_iff {U : Set E} : U ∈ p.basis_sets ↔ ∃ (i : Finset ι)(r : _)(hr : 0 < r), U = ball (i.sup p) 0 r :=\n  by simp only [basis_sets, mem_Union, mem_singleton_iff]\n#align basis_sets_iff basis_sets_iff\n\n",
 "basis_sets_add":
 "theorem basis_sets_add (U) (hU : U ∈ p.basis_sets) : ∃ (V : Set E)(H : V ∈ p.basis_sets), V + V ⊆ U :=\n  by\n  rcases p.basis_sets_iff.mp hU with ⟨s, r, hr, hU⟩\n  use (s.sup p).ball 0 (r / 2)\n  refine' ⟨p.basis_sets_mem s (div_pos hr zero_lt_two), _⟩\n  refine' Set.Subset.trans (ball_add_ball_subset (s.sup p) (r / 2) (r / 2) 0 0) _\n  rw [hU, add_zero, add_halves']\n#align basis_sets_add basis_sets_add\n\n"}