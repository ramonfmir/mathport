{"subset_balancedHull":
 "#print subset_balancedHull /-\ntheorem subset_balancedHull [NormOneClass 𝕜] {s : Set E} : s ⊆ balancedHull 𝕜 s := fun _ hx =>\n  mem_balancedHull_iff.2 ⟨1, norm_one.le, _, hx, one_smul _ _⟩\n#align subset_balanced_hull subset_balancedHull\n-/\n\n",
 "subset_balancedCore_of_subset":
 "#print Balanced.subset_balancedCore_of_subset /-\n/-- The balanced core of `t` is maximal in the sense that it contains any balanced subset\n`s` of `t`.-/\ntheorem Balanced.subset_balancedCore_of_subset (hs : Balanced 𝕜 s) (h : s ⊆ t) : s ⊆ balancedCore 𝕜 t :=\n  subset_unionₛ_of_mem ⟨hs, h⟩\n#align balanced.subset_core_of_subset Balanced.subset_balancedCore_of_subset\n-/\n\n",
 "subset_balancedCore":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print subset_balancedCore /-\ntheorem subset_balancedCore (ht : (0 : E) ∈ t) (hst : ∀ (a : 𝕜) (ha : «expr‖ ‖» a ≤ 1), «expr • » a s ⊆ t) :\n    s ⊆ balancedCore 𝕜 t := by\n  rw [balancedCore_eq_interᵢ ht]\n  refine' subset_Inter₂ fun a ha => _\n  rw [← smul_inv_smul₀ (norm_pos_iff.mp <| zero_lt_one.trans_le ha) s]\n  refine' smul_set_mono (hst _ _)\n  rw [norm_inv]\n  exact inv_le_one ha\n#align subset_balanced_core subset_balancedCore\n-/\n\n",
 "smul_balancedCore_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print smul_balancedCore_subset /-\ntheorem smul_balancedCore_subset (s : Set E) {a : 𝕜} (ha : «expr‖ ‖» a ≤ 1) :\n    «expr • » a (balancedCore 𝕜 s) ⊆ balancedCore 𝕜 s :=\n  by\n  rintro x ⟨y, hy, rfl⟩\n  rw [mem_balancedCore_iff] at hy\n  rcases hy with ⟨t, ht1, ht2, hy⟩\n  exact ⟨t, ⟨ht1, ht2⟩, ht1 a ha (smul_mem_smul_set hy)⟩\n#align smul_balanced_core_subset smul_balancedCore_subset\n-/\n\n",
 "nhds_basis_closed_balanced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print nhds_basis_closed_balanced /-\ntheorem nhds_basis_closed_balanced [RegularSpace E] :\n    ((nhds) (0 : E)).has_basis (fun s : Set E => s ∈ (nhds) (0 : E) ∧ IsClosed s ∧ Balanced 𝕜 s) id :=\n  by\n  refine' (closed_nhds_basis 0).to_has_basis (fun s hs => _) fun s hs => ⟨s, ⟨hs.1, hs.2.1⟩, rfl.subset⟩\n  refine' ⟨balancedCore 𝕜 s, ⟨balancedCore_mem_nhds_zero hs.1, _⟩, balancedCore_subset s⟩\n  exact ⟨hs.2.balanced_core, balancedCore_balanced s⟩\n#align nhds_basis_closed_balanced nhds_basis_closed_balanced\n-/\n\n",
 "nhds_basis_balanced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print nhds_basis_balanced /-\ntheorem nhds_basis_balanced : ((nhds) (0 : E)).has_basis (fun s : Set E => s ∈ (nhds) (0 : E) ∧ Balanced 𝕜 s) id :=\n  Filter.hasBasis_self.mpr fun s hs =>\n    ⟨balancedCore 𝕜 s, balancedCore_mem_nhds_zero hs, balancedCore_balanced s, balancedCore_subset s⟩\n#align nhds_basis_balanced nhds_basis_balanced\n-/\n\n",
 "mem_balancedHull_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print mem_balancedHull_iff /-\ntheorem mem_balancedHull_iff : x ∈ balancedHull 𝕜 s ↔ ∃ (r : 𝕜)(hr : «expr‖ ‖» r ≤ 1), x ∈ «expr • » r s :=\n  mem_unionᵢ₂\n#align mem_balanced_hull_iff mem_balancedHull_iff\n-/\n\n",
 "mem_balancedCore_iff":
 "#print mem_balancedCore_iff /-\ntheorem mem_balancedCore_iff : x ∈ balancedCore 𝕜 s ↔ ∃ t, Balanced 𝕜 t ∧ t ⊆ s ∧ x ∈ t := by\n  simp_rw [balancedCore, mem_sUnion, mem_set_of_eq, exists_prop, and_assoc']\n#align mem_balanced_core_iff mem_balancedCore_iff\n-/\n\n",
 "mem_balancedCoreAux_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print mem_balancedCoreAux_iff /-\ntheorem mem_balancedCoreAux_iff : x ∈ balancedCoreAux 𝕜 s ↔ ∀ r : 𝕜, 1 ≤ «expr‖ ‖» r → x ∈ «expr • » r s :=\n  mem_interᵢ₂\n#align mem_balanced_core_aux_iff mem_balancedCoreAux_iff\n-/\n\n",
 "balancedHull_subset_of_subset":
 "#print Balanced.balancedHull_subset_of_subset /-\n/-- The balanced hull of `s` is minimal in the sense that it is contained in any balanced superset\n`t` of `s`. -/\ntheorem Balanced.balancedHull_subset_of_subset (ht : Balanced 𝕜 t) (h : s ⊆ t) : balancedHull 𝕜 s ⊆ t := fun x hx =>\n  by\n  obtain ⟨r, hr, y, hy, rfl⟩ := mem_balancedHull_iff.1 hx\n  exact ht.smul_mem hr (h hy)\n#align balanced.hull_subset_of_subset Balanced.balancedHull_subset_of_subset\n-/\n\n",
 "balancedCore_zero_mem":
 "#print balancedCore_zero_mem /-\ntheorem balancedCore_zero_mem (hs : (0 : E) ∈ s) : (0 : E) ∈ balancedCore 𝕜 s :=\n  mem_balancedCore_iff.2 ⟨0, balanced_zero, zero_subset.2 hs, zero_mem_zero⟩\n#align balanced_core_zero_mem balancedCore_zero_mem\n-/\n\n",
 "balancedCore_subset_balancedCoreAux":
 "#print balancedCore_subset_balancedCoreAux /-\ntheorem balancedCore_subset_balancedCoreAux : balancedCore 𝕜 s ⊆ balancedCoreAux 𝕜 s :=\n  balancedCoreAux_maximal (balancedCore_subset s) (balancedCore_balanced s)\n#align balanced_core_subset_balanced_core_aux balancedCore_subset_balancedCoreAux\n-/\n\n",
 "balancedCore_subset":
 "#print balancedCore_subset /-\n/-\nCopyright (c) 2022 Moritz Doll. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Moritz Doll\n-/\ntheorem balancedCore_subset (s : Set E) : balancedCore 𝕜 s ⊆ s :=\n  unionₛ_subset fun t ht => ht.2\n#align balanced_core_subset balancedCore_subset\n-/\n\n",
 "balancedCore_nonempty_iff":
 "#print balancedCore_nonempty_iff /-\ntheorem balancedCore_nonempty_iff : (balancedCore 𝕜 s).nonempty ↔ (0 : E) ∈ s :=\n  ⟨fun h =>\n    zero_subset.1 <|\n      (zero_smul_set h).superset.trans <|\n        (balancedCore_balanced s (0 : 𝕜) <| norm_zero.trans_le zero_le_one).trans <| balancedCore_subset _,\n    fun h => ⟨0, balancedCore_zero_mem h⟩⟩\n#align balanced_core_nonempty_iff balancedCore_nonempty_iff\n-/\n\n",
 "balancedCore_mem_nhds_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print balancedCore_mem_nhds_zero /-\ntheorem balancedCore_mem_nhds_zero (hU : U ∈ (nhds) (0 : E)) : balancedCore 𝕜 U ∈ (nhds) (0 : E) :=\n  by\n  -- Getting neighborhoods of the origin for `0 : 𝕜` and `0 : E`\n  obtain ⟨r, V, hr, hV, hrVU⟩ :\n    ∃ (r : exprℝ)(V : Set E),\n      0 < r ∧ V ∈ (nhds) (0 : E) ∧ ∀ (c : 𝕜) (y : E), «expr‖ ‖» c < r → y ∈ V → «expr • » c y ∈ U :=\n    by\n    have h : Filter.Tendsto (fun x : 𝕜 × E => «expr • » x.fst x.snd) ((nhds) (0, 0)) ((nhds) 0) :=\n      continuous_smul.tendsto' (0, 0) _ (smul_zero _)\n    simpa only [← Prod.exists', ← Prod.forall', ← and_imp, ← and_assoc, exists_prop] using\n      h.basis_left (normed_add_comm_group.nhds_zero_basis_norm_lt.prod_nhds ((nhds) _).basis_sets) U hU\n  rcases NormedField.exists_norm_lt 𝕜 hr with ⟨y, hy₀, hyr⟩\n  rw [norm_pos_iff] at hy₀\n  have : «expr • » y V ∈ (nhds) (0 : E) := (set_smul_mem_nhds_zero_iff hy₀).mpr hV\n  -- It remains to show that `y • V ⊆ balanced_core 𝕜 U`\n  refine' Filter.mem_of_superset this (subset_balancedCore (mem_of_mem_nhds hU) fun a ha => _)\n  rw [smul_smul]\n  rintro _ ⟨z, hz, rfl⟩\n  refine' hrVU _ _ _ hz\n  rw [norm_mul, ← one_mul r]\n  exact mul_lt_mul' ha hyr (norm_nonneg y) one_pos\n#align balanced_core_mem_nhds_zero balancedCore_mem_nhds_zero\n-/\n\n",
 "balancedCore_eq_interᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print balancedCore_eq_interᵢ /-\ntheorem balancedCore_eq_interᵢ (hs : (0 : E) ∈ s) :\n    balancedCore 𝕜 s =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" («expr • » r s) :=\n  by\n  refine' balanced_core_subset_balanced_core_aux.antisymm _\n  refine' (balancedCoreAux_balanced _).subset_core_of_subset (balancedCoreAux_subset s)\n  exact balancedCore_subset_balancedCoreAux (balancedCore_zero_mem hs)\n#align balanced_core_eq_Inter balancedCore_eq_interᵢ\n-/\n\n",
 "balancedCore_empty":
 "#print balancedCore_empty /-\ntheorem balancedCore_empty : balancedCore 𝕜 (∅ : Set E) = ∅ :=\n  eq_empty_of_subset_empty (balancedCore_subset _)\n#align balanced_core_empty balancedCore_empty\n-/\n\n",
 "balancedCore_balanced":
 "#print balancedCore_balanced /-\ntheorem balancedCore_balanced (s : Set E) : Balanced 𝕜 (balancedCore 𝕜 s) := fun _ => smul_balancedCore_subset s\n#align balanced_core_balanced balancedCore_balanced\n-/\n\n",
 "balancedCoreAux_subset":
 "#print balancedCoreAux_subset /-\ntheorem balancedCoreAux_subset (s : Set E) : balancedCoreAux 𝕜 s ⊆ s := fun x hx => by\n  simpa only [one_smul] using mem_balancedCoreAux_iff.1 hx 1 norm_one.ge\n#align balanced_core_aux_subset balancedCoreAux_subset\n-/\n\n",
 "balancedCoreAux_maximal":
 "#print balancedCoreAux_maximal /-\ntheorem balancedCoreAux_maximal (h : t ⊆ s) (ht : Balanced 𝕜 t) : t ⊆ balancedCoreAux 𝕜 s :=\n  by\n  refine' fun x hx => mem_balancedCoreAux_iff.2 fun r hr => _\n  rw [mem_smul_set_iff_inv_smul_mem₀ (norm_pos_iff.mp <| zero_lt_one.trans_le hr)]\n  refine' h (ht.smul_mem _ hx)\n  rw [norm_inv]\n  exact inv_le_one hr\n#align balanced_core_aux_maximal balancedCoreAux_maximal\n-/\n\n",
 "balancedCoreAux_empty":
 "#print balancedCoreAux_empty /-\n@[simp]\ntheorem balancedCoreAux_empty : balancedCoreAux 𝕜 (∅ : Set E) = ∅ :=\n  by\n  simp_rw [balancedCoreAux, Inter₂_eq_empty_iff, smul_set_empty]\n  exact fun _ => ⟨1, norm_one.ge, not_mem_empty _⟩\n#align balanced_core_aux_empty balancedCoreAux_empty\n-/\n\n",
 "balancedCoreAux_balanced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print balancedCoreAux_balanced /-\ntheorem balancedCoreAux_balanced (h0 : (0 : E) ∈ balancedCoreAux 𝕜 s) : Balanced 𝕜 (balancedCoreAux 𝕜 s) :=\n  by\n  rintro a ha x ⟨y, hy, rfl⟩\n  obtain rfl | h := eq_or_ne a 0\n  · rwa [zero_smul]\n  rw [mem_balancedCoreAux_iff] at hy⊢\n  intro r hr\n  have h'' : 1 ≤ «expr‖ ‖» («expr • » a⁻¹ r) := by\n    rw [norm_smul, norm_inv]\n    exact one_le_mul_of_one_le_of_one_le (one_le_inv (norm_pos_iff.mpr h) ha) hr\n  have h' := hy («expr • » a⁻¹ r) h''\n  rwa [smul_assoc, mem_inv_smul_set_iff₀ h] at h'\n#align balanced_core_aux_balanced balancedCoreAux_balanced\n-/\n\n",
 "balancedCore":
 "#print IsClosed.balancedCore /-\nprotected theorem IsClosed.balancedCore (hU : IsClosed U) : IsClosed (balancedCore 𝕜 U) :=\n  by\n  by_cases h : (0 : E) ∈ U\n  · rw [balancedCore_eq_interᵢ h]\n    refine' isClosed_interᵢ fun a => _\n    refine' isClosed_interᵢ fun ha => _\n    have ha' := lt_of_lt_of_le zero_lt_one ha\n    rw [norm_pos_iff] at ha'\n    refine' isClosedMap_smul_of_ne_zero ha' U hU\n  convert isClosed_empty\n  contrapose! h\n  exact balanced_core_nonempty_iff.mp (Set.nonempty_iff_ne_empty.2 h)\n#align is_closed.balanced_core IsClosed.balancedCore\n-/\n\n",
 "balanced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print balancedHull.balanced /-\ntheorem balancedHull.balanced (s : Set E) : Balanced 𝕜 (balancedHull 𝕜 s) :=\n  by\n  intro a ha\n  simp_rw [balancedHull, smul_set_Union₂, subset_def, mem_Union₂]\n  rintro x ⟨r, hr, hx⟩\n  rw [← smul_assoc] at hx\n  exact ⟨«expr • » a r, (semi_normed_ring.norm_mul _ _).trans (mul_le_one ha (norm_nonneg r) hr), hx⟩\n#align balanced_hull.balanced balancedHull.balanced\n-/\n\n"}