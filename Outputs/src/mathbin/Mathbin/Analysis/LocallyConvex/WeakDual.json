{"weak_bilin_with_seminorms":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem linear_map.weak_bilin_with_seminorms (B : «expr →ₗ[ ] » E 𝕜 («expr →ₗ[ ] » F 𝕜 𝕜)) :\n    with_seminorms (linear_map.to_seminorm_family B : F → seminorm 𝕜 (weak_bilin B)) :=\n  seminorm_family.with_seminorms_of_has_basis _ B.has_basis_weak_bilin\n#align linear_map.weak_bilin_with_seminorms linear_map.weak_bilin_with_seminorms\n\n",
 "to_seminorm_family_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem to_seminorm_family_apply {B : «expr →ₗ[ ] » E 𝕜 («expr →ₗ[ ] » F 𝕜 𝕜)} {x y} :\n    (B.to_seminorm_family y) x = «expr‖ ‖» (B x y) :=\n  rfl\n#align to_seminorm_family_apply to_seminorm_family_apply\n\n",
 "to_seminorm_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem to_seminorm_comp (f : «expr →ₗ[ ] » F 𝕜 𝕜) (g : «expr →ₗ[ ] » E 𝕜 F) :\n    f.to_seminorm.comp g = (f.comp g).to_seminorm := by\n  ext\n  simp only [seminorm.comp_apply, to_seminorm_apply, coe_comp]\n#align to_seminorm_comp to_seminorm_comp\n\n",
 "to_seminorm_ball_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem to_seminorm_ball_zero {f : «expr →ₗ[ ] » E 𝕜 𝕜} {r : exprℝ} :\n    seminorm.ball f.to_seminorm 0 r = { x : E | «expr‖ ‖» (f x) < r } := by\n  simp only [seminorm.ball_zero_eq, to_seminorm_apply]\n#align to_seminorm_ball_zero to_seminorm_ball_zero\n\n",
 "to_seminorm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem to_seminorm_apply {f : «expr →ₗ[ ] » E 𝕜 𝕜} {x : E} : f.to_seminorm x = «expr‖ ‖» (f x) :=\n  rfl\n#align to_seminorm_apply to_seminorm_apply\n\n",
 "has_basis_weak_bilin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem linear_map.has_basis_weak_bilin (B : «expr →ₗ[ ] » E 𝕜 («expr →ₗ[ ] » F 𝕜 𝕜)) :\n    ((nhds) (0 : weak_bilin B)).has_basis B.to_seminorm_family.basis_sets id :=\n  by\n  let p := B.to_seminorm_family\n  rw [nhds_induced, nhds_pi]\n  simp only [map_zero, linear_map.zero_apply]\n  have h := @metric.nhds_basis_ball 𝕜 _ 0\n  have h' := filter.has_basis_pi fun i : F => h\n  have h'' := filter.has_basis.comap (fun x y => B x y) h'\n  refine' h''.to_has_basis _ _\n  · rintro (U : set F × (F → exprℝ)) hU\n    cases' hU with hU₁ hU₂\n    simp only [id.def]\n    let U' := hU₁.to_finset\n    by_cases hU₃ : U.fst.nonempty\n    · have hU₃' : U'.nonempty := hU₁.to_finset_nonempty.mpr hU₃\n      refine'\n        ⟨(U'.sup p).ball 0 <| U'.inf' hU₃' U.snd,\n          p.basis_sets_mem _ <| (finset.lt_inf'_iff _).2 fun y hy => hU₂ y <| hU₁.mem_to_finset.mp hy, fun x hx y hy =>\n          _⟩\n      simp only [Set.mem_preimage, Set.mem_pi, mem_ball_zero_iff]\n      rw [seminorm.mem_ball_zero] at hx\n      rw [← linear_map.to_seminorm_family_apply]\n      have hyU' : y ∈ U' := (set.finite.mem_to_finset hU₁).mpr hy\n      have hp : p y ≤ U'.sup p := finset.le_sup hyU'\n      refine' lt_of_le_of_lt (hp x) (lt_of_lt_of_le hx _)\n      exact finset.inf'_le _ hyU'\n    rw [set.not_nonempty_iff_eq_empty.mp hU₃]\n    simp only [Set.empty_pi, Set.preimage_univ, Set.subset_univ, and_true_iff]\n    exact Exists.intro ((p 0).ball 0 1) (p.basis_sets_singleton_mem 0 one_pos)\n  rintro U (hU : U ∈ p.basis_sets)\n  rw [seminorm_family.basis_sets_iff] at hU\n  rcases hU with ⟨s, r, hr, hU⟩\n  rw [hU]\n  refine' ⟨(s, fun _ => r), ⟨by simp only [s.finite_to_set], fun y hy => hr⟩, fun x hx => _⟩\n  simp only [Set.mem_preimage, Set.mem_pi, Finset.mem_coe, mem_ball_zero_iff] at hx\n  simp only [id.def, seminorm.mem_ball, sub_zero]\n  refine' seminorm.finset_sup_apply_lt hr fun y hy => _\n  rw [linear_map.to_seminorm_family_apply]\n  exact hx y hy\n#align linear_map.has_basis_weak_bilin linear_map.has_basis_weak_bilin\n\n",
 "coe_to_seminorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-\nCopyright (c) 2022 Moritz Doll. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Moritz Doll\n-/\ntheorem coe_to_seminorm {f : «expr →ₗ[ ] » E 𝕜 𝕜} : «expr⇑ » f.to_seminorm = fun x => «expr‖ ‖» (f x) :=\n  rfl\n#align coe_to_seminorm coe_to_seminorm\n\n"}