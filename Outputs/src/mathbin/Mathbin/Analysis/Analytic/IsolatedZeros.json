{"locally_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem locally_zero_iff (hp : has_fpower_series_at f p z₀) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) z₀)\n        (f z = 0) ↔\n      p = 0 :=\n  ⟨fun hf => hp.eq_zero_of_eventually hf, fun h => eventually_eq_zero (by rwa [h] at hp)⟩\n#align locally_zero_iff locally_zero_iff\n\n",
 "locally_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\ntheorem locally_ne_zero (hp : has_fpower_series_at f p z₀) (h : p ≠ 0) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n      (nhds_within.ne z₀) (f z ≠ 0) :=\n  by\n  rw [eventually_nhdsWithin_iff]\n  have h2 := (has_fpower_series_iterate_dslope_fslope p.order hp).continuous_at\n  have h3 := h2.eventually_ne (iterate_dslope_fslope_ne_zero hp h)\n  filter_upwards [eq_pow_order_mul_iterate_dslope hp, h3]with z e1 e2 e3\n  simpa [e1, e2, e3] using pow_ne_zero p.order (sub_ne_zero.mpr e3)\n#align locally_ne_zero locally_ne_zero\n\n",
 "iterate_dslope_fslope_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_dslope_fslope_ne_zero (hp : has_fpower_series_at f p z₀) (h : p ≠ 0) :\n    («expr ^[ ]» (swap dslope z₀) p.order) f z₀ ≠ 0 :=\n  by\n  rw [← coeff_zero (has_fpower_series_iterate_dslope_fslope p.order hp) 1]\n  simpa [coeff_eq_zero] using apply_order_ne_zero h\n#align iterate_dslope_fslope_ne_zero iterate_dslope_fslope_ne_zero\n\n",
 "has_sum_at_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-\nCopyright (c) 2022 Vincent Beffara. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Vincent Beffara\n-/\ntheorem has_sum_at_zero (a : ℕ → E) : HasSum (fun n => «expr • » ((0 : 𝕜) ^ n) (a n)) (a 0) := by\n  convert hasSum_single 0 fun b h => _ <;> first |simp [nat.pos_of_ne_zero h]|simp\n#align has_sum_at_zero has_sum_at_zero\n\n",
 "has_fpower_series_iterate_dslope_fslope":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem has_fpower_series_iterate_dslope_fslope (n : ℕ) (hp : has_fpower_series_at f p z₀) :\n    has_fpower_series_at ((«expr ^[ ]» (swap dslope z₀) n) f) ((«expr ^[ ]» fslope n) p) z₀ :=\n  by\n  induction' n with n ih generalizing f p\n  · exact hp\n  · simpa using ih (has_fpower_series_dslope_fslope hp)\n#align has_fpower_series_iterate_dslope_fslope has_fpower_series_iterate_dslope_fslope\n\n",
 "has_fpower_series_dslope_fslope":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem has_fpower_series_dslope_fslope (hp : has_fpower_series_at f p z₀) :\n    has_fpower_series_at (dslope f z₀) p.fslope z₀ :=\n  by\n  have hpd : deriv f z₀ = p.coeff 1 := hp.deriv\n  have hp0 : p.coeff 0 = f z₀ := hp.coeff_zero 1\n  simp only [has_fpower_series_at_iff, apply_eq_pow_smul_coeff, coeff_fslope] at hp⊢\n  refine' hp.mono fun x hx => _\n  by_cases h : x = 0\n  · convert hasSum_single 0 _ <;> intros <;> simp [*]\n  · have hxx : ∀ n : ℕ, x⁻¹ * x ^ (n + 1) = x ^ n := fun n => by field_simp [h, pow_succ']\n    suffices\n      HasSum (fun n => «expr • » x⁻¹ («expr • » (x ^ (n + 1)) (p.coeff (n + 1)))) («expr • » x⁻¹ (f (z₀ + x) - f z₀)) by\n      simpa [dslope, slope, h, smul_smul, hxx] using this\n    · simpa [hp0] using ((hasSum_nat_add_iff' 1).mpr hx).const_smul x⁻¹\n#align has_fpower_series_dslope_fslope has_fpower_series_dslope_fslope\n\n",
 "frequently_zero_iff_eventually_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem frequently_zero_iff_eventually_zero {f : 𝕜 → E} {w : 𝕜} (hf : analytic_at 𝕜 f w) :\n    «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\"\n        (nhds_within.ne w) (f z = 0) ↔\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) w)\n        (f z = 0) :=\n  ⟨hf.eventually_eq_zero_or_eventually_ne_zero.resolve_right, fun h => (h.filter_mono nhdsWithin_le_nhds).frequently⟩\n#align frequently_zero_iff_eventually_zero frequently_zero_iff_eventually_zero\n\n",
 "frequently_eq_iff_eventually_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem frequently_eq_iff_eventually_eq (hf : analytic_at 𝕜 f z₀) (hg : analytic_at 𝕜 g z₀) :\n    «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\"\n        (nhds_within.ne z₀) (f z = g z) ↔\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        ((nhds) z₀) (f z = g z) :=\n  by simpa [sub_eq_zero] using frequently_zero_iff_eventually_zero (hf.sub hg)\n#align frequently_eq_iff_eventually_eq frequently_eq_iff_eventually_eq\n\n",
 "exists_has_sum_smul_of_apply_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem exists_has_sum_smul_of_apply_eq_zero (hs : HasSum (fun m => «expr • » (z ^ m) (a m)) s)\n    (ha : ∀ k < n, a k = 0) : ∃ t : E, «expr • » (z ^ n) t = s ∧ HasSum (fun m => «expr • » (z ^ m) (a (m + n))) t :=\n  by\n  obtain rfl | hn := n.eq_zero_or_pos\n  · simpa\n  by_cases h : z = 0\n  · have : s = 0 := hs.unique (by simpa [ha 0 hn, h] using has_sum_at_zero a)\n    exact ⟨a n, by simp [h, hn, this], by simpa [h] using has_sum_at_zero fun m => a (m + n)⟩\n  · refine' ⟨«expr • » (z ^ n)⁻¹ s, by field_simp [smul_smul] , _⟩\n    have h1 :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          («expr • » (z ^ i) (a i)) =\n        0 :=\n      Finset.sum_eq_zero fun k hk => by simp [ha k (finset.mem_range.mp hk)]\n    have h2 : HasSum (fun m => «expr • » (z ^ (m + n)) (a (m + n))) s := by\n      simpa [h1] using (hasSum_nat_add_iff' n).mpr hs\n    convert h2.const_smul (z⁻¹ ^ n)\n    · field_simp [pow_add, smul_smul]\n    · simp only [inv_pow]\n#align exists_has_sum_smul_of_apply_eq_zero exists_has_sum_smul_of_apply_eq_zero\n\n",
 "eventually_eq_zero_or_eventually_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n/-- The *principle of isolated zeros* for an analytic function, local version: if a function is\nanalytic at `z₀`, then either it is identically zero in a neighborhood of `z₀`, or it does not\nvanish in a punctured neighborhood of `z₀`. -/\ntheorem eventually_eq_zero_or_eventually_ne_zero (hf : analytic_at 𝕜 f z₀) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) z₀)\n        (f z = 0) ∨\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        (nhds_within.ne z₀) (f z ≠ 0) :=\n  by\n  rcases hf with ⟨p, hp⟩\n  by_cases h : p = 0\n  · exact or.inl (has_fpower_series_at.eventually_eq_zero (by rwa [h] at hp))\n  · exact or.inr (hp.locally_ne_zero h)\n#align eventually_eq_zero_or_eventually_ne_zero eventually_eq_zero_or_eventually_ne_zero\n\n",
 "eventually_eq_or_eventually_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\ntheorem eventually_eq_or_eventually_ne (hf : analytic_at 𝕜 f z₀) (hg : analytic_at 𝕜 g z₀) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) z₀)\n        (f z = g z) ∨\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        (nhds_within.ne z₀) (f z ≠ g z) :=\n  by simpa [sub_eq_zero] using (hf.sub hg).eventually_eq_zero_or_eventually_ne_zero\n#align eventually_eq_or_eventually_ne eventually_eq_or_eventually_ne\n\n",
 "eq_pow_order_mul_iterate_dslope":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem eq_pow_order_mul_iterate_dslope (hp : has_fpower_series_at f p z₀) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) z₀)\n      (f z = «expr • » ((z - z₀) ^ p.order) ((«expr ^[ ]» (swap dslope z₀) p.order) f z)) :=\n  by\n  have hq := has_fpower_series_at_iff'.mp (has_fpower_series_iterate_dslope_fslope p.order hp)\n  filter_upwards [hq, has_fpower_series_at_iff'.mp hp]with x hx1 hx2\n  have : ∀ k < p.order, p.coeff k = 0 := fun k hk => by simpa [coeff_eq_zero] using apply_eq_zero_of_lt_order hk\n  obtain ⟨s, hs1, hs2⟩ := has_sum.exists_has_sum_smul_of_apply_eq_zero hx2 this\n  convert hs1.symm\n  simp only [coeff_iterate_fslope] at hx1\n  exact hx1.unique hs2\n#align eq_pow_order_mul_iterate_dslope eq_pow_order_mul_iterate_dslope\n\n",
 "eq_on_zero_of_preconnected_of_mem_closure":
 "theorem eq_on_zero_of_preconnected_of_mem_closure (hf : analytic_on 𝕜 f U) (hU : IsPreconnected U) (h₀ : z₀ ∈ U)\n    (hfz₀ : z₀ ∈ closure ({ z | f z = 0 } \\ {z₀})) : EqOn f 0 U :=\n  hf.eq_on_zero_of_preconnected_of_frequently_eq_zero hU h₀ (mem_closure_ne_iff_frequently_within.mp hfz₀)\n#align eq_on_zero_of_preconnected_of_mem_closure eq_on_zero_of_preconnected_of_mem_closure\n\n",
 "eq_on_zero_of_preconnected_of_frequently_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n/-- The *principle of isolated zeros* for an analytic function, global version: if a function is\nanalytic on a connected set `U` and vanishes in arbitrary neighborhoods of a point `z₀ ∈ U`, then\nit is identically zero in `U`.\nFor higher-dimensional versions requiring that the function vanishes in a neighborhood of `z₀`,\nsee `eq_on_zero_of_preconnected_of_eventually_eq_zero`. -/\ntheorem eq_on_zero_of_preconnected_of_frequently_eq_zero (hf : analytic_on 𝕜 f U) (hU : IsPreconnected U) (h₀ : z₀ ∈ U)\n    (hfw :\n      «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\"\n        (nhds_within.ne z₀) (f z = 0)) :\n    EqOn f 0 U :=\n  hf.eq_on_zero_of_preconnected_of_eventually_eq_zero hU h₀ ((hf z₀ h₀).frequently_zero_iff_eventually_zero.1 hfw)\n#align eq_on_zero_of_preconnected_of_frequently_eq_zero eq_on_zero_of_preconnected_of_frequently_eq_zero\n\n",
 "eq_on_of_preconnected_of_mem_closure":
 "theorem eq_on_of_preconnected_of_mem_closure (hf : analytic_on 𝕜 f U) (hg : analytic_on 𝕜 g U) (hU : IsPreconnected U)\n    (h₀ : z₀ ∈ U) (hfg : z₀ ∈ closure ({ z | f z = g z } \\ {z₀})) : EqOn f g U :=\n  hf.eq_on_of_preconnected_of_frequently_eq hg hU h₀ (mem_closure_ne_iff_frequently_within.mp hfg)\n#align eq_on_of_preconnected_of_mem_closure eq_on_of_preconnected_of_mem_closure\n\n",
 "eq_on_of_preconnected_of_frequently_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n/-- The *identity principle* for analytic functions, global version: if two functions are\nanalytic on a connected set `U` and coincide at points which accumulate to a point `z₀ ∈ U`, then\nthey coincide globally in `U`.\nFor higher-dimensional versions requiring that the functions coincide in a neighborhood of `z₀`,\nsee `eq_on_of_preconnected_of_eventually_eq`. -/\ntheorem eq_on_of_preconnected_of_frequently_eq (hf : analytic_on 𝕜 f U) (hg : analytic_on 𝕜 g U) (hU : IsPreconnected U)\n    (h₀ : z₀ ∈ U)\n    (hfg :\n      «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\"\n        (nhds_within.ne z₀) (f z = g z)) :\n    EqOn f g U :=\n  by\n  have hfg' :\n    «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\"\n      (nhds_within.ne z₀) ((f - g) z = 0) :=\n    hfg.mono fun z h => by rw [Pi.sub_apply, h, sub_self]\n  simpa [sub_eq_zero] using fun z hz => (hf.sub hg).eq_on_zero_of_preconnected_of_frequently_eq_zero hU h₀ hfg' hz\n#align eq_on_of_preconnected_of_frequently_eq eq_on_of_preconnected_of_frequently_eq\n\n"}