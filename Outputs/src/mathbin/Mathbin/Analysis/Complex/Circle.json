{"to_units_apply":
 "-- written manually because `@[simps]` was slow and generated the wrong lemma\n@[simp]\ntheorem circle.to_units_apply (z : circle) : circle.to_units z = Units.mk0 z (ne_zero_of_mem_circle z) :=\n  rfl\n#align circle.to_units_apply circle.to_units_apply\n\n",
 "norm_sq_eq_of_mem_circle":
 "@[simp]\ntheorem norm_sq_eq_of_mem_circle (z : circle) : normSq z = 1 := by simp [norm_sq_eq_abs]\n#align norm_sq_eq_of_mem_circle norm_sq_eq_of_mem_circle\n\n",
 "ne_zero_of_mem_circle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem ne_zero_of_mem_circle (z : circle) : (z : exprℂ) ≠ 0 :=\n  ne_zero_of_mem_unit_sphere z\n#align ne_zero_of_mem_circle ne_zero_of_mem_circle\n\n",
 "mem_circle_iff_norm_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem mem_circle_iff_norm_sq {z : exprℂ} : z ∈ circle ↔ normSq z = 1 := by simp [Complex.abs]\n#align mem_circle_iff_norm_sq mem_circle_iff_norm_sq\n\n",
 "mem_circle_iff_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/-\nCopyright (c) 2021 Heather Macbeth. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Heather Macbeth\n-/\n@[simp]\ntheorem mem_circle_iff_abs {z : exprℂ} : z ∈ circle ↔ abs z = 1 :=\n  mem_sphere_zero_iff_norm\n#align mem_circle_iff_abs mem_circle_iff_abs\n\n",
 "exp_map_circle_zero":
 "@[simp]\ntheorem exp_map_circle_zero : exp_map_circle 0 = 1 :=\n  Subtype.ext <| by rw [exp_map_circle_apply, of_real_zero, MulZeroClass.zero_mul, exp_zero, Submonoid.coe_one]\n#align exp_map_circle_zero exp_map_circle_zero\n\n",
 "exp_map_circle_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_map_circle_sub (x y : exprℝ) : exp_map_circle (x - y) = exp_map_circle x / exp_map_circle y :=\n  exp_map_circle_hom.map_sub x y\n#align exp_map_circle_sub exp_map_circle_sub\n\n",
 "exp_map_circle_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_map_circle_neg (x : exprℝ) : exp_map_circle (-x) = (exp_map_circle x)⁻¹ :=\n  exp_map_circle_hom.map_neg x\n#align exp_map_circle_neg exp_map_circle_neg\n\n",
 "exp_map_circle_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_map_circle_apply (t : exprℝ) : ↑(exp_map_circle t) = Complex.exp (t * Complex.I) :=\n  rfl\n#align exp_map_circle_apply exp_map_circle_apply\n\n",
 "exp_map_circle_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_map_circle_add (x y : exprℝ) : exp_map_circle (x + y) = exp_map_circle x * exp_map_circle y :=\n  Subtype.ext <| by simp only [exp_map_circle_apply, Submonoid.coe_mul, of_real_add, add_mul, Complex.exp_add]\n#align exp_map_circle_add exp_map_circle_add\n\n",
 "coe_inv_circle_eq_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem coe_inv_circle_eq_conj (z : circle) : ↑z⁻¹ = (star_ring_end) (z : exprℂ) := by\n  rw [coe_inv_circle, inv_def, norm_sq_eq_of_mem_circle, inv_one, of_real_one, mul_one]\n#align coe_inv_circle_eq_conj coe_inv_circle_eq_conj\n\n",
 "coe_inv_circle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem coe_inv_circle (z : circle) : ↑z⁻¹ = (z : exprℂ)⁻¹ :=\n  rfl\n#align coe_inv_circle coe_inv_circle\n\n",
 "coe_div_circle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem coe_div_circle (z w : circle) : ↑(z / w) = (z : exprℂ) / w :=\n  circle.subtype.map_div z w\n#align coe_div_circle coe_div_circle\n\n",
 "circle_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem circle_def : ↑circle = { z : exprℂ | abs z = 1 } :=\n  Set.ext fun z => mem_circle_iff_abs\n#align circle_def circle_def\n\n",
 "abs_coe_circle":
 "@[simp]\ntheorem abs_coe_circle (z : circle) : abs z = 1 :=\n  mem_circle_iff_abs.mp z.2\n#align abs_coe_circle abs_coe_circle\n\n"}