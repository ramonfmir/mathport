{"same_ray_of_arg_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem same_ray_of_arg_eq (h : x.arg = y.arg) : same_ray (exprℝ) x y :=\n  same_ray_iff.mpr <| or.inr <| or.inr h\n#align same_ray_of_arg_eq same_ray_of_arg_eq\n\n",
 "same_ray_iff_arg_div_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem same_ray_iff_arg_div_eq_zero : same_ray (exprℝ) x y ↔ arg (x / y) = 0 :=\n  by\n  rw [← real.angle.to_real_zero, ← arg_coe_angle_eq_iff_eq_to_real, same_ray_iff]\n  by_cases hx : x = 0; · simp [hx]\n  by_cases hy : y = 0; · simp [hy]\n  simp [hx, hy, arg_div_coe_angle, sub_eq_zero]\n#align same_ray_iff_arg_div_eq_zero same_ray_iff_arg_div_eq_zero\n\n",
 "same_ray_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2022 Eric Rodriguez. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Eric Rodriguez\n-/\ntheorem same_ray_iff : same_ray (exprℝ) x y ↔ x = 0 ∨ y = 0 ∨ x.arg = y.arg :=\n  by\n  rcases eq_or_ne x 0 with (rfl | hx)\n  · simp\n  rcases eq_or_ne y 0 with (rfl | hy)\n  · simp\n  simp only [hx, hy, false_or_iff, same_ray_iff_norm_smul_eq, arg_eq_arg_iff hx hy]\n  field_simp [hx, hy]\n  rw [mul_comm, eq_comm]\n#align same_ray_iff same_ray_iff\n\n",
 "abs_sub_eq_iff":
 "theorem abs_sub_eq_iff : (x - y).abs = |x.abs - y.abs| ↔ x = 0 ∨ y = 0 ∨ x.arg = y.arg :=\n  same_ray_iff_norm_sub.symm.trans same_ray_iff\n#align abs_sub_eq_iff abs_sub_eq_iff\n\n",
 "abs_sub_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem abs_sub_eq (h : x.arg = y.arg) : (x - y).abs = «expr‖ ‖» (x.abs - y.abs) :=\n  (same_ray_of_arg_eq h).norm_sub\n#align abs_sub_eq abs_sub_eq\n\n",
 "abs_add_eq_iff":
 "theorem abs_add_eq_iff : (x + y).abs = x.abs + y.abs ↔ x = 0 ∨ y = 0 ∨ x.arg = y.arg :=\n  same_ray_iff_norm_add.symm.trans same_ray_iff\n#align abs_add_eq_iff abs_add_eq_iff\n\n",
 "abs_add_eq":
 "theorem abs_add_eq (h : x.arg = y.arg) : (x + y).abs = x.abs + y.abs :=\n  (same_ray_of_arg_eq h).norm_add\n#align abs_add_eq abs_add_eq\n\n"}