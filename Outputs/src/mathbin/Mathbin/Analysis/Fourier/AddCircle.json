{"volume_eq_smul_haar_add_circle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem volume_eq_smul_haar_add_circle :\n    (volume : measure (add_circle T)) = «expr • » (ennreal.of_real T) haar_add_circle :=\n  rfl\n#align volume_eq_smul_haar_add_circle volume_eq_smul_haar_add_circle\n\n",
 "tsum_sq_fourier_coeff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- **Parseval's identity**: for an `L²` function `f` on `add_circle T`, the sum of the squared\nnorms of the Fourier coefficients equals the `L²` norm of `f`. -/\ntheorem tsum_sq_fourier_coeff (f : Lp (exprℂ) 2 <| @haar_add_circle T hT) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        («expr‖ ‖» (fourier_coeff f i) ^ 2) =\n      «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\"\n        («expr‖ ‖» (f t) ^ 2) haar_add_circle :=\n  by\n  simp_rw [← fourier_basis_repr]\n  have H₁ :\n    «expr‖ ‖» (fourier_basis.repr f) ^ 2 =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        («expr‖ ‖» (fourier_basis.repr f i) ^ 2) :=\n    by\n    exact_mod_cast lp.norm_rpow_eq_tsum _ (fourier_basis.repr f)\n    norm_num\n  have H₂ : «expr‖ ‖» (fourier_basis.repr f) ^ 2 = «expr‖ ‖» f ^ 2 := by simp\n  have H₃ := congr_arg is_R_or_C.re (@L2.inner_def (add_circle T) (exprℂ) (exprℂ) _ _ _ _ f f)\n  rw [← integral_re] at H₃\n  · simp only [← norm_sq_eq_inner] at H₃\n    rw [← H₁, H₂, H₃]\n  · exact L2.integrable_inner f f\n#align tsum_sq_fourier_coeff tsum_sq_fourier_coeff\n\n",
 "to_circle_add":
 "theorem to_circle_add (x : add_circle T) (y : add_circle T) : to_circle (x + y) = to_circle x * to_circle y :=\n  by\n  induction x using quotient_add_group.induction_on'\n  induction y using quotient_add_group.induction_on'\n  simp_rw [← quotient_add_group.coe_add, to_circle, function.periodic.lift_coe, mul_add, exp_map_circle_add]\n#align to_circle_add to_circle_add\n\n",
 "span_fourier_closure_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- The linear span of the monomials `fourier n` is dense in `C(add_circle T, ℂ)`. -/\ntheorem span_fourier_closure_eq_top : (span (exprℂ) (range <| @fourier T)).topological_closure = «expr⊤» :=\n  by\n  rw [← fourier_subalgebra_coe]\n  exact congr_arg subalgebra.to_submodule fourier_subalgebra_closure_eq_top\n#align span_fourier_closure_eq_top span_fourier_closure_eq_top\n\n",
 "span_fourier_Lp_closure_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- For each `1 ≤ p < ∞`, the linear span of the monomials `fourier n` is dense in\n`Lp ℂ p haar_circle`. -/\ntheorem span_fourier_Lp_closure_eq_top {p : ennreal} [fact (1 ≤ p)] (hp : p ≠ ennreal.top) :\n    (span (exprℂ) (range (@fourier_Lp T _ p _))).topological_closure = «expr⊤» :=\n  by\n  convert\n    (continuous_map.to_Lp_dense_range (exprℂ) hp (@haar_add_circle T hT) (exprℂ)).topological_closure_map_submodule\n      span_fourier_closure_eq_top\n  rw [map_span, range_comp]\n  simp only [continuous_linear_map.coe_coe]\n#align span_fourier_Lp_closure_eq_top span_fourier_Lp_closure_eq_top\n\n",
 "scaled_exp_map_periodic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-\nCopyright (c) 2021 Heather Macbeth. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Heather Macbeth, David Loeffler\n-/\ntheorem scaled_exp_map_periodic : function.periodic (fun x => exp_map_circle (2 * real.pi / T * x)) T :=\n  by\n  -- The case T = 0 is not interesting, but it is true, so we prove it to save hypotheses\n  rcases eq_or_ne T 0 with (rfl | hT)\n  · intro x\n    simp\n  · intro x\n    simp_rw [mul_add]\n    rw [div_mul_cancel _ hT, periodic_exp_map_circle]\n#align scaled_exp_map_periodic scaled_exp_map_periodic\n\n",
 "orthonormal_fourier":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/-- The monomials `fourier n` are an orthonormal set with respect to normalised Haar measure. -/\ntheorem orthonormal_fourier : orthonormal (exprℂ) (@fourier_Lp T _ 2 _) :=\n  by\n  rw [orthonormal_iff_ite]\n  intro i j\n  rw [continuous_map.inner_to_Lp (@haar_add_circle T hT) (fourier i) (fourier j)]\n  simp_rw [← fourier_neg, ← fourier_add]\n  split_ifs\n  · simp_rw [h, neg_add_self]\n    have : «expr⇑ » (@fourier T 0) = (fun x => 1 : add_circle T → exprℂ) :=\n      by\n      ext1\n      exact fourier_zero\n    rw [this, integral_const, measure_univ, ennreal.one_to_real, complex.real_smul, complex.of_real_one, mul_one]\n  have hij : -i + j ≠ 0 := by\n    rw [add_comm]\n    exact sub_ne_zero.mpr (ne.symm h)\n  convert integral_eq_zero_of_add_right_eq_neg (fourier_add_half_inv_index hij hT.elim)\n  exact is_add_left_invariant.is_add_right_invariant\n#align orthonormal_fourier orthonormal_fourier\n\n",
 "injective_to_circle":
 "theorem injective_to_circle (hT : T ≠ 0) : function.injective (@to_circle T) :=\n  by\n  intro a b h\n  induction a using quotient_add_group.induction_on'\n  induction b using quotient_add_group.induction_on'\n  simp_rw [to_circle, function.periodic.lift_coe] at h\n  obtain ⟨m, hm⟩ := exp_map_circle_eq_exp_map_circle.mp h.symm\n  simp_rw [quotient_add_group.eq, add_subgroup.mem_zmultiples_iff, zsmul_eq_mul]\n  use m\n  field_simp [real.two_pi_pos.ne']  at hm\n  rw [← mul_right_inj' real.two_pi_pos.ne']\n  linarith\n#align injective_to_circle injective_to_circle\n\n",
 "has_sum_fourier_series_of_summable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- If the sequence of Fourier coefficients of `f` is summable, then the Fourier series converges\nuniformly to `f`. -/\ntheorem has_sum_fourier_series_of_summable (h : summable (fourier_coeff f)) :\n    has_sum (fun i => «expr • » (fourier_coeff f i) (fourier i)) f :=\n  by\n  have sum_L2 := has_sum_fourier_series_L2 (to_Lp 2 haar_add_circle (exprℂ) f)\n  simp_rw [fourier_coeff_to_Lp] at sum_L2\n  refine' continuous_map.has_sum_of_has_sum_Lp (summable_of_summable_norm _) sum_L2\n  simp_rw [norm_smul, fourier_norm, mul_one, summable_norm_iff]\n  exact h\n#align has_sum_fourier_series_of_summable has_sum_fourier_series_of_summable\n\n",
 "has_sum_fourier_series_L2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The Fourier series of an `L2` function `f` sums to `f`, in the `L²` space of `add_circle T`. -/\ntheorem has_sum_fourier_series_L2 (f : Lp (exprℂ) 2 <| @haar_add_circle T hT) :\n    has_sum (fun i => «expr • » (fourier_coeff f i) (fourier_Lp 2 i)) f :=\n  by\n  simp_rw [← fourier_basis_repr]\n  simpa using hilbert_basis.has_sum_repr fourier_basis f\n#align has_sum_fourier_series_L2 has_sum_fourier_series_L2\n\n",
 "has_pointwise_sum_fourier_series_of_summable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- If the sequence of Fourier coefficients of `f` is summable, then the Fourier series of `f`\nconverges everywhere pointwise to `f`. -/\ntheorem has_pointwise_sum_fourier_series_of_summable (h : summable (fourier_coeff f)) (x : add_circle T) :\n    has_sum (fun i => «expr • » (fourier_coeff f i) (fourier i x)) (f x) :=\n  (continuous_map.eval_clm (exprℂ) x).has_sum (has_sum_fourier_series_of_summable h)\n#align has_pointwise_sum_fourier_series_of_summable has_pointwise_sum_fourier_series_of_summable\n\n",
 "has_deriv_at_fourier_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem has_deriv_at_fourier_neg (n : ℤ) (x : exprℝ) :\n    has_deriv_at (fun y : exprℝ => fourier (-n) (y : add_circle T))\n      (-2 * real.pi * I * n / T * fourier (-n) (x : add_circle T)) x :=\n  by simpa using has_deriv_at_fourier T (-n) x\n#align has_deriv_at_fourier_neg has_deriv_at_fourier_neg\n\n",
 "has_deriv_at_fourier":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem has_deriv_at_fourier (n : ℤ) (x : exprℝ) :\n    has_deriv_at (fun y : exprℝ => fourier n (y : add_circle T))\n      (2 * real.pi * I * n / T * fourier n (x : add_circle T)) x :=\n  by\n  simp_rw [fourier_coe_apply]\n  refine' (_ : has_deriv_at (fun y => exp (2 * real.pi * I * n * y / T)) _ _).comp_of_real\n  rw [(fun α β => by ring : ∀ α β : exprℂ, α * exp β = exp β * α)]\n  refine' (has_deriv_at_exp _).comp x _\n  convert has_deriv_at_mul_const (2 * ↑(real.pi) * I * ↑n / T)\n  ext1 y; ring\n#align has_deriv_at_fourier has_deriv_at_fourier\n\n",
 "has_antideriv_at_fourier_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem has_antideriv_at_fourier_neg (hT : fact (0 < T)) {n : ℤ} (hn : n ≠ 0) (x : exprℝ) :\n    has_deriv_at (fun y : exprℝ => (T : exprℂ) / (-2 * real.pi * I * n) * fourier (-n) (y : add_circle T))\n      (fourier (-n) (x : add_circle T)) x :=\n  by\n  convert (has_deriv_at_fourier_neg T n x).div_const (-2 * real.pi * I * n / T) using 1\n  · ext1 y\n    rw [div_div_eq_mul_div]\n    ring\n  · rw [mul_div_cancel_left]\n    simp only [ne.def, div_eq_zero_iff, neg_eq_zero, mul_eq_zero, bit0_eq_zero, one_ne_zero, of_real_eq_zero,\n      false_or_iff, Int.cast_eq_zero, not_or]\n    exact ⟨⟨⟨real.pi_ne_zero, I_ne_zero⟩, hn⟩, hT.out.ne'⟩\n#align has_antideriv_at_fourier_neg has_antideriv_at_fourier_neg\n\n",
 "fourier_zero":
 "@[simp]\ntheorem fourier_zero {x : add_circle T} : fourier 0 x = 1 :=\n  by\n  induction x using quotient_add_group.induction_on'\n  simp only [fourier_coe_apply, algebra_map.coe_zero, mul_zero, zero_mul, zero_div, complex.exp_zero]\n#align fourier_zero fourier_zero\n\n",
 "fourier_subalgebra_separates_points":
 "/-- The subalgebra of `C(add_circle T, ℂ)` generated by `fourier n` for `n ∈ ℤ`\nseparates points. -/\ntheorem fourier_subalgebra_separates_points : (@fourier_subalgebra T).separates_points :=\n  by\n  intro x y hxy\n  refine' ⟨_, ⟨fourier 1, subset_adjoin ⟨1, rfl⟩, rfl⟩, _⟩\n  dsimp only; rw [fourier_one, fourier_one]\n  contrapose! hxy\n  rw [subtype.coe_inj] at hxy\n  exact injective_to_circle hT.elim.ne' hxy\n#align fourier_subalgebra_separates_points fourier_subalgebra_separates_points\n\n",
 "fourier_subalgebra_conj_invariant":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The subalgebra of `C(add_circle T, ℂ)` generated by `fourier n` for `n ∈ ℤ` is invariant under\ncomplex conjugation. -/\ntheorem fourier_subalgebra_conj_invariant :\n    conj_invariant_subalgebra ((@fourier_subalgebra T).restrict_scalars (exprℝ)) :=\n  by\n  apply subalgebra_conj_invariant\n  rintro _ ⟨n, rfl⟩\n  exact ⟨-n, ext fun _ => fourier_neg⟩\n#align fourier_subalgebra_conj_invariant fourier_subalgebra_conj_invariant\n\n",
 "fourier_subalgebra_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/-- The subalgebra of `C(add_circle T, ℂ)` generated by `fourier n` for `n ∈ ℤ` is in fact the\nlinear span of these functions. -/\ntheorem fourier_subalgebra_coe : (@fourier_subalgebra T).to_submodule = span (exprℂ) (range fourier) :=\n  by\n  apply adjoin_eq_span_of_subset\n  refine' subset.trans _ submodule.subset_span\n  intro x hx\n  apply Submonoid.closure_induction hx (fun _ => id) ⟨0, _⟩\n  · rintro _ _ ⟨m, rfl⟩ ⟨n, rfl⟩\n    refine' ⟨m + n, _⟩\n    ext1 z\n    exact fourier_add\n  · ext1 z\n    exact fourier_zero\n#align fourier_subalgebra_coe fourier_subalgebra_coe\n\n",
 "fourier_subalgebra_closure_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- The subalgebra of `C(add_circle T, ℂ)` generated by `fourier n` for `n ∈ ℤ` is dense. -/\ntheorem fourier_subalgebra_closure_eq_top : (@fourier_subalgebra T).topological_closure = «expr⊤» :=\n  continuous_map.subalgebra_is_R_or_C_topological_closure_eq_top_of_separates_points fourier_subalgebra\n    fourier_subalgebra_separates_points fourier_subalgebra_conj_invariant\n#align fourier_subalgebra_closure_eq_top fourier_subalgebra_closure_eq_top\n\n",
 "fourier_one":
 "@[simp]\ntheorem fourier_one {x : add_circle T} : fourier 1 x = to_circle x := by rw [fourier_apply, one_zsmul]\n#align fourier_one fourier_one\n\n",
 "fourier_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem fourier_norm [fact (0 < T)] (n : ℤ) : «expr‖ ‖» (@fourier T n) = 1 :=\n  by\n  rw [continuous_map.norm_eq_supr_norm]\n  have : ∀ x : add_circle T, «expr‖ ‖» (fourier n x) = 1 := fun x => abs_coe_circle _\n  simp_rw [this]\n  exact @csupᵢ_const _ _ _ has_zero.nonempty _\n#align fourier_norm fourier_norm\n\n",
 "fourier_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem fourier_neg {n : ℤ} {x : add_circle T} : fourier (-n) x = (star_ring_end) (fourier n x) :=\n  by\n  induction x using quotient_add_group.induction_on'\n  simp_rw [fourier_apply, to_circle, ← quotient_add_group.coe_zsmul, function.periodic.lift_coe, ←\n    coe_inv_circle_eq_conj, ← exp_map_circle_neg, neg_smul, mul_neg]\n#align fourier_neg fourier_neg\n\n",
 "fourier_eval_zero":
 "@[simp]\ntheorem fourier_eval_zero (n : ℤ) : fourier n (0 : add_circle T) = 1 := by\n  rw [← quotient_add_group.coe_zero, fourier_coe_apply, complex.of_real_zero, mul_zero, zero_div, complex.exp_zero]\n#align fourier_eval_zero fourier_eval_zero\n\n",
 "fourier_coeff_to_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem fourier_coeff_to_Lp (n : ℤ) : fourier_coeff (to_Lp 2 haar_add_circle (exprℂ) f) n = fourier_coeff f n :=\n  integral_congr_ae\n    (filter.eventually_eq.mul (filter.eventually_of_forall (by tauto))\n      (continuous_map.coe_fn_to_ae_eq_fun haar_add_circle f))\n#align fourier_coeff_to_Lp fourier_coeff_to_Lp\n\n",
 "fourier_coeff_on_of_has_deriv_at":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- Express Fourier coefficients of `f` on an interval in terms of those of its derivative. -/\ntheorem fourier_coeff_on_of_has_deriv_at {a b : exprℝ} (hab : a < b) {f f' : exprℝ → exprℂ} {n : ℤ} (hn : n ≠ 0)\n    (hf : ∀ x, x ∈ set.uIcc a b → has_deriv_at f (f' x) x) (hf' : interval_integrable f' volume a b) :\n    fourier_coeff_on hab f n =\n      1 / (-2 * real.pi * I * n) *\n        (fourier (-n) (a : add_circle (b - a)) * (f b - f a) - (b - a) * fourier_coeff_on hab f' n) :=\n  by\n  rw [← of_real_sub]\n  have hT : fact (0 < b - a) := ⟨by linarith⟩\n  simp_rw [fourier_coeff_on_eq_integral, smul_eq_mul, real_smul, of_real_div, of_real_one]\n  conv => pattern (occs := 1 2 3) fourier _ _ * _ <;> (rw [mul_comm])\n  rw [integral_mul_deriv_eq_deriv_mul hf (fun x hx => has_antideriv_at_fourier_neg hT hn x) hf'\n      (((map_continuous (fourier (-n))).comp (add_circle.continuous_mk' _)).interval_integrable _ _)]\n  dsimp only\n  have : ∀ u v w : exprℂ, u * ((b - a : exprℝ) / v * w) = (b - a : exprℝ) / v * (u * w) :=\n    by\n    intros\n    ring\n  conv in interval_integral _ _ _ _ =>\n    congr\n    ext\n    rw [this]\n  rw [(by ring :\n      ((b - a : exprℝ) : exprℂ) / (-2 * real.pi * I * n) = ((b - a : exprℝ) : exprℂ) * (1 / (-2 * real.pi * I * n)))]\n  have s2 : (b : add_circle (b - a)) = (a : add_circle (b - a)) := by simpa using coe_add_period (b - a) a\n  rw [s2, integral_const_mul, ← sub_mul, mul_sub, mul_sub]\n  congr 1\n  · conv_lhs => rw [mul_comm, mul_div, mul_one]\n    rw [div_eq_iff (of_real_ne_zero.mpr hT.out.ne')]\n    ring\n  · ring\n#align fourier_coeff_on_of_has_deriv_at fourier_coeff_on_of_has_deriv_at\n\n",
 "fourier_coeff_on_eq_integral":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem fourier_coeff_on_eq_integral {a b : exprℝ} (f : exprℝ → E) (n : ℤ) (hab : a < b) :\n    fourier_coeff_on hab f n =\n      «expr • » (1 / (b - a))\n        («expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" a b\n          («expr • » (fourier (-n) (x : add_circle (b - a))) (f x))) :=\n  by\n  rw [fourier_coeff_on, fourier_coeff_eq_interval_integral _ _ a]\n  congr 1\n  rw [add_sub, add_sub_cancel']\n  simp_rw [interval_integral.integral_of_le hab.le]\n  refine' set_integral_congr measurable_set_Ioc fun x hx => _\n  dsimp only\n  rwa [lift_Ioc_coe_apply]\n  rwa [add_sub, add_sub_cancel']\n#align fourier_coeff_on_eq_integral fourier_coeff_on_eq_integral\n\n",
 "fourier_coeff_lift_Ioc_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem fourier_coeff_lift_Ioc_eq {a : exprℝ} (f : exprℝ → exprℂ) (n : ℤ) :\n    fourier_coeff (add_circle.lift_Ioc T a f) n = fourier_coeff_on (lt_add_of_pos_right a hT.out) f n :=\n  by\n  rw [fourier_coeff_on_eq_integral, fourier_coeff_eq_interval_integral, add_sub_cancel' a T]\n  congr 1\n  refine' interval_integral.integral_congr_ae (ae_of_all _ fun x hx => _)\n  rw [lift_Ioc_coe_apply]\n  rwa [uIoc_of_le (lt_add_of_pos_right a hT.out).le] at hx\n#align fourier_coeff_lift_Ioc_eq fourier_coeff_lift_Ioc_eq\n\n",
 "fourier_coeff_lift_Ico_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem fourier_coeff_lift_Ico_eq {a : exprℝ} (f : exprℝ → exprℂ) (n : ℤ) :\n    fourier_coeff (add_circle.lift_Ico T a f) n = fourier_coeff_on (lt_add_of_pos_right a hT.out) f n :=\n  by\n  rw [fourier_coeff_on_eq_integral, fourier_coeff_eq_interval_integral _ _ a, add_sub_cancel' a T]\n  congr 1\n  simp_rw [interval_integral.integral_of_le (lt_add_of_pos_right a hT.out).le, integral_Ioc_eq_integral_Ioo]\n  refine' set_integral_congr measurable_set_Ioo fun x hx => _\n  dsimp only\n  rw [lift_Ico_coe_apply (Ioo_subset_Ico_self hx)]\n#align fourier_coeff_lift_Ico_eq fourier_coeff_lift_Ico_eq\n\n",
 "fourier_coeff_eq_interval_integral":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n-- everything from here on needs `0 < T`\n/-- The Fourier coefficients of a function on `add_circle T` can be computed as an integral\nover `[a, a + T]`, for any real `a`. -/\ntheorem fourier_coeff_eq_interval_integral (f : add_circle T → E) (n : ℤ) (a : exprℝ) :\n    fourier_coeff f n =\n      «expr • » (1 / T)\n        («expr∫ in .. , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ in .. , »\" a\n          (a + T) («expr • » (@fourier T (-n) x) (f x))) :=\n  by\n  have :\n    ∀ x : exprℝ,\n      «expr • » (@fourier T (-n) x) (f x) = (fun z : add_circle T => «expr • » (@fourier T (-n) z) (f z)) x :=\n    by\n    intro x\n    rfl\n  simp_rw [this]\n  rw [fourier_coeff, add_circle.interval_integral_preimage T a, volume_eq_smul_haar_add_circle, integral_smul_measure,\n    ennreal.to_real_of_real hT.out.le, ← smul_assoc, smul_eq_mul, one_div_mul_cancel hT.out.ne', one_smul]\n#align fourier_coeff_eq_interval_integral fourier_coeff_eq_interval_integral\n\n",
 "fourier_coe_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n@[simp]\ntheorem fourier_coe_apply {n : ℤ} {x : exprℝ} :\n    fourier n (x : add_circle T) = complex.exp (2 * real.pi * complex.I * n * x / T) :=\n  by\n  rw [fourier_apply, ← quotient_add_group.coe_zsmul, to_circle, function.periodic.lift_coe, exp_map_circle_apply,\n    complex.of_real_mul, complex.of_real_div, complex.of_real_mul, zsmul_eq_mul, complex.of_real_mul,\n    complex.of_real_int_cast, complex.of_real_bit0, complex.of_real_one]\n  congr 1; ring\n#align fourier_coe_apply fourier_coe_apply\n\n",
 "fourier_basis_repr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/-- Under the isometric isomorphism `fourier_basis` from `Lp ℂ 2 haar_circle` to `ℓ²(ℤ, ℂ)`, the\n`i`-th coefficient is `fourier_coeff f i`, i.e., the integral over `add_circle T` of\n`λ t, fourier (-i) t * f t` with respect to the Haar measure of total mass 1. -/\ntheorem fourier_basis_repr (f : Lp (exprℂ) 2 <| @haar_add_circle T hT) (i : ℤ) :\n    fourier_basis.repr f i = fourier_coeff f i :=\n  by\n  trans\n    «expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\"\n      ((star_ring_end) ((@fourier_Lp T hT 2 _ i : add_circle T → exprℂ) t) * f t) haar_add_circle\n  · simp [fourier_basis.repr_apply_apply f i, measure_theory.L2.inner_def]\n  · apply integral_congr_ae\n    filter_upwards [coe_fn_fourier_Lp 2 i] with _ ht\n    rw [ht, ← fourier_neg, smul_eq_mul]\n#align fourier_basis_repr fourier_basis_repr\n\n",
 "fourier_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem fourier_apply {n : ℤ} {x : add_circle T} : fourier n x = to_circle («expr • » n x) :=\n  rfl\n#align fourier_apply fourier_apply\n\n",
 "fourier_add_half_inv_index":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- For `n ≠ 0`, a translation by `T / 2 / n` negates the function `fourier n`. -/\ntheorem fourier_add_half_inv_index {n : ℤ} (hn : n ≠ 0) (hT : 0 < T) (x : add_circle T) :\n    fourier n (x + (T / 2 / n : exprℝ)) = -fourier n x :=\n  by\n  rw [fourier_apply, zsmul_add, ← quotient_add_group.coe_zsmul, to_circle_add, coe_mul_unit_sphere]\n  have : (n : exprℂ) ≠ 0 := by simpa using hn\n  have : (@to_circle T («expr • » n (T / 2 / n) : exprℝ) : exprℂ) = -1 :=\n    by\n    rw [zsmul_eq_mul, to_circle, function.periodic.lift_coe, exp_map_circle_apply]\n    replace hT := complex.of_real_ne_zero.mpr hT.ne'\n    convert complex.exp_pi_mul_I using 3\n    field_simp\n    ring\n  rw [this]\n  simp\n#align fourier_add_half_inv_index fourier_add_half_inv_index\n\n",
 "fourier_add":
 "@[simp]\ntheorem fourier_add {m n : ℤ} {x : add_circle T} : fourier (m + n) x = fourier m x * fourier n x := by\n  simp_rw [fourier_apply, add_zsmul, to_circle_add, coe_mul_unit_sphere]\n#align fourier_add fourier_add\n\n",
 "continuous_to_circle":
 "theorem continuous_to_circle : continuous (@to_circle T) :=\n  continuous_coinduced_dom.mpr (exp_map_circle.continuous.comp <| continuous_const.mul continuous_id')\n#align continuous_to_circle continuous_to_circle\n\n",
 "const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem fourier_coeff_on.const_smul {a b : exprℝ} (f : exprℝ → E) (c : exprℂ) (n : ℤ) (hab : a < b) :\n    fourier_coeff_on hab («expr • » c f) n = «expr • » c (fourier_coeff_on hab f n) := by apply fourier_coeff.const_smul\n#align fourier_coeff_on.const_smul fourier_coeff_on.const_smul\n\n",
 "const_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem fourier_coeff_on.const_mul {a b : exprℝ} (f : exprℝ → exprℂ) (c : exprℂ) (n : ℤ) (hab : a < b) :\n    fourier_coeff_on hab (fun x => c * f x) n = c * fourier_coeff_on hab f n :=\n  fourier_coeff_on.const_smul _ _ _ _\n#align fourier_coeff_on.const_mul fourier_coeff_on.const_mul\n\n",
 "coe_fourier_basis":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/-- The elements of the Hilbert basis `fourier_basis` are the functions `fourier_Lp 2`, i.e. the\nmonomials `fourier n` on the circle considered as elements of `L²`. -/\n@[simp]\ntheorem coe_fourier_basis : «expr⇑ » (@fourier_basis _ hT) = fourier_Lp 2 :=\n  hilbert_basis.coe_mk _ _\n#align coe_fourier_basis coe_fourier_basis\n\n",
 "coe_fn_fourier_Lp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem coe_fn_fourier_Lp (p : ennreal) [fact (1 ≤ p)] (n : ℤ) :\n    «expr =ᵐ[ ] » (@fourier_Lp T hT p _ n) haar_add_circle (fourier n) :=\n  coe_fn_to_Lp haar_add_circle (fourier n)\n#align coe_fn_fourier_Lp coe_fn_fourier_Lp\n\n"}