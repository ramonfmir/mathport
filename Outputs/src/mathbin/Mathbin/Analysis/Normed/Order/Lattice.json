{"solid":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print solid /-\n/-\nCopyright (c) 2021 Christopher Hoskin. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Christopher Hoskin\n-/\ntheorem solid {α : Type _} [NormedLatticeAddCommGroup α] {a b : α} (h : abs a ≤ abs b) : «expr‖ ‖» a ≤ «expr‖ ‖» b :=\n  normed_lattice_add_comm_group.solid a b h\n#align solid solid\n-/\n\n",
 "norm_sup_sub_sup_le_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print norm_sup_sub_sup_le_norm /-\ntheorem norm_sup_sub_sup_le_norm (x y z : α) : «expr‖ ‖» («expr ⊔ » x z - «expr ⊔ » y z) ≤ «expr‖ ‖» (x - y) :=\n  solid (abs_sup_sub_sup_le_abs x y z)\n#align norm_sup_sub_sup_le_norm norm_sup_sub_sup_le_norm\n-/\n\n",
 "norm_sup_sub_sup_le_add_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print norm_sup_sub_sup_le_add_norm /-\ntheorem norm_sup_sub_sup_le_add_norm (a b c d : α) :\n    «expr‖ ‖» («expr ⊔ » a b - «expr ⊔ » c d) ≤ «expr‖ ‖» (a - c) + «expr‖ ‖» (b - d) :=\n  by\n  rw [← norm_abs_eq_norm (a - c), ← norm_abs_eq_norm (b - d)]\n  refine' le_trans (solid _) (norm_add_le (abs (a - c)) (abs (b - d)))\n  rw [abs_of_nonneg (abs (a - c) + abs (b - d)) (add_nonneg (abs_nonneg (a - c)) (abs_nonneg (b - d)))]\n  calc\n    abs («expr ⊔ » a b - «expr ⊔ » c d) = abs («expr ⊔ » a b - «expr ⊔ » c b + («expr ⊔ » c b - «expr ⊔ » c d)) := by\n      rw [sub_add_sub_cancel]\n    _ ≤ abs («expr ⊔ » a b - «expr ⊔ » c b) + abs («expr ⊔ » c b - «expr ⊔ » c d) := (abs_add_le _ _)\n    _ ≤ abs (a - c) + abs (b - d) := by\n      apply add_le_add\n      · exact abs_sup_sub_sup_le_abs _ _ _\n      · rw [@sup_comm _ _ c, @sup_comm _ _ c]\n        exact abs_sup_sub_sup_le_abs _ _ _\n    \n#align norm_sup_sub_sup_le_add_norm norm_sup_sub_sup_le_add_norm\n-/\n\n",
 "norm_sup_le_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print norm_sup_le_add /-\ntheorem norm_sup_le_add (x y : α) : «expr‖ ‖» («expr ⊔ » x y) ≤ «expr‖ ‖» x + «expr‖ ‖» y :=\n  by\n  have h : «expr‖ ‖» («expr ⊔ » x y - «expr ⊔ » 0 0) ≤ «expr‖ ‖» (x - 0) + «expr‖ ‖» (y - 0) :=\n    norm_sup_sub_sup_le_add_norm x y 0 0\n  simpa only [sup_idem, sub_zero] using h\n#align norm_sup_le_add norm_sup_le_add\n-/\n\n",
 "norm_inf_sub_inf_le_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print norm_inf_sub_inf_le_norm /-\ntheorem norm_inf_sub_inf_le_norm (x y z : α) : «expr‖ ‖» («expr ⊓ » x z - «expr ⊓ » y z) ≤ «expr‖ ‖» (x - y) :=\n  solid (abs_inf_sub_inf_le_abs x y z)\n#align norm_inf_sub_inf_le_norm norm_inf_sub_inf_le_norm\n-/\n\n",
 "norm_inf_sub_inf_le_add_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print norm_inf_sub_inf_le_add_norm /-\ntheorem norm_inf_sub_inf_le_add_norm (a b c d : α) :\n    «expr‖ ‖» («expr ⊓ » a b - «expr ⊓ » c d) ≤ «expr‖ ‖» (a - c) + «expr‖ ‖» (b - d) :=\n  by\n  rw [← norm_abs_eq_norm (a - c), ← norm_abs_eq_norm (b - d)]\n  refine' le_trans (solid _) (norm_add_le (abs (a - c)) (abs (b - d)))\n  rw [abs_of_nonneg (abs (a - c) + abs (b - d)) (add_nonneg (abs_nonneg (a - c)) (abs_nonneg (b - d)))]\n  calc\n    abs («expr ⊓ » a b - «expr ⊓ » c d) = abs («expr ⊓ » a b - «expr ⊓ » c b + («expr ⊓ » c b - «expr ⊓ » c d)) := by\n      rw [sub_add_sub_cancel]\n    _ ≤ abs («expr ⊓ » a b - «expr ⊓ » c b) + abs («expr ⊓ » c b - «expr ⊓ » c d) := (abs_add_le _ _)\n    _ ≤ abs (a - c) + abs (b - d) := by\n      apply add_le_add\n      · exact abs_inf_sub_inf_le_abs _ _ _\n      · rw [@inf_comm _ _ c, @inf_comm _ _ c]\n        exact abs_inf_sub_inf_le_abs _ _ _\n    \n#align norm_inf_sub_inf_le_add_norm norm_inf_sub_inf_le_add_norm\n-/\n\n",
 "norm_inf_le_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print norm_inf_le_add /-\ntheorem norm_inf_le_add (x y : α) : «expr‖ ‖» («expr ⊓ » x y) ≤ «expr‖ ‖» x + «expr‖ ‖» y :=\n  by\n  have h : «expr‖ ‖» («expr ⊓ » x y - «expr ⊓ » 0 0) ≤ «expr‖ ‖» (x - 0) + «expr‖ ‖» (y - 0) :=\n    norm_inf_sub_inf_le_add_norm x y 0 0\n  simpa only [inf_idem, sub_zero] using h\n#align norm_inf_le_add norm_inf_le_add\n-/\n\n",
 "norm_abs_sub_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print norm_abs_sub_abs /-\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\ntheorem norm_abs_sub_abs (a b : α) : «expr‖ ‖» (abs a - abs b) ≤ «expr‖ ‖» (a - b) :=\n  solid (LatticeOrderedCommGroup.abs_abs_sub_abs_le _ _)\n#align norm_abs_sub_abs norm_abs_sub_abs\n-/\n\n",
 "norm_abs_eq_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print norm_abs_eq_norm /-\n-- see Note [lower instance priority]\ntheorem norm_abs_eq_norm (a : α) : «expr‖ ‖» (abs a) = «expr‖ ‖» a :=\n  (solid (abs_abs a).le).antisymm (solid (abs_abs a).symm.le)\n#align norm_abs_eq_norm norm_abs_eq_norm\n-/\n\n",
 "lipschitzWith_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print lipschitzWith_sup_right /-\ntheorem lipschitzWith_sup_right (z : α) : LipschitzWith 1 fun x => «expr ⊔ » x z :=\n  LipschitzWith.of_dist_le_mul fun x y =>\n    by\n    rw [Nonneg.coe_one, one_mul, dist_eq_norm, dist_eq_norm]\n    exact norm_sup_sub_sup_le_norm x y z\n#align lipschitz_with_sup_right lipschitzWith_sup_right\n-/\n\n",
 "lipschitzWith_pos":
 "#print lipschitzWith_pos /-\ntheorem lipschitzWith_pos : LipschitzWith 1 (has_pos_part.pos : α → α) :=\n  lipschitzWith_sup_right 0\n#align lipschitz_with_pos lipschitzWith_pos\n-/\n\n",
 "isClosed_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print isClosed_nonneg /-\ntheorem isClosed_nonneg {E} [NormedLatticeAddCommGroup E] : IsClosed { x : E | 0 ≤ x } :=\n  by\n  suffices { x : E | 0 ≤ x } = «expr ⁻¹' » has_neg_part.neg {(0 : E)}\n    by\n    rw [this]\n    exact IsClosed.preimage continuous_neg' isClosed_singleton\n  ext1 x\n  simp only [Set.mem_preimage, Set.mem_singleton_iff, Set.mem_setOf_eq, neg_eq_zero_iff]\n#align is_closed_nonneg isClosed_nonneg\n-/\n\n",
 "isClosed_le_of_isClosed_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print isClosed_le_of_isClosed_nonneg /-\ntheorem isClosed_le_of_isClosed_nonneg {G} [OrderedAddCommGroup G] [TopologicalSpace G] [ContinuousSub G]\n    (h : IsClosed { x : G | 0 ≤ x }) : IsClosed { p : G × G | p.fst ≤ p.snd } :=\n  by\n  have : { p : G × G | p.fst ≤ p.snd } = «expr ⁻¹' » (fun p : G × G => p.snd - p.fst) { x : G | 0 ≤ x } :=\n    by\n    ext1 p\n    simp only [sub_nonneg, Set.preimage_setOf_eq]\n  rw [this]\n  exact IsClosed.preimage (continuous_snd.sub continuous_fst) h\n#align is_closed_le_of_is_closed_nonneg isClosed_le_of_isClosed_nonneg\n-/\n\n",
 "dual_solid":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n#print dual_solid /-\n-- see Note [lower instance priority]\ntheorem dual_solid (a b : α) (h : «expr ⊓ » b (-b) ≤ «expr ⊓ » a (-a)) : «expr‖ ‖» a ≤ «expr‖ ‖» b :=\n  by\n  apply solid\n  rw [abs_eq_sup_neg]\n  nth_rw 1 [← neg_neg a]\n  rw [← neg_inf_eq_sup_neg]\n  rw [abs_eq_sup_neg]\n  nth_rw 1 [← neg_neg b]\n  rwa [← neg_inf_eq_sup_neg, neg_le_neg_iff, @inf_comm _ _ _ b, @inf_comm _ _ _ a]\n#align dual_solid dual_solid\n-/\n\n",
 "continuous_pos":
 "#print continuous_pos /-\ntheorem continuous_pos : Continuous (has_pos_part.pos : α → α) :=\n  LipschitzWith.continuous lipschitzWith_pos\n#align continuous_pos continuous_pos\n-/\n\n",
 "continuous_neg'":
 "#print continuous_neg' /-\ntheorem continuous_neg' : Continuous (has_neg_part.neg : α → α) :=\n  continuous_pos.comp continuous_neg\n#align continuous_neg' continuous_neg'\n-/\n\n"}