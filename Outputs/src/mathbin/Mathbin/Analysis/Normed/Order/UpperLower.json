{"thickening'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print IsLowerSet.thickening' /-\n@[to_additive IsLowerSet.thickening]\nprotected theorem IsLowerSet.thickening' (hs : IsLowerSet s) (ε : exprℝ) : IsLowerSet (thickening ε s) :=\n  by\n  rw [← ball_mul_one]\n  exact hs.mul_left\n#align is_lower_set.thickening' IsLowerSet.thickening'\n#align is_lower_set.thickening IsLowerSet.thickening\n-/\n\n",
 "mem_interior_of_forall_lt":
 "#print IsLowerSet.mem_interior_of_forall_lt /-\ntheorem IsLowerSet.mem_interior_of_forall_lt (hs : IsLowerSet s) (hx : x ∈ closure s) (h : ∀ i, y i < x i) :\n    y ∈ interior s := by\n  cases nonempty_fintype ι\n  obtain ⟨ε, hε, hxy⟩ := Pi.exists_forall_pos_add_lt h\n  obtain ⟨z, hz, hxz⟩ := Metric.mem_closure_iff.1 hx _ hε\n  rw [dist_pi_lt_iff hε] at hxz\n  have hyz : ∀ i, y i < z i :=\n    by\n    refine' fun i => (lt_sub_iff_add_lt.2 <| hxy _).trans_le (sub_le_comm.1 <| (le_abs_self _).trans _)\n    rw [← Real.norm_eq_abs, ← dist_eq_norm]\n    exact (hxz _).le\n  obtain ⟨δ, hδ, hyz⟩ := Pi.exists_forall_pos_add_lt hyz\n  refine' mem_interior.2 ⟨ball y δ, _, is_open_ball, mem_ball_self hδ⟩\n  rintro w hw\n  refine' hs (fun i => _) hz\n  simp_rw [ball_pi _ hδ, Real.ball_eq_Ioo] at hw\n  exact ((hw _ <| mem_univ _).2.trans <| hyz _).le\n#align is_lower_set.mem_interior_of_forall_lt IsLowerSet.mem_interior_of_forall_lt\n-/\n\n",
 "exists_subset_ball":
 "#print IsLowerSet.exists_subset_ball /-\ntheorem IsLowerSet.exists_subset_ball (hs : IsLowerSet s) (hx : x ∈ closure s) (hδ : 0 < δ) :\n    ∃ y, closedBall y (δ / 4) ⊆ closedBall x δ ∧ closedBall y (δ / 4) ⊆ interior s :=\n  by\n  refine' ⟨x - const _ (3 / 4 * δ), closed_ball_subset_closed_ball' _, _⟩\n  · rw [dist_self_sub_left]\n    refine' (add_le_add_left (pi_norm_const_le <| 3 / 4 * δ) _).trans_eq _\n    simp [Real.norm_of_nonneg, hδ.le, zero_le_three]\n    ring_nf\n  obtain ⟨y, hy, hxy⟩ := Metric.mem_closure_iff.1 hx _ (div_pos hδ zero_lt_four)\n  refine' fun z hz => hs.mem_interior_of_forall_lt (subset_closure hy) fun i => _\n  rw [mem_closed_ball, dist_eq_norm'] at hz\n  rw [dist_eq_norm] at hxy\n  replace hxy := (norm_le_pi_norm _ i).trans hxy.le\n  replace hz := (norm_le_pi_norm _ i).trans hz\n  dsimp at hxy hz\n  rw [abs_sub_le_iff] at hxy hz\n  linarith\n#align is_lower_set.exists_subset_ball IsLowerSet.exists_subset_ball\n-/\n\n",
 "cthickening'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print IsLowerSet.cthickening' /-\n@[to_additive IsLowerSet.cthickening]\nprotected theorem IsLowerSet.cthickening' (hs : IsLowerSet s) (ε : exprℝ) : IsLowerSet (cthickening ε s) :=\n  by\n  rw [cthickening_eq_Inter_thickening'']\n  exact isLowerSet_interᵢ₂ fun δ hδ => hs.thickening' _\n#align is_lower_set.cthickening' IsLowerSet.cthickening'\n#align is_lower_set.cthickening IsLowerSet.cthickening\n-/\n\n"}