{"zero_mul_is_bounded_under_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem filter.tendsto.zero_mul_is_bounded_under_le {f g : ι → α} {l : filter ι} (hf : tendsto f l ((nhds) 0))\n    (hg : is_bounded_under (· ≤ ·) l (norm ∘ g)) : tendsto (fun x => f x * g x) l ((nhds) 0) :=\n  hf.op_zero_is_bounded_under_le hg (· * ·) norm_mul_le\n#align filter.tendsto.zero_mul_is_bounded_under_le filter.tendsto.zero_mul_is_bounded_under_le\n\n",
 "to_nnreal_mul_nnnorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem to_nnreal_mul_nnnorm {x : exprℝ} (y : exprℝ) (hx : 0 ≤ x) : x.to_nnreal * «expr‖ ‖₊» y = «expr‖ ‖₊» (x * y) :=\n  by simp [real.to_nnreal_of_nonneg, nnnorm, norm_of_nonneg, hx]\n#align to_nnreal_mul_nnnorm to_nnreal_mul_nnnorm\n\n",
 "tendsto_mul_right_cobounded":
 "/-- Multiplication on the right by a nonzero element of a normed division ring tends to infinity at\ninfinity. TODO: use `bornology.cobounded` instead of `filter.comap has_norm.norm filter.at_top`. -/\ntheorem filter.tendsto_mul_right_cobounded {a : α} (ha : a ≠ 0) :\n    tendsto (fun x => x * a) (comap norm at_top) (comap norm at_top) := by\n  simpa only [tendsto_comap_iff, (· ∘ ·), norm_mul] using\n    tendsto_comap.at_top_mul (norm_pos_iff.2 ha) tendsto_const_nhds\n#align filter.tendsto_mul_right_cobounded filter.tendsto_mul_right_cobounded\n\n",
 "tendsto_mul_left_cobounded":
 "/-- Multiplication on the left by a nonzero element of a normed division ring tends to infinity at\ninfinity. TODO: use `bornology.cobounded` instead of `filter.comap has_norm.norm filter.at_top`. -/\ntheorem filter.tendsto_mul_left_cobounded {a : α} (ha : a ≠ 0) :\n    tendsto ((· * ·) a) (comap norm at_top) (comap norm at_top) := by\n  simpa only [tendsto_comap_iff, (· ∘ ·), norm_mul] using\n    tendsto_const_nhds.mul_at_top (norm_pos_iff.2 ha) tendsto_comap\n#align filter.tendsto_mul_left_cobounded filter.tendsto_mul_left_cobounded\n\n",
 "tendsto_at_top'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- A variant of `normed_add_comm_group.tendsto_at_top` that\nuses `∃ N, ∀ n > N, ...` rather than `∃ N, ∀ n ≥ N, ...`\n-/\ntheorem normed_add_comm_group.tendsto_at_top' [nonempty α] [SemilatticeSup α] [NoMaxOrder α] {β : Type _}\n    [seminormed_add_comm_group β] {f : α → β} {b : β} :\n    tendsto f at_top ((nhds) b) ↔ ∀ ε, 0 < ε → ∃ N, ∀ n, N < n → «expr‖ ‖» (f n - b) < ε :=\n  (at_top_basis_Ioi.tendsto_iff metric.nhds_basis_ball).trans (by simp [dist_eq_norm])\n#align normed_add_comm_group.tendsto_at_top' normed_add_comm_group.tendsto_at_top'\n\n",
 "tendsto_at_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- A restatement of `metric_space.tendsto_at_top` in terms of the norm. -/\ntheorem normed_add_comm_group.tendsto_at_top [nonempty α] [SemilatticeSup α] {β : Type _} [seminormed_add_comm_group β]\n    {f : α → β} {b : β} : tendsto f at_top ((nhds) b) ↔ ∀ ε, 0 < ε → ∃ N, ∀ n, N ≤ n → «expr‖ ‖» (f n - b) < ε :=\n  (at_top_basis.tendsto_iff metric.nhds_basis_ball).trans (by simp [dist_eq_norm])\n#align normed_add_comm_group.tendsto_at_top normed_add_comm_group.tendsto_at_top\n\n",
 "punctured_nhds_ne_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n@[instance]\ntheorem punctured_nhds_ne_bot (x : α) : ne_bot (nhds_within.ne x) :=\n  by\n  rw [← mem_closure_iff_nhds_within_ne_bot, metric.mem_closure_iff]\n  rintro ε ε0\n  rcases exists_norm_lt α ε0 with ⟨b, hb0, hbε⟩\n  refine' ⟨x + b, mt (set.mem_singleton_iff.trans add_right_eq_self).1 <| norm_pos_iff.1 hb0, _⟩\n  rwa [dist_comm, dist_eq_norm, add_sub_cancel']\n#align punctured_nhds_ne_bot punctured_nhds_ne_bot\n\n",
 "one_le_norm_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem one_le_norm_one (β) [normed_ring β] [nontrivial β] : 1 ≤ «expr‖ ‖» (1 : β) :=\n  (le_mul_iff_one_le_left <| norm_pos_iff.mpr (one_ne_zero : (1 : β) ≠ 0)).mp\n    (by simpa only [mul_one] using norm_mul_le (1 : β) 1)\n#align one_le_norm_one one_le_norm_one\n\n",
 "one_le_nnnorm_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem one_le_nnnorm_one (β) [normed_ring β] [nontrivial β] : 1 ≤ «expr‖ ‖₊» (1 : β) :=\n  one_le_norm_one β\n#align one_le_nnnorm_one one_le_nnnorm_one\n\n",
 "norm_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →*₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_zpow : ∀ (a : α) (n : ℤ), «expr‖ ‖» (a ^ n) = «expr‖ ‖» a ^ n :=\n  map_zpow₀ (norm_hom : «expr →*₀ » α (exprℝ))\n#align norm_zpow norm_zpow\n\n",
 "norm_prod_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem finset.norm_prod_le' {α : Type _} [normed_comm_ring α] (s : Finset ι) (hs : s.nonempty) (f : ι → α) :\n    «expr‖ ‖»\n        (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i)) ≤\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s\n        («expr‖ ‖» (f i)) :=\n  by\n  rcases s with ⟨⟨l⟩, hl⟩\n  have : l.map f ≠ [] := by simpa using hs\n  simpa using list.norm_prod_le' this\n#align finset.norm_prod_le' finset.norm_prod_le'\n\n",
 "norm_prod_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem finset.norm_prod_le {α : Type _} [normed_comm_ring α] [norm_one_class α] (s : Finset ι) (f : ι → α) :\n    «expr‖ ‖»\n        (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i)) ≤\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s\n        («expr‖ ‖» (f i)) :=\n  by\n  rcases s with ⟨⟨l⟩, hl⟩\n  simpa using (l.map f).norm_prod_le\n#align finset.norm_prod_le finset.norm_prod_le\n\n",
 "norm_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n@[simp]\ntheorem norm_prod (s : Finset β) (f : β → α) :\n    «expr‖ ‖»\n        (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f b)) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s\n        («expr‖ ‖» (f b)) :=\n  (norm_hom.to_monoid_hom : «expr →* » α (exprℝ)).map_prod f s\n#align norm_prod norm_prod\n\n",
 "norm_pow_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If `α` is a seminormed ring, then `‖a ^ n‖ ≤ ‖a‖ ^ n` for `n > 0`. See also `norm_pow_le`. -/\ntheorem norm_pow_le' (a : α) {n : ℕ} (h : 0 < n) : «expr‖ ‖» (a ^ n) ≤ «expr‖ ‖» a ^ n := by\n  simpa only [nnreal.coe_pow, coe_nnnorm] using nnreal.coe_mono (nnnorm_pow_le' a h)\n#align norm_pow_le' norm_pow_le'\n\n",
 "norm_pow_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- If `α` is a seminormed ring with `‖1‖ = 1`, then `‖a ^ n‖ ≤ ‖a‖ ^ n`. See also `norm_pow_le'`.-/\ntheorem norm_pow_le [norm_one_class α] (a : α) (n : ℕ) : «expr‖ ‖» (a ^ n) ≤ «expr‖ ‖» a ^ n :=\n  nat.rec_on n (by simp only [pow_zero, norm_one]) fun n hn => norm_pow_le' a n.succ_pos\n#align norm_pow_le norm_pow_le\n\n",
 "norm_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_pow (a : α) : ∀ n : ℕ, «expr‖ ‖» (a ^ n) = «expr‖ ‖» a ^ n :=\n  (norm_hom.to_monoid_hom : «expr →* » α (exprℝ)).map_pow a\n#align norm_pow norm_pow\n\n",
 "norm_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem units.norm_pos [nontrivial α] (x : «expr ˣ» α) : 0 < «expr‖ ‖» (x : α) :=\n  norm_pos_iff.mpr (Units.ne_zero x)\n#align units.norm_pos units.norm_pos\n\n",
 "norm_one_of_pow_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ+» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem norm_one_of_pow_eq_one {x : α} {k : «exprℕ+»} (h : x ^ (k : ℕ) = 1) : «expr‖ ‖» x = 1 :=\n  norm_map_one_of_pow_eq_one (MonoidHom.id α) h\n#align norm_one_of_pow_eq_one norm_one_of_pow_eq_one\n\n",
 "norm_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_norm [seminormed_add_comm_group α] (x : α) : «expr‖ ‖» («expr‖ ‖» x) = «expr‖ ‖» x :=\n  real.norm_of_nonneg (norm_nonneg _)\n#align norm_norm norm_norm\n\n",
 "norm_mul_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\ntheorem norm_mul_le (a b : α) : «expr‖ ‖» (a * b) ≤ «expr‖ ‖» a * «expr‖ ‖» b :=\n  non_unital_semi_normed_ring.norm_mul _ _\n#align norm_mul_le norm_mul_le\n\n",
 "norm_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n@[simp]\ntheorem norm_mul (a b : α) : «expr‖ ‖» (a * b) = «expr‖ ‖» a * «expr‖ ‖» b :=\n  normed_division_ring.norm_mul' a b\n#align norm_mul norm_mul\n\n",
 "norm_map_one_of_pow_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ+» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- see Note [lower instance priority]\ntheorem norm_map_one_of_pow_eq_one [monoid β] (φ : «expr →* » β α) {x : β} {k : «exprℕ+»} (h : x ^ (k : ℕ) = 1) :\n    «expr‖ ‖» (φ x) = 1 :=\n  by\n  rw [← pow_left_inj, ← norm_pow, ← map_pow, h, map_one, norm_one, one_pow]\n  exacts[norm_nonneg _, zero_le_one, k.pos]\n#align norm_map_one_of_pow_eq_one norm_map_one_of_pow_eq_one\n\n",
 "norm_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →*₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_inv (a : α) : «expr‖ ‖» a⁻¹ = («expr‖ ‖» a)⁻¹ :=\n  map_inv₀ (norm_hom : «expr →*₀ » α (exprℝ)) a\n#align norm_inv norm_inv\n\n",
 "norm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem norm_eq (x : nnreal) : «expr‖ ‖» (x : exprℝ) = x := by rw [real.norm_eq_abs, x.abs_eq]\n#align norm_eq norm_eq\n\n",
 "norm_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →*₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n@[simp]\ntheorem norm_div (a b : α) : «expr‖ ‖» (a / b) = «expr‖ ‖» a / «expr‖ ‖» b :=\n  map_div₀ (norm_hom : «expr →*₀ » α (exprℝ)) a b\n#align norm_div norm_div\n\n",
 "norm_cast_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem nat.norm_cast_le : ∀ n : ℕ, «expr‖ ‖» (n : α) ≤ n * «expr‖ ‖» (1 : α)\n  | 0 => by simp\n  | n + 1 => by\n    rw [n.cast_succ, n.cast_succ, add_mul, one_mul]\n    exact norm_add_le_of_le (nat.norm_cast_le n) le_rfl\n#align nat.norm_cast_le nat.norm_cast_le\n\n",
 "nontrivial":
 "theorem norm_one_class.nontrivial (α : Type _) [seminormed_add_comm_group α] [One α] [norm_one_class α] :\n    nontrivial α :=\n  nontrivial_of_ne 0 1 <| ne_of_apply_ne norm <| by simp\n#align norm_one_class.nontrivial norm_one_class.nontrivial\n\n",
 "nnnorm_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →*₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_zpow : ∀ (a : α) (n : ℤ), «expr‖ ‖₊» (a ^ n) = «expr‖ ‖₊» a ^ n :=\n  map_zpow₀ (nnnorm_hom : «expr →*₀ » α (nnreal))\n#align nnnorm_zpow nnnorm_zpow\n\n",
 "nnnorm_prod_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem finset.nnnorm_prod_le' {α : Type _} [normed_comm_ring α] (s : Finset ι) (hs : s.nonempty) (f : ι → α) :\n    «expr‖ ‖₊»\n        (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i)) ≤\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s\n        («expr‖ ‖₊» (f i)) :=\n  (s.norm_prod_le' hs f).trans_eq <| by simp [nnreal.coe_prod]\n#align finset.nnnorm_prod_le' finset.nnnorm_prod_le'\n\n",
 "nnnorm_prod_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem finset.nnnorm_prod_le {α : Type _} [normed_comm_ring α] [norm_one_class α] (s : Finset ι) (f : ι → α) :\n    «expr‖ ‖₊»\n        (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i)) ≤\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s\n        («expr‖ ‖₊» (f i)) :=\n  (s.norm_prod_le f).trans_eq <| by simp [nnreal.coe_prod]\n#align finset.nnnorm_prod_le finset.nnnorm_prod_le\n\n",
 "nnnorm_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_prod (s : Finset β) (f : β → α) :\n    «expr‖ ‖₊»\n        (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f b)) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s\n        («expr‖ ‖₊» (f b)) :=\n  (nnnorm_hom.to_monoid_hom : «expr →* » α (nnreal)).map_prod f s\n#align nnnorm_prod nnnorm_prod\n\n",
 "nnnorm_pow_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/-- If `α` is a seminormed ring, then `‖a ^ n‖₊ ≤ ‖a‖₊ ^ n` for `n > 0`.\nSee also `nnnorm_pow_le`. -/\ntheorem nnnorm_pow_le' (a : α) : ∀ {n : ℕ}, 0 < n → «expr‖ ‖₊» (a ^ n) ≤ «expr‖ ‖₊» a ^ n\n  | 1, h => by simp only [pow_one]\n  | n + 2, h => by\n    simpa only [pow_succ _ (n + 1)] using le_trans (nnnorm_mul_le _ _) (mul_le_mul_left' (nnnorm_pow_le' n.succ_pos) _)\n#align nnnorm_pow_le' nnnorm_pow_le'\n\n",
 "nnnorm_pow_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/-- If `α` is a seminormed ring with `‖1‖₊ = 1`, then `‖a ^ n‖₊ ≤ ‖a‖₊ ^ n`.\nSee also `nnnorm_pow_le'`.-/\ntheorem nnnorm_pow_le [norm_one_class α] (a : α) (n : ℕ) : «expr‖ ‖₊» (a ^ n) ≤ «expr‖ ‖₊» a ^ n :=\n  nat.rec_on n (by simp only [pow_zero, nnnorm_one]) fun k hk => nnnorm_pow_le' a k.succ_pos\n#align nnnorm_pow_le nnnorm_pow_le\n\n",
 "nnnorm_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_pow (a : α) (n : ℕ) : «expr‖ ‖₊» (a ^ n) = «expr‖ ‖₊» a ^ n :=\n  (nnnorm_hom.to_monoid_hom : «expr →* » α (nnreal)).map_pow a n\n#align nnnorm_pow nnnorm_pow\n\n",
 "nnnorm_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem units.nnnorm_pos [nontrivial α] (x : «expr ˣ» α) : 0 < «expr‖ ‖₊» (x : α) :=\n  x.norm_pos\n#align units.nnnorm_pos units.nnnorm_pos\n\n",
 "nnnorm_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/-\nCopyright (c) 2018 Patrick Massot. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Patrick Massot, Johannes Hölzl\n-/\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n@[simp]\ntheorem nnnorm_one [seminormed_add_comm_group α] [One α] [norm_one_class α] : «expr‖ ‖₊» (1 : α) = 1 :=\n  nnreal.eq norm_one\n#align nnnorm_one nnnorm_one\n\n",
 "nnnorm_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_norm [seminormed_add_comm_group α] (a : α) : «expr‖ ‖₊» («expr‖ ‖» a) = «expr‖ ‖₊» a := by\n  simpa [real.nnnorm_of_nonneg (norm_nonneg a)]\n#align nnnorm_norm nnnorm_norm\n\n",
 "nnnorm_mul_to_nnreal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_mul_to_nnreal (x : exprℝ) {y : exprℝ} (hy : 0 ≤ y) : «expr‖ ‖₊» x * y.to_nnreal = «expr‖ ‖₊» (x * y) :=\n  by simp [real.to_nnreal_of_nonneg, nnnorm, norm_of_nonneg, hy]\n#align nnnorm_mul_to_nnreal nnnorm_mul_to_nnreal\n\n",
 "nnnorm_mul_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem nnnorm_mul_le (a b : α) : «expr‖ ‖₊» (a * b) ≤ «expr‖ ‖₊» a * «expr‖ ‖₊» b := by\n  simpa only [← norm_to_nnreal, ← real.to_nnreal_mul (norm_nonneg _)] using real.to_nnreal_mono (norm_mul_le _ _)\n#align nnnorm_mul_le nnnorm_mul_le\n\n",
 "nnnorm_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_mul (a b : α) : «expr‖ ‖₊» (a * b) = «expr‖ ‖₊» a * «expr‖ ‖₊» b :=\n  nnreal.eq <| norm_mul a b\n#align nnnorm_mul nnnorm_mul\n\n",
 "nnnorm_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_inv (a : α) : «expr‖ ‖₊» a⁻¹ = («expr‖ ‖₊» a)⁻¹ :=\n  nnreal.eq <| by simp\n#align nnnorm_inv nnnorm_inv\n\n",
 "nnnorm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem nnnorm_eq (x : nnreal) : «expr‖ ‖₊» (x : exprℝ) = x :=\n  nnreal.eq <| real.norm_of_nonneg x.2\n#align nnnorm_eq nnnorm_eq\n\n",
 "nnnorm_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →*₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n@[simp]\ntheorem nnnorm_div (a b : α) : «expr‖ ‖₊» (a / b) = «expr‖ ‖₊» a / «expr‖ ‖₊» b :=\n  map_div₀ (nnnorm_hom : «expr →*₀ » α (nnreal)) a b\n#align nnnorm_div nnnorm_div\n\n",
 "nhds_within_is_unit_ne_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n@[instance]\ntheorem nhds_within_is_unit_ne_bot : ne_bot (nhds_within { x : α | is_unit x } 0) := by\n  simpa only [isUnit_iff_ne_zero] using punctured_nhds_ne_bot (0 : α)\n#align nhds_within_is_unit_ne_bot nhds_within_is_unit_ne_bot\n\n",
 "mul_tendsto_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem filter.is_bounded_under_le.mul_tendsto_zero {f g : ι → α} {l : filter ι}\n    (hf : is_bounded_under (· ≤ ·) l (norm ∘ f)) (hg : tendsto g l ((nhds) 0)) :\n    tendsto (fun x => f x * g x) l ((nhds) 0) :=\n  hg.op_zero_is_bounded_under_le hf (flip (· * ·)) fun x y => (norm_mul_le y x).trans_eq (mul_comm _ _)\n#align filter.is_bounded_under_le.mul_tendsto_zero filter.is_bounded_under_le.mul_tendsto_zero\n\n",
 "mul_right_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- In a seminormed ring, the right-multiplication `add_monoid_hom` is bounded. -/\ntheorem mul_right_bound (x : α) : ∀ y : α, «expr‖ ‖» (AddMonoidHom.mulRight x y) ≤ «expr‖ ‖» x * «expr‖ ‖» y := fun y =>\n  by\n  rw [mul_comm]\n  convert norm_mul_le y x\n#align mul_right_bound mul_right_bound\n\n",
 "mul_left_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- In a seminormed ring, the left-multiplication `add_monoid_hom` is bounded. -/\ntheorem mul_left_bound (x : α) : ∀ y : α, «expr‖ ‖» (AddMonoidHom.mulLeft x y) ≤ «expr‖ ‖» x * «expr‖ ‖» y :=\n  norm_mul_le x\n#align mul_left_bound mul_left_bound\n\n",
 "induced":
 "/-- A ring homomorphism from a `ring R` to a `semi_normed_ring S` which induces the norm structure\n`semi_normed_ring.induced` makes `R` satisfy `‖(1 : R)‖ = 1` whenever `‖(1 : S)‖ = 1`. -/\ntheorem norm_one_class.induced {F : Type _} (R S : Type _) [Ring R] [semi_normed_ring S] [norm_one_class S]\n    [RingHomClass F R S] (f : F) : @norm_one_class R (semi_normed_ring.induced R S f).to_has_norm _ :=\n  { norm_one := (congr_arg norm (map_one f)).trans norm_one }\n#align norm_one_class.induced norm_one_class.induced\n\n",
 "exists_one_lt_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem exists_one_lt_norm : ∃ x : α, 1 < «expr‖ ‖» x :=\n  ‹nontrivially_normed_field α›.non_trivial\n#align exists_one_lt_norm exists_one_lt_norm\n\n",
 "exists_norm_lt_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem exists_norm_lt_one : ∃ x : α, 0 < «expr‖ ‖» x ∧ «expr‖ ‖» x < 1 :=\n  exists_norm_lt α one_pos\n#align exists_norm_lt_one exists_norm_lt_one\n\n",
 "exists_norm_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem exists_norm_lt {r : exprℝ} (hr : 0 < r) : ∃ x : α, 0 < «expr‖ ‖» x ∧ «expr‖ ‖» x < r :=\n  let ⟨w, hw⟩ := exists_lt_norm α r⁻¹\n  ⟨w⁻¹, by rwa [← Set.mem_Ioo, norm_inv, ← Set.mem_inv, set.inv_Ioo_0_left hr]⟩\n#align exists_norm_lt exists_norm_lt\n\n",
 "exists_lt_norm_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem exists_lt_norm_lt {r₁ r₂ : exprℝ} (h₀ : 0 ≤ r₁) (h : r₁ < r₂) : ∃ x : α, r₁ < «expr‖ ‖» x ∧ «expr‖ ‖» x < r₂ :=\n  densely_normed_field.lt_norm_lt r₁ r₂ h₀ h\n#align exists_lt_norm_lt exists_lt_norm_lt\n\n",
 "exists_lt_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem exists_lt_norm (r : exprℝ) : ∃ x : α, r < «expr‖ ‖» x :=\n  let ⟨w, hw⟩ := exists_one_lt_norm α\n  let ⟨n, hn⟩ := pow_unbounded_of_one_lt r hw\n  ⟨w ^ n, by rwa [norm_pow]⟩\n#align exists_lt_norm exists_lt_norm\n\n",
 "exists_lt_nnnorm_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\ntheorem exists_lt_nnnorm_lt {r₁ r₂ : nnreal} (h : r₁ < r₂) : ∃ x : α, r₁ < «expr‖ ‖₊» x ∧ «expr‖ ‖₊» x < r₂ := by\n  exact_mod_cast exists_lt_norm_lt α r₁.prop h\n#align exists_lt_nnnorm_lt exists_lt_nnnorm_lt\n\n",
 "eventually_norm_pow_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem eventually_norm_pow_le (a : α) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" at_top\n      («expr‖ ‖» (a ^ n) ≤ «expr‖ ‖» a ^ n) :=\n  eventually_at_top.mpr ⟨1, fun b h => norm_pow_le' a (Nat.succ_le_iff.mp h)⟩\n#align eventually_norm_pow_le eventually_norm_pow_le\n\n",
 "dense_range_nnnorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\ntheorem dense_range_nnnorm : dense_range (nnnorm : α → nnreal) :=\n  dense_of_exists_between fun _ _ hr =>\n    let ⟨x, h⟩ := exists_lt_nnnorm_lt α hr\n    ⟨«expr‖ ‖₊» x, ⟨x, rfl⟩, h⟩\n#align dense_range_nnnorm dense_range_nnnorm\n\n"}