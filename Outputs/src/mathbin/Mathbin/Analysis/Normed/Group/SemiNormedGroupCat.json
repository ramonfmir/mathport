{"zero_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem zero_apply {V W : SemiNormedGroup₁} (x : V) : (0 : «expr ⟶ » V W) x = 0 :=\n  rfl\n#align zero_apply zero_apply\n\n",
 "mk_hom_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem mk_hom_apply {M N : SemiNormedGroup} (f : «expr ⟶ » M N) (i : f.norm_noninc) (x) : mk_hom f i x = f x :=\n  rfl\n#align mk_hom_apply mk_hom_apply\n\n",
 "iso_isometry_of_norm_noninc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem iso_isometry_of_norm_noninc {V W : SemiNormedGroup} (i : «expr ≅ » V W) (h1 : i.hom.norm_noninc)\n    (h2 : i.inv.norm_noninc) : isometry i.hom :=\n  by\n  apply add_monoid_hom_class.isometry_of_norm\n  intro v\n  apply le_antisymm (h1 v)\n  calc\n    «expr‖ ‖» v = «expr‖ ‖» (i.inv (i.hom v)) := by rw [iso.hom_inv_id_apply]\n    _ ≤ «expr‖ ‖» (i.hom v) := h2 _\n    \n#align iso_isometry_of_norm_noninc iso_isometry_of_norm_noninc\n\n",
 "iso_isometry":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem iso_isometry {V W : SemiNormedGroup₁} (i : «expr ≅ » V W) : isometry i.hom :=\n  by\n  change isometry (i.hom : «expr →+ » V W)\n  refine' add_monoid_hom_class.isometry_of_norm i.hom _\n  intro v\n  apply le_antisymm (i.hom.2 v)\n  calc\n    «expr‖ ‖» v = «expr‖ ‖» (i.inv (i.hom v)) := by rw [iso.hom_inv_id_apply]\n    _ ≤ «expr‖ ‖» (i.hom v) := i.inv.2 _\n    \n#align iso_isometry iso_isometry\n\n",
 "is_zero_of_subsingleton":
 "theorem is_zero_of_subsingleton (V : SemiNormedGroup₁) [subsingleton V] : limits.is_zero V :=\n  by\n  refine' ⟨fun X => ⟨⟨⟨0⟩, fun f => _⟩⟩, fun X => ⟨⟨⟨0⟩, fun f => _⟩⟩⟩\n  · ext\n    have : x = 0 := subsingleton.elim _ _\n    simp only [this, map_zero]\n    exact map_zero f.1\n  · ext\n    apply subsingleton.elim\n#align is_zero_of_subsingleton is_zero_of_subsingleton\n\n",
 "hom_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[ext]\ntheorem hom_ext {M N : SemiNormedGroup₁} (f g : «expr ⟶ » M N) (w : (f : M → N) = (g : M → N)) : f = g :=\n  subtype.eq (normed_add_group_hom.ext (congr_fun w))\n#align hom_ext hom_ext\n\n",
 "coe_of":
 "@[simp]\ntheorem coe_of (V : Type u) [seminormed_add_comm_group V] : (SemiNormedGroup₁.of V : Type u) = V :=\n  rfl\n#align coe_of coe_of\n\n",
 "coe_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem coe_id (V : SemiNormedGroup₁) : «expr⇑ » ((«expr𝟙») V) = id :=\n  rfl\n#align coe_id coe_id\n\n",
 "coe_comp'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- If `coe_fn_coe_base` fires before `coe_comp`, `coe_comp'` puts us back in normal form.\n@[simp]\ntheorem coe_comp' {M N K : SemiNormedGroup₁} (f : «expr ⟶ » M N) (g : «expr ⟶ » N K) :\n    («expr ≫ » f g : normed_add_group_hom M K) = (↑g : normed_add_group_hom N K).comp ↑f :=\n  rfl\n#align coe_comp' coe_comp'\n\n",
 "coe_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem coe_comp {M N K : SemiNormedGroup₁} (f : «expr ⟶ » M N) (g : «expr ⟶ » N K) : («expr ≫ » f g : M → K) = g ∘ f :=\n  rfl\n#align coe_comp coe_comp\n\n"}