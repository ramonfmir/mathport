{"zero_comp":
 "@[simp, to_additive]\ntheorem zero_comp : (0 : group_seminorm E).comp f = 0 :=\n  ext fun _ => rfl\n#align zero_comp zero_comp\n\n",
 "zero_apply":
 "@[simp]\ntheorem zero_apply (x : E) : (0 : nonarch_add_group_seminorm E) x = 0 :=\n  rfl\n#align zero_apply zero_apply\n\n",
 "to_fun_eq_coe":
 "@[simp]\ntheorem to_fun_eq_coe : p.to_fun = p :=\n  rfl\n#align to_fun_eq_coe to_fun_eq_coe\n\n",
 "sup_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem sup_apply (x : E) : («expr ⊔ » p q) x = «expr ⊔ » (p x) (q x) :=\n  rfl\n#align sup_apply sup_apply\n\n",
 "smul_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_sup (r : R) (p q : nonarch_add_group_seminorm E) :\n    «expr • » r («expr ⊔ » p q) = «expr ⊔ » («expr • » r p) («expr • » r q) :=\n  have real.smul_max : ∀ x y : exprℝ, «expr • » r (max x y) = max («expr • » r x) («expr • » r y) := fun x y => by\n    simpa only [← smul_eq_mul, ← nnreal.smul_def, smul_one_smul (nnreal) r (_ : exprℝ)] using\n      mul_max_of_nonneg x y («expr • » r 1 : nnreal).prop\n  ext fun x => real.smul_max _ _\n#align smul_sup smul_sup\n\n",
 "smul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_apply (r : R) (p : nonarch_add_group_seminorm E) (x : E) : («expr • » r p) x = «expr • » r (p x) :=\n  rfl\n#align smul_apply smul_apply\n\n",
 "mul_bdd_below_range_add":
 "@[to_additive]\ntheorem mul_bdd_below_range_add {p q : group_seminorm E} {x : E} : BddBelow (range fun y => p y + q (x / y)) :=\n  ⟨0, by\n    rintro _ ⟨x, rfl⟩\n    dsimp\n    positivity⟩\n#align mul_bdd_below_range_add mul_bdd_below_range_add\n\n",
 "map_sub_le_max":
 "/-\nCopyright (c) 2022 María Inés de Frutos-Fernández, Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: María Inés de Frutos-Fernández, Yaël Dillies\n-/\ntheorem map_sub_le_max : f (x - y) ≤ max (f x) (f y) :=\n  by\n  rw [sub_eq_add_neg, ← nonarch_add_group_seminorm_class.map_neg_eq_map' f y]\n  exact map_add_le_max _ _ _\n#align map_sub_le_max map_sub_le_max\n\n",
 "lt_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem lt_def : p < q ↔ (p : E → exprℝ) < q :=\n  iff.rfl\n#align lt_def lt_def\n\n",
 "le_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem le_def : p ≤ q ↔ (p : E → exprℝ) ≤ q :=\n  iff.rfl\n#align le_def le_def\n\n",
 "inf_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp, to_additive]\ntheorem inf_apply :\n    («expr ⊓ » p q) x =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (p y + q (x / y)) :=\n  rfl\n#align inf_apply inf_apply\n\n",
 "ext":
 "@[ext]\ntheorem ext : (∀ x, p x = q x) → p = q :=\n  fun_like.ext p q\n#align ext ext\n\n",
 "comp_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[simp, to_additive]\ntheorem comp_zero : p.comp (1 : «expr →* » F E) = 0 :=\n  ext fun _ => map_one_eq_zero p\n#align comp_zero comp_zero\n\n",
 "comp_mul_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[to_additive]\ntheorem comp_mul_le (f g : «expr →* » F E) : p.comp (f * g) ≤ p.comp f + p.comp g := fun _ => map_mul_le_add p _ _\n#align comp_mul_le comp_mul_le\n\n",
 "comp_mono":
 "@[to_additive]\ntheorem comp_mono (hp : p ≤ q) : p.comp f ≤ q.comp f := fun _ => hp _\n#align comp_mono comp_mono\n\n",
 "comp_id":
 "@[simp, to_additive]\ntheorem comp_id : p.comp (MonoidHom.id _) = p :=\n  ext fun _ => rfl\n#align comp_id comp_id\n\n",
 "comp_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[to_additive]\ntheorem comp_assoc (g : «expr →* » F E) (f : «expr →* » G F) : p.comp (g.comp f) = (p.comp g).comp f :=\n  ext fun _ => rfl\n#align comp_assoc comp_assoc\n\n",
 "comp_apply":
 "@[simp, to_additive]\ntheorem comp_apply (x : F) : (p.comp f) x = p (f x) :=\n  rfl\n#align comp_apply comp_apply\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp, norm_cast]\ntheorem coe_zero : «expr⇑ » (0 : nonarch_add_group_seminorm E) = 0 :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp, norm_cast]\ntheorem coe_sup : «expr⇑ » («expr ⊔ » p q) = «expr ⊔ » p q :=\n  rfl\n#align coe_sup coe_sup\n\n",
 "coe_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, norm_cast]\ntheorem coe_smul (r : R) (p : nonarch_add_group_seminorm E) : «expr⇑ » («expr • » r p) = «expr • » r p :=\n  rfl\n#align coe_smul coe_smul\n\n",
 "coe_lt_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp, norm_cast]\ntheorem coe_lt_coe : (p : E → exprℝ) < q ↔ p < q :=\n  iff.rfl\n#align coe_lt_coe coe_lt_coe\n\n",
 "coe_le_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp, norm_cast]\ntheorem coe_le_coe : (p : E → exprℝ) ≤ q ↔ p ≤ q :=\n  iff.rfl\n#align coe_le_coe coe_le_coe\n\n",
 "coe_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp, to_additive]\ntheorem coe_comp : «expr⇑ » (p.comp f) = p ∘ f :=\n  rfl\n#align coe_comp coe_comp\n\n",
 "coe_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp, to_additive]\ntheorem coe_add : «expr⇑ » (p + q) = p + q :=\n  rfl\n#align coe_add coe_add\n\n",
 "apply_one":
 "@[simp]\ntheorem apply_one [decidable_eq E] (x : E) : (1 : nonarch_add_group_norm E) x = if x = 0 then 0 else 1 :=\n  rfl\n#align apply_one apply_one\n\n",
 "add_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[to_additive]\ntheorem add_comp (f : «expr →* » F E) : (p + q).comp f = p.comp f + q.comp f :=\n  ext fun _ => rfl\n#align add_comp add_comp\n\n",
 "add_bdd_below_range_add":
 "theorem add_bdd_below_range_add {p q : nonarch_add_group_seminorm E} {x : E} :\n    BddBelow (range fun y => p y + q (x - y)) :=\n  ⟨0, by\n    rintro _ ⟨x, rfl⟩\n    dsimp\n    positivity⟩\n#align add_bdd_below_range_add add_bdd_below_range_add\n\n",
 "add_apply":
 "@[simp, to_additive]\ntheorem add_apply (x : E) : (p + q) x = p x + q x :=\n  rfl\n#align add_apply add_apply\n\n"}