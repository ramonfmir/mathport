{"controlled_closure_range_of_complete":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-- Given `f : normed_add_group_hom G H` for some complete `G`, if every element `x` of the image of\nan isometric immersion `j : normed_add_group_hom K H` has a preimage under `f` whose norm is at most\n`C*‖x‖` then the same holds for elements of the (topological) closure of this image with constant\n`C+ε` instead of `C`, for any positive `ε`.\nThis is useful in particular if `j` is the inclusion of a normed group into its completion\n(in this case the closure is the full target group).\n-/\ntheorem controlled_closure_range_of_complete {f : normed_add_group_hom G H} {K : Type _} [seminormed_add_comm_group K]\n    {j : normed_add_group_hom K H} (hj : ∀ x, «expr‖ ‖» (j x) = «expr‖ ‖» x) {C ε : exprℝ} (hC : 0 < C) (hε : 0 < ε)\n    (hyp : ∀ k, ∃ g, f g = j k ∧ «expr‖ ‖» g ≤ C * «expr‖ ‖» k) :\n    f.surjective_on_with j.range.topological_closure (C + ε) :=\n  by\n  replace hyp : ∀ h ∈ j.range, ∃ g, f g = h ∧ «expr‖ ‖» g ≤ C * «expr‖ ‖» h\n  · intro h h_in\n    rcases(j.mem_range _).mp h_in with ⟨k, rfl⟩\n    rw [hj]\n    exact hyp k\n  exact controlled_closure_of_complete hC hε hyp\n#align controlled_closure_range_of_complete controlled_closure_range_of_complete\n\n",
 "controlled_closure_of_complete":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2021 Patrick Massot. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Patrick Massot\n-/\n/-- Given `f : normed_add_group_hom G H` for some complete `G` and a subgroup `K` of `H`, if every\nelement `x` of `K` has a preimage under `f` whose norm is at most `C*‖x‖` then the same holds for\nelements of the (topological) closure of `K` with constant `C+ε` instead of `C`, for any\npositive `ε`.\n-/\ntheorem controlled_closure_of_complete {f : normed_add_group_hom G H} {K : add_subgroup H} {C ε : exprℝ} (hC : 0 < C)\n    (hε : 0 < ε) (hyp : f.surjective_on_with K C) : f.surjective_on_with K.topological_closure (C + ε) :=\n  by\n  rintro (h : H) (h_in : h ∈ K.topological_closure)\n  -- We first get rid of the easy case where `h = 0`.\n  by_cases hyp_h : h = 0\n  · rw [hyp_h]\n    use 0\n    simp\n  /- The desired preimage will be constructed as the sum of a series. Convergence of\n    the series will be guaranteed by completeness of `G`. We first write `h` as the sum\n    of a sequence `v` of elements of `K` which starts close to `h` and then quickly goes to zero.\n    The sequence `b` below quantifies this. -/\n  set b : ℕ → exprℝ := fun i => (1 / 2) ^ i * (ε * «expr‖ ‖» h / 2) / C\n  have b_pos : ∀ i, 0 < b i := by\n    intro i\n    field_simp [b, hC]\n    exact div_pos (mul_pos hε (norm_pos_iff.mpr hyp_h)) (mul_pos (by norm_num : (0 : exprℝ) < 2 ^ i * 2) hC)\n  obtain\n    ⟨v : ℕ → H, lim_v :\n      tendsto\n        (fun n : ℕ =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (range (n + 1)) (v k))\n        at_top ((nhds) h),\n      v_in : ∀ n, v n ∈ K, hv₀ : «expr‖ ‖» (v 0 - h) < b 0, hv : ∀ n > 0, «expr‖ ‖» (v n) < b n⟩ :=\n    controlled_sum_of_mem_closure h_in b_pos\n  /- The controlled surjectivity assumption on `f` allows to build preimages `u n` for all\n    elements `v n` of the `v` sequence.-/\n  have : ∀ n, ∃ m' : G, f m' = v n ∧ «expr‖ ‖» m' ≤ C * «expr‖ ‖» (v n) := fun n : ℕ => hyp (v n) (v_in n)\n  choose u hu hnorm_u using this\n  /- The desired series `s` is then obtained by summing `u`. We then check our choice of\n    `b` ensures `s` is Cauchy. -/\n  set s : ℕ → G := fun n =>\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (n + 1))\n      (u k)\n  have : cauchy_seq s :=\n    by\n    apply normed_add_comm_group.cauchy_series_of_le_geometric'' (by norm_num) one_half_lt_one\n    rintro n (hn : n ≥ 1)\n    calc\n      «expr‖ ‖» (u n) ≤ C * «expr‖ ‖» (v n) := hnorm_u n\n      _ ≤ C * b n := mul_le_mul_of_nonneg_left (hv _ <| nat.succ_le_iff.mp hn).le hC.le\n      _ = (1 / 2) ^ n * (ε * «expr‖ ‖» h / 2) := by simp [b, mul_div_cancel' _ hC.ne.symm]\n      _ = ε * «expr‖ ‖» h / 2 * (1 / 2) ^ n := mul_comm _ _\n      \n  -- We now show that the limit `g` of `s` is the desired preimage.\n  obtain ⟨g : G, hg⟩ := cauchy_seq_tendsto_of_complete this\n  refine' ⟨g, _, _⟩\n  · -- We indeed get a preimage. First note:\n    have :\n      f ∘ s = fun n =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (n + 1))\n          (v k) :=\n      by\n      ext n\n      simp [map_sum, hu]\n    /- In the above equality, the left-hand-side converges to `f g` by continuity of `f` and\n           definition of `g` while the right-hand-side converges to `h` by construction of `v` so\n           `g` is indeed a preimage of `h`. -/\n    rw [← this] at lim_v\n    exact tendsto_nhds_unique ((f.continuous.tendsto g).comp hg) lim_v\n  · -- Then we need to estimate the norm of `g`, using our careful choice of `b`.\n    suffices : ∀ n, «expr‖ ‖» (s n) ≤ (C + ε) * «expr‖ ‖» h\n    exact le_of_tendsto' (continuous_norm.continuous_at.tendsto.comp hg) this\n    intro n\n    have hnorm₀ : «expr‖ ‖» (u 0) ≤ C * b 0 + C * «expr‖ ‖» h :=\n      by\n      have :=\n        calc\n          «expr‖ ‖» (v 0) ≤ «expr‖ ‖» h + «expr‖ ‖» (v 0 - h) := norm_le_insert' _ _\n          _ ≤ «expr‖ ‖» h + b 0 := by apply add_le_add_left hv₀.le\n          \n      calc\n        «expr‖ ‖» (u 0) ≤ C * «expr‖ ‖» (v 0) := hnorm_u 0\n        _ ≤ C * («expr‖ ‖» h + b 0) := mul_le_mul_of_nonneg_left this hC.le\n        _ = C * b 0 + C * «expr‖ ‖» h := by rw [add_comm, mul_add]\n        \n    have :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (n + 1))\n          (C * b k) ≤\n        ε * «expr‖ ‖» h :=\n      calc\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (n + 1))\n              (C * b k) =\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (range (n + 1)) ((1 / 2) ^ k) *\n              (ε * «expr‖ ‖» h / 2) :=\n          by simp only [b, mul_div_cancel' _ hC.ne.symm, ← sum_mul]\n        _ ≤ 2 * (ε * «expr‖ ‖» h / 2) :=\n          mul_le_mul_of_nonneg_right (sum_geometric_two_le _) (by nlinarith [hε, norm_nonneg h])\n        _ = ε * «expr‖ ‖» h := mul_div_cancel' _ two_ne_zero\n        \n    calc\n      «expr‖ ‖» (s n) ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (range (n + 1)) («expr‖ ‖» (u k)) :=\n        norm_sum_le _ _\n      _ =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n              («expr‖ ‖» (u (k + 1))) +\n            «expr‖ ‖» (u 0) :=\n        sum_range_succ' _ _\n      _ ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n              (C * «expr‖ ‖» (v (k + 1))) +\n            «expr‖ ‖» (u 0) :=\n        add_le_add_right (sum_le_sum fun _ _ => hnorm_u _) _\n      _ ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n              (C * b (k + 1)) +\n            (C * b 0 + C * «expr‖ ‖» h) :=\n        add_le_add (sum_le_sum fun k _ => mul_le_mul_of_nonneg_left (hv _ k.succ_pos).le hC.le) hnorm₀\n      _ =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (range (n + 1)) (C * b k) +\n            C * «expr‖ ‖» h :=\n        by rw [← add_assoc, sum_range_succ']\n      _ ≤ (C + ε) * «expr‖ ‖» h := by\n        rw [add_comm, add_mul]\n        apply add_le_add_left this\n      \n#align controlled_closure_of_complete controlled_closure_of_complete\n\n"}