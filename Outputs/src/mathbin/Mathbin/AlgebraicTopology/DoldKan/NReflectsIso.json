{"compatibility_N₂_N₁_karoubi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/-\nCopyright (c) 2022 Joël Riou. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Joël Riou\n-/\n-- restating the result in a way that allows induction on the degree n \n-- restating the assumption in a more practical form \n-- we have to construct an inverse to f in degree n, by induction on n \n-- degree 0 \n-- induction step\ntheorem compatibility_N₂_N₁_karoubi :\n    «expr ⋙ » N₂ (karoubi_chain_complex_equivalence C ℕ).functor =\n      «expr ⋙ » (karoubi_functor_category_embedding («expr ᵒᵖ» simplex_category) C)\n        («expr ⋙ » N₁\n          («expr ⋙ » (karoubi_chain_complex_equivalence (karoubi C) ℕ).functor\n            (functor.map_homological_complex (karoubi_karoubi.equivalence C).inverse _))) :=\n  by\n  refine' category_theory.functor.ext (fun P => _) fun P Q f => _\n  · refine' homological_complex.ext _ _\n    · ext n\n      · dsimp\n        simp only [karoubi_P_infty_f, comp_id, P_infty_f_naturality, id_comp]\n      · rfl\n    · rintro _ n (rfl : n + 1 = _)\n      ext\n      have h := (alternating_face_map_complex.map P.p).comm (n + 1) n\n      dsimp [N₂, karoubi_chain_complex_equivalence, karoubi_karoubi.inverse,\n        karoubi_homological_complex_equivalence.functor.obj] at h⊢\n      simp only [karoubi.comp_f, assoc, karoubi.eq_to_hom_f, eq_to_hom_refl, id_comp, comp_id,\n        karoubi_alternating_face_map_complex_d, karoubi_P_infty_f, ← homological_complex.hom.comm_assoc, ← h,\n        app_idem_assoc]\n  · ext n\n    dsimp [karoubi_karoubi.inverse, karoubi_functor_category_embedding, karoubi_functor_category_embedding.map]\n    simp only [karoubi.comp_f, karoubi_P_infty_f, homological_complex.eq_to_hom_f, karoubi.eq_to_hom_f, assoc, comp_id,\n      P_infty_f_naturality, app_p_comp, karoubi_chain_complex_equivalence_functor_obj_X_p, N₂_obj_p_f, eq_to_hom_refl,\n      P_infty_f_naturality_assoc, app_comp_p, P_infty_f_idem_assoc]\n#align compatibility_N₂_N₁_karoubi compatibility_N₂_N₁_karoubi\n\n"}