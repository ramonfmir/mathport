{"σ_comp_π_summand_id_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n@[simp, reassoc.1]\ntheorem σ_comp_π_summand_id_eq_zero {n : ℕ} (i : fin (n + 1)) :\n    «expr ≫ » (X.σ i) (s.π_summand (index_set.id (op (simplex_category.mk (n + 1))))) = 0 :=\n  by\n  apply s.hom_ext'\n  intro A\n  dsimp only [simplicial_object.σ]\n  rw [comp_zero, s.ι_summand_epi_naturality_assoc A (simplex_category.σ i).op, ι_π_summand_eq_zero]\n  symm\n  change ¬(A.epi_comp (simplex_category.σ i).op).eq_id\n  rw [index_set.eq_id_iff_len_eq]\n  have h := simplex_category.len_le_of_epi (infer_instance : epi A.e)\n  dsimp at h⊢\n  linarith\n#align σ_comp_π_summand_id_eq_zero σ_comp_π_summand_id_eq_zero\n\n",
 "π_summand_comp_ι_summand_comp_P_infty_eq_P_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n@[simp, reassoc.1]\ntheorem π_summand_comp_ι_summand_comp_P_infty_eq_P_infty (n : ℕ) :\n    «expr ≫ » (s.π_summand (index_set.id (op (simplex_category.mk n))))\n        («expr ≫ » (s.ι_summand (index_set.id (op (simplex_category.mk n)))) (P_infty.f n)) =\n      P_infty.f n :=\n  by\n  conv_rhs => rw [← id_comp (P_infty.f n)]\n  erw [s.decomposition_id, preadditive.sum_comp]\n  rw [fintype.sum_eq_single (index_set.id (op (simplex_category.mk n))), assoc]\n  rintro A (hA : ¬A.eq_id)\n  rw [assoc, s.ι_summand_comp_P_infty_eq_zero A hA, comp_zero]\n#align π_summand_comp_ι_summand_comp_P_infty_eq_P_infty π_summand_comp_ι_summand_comp_P_infty_eq_P_infty\n\n",
 "ι_π_summand_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ι_π_summand_eq_zero [has_zero_morphisms C] {Δ : «expr ᵒᵖ» simplex_category} (A B : index_set Δ) (h : B ≠ A) :\n    «expr ≫ » (s.ι_summand A) (s.π_summand B) = 0 :=\n  by\n  dsimp [ι_summand, π_summand]\n  simp only [summand, assoc, is_iso.hom_inv_id_assoc]\n  erw [colimit.ι_desc, cofan.mk_ι_app]\n  apply dif_neg\n  exact h.symm\n#align ι_π_summand_eq_zero ι_π_summand_eq_zero\n\n",
 "ι_π_summand_eq_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-\nCopyright (c) 2022 Joël Riou. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Joël Riou\n-/\n@[simp, reassoc.1]\ntheorem ι_π_summand_eq_id [has_zero_morphisms C] {Δ : «expr ᵒᵖ» simplex_category} (A : index_set Δ) :\n    «expr ≫ » (s.ι_summand A) (s.π_summand A) = («expr𝟙») _ :=\n  by\n  dsimp [ι_summand, π_summand]\n  simp only [summand, assoc, is_iso.hom_inv_id_assoc]\n  erw [colimit.ι_desc, cofan.mk_ι_app]\n  dsimp\n  simp only [eq_self_iff_true, if_true]\n#align ι_π_summand_eq_id ι_π_summand_eq_id\n\n",
 "ι_summand_comp_d_comp_π_summand_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\ntheorem ι_summand_comp_d_comp_π_summand_eq_zero (j k : ℕ) (A : index_set (op (simplex_category.mk j))) (hA : ¬A.eq_id) :\n    «expr ≫ » (s.ι_summand A)\n        («expr ≫ » ((alternating_face_map_complex X).d j k) (s.π_summand (index_set.id (op (simplex_category.mk k))))) =\n      0 :=\n  by\n  rw [A.eq_id_iff_mono] at hA\n  rw [← assoc, ← s.comp_P_infty_eq_zero_iff, assoc, ← P_infty.comm j k, s.ι_summand_eq, assoc,\n    degeneracy_comp_P_infty_assoc X j A.e hA, zero_comp, comp_zero]\n#align ι_summand_comp_d_comp_π_summand_eq_zero ι_summand_comp_d_comp_π_summand_eq_zero\n\n",
 "ι_summand_comp_P_infty_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- If a simplicial object `X` in an additive category is split,\nthen `P_infty` vanishes on all the summands of `X _[n]` which do\nnot correspond to the identity of `[n]`. -/\ntheorem ι_summand_comp_P_infty_eq_zero {X : simplicial_object C} (s : simplicial_object.splitting X) {n : ℕ}\n    (A : simplicial_object.splitting.index_set (op (simplex_category.mk n))) (hA : ¬A.eq_id) :\n    «expr ≫ » (s.ι_summand A) (P_infty.f n) = 0 :=\n  by\n  rw [simplicial_object.splitting.index_set.eq_id_iff_mono] at hA\n  rw [simplicial_object.splitting.ι_summand_eq, assoc, degeneracy_comp_P_infty X n A.e hA, comp_zero]\n#align ι_summand_comp_P_infty_eq_zero ι_summand_comp_P_infty_eq_zero\n\n",
 "decomposition_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem decomposition_id (Δ : «expr ᵒᵖ» simplex_category) :\n    («expr𝟙») (X.obj Δ) =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        («expr ≫ » (s.π_summand A) (s.ι_summand A)) :=\n  by\n  apply s.hom_ext'\n  intro A\n  rw [comp_id, comp_sum, finset.sum_eq_single A, ι_π_summand_eq_id_assoc]\n  · intro B h₁ h₂\n    rw [s.ι_π_summand_eq_zero_assoc _ _ h₂, zero_comp]\n  · simp only [finset.mem_univ, not_true, is_empty.forall_iff]\n#align decomposition_id decomposition_id\n\n",
 "comp_P_infty_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫= » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\ntheorem comp_P_infty_eq_zero_iff {Z : C} {n : ℕ} (f : «expr ⟶ » Z (simplicial_object.at X n)) :\n    «expr ≫ » f (P_infty.f n) = 0 ↔ «expr ≫ » f (s.π_summand (index_set.id (op (simplex_category.mk n)))) = 0 :=\n  by\n  constructor\n  · intro h\n    cases n\n    · dsimp at h\n      rw [comp_id] at h\n      rw [h, zero_comp]\n    · have h' := «expr ≫= » f (P_infty_f_add_Q_infty_f (n + 1))\n      dsimp at h'\n      rw [comp_id, comp_add, h, zero_add] at h'\n      rw [← h', assoc, Q_infty_f, decomposition_Q, preadditive.sum_comp, preadditive.comp_sum, finset.sum_eq_zero]\n      intro i hi\n      simp only [assoc, σ_comp_π_summand_id_eq_zero, comp_zero]\n  · intro h\n    rw [← comp_id f, assoc, s.decomposition_id, preadditive.sum_comp, preadditive.comp_sum, fintype.sum_eq_zero]\n    intro A\n    by_cases hA : A.eq_id\n    · dsimp at hA\n      subst hA\n      rw [assoc, reassoc_of h, zero_comp]\n    · simp only [assoc, s.ι_summand_comp_P_infty_eq_zero A hA, comp_zero]\n#align comp_P_infty_eq_zero_iff comp_P_infty_eq_zero_iff\n\n",
 "P_infty_comp_π_summand_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n@[simp, reassoc.1]\ntheorem P_infty_comp_π_summand_id (n : ℕ) :\n    «expr ≫ » (P_infty.f n) (s.π_summand (index_set.id (op (simplex_category.mk n)))) =\n      s.π_summand (index_set.id (op (simplex_category.mk n))) :=\n  by\n  conv_rhs => rw [← id_comp (s.π_summand _)]\n  symm\n  rw [← sub_eq_zero, ← sub_comp, ← comp_P_infty_eq_zero_iff, sub_comp, id_comp, P_infty_f_idem, sub_self]\n#align P_infty_comp_π_summand_id P_infty_comp_π_summand_id\n\n"}