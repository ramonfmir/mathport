{"map_P_infty_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem map_P_infty_f {D : Type _} [Category D] [Preadditive D] (G : «expr ⥤ » C D) [G.additive]\n    (X : SimplicialObject C) (n : ℕ) :\n    (PInfty : «expr ⟶ » (alternating_face_map_complex (((whiskering C D).obj G).obj X)) _).f n =\n      G.map ((PInfty : «expr ⟶ » (AlternatingFaceMapComplex.obj X) _).f n) :=\n  by simp only [P_infty_f, map_P]\n#align map_P_infty_f map_P_infty_f\n\n",
 "karoubi_P_infty_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ◫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n/-- Given an object `Y : karoubi (simplicial_object C)`, this lemma\ncomputes `P_infty` for the associated object in `simplicial_object (karoubi C)`\nin terms of `P_infty` for `Y.X : simplicial_object C` and `Y.p`. -/\ntheorem karoubi_P_infty_f {Y : Karoubi (SimplicialObject C)} (n : ℕ) :\n    ((PInfty : «expr ⟶ » (alternating_face_map_complex ((karoubiFunctorCategoryEmbedding _ _).obj Y)) _).f n).f =\n      «expr ≫ » (Y.p.app (op (simplex_category.mk n)))\n        ((PInfty : «expr ⟶ » (alternating_face_map_complex Y.X) _).f n) :=\n  by\n  -- We introduce P_infty endomorphisms P₁, P₂, P₃, P₄ on various objects Y₁, Y₂, Y₃, Y₄.\n  let Y₁ := (karoubi_functor_category_embedding _ _).obj Y\n  let Y₂ := Y.X\n  let Y₃ := ((whiskering _ _).obj (to_karoubi C)).obj Y.X\n  let Y₄ := (karoubi_functor_category_embedding _ _).obj ((to_karoubi _).obj Y.X)\n  let P₁ : «expr ⟶ » (alternating_face_map_complex Y₁) _ := P_infty\n  let P₂ : «expr ⟶ » (alternating_face_map_complex Y₂) _ := P_infty\n  let P₃ : «expr ⟶ » (alternating_face_map_complex Y₃) _ := P_infty\n  let P₄ : «expr ⟶ » (alternating_face_map_complex Y₄) _ := P_infty\n  -- The statement of lemma relates P₁ and P₂.\n  change (P₁.f n).f = «expr ≫ » (Y.p.app (op (simplex_category.mk n))) (P₂.f n)\n  -- The proof proceeds by obtaining relations h₃₂, h₄₃, h₁₄.\n  have h₃₂ : (P₃.f n).f = P₂.f n := karoubi.hom_ext.mp (map_P_infty_f (to_karoubi C) Y₂ n)\n  have h₄₃ : P₄.f n = P₃.f n :=\n    by\n    have h := functor.congr_obj (to_karoubi_comp_karoubi_functor_category_embedding _ _) Y₂\n    simp only [← nat_trans_P_infty_f_app]\n    congr\n  let τ₁ := («expr𝟙») (karoubi_functor_category_embedding («expr ᵒᵖ» SimplexCategory) C)\n  let τ₂ := nat_trans_P_infty_f (karoubi C) n\n  let τ := «expr ◫ » τ₁ τ₂\n  have h₁₄ := idempotents.nat_trans_eq τ Y\n  dsimp [τ, τ₁, τ₂, nat_trans_P_infty_f] at h₁₄\n  rw [id_comp, id_comp, comp_id, comp_id] at h₁₄\n  -- We use the three equalities h₃₂, h₄₃, h₁₄.\n  rw [← h₃₂, ← h₄₃, h₁₄]\n  simp only [karoubi_functor_category_embedding.map_app_f, karoubi.decomp_id_p_f, karoubi.decomp_id_i_f, karoubi.comp_f]\n  let π : «expr ⟶ » Y₄ Y₄ := («expr ⋙ » (to_karoubi _) (karoubi_functor_category_embedding _ _)).map Y.p\n  have eq := karoubi.hom_ext.mp (P_infty_f_naturality n π)\n  simp only [karoubi.comp_f] at eq\n  dsimp [π] at eq\n  rw [← Eq, reassoc_of (app_idem Y (op (simplex_category.mk n)))]\n#align karoubi_P_infty_f karoubi_P_infty_f\n\n",
 "Q_is_eventually_constant":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\ntheorem Q_is_eventually_constant {q n : ℕ} (hqn : n ≤ q) :\n    ((Q (q + 1)).f n : «expr ⟶ » (simplicial_object.at X n) _) = (Q q).f n := by\n  simp only [Q, HomologicalComplex.sub_f_apply, P_is_eventually_constant hqn]\n#align Q_is_eventually_constant Q_is_eventually_constant\n\n",
 "Q_infty_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n@[simp, reassoc.1]\ntheorem Q_infty_idem : «expr ≫ » (QInfty : «expr ⟶ » (alternating_face_map_complex X) _) QInfty = QInfty :=\n  by\n  ext n\n  exact Q_infty_f_idem n\n#align Q_infty_idem Q_infty_idem\n\n",
 "Q_infty_f_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n@[simp, reassoc.1]\ntheorem Q_infty_f_naturality (n : ℕ) {X Y : SimplicialObject C} (f : «expr ⟶ » X Y) :\n    «expr ≫ » (f.app (op (simplex_category.mk n))) (QInfty.f n) =\n      «expr ≫ » (QInfty.f n) (f.app (op (simplex_category.mk n))) :=\n  Q_f_naturality n n f\n#align Q_infty_f_naturality Q_infty_f_naturality\n\n",
 "Q_infty_f_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n@[simp, reassoc.1]\ntheorem Q_infty_f_idem (n : ℕ) :\n    «expr ≫ » (QInfty.f n : «expr ⟶ » (simplicial_object.at X n) _) (QInfty.f n) = QInfty.f n :=\n  Q_f_idem _ _\n#align Q_infty_f_idem Q_infty_f_idem\n\n",
 "Q_infty_f_comp_P_infty_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n@[simp, reassoc.1]\ntheorem Q_infty_f_comp_P_infty_f (n : ℕ) :\n    «expr ≫ » (QInfty.f n : «expr ⟶ » (simplicial_object.at X n) _) (PInfty.f n) = 0 :=\n  by\n  dsimp only [Q_infty]\n  simp only [HomologicalComplex.sub_f_apply, HomologicalComplex.id_f, sub_comp, id_comp, P_infty_f_idem, sub_self]\n#align Q_infty_f_comp_P_infty_f Q_infty_f_comp_P_infty_f\n\n",
 "Q_infty_f_0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n@[simp]\ntheorem Q_infty_f_0 : (QInfty.f 0 : «expr ⟶ » (simplicial_object.at X 0) (simplicial_object.at X 0)) = 0 :=\n  by\n  dsimp [Q_infty]\n  simp only [sub_self]\n#align Q_infty_f_0 Q_infty_f_0\n\n",
 "Q_infty_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\ntheorem Q_infty_f (n : ℕ) :\n    (QInfty.f n : «expr ⟶ » (simplicial_object.at X n) (simplicial_object.at X n)) = (Q n).f n :=\n  rfl\n#align Q_infty_f Q_infty_f\n\n",
 "Q_infty_comp_P_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n@[simp, reassoc.1]\ntheorem Q_infty_comp_P_infty : «expr ≫ » (QInfty : «expr ⟶ » (alternating_face_map_complex X) _) PInfty = 0 :=\n  by\n  ext n\n  apply Q_infty_f_comp_P_infty_f\n#align Q_infty_comp_P_infty Q_infty_comp_P_infty\n\n",
 "P_is_eventually_constant":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n/-\nCopyright (c) 2022 Joël Riou. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Joël Riou\n-/\ntheorem P_is_eventually_constant {q n : ℕ} (hqn : n ≤ q) :\n    ((P (q + 1)).f n : «expr ⟶ » (simplicial_object.at X n) _) = (P q).f n :=\n  by\n  cases n\n  · simp only [P_f_0_eq]\n  · unfold P\n    simp only [add_right_eq_self, comp_add, HomologicalComplex.comp_f, HomologicalComplex.add_f_apply, comp_id]\n    exact (higher_faces_vanish.of_P q n).comp_Hσ_eq_zero (nat.succ_le_iff.mp hqn)\n#align P_is_eventually_constant P_is_eventually_constant\n\n",
 "P_infty_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n@[simp, reassoc.1]\ntheorem P_infty_idem : «expr ≫ » (PInfty : «expr ⟶ » (alternating_face_map_complex X) _) PInfty = PInfty :=\n  by\n  ext n\n  exact P_infty_f_idem n\n#align P_infty_idem P_infty_idem\n\n",
 "P_infty_f_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n@[simp, reassoc.1]\ntheorem P_infty_f_naturality (n : ℕ) {X Y : SimplicialObject C} (f : «expr ⟶ » X Y) :\n    «expr ≫ » (f.app (op (simplex_category.mk n))) (PInfty.f n) =\n      «expr ≫ » (PInfty.f n) (f.app (op (simplex_category.mk n))) :=\n  P_f_naturality n n f\n#align P_infty_f_naturality P_infty_f_naturality\n\n",
 "P_infty_f_idem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n@[simp, reassoc.1]\ntheorem P_infty_f_idem (n : ℕ) :\n    «expr ≫ » (PInfty.f n : «expr ⟶ » (simplicial_object.at X n) _) (PInfty.f n) = PInfty.f n := by\n  simp only [P_infty_f, P_f_idem]\n#align P_infty_f_idem P_infty_f_idem\n\n",
 "P_infty_f_comp_Q_infty_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n@[simp, reassoc.1]\ntheorem P_infty_f_comp_Q_infty_f (n : ℕ) :\n    «expr ≫ » (PInfty.f n : «expr ⟶ » (simplicial_object.at X n) _) (QInfty.f n) = 0 :=\n  by\n  dsimp only [Q_infty]\n  simp only [HomologicalComplex.sub_f_apply, HomologicalComplex.id_f, comp_sub, comp_id, P_infty_f_idem, sub_self]\n#align P_infty_f_comp_Q_infty_f P_infty_f_comp_Q_infty_f\n\n",
 "P_infty_f_add_Q_infty_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem P_infty_f_add_Q_infty_f (n : ℕ) :\n    (PInfty.f n : «expr ⟶ » (simplicial_object.at X n) _) + QInfty.f n = («expr𝟙») _ :=\n  HomologicalComplex.congr_hom PInfty_add_QInfty n\n#align P_infty_f_add_Q_infty_f P_infty_f_add_Q_infty_f\n\n",
 "P_infty_f_0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem P_infty_f_0 : (PInfty.f 0 : «expr ⟶ » (simplicial_object.at X 0) (simplicial_object.at X 0)) = («expr𝟙») _ :=\n  rfl\n#align P_infty_f_0 P_infty_f_0\n\n",
 "P_infty_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplicial_object.at -/\ntheorem P_infty_f (n : ℕ) :\n    (PInfty.f n : «expr ⟶ » (simplicial_object.at X n) (simplicial_object.at X n)) = (P n).f n :=\n  rfl\n#align P_infty_f P_infty_f\n\n",
 "P_infty_comp_Q_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n@[simp, reassoc.1]\ntheorem P_infty_comp_Q_infty : «expr ≫ » (PInfty : «expr ⟶ » (alternating_face_map_complex X) _) QInfty = 0 :=\n  by\n  ext n\n  apply P_infty_f_comp_Q_infty_f\n#align P_infty_comp_Q_infty P_infty_comp_Q_infty\n\n",
 "P_infty_add_Q_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alternating_face_map_complex -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem P_infty_add_Q_infty : (PInfty : «expr ⟶ » (alternating_face_map_complex X) _) + QInfty = («expr𝟙») _ :=\n  by\n  dsimp only [Q_infty]\n  simp only [add_sub_cancel'_right]\n#align P_infty_add_Q_infty P_infty_add_Q_infty\n\n"}