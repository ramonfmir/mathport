{"σ_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem σ_naturality {X' X : CosimplicialObject C} (f : «expr ⟶ » X X') {n : ℕ} (i : Fin (n + 1)) :\n    «expr ≫ » (X.σ i) (f.app (SimplexCategory.mk n)) = «expr ≫ » (f.app (SimplexCategory.mk (n + 1))) (X'.σ i) :=\n  f.naturality _\n#align σ_naturality σ_naturality\n\n",
 "σ_comp_σ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The fifth cosimplicial identity -/\n@[reassoc.1]\ntheorem σ_comp_σ {n} {i j : Fin (n + 1)} (H : i ≤ j) :\n    «expr ≫ » (X.σ i.cast_succ) (X.σ j) = «expr ≫ » (X.σ j.succ) (X.σ i) :=\n  by\n  dsimp [δ, σ]\n  simp only [← X.map_comp, SimplexCategory.σ_comp_σ H]\n#align σ_comp_σ σ_comp_σ\n\n",
 "δ_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem δ_naturality {X' X : CosimplicialObject C} (f : «expr ⟶ » X X') {n : ℕ} (i : Fin (n + 2)) :\n    «expr ≫ » (X.δ i) (f.app (SimplexCategory.mk (n + 1))) = «expr ≫ » (f.app (SimplexCategory.mk n)) (X'.δ i) :=\n  f.naturality _\n#align δ_naturality δ_naturality\n\n",
 "δ_comp_σ_succ'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[reassoc.1]\ntheorem δ_comp_σ_succ' {n} {j : Fin (n + 2)} {i : Fin (n + 1)} (H : j = i.succ) :\n    «expr ≫ » (X.δ j) (X.σ i) = («expr𝟙») _ := by\n  subst H\n  rw [δ_comp_σ_succ]\n#align δ_comp_σ_succ' δ_comp_σ_succ'\n\n",
 "δ_comp_σ_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-- The second part of the third cosimplicial identity -/\n@[reassoc.1]\ntheorem δ_comp_σ_succ {n} {i : Fin (n + 1)} : «expr ≫ » (X.δ i.succ) (X.σ i) = («expr𝟙») _ :=\n  by\n  dsimp [δ, σ]\n  simp only [← X.map_comp, SimplexCategory.δ_comp_σ_succ, X.map_id]\n#align δ_comp_σ_succ δ_comp_σ_succ\n\n",
 "δ_comp_σ_self'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[reassoc.1]\ntheorem δ_comp_σ_self' {n} {j : Fin (n + 2)} {i : Fin (n + 1)} (H : j = i.cast_succ) :\n    «expr ≫ » (X.δ j) (X.σ i) = («expr𝟙») _ := by\n  subst H\n  rw [δ_comp_σ_self]\n#align δ_comp_σ_self' δ_comp_σ_self'\n\n",
 "δ_comp_σ_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-- The first part of the third cosimplicial identity -/\n@[reassoc.1]\ntheorem δ_comp_σ_self {n} {i : Fin (n + 1)} : «expr ≫ » (X.δ i.cast_succ) (X.σ i) = («expr𝟙») _ :=\n  by\n  dsimp [δ, σ]\n  simp only [← X.map_comp, SimplexCategory.δ_comp_σ_self, X.map_id]\n#align δ_comp_σ_self δ_comp_σ_self\n\n",
 "δ_comp_σ_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The second cosimplicial identity -/\n@[reassoc.1]\ntheorem δ_comp_σ_of_le {n} {i : Fin (n + 2)} {j : Fin (n + 1)} (H : i ≤ j.cast_succ) :\n    «expr ≫ » (X.δ i.cast_succ) (X.σ j.succ) = «expr ≫ » (X.σ j) (X.δ i) :=\n  by\n  dsimp [δ, σ]\n  simp only [← X.map_comp, SimplexCategory.δ_comp_σ_of_le H]\n#align δ_comp_σ_of_le δ_comp_σ_of_le\n\n",
 "δ_comp_σ_of_gt'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem δ_comp_σ_of_gt' {n} {i : Fin (n + 3)} {j : Fin (n + 2)} (H : j.succ < i) :\n    «expr ≫ » (X.δ i) (X.σ j) =\n      «expr ≫ »\n        (X.σ\n          (j.cast_lt\n            ((add_lt_add_iff_right 1).mp\n              (lt_of_lt_of_le (by simpa only [[anonymous], ← Fin.val_succ] using fin.lt_iff_coe_lt_coe.mp H) i.is_le))))\n        (X.δ (i.pred fun hi => by simpa only [Fin.not_lt_zero, hi] using H)) :=\n  by\n  dsimp [δ, σ]\n  simpa only [← X.map_comp, ← op_comp, SimplexCategory.δ_comp_σ_of_gt' H]\n#align δ_comp_σ_of_gt' δ_comp_σ_of_gt'\n\n",
 "δ_comp_σ_of_gt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The fourth cosimplicial identity -/\n@[reassoc.1]\ntheorem δ_comp_σ_of_gt {n} {i : Fin (n + 2)} {j : Fin (n + 1)} (H : j.cast_succ < i) :\n    «expr ≫ » (X.δ i.succ) (X.σ j.cast_succ) = «expr ≫ » (X.σ j) (X.δ i) :=\n  by\n  dsimp [δ, σ]\n  simp only [← X.map_comp, SimplexCategory.δ_comp_σ_of_gt H]\n#align δ_comp_σ_of_gt δ_comp_σ_of_gt\n\n",
 "δ_comp_δ_self'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem δ_comp_δ_self' {n} {i : Fin (n + 2)} {j : Fin (n + 3)} (H : j = i.cast_succ) :\n    «expr ≫ » (X.δ i) (X.δ j) = «expr ≫ » (X.δ i) (X.δ i.succ) :=\n  by\n  subst H\n  rw [δ_comp_δ_self]\n#align δ_comp_δ_self' δ_comp_δ_self'\n\n",
 "δ_comp_δ_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The special case of the first cosimplicial identity -/\n@[reassoc.1]\ntheorem δ_comp_δ_self {n} {i : Fin (n + 2)} : «expr ≫ » (X.δ i) (X.δ i.cast_succ) = «expr ≫ » (X.δ i) (X.δ i.succ) :=\n  by\n  dsimp [δ]\n  simp only [← X.map_comp, SimplexCategory.δ_comp_δ_self]\n#align δ_comp_δ_self δ_comp_δ_self\n\n",
 "δ_comp_δ''":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem δ_comp_δ'' {n} {i : Fin (n + 3)} {j : Fin (n + 2)} (H : i ≤ j.cast_succ) :\n    «expr ≫ » (X.δ (i.cast_lt (nat.lt_of_le_of_lt (Fin.le_iff_val_le_val.mp H) j.is_lt))) (X.δ j.succ) =\n      «expr ≫ » (X.δ j) (X.δ i) :=\n  by\n  dsimp [δ]\n  simp only [← X.map_comp, ← op_comp, SimplexCategory.δ_comp_δ'' H]\n#align δ_comp_δ'' δ_comp_δ''\n\n",
 "δ_comp_δ'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem δ_comp_δ' {n} {i : Fin (n + 2)} {j : Fin (n + 3)} (H : i.cast_succ < j) :\n    «expr ≫ » (X.δ i) (X.δ j) =\n      «expr ≫ » (X.δ (j.pred fun hj => by simpa only [hj, Fin.not_lt_zero] using H)) (X.δ i.cast_succ) :=\n  by\n  dsimp [δ]\n  simp only [← X.map_comp, ← op_comp, SimplexCategory.δ_comp_δ' H]\n#align δ_comp_δ' δ_comp_δ'\n\n",
 "δ_comp_δ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The generic case of the first cosimplicial identity -/\n@[reassoc.1]\ntheorem δ_comp_δ {n} {i j : Fin (n + 2)} (H : i ≤ j) :\n    «expr ≫ » (X.δ i) (X.δ j.succ) = «expr ≫ » (X.δ j) (X.δ i.cast_succ) :=\n  by\n  dsimp [δ]\n  simp only [← X.map_comp, SimplexCategory.δ_comp_δ H]\n#align δ_comp_δ δ_comp_δ\n\n",
 "w₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The compatibility of a morphism with the augmentation, on 0-simplices -/\n@[reassoc.1]\ntheorem w₀ {X Y : Augmented C} (f : «expr ⟶ » X Y) :\n    «expr ≫ » ((Augmented.drop.map f).app (op (SimplexCategory.mk 0))) (Y.hom.app (op (SimplexCategory.mk 0))) =\n      «expr ≫ » (X.hom.app (op (SimplexCategory.mk 0))) (Augmented.point.map f) :=\n  by convert congr_app f.w (op (SimplexCategory.mk 0))\n#align w₀ w₀\n\n",
 "eq_to_iso_refl":
 "@[simp]\ntheorem eq_to_iso_refl {n : ℕ} (h : n = n) : X.eq_to_iso h = Iso.refl _ :=\n  by\n  ext\n  simp [eq_to_iso]\n#align eq_to_iso_refl eq_to_iso_refl\n\n",
 "augment_hom_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `simplex_category.mk -/\n@[simp]\ntheorem augment_hom_zero (X : CosimplicialObject C) (X₀ : C) (f : «expr ⟶ » X₀ (X.obj (simplex_category.mk 0))) (w) :\n    (X.augment X₀ f w).hom.app (simplex_category.mk 0) = f :=\n  by\n  dsimp\n  rw [SimplexCategory.hom_zero_zero ((simplex_category.mk 0).const 0), X.map_id, category.comp_id]\n#align augment_hom_zero augment_hom_zero\n\n"}