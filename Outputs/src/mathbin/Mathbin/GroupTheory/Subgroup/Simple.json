{"is_simple_group_of_surjective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[to_additive]\ntheorem is_simple_group_of_surjective {H : Type _} [Group H] [IsSimpleGroup G] [Nontrivial H] (f : «expr →* » G H)\n    (hf : function.surjective f) : IsSimpleGroup H :=\n  ⟨nontrivial.exists_pair_ne, fun H iH =>\n    by\n    refine' (iH.comap f).eq_bot_or_eq_top.imp (fun h => _) fun h => _\n    · rw [← map_bot f, ← h, map_comap_eq_self_of_surjective hf]\n    · rw [← comap_top f] at h\n      exact comap_injective hf h⟩\n#align is_simple_group_of_surjective is_simple_group_of_surjective\n\n",
 "eq_bot_or_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print Subgroup.Normal.eq_bot_or_eq_top /-\n/-\nCopyright (c) 2021 Aaron Anderson. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Aaron Anderson\n-/\n@[to_additive]\ntheorem Subgroup.Normal.eq_bot_or_eq_top [IsSimpleGroup G] {H : Subgroup G} (Hn : H.normal) :\n    H = «expr⊥» ∨ H = «expr⊤» :=\n  is_simple_group.eq_bot_or_eq_top_of_normal H Hn\n#align subgroup.normal.eq_bot_or_eq_top Subgroup.Normal.eq_bot_or_eq_top\n#align add_subgroup.normal.eq_bot_or_eq_top AddSubgroup.Normal.eq_bot_or_eq_top\n-/\n\n"}