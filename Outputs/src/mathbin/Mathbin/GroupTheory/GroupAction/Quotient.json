{"to_quotient_apply":
 "@[simp]\ntheorem _root_.mul_action_hom.to_quotient_apply (H : subgroup α) (g : α) : mul_action_hom.to_quotient H g = g :=\n  rfl\n#align mul_action_hom.to_quotient_apply mul_action_hom.to_quotient_apply\n\n",
 "sum_card_fixed_by_eq_card_orbits_mul_card_group":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprΩ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprΩ -/\n/-- **Burnside's lemma** : given a finite group `G` acting on a set `X`, the average number of\nelements fixed by each `g ∈ G` is the number of orbits. -/\n@[to_additive\n      \"**Burnside's lemma** : given a finite additive group `G` acting on a set `X`,\\nthe average number of elements fixed by each `g ∈ G` is the number of orbits. \"]\ntheorem sum_card_fixed_by_eq_card_orbits_mul_card_group [fintype α] [∀ a, fintype <| fixed_by α β a] [fintype (exprΩ)] :\n    finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (fintype.card (fixed_by α β a)) =\n      fintype.card (exprΩ) * fintype.card α :=\n  by rw [← fintype.card_prod, ← fintype.card_sigma, fintype.card_congr (sigma_fixed_by_equiv_orbits_prod_group α β)]\n#align sum_card_fixed_by_eq_card_orbits_mul_card_group sum_card_fixed_by_eq_card_orbits_mul_card_group\n\n",
 "stabilizer_quotient":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n@[simp, to_additive]\ntheorem stabilizer_quotient {G} [group G] (H : subgroup G) : mul_action.stabilizer G ((1 : G) : «expr ⧸ » G H) = H :=\n  by\n  ext\n  simp [quotient_group.eq]\n#align stabilizer_quotient stabilizer_quotient\n\n",
 "smul_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Thomas Browning\n-/\n@[simp, to_additive]\ntheorem quotient.smul_mk [quotient_action β H] (b : β) (a : α) :\n    («expr • » b (quotient_group.mk a) : «expr ⧸ » α H) = quotient_group.mk («expr • » b a) :=\n  rfl\n#align quotient.smul_mk quotient.smul_mk\n\n",
 "smul_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, to_additive]\ntheorem quotient.smul_coe [quotient_action β H] (b : β) (a : α) : («expr • » b a : «expr ⧸ » α H) = ↑(«expr • » b a) :=\n  rfl\n#align quotient.smul_coe quotient.smul_coe\n\n",
 "quotient_centralizer_embedding_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem quotient_centralizer_embedding_apply (g : G) (x : G) :\n    quotient_centralizer_embedding g x = ⟨«expr⁅ , ⁆» x g, x, g, rfl⟩ :=\n  rfl\n#align quotient_centralizer_embedding_apply quotient_centralizer_embedding_apply\n\n",
 "quotient_center_embedding_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem quotient_center_embedding_apply {S : set G} (hS : closure S = «expr⊤») (g : G) (s : S) :\n    quotient_center_embedding hS g s = ⟨«expr⁅ , ⁆» g s, g, s, rfl⟩ :=\n  rfl\n#align quotient_center_embedding_apply quotient_center_embedding_apply\n\n",
 "out'_conj_pow_minimal_period_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\ntheorem _root_.quotient_group.out'_conj_pow_minimal_period_mem (a : α) (q : «expr ⧸ » α H) :\n    q.out'⁻¹ * a ^ function.minimal_period ((«expr • » · ·) a) q * q.out' ∈ H := by\n  rw [mul_assoc, ← quotient_group.eq', quotient_group.out_eq', ← smul_eq_mul, quotient.mk_smul_out', eq_comm,\n    pow_smul_eq_iff_minimal_period_dvd]\n#align quotient_group.out'_conj_pow_minimal_period_mem quotient_group.out'_conj_pow_minimal_period_mem\n\n",
 "orbit_equiv_quotient_stabilizer_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, to_additive]\ntheorem orbit_equiv_quotient_stabilizer_symm_apply (b : β) (a : α) :\n    ((orbit_equiv_quotient_stabilizer α b).symm a : β) = «expr • » a b :=\n  rfl\n#align orbit_equiv_quotient_stabilizer_symm_apply orbit_equiv_quotient_stabilizer_symm_apply\n\n",
 "of_quotient_stabilizer_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[to_additive]\ntheorem of_quotient_stabilizer_smul (g : α) (g' : «expr ⧸ » α (mul_action.stabilizer α x)) :\n    of_quotient_stabilizer α x («expr • » g g') = «expr • » g (of_quotient_stabilizer α x g') :=\n  Quotient.inductionOn' g' fun _ => mul_smul _ _ _\n#align of_quotient_stabilizer_smul of_quotient_stabilizer_smul\n\n",
 "of_quotient_stabilizer_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, to_additive]\ntheorem of_quotient_stabilizer_mk (g : α) : of_quotient_stabilizer α x (quotient_group.mk g) = «expr • » g x :=\n  rfl\n#align of_quotient_stabilizer_mk of_quotient_stabilizer_mk\n\n",
 "of_quotient_stabilizer_mem_orbit":
 "@[to_additive]\ntheorem of_quotient_stabilizer_mem_orbit (g) : of_quotient_stabilizer α x g ∈ orbit α x :=\n  Quotient.inductionOn' g fun g => ⟨g, rfl⟩\n#align of_quotient_stabilizer_mem_orbit of_quotient_stabilizer_mem_orbit\n\n",
 "normal_core_eq_ker":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\ntheorem normal_core_eq_ker : H.normal_core = (MulAction.toPermHom G («expr ⧸ » G H)).ker :=\n  by\n  refine'\n    le_antisymm\n      (fun g hg =>\n        equiv.perm.ext fun q =>\n          quotient_group.induction_on q fun g' => (mul_action.quotient.smul_mk H g g').trans (quotient_group.eq.mpr _))\n      (subgroup.normal_le_normal_core.mpr fun g hg => _)\n  · rw [smul_eq_mul, mul_inv_rev, ← inv_inv g', inv_inv]\n    exact H.normal_core.inv_mem hg g'⁻¹\n  · rw [← H.inv_mem_iff, ← mul_one g⁻¹, ← quotient_group.eq, ← mul_one g]\n    exact (mul_action.quotient.smul_mk H g 1).symm.trans (equiv.perm.ext_iff.mp hg (1 : G))\n#align normal_core_eq_ker normal_core_eq_ker\n\n",
 "mk_smul_out'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, to_additive]\ntheorem quotient.mk_smul_out' [quotient_action β H] (b : β) (q : «expr ⧸ » α H) :\n    quotient_group.mk («expr • » b q.out') = «expr • » b q := by rw [← quotient.smul_mk, quotient_group.out_eq']\n#align quotient.mk_smul_out' quotient.mk_smul_out'\n\n",
 "injective_of_quotient_stabilizer":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[to_additive]\ntheorem injective_of_quotient_stabilizer : function.injective (of_quotient_stabilizer α x) := fun y₁ y₂ =>\n  Quotient.inductionOn₂' y₁ y₂ fun g₁ g₂ (H : «expr • » g₁ x = «expr • » g₂ x) =>\n    quotient.sound' <| by\n      rw [left_rel_apply]\n      show «expr • » (g₁⁻¹ * g₂) x = x\n      rw [mul_smul, ← H, inv_smul_smul]\n#align injective_of_quotient_stabilizer injective_of_quotient_stabilizer\n\n",
 "coe_smul_out'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, to_additive]\ntheorem quotient.coe_smul_out' [quotient_action β H] (b : β) (q : «expr ⧸ » α H) :\n    ↑(«expr • » b q.out') = «expr • » b q :=\n  quotient.mk_smul_out' H b q\n#align quotient.coe_smul_out' quotient.coe_smul_out'\n\n",
 "card_orbit_mul_card_stabilizer_eq_card_group":
 "/-- Orbit-stabilizer theorem. -/\n@[to_additive \"Orbit-stabilizer theorem.\"]\ntheorem card_orbit_mul_card_stabilizer_eq_card_group (b : β) [fintype α] [fintype <| orbit α b]\n    [fintype <| stabilizer α b] : fintype.card (orbit α b) * fintype.card (stabilizer α b) = fintype.card α := by\n  rw [← fintype.card_prod, fintype.card_congr (orbit_prod_stabilizer_equiv_group α b)]\n#align card_orbit_mul_card_stabilizer_eq_card_group card_orbit_mul_card_stabilizer_eq_card_group\n\n",
 "card_eq_sum_card_group_div_card_stabilizer'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprΩ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprΩ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprΩ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/-- **Class formula** for a finite group acting on a finite type. See\n`mul_action.card_eq_sum_card_group_div_card_stabilizer` for a specialized version using\n`quotient.out'`. -/\n@[to_additive\n      \"**Class formula** for a finite group acting on a finite type. See\\n`add_action.card_eq_sum_card_add_group_div_card_stabilizer` for a specialized version using\\n`quotient.out'`.\"]\ntheorem card_eq_sum_card_group_div_card_stabilizer' [fintype α] [fintype β] [fintype (exprΩ)]\n    [∀ b : β, fintype <| stabilizer α b] {φ : exprΩ → β} (hφ : left_inverse quotient.mk' φ) :\n    fintype.card β =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (fintype.card α / fintype.card (stabilizer α (φ ω))) :=\n  by\n  classical\n    have :\n      ∀ ω : exprΩ,\n        fintype.card α / fintype.card («expr↥ » (stabilizer α (φ ω))) =\n          fintype.card («expr ⧸ » α (stabilizer α (φ ω))) :=\n      by\n      intro ω\n      rw [fintype.card_congr (@subgroup.group_equiv_quotient_times_subgroup α _ (stabilizer α <| φ ω)),\n        fintype.card_prod, nat.mul_div_cancel]\n      exact fintype.card_pos_iff.mpr (by infer_instance)\n    simp_rw [this, ← fintype.card_sigma, fintype.card_congr (self_equiv_sigma_orbits_quotient_stabilizer' α β hφ)]\n#align card_eq_sum_card_group_div_card_stabilizer' card_eq_sum_card_group_div_card_stabilizer'\n\n",
 "card_eq_sum_card_group_div_card_stabilizer":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprΩ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/-- **Class formula** for a finite group acting on a finite type. -/\n@[to_additive \"**Class formula** for a finite group acting on a finite type.\"]\ntheorem card_eq_sum_card_group_div_card_stabilizer [fintype α] [fintype β] [fintype (exprΩ)]\n    [∀ b : β, fintype <| stabilizer α b] :\n    fintype.card β =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (fintype.card α / fintype.card (stabilizer α ω.out')) :=\n  card_eq_sum_card_group_div_card_stabilizer' α β quotient.out_eq'\n#align card_eq_sum_card_group_div_card_stabilizer card_eq_sum_card_group_div_card_stabilizer\n\n"}