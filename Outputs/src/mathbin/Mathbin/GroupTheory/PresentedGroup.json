{"unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\ntheorem to_group.unique (g : «expr →* » (PresentedGroup rels) G) (hg : ∀ x : α, g (of x) = f x) :\n    ∀ {x}, g x = toGroup h x := fun x =>\n  QuotientGroup.induction_on x fun _ => FreeGroup.lift.unique (g.comp (QuotientGroup.mk' _)) hg\n#align to_group.unique to_group.unique\n\n",
 "to_group_eq_one_of_mem_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\ntheorem to_group_eq_one_of_mem_closure : ∀ x ∈ Subgroup.normalClosure rels, (exprF) x = 1 := fun x w =>\n  (MonoidHom.mem_ker _).1 <| closure_rels_subset_ker h w\n#align to_group_eq_one_of_mem_closure to_group_eq_one_of_mem_closure\n\n",
 "of":
 "@[simp]\ntheorem to_group.of {x : α} : toGroup h (of x) = f x :=\n  FreeGroup.lift.of\n#align to_group.of to_group.of\n\n",
 "closure_rels_subset_ker":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/-\nCopyright (c) 2019 Michael Howes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Michael Howes\n-/\n/-\nPresented groups satisfy a universal property. If `G` is a group and `f : α → G` is a map such that\nthe images of `f` satisfy all the given relations, then `f` extends uniquely to a group homomorphism\nfrom `presented_group rels` to `G`.\n-/\ntheorem closure_rels_subset_ker : Subgroup.normalClosure rels ≤ MonoidHom.ker (exprF) :=\n  Subgroup.normalClosure_le_normal fun x w => (MonoidHom.mem_ker _).2 (h x w)\n#align closure_rels_subset_ker closure_rels_subset_ker\n\n"}