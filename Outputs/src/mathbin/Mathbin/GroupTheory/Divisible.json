{"surjective_pow":
 "#print RootableBy.surjective_pow /-\n@[to_additive DivisibleBy.surjective_smul]\ntheorem RootableBy.surjective_pow (A α : Type _) [Monoid A] [Pow A α] [Zero α] [RootableBy A α] {n : α} (hn : n ≠ 0) :\n    function.surjective fun a : A => a ^ n := fun a => ⟨rootable_by.root a n, rootable_by.root_cancel a hn⟩\n#align rootable_by.surjective_pow RootableBy.surjective_pow\n#align divisible_by.surjective_smul DivisibleBy.surjective_smul\n-/\n\n",
 "smul_top_eq_top_of_divisible_by_int":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem smul_top_eq_top_of_divisible_by_int [DivisibleBy A ℤ] {n : ℤ} (hn : n ≠ 0) :\n    «expr • » n («expr⊤» : AddSubgroup A) = «expr⊤» :=\n  AddSubgroup.map_top_of_surjective _ fun a => ⟨divisible_by.div a n, divisible_by.div_cancel _ hn⟩\n#align smul_top_eq_top_of_divisible_by_int smul_top_eq_top_of_divisible_by_int\n\n",
 "pow_left_surj_of_rootableBy":
 "#print pow_left_surj_of_rootableBy /-\n/-\nCopyright (c) 2022 Jujian Zhang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jujian Zhang\n-/\n@[to_additive smul_right_surj_of_divisibleBy]\ntheorem pow_left_surj_of_rootableBy [RootableBy A α] {n : α} (hn : n ≠ 0) :\n    function.surjective (fun a => pow a n : A → A) := fun x => ⟨rootable_by.root x n, rootable_by.root_cancel _ hn⟩\n#align pow_left_surj_of_rootable_by pow_left_surj_of_rootableBy\n#align smul_right_surj_of_divisible_by smul_right_surj_of_divisibleBy\n-/\n\n"}