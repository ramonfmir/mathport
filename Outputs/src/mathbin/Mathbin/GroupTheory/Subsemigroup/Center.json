{"zero_mem_center":
 "@[simp]\ntheorem zero_mem_center [MulZeroClass M] : (0 : M) ∈ Set.center M := by simp [mem_center_iff]\n#align zero_mem_center zero_mem_center\n\n",
 "subset_center_units":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n@[to_additive subset_add_center_add_units]\ntheorem subset_center_units [Monoid M] : «expr ⁻¹' » (coe : «expr ˣ» M → M) (center M) ⊆ Set.center («expr ˣ» M) :=\n  fun a ha b => Units.ext <| ha _\n#align subset_center_units subset_center_units\n\n",
 "one_mem_center":
 "@[simp, to_additive zero_mem_add_center]\ntheorem one_mem_center [MulOneClass M] : (1 : M) ∈ Set.center M := by simp [mem_center_iff]\n#align one_mem_center one_mem_center\n\n",
 "neg_mem_center":
 "@[simp]\ntheorem neg_mem_center [Ring M] {a : M} (ha : a ∈ Set.center M) : -a ∈ Set.center M := fun c => by\n  rw [← neg_mul_comm, ha (-c), neg_mul_comm]\n#align neg_mem_center neg_mem_center\n\n",
 "mul_mem_center":
 "@[simp, to_additive add_mem_add_center]\ntheorem mul_mem_center [Semigroup M] {a b : M} (ha : a ∈ Set.center M) (hb : b ∈ Set.center M) : a * b ∈ Set.center M :=\n  fun g => by rw [mul_assoc, ← hb g, ← mul_assoc, ha g, mul_assoc]\n#align mul_mem_center mul_mem_center\n\n",
 "mem_center_iff":
 "@[to_additive]\ntheorem mem_center_iff {z : M} : z ∈ center M ↔ ∀ g, g * z = z * g :=\n  iff.rfl\n#align mem_center_iff mem_center_iff\n\n",
 "inv_mem_center₀":
 "@[simp]\ntheorem inv_mem_center₀ [GroupWithZero M] {a : M} (ha : a ∈ Set.center M) : a⁻¹ ∈ Set.center M :=\n  by\n  obtain rfl | ha0 := eq_or_ne a 0\n  · rw [inv_zero]\n    exact zero_mem_center M\n  rcases IsUnit.mk0 _ ha0 with ⟨a, rfl⟩\n  rw [← Units.val_inv_eq_inv_val]\n  exact center_units_subset (inv_mem_center (subset_center_units ha))\n#align inv_mem_center₀ inv_mem_center₀\n\n",
 "inv_mem_center":
 "@[simp, to_additive neg_mem_add_center]\ntheorem inv_mem_center [Group M] {a : M} (ha : a ∈ Set.center M) : a⁻¹ ∈ Set.center M := fun g => by\n  rw [← inv_inj, mul_inv_rev, inv_inv, ← ha, mul_inv_rev, inv_inv]\n#align inv_mem_center inv_mem_center\n\n",
 "div_mem_center₀":
 "@[simp]\ntheorem div_mem_center₀ [GroupWithZero M] {a b : M} (ha : a ∈ Set.center M) (hb : b ∈ Set.center M) :\n    a / b ∈ Set.center M := by\n  rw [div_eq_mul_inv]\n  exact mul_mem_center ha (inv_mem_center₀ hb)\n#align div_mem_center₀ div_mem_center₀\n\n",
 "div_mem_center":
 "@[simp, to_additive sub_mem_add_center]\ntheorem div_mem_center [Group M] {a b : M} (ha : a ∈ Set.center M) (hb : b ∈ Set.center M) : a / b ∈ Set.center M :=\n  by\n  rw [div_eq_mul_inv]\n  exact mul_mem_center ha (inv_mem_center hb)\n#align div_mem_center div_mem_center\n\n",
 "coe_center":
 "@[to_additive]\ntheorem coe_center : ↑(center M) = Set.center M :=\n  rfl\n#align coe_center coe_center\n\n",
 "center_units_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\ntheorem center_units_subset [GroupWithZero M] :\n    Set.center («expr ˣ» M) ⊆ «expr ⁻¹' » (coe : «expr ˣ» M → M) (center M) := fun a ha b =>\n  by\n  obtain rfl | hb := eq_or_ne b 0\n  · rw [MulZeroClass.zero_mul, MulZeroClass.mul_zero]\n  · exact units.ext_iff.mp (ha (Units.mk0 _ hb))\n#align center_units_subset center_units_subset\n\n",
 "center_units_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/-- In a group with zero, the center of the units is the preimage of the center. -/\ntheorem center_units_eq [GroupWithZero M] : Set.center («expr ˣ» M) = «expr ⁻¹' » (coe : «expr ˣ» M → M) (center M) :=\n  Subset.antisymm center_units_subset subset_center_units\n#align center_units_eq center_units_eq\n\n",
 "center_eq_univ":
 "@[simp, to_additive add_center_eq_univ]\ntheorem center_eq_univ [CommSemigroup M] : center M = Set.univ :=\n  Subset.antisymm (subset_univ _) fun x _ y => mul_comm y x\n#align center_eq_univ center_eq_univ\n\n",
 "center_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[to_additive, simp]\ntheorem center_eq_top : center M = «expr⊤» :=\n  SetLike.coe_injective (Set.center_eq_univ M)\n#align center_eq_top center_eq_top\n\n",
 "add_mem_center":
 "@[simp]\ntheorem add_mem_center [Distrib M] {a b : M} (ha : a ∈ Set.center M) (hb : b ∈ Set.center M) : a + b ∈ Set.center M :=\n  fun c => by rw [add_mul, mul_add, ha c, hb c]\n#align add_mem_center add_mem_center\n\n"}