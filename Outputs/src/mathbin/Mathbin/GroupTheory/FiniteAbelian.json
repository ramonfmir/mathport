{"finite_of_fg_torsion":
 "theorem finite_of_fg_torsion [CommGroup G] [Group.Fg G] (hG : monoid.is_torsion G) : Finite G :=\n  @Finite.of_equiv _ _ (add_comm_group.finite_of_fg_torsion (Additive G) hG) Multiplicative.ofAdd\n#align finite_of_fg_torsion finite_of_fg_torsion\n\n",
 "equiv_free_prod_direct_sum_zmod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/-- **Structure theorem of finitely generated abelian groups** : Any finitely generated abelian\ngroup is the product of a power of `ℤ` and a direct sum of some `zmod (p i ^ e i)` for some\nprime powers `p i ^ e i`. -/\ntheorem equiv_free_prod_direct_sum_zmod [hG : AddGroup.Fg G] :\n    ∃ (n : ℕ)(ι : Type)(_ : Fintype ι)(p : ι → ℕ)(_ : ∀ i, Nat.Prime <| p i)(e : ι → ℕ),\n      Nonempty <|\n        «expr ≃+ » G\n          («expr →₀ » (Fin n) ℤ ×\n            direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\"\n              (ZMod (p i ^ e i))) :=\n  by\n  obtain ⟨n, ι, fι, p, hp, e, ⟨f⟩⟩ :=\n    @module.equiv_free_prod_direct_sum _ _ _ _ _ _ _ (module.finite.iff_add_group_fg.mpr hG)\n  refine' ⟨n, ι, fι, fun i => (p i).nat_abs, fun i => _, e, ⟨_⟩⟩\n  · rw [← Int.prime_iff_natAbs_prime, ← GCDMonoid.irreducible_iff_prime]\n    exact hp i\n  exact\n    f.to_add_equiv.trans\n      ((AddEquiv.refl _).prod_congr <|\n        Dfinsupp.mapRange.addEquiv fun i =>\n          ((int.quotient_span_equiv_zmod _).trans <| ZMod.ringEquivCongr <| (p i).nat_abs_pow _).to_add_equiv)\n#align equiv_free_prod_direct_sum_zmod equiv_free_prod_direct_sum_zmod\n\n",
 "equiv_direct_sum_zmod_of_fintype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/-- **Structure theorem of finite abelian groups** : Any finite abelian group is a direct sum of\nsome `zmod (p i ^ e i)` for some prime powers `p i ^ e i`. -/\ntheorem equiv_direct_sum_zmod_of_fintype [Finite G] :\n    ∃ (ι : Type)(_ : Fintype ι)(p : ι → ℕ)(_ : ∀ i, Nat.Prime <| p i)(e : ι → ℕ),\n      Nonempty <|\n        «expr ≃+ » G\n          (direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\"\n            (ZMod (p i ^ e i))) :=\n  by\n  cases nonempty_fintype G\n  obtain ⟨n, ι, fι, p, hp, e, ⟨f⟩⟩ := equiv_free_prod_direct_sum_zmod G\n  cases n\n  · exact ⟨ι, fι, p, hp, e, ⟨f.trans AddEquiv.uniqueProd⟩⟩\n  · haveI := @Fintype.prodLeft _ _ _ (Fintype.ofEquiv G f.to_equiv) _\n    exact\n      (Fintype.ofSurjective (fun f : «expr →₀ » (Fin n.succ) ℤ => f 0) fun a =>\n            ⟨Finsupp.single 0 a, Finsupp.single_eq_same⟩).false.elim\n#align equiv_direct_sum_zmod_of_fintype equiv_direct_sum_zmod_of_fintype\n\n"}