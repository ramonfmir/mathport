{"thickened_indicator_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_zero {δ : exprℝ} (δ_pos : 0 < δ) (E : Set α) {x : α} (x_out : x ∉ thickening δ E) :\n    thickened_indicator δ_pos E x = 0 := by\n  rw [thickened_indicator_apply, thickened_indicator_aux_zero δ_pos E x_out, zero_to_nnreal]\n#align thickened_indicator_zero thickened_indicator_zero\n\n",
 "thickened_indicator_tendsto_indicator_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `bounded_continuous_function -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/-- As the thickening radius δ tends to 0, the δ-thickened indicator of a set E (in α) tends\npointwise to the indicator function of the closure of E.\n\nNote: This version is for the bundled bounded continuous functions, but the topology is not\nthe topology on `α →ᵇ ℝ≥0`. Coercions to functions `α → ℝ≥0` are done first, so the topology\ninstance is the product topology (the topology of pointwise convergence). -/\ntheorem thickened_indicator_tendsto_indicator_closure {δseq : ℕ → exprℝ} (δseq_pos : ∀ n, 0 < δseq n)\n    (δseq_lim : Tendsto δseq atTop ((nhds) 0)) (E : Set α) :\n    Tendsto\n      (fun n : ℕ => (coe_fn : bounded_continuous_function α (nnreal) → α → nnreal) (thickened_indicator (δseq_pos n) E))\n      atTop ((nhds) (indicator (closure E) fun x => (1 : nnreal))) :=\n  by\n  have key := thickened_indicator_aux_tendsto_indicator_closure δseq_lim E\n  rw [tendsto_pi_nhds] at *\n  intro x\n  rw [show\n      indicator (closure E) (fun x => (1 : nnreal)) x = (indicator (closure E) (fun x => (1 : ennreal)) x).to_nnreal by\n      refine' (congr_fun (comp_indicator_const 1 ENNReal.toNNReal zero_to_nnreal) x).symm]\n  refine' tendsto.comp (tendsto_to_nnreal _) (key x)\n  by_cases x_mem : x ∈ closure E <;> simp [x_mem]\n#align thickened_indicator_tendsto_indicator_closure thickened_indicator_tendsto_indicator_closure\n\n",
 "thickened_indicator_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem thickened_indicator_subset {δ : exprℝ} (δ_pos : 0 < δ) {E₁ E₂ : Set α} (subset : E₁ ⊆ E₂) :\n    «expr⇑ » (thickened_indicator δ_pos E₁) ≤ thickened_indicator δ_pos E₂ := fun x =>\n  (toNNReal_le_toNNReal thickened_indicator_aux_lt_top.ne thickened_indicator_aux_lt_top.ne).mpr\n    (thickened_indicator_aux_subset δ subset x)\n#align thickened_indicator_subset thickened_indicator_subset\n\n",
 "thickened_indicator_one_of_mem_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_one_of_mem_closure {δ : exprℝ} (δ_pos : 0 < δ) (E : Set α) {x : α} (x_mem : x ∈ closure E) :\n    thickened_indicator δ_pos E x = 1 := by\n  rw [thickened_indicator_apply, thickened_indicator_aux_one_of_mem_closure δ E x_mem, one_to_nnreal]\n#align thickened_indicator_one_of_mem_closure thickened_indicator_one_of_mem_closure\n\n",
 "thickened_indicator_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_one {δ : exprℝ} (δ_pos : 0 < δ) (E : Set α) {x : α} (x_in_E : x ∈ E) :\n    thickened_indicator δ_pos E x = 1 :=\n  thickened_indicator_one_of_mem_closure _ _ (subset_closure x_in_E)\n#align thickened_indicator_one thickened_indicator_one\n\n",
 "thickened_indicator_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem thickened_indicator_mono {δ₁ δ₂ : exprℝ} (δ₁_pos : 0 < δ₁) (δ₂_pos : 0 < δ₂) (hle : δ₁ ≤ δ₂) (E : Set α) :\n    «expr⇑ » (thickened_indicator δ₁_pos E) ≤ thickened_indicator δ₂_pos E :=\n  by\n  intro x\n  apply (to_nnreal_le_to_nnreal thickened_indicator_aux_lt_top.ne thickened_indicator_aux_lt_top.ne).mpr\n  apply thickened_indicator_aux_mono hle\n#align thickened_indicator_mono thickened_indicator_mono\n\n",
 "thickened_indicator_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_le_one {δ : exprℝ} (δ_pos : 0 < δ) (E : Set α) (x : α) :\n    thickened_indicator δ_pos E x ≤ 1 :=\n  by\n  rw [thickened_indicator.coe_fn_eq_comp]\n  simpa using\n    (to_nnreal_le_to_nnreal thickened_indicator_aux_lt_top.ne one_ne_top).mpr (thickened_indicator_aux_le_one δ E x)\n#align thickened_indicator_le_one thickened_indicator_le_one\n\n",
 "thickened_indicator_aux_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_aux_zero {δ : exprℝ} (δ_pos : 0 < δ) (E : Set α) {x : α} (x_out : x ∉ thickening δ E) :\n    thickened_indicator_aux δ E x = 0 :=\n  by\n  rw [thickening, mem_set_of_eq, not_lt] at x_out\n  unfold thickened_indicator_aux\n  apply le_antisymm _ bot_le\n  have key := tsub_le_tsub (@rfl _ (1 : ennreal)).le (ENNReal.div_le_div x_out rfl.le)\n  rw [ENNReal.div_self (ne_of_gt (ennreal.of_real_pos.mpr δ_pos)) of_real_ne_top] at key\n  simpa using key\n#align thickened_indicator_aux_zero thickened_indicator_aux_zero\n\n",
 "thickened_indicator_aux_tendsto_indicator_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/-- As the thickening radius δ tends to 0, the δ-thickened indicator of a set E (in α) tends\npointwise (i.e., w.r.t. the product topology on `α → ℝ≥0∞`) to the indicator function of the\nclosure of E.\n\nThis statement is for the unbundled `ℝ≥0∞`-valued functions `thickened_indicator_aux δ E`, see\n`thickened_indicator_tendsto_indicator_closure` for the version for bundled `ℝ≥0`-valued\nbounded continuous functions. -/\ntheorem thickened_indicator_aux_tendsto_indicator_closure {δseq : ℕ → exprℝ} (δseq_lim : Tendsto δseq atTop ((nhds) 0))\n    (E : Set α) :\n    Tendsto (fun n => thickened_indicator_aux (δseq n) E) atTop\n      ((nhds) (indicator (closure E) fun x => (1 : ennreal))) :=\n  by\n  rw [tendsto_pi_nhds]\n  intro x\n  by_cases x_mem_closure : x ∈ closure E\n  · simp_rw [thickened_indicator_aux_one_of_mem_closure _ E x_mem_closure]\n    rw [show (indicator (closure E) fun _ => (1 : ennreal)) x = 1 by simp only [x_mem_closure, indicator_of_mem]]\n    exact tendsto_const_nhds\n  · rw [show (closure E).indicator (fun _ => (1 : ennreal)) x = 0 by\n        simp only [x_mem_closure, indicator_of_not_mem, not_false_iff]]\n    rcases exists_real_pos_lt_inf_edist_of_not_mem_closure x_mem_closure with ⟨ε, ⟨ε_pos, ε_lt⟩⟩\n    rw [Metric.tendsto_nhds] at δseq_lim\n    specialize δseq_lim ε ε_pos\n    simp only [dist_zero_right, Real.norm_eq_abs, eventually_at_top, ge_iff_le] at δseq_lim\n    rcases δseq_lim with ⟨N, hN⟩\n    apply @tendsto_atTop_of_eventually_const _ _ _ _ _ _ _ N\n    intro n n_large\n    have key : x ∉ thickening ε E := by simpa only [thickening, mem_set_of_eq, not_lt] using ε_lt.le\n    refine' le_antisymm _ bot_le\n    apply (thickened_indicator_aux_mono (lt_of_abs_lt (hN n n_large)).le E x).trans\n    exact (thickened_indicator_aux_zero ε_pos E key).le\n#align thickened_indicator_aux_tendsto_indicator_closure thickened_indicator_aux_tendsto_indicator_closure\n\n",
 "thickened_indicator_aux_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_aux_subset (δ : exprℝ) {E₁ E₂ : Set α} (subset : E₁ ⊆ E₂) :\n    thickened_indicator_aux δ E₁ ≤ thickened_indicator_aux δ E₂ := fun _ =>\n  tsub_le_tsub (@rfl (ennreal) 1).le (ENNReal.div_le_div (infEdist_anti subset) rfl.le)\n#align thickened_indicator_aux_subset thickened_indicator_aux_subset\n\n",
 "thickened_indicator_aux_one_of_mem_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_aux_one_of_mem_closure (δ : exprℝ) (E : Set α) {x : α} (x_mem : x ∈ closure E) :\n    thickened_indicator_aux δ E x = 1 := by\n  rw [← thickened_indicator_aux_closure_eq, thickened_indicator_aux_one δ (closure E) x_mem]\n#align thickened_indicator_aux_one_of_mem_closure thickened_indicator_aux_one_of_mem_closure\n\n",
 "thickened_indicator_aux_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_aux_one (δ : exprℝ) (E : Set α) {x : α} (x_in_E : x ∈ E) :\n    thickened_indicator_aux δ E x = 1 := by simp [thickened_indicator_aux, inf_edist_zero_of_mem x_in_E, tsub_zero]\n#align thickened_indicator_aux_one thickened_indicator_aux_one\n\n",
 "thickened_indicator_aux_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_aux_mono {δ₁ δ₂ : exprℝ} (hle : δ₁ ≤ δ₂) (E : Set α) :\n    thickened_indicator_aux δ₁ E ≤ thickened_indicator_aux δ₂ E := fun _ =>\n  tsub_le_tsub (@rfl (ennreal) 1).le (ENNReal.div_le_div rfl.le (ofReal_le_ofReal hle))\n#align thickened_indicator_aux_mono thickened_indicator_aux_mono\n\n",
 "thickened_indicator_aux_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem thickened_indicator_aux_lt_top {δ : exprℝ} {E : Set α} {x : α} : thickened_indicator_aux δ E x < ennreal.top :=\n  lt_of_le_of_lt (thickened_indicator_aux_le_one _ _ _) one_lt_top\n#align thickened_indicator_aux_lt_top thickened_indicator_aux_lt_top\n\n",
 "thickened_indicator_aux_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_aux_le_one (δ : exprℝ) (E : Set α) (x : α) : thickened_indicator_aux δ E x ≤ 1 := by\n  apply @tsub_le_self _ _ _ _ (1 : ennreal)\n#align thickened_indicator_aux_le_one thickened_indicator_aux_le_one\n\n",
 "thickened_indicator_aux_closure_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem thickened_indicator_aux_closure_eq (δ : exprℝ) (E : Set α) :\n    thickened_indicator_aux δ (closure E) = thickened_indicator_aux δ E := by\n  simp_rw [thickened_indicator_aux, inf_edist_closure]\n#align thickened_indicator_aux_closure_eq thickened_indicator_aux_closure_eq\n\n",
 "indicator_le_thickened_indicator_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem indicator_le_thickened_indicator_aux (δ : exprℝ) (E : Set α) :\n    (E.indicator fun _ => (1 : ennreal)) ≤ thickened_indicator_aux δ E :=\n  by\n  intro a\n  by_cases a ∈ E\n  · simp only [h, indicator_of_mem, thickened_indicator_aux_one δ E h, le_refl]\n  · simp only [h, indicator_of_not_mem, not_false_iff, zero_le]\n#align indicator_le_thickened_indicator_aux indicator_le_thickened_indicator_aux\n\n",
 "indicator_le_thickened_indicator":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\ntheorem indicator_le_thickened_indicator {δ : exprℝ} (δ_pos : 0 < δ) (E : Set α) :\n    (E.indicator fun _ => (1 : nnreal)) ≤ thickened_indicator δ_pos E :=\n  by\n  intro a\n  by_cases a ∈ E\n  · simp only [h, indicator_of_mem, thickened_indicator_one δ_pos E h, le_refl]\n  · simp only [h, indicator_of_not_mem, not_false_iff, zero_le]\n#align indicator_le_thickened_indicator indicator_le_thickened_indicator\n\n",
 "continuous_thickened_indicator_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2022 Kalle Kytölä. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kalle Kytölä\n-/\ntheorem continuous_thickened_indicator_aux {δ : exprℝ} (δ_pos : 0 < δ) (E : Set α) :\n    Continuous (thickened_indicator_aux δ E) :=\n  by\n  unfold thickened_indicator_aux\n  let f := fun x : α => (⟨1, inf_edist x E / ENNReal.ofReal δ⟩ : nnreal × ennreal)\n  let sub := fun p : nnreal × ennreal => (p.1 : ennreal) - p.2\n  rw [show (fun x : α => (1 : ennreal) - inf_edist x E / ENNReal.ofReal δ) = sub ∘ f by rfl]\n  apply (@ENNReal.continuous_nnreal_sub 1).comp\n  apply (ENNReal.continuous_div_const (ENNReal.ofReal δ) _).comp continuous_inf_edist\n  norm_num [δ_pos]\n#align continuous_thickened_indicator_aux continuous_thickened_indicator_aux\n\n",
 "coe_fn_eq_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem thickened_indicator.coe_fn_eq_comp {δ : exprℝ} (δ_pos : 0 < δ) (E : Set α) :\n    «expr⇑ » (thickened_indicator δ_pos E) = ENNReal.toNNReal ∘ thickened_indicator_aux δ E :=\n  rfl\n#align thickened_indicator.coe_fn_eq_comp thickened_indicator.coe_fn_eq_comp\n\n"}