{"smul_sphere":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print smul_sphere /-\n@[simp, to_additive]\ntheorem smul_sphere (c : G) (x : X) (r : exprℝ) : «expr • » c (sphere x r) = sphere («expr • » c x) r :=\n  (IsometryEquiv.constSMul c).image_sphere _ _\n#align smul_sphere smul_sphere\n-/\n\n",
 "smul_closedBall":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print smul_closedBall /-\n@[simp, to_additive]\ntheorem smul_closedBall (c : G) (x : X) (r : exprℝ) : «expr • » c (closedBall x r) = closedBall («expr • » c x) r :=\n  (IsometryEquiv.constSMul c).image_closed_ball _ _\n#align smul_closed_ball smul_closedBall\n-/\n\n",
 "smul_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print smul_ball /-\n@[simp, to_additive]\ntheorem smul_ball (c : G) (x : X) (r : exprℝ) : «expr • » c (ball x r) = ball («expr • » c x) r :=\n  (IsometryEquiv.constSMul c).image_ball _ _\n#align smul_ball smul_ball\n-/\n\n",
 "preimage_smul_sphere":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, to_additive]\ntheorem preimage_smul_sphere (c : G) (x : X) (r : exprℝ) :\n    «expr ⁻¹' » ((«expr • » · ·) c) (sphere x r) = sphere («expr • » c⁻¹ x) r := by rw [preimage_smul, smul_sphere]\n#align preimage_smul_sphere preimage_smul_sphere\n\n",
 "preimage_smul_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, to_additive]\ntheorem preimage_smul_closed_ball (c : G) (x : X) (r : exprℝ) :\n    «expr ⁻¹' » ((«expr • » · ·) c) (closedBall x r) = closedBall («expr • » c⁻¹ x) r := by\n  rw [preimage_smul, smul_closedBall]\n#align preimage_smul_closed_ball preimage_smul_closed_ball\n\n",
 "preimage_smul_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, to_additive]\ntheorem preimage_smul_ball (c : G) (x : X) (r : exprℝ) :\n    «expr ⁻¹' » ((«expr • » · ·) c) (ball x r) = ball («expr • » c⁻¹ x) r := by rw [preimage_smul, smul_ball]\n#align preimage_smul_ball preimage_smul_ball\n\n",
 "preimage_mul_right_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp, to_additive]\ntheorem preimage_mul_right_closed_ball [IsometricSMul («expr ᵐᵒᵖ» G) G] (a b : G) (r : exprℝ) :\n    «expr ⁻¹' » (fun x => x * a) (closedBall b r) = closedBall (b / a) r :=\n  by\n  rw [div_eq_mul_inv]\n  exact preimage_smul_closed_ball (MulOpposite.op a) b r\n#align preimage_mul_right_closed_ball preimage_mul_right_closed_ball\n\n",
 "preimage_mul_right_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp, to_additive]\ntheorem preimage_mul_right_ball [IsometricSMul («expr ᵐᵒᵖ» G) G] (a b : G) (r : exprℝ) :\n    «expr ⁻¹' » (fun x => x * a) (ball b r) = ball (b / a) r :=\n  by\n  rw [div_eq_mul_inv]\n  exact preimage_smul_ball (MulOpposite.op a) b r\n#align preimage_mul_right_ball preimage_mul_right_ball\n\n",
 "preimage_mul_left_closed_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp, to_additive]\ntheorem preimage_mul_left_closed_ball [IsometricSMul G G] (a b : G) (r : exprℝ) :\n    «expr ⁻¹' » ((· * ·) a) (closedBall b r) = closedBall (a⁻¹ * b) r :=\n  preimage_smul_closedBall a b r\n#align preimage_mul_left_closed_ball preimage_mul_left_closed_ball\n\n",
 "preimage_mul_left_ball":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp, to_additive]\ntheorem preimage_mul_left_ball [IsometricSMul G G] (a b : G) (r : exprℝ) :\n    «expr ⁻¹' » ((· * ·) a) (ball b r) = ball (a⁻¹ * b) r :=\n  preimage_smul_ball a b r\n#align preimage_mul_left_ball preimage_mul_left_ball\n\n",
 "nndist_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print nndist_smul /-\n@[simp, to_additive]\ntheorem nndist_smul [PseudoMetricSpace X] [SMul M X] [IsometricSMul M X] (c : M) (x y : X) :\n    nndist («expr • » c x) («expr • » c y) = nndist x y :=\n  (isometry_smul X c).nndist_eq x y\n#align nndist_smul nndist_smul\n#align nndist_vadd nndist_vadd\n-/\n\n",
 "nndist_mul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print nndist_mul_right /-\n@[simp, to_additive]\ntheorem nndist_mul_right [PseudoMetricSpace M] [Mul M] [IsometricSMul («expr ᵐᵒᵖ» M) M] (a b c : M) :\n    nndist (a * c) (b * c) = nndist a b :=\n  nndist_smul (MulOpposite.op c) a b\n#align nndist_mul_right nndist_mul_right\n#align nndist_add_right nndist_add_right\n-/\n\n",
 "nndist_mul_left":
 "#print nndist_mul_left /-\n@[simp, to_additive]\ntheorem nndist_mul_left [PseudoMetricSpace M] [Mul M] [IsometricSMul M M] (a b c : M) :\n    nndist (a * b) (a * c) = nndist b c :=\n  nndist_smul a b c\n#align nndist_mul_left nndist_mul_left\n#align nndist_add_left nndist_add_left\n-/\n\n",
 "nndist_inv_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print nndist_inv_inv /-\n@[simp, to_additive]\ntheorem nndist_inv_inv [Group G] [PseudoMetricSpace G] [IsometricSMul G G] [IsometricSMul («expr ᵐᵒᵖ» G) G] (a b : G) :\n    nndist a⁻¹ b⁻¹ = nndist a b :=\n  (IsometryEquiv.inv G).nndist_eq a b\n#align nndist_inv_inv nndist_inv_inv\n#align nndist_neg_neg nndist_neg_neg\n-/\n\n",
 "nndist_div_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print nndist_div_right /-\n@[simp, to_additive]\ntheorem nndist_div_right [DivInvMonoid M] [PseudoMetricSpace M] [IsometricSMul («expr ᵐᵒᵖ» M) M] (a b c : M) :\n    nndist (a / c) (b / c) = nndist a b := by simp only [div_eq_mul_inv, nndist_mul_right]\n#align nndist_div_right nndist_div_right\n#align nndist_sub_right nndist_sub_right\n-/\n\n",
 "nndist_div_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print nndist_div_left /-\n@[simp, to_additive]\ntheorem nndist_div_left [Group G] [PseudoMetricSpace G] [IsometricSMul G G] [IsometricSMul («expr ᵐᵒᵖ» G) G]\n    (a b c : G) : nndist (a / b) (a / c) = nndist b c := by simp [div_eq_mul_inv]\n#align nndist_div_left nndist_div_left\n#align nndist_sub_left nndist_sub_left\n-/\n\n",
 "mul_right_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n--ext $ λ y, rfl\n@[simp, to_additive]\ntheorem mul_right_symm [IsometricSMul («expr ᵐᵒᵖ» G) G] (x : G) : (mulRight x).symm = mulRight x⁻¹ :=\n  ext fun y => rfl\n#align mul_right_symm mul_right_symm\n\n",
 "mul_left_symm":
 "@[simp, to_additive]\ntheorem mul_left_symm [IsometricSMul G G] (x : G) : (mulLeft x).symm = IsometryEquiv.mulLeft x⁻¹ :=\n  constSMul_symm x\n#align mul_left_symm mul_left_symm\n\n",
 "isometry_mul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print isometry_mul_right /-\n@[to_additive]\ntheorem isometry_mul_right [Mul M] [PseudoEMetricSpace M] [IsometricSMul («expr ᵐᵒᵖ» M) M] (a : M) :\n    Isometry fun x => x * a :=\n  isometry_smul M (MulOpposite.op a)\n#align isometry_mul_right isometry_mul_right\n#align isometry_add_right isometry_add_right\n-/\n\n",
 "isometry_mul_left":
 "#print isometry_mul_left /-\n@[to_additive]\ntheorem isometry_mul_left [Mul M] [PseudoEMetricSpace M] [IsometricSMul M M] (a : M) : Isometry ((· * ·) a) :=\n  isometry_smul M a\n#align isometry_mul_left isometry_mul_left\n#align isometry_add_left isometry_add_left\n-/\n\n",
 "isometry_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print isometry_inv /-\n@[to_additive]\ntheorem isometry_inv [PseudoEMetricSpace G] [IsometricSMul G G] [IsometricSMul («expr ᵐᵒᵖ» G) G] :\n    Isometry (has_inv.inv : G → G) :=\n  edist_inv_inv\n#align isometry_inv isometry_inv\n#align isometry_neg isometry_neg\n-/\n\n",
 "inv_symm":
 "@[simp, to_additive]\ntheorem inv_symm : (inv G).symm = inv G :=\n  rfl\n#align inv_symm inv_symm\n\n",
 "edist_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print edist_smul_left /-\n/-\nCopyright (c) 2022 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\n@[simp, to_additive]\ntheorem edist_smul_left [SMul M X] [IsometricSMul M X] (c : M) (x y : X) :\n    edist («expr • » c x) («expr • » c y) = edist x y :=\n  isometry_smul X c x y\n#align edist_smul_left edist_smul_left\n#align edist_vadd_left edist_vadd_left\n-/\n\n",
 "edist_mul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print edist_mul_right /-\n@[simp, to_additive]\ntheorem edist_mul_right [Mul M] [PseudoEMetricSpace M] [IsometricSMul («expr ᵐᵒᵖ» M) M] (a b c : M) :\n    edist (a * c) (b * c) = edist a b :=\n  isometry_mul_right c a b\n#align edist_mul_right edist_mul_right\n#align edist_add_right edist_add_right\n-/\n\n",
 "edist_mul_left":
 "#print edist_mul_left /-\n@[simp, to_additive]\ntheorem edist_mul_left [Mul M] [PseudoEMetricSpace M] [IsometricSMul M M] (a b c : M) :\n    edist (a * b) (a * c) = edist b c :=\n  isometry_mul_left a b c\n#align edist_mul_left edist_mul_left\n#align edist_add_left edist_add_left\n-/\n\n",
 "edist_inv_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print edist_inv_inv /-\n@[simp, to_additive]\ntheorem edist_inv_inv [PseudoEMetricSpace G] [IsometricSMul G G] [IsometricSMul («expr ᵐᵒᵖ» G) G] (a b : G) :\n    edist a⁻¹ b⁻¹ = edist a b := by\n  rw [← edist_mul_left a, ← edist_mul_right _ _ b, mul_right_inv, one_mul, inv_mul_cancel_right, edist_comm]\n#align edist_inv_inv edist_inv_inv\n#align edist_neg_neg edist_neg_neg\n-/\n\n",
 "edist_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print edist_inv /-\n@[to_additive]\ntheorem edist_inv [PseudoEMetricSpace G] [IsometricSMul G G] [IsometricSMul («expr ᵐᵒᵖ» G) G] (x y : G) :\n    edist x⁻¹ y = edist x y⁻¹ := by rw [← edist_inv_inv, inv_inv]\n#align edist_inv edist_inv\n#align edist_neg edist_neg\n-/\n\n",
 "edist_div_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print edist_div_right /-\n@[simp, to_additive]\ntheorem edist_div_right [DivInvMonoid M] [PseudoEMetricSpace M] [IsometricSMul («expr ᵐᵒᵖ» M) M] (a b c : M) :\n    edist (a / c) (b / c) = edist a b := by simp only [div_eq_mul_inv, edist_mul_right]\n#align edist_div_right edist_div_right\n#align edist_sub_right edist_sub_right\n-/\n\n",
 "edist_div_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print edist_div_left /-\n@[simp, to_additive]\ntheorem edist_div_left [PseudoEMetricSpace G] [IsometricSMul G G] [IsometricSMul («expr ᵐᵒᵖ» G) G] (a b c : G) :\n    edist (a / b) (a / c) = edist b c := by rw [div_eq_mul_inv, div_eq_mul_inv, edist_mul_left, edist_inv_inv]\n#align edist_div_left edist_div_left\n#align edist_sub_left edist_sub_left\n-/\n\n",
 "div_right_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n@[simp, to_additive]\ntheorem div_right_symm [IsometricSMul («expr ᵐᵒᵖ» G) G] (c : G) : (divRight c).symm = mulRight c :=\n  ext fun y => rfl\n#align div_right_symm div_right_symm\n\n",
 "dist_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print dist_smul /-\n@[simp, to_additive]\ntheorem dist_smul [PseudoMetricSpace X] [SMul M X] [IsometricSMul M X] (c : M) (x y : X) :\n    dist («expr • » c x) («expr • » c y) = dist x y :=\n  (isometry_smul X c).dist_eq x y\n#align dist_smul dist_smul\n#align dist_vadd dist_vadd\n-/\n\n",
 "dist_mul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print dist_mul_right /-\n@[simp, to_additive]\ntheorem dist_mul_right [Mul M] [PseudoMetricSpace M] [IsometricSMul («expr ᵐᵒᵖ» M) M] (a b c : M) :\n    dist (a * c) (b * c) = dist a b :=\n  dist_smul (MulOpposite.op c) a b\n#align dist_mul_right dist_mul_right\n#align dist_add_right dist_add_right\n-/\n\n",
 "dist_mul_left":
 "#print dist_mul_left /-\n@[simp, to_additive]\ntheorem dist_mul_left [PseudoMetricSpace M] [Mul M] [IsometricSMul M M] (a b c : M) : dist (a * b) (a * c) = dist b c :=\n  dist_smul a b c\n#align dist_mul_left dist_mul_left\n#align dist_add_left dist_add_left\n-/\n\n",
 "dist_inv_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print dist_inv_inv /-\n@[simp, to_additive]\ntheorem dist_inv_inv [Group G] [PseudoMetricSpace G] [IsometricSMul G G] [IsometricSMul («expr ᵐᵒᵖ» G) G] (a b : G) :\n    dist a⁻¹ b⁻¹ = dist a b :=\n  (IsometryEquiv.inv G).dist_eq a b\n#align dist_inv_inv dist_inv_inv\n#align dist_neg_neg dist_neg_neg\n-/\n\n",
 "dist_div_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print dist_div_right /-\n@[simp, to_additive]\ntheorem dist_div_right [DivInvMonoid M] [PseudoMetricSpace M] [IsometricSMul («expr ᵐᵒᵖ» M) M] (a b c : M) :\n    dist (a / c) (b / c) = dist a b := by simp only [div_eq_mul_inv, dist_mul_right]\n#align dist_div_right dist_div_right\n#align dist_sub_right dist_sub_right\n-/\n\n",
 "dist_div_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n#print dist_div_left /-\n@[simp, to_additive]\ntheorem dist_div_left [Group G] [PseudoMetricSpace G] [IsometricSMul G G] [IsometricSMul («expr ᵐᵒᵖ» G) G] (a b c : G) :\n    dist (a / b) (a / c) = dist b c := by simp [div_eq_mul_inv]\n#align dist_div_left dist_div_left\n#align dist_sub_left dist_sub_left\n-/\n\n",
 "const_smul_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ᵢ » -/\n@[simp, to_additive]\ntheorem const_smul_symm (c : G) : (constSMul c : «expr ≃ᵢ » X X).symm = constSMul c⁻¹ :=\n  ext fun _ => rfl\n#align const_smul_symm const_smul_symm\n\n"}