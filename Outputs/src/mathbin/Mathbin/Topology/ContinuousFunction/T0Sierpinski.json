{"product_of_mem_opens_injective":
 "theorem product_of_mem_opens_injective [T0Space X] : function.injective (productOfMemOpens X) :=\n  by\n  intro x1 x2 h\n  apply Inseparable.eq\n  rw [← Inducing.inseparable_iff (product_of_mem_opens_inducing X), h]\n#align product_of_mem_opens_injective product_of_mem_opens_injective\n\n",
 "product_of_mem_opens_inducing":
 "theorem product_of_mem_opens_inducing : Inducing (productOfMemOpens X) :=\n  by\n  convert inducing_infᵢ_to_pi fun (u : opens X) (x : X) => x ∈ u\n  apply eq_induced_by_maps_to_sierpinski\n#align product_of_mem_opens_inducing product_of_mem_opens_inducing\n\n",
 "product_of_mem_opens_embedding":
 "theorem product_of_mem_opens_embedding [T0Space X] : Embedding (productOfMemOpens X) :=\n  embedding.mk (productOfMemOpens_inducing X) (productOfMemOpens_injective X)\n#align product_of_mem_opens_embedding product_of_mem_opens_embedding\n\n",
 "eq_induced_by_maps_to_sierpinski":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/-\nCopyright (c) 2022 Ivan Sadofschi Costa. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Ivan Sadofschi Costa\n-/\ntheorem eq_induced_by_maps_to_sierpinski (X : Type _) [t : TopologicalSpace X] :\n    t =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (sierpinskiSpace.induced (· ∈ u)) :=\n  by\n  apply le_antisymm\n  · rw [le_infᵢ_iff]\n    exact fun u => Continuous.le_induced (is_open_iff_continuous_mem.mp u.2)\n  · intro u h\n    rw [← generateFrom_unionᵢ_isOpen]\n    apply is_open_generate_from_of_mem\n    simp only [Set.mem_unionᵢ, Set.mem_setOf_eq, isOpen_induced_iff]\n    exact ⟨⟨u, h⟩, {True}, isOpen_singleton_true, by simp [Set.preimage]⟩\n#align eq_induced_by_maps_to_sierpinski eq_induced_by_maps_to_sierpinski\n\n"}