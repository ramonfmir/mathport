{"uniformity":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity -/\n#print Pi.uniformity /-\n/-\nCopyright (c) 2019 Patrick Massot. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Patrick Massot\n-/\ntheorem Pi.uniformity :\n    (uniformity) (∀ i, α i) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        ((Filter.comap fun a => (a.1 i, a.2 i)) <| (uniformity) (α i)) :=\n  infᵢ_uniformity\n#align Pi.uniformity Pi.uniformity\n-/\n\n",
 "uniformContinuous_proj":
 "#print Pi.uniformContinuous_proj /-\ntheorem Pi.uniformContinuous_proj (i : ι) : UniformContinuous fun a : ∀ i : ι, α i => a i :=\n  uniformContinuous_pi.1 uniformContinuous_id i\n#align Pi.uniform_continuous_proj Pi.uniformContinuous_proj\n-/\n\n",
 "uniformContinuous_pi":
 "#print uniformContinuous_pi /-\ntheorem uniformContinuous_pi {β : Type _} [UniformSpace β] {f : β → ∀ i, α i} :\n    UniformContinuous f ↔ ∀ i, UniformContinuous fun x => f x i := by\n  simp only [UniformContinuous, Pi.uniformity, tendsto_infi, tendsto_comap_iff]\n#align uniform_continuous_pi uniformContinuous_pi\n-/\n\n"}