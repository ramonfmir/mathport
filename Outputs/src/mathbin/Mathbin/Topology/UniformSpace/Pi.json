{"uniformity":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity -/\n/-\nCopyright (c) 2019 Patrick Massot. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Patrick Massot\n-/\ntheorem Pi.uniformity :\n    (uniformity) (∀ i, α i) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        ((filter.comap fun a => (a.1 i, a.2 i)) <| (uniformity) (α i)) :=\n  infi_uniformity\n#align Pi.uniformity Pi.uniformity\n\n",
 "uniform_continuous_proj":
 "theorem Pi.uniform_continuous_proj (i : ι) : uniform_continuous fun a : ∀ i : ι, α i => a i :=\n  uniform_continuous_pi.1 uniform_continuous_id i\n#align Pi.uniform_continuous_proj Pi.uniform_continuous_proj\n\n",
 "uniform_continuous_pi":
 "theorem uniform_continuous_pi {β : Type _} [uniform_space β] {f : β → ∀ i, α i} :\n    uniform_continuous f ↔ ∀ i, uniform_continuous fun x => f x i := by\n  simp only [uniform_continuous, Pi.uniformity, tendsto_infi, tendsto_comap_iff]\n#align uniform_continuous_pi uniform_continuous_pi\n\n"}