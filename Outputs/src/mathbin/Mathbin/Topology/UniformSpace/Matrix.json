{"uniformity":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity -/\n/-\nCopyright (c) 2022 Eric Wieser. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Eric Wieser, Heather Macbeth\n-/\ntheorem uniformity :\n    (uniformity) (matrix m n 𝕜) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (((uniformity) 𝕜).comap fun a => (a.1 i j, a.2 i j)) :=\n  by\n  erw [Pi.uniformity, Pi.uniformity]\n  simp_rw [filter.comap_infi, filter.comap_comap]\n  rfl\n#align uniformity uniformity\n\n",
 "uniform_continuous":
 "theorem uniform_continuous {β : Type _} [uniform_space β] {f : β → matrix m n 𝕜} :\n    uniform_continuous f ↔ ∀ i j, uniform_continuous fun x => f x i j := by\n  simp only [uniform_continuous, matrix.uniformity, filter.tendsto_infi, filter.tendsto_comap_iff]\n#align uniform_continuous uniform_continuous\n\n"}