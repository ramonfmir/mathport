{"uniformity":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uniformity -/\n#print uniformity /-\n/-\nCopyright (c) 2022 Eric Wieser. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Eric Wieser, Heather Macbeth\n-/\ntheorem uniformity :\n    (uniformity) (Matrix m n 𝕜) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (((uniformity) 𝕜).comap fun a => (a.1 i j, a.2 i j)) :=\n  by\n  erw [Pi.uniformity, Pi.uniformity]\n  simp_rw [Filter.comap_infᵢ, Filter.comap_comap]\n  rfl\n#align uniformity uniformity\n-/\n\n",
 "UniformContinuous":
 "#print UniformContinuous /-\ntheorem UniformContinuous {β : Type _} [UniformSpace β] {f : β → Matrix m n 𝕜} :\n    UniformContinuous f ↔ ∀ i j, UniformContinuous fun x => f x i j := by\n  simp only [UniformContinuous, Matrix.uniformity, Filter.tendsto_infᵢ, Filter.tendsto_comap_iff]\n#align uniform_continuous UniformContinuous\n-/\n\n"}