{"uniform_space_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/-\nCopyright (c) 2019 Patrick MAssot. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Patrick Massot\n-/\n/-- The metric space uniform structure on ℚ (which presupposes the existence\nof real numbers) agrees with the one coming directly from (abs : ℚ → ℚ). -/\ntheorem rat.uniform_space_eq :\n    is_absolute_value.uniform_space (abs : exprℚ → exprℚ) = pseudo_metric_space.to_uniform_space :=\n  by\n  ext s\n  erw [metric.mem_uniformity_dist, is_absolute_value.mem_uniformity]\n  constructor <;> rintro ⟨ε, ε_pos, h⟩\n  · use ε, by exact_mod_cast ε_pos\n    intro a b hab\n    apply h\n    rw [rat.dist_eq, abs_sub_comm] at hab\n    exact_mod_cast hab\n  · obtain ⟨ε', h', h''⟩ : ∃ ε' : exprℚ, 0 < ε' ∧ (ε' : exprℝ) < ε\n    exact exists_pos_rat_lt ε_pos\n    use ε', h'\n    intro a b hab\n    apply h\n    rw [rat.dist_eq, abs_sub_comm]\n    refine' lt_trans _ h''\n    exact_mod_cast hab\n#align rat.uniform_space_eq rat.uniform_space_eq\n\n",
 "compare_uc_symm":
 "theorem compare_uc_symm : uniform_continuous compare_equiv.symm :=\n  Bourbaki_pkg.uniform_continuous_compare_equiv_symm _\n#align compare_uc_symm compare_uc_symm\n\n",
 "compare_uc":
 "theorem compare_uc : uniform_continuous compare_equiv :=\n  Bourbaki_pkg.uniform_continuous_compare_equiv _\n#align compare_uc compare_uc\n\n"}