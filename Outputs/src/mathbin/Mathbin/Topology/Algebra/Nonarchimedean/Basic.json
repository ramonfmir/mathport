{"prod_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/-- An open neighborhood of the identity in the cartesian product of two nonarchimedean groups\ncontains the cartesian product of an open neighborhood in each group. -/\n@[to_additive NonarchimedeanAddGroup.prod_subset\n      \"An open neighborhood of the identity in the\\ncartesian product of two nonarchimedean groups contains the cartesian product of an open\\nneighborhood in each group.\"]\ntheorem prod_subset {U} (hU : U ∈ nhds (1 : G × K)) :\n    ∃ (V : OpenSubgroup G)(W : OpenSubgroup K), lower_set.prod (V : Set G) (W : Set K) ⊆ U :=\n  by\n  erw [nhds_prod_eq, Filter.mem_prod_iff] at hU\n  rcases hU with ⟨U₁, hU₁, U₂, hU₂, h⟩\n  cases' is_nonarchimedean _ hU₁ with V hV\n  cases' is_nonarchimedean _ hU₂ with W hW\n  use V; use W\n  rw [Set.prod_subset_iff]\n  intro x hX y hY\n  exact Set.Subset.trans (Set.prod_mono hV hW) h (Set.mem_sep hX hY)\n#align prod_subset prod_subset\n\n",
 "prod_self_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lower_set.prod -/\n/-- An open neighborhood of the identity in the cartesian square of a nonarchimedean group\ncontains the cartesian square of an open neighborhood in the group. -/\n@[to_additive NonarchimedeanAddGroup.prod_self_subset\n      \"An open neighborhood of the identity in the\\ncartesian square of a nonarchimedean group contains the cartesian square of an open neighborhood in\\nthe group.\"]\ntheorem prod_self_subset {U} (hU : U ∈ nhds (1 : G × G)) :\n    ∃ V : OpenSubgroup G, lower_set.prod (V : Set G) (V : Set G) ⊆ U :=\n  let ⟨V, W, h⟩ := prod_subset hU\n  ⟨«expr ⊓ » V W, by refine' Set.Subset.trans (Set.prod_mono _ _) ‹_› <;> simp⟩\n#align prod_self_subset prod_self_subset\n\n",
 "nonarchimedean_of_emb":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/-\nCopyright (c) 2021 Ashwin Iyengar. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kevin Buzzard, Johan Commelin, Ashwin Iyengar, Patrick Massot\n-/\n-- see Note [lower instance priority]\n/-- If a topological group embeds into a nonarchimedean group, then it is nonarchimedean. -/\n@[to_additive NonarchimedeanAddGroup.nonarchimedean_of_emb\n      \"If a topological group embeds into a\\nnonarchimedean group, then it is nonarchimedean.\"]\ntheorem nonarchimedean_of_emb (f : «expr →* » G H) (emb : OpenEmbedding f) : NonarchimedeanGroup H :=\n  {\n    is_nonarchimedean := fun U hU =>\n      have h₁ : «expr ⁻¹' » f U ∈ nhds (1 : G) :=\n        by\n        apply emb.continuous.tendsto\n        rwa [f.map_one]\n      let ⟨V, hV⟩ := is_nonarchimedean («expr ⁻¹' » f U) h₁\n      ⟨{ Subgroup.map f V with is_open' := emb.is_open_map _ V.is_open }, Set.image_subset_iff.2 hV⟩ }\n#align nonarchimedean_of_emb nonarchimedean_of_emb\n\n",
 "mul_subset":
 "/-- An open subgroup of a nonarchimedean ring contains the square of another one. -/\ntheorem mul_subset (U : OpenAddSubgroup R) : ∃ V : OpenAddSubgroup R, (V : Set R) * V ⊆ U :=\n  by\n  let ⟨V, H⟩ :=\n    prod_self_subset\n      (IsOpen.mem_nhds (IsOpen.preimage continuous_mul U.is_open)\n        (by simpa only [Set.mem_preimage, SetLike.mem_coe, Prod.snd_zero, MulZeroClass.mul_zero] using U.zero_mem))\n  use V\n  rintro v ⟨a, b, ha, hb, hv⟩\n  have hy := H (Set.mk_mem_prod ha hb)\n  simp only [Set.mem_preimage, SetLike.mem_coe] at hy\n  rwa [hv] at hy\n#align mul_subset mul_subset\n\n",
 "left_mul_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Given an open subgroup `U` and an element `r` of a nonarchimedean ring, there is an open\n  subgroup `V` such that `r • V` is contained in `U`. -/\ntheorem left_mul_subset (U : OpenAddSubgroup R) (r : R) : ∃ V : OpenAddSubgroup R, «expr • » r (V : Set R) ⊆ U :=\n  ⟨U.comap (AddMonoidHom.mulLeft r) (continuous_mul_left r), (U : Set R).image_preimage_subset _⟩\n#align left_mul_subset left_mul_subset\n\n"}