{"quotientMap_coe_coe":
 "#print QuotientRing.quotientMap_coe_coe /-\ntheorem QuotientRing.quotientMap_coe_coe : QuotientMap fun p : R × R => (mk N p.1, mk N p.2) :=\n  IsOpenMap.to_quotientMap ((QuotientRing.isOpenMap_coe N).prod (QuotientRing.isOpenMap_coe N))\n    ((continuous_quot_mk.comp continuous_fst).prod_mk (continuous_quot_mk.comp continuous_snd))\n    (by rintro ⟨⟨x⟩, ⟨y⟩⟩ <;> exact ⟨(x, y), rfl⟩)\n#align quotient_ring.quotient_map_coe_coe QuotientRing.quotientMap_coe_coe\n-/\n\n",
 "isOpenMap_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print QuotientRing.isOpenMap_coe /-\n-- note for the reader: in the following, `mk` is `ideal.quotient.mk`, the canonical map `R → R/I`.\ntheorem QuotientRing.isOpenMap_coe : IsOpenMap (mk N) :=\n  by\n  intro s s_op\n  change IsOpen («expr ⁻¹' » (mk N) («expr '' » (mk N) s))\n  rw [quotient_ring_saturate]\n  exact isOpen_unionᵢ fun ⟨n, _⟩ => isOpenMap_add_left n s s_op\n#align quotient_ring.is_open_map_coe QuotientRing.isOpenMap_coe\n-/\n\n",
 "coe_closure":
 "#print Ideal.coe_closure /-\n/-\nCopyright (c) 2018 Patrick Massot. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Patrick Massot\n-/\n@[simp]\ntheorem Ideal.coe_closure (I : Ideal R) : (I.closure : Set R) = closure I :=\n  rfl\n#align ideal.coe_closure Ideal.coe_closure\n-/\n\n",
 "closure_eq_of_isClosed":
 "#print Ideal.closure_eq_of_isClosed /-\n@[simp]\ntheorem Ideal.closure_eq_of_isClosed (I : Ideal R) [hI : IsClosed (I : Set R)] : I.closure = I :=\n  SetLike.ext' hI.closure_eq\n#align ideal.closure_eq_of_is_closed Ideal.closure_eq_of_isClosed\n-/\n\n"}