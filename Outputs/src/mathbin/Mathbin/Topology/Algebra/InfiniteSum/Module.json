{"tsum_smul_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n#print tsum_smul_const /-\ntheorem tsum_smul_const [T2Space M] (hf : Summable f) (a : M) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        («expr • » (f z) a) =\n      «expr • »\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f z)) a :=\n  (hf.has_sum.smul_const _).tsum_eq\n#align tsum_smul_const tsum_smul_const\n-/\n\n",
 "tsum_eq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃SL[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n#print ContinuousLinearEquiv.tsum_eq_iff /-\ntheorem ContinuousLinearEquiv.tsum_eq_iff [T2Space M] [T2Space M₂] {f : ι → M} (e : «expr ≃SL[ ] » M σ M₂) {y : M₂} :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (e (f z)) = y ↔\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f z) =\n        e.symm y :=\n  by\n  by_cases hf : Summable f\n  ·\n    exact\n      ⟨fun h => (e.has_sum.mp ((e.summable.mpr hf).has_sum_iff.mpr h)).tsum_eq, fun h =>\n        (e.has_sum.mpr (hf.has_sum_iff.mpr h)).tsum_eq⟩\n  · have hf' : ¬Summable fun z => e (f z) := fun h => hf (e.summable.mp h)\n    rw [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable hf']\n    exact\n      ⟨by\n        rintro rfl\n        simp, fun H => by simpa using congr_arg (fun z => e z) H⟩\n#align continuous_linear_equiv.tsum_eq_iff ContinuousLinearEquiv.tsum_eq_iff\n-/\n\n",
 "summable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →SL[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃SL[ ] » -/\n#print ContinuousLinearEquiv.summable /-\nprotected theorem ContinuousLinearEquiv.summable {f : ι → M} (e : «expr ≃SL[ ] » M σ M₂) :\n    (Summable fun b : ι => e (f b)) ↔ Summable f :=\n  ⟨fun hf => (e.has_sum.1 hf.has_sum).summable, (e : «expr →SL[ ] » M σ M₂).summable⟩\n#align continuous_linear_equiv.summable ContinuousLinearEquiv.summable\n-/\n\n",
 "smul_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print Summable.smul_const /-\ntheorem Summable.smul_const (hf : Summable f) (a : M) : Summable fun z => «expr • » (f z) a :=\n  (hf.has_sum.smul_const _).summable\n#align summable.smul_const Summable.smul_const\n-/\n\n",
 "map_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃SL[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n#print ContinuousLinearEquiv.map_tsum /-\nprotected theorem ContinuousLinearEquiv.map_tsum [T2Space M] [T2Space M₂] {f : ι → M} (e : «expr ≃SL[ ] » M σ M₂) :\n    e («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f z)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (e (f z)) :=\n  by\n  refine' symm (e.tsum_eq_iff.mpr _)\n  rw [e.symm_apply_apply _]\n#align continuous_linear_equiv.map_tsum ContinuousLinearEquiv.map_tsum\n-/\n\n",
 "hasSum'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃SL[ ] » -/\n#print ContinuousLinearEquiv.hasSum' /-\n/-- Applying a continuous linear map commutes with taking an (infinite) sum. -/\nprotected theorem ContinuousLinearEquiv.hasSum' {f : ι → M} (e : «expr ≃SL[ ] » M σ M₂) {x : M} :\n    HasSum (fun b : ι => e (f b)) (e x) ↔ HasSum f x := by rw [e.has_sum, ContinuousLinearEquiv.symm_apply_apply]\n#align continuous_linear_equiv.has_sum' ContinuousLinearEquiv.hasSum'\n-/\n\n",
 "hasSum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →SL[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →SL[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃SL[ ] » -/\n#print ContinuousLinearEquiv.hasSum /-\n/-- Applying a continuous linear map commutes with taking an (infinite) sum. -/\nprotected theorem ContinuousLinearEquiv.hasSum {f : ι → M} (e : «expr ≃SL[ ] » M σ M₂) {y : M₂} :\n    HasSum (fun b : ι => e (f b)) y ↔ HasSum f (e.symm y) :=\n  ⟨fun h => by simpa only [e.symm.coe_coe, e.symm_apply_apply] using h.mapL (e.symm : «expr →SL[ ] » M₂ σ' M), fun h =>\n    by simpa only [e.coe_coe, e.apply_symm_apply] using (e : «expr →SL[ ] » M σ M₂).has_sum h⟩\n#align continuous_linear_equiv.has_sum ContinuousLinearEquiv.hasSum\n-/\n\n"}