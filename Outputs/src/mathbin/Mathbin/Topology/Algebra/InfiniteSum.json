{"vanishing":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem summable.vanishing (hf : summable f) ⦃e : set G⦄ (he : e ∈ (nhds) (0 : G)) :\n    ∃ s : Finset α,\n      ∀ t,\n        Disjoint t s →\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (f k) ∈ e :=\n  by\n  letI : uniform_space G := topological_add_group.to_uniform_space G\n  letI : uniform_add_group G := topological_add_comm_group_is_uniform\n  rcases hf with ⟨y, hy⟩\n  exact cauchy_seq_finset_iff_vanishing.1 hy.cauchy_seq e he\n#align summable.vanishing summable.vanishing\n\n",
 "update'":
 "/-- Version of `has_sum.update` for `add_comm_monoid` rather than `add_comm_group`.\nRather than showing that `f.update` has a specific sum in terms of `has_sum`,\nit gives a relationship between the sums of `f` and `f.update` given that both exist. -/\ntheorem has_sum.update' {α β : Type _} [topological_space α] [add_comm_monoid α] [t2_space α] [has_continuous_add α]\n    {f : β → α} {a a' : α} (hf : has_sum f a) (b : β) (x : α) (hf' : has_sum (f.update b x) a') : a + x = a' + f b :=\n  by\n  have : ∀ b', f b' + ite (b' = b) x 0 = f.update b x b' + ite (b' = b) (f b) 0 :=\n    by\n    intro b'\n    split_ifs with hb'\n    · simpa only [function.update_apply, hb', eq_self_iff_true] using add_comm (f b) x\n    · simp only [function.update_apply, hb', if_false]\n  have h := hf.add (has_sum_ite_eq b x)\n  simp_rw [this] at h\n  exact has_sum.unique h (hf'.add (has_sum_ite_eq b (f b)))\n#align has_sum.update' has_sum.update'\n\n",
 "update":
 "theorem summable.update (hf : summable f) (b : β) [decidable_eq β] (a : α) : summable (update f b a) :=\n  (hf.has_sum.update b a).summable\n#align summable.update summable.update\n\n",
 "unop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\ntheorem summable.unop {f : β → «expr ᵐᵒᵖ» α} (hf : summable f) : summable (unop ∘ f) :=\n  hf.has_sum.unop.summable\n#align summable.unop summable.unop\n\n",
 "unique":
 "theorem has_sum.unique {a₁ a₂ : α} [t2_space α] : has_sum f a₁ → has_sum f a₂ → a₁ = a₂ :=\n  tendsto_nhds_unique\n#align has_sum.unique has_sum.unique\n\n",
 "tsum_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_zero' (hz : is_closed ({0} : set α)) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (0 : α) = 0 := by\n  classical\n    rw [tsum, dif_pos summable_zero]\n    suffices ∀ x : α, has_sum (fun b : β => (0 : α)) x → x = 0 by exact this _ (Classical.choose_spec _)\n    intro x hx\n    contrapose! hx\n    simp only [has_sum, tendsto_nhds, finset.sum_const_zero, filter.mem_at_top_sets, ge_iff_le, Finset.le_eq_subset,\n      Set.mem_preimage, not_forall, not_exists, exists_prop, exists_and_right]\n    refine' ⟨«expr ᶜ» {0}, ⟨is_open_compl_iff.mpr hz, _⟩, fun y => ⟨⟨y, subset_refl _⟩, _⟩⟩\n    · simpa using hx\n    · simp\n#align tsum_zero' tsum_zero'\n\n",
 "tsum_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem tsum_zero [t1_space α] :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (0 : α) = 0 :=\n  tsum_zero' is_closed_singleton\n#align tsum_zero tsum_zero\n\n",
 "tsum_unop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_unop {f : β → «expr ᵐᵒᵖ» α} :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (mul_opposite.unop (f x)) =\n      mul_opposite.unop\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x)) :=\n  mul_opposite.op_injective tsum_op.symm\n#align tsum_unop tsum_unop\n\n",
 "tsum_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem tsum_univ (f : β → α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) :=\n  tsum_subtype_eq_of_support_subset <| Set.subset_univ _\n#align tsum_univ tsum_univ\n\n",
 "tsum_union_disjoint":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_union_disjoint {s t : set β} (hd : Disjoint s t) (hs : summable (f ∘ coe : s → α))\n    (ht : summable (f ∘ coe : t → α)) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) :=\n  (hs.has_sum.add_disjoint hd ht.has_sum).tsum_eq\n#align tsum_union_disjoint tsum_union_disjoint\n\n",
 "tsum_tsum_eq_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b' «expr ≠ » b) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_tsum_eq_single (f : β → γ → α) (b : β) (c : γ) (hfb : ∀ (b') (_ : b' ≠ b), f b' c = 0)\n    (hfc : ∀ (b' : β) (c' : γ), c' ≠ c → f b' c' = 0) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b' c') =\n      f b c :=\n  calc\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b' c') =\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b' c) :=\n      tsum_congr fun b' => tsum_eq_single _ (hfc b')\n    _ = f b c := tsum_eq_single _ hfb\n    \n#align tsum_tsum_eq_single tsum_tsum_eq_single\n\n",
 "tsum_supr_decode₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- You can compute a sum over an encodably type by summing over the natural numbers and\n  taking a supremum. This is useful for outer measures. -/\ntheorem tsum_supr_decode₂ [CompleteLattice β] (m : β → α) (m0 : m («expr⊥») = 0) (s : γ → β) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (m («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s b))) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (m (s b)) :=\n  by\n  have H :\n    ∀ n,\n      m («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s b)) ≠ 0 →\n        (decode₂ γ n).is_some :=\n    by\n    intro n h\n    cases' decode₂ γ n with b\n    · refine' (h <| by simp [m0]).elim\n    · exact rfl\n  symm\n  refine' tsum_eq_tsum_of_ne_zero_bij (fun a => option.get (H a.1 a.2)) _ _ _\n  · rintro ⟨m, hm⟩ ⟨n, hn⟩ e\n    have := mem_decode₂.1 (option.get_mem (H n hn))\n    rwa [← e, mem_decode₂.1 (option.get_mem (H m hm))] at this\n  · intro b h\n    refine' ⟨⟨encode b, _⟩, _⟩\n    · simp only [mem_support, encodek₂] at h⊢\n      convert h\n      simp [Set.ext_iff, encodek₂]\n    · exact option.get_of_mem _ (encodek₂ _)\n  · rintro ⟨n, h⟩\n    dsimp only [subtype.coe_mk]\n    trans\n    swap\n    rw [show decode₂ γ n = _ from option.get_mem (H n h)]\n    congr\n    simp [ext_iff, -option.some_get]\n#align tsum_supr_decode₂ tsum_supr_decode₂\n\n",
 "tsum_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_sum {f : γ → β → α} {s : Finset γ} (hf : ∀ i ∈ s, summable (f i)) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i b)) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i b)) :=\n  (has_sum_sum fun i hi => (hf i hi).has_sum).tsum_eq\n#align tsum_sum tsum_sum\n\n",
 "tsum_subtype_eq_of_support_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_subtype_eq_of_support_subset {f : β → α} {s : set β} (hs : support f ⊆ s) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) :=\n  tsum_eq_tsum_of_has_sum_iff_has_sum fun x => has_sum_subtype_iff_of_support_subset hs\n#align tsum_subtype_eq_of_support_subset tsum_subtype_eq_of_support_subset\n\n",
 "tsum_subtype_add_tsum_subtype_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_subtype_add_tsum_subtype_compl [t2_space α] {f : β → α} (hf : summable f) (s : set β) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) :=\n  ((hf.subtype s).has_sum.add_compl (hf.subtype { x | x ∉ s }).has_sum).unique hf.has_sum\n#align tsum_subtype_add_tsum_subtype_compl tsum_subtype_add_tsum_subtype_compl\n\n",
 "tsum_subtype'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n@[simp]\ntheorem finset.tsum_subtype' (s : Finset β) (f : β → α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f x) :=\n  s.tsum_subtype f\n#align finset.tsum_subtype' finset.tsum_subtype'\n\n",
 "tsum_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_subtype (s : set β) (f : β → α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (s.indicator f x) :=\n  tsum_eq_tsum_of_has_sum_iff_has_sum fun _ => has_sum_subtype_iff_indicator\n#align tsum_subtype tsum_subtype\n\n",
 "tsum_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_sub (hf : summable f) (hg : summable g) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b - g b) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) -\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g b) :=\n  (hf.has_sum.sub hg.has_sum).tsum_eq\n#align tsum_sub tsum_sub\n\n",
 "tsum_strict_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[mono]\ntheorem tsum_strict_mono (hf : summable f) (hg : summable g) (h : f < g) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n) <\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g n) :=\n  let ⟨hle, i, hi⟩ := Pi.lt_def.mp h\n  tsum_lt_tsum hle hi hf hg\n#align tsum_strict_mono tsum_strict_mono\n\n",
 "tsum_star":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_star :\n    star («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (star (f b)) :=\n  by\n  by_cases hf : summable f\n  · exact hf.has_sum.star.tsum_eq.symm\n  · rw [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable (mt summable.of_star hf), star_zero]\n#align tsum_star tsum_star\n\n",
 "tsum_smul_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_smul_const [t2_space α] {a : α} (hf : summable f) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        («expr • » (f z) a) =\n      «expr • »\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f z)) a :=\n  hf.has_sum.smul_const.tsum_eq\n#align tsum_smul_const tsum_smul_const\n\n",
 "tsum_singleton":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem tsum_singleton (b : β) (f : β → α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) = f b :=\n  by\n  rw [tsum_subtype, tsum_eq_single b]\n  · simp\n  · intro b' hb'\n    rw [set.indicator_of_not_mem]\n    rwa [Set.mem_singleton_iff]\n  · infer_instance\n#align tsum_singleton tsum_singleton\n\n",
 "tsum_sigma'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_sigma' {γ : β → Type _} {f : (Σb : β, γ b) → δ} (h₁ : ∀ b, summable fun c => f ⟨b, c⟩) (h₂ : summable f) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f p) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f ⟨b, c⟩) :=\n  (h₂.has_sum.sigma fun b => (h₁ b).has_sum).tsum_eq.symm\n#align tsum_sigma' tsum_sigma'\n\n",
 "tsum_sigma":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_sigma [t1_space α] {γ : β → Type _} {f : (Σb : β, γ b) → α} (ha : summable f) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f p) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f ⟨b, c⟩) :=\n  tsum_sigma' (fun b => ha.sigma_factor b) ha\n#align tsum_sigma tsum_sigma\n\n",
 "tsum_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem commute.tsum_right (a) (h : ∀ b, Commute a (f b)) :\n    Commute a\n      («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b)) :=\n  if hf : summable f then (hf.tsum_mul_left a).symm.trans ((congr_arg _ <| funext h).trans (hf.tsum_mul_right a))\n  else (tsum_eq_zero_of_not_summable hf).symm ▸ Commute.zero_right _\n#align commute.tsum_right commute.tsum_right\n\n",
 "tsum_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_range {g : γ → β} (f : β → α) (hg : injective g) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f (g x)) :=\n  by rw [← Set.image_univ, tsum_image f (hg.inj_on _), tsum_univ (f ∘ g)]\n#align tsum_range tsum_range\n\n",
 "tsum_prod'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_prod' {f : β × γ → δ} (h : summable f) (h₁ : ∀ b, summable fun c => f (b, c)) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f p) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f (b, c)) :=\n  (h.has_sum.prod_fiberwise fun b => (h₁ b).has_sum).tsum_eq.symm\n#align tsum_prod' tsum_prod'\n\n",
 "tsum_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_prod [t1_space α] {f : β × γ → α} (h : summable f) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f p) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f ⟨b, c⟩) :=\n  tsum_prod' h h.prod_factor\n#align tsum_prod tsum_prod\n\n",
 "tsum_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_pos (hsum : summable g) (hg : ∀ b, 0 ≤ g b) (i : β) (hi : 0 < g i) :\n    0 < «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g b) :=\n  by\n  rw [← tsum_zero]\n  exact tsum_lt_tsum hg hi summable_zero hsum\n#align tsum_pos tsum_pos\n\n",
 "tsum_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_op :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (MulOpposite.op (f x)) =\n      MulOpposite.op\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x)) :=\n  by\n  by_cases h : summable f\n  · exact h.has_sum.op.tsum_eq\n  · have ho := summable_op.not.mpr h\n    rw [tsum_eq_zero_of_not_summable h, tsum_eq_zero_of_not_summable ho, MulOpposite.op_zero]\n#align tsum_op tsum_op\n\n",
 "tsum_nonpos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_nonpos (h : ∀ b, f b ≤ 0) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) ≤ 0 :=\n  by\n  by_cases hf : summable f\n  · exact hf.has_sum.nonpos h\n  · simp [tsum_eq_zero_of_not_summable hf]\n#align tsum_nonpos tsum_nonpos\n\n",
 "tsum_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_nonneg (h : ∀ b, 0 ≤ g b) :\n    0 ≤ «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g b) :=\n  by\n  by_cases hg : summable g\n  · exact hg.has_sum.nonneg h\n  · simp [tsum_eq_zero_of_not_summable hg]\n#align tsum_nonneg tsum_nonneg\n\n",
 "tsum_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_neg :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (-f b) =\n      -«expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) :=\n  by\n  by_cases hf : summable f\n  · exact hf.has_sum.neg.tsum_eq\n  · simp [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable (mt summable.of_neg hf)]\n#align tsum_neg tsum_neg\n\n",
 "tsum_ne_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_ne_zero_iff (hf : summable f) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i) ≠ 0 ↔\n      ∃ x, f x ≠ 0 :=\n  by rw [ne.def, tsum_eq_zero_iff hf, not_forall]\n#align tsum_ne_zero_iff tsum_ne_zero_iff\n\n",
 "tsum_mul_tsum_eq_tsum_sum_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The Cauchy product formula for the product of two infinites sums indexed by `ℕ`,\n    expressed by summing on `finset.range`.\n    See also `tsum_mul_tsum_eq_tsum_sum_range_of_summable_norm`\n    if `f` and `g` are absolutely summable. -/\ntheorem tsum_mul_tsum_eq_tsum_sum_range (hf : summable f) (hg : summable g)\n    (hfg : summable fun x : ℕ × ℕ => f x.1 * g x.2) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n) *\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g n) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (n + 1))\n          (f k * g (n - k))) :=\n  by\n  simp_rw [← nat.sum_antidiagonal_eq_sum_range_succ fun k l => f k * g l]\n  exact tsum_mul_tsum_eq_tsum_sum_antidiagonal hf hg hfg\n#align tsum_mul_tsum_eq_tsum_sum_range tsum_mul_tsum_eq_tsum_sum_range\n\n",
 "tsum_mul_tsum_eq_tsum_sum_antidiagonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The Cauchy product formula for the product of two infinites sums indexed by `ℕ`,\n    expressed by summing on `finset.nat.antidiagonal`.\n    See also `tsum_mul_tsum_eq_tsum_sum_antidiagonal_of_summable_norm`\n    if `f` and `g` are absolutely summable. -/\ntheorem tsum_mul_tsum_eq_tsum_sum_antidiagonal (hf : summable f) (hg : summable g)\n    (hfg : summable fun x : ℕ × ℕ => f x.1 * g x.2) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n) *\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g n) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (nat.antidiagonal n) (f kl.1 * g kl.2)) :=\n  by\n  conv_rhs =>\n    congr\n    ext\n    rw [← finset.sum_finset_coe, ← tsum_fintype]\n  rw [tsum_mul_tsum hf hg hfg, ← nat.sigma_antidiagonal_equiv_prod.tsum_eq (_ : ℕ × ℕ → α)]\n  exact\n    tsum_sigma' (fun n => (has_sum_fintype _).summable) (summable_mul_prod_iff_summable_mul_sigma_antidiagonal.mp hfg)\n#align tsum_mul_tsum_eq_tsum_sum_antidiagonal tsum_mul_tsum_eq_tsum_sum_antidiagonal\n\n",
 "tsum_mul_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Product of two infinites sums indexed by arbitrary types.\n    See also `tsum_mul_tsum_of_summable_norm` if `f` and `g` are abolutely summable. -/\ntheorem tsum_mul_tsum (hf : summable f) (hg : summable g) (hfg : summable fun x : β × γ => f x.1 * g x.2) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) *\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g y) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (f z.1 * g z.2) :=\n  hf.has_sum.mul_eq hg.has_sum hfg.has_sum\n#align tsum_mul_tsum tsum_mul_tsum\n\n",
 "tsum_mul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_mul_right [t2_space α] :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x * a) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) * a :=\n  if hf : summable f then hf.tsum_mul_right a\n  else\n    if ha : a = 0 then by simp [ha]\n    else by\n      rw [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable (mt (summable_mul_right_iff ha).2 hf), zero_mul]\n#align tsum_mul_right tsum_mul_right\n\n",
 "tsum_mul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_mul_left [t2_space α] :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (a * f x) =\n      a * «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) :=\n  if hf : summable f then hf.tsum_mul_left a\n  else\n    if ha : a = 0 then by simp [ha]\n    else by\n      rw [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable (mt (summable_mul_left_iff ha).2 hf), mul_zero]\n#align tsum_mul_left tsum_mul_left\n\n",
 "tsum_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[mono]\ntheorem tsum_mono (hf : summable f) (hg : summable g) (h : f ≤ g) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n) ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g n) :=\n  tsum_le_tsum h hf hg\n#align tsum_mono tsum_mono\n\n",
 "tsum_lt_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_lt_tsum {i : β} (h : ∀ b : β, f b ≤ g b) (hi : f i < g i) (hf : summable f) (hg : summable g) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n) <\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g n) :=\n  has_sum_lt h hi hf.has_sum hg.has_sum\n#align tsum_lt_tsum tsum_lt_tsum\n\n",
 "tsum_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem commute.tsum_left (a) (h : ∀ b, Commute (f b) a) :\n    Commute («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b))\n      a :=\n  (commute.tsum_right _ fun b => (h b).symm).symm\n#align commute.tsum_left commute.tsum_left\n\n",
 "tsum_le_tsum_of_inj":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (c «expr ∉ » set.range[set.range] i) -/\ntheorem tsum_le_tsum_of_inj {g : γ → α} (i : β → γ) (hi : injective i) (hs : ∀ (c) (_ : c ∉ Set.range i), 0 ≤ g c)\n    (h : ∀ b, f b ≤ g (i b)) (hf : summable f) (hg : summable g) : tsum f ≤ tsum g :=\n  has_sum_le_inj i hi hs h hf.has_sum hg.has_sum\n#align tsum_le_tsum_of_inj tsum_le_tsum_of_inj\n\n",
 "tsum_le_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_le_tsum (h : ∀ b, f b ≤ g b) (hf : summable f) (hg : summable g) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g b) :=\n  has_sum_le h hf.has_sum hg.has_sum\n#align tsum_le_tsum tsum_le_tsum\n\n",
 "tsum_le_of_sum_range_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_le_of_sum_range_le {f : ℕ → E} {c : E} (hsum : summable f)\n    (h :\n      ∀ n,\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n            (f i) ≤\n          c) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n) ≤ c :=\n  let ⟨l, hl⟩ := hsum\n  hl.tsum_eq.symm ▸ le_of_tendsto' hl.tendsto_sum_nat h\n#align tsum_le_of_sum_range_le tsum_le_of_sum_range_le\n\n",
 "tsum_le_of_sum_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_le_of_sum_le' (ha₂ : 0 ≤ a₂)\n    (h :\n      ∀ s : Finset β,\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b) ≤ a₂) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) ≤ a₂ :=\n  by\n  by_cases hf : summable f\n  · exact tsum_le_of_sum_le hf h\n  · rw [tsum_eq_zero_of_not_summable hf]\n    exact ha₂\n#align tsum_le_of_sum_le' tsum_le_of_sum_le'\n\n",
 "tsum_le_of_sum_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_le_of_sum_le (hf : summable f)\n    (h :\n      ∀ s : Finset β,\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b) ≤ a₂) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) ≤ a₂ :=\n  has_sum_le_of_sum_le hf.has_sum h\n#align tsum_le_of_sum_le tsum_le_of_sum_le\n\n",
 "tsum_ite_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem tsum_ite_eq (b : β) [decidable_pred (· = b)] (a : α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (if b' = b then a else 0) =\n      a :=\n  (has_sum_ite_eq b a).tsum_eq\n#align tsum_ite_eq tsum_ite_eq\n\n",
 "tsum_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_image {g : γ → β} (f : β → α) {s : set γ} (hg : Set.InjOn g s) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f (g x)) :=\n  ((Equiv.Set.imageOfInjOn _ _ hg).tsum_eq fun x => f x).symm\n#align tsum_image tsum_image\n\n",
 "tsum_fintype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem tsum_fintype [fintype β] (f : β → α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\" (f b) :=\n  (has_sum_fintype f).tsum_eq\n#align tsum_fintype tsum_fintype\n\n",
 "tsum_even_add_odd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_even_add_odd {f : ℕ → α} (he : summable fun k => f (2 * k)) (ho : summable fun k => f (2 * k + 1)) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f (2 * k)) +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (f (2 * k + 1)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f k) :=\n  (he.has_sum.even_add_odd ho.has_sum).tsum_eq.symm\n#align tsum_even_add_odd tsum_even_add_odd\n\n",
 "tsum_eq_zero_of_not_summable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_eq_zero_of_not_summable (h : ¬summable f) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) = 0 := by\n  simp [tsum, h]\n#align tsum_eq_zero_of_not_summable tsum_eq_zero_of_not_summable\n\n",
 "tsum_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_eq_zero_iff (hf : summable f) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i) = 0 ↔\n      ∀ x, f x = 0 :=\n  by rw [← has_sum_zero_iff, hf.has_sum_iff]\n#align tsum_eq_zero_iff tsum_eq_zero_iff\n\n",
 "tsum_eq_zero_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_eq_zero_add [t2_space α] {f : ℕ → α} (hf : summable f) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) =\n      f 0 +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f (b + 1)) :=\n  by simpa only [sum_range_one] using (sum_add_tsum_nat_add 1 hf).symm\n#align tsum_eq_zero_add tsum_eq_zero_add\n\n",
 "tsum_eq_tsum_of_support":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem equiv.tsum_eq_tsum_of_support {f : β → α} {g : γ → α} (e : «expr ≃ » (support f) (support g))\n    (he : ∀ x, g (e x) = f x) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g y) :=\n  tsum_eq_tsum_of_has_sum_iff_has_sum fun _ => e.has_sum_iff_of_support he\n#align equiv.tsum_eq_tsum_of_support equiv.tsum_eq_tsum_of_support\n\n",
 "tsum_eq_tsum_of_ne_zero_bij":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_eq_tsum_of_ne_zero_bij {g : γ → α} (i : support g → β) (hi : ∀ ⦃x y⦄, i x = i y → (x : γ) = y)\n    (hf : support f ⊆ Set.range i) (hfg : ∀ x, f (i x) = g x) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g y) :=\n  tsum_eq_tsum_of_has_sum_iff_has_sum fun _ => has_sum_iff_has_sum_of_ne_zero_bij i hi hf hfg\n#align tsum_eq_tsum_of_ne_zero_bij tsum_eq_tsum_of_ne_zero_bij\n\n",
 "tsum_eq_tsum_of_has_sum_iff_has_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_eq_tsum_of_has_sum_iff_has_sum {f : β → α} {g : γ → α} (h : ∀ {a}, has_sum f a ↔ has_sum g a) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g c) :=\n  surjective_id.tsum_eq_tsum_of_has_sum_iff_has_sum rfl @h\n#align tsum_eq_tsum_of_has_sum_iff_has_sum tsum_eq_tsum_of_has_sum_iff_has_sum\n\n",
 "tsum_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b «expr ∉ » s) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem tsum_eq_sum {f : β → α} {s : Finset β} (hf : ∀ (b) (_ : b ∉ s), f b = 0) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b) :=\n  (has_sum_sum_of_ne_finset_zero hf).tsum_eq\n#align tsum_eq_sum tsum_eq_sum\n\n",
 "tsum_eq_single":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b' «expr ≠ » b) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_eq_single {f : β → α} (b : β) (hf : ∀ (b') (_ : b' ≠ b), f b' = 0) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) = f b :=\n  (has_sum_single b hf).tsum_eq\n#align tsum_eq_single tsum_eq_single\n\n",
 "tsum_eq_add_tsum_ite'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Version of `tsum_eq_add_tsum_ite` for `add_comm_monoid` rather than `add_comm_group`.\nRequires a different convergence assumption involving `function.update`. -/\ntheorem tsum_eq_add_tsum_ite' {f : β → α} (b : β) (hf : summable (f.update b 0)) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      f b +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (ite (x = b) 0 (f x)) :=\n  calc\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (ite (x = b) (f x) 0 + f.update b 0 x) :=\n      tsum_congr fun n => by split_ifs <;> simp [function.update_apply, h]\n    _ =\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n            (ite (x = b) (f x) 0) +\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n            (f.update b 0 x) :=\n      tsum_add ⟨ite (b = b) (f b) 0, has_sum_single b fun b hb => if_neg hb⟩ hf\n    _ =\n        ite (b = b) (f b) 0 +\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n            (f.update b 0 x) :=\n      by\n      congr\n      exact tsum_eq_single b fun b' hb' => if_neg hb'\n    _ =\n        f b +\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n            (ite (x = b) 0 (f x)) :=\n      by simp only [function.update, eq_self_iff_true, if_true, eq_rec_constant, dite_eq_ite]\n    \n#align tsum_eq_add_tsum_ite' tsum_eq_add_tsum_ite'\n\n",
 "tsum_eq_add_tsum_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- Let `f : β → α` be a sequence with summable series and let `b ∈ β` be an index.\nLemma `tsum_eq_add_tsum_ite` writes `Σ f n` as the sum of `f b` plus the series of the\nremaining terms. -/\ntheorem tsum_eq_add_tsum_ite [decidable_eq β] (hf : summable f) (b : β) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f n) =\n      f b +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (ite (n = b) 0 (f n)) :=\n  by\n  rw [(has_sum_ite_sub_has_sum hf.has_sum b).tsum_eq]\n  exact (add_sub_cancel'_right _ _).symm\n#align tsum_eq_add_tsum_ite tsum_eq_add_tsum_ite\n\n",
 "tsum_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem equiv.tsum_eq (j : «expr ≃ » γ β) (f : β → α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f (j c)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) :=\n  tsum_eq_tsum_of_has_sum_iff_has_sum fun a => j.has_sum_iff\n#align equiv.tsum_eq equiv.tsum_eq\n\n",
 "tsum_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem tsum_empty [is_empty β] :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) = 0 :=\n  has_sum_empty.tsum_eq\n#align tsum_empty tsum_empty\n\n",
 "tsum_dite_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_dite_right (P : Prop) [decidable P] (x : β → ¬P → α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (if h : P then (0 : α) else x b h) =\n      if h : P then (0 : α)\n      else «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (x b h) :=\n  by by_cases hP : P <;> simp [hP]\n#align tsum_dite_right tsum_dite_right\n\n",
 "tsum_dite_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_dite_left (P : Prop) [decidable P] (x : β → P → α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (if h : P then x b h else 0) =\n      if h : P then\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (x b h)\n      else 0 :=\n  by by_cases hP : P <;> simp [hP]\n#align tsum_dite_left tsum_dite_left\n\n",
 "tsum_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_const_smul [t2_space α] {r : R} (hf : summable f) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        («expr • » r (f z)) =\n      «expr • » r\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f z)) :=\n  hf.has_sum.const_smul.tsum_eq\n#align tsum_const_smul tsum_const_smul\n\n",
 "tsum_congr_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_congr_subtype (f : β → α) {s t : set β} (h : s = t) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) :=\n  by rw [h]\n#align tsum_congr_subtype tsum_congr_subtype\n\n",
 "tsum_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_congr {α β : Type _} [add_comm_monoid α] [topological_space α] {f g : β → α} (hfg : ∀ b, f b = g b) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g b) :=\n  congr_arg tsum (funext hfg)\n#align tsum_congr tsum_congr\n\n",
 "tsum_comm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_comm' {f : β → γ → δ} (h : summable (function.uncurry f)) (h₁ : ∀ b, summable (f b))\n    (h₂ : ∀ c, summable fun b => f b c) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b c) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b c) :=\n  by\n  erw [← tsum_prod' h h₁, ← tsum_prod' h.prod_symm h₂, ← (Equiv.prodComm γ β).tsum_eq (uncurry f)]\n  rfl\n#align tsum_comm' tsum_comm'\n\n",
 "tsum_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_comm [t1_space α] {f : β → γ → α} (h : summable (function.uncurry f)) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b c) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b c) :=\n  tsum_comm' h h.prod_factor h.prod_symm.prod_factor\n#align tsum_comm tsum_comm\n\n",
 "tsum_bool":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_bool (f : bool → α) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i) =\n      f false + f true :=\n  by rw [tsum_fintype, finset.sum_eq_add] <;> simp\n#align tsum_bool tsum_bool\n\n",
 "tsum_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_apply [∀ x, t2_space (π x)] {f : ι → ∀ x, π x} {x : α} (hf : summable f) :\n    («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i)) x =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i x) :=\n  (pi.has_sum.mp hf.has_sum x).tsum_eq.symm\n#align tsum_apply tsum_apply\n\n",
 "tsum_add_tsum_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_add_tsum_compl {s : set β} (hs : summable (f ∘ coe : s → α)) (hsc : summable (f ∘ coe : «expr ᶜ» s → α)) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) :=\n  (hs.has_sum.add_compl hsc.has_sum).tsum_eq.symm\n#align tsum_add_tsum_compl tsum_add_tsum_compl\n\n",
 "tsum_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem tsum_add (hf : summable f) (hg : summable g) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b + g b) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (g b) :=\n  (hf.has_sum.add hg.has_sum).tsum_eq\n#align tsum_add tsum_add\n\n",
 "tsum_Union_decode₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- `tsum_supr_decode₂` specialized to the complete lattice of sets. -/\ntheorem tsum_Union_decode₂ (m : set β → α) (m0 : m ∅ = 0) (s : γ → set β) :\n    «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (m («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s b))) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (m (s b)) :=\n  tsum_supr_decode₂ m m0 s\n#align tsum_Union_decode₂ tsum_Union_decode₂\n\n",
 "trans_sub":
 "theorem summable.trans_sub (hg : summable g) (hfg : summable fun b => f b - g b) : summable f := by\n  simpa only [sub_add_cancel] using hfg.add hg\n#align summable.trans_sub summable.trans_sub\n\n",
 "tendsto_tsum_compl_at_top_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- The sum over the complement of a finset tends to `0` when the finset grows to cover the whole\nspace. This does not need a summability assumption, as otherwise all sums are zero. -/\ntheorem tendsto_tsum_compl_at_top_zero (f : β → α) :\n    tendsto\n      (fun s : Finset β =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b))\n      at_top ((nhds) 0) :=\n  by\n  by_cases H : summable f\n  · intro e he\n    rcases exists_mem_nhds_is_closed_subset he with ⟨o, ho, o_closed, oe⟩\n    simp only [le_eq_subset, Set.mem_preimage, mem_at_top_sets, filter.mem_map, ge_iff_le]\n    obtain ⟨s, hs⟩ :\n      ∃ s : Finset β,\n        ∀ t : Finset β,\n          Disjoint t s →\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (f b) ∈\n              o :=\n      cauchy_seq_finset_iff_vanishing.1 (tendsto.cauchy_seq H.has_sum) o ho\n    refine' ⟨s, fun a sa => oe _⟩\n    have A : summable fun b : { x // x ∉ a } => f b := a.summable_compl_iff.2 H\n    apply is_closed.mem_of_tendsto o_closed A.has_sum (eventually_of_forall fun b => _)\n    have : Disjoint (Finset.image (fun i : { x // x ∉ a } => (i : β)) b) s :=\n      by\n      apply disjoint_left.2 fun i hi his => _\n      rcases mem_image.1 hi with ⟨i', hi', rfl⟩\n      exact i'.2 (sa his)\n    convert hs _ this using 1\n    rw [sum_image]\n    intro i hi j hj hij\n    exact subtype.ext hij\n  · convert tendsto_const_nhds\n    ext s\n    apply tsum_eq_zero_of_not_summable\n    rwa [finset.summable_compl_iff]\n#align tendsto_tsum_compl_at_top_zero tendsto_tsum_compl_at_top_zero\n\n",
 "tendsto_top_of_pos":
 "theorem summable.tendsto_top_of_pos {α : Type _} [LinearOrderedField α] [topological_space α] [order_topology α]\n    {f : ℕ → α} (hf : summable f⁻¹) (hf' : ∀ n, 0 < f n) : tendsto f at_top at_top :=\n  by\n  rw [show f = f⁻¹⁻¹ by\n      ext\n      simp]\n  apply filter.tendsto.inv_tendsto_zero\n  apply tendsto_nhds_within_of_tendsto_nhds_of_eventually_within _ (summable.tendsto_at_top_zero hf)\n  rw [eventually_iff_exists_mem]\n  refine' ⟨Set.Ioi 0, Ioi_mem_at_top _, fun _ _ => _⟩\n  rw [Set.mem_Ioi, inv_eq_one_div, one_div, pi.inv_apply, _root_.inv_pos]\n  exact hf' _\n#align summable.tendsto_top_of_pos summable.tendsto_top_of_pos\n\n",
 "tendsto_sum_nat_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- For `f : ℕ → α`, then `∑' k, f (k + i)` tends to zero. This does not require a summability\nassumption on `f`, as otherwise all sums are zero. -/\ntheorem tendsto_sum_nat_add [t2_space α] (f : ℕ → α) :\n    tendsto\n      (fun i =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f (k + i)))\n      at_top ((nhds) 0) :=\n  by\n  by_cases hf : summable f\n  · have h₀ :\n      (fun i =>\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i) -\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range i)\n              (f j)) =\n        fun i =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f (k + i)) :=\n      by\n      ext1 i\n      rw [sub_eq_iff_eq_add, add_comm, sum_add_tsum_nat_add i hf]\n    have h₁ :\n      tendsto\n        (fun i : ℕ =>\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i))\n        at_top\n        ((nhds)\n          («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i))) :=\n      tendsto_const_nhds\n    simpa only [h₀, sub_self] using tendsto.sub h₁ hf.has_sum.tendsto_sum_nat\n  · convert tendsto_const_nhds\n    ext1 i\n    rw [← summable_nat_add_iff i] at hf\n    · exact tsum_eq_zero_of_not_summable hf\n    · infer_instance\n#align tendsto_sum_nat_add tendsto_sum_nat_add\n\n",
 "tendsto_sum_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- If `f : ℕ → α` has sum `a`, then the partial sums `∑_{i=0}^{n-1} f i` converge to `a`. -/\ntheorem has_sum.tendsto_sum_nat {f : ℕ → α} (h : has_sum f a) :\n    tendsto\n      (fun n : ℕ =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n) (f i))\n      at_top ((nhds) a) :=\n  h.comp tendsto_finset_range\n#align has_sum.tendsto_sum_nat has_sum.tendsto_sum_nat\n\n",
 "tendsto_cofinite_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- Series divergence test: if `f` is a convergent series, then `f x` tends to zero along\n`cofinite`. -/\ntheorem summable.tendsto_cofinite_zero (hf : summable f) : tendsto f cofinite ((nhds) 0) :=\n  by\n  intro e he\n  rw [filter.mem_map]\n  rcases hf.vanishing he with ⟨s, hs⟩\n  refine' s.eventually_cofinite_nmem.mono fun x hx => _\n  · simpa using hs {x} (disjoint_singleton_left.2 hx)\n#align summable.tendsto_cofinite_zero summable.tendsto_cofinite_zero\n\n",
 "tendsto_at_top_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem summable.tendsto_at_top_zero {f : ℕ → G} (hf : summable f) : tendsto f at_top ((nhds) 0) :=\n  by\n  rw [← nat.cofinite_eq_at_top]\n  exact hf.tendsto_cofinite_zero\n#align summable.tendsto_at_top_zero summable.tendsto_at_top_zero\n\n",
 "summable_zero":
 "theorem summable_zero : summable (fun b => 0 : β → α) :=\n  has_sum_zero.summable\n#align summable_zero summable_zero\n\n",
 "summable_unop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n@[simp]\ntheorem summable_unop {f : β → «expr ᵐᵒᵖ» α} : (summable fun a => unop (f a)) ↔ summable f :=\n  ⟨summable.op, summable.unop⟩\n#align summable_unop summable_unop\n\n",
 "summable_sum_mul_range_of_summable_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem summable_sum_mul_range_of_summable_mul {f g : ℕ → α} (h : summable fun x : ℕ × ℕ => f x.1 * g x.2) :\n    summable fun n =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (n + 1))\n        (f k * g (n - k)) :=\n  by\n  simp_rw [← nat.sum_antidiagonal_eq_sum_range_succ fun k l => f k * g l]\n  exact summable_sum_mul_antidiagonal_of_summable_mul h\n#align summable_sum_mul_range_of_summable_mul summable_sum_mul_range_of_summable_mul\n\n",
 "summable_sum_mul_antidiagonal_of_summable_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem summable_sum_mul_antidiagonal_of_summable_mul {f g : ℕ → α} (h : summable fun x : ℕ × ℕ => f x.1 * g x.2) :\n    summable fun n =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (nat.antidiagonal n) (f kl.1 * g kl.2) :=\n  by\n  rw [summable_mul_prod_iff_summable_mul_sigma_antidiagonal] at h\n  conv =>\n    congr\n    ext\n    rw [← finset.sum_finset_coe, ← tsum_fintype]\n  exact h.sigma' fun n => (has_sum_fintype _).summable\n#align summable_sum_mul_antidiagonal_of_summable_mul summable_sum_mul_antidiagonal_of_summable_mul\n\n",
 "summable_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem summable_sum {f : γ → β → α} {s : Finset γ} (hf : ∀ i ∈ s, summable (f i)) :\n    summable fun b =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i b) :=\n  (has_sum_sum fun i hi => (hf i hi).has_sum).summable\n#align summable_sum summable_sum\n\n",
 "summable_subtype_iff_indicator":
 "theorem summable_subtype_iff_indicator {s : set β} : summable (f ∘ coe : s → α) ↔ summable (s.indicator f) :=\n  exists_congr fun _ => has_sum_subtype_iff_indicator\n#align summable_subtype_iff_indicator summable_subtype_iff_indicator\n\n",
 "summable_subtype_and_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem summable_subtype_and_compl {s : set β} :\n    ((summable fun x : s => f x) ∧ summable fun x : «expr ᶜ» s => f x) ↔ summable f :=\n  ⟨and_imp.2 summable.add_compl, fun h => ⟨h.subtype s, h.subtype («expr ᶜ» s)⟩⟩\n#align summable_subtype_and_compl summable_subtype_and_compl\n\n",
 "summable_star_iff'":
 "@[simp]\ntheorem summable_star_iff' : summable (star f) ↔ summable f :=\n  summable_star_iff\n#align summable_star_iff' summable_star_iff'\n\n",
 "summable_star_iff":
 "@[simp]\ntheorem summable_star_iff : (summable fun b => star (f b)) ↔ summable f :=\n  ⟨summable.of_star, summable.star⟩\n#align summable_star_iff summable_star_iff\n\n",
 "summable_op":
 "@[simp]\ntheorem summable_op : (summable fun a => op (f a)) ↔ summable f :=\n  ⟨summable.unop, summable.op⟩\n#align summable_op summable_op\n\n",
 "summable_of_ne_finset_zero":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b «expr ∉ » s) -/\ntheorem summable_of_ne_finset_zero (hf : ∀ (b) (_ : b ∉ s), f b = 0) : summable f :=\n  (has_sum_sum_of_ne_finset_zero hf).summable\n#align summable_of_ne_finset_zero summable_of_ne_finset_zero\n\n",
 "summable_of_eq_zero_or_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n-- TODO: generalize to monoid with a uniform continuous subtraction operator: `(a + b) - b = a`\ntheorem summable.summable_of_eq_zero_or_self (hf : summable f) (h : ∀ b, g b = 0 ∨ g b = f b) : summable g :=\n  summable_iff_vanishing.2 fun e he =>\n    let ⟨s, hs⟩ := summable_iff_vanishing.1 hf e he\n    ⟨s, fun t ht =>\n      have eq :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (t.filter fun b => g b = f b) (f b) =\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (g b) :=\n        calc\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (t.filter fun b => g b = f b) (f b) =\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (t.filter fun b => g b = f b) (g b) :=\n            finset.sum_congr rfl fun b hb => (Finset.mem_filter.1 hb).2.symm\n          _ = finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (g b) :=\n            by\n            refine' finset.sum_subset (Finset.filter_subset _ _) _\n            intro b hbt hb\n            simp only [(· ∉ ·), Finset.mem_filter, and_iff_right hbt] at hb\n            exact (h b).resolve_right hb\n          \n      eq ▸ hs _ <| Finset.disjoint_of_subset_left (Finset.filter_subset _ _) ht⟩\n#align summable.summable_of_eq_zero_or_self summable.summable_of_eq_zero_or_self\n\n",
 "summable_neg_iff":
 "theorem summable_neg_iff : (summable fun b => -f b) ↔ summable f :=\n  ⟨summable.of_neg, summable.neg⟩\n#align summable_neg_iff summable_neg_iff\n\n",
 "summable_nat_add_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem summable_nat_add_iff {f : ℕ → α} (k : ℕ) : (summable fun n => f (n + k)) ↔ summable f :=\n  iff.symm <|\n    (Equiv.addRight\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range k)\n              (f i))).surjective.summable_iff_of_has_sum_iff\n      fun a => (has_sum_nat_add_iff k).symm\n#align summable_nat_add_iff summable_nat_add_iff\n\n",
 "summable_mul_right_iff":
 "theorem summable_mul_right_iff (h : a ≠ 0) : summable f ↔ summable fun b => f b * a :=\n  ⟨fun H => H.mul_right _, fun H => by simpa only [mul_inv_cancel_right₀ h] using H.mul_right a⁻¹⟩\n#align summable_mul_right_iff summable_mul_right_iff\n\n",
 "summable_mul_prod_iff_summable_mul_sigma_antidiagonal":
 "/- The family `(k, l) : ℕ × ℕ ↦ f k * g l` is summable if and only if the family\n`(n, k, l) : Σ (n : ℕ), nat.antidiagonal n ↦ f k * g l` is summable. -/\ntheorem summable_mul_prod_iff_summable_mul_sigma_antidiagonal {f g : ℕ → α} :\n    (summable fun x : ℕ × ℕ => f x.1 * g x.2) ↔\n      summable fun x : Σn : ℕ, nat.antidiagonal n => f (x.2 : ℕ × ℕ).1 * g (x.2 : ℕ × ℕ).2 :=\n  nat.sigma_antidiagonal_equiv_prod.summable_iff.symm\n#align summable_mul_prod_iff_summable_mul_sigma_antidiagonal summable_mul_prod_iff_summable_mul_sigma_antidiagonal\n\n",
 "summable_mul_left_iff":
 "theorem summable_mul_left_iff (h : a ≠ 0) : summable f ↔ summable fun b => a * f b :=\n  ⟨fun H => H.mul_left _, fun H => by simpa only [inv_mul_cancel_left₀ h] using H.mul_left a⁻¹⟩\n#align summable_mul_left_iff summable_mul_left_iff\n\n",
 "summable_int_of_summable_nat":
 "theorem summable_int_of_summable_nat {f : ℤ → α} (hp : summable fun n : ℕ => f n) (hn : summable fun n : ℕ => f (-n)) :\n    summable f :=\n  (has_sum.nonneg_add_neg hp.has_sum <| summable.has_sum <| (summable_nat_add_iff 1).mpr hn).summable\n#align summable_int_of_summable_nat summable_int_of_summable_nat\n\n",
 "summable_iff_vanishing":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem summable_iff_vanishing :\n    summable f ↔\n      ∀ e ∈ (nhds) (0 : α),\n        ∃ s : Finset β,\n          ∀ t,\n            Disjoint t s →\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (f b) ∈\n                e :=\n  by rw [summable_iff_cauchy_seq_finset, cauchy_seq_finset_iff_vanishing]\n#align summable_iff_vanishing summable_iff_vanishing\n\n",
 "summable_iff_of_support":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\ntheorem equiv.summable_iff_of_support {g : γ → α} (e : «expr ≃ » (support f) (support g))\n    (he : ∀ x : support f, g (e x) = f x) : summable f ↔ summable g :=\n  exists_congr fun _ => e.has_sum_iff_of_support he\n#align equiv.summable_iff_of_support equiv.summable_iff_of_support\n\n",
 "summable_iff_of_summable_sub":
 "theorem summable_iff_of_summable_sub (hfg : summable fun b => f b - g b) : summable f ↔ summable g :=\n  ⟨fun hf => hf.trans_sub <| by simpa only [neg_sub] using hfg.neg, fun hg => hg.trans_sub hfg⟩\n#align summable_iff_of_summable_sub summable_iff_of_summable_sub\n\n",
 "summable_iff_of_has_sum_iff":
 "theorem function.surjective.summable_iff_of_has_sum_iff {α' : Type _} [add_comm_monoid α'] [topological_space α']\n    {e : α' → α} (hes : function.surjective e) {f : β → α} {g : γ → α'} (he : ∀ {a}, has_sum f (e a) ↔ has_sum g a) :\n    summable f ↔ summable g :=\n  hes.exists.trans <| exists_congr <| @he\n#align function.surjective.summable_iff_of_has_sum_iff function.surjective.summable_iff_of_has_sum_iff\n\n",
 "summable_iff_cauchy_seq_finset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The **Cauchy criterion** for infinite sums, also known as the **Cauchy convergence test** -/\ntheorem summable_iff_cauchy_seq_finset [complete_space α] {f : β → α} :\n    summable f ↔\n      cauchy_seq fun s : Finset β =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b) :=\n  cauchy_map_iff_exists_tendsto.symm\n#align summable_iff_cauchy_seq_finset summable_iff_cauchy_seq_finset\n\n",
 "summable_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\ntheorem equiv.summable_iff (e : «expr ≃ » γ β) : summable (f ∘ e) ↔ summable f :=\n  exists_congr fun a => e.has_sum_iff\n#align equiv.summable_iff equiv.summable_iff\n\n",
 "summable_empty":
 "theorem summable_empty [is_empty β] : summable f :=\n  has_sum_empty.summable\n#align summable_empty summable_empty\n\n",
 "summable_congr":
 "theorem summable_congr (hfg : ∀ b, f b = g b) : summable f ↔ summable g :=\n  iff_of_eq (congr_arg summable <| funext hfg)\n#align summable_congr summable_congr\n\n",
 "summable_compl_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem set.finite.summable_compl_iff {s : set β} (hs : s.finite) : summable (f ∘ coe : «expr ᶜ» s → α) ↔ summable f :=\n  (hs.summable f).summable_compl_iff\n#align set.finite.summable_compl_iff set.finite.summable_compl_iff\n\n",
 "summable_abs_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem summable_abs_iff [LinearOrderedAddCommGroup β] [uniform_space β] [uniform_add_group β] [complete_space β]\n    {f : α → β} : (summable fun x => |f x|) ↔ summable f :=\n  have h1 : ∀ x : { x | 0 ≤ f x }, |f x| = f x := fun x => abs_of_nonneg x.2\n  have h2 : ∀ x : «expr ᶜ» { x | 0 ≤ f x }, |f x| = -f x := fun x => abs_of_neg (not_le.1 x.2)\n  calc\n    (summable fun x => |f x|) ↔\n        (summable fun x : { x | 0 ≤ f x } => |f x|) ∧ summable fun x : «expr ᶜ» { x | 0 ≤ f x } => |f x| :=\n      summable_subtype_and_compl.symm\n    _ ↔ (summable fun x : { x | 0 ≤ f x } => f x) ∧ summable fun x : «expr ᶜ» { x | 0 ≤ f x } => -f x := by\n      simp only [h1, h2]\n    _ ↔ _ := by simp only [summable_neg_iff, summable_subtype_and_compl]\n    \n#align summable_abs_iff summable_abs_iff\n\n",
 "summable":
 "theorem pi.summable {f : ι → ∀ x, π x} : summable f ↔ ∀ x, summable fun i => f i x := by\n  simp only [summable, pi.has_sum, skolem]\n#align pi.summable pi.summable\n\n",
 "sum_nat_of_sum_int":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem has_sum.sum_nat_of_sum_int {α : Type _} [add_comm_monoid α] [topological_space α] [has_continuous_add α] {a : α}\n    {f : ℤ → α} (hf : has_sum f a) : has_sum (fun n : ℕ => f n + f (-n)) (a + f 0) :=\n  by\n  apply (hf.add (has_sum_ite_eq (0 : ℤ) (f 0))).has_sum_of_sum_eq fun u => _\n  refine' ⟨u.image Int.natAbs, fun v' hv' => _⟩\n  let u1 := v'.image fun x : ℕ => (x : ℤ)\n  let u2 := v'.image fun x : ℕ => -(x : ℤ)\n  have A : u ⊆ u1 ∪ u2 := by\n    intro x hx\n    simp only [mem_union, mem_image, exists_prop]\n    rcases le_total 0 x with (h'x | h'x)\n    · left\n      refine' ⟨Int.natAbs x, hv' _, _⟩\n      · simp only [mem_image, exists_prop]\n        exact ⟨x, hx, rfl⟩\n      · simp only [h'x, Int.coe_natAbs, abs_eq_self]\n    · right\n      refine' ⟨Int.natAbs x, hv' _, _⟩\n      · simp only [mem_image, exists_prop]\n        exact ⟨x, hx, rfl⟩\n      · simp only [abs_of_nonpos h'x, Int.coe_natAbs, neg_neg]\n  refine' ⟨u1 ∪ u2, A, _⟩\n  calc\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (u1 ∪ u2)\n          (f x + ite (x = 0) (f 0) 0) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (u1 ∪ u2)\n            (f x) +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (u1 ∩ u2)\n            (f x) :=\n      by\n      rw [sum_add_distrib]\n      congr 1\n      refine' (sum_subset_zero_on_sdiff inter_subset_union _ _).symm\n      · intro x hx\n        suffices x ≠ 0 by simp only [this, if_false]\n        rintro rfl\n        simpa only [mem_sdiff, mem_union, mem_image, neg_eq_zero, or_self_iff, mem_inter, and_self_iff,\n          and_not_self_iff] using hx\n      · intro x hx\n        simp only [mem_inter, mem_image, exists_prop] at hx\n        have : x = 0 := by\n          apply le_antisymm\n          · rcases hx.2 with ⟨a, ha, rfl⟩\n            simp only [right.neg_nonpos_iff, nat.cast_nonneg]\n          · rcases hx.1 with ⟨a, ha, rfl⟩\n            simp only [nat.cast_nonneg]\n        simp only [this, eq_self_iff_true, if_true]\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" u1 (f x) +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" u2 (f x) :=\n      sum_union_inter\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" v' (f b) +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" v' (f (-b)) :=\n      by simp only [sum_image, Nat.cast_inj, imp_self, imp_true_iff, neg_inj]\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" v'\n          (f b + f (-b)) :=\n      sum_add_distrib.symm\n    \n#align has_sum.sum_nat_of_sum_int has_sum.sum_nat_of_sum_int\n\n",
 "sum_le_tsum":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b «expr ∉ » s) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem sum_le_tsum {f : β → α} (s : Finset β) (hs : ∀ (b) (_ : b ∉ s), 0 ≤ f b) (hf : summable f) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b) ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) :=\n  sum_le_has_sum s hs hf.has_sum\n#align sum_le_tsum sum_le_tsum\n\n",
 "sum_le_has_sum":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b «expr ∉ » s) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_le_has_sum (s : Finset β) (hs : ∀ (b) (_ : b ∉ s), 0 ≤ f b) (hf : has_sum f a) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b) ≤ a :=\n  ge_of_tendsto hf (eventually_at_top.2 ⟨s, fun t hst => sum_le_sum_of_subset_of_nonneg hst fun b hbt hbs => hs b hbs⟩)\n#align sum_le_has_sum sum_le_has_sum\n\n",
 "sum_eq_tsum_indicator":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (x «expr ∉ » s) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem sum_eq_tsum_indicator (f : β → α) (s : Finset β) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (set.indicator (↑s) f x) :=\n  have : ∀ (x) (_ : x ∉ s), set.indicator (↑s) f x = 0 := fun x hx =>\n    set.indicator_apply_eq_zero.2 fun hx' => (hx <| Finset.mem_coe.1 hx').elim\n  (finset.sum_congr rfl fun x hx =>\n        (set.indicator_apply_eq_self.2 fun hx' => (hx' <| Finset.mem_coe.2 hx).elim).symm).trans\n    (tsum_eq_sum this).symm\n#align sum_eq_tsum_indicator sum_eq_tsum_indicator\n\n",
 "sum_add_tsum_subtype_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem sum_add_tsum_subtype_compl [t2_space α] {f : β → α} (hf : summable f) (s : Finset β) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f x) +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) :=\n  by\n  rw [← tsum_subtype_add_tsum_subtype_compl hf s]\n  simp only [finset.tsum_subtype', add_right_inj]\n  rfl\n#align sum_add_tsum_subtype_compl sum_add_tsum_subtype_compl\n\n",
 "sum_add_tsum_nat_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem sum_add_tsum_nat_add [t2_space α] {f : ℕ → α} (k : ℕ) (h : summable f) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range k) (f i) +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f (i + k)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i) :=\n  by simpa only [add_comm] using ((has_sum_nat_add_iff k).1 ((summable_nat_add_iff k).2 h).has_sum).unique h.has_sum\n#align sum_add_tsum_nat_add sum_add_tsum_nat_add\n\n",
 "sum_add_tsum_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem sum_add_tsum_compl {s : Finset β} (hf : summable f) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f x) +\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x) :=\n  ((s.has_sum f).add_compl (s.summable_compl_iff.2 hf).has_sum).tsum_eq.symm\n#align sum_add_tsum_compl sum_add_tsum_compl\n\n",
 "subtype":
 "theorem summable.subtype (hf : summable f) (s : set β) : summable (f ∘ coe : s → α) :=\n  hf.comp_injective subtype.coe_injective\n#align summable.subtype summable.subtype\n\n",
 "sub":
 "theorem summable.sub (hf : summable f) (hg : summable g) : summable fun b => f b - g b :=\n  (hf.has_sum.sub hg.has_sum).summable\n#align summable.sub summable.sub\n\n",
 "star":
 "theorem summable.star (hf : summable f) : summable fun b => star (f b) :=\n  hf.has_sum.star.summable\n#align summable.star summable.star\n\n",
 "smul_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem summable.smul_const {a : α} (hf : summable f) : summable fun z => «expr • » (f z) a :=\n  hf.has_sum.smul_const.summable\n#align summable.smul_const summable.smul_const\n\n",
 "sigma_of_has_sum":
 "theorem has_sum.sigma_of_has_sum [t3_space α] {γ : β → Type _} {f : (Σb : β, γ b) → α} {g : β → α} {a : α}\n    (ha : has_sum g a) (hf : ∀ b, has_sum (fun c => f ⟨b, c⟩) (g b)) (hf' : summable f) : has_sum f a := by\n  simpa [(hf'.has_sum.sigma hf).unique ha] using hf'.has_sum\n#align has_sum.sigma_of_has_sum has_sum.sigma_of_has_sum\n\n",
 "sigma_factor":
 "theorem summable.sigma_factor {γ : β → Type _} {f : (Σb : β, γ b) → α} (ha : summable f) (b : β) :\n    summable fun c => f ⟨b, c⟩ :=\n  ha.comp_injective sigma_mk_injective\n#align summable.sigma_factor summable.sigma_factor\n\n",
 "sigma'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem summable.sigma' [regular_space α] {γ : β → Type _} {f : (Σb : β, γ b) → α} (ha : summable f)\n    (hf : ∀ b, summable fun c => f ⟨b, c⟩) :\n    summable fun b =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f ⟨b, c⟩) :=\n  (ha.has_sum.sigma fun b => (hf b).has_sum).summable\n#align summable.sigma' summable.sigma'\n\n",
 "sigma":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem summable.sigma {γ : β → Type _} {f : (Σb : β, γ b) → α} (ha : summable f) :\n    summable fun b =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f ⟨b, c⟩) :=\n  ha.sigma' fun b => ha.sigma_factor b\n#align summable.sigma summable.sigma\n\n",
 "rel_supr_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/-- If a function is countably sub-additive then it is sub-additive on countable types -/\ntheorem rel_supr_tsum [CompleteLattice β] (m : β → α) (m0 : m («expr⊥») = 0) (R : α → α → Prop)\n    (m_supr :\n      ∀ s : ℕ → β,\n        R (m («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s i)))\n          («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (m (s i))))\n    (s : γ → β) :\n    R (m («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s b)))\n      («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (m (s b))) :=\n  by\n  cases nonempty_encodable γ\n  rw [← supr_decode₂, ← tsum_supr_decode₂ _ m0 s]\n  exact m_supr _\n#align rel_supr_tsum rel_supr_tsum\n\n",
 "rel_supr_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- If a function is countably sub-additive then it is sub-additive on finite sets -/\ntheorem rel_supr_sum [CompleteLattice β] (m : β → α) (m0 : m («expr⊥») = 0) (R : α → α → Prop)\n    (m_supr :\n      ∀ s : ℕ → β,\n        R (m («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s i)))\n          («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (m (s i))))\n    (s : δ → β) (t : Finset δ) :\n    R (m («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s d)))\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (m (s d))) :=\n  by\n  rw [supᵢ_subtype', ← finset.tsum_subtype]\n  exact rel_supr_tsum m m0 R m_supr _\n#align rel_supr_sum rel_supr_sum\n\n",
 "rel_sup_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/-- If a function is countably sub-additive then it is binary sub-additive -/\ntheorem rel_sup_add [CompleteLattice β] (m : β → α) (m0 : m («expr⊥») = 0) (R : α → α → Prop)\n    (m_supr :\n      ∀ s : ℕ → β,\n        R (m («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (s i)))\n          («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (m (s i))))\n    (s₁ s₂ : β) : R (m («expr ⊔ » s₁ s₂)) (m s₁ + m s₂) :=\n  by\n  convert rel_supr_tsum m m0 R m_supr fun b => cond b s₁ s₂\n  · simp only [supᵢ_bool_eq, cond]\n  · rw [tsum_fintype, fintype.sum_bool, cond, cond]\n#align rel_sup_add rel_sup_add\n\n",
 "prod_symm":
 "theorem summable.prod_symm {f : β × γ → α} (hf : summable f) : summable fun p : γ × β => f p.swap :=\n  (Equiv.prodComm γ β).summable_iff.2 hf\n#align summable.prod_symm summable.prod_symm\n\n",
 "prod_mk":
 "theorem has_sum.prod_mk {f : β → α} {g : β → γ} {a : α} {b : γ} (hf : has_sum f a) (hg : has_sum g b) :\n    has_sum (fun x => (⟨f x, g x⟩ : α × γ)) ⟨a, b⟩ := by\n  simp [has_sum, ← prod_mk_sum, filter.tendsto.prod_mk_nhds hf hg]\n#align has_sum.prod_mk has_sum.prod_mk\n\n",
 "prod_fiberwise":
 "/-- If a series `f` on `β × γ` has sum `a` and for each `b` the restriction of `f` to `{b} × γ`\nhas sum `g b`, then the series `g` has sum `a`. -/\ntheorem has_sum.prod_fiberwise [regular_space α] {f : β × γ → α} {g : β → α} {a : α} (ha : has_sum f a)\n    (hf : ∀ b, has_sum (fun c => f (b, c)) (g b)) : has_sum g a :=\n  has_sum.sigma ((equiv.sigma_equiv_prod β γ).has_sum_iff.2 ha) hf\n#align has_sum.prod_fiberwise has_sum.prod_fiberwise\n\n",
 "prod_factor":
 "theorem summable.prod_factor {f : β × γ → α} (h : summable f) (b : β) : summable fun c => f (b, c) :=\n  h.comp_injective fun c₁ c₂ h => (prod.ext_iff.1 h).2\n#align summable.prod_factor summable.prod_factor\n\n",
 "pos_add_zero_add_neg":
 "theorem has_sum.pos_add_zero_add_neg {b : α} {f : ℤ → α} (hpos : has_sum (fun n : ℕ => f (n + 1)) a)\n    (hneg : has_sum (fun n : ℕ => f (-n.succ)) b) : has_sum f (a + f 0 + b) :=\n  haveI : ∀ g : ℕ → α, has_sum (fun k => g (k + 1)) a → has_sum g (a + g 0) :=\n    by\n    intro g hg\n    simpa using (has_sum_nat_add_iff _).mp hg\n  (this (fun n => f n) hpos).nonneg_add_neg hneg\n#align has_sum.pos_add_zero_add_neg has_sum.pos_add_zero_add_neg\n\n",
 "op":
 "theorem summable.op (hf : summable f) : summable (op ∘ f) :=\n  hf.has_sum.op.summable\n#align summable.op summable.op\n\n",
 "of_star":
 "theorem summable.of_star (hf : summable fun b => star (f b)) : summable f := by simpa only [star_star] using hf.star\n#align summable.of_star summable.of_star\n\n",
 "of_neg":
 "theorem summable.of_neg (hf : summable fun b => -f b) : summable f := by simpa only [neg_neg] using hf.neg\n#align summable.of_neg summable.of_neg\n\n",
 "nonpos":
 "theorem has_sum.nonpos (h : ∀ b, g b ≤ 0) (ha : has_sum g a) : a ≤ 0 :=\n  has_sum_le h ha has_sum_zero\n#align has_sum.nonpos has_sum.nonpos\n\n",
 "nonneg_add_neg":
 "theorem has_sum.nonneg_add_neg {b : α} {f : ℤ → α} (hnonneg : has_sum (fun n : ℕ => f n) a)\n    (hneg : has_sum (fun n : ℕ => f (-n.succ)) b) : has_sum f (a + b) :=\n  by\n  simp_rw [← Int.negSucc_coe] at hneg\n  convert hnonneg.int_rec hneg using 1\n  ext (i | j) <;> rfl\n#align has_sum.nonneg_add_neg has_sum.nonneg_add_neg\n\n",
 "nonneg":
 "theorem has_sum.nonneg (h : ∀ b, 0 ≤ g b) (ha : has_sum g a) : 0 ≤ a :=\n  has_sum_le h has_sum_zero ha\n#align has_sum.nonneg has_sum.nonneg\n\n",
 "neg":
 "theorem summable.neg (hf : summable f) : summable fun b => -f b :=\n  hf.has_sum.neg.summable\n#align summable.neg summable.neg\n\n",
 "mul_right":
 "theorem summable.mul_right (a) (hf : summable f) : summable fun b => f b * a :=\n  (hf.has_sum.mul_right _).summable\n#align summable.mul_right summable.mul_right\n\n",
 "mul_left":
 "theorem summable.mul_left (a) (hf : summable f) : summable fun b => a * f b :=\n  (hf.has_sum.mul_left _).summable\n#align summable.mul_left summable.mul_left\n\n",
 "mul_eq":
 "theorem has_sum.mul_eq (hf : has_sum f s) (hg : has_sum g t) (hfg : has_sum (fun x : β × γ => f x.1 * g x.2) u) :\n    s * t = u :=\n  have key₁ : has_sum (fun b => f b * t) (s * t) := hf.mul_right t\n  have this : ∀ b : β, has_sum (fun c : γ => f b * g c) (f b * t) := fun b => hg.mul_left (f b)\n  have key₂ : has_sum (fun b => f b * t) u := has_sum.prod_fiberwise hfg this\n  key₁.unique key₂\n#align has_sum.mul_eq has_sum.mul_eq\n\n",
 "mul":
 "theorem has_sum.mul (hf : has_sum f s) (hg : has_sum g t) (hfg : summable fun x : β × γ => f x.1 * g x.2) :\n    has_sum (fun x : β × γ => f x.1 * g x.2) (s * t) :=\n  let ⟨u, hu⟩ := hfg\n  (hf.mul_eq hg hu).symm ▸ hu\n#align has_sum.mul has_sum.mul\n\n",
 "map_iff_of_left_inverse":
 "protected theorem summable.map_iff_of_left_inverse [add_comm_monoid γ] [topological_space γ] {G G'}\n    [AddMonoidHomClass G α γ] [AddMonoidHomClass G' γ α] (g : G) (g' : G') (hg : continuous g) (hg' : continuous g')\n    (hinv : function.left_inverse g' g) : summable (g ∘ f) ↔ summable f :=\n  ⟨fun h => by\n    have := h.map _ hg'\n    rwa [← function.comp.assoc, hinv.id] at this, fun h => h.map _ hg⟩\n#align summable.map_iff_of_left_inverse summable.map_iff_of_left_inverse\n\n",
 "map_iff_of_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃+ » -/\n/-- A special case of `summable.map_iff_of_left_inverse` for convenience -/\nprotected theorem summable.map_iff_of_equiv [add_comm_monoid γ] [topological_space γ] {G} [AddEquivClass G α γ] (g : G)\n    (hg : continuous g) (hg' : continuous (add_equiv_class.inv g : γ → α)) : summable (g ∘ f) ↔ summable f :=\n  summable.map_iff_of_left_inverse g (g : «expr ≃+ » α γ).symm hg hg' (add_equiv_class.left_inv g)\n#align summable.map_iff_of_equiv summable.map_iff_of_equiv\n\n",
 "map":
 "protected theorem summable.map [add_comm_monoid γ] [topological_space γ] (hf : summable f) {G} [AddMonoidHomClass G α γ]\n    (g : G) (hg : continuous g) : summable (g ∘ f) :=\n  (hf.has_sum.map g hg).summable\n#align summable.map summable.map\n\n",
 "le_tsum'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem le_tsum' (hf : summable f) (b : β) :\n    f b ≤ «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) :=\n  le_tsum hf b fun _ _ => zero_le _\n#align le_tsum' le_tsum'\n\n",
 "le_tsum":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b' «expr ≠ » b) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem le_tsum (hf : summable f) (b : β) (hb : ∀ (b') (_ : b' ≠ b), 0 ≤ f b') :\n    f b ≤ «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) :=\n  le_has_sum (summable.has_sum hf) b hb\n#align le_tsum le_tsum\n\n",
 "le_has_sum_of_le_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem le_has_sum_of_le_sum (hf : has_sum f a)\n    (h :\n      ∀ s : Finset β,\n        a₂ ≤ finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b)) :\n    a₂ ≤ a :=\n  ge_of_tendsto' hf h\n#align le_has_sum_of_le_sum le_has_sum_of_le_sum\n\n",
 "le_has_sum'":
 "theorem le_has_sum' (hf : has_sum f a) (b : β) : f b ≤ a :=\n  le_has_sum hf b fun _ _ => zero_le _\n#align le_has_sum' le_has_sum'\n\n",
 "le_has_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b' «expr ≠ » b) -/\ntheorem le_has_sum (hf : has_sum f a) (b : β) (hb : ∀ (b') (_ : b' ≠ b), 0 ≤ f b') : f b ≤ a :=\n  calc\n    f b = finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" {b} (f b) :=\n      finset.sum_singleton.symm\n    _ ≤ a :=\n      sum_le_has_sum _\n        (by\n          convert hb\n          simp)\n        hf\n    \n#align le_has_sum le_has_sum\n\n",
 "is_lub_has_sum'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem is_lub_has_sum' (hf : has_sum f a) :\n    IsLUB\n      (Set.range fun s : Finset β =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b))\n      a :=\n  is_lub_of_tendsto_at_top (finset.sum_mono_set f) hf\n#align is_lub_has_sum' is_lub_has_sum'\n\n",
 "is_lub_has_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem is_lub_has_sum (h : ∀ b, 0 ≤ f b) (hf : has_sum f a) :\n    IsLUB\n      (Set.range fun s : Finset β =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b))\n      a :=\n  is_lub_of_tendsto_at_top (finset.sum_mono_set_of_nonneg h) hf\n#align is_lub_has_sum is_lub_has_sum\n\n",
 "int_rec":
 "/-- If `f₀, f₁, f₂, ...` and `g₀, g₁, g₂, ...` are both convergent then so is the `ℤ`-indexed\nsequence: `..., g₂, g₁, g₀, f₀, f₁, f₂, ...`. -/\ntheorem has_sum.int_rec {b : α} {f g : ℕ → α} (hf : has_sum f a) (hg : has_sum g b) :\n    @has_sum α _ _ _ (@int.rec (fun _ => α) f g : ℤ → α) (a + b) :=\n  by\n  -- note this proof works for any two-case inductive\n  have h₁ : injective (coe : ℕ → ℤ) := @int.of_nat.inj\n  have h₂ : injective Int.negSucc := @int.neg_succ_of_nat.inj\n  have : IsCompl (Set.range (coe : ℕ → ℤ)) (Set.range Int.negSucc) :=\n    by\n    constructor\n    · rw [disjoint_iff_inf_le]\n      rintro _ ⟨⟨i, rfl⟩, ⟨j, ⟨⟩⟩⟩\n    · rw [codisjoint_iff_le_sup]\n      rintro (i | j) h\n      exacts[or.inl ⟨_, rfl⟩, or.inr ⟨_, rfl⟩]\n  exact has_sum.add_is_compl this (h₁.has_sum_range_iff.mpr hf) (h₂.has_sum_range_iff.mpr hg)\n#align has_sum.int_rec has_sum.int_rec\n\n",
 "indicator":
 "protected theorem summable.indicator (hf : summable f) (s : set β) : summable (s.indicator f) :=\n  hf.summable_of_eq_zero_or_self <| set.indicator_eq_zero_or_self _ _\n#align summable.indicator summable.indicator\n\n",
 "has_sum_zero_iff_of_nonneg":
 "theorem has_sum_zero_iff_of_nonneg (hf : ∀ i, 0 ≤ f i) : has_sum f 0 ↔ f = 0 :=\n  by\n  constructor\n  · intro hf'\n    ext i\n    by_contra hi'\n    have hi : 0 < f i := lt_of_le_of_ne (hf i) (ne.symm hi')\n    simpa using has_sum_lt hf hi has_sum_zero hf'\n  · rintro rfl\n    exact has_sum_zero\n#align has_sum_zero_iff_of_nonneg has_sum_zero_iff_of_nonneg\n\n",
 "has_sum_zero_iff":
 "theorem has_sum_zero_iff : has_sum f 0 ↔ ∀ x, f x = 0 :=\n  by\n  refine' ⟨_, fun h => _⟩\n  · contrapose!\n    exact fun ⟨x, hx⟩ h => irrefl _ (lt_of_lt_of_le (pos_iff_ne_zero.2 hx) (le_has_sum' h x))\n  · convert has_sum_zero\n    exact funext h\n#align has_sum_zero_iff has_sum_zero_iff\n\n",
 "has_sum_zero":
 "/-- Constant zero function has sum `0` -/\ntheorem has_sum_zero : has_sum (fun b => 0 : β → α) 0 := by simp [has_sum, tendsto_const_nhds]\n#align has_sum_zero has_sum_zero\n\n",
 "has_sum_unop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n@[simp]\ntheorem has_sum_unop {f : β → «expr ᵐᵒᵖ» α} {a : «expr ᵐᵒᵖ» α} : has_sum (fun a => unop (f a)) (unop a) ↔ has_sum f a :=\n  ⟨has_sum.op, has_sum.unop⟩\n#align has_sum_unop has_sum_unop\n\n",
 "has_sum_sum_of_ne_finset_zero":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b «expr ∉ » s) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- If a function `f` vanishes outside of a finite set `s`, then it `has_sum` `∑ b in s, f b`. -/\ntheorem has_sum_sum_of_ne_finset_zero (hf : ∀ (b) (_ : b ∉ s), f b = 0) :\n    has_sum f\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b)) :=\n  (has_sum_subtype_iff_of_support_subset <| support_subset_iff'.2 hf).1 <| s.has_sum f\n#align has_sum_sum_of_ne_finset_zero has_sum_sum_of_ne_finset_zero\n\n",
 "has_sum_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem has_sum_sum {f : γ → β → α} {a : γ → α} {s : Finset γ} :\n    (∀ i ∈ s, has_sum (f i) (a i)) →\n      has_sum\n        (fun b =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i b))\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (a i)) :=\n  Finset.induction_on s (by simp only [has_sum_zero, sum_empty, forall_true_iff])\n    (by\n      simp (config := { contextual := true }) only [has_sum.add, sum_insert, mem_insert, forall_eq_or_imp,\n        forall₂_true_iff, not_false_iff, forall_true_iff])\n#align has_sum_sum has_sum_sum\n\n",
 "has_sum_subtype_support":
 "@[simp]\ntheorem has_sum_subtype_support : has_sum (f ∘ coe : support f → α) a ↔ has_sum f a :=\n  has_sum_subtype_iff_of_support_subset <| Set.Subset.refl _\n#align has_sum_subtype_support has_sum_subtype_support\n\n",
 "has_sum_subtype_iff_of_support_subset":
 "theorem has_sum_subtype_iff_of_support_subset {s : set β} (hf : support f ⊆ s) :\n    has_sum (f ∘ coe : s → α) a ↔ has_sum f a :=\n  subtype.coe_injective.has_sum_iff <| by simpa using support_subset_iff'.1 hf\n#align has_sum_subtype_iff_of_support_subset has_sum_subtype_iff_of_support_subset\n\n",
 "has_sum_subtype_iff_indicator":
 "theorem has_sum_subtype_iff_indicator {s : set β} : has_sum (f ∘ coe : s → α) a ↔ has_sum (s.indicator f) a := by\n  rw [← set.indicator_range_comp, Subtype.range_coe, has_sum_subtype_iff_of_support_subset set.support_indicator_subset]\n#align has_sum_subtype_iff_indicator has_sum_subtype_iff_indicator\n\n",
 "has_sum_strict_mono":
 "@[mono]\ntheorem has_sum_strict_mono (hf : has_sum f a₁) (hg : has_sum g a₂) (h : f < g) : a₁ < a₂ :=\n  let ⟨hle, i, hi⟩ := Pi.lt_def.mp h\n  has_sum_lt hle hi hf hg\n#align has_sum_strict_mono has_sum_strict_mono\n\n",
 "has_sum_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (b' «expr ≠ » b) -/\ntheorem has_sum_single {f : β → α} (b : β) (hf : ∀ (b') (_ : b' ≠ b), f b' = 0) : has_sum f (f b) :=\n  suffices\n    has_sum f\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" {b} (f b'))\n    by simpa using this\n  has_sum_sum_of_ne_finset_zero <| by simpa [hf]\n#align has_sum_single has_sum_single\n\n",
 "has_sum_range_iff":
 "theorem function.injective.has_sum_range_iff {g : γ → β} (hg : injective g) :\n    has_sum (fun x : Set.range g => f x) a ↔ has_sum (f ∘ g) a :=\n  (Equiv.ofInjective g hg).has_sum_iff.symm\n#align function.injective.has_sum_range_iff function.injective.has_sum_range_iff\n\n",
 "has_sum_op":
 "@[simp]\ntheorem has_sum_op : has_sum (fun a => op (f a)) (op a) ↔ has_sum f a :=\n  ⟨has_sum.unop, has_sum.op⟩\n#align has_sum_op has_sum_op\n\n",
 "has_sum_of_sum_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem has_sum.has_sum_of_sum_eq {g : γ → α}\n    (h_eq :\n      ∀ u : Finset γ,\n        ∃ v : Finset β,\n          ∀ v',\n            v ⊆ v' →\n              ∃ u',\n                u ⊆ u' ∧\n                  finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" u'\n                      (g x) =\n                    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" v'\n                      (f b))\n    (hf : has_sum g a) : has_sum f a :=\n  le_trans (map_at_top_finset_sum_le_of_sum_eq h_eq) hf\n#align has_sum.has_sum_of_sum_eq has_sum.has_sum_of_sum_eq\n\n",
 "has_sum_of_is_lub_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem has_sum_of_is_lub_of_nonneg [LinearOrderedAddCommMonoid β] [topological_space β] [order_topology β] {f : α → β}\n    (b : β) (h : ∀ b, 0 ≤ f b)\n    (hf :\n      IsLUB\n        (Set.range fun s =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f a))\n        b) :\n    has_sum f b :=\n  tendsto_at_top_is_lub (finset.sum_mono_set_of_nonneg h) hf\n#align has_sum_of_is_lub_of_nonneg has_sum_of_is_lub_of_nonneg\n\n",
 "has_sum_of_is_lub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem has_sum_of_is_lub [CanonicallyLinearOrderedAddMonoid β] [topological_space β] [order_topology β] {f : α → β}\n    (b : β)\n    (hf :\n      IsLUB\n        (Set.range fun s =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f a))\n        b) :\n    has_sum f b :=\n  tendsto_at_top_is_lub (finset.sum_mono_set f) hf\n#align has_sum_of_is_lub has_sum_of_is_lub\n\n",
 "has_sum_nat_add_iff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem has_sum_nat_add_iff' {f : ℕ → α} (k : ℕ) {a : α} :\n    has_sum (fun n => f (n + k))\n        (a -\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range k)\n            (f i)) ↔\n      has_sum f a :=\n  by simp [has_sum_nat_add_iff]\n#align has_sum_nat_add_iff' has_sum_nat_add_iff'\n\n",
 "has_sum_nat_add_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem has_sum_nat_add_iff {f : ℕ → α} (k : ℕ) {a : α} :\n    has_sum (fun n => f (n + k)) a ↔\n      has_sum f\n        (a +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range k)\n            (f i)) :=\n  by\n  refine' iff.trans _ (range k).has_sum_compl_iff\n  rw [← (notMemRangeEquiv k).symm.has_sum_iff]\n  rfl\n#align has_sum_nat_add_iff has_sum_nat_add_iff\n\n",
 "has_sum_mul_right_iff":
 "theorem has_sum_mul_right_iff (h : a₂ ≠ 0) : has_sum f a₁ ↔ has_sum (fun b => f b * a₂) (a₁ * a₂) :=\n  ⟨has_sum.mul_right _, fun H => by simpa only [mul_inv_cancel_right₀ h] using H.mul_right a₂⁻¹⟩\n#align has_sum_mul_right_iff has_sum_mul_right_iff\n\n",
 "has_sum_mul_left_iff":
 "theorem has_sum_mul_left_iff (h : a₂ ≠ 0) : has_sum f a₁ ↔ has_sum (fun b => a₂ * f b) (a₂ * a₁) :=\n  ⟨has_sum.mul_left _, fun H => by simpa only [inv_mul_cancel_left₀ h] using H.mul_left a₂⁻¹⟩\n#align has_sum_mul_left_iff has_sum_mul_left_iff\n\n",
 "has_sum_mono":
 "@[mono]\ntheorem has_sum_mono (hf : has_sum f a₁) (hg : has_sum g a₂) (h : f ≤ g) : a₁ ≤ a₂ :=\n  has_sum_le h hf hg\n#align has_sum_mono has_sum_mono\n\n",
 "has_sum_lt":
 "theorem has_sum_lt {i : β} (h : ∀ b : β, f b ≤ g b) (hi : f i < g i) (hf : has_sum f a₁) (hg : has_sum g a₂) :\n    a₁ < a₂ := by\n  have : update f i 0 ≤ update g i 0 := update_le_update_iff.mpr ⟨rfl.le, fun i _ => h i⟩\n  have : 0 - f i + a₁ ≤ 0 - g i + a₂ := has_sum_le this (hf.update i 0) (hg.update i 0)\n  simpa only [zero_sub, add_neg_cancel_left] using add_lt_add_of_lt_of_le hi this\n#align has_sum_lt has_sum_lt\n\n",
 "has_sum_le_of_sum_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem has_sum_le_of_sum_le (hf : has_sum f a)\n    (h :\n      ∀ s : Finset β,\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b) ≤ a₂) :\n    a ≤ a₂ :=\n  le_of_tendsto' hf h\n#align has_sum_le_of_sum_le has_sum_le_of_sum_le\n\n",
 "has_sum_le_inj":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (c «expr ∉ » set.range[set.range] i) -/\ntheorem has_sum_le_inj {g : γ → α} (i : β → γ) (hi : injective i) (hs : ∀ (c) (_ : c ∉ Set.range i), 0 ≤ g c)\n    (h : ∀ b, f b ≤ g (i b)) (hf : has_sum f a₁) (hg : has_sum g a₂) : a₁ ≤ a₂ :=\n  by\n  have : has_sum (fun c => (partial_inv i c).cases_on' 0 f) a₁ :=\n    by\n    refine' (has_sum_iff_has_sum_of_ne_zero_bij (i ∘ coe) _ _ _).2 hf\n    · exact fun c₁ c₂ eq => hi eq\n    · intro c hc\n      rw [mem_support] at hc\n      cases' eq : partial_inv i c with b <;> rw [eq] at hc\n      · contradiction\n      · rw [partial_inv_of_injective hi] at eq\n        exact ⟨⟨b, hc⟩, eq⟩\n    · intro c\n      simp [partial_inv_left hi, option.cases_on']\n  refine' has_sum_le (fun c => _) this hg\n  by_cases c ∈ Set.range i\n  · rcases h with ⟨b, rfl⟩\n    rw [partial_inv_left hi, option.cases_on']\n    exact h _\n  · have : partial_inv i c = none := dif_neg h\n    rw [this, option.cases_on']\n    exact hs _ h\n#align has_sum_le_inj has_sum_le_inj\n\n",
 "has_sum_le":
 "theorem has_sum_le (h : ∀ b, f b ≤ g b) (hf : has_sum f a₁) (hg : has_sum g a₂) : a₁ ≤ a₂ :=\n  le_of_tendsto_of_tendsto' hf hg fun s => sum_le_sum fun b _ => h b\n#align has_sum_le has_sum_le\n\n",
 "has_sum_ite_sub_has_sum":
 "theorem has_sum_ite_sub_has_sum [decidable_eq β] (hf : has_sum f a) (b : β) :\n    has_sum (fun n => ite (n = b) 0 (f n)) (a - f b) :=\n  by\n  convert hf.update b 0 using 1\n  · ext n\n    rw [function.update_apply]\n  · rw [sub_add_eq_add_sub, zero_add]\n#align has_sum_ite_sub_has_sum has_sum_ite_sub_has_sum\n\n",
 "has_sum_ite_eq":
 "theorem has_sum_ite_eq (b : β) [decidable_pred (· = b)] (a : α) : has_sum (fun b' => if b' = b then a else 0) a :=\n  by\n  convert has_sum_single b _\n  · exact (if_pos rfl).symm\n  intro b' hb'\n  exact if_neg hb'\n#align has_sum_ite_eq has_sum_ite_eq\n\n",
 "has_sum_iff_tendsto_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem summable.has_sum_iff_tendsto_nat [t2_space α] {f : ℕ → α} {a : α} (hf : summable f) :\n    has_sum f a ↔\n      tendsto\n        (fun n : ℕ =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n            (f i))\n        at_top ((nhds) a) :=\n  by\n  refine' ⟨fun h => h.tendsto_sum_nat, fun h => _⟩\n  rw [tendsto_nhds_unique h hf.has_sum.tendsto_sum_nat]\n  exact hf.has_sum\n#align summable.has_sum_iff_tendsto_nat summable.has_sum_iff_tendsto_nat\n\n",
 "has_sum_iff_of_support":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\ntheorem equiv.has_sum_iff_of_support {g : γ → α} (e : «expr ≃ » (support f) (support g))\n    (he : ∀ x : support f, g (e x) = f x) : has_sum f a ↔ has_sum g a :=\n  by\n  have : (g ∘ coe) ∘ e = f ∘ coe := funext he\n  rw [← has_sum_subtype_support, ← this, e.has_sum_iff, has_sum_subtype_support]\n#align equiv.has_sum_iff_of_support equiv.has_sum_iff_of_support\n\n",
 "has_sum_iff_has_sum_of_ne_zero_bij":
 "theorem has_sum_iff_has_sum_of_ne_zero_bij {g : γ → α} (i : support g → β) (hi : ∀ ⦃x y⦄, i x = i y → (x : γ) = y)\n    (hf : support f ⊆ Set.range i) (hfg : ∀ x, f (i x) = g x) : has_sum f a ↔ has_sum g a :=\n  iff.symm <|\n    equiv.has_sum_iff_of_support\n      (Equiv.ofBijective (fun x => ⟨i x, fun hx => x.coe_prop <| hfg x ▸ hx⟩)\n        ⟨fun x y h => subtype.ext <| hi <| subtype.ext_iff.1 h, fun y =>\n          (hf y.coe_prop).imp fun x hx => subtype.ext hx⟩)\n      hfg\n#align has_sum_iff_has_sum_of_ne_zero_bij has_sum_iff_has_sum_of_ne_zero_bij\n\n",
 "has_sum_iff_has_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem has_sum_iff_has_sum {g : γ → α}\n    (h₁ :\n      ∀ u : Finset γ,\n        ∃ v : Finset β,\n          ∀ v',\n            v ⊆ v' →\n              ∃ u',\n                u ⊆ u' ∧\n                  finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" u'\n                      (g x) =\n                    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" v'\n                      (f b))\n    (h₂ :\n      ∀ v : Finset β,\n        ∃ u : Finset γ,\n          ∀ u',\n            u ⊆ u' →\n              ∃ v',\n                v ⊆ v' ∧\n                  finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" v'\n                      (f b) =\n                    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" u'\n                      (g x)) :\n    has_sum f a ↔ has_sum g a :=\n  ⟨has_sum.has_sum_of_sum_eq h₂, has_sum.has_sum_of_sum_eq h₁⟩\n#align has_sum_iff_has_sum has_sum_iff_has_sum\n\n",
 "has_sum_iff_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\nprotected theorem finset.has_sum_iff_compl (s : Finset β) :\n    has_sum f a ↔\n      has_sum (fun x : { x // x ∉ s } => f x)\n        (a - finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) :=\n  (s.has_sum f).has_sum_iff_compl\n#align finset.has_sum_iff_compl finset.has_sum_iff_compl\n\n",
 "has_sum_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem summable.has_sum_iff (h : summable f) :\n    has_sum f a ↔\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f b) = a :=\n  iff.intro has_sum.tsum_eq fun eq => eq ▸ h.has_sum\n#align summable.has_sum_iff summable.has_sum_iff\n\n",
 "has_sum_fintype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem has_sum_fintype [fintype β] (f : β → α) :\n    has_sum f\n      (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (f b)) :=\n  order_top.tendsto_at_top_nhds _\n#align has_sum_fintype has_sum_fintype\n\n",
 "has_sum_empty":
 "theorem has_sum_empty [is_empty β] : has_sum f 0 := by convert has_sum_zero\n#align has_sum_empty has_sum_empty\n\n",
 "has_sum_compl_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\nprotected theorem finset.has_sum_compl_iff (s : Finset β) :\n    has_sum (fun x : { x // x ∉ s } => f x) a ↔\n      has_sum f\n        (a + finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) :=\n  (s.has_sum f).has_sum_compl_iff.trans <| by rw [add_comm]\n#align finset.has_sum_compl_iff finset.has_sum_compl_iff\n\n",
 "has_sum":
 "theorem pi.has_sum {f : ι → ∀ x, π x} {g : ∀ x, π x} : has_sum f g ↔ ∀ x, has_sum (fun i => f i x) (g x) := by\n  simp only [has_sum, tendsto_pi_nhds, sum_apply]\n#align pi.has_sum pi.has_sum\n\n",
 "finite_of_summable_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem finite_of_summable_const [LinearOrderedAddCommGroup β] [Archimedean β] [topological_space β]\n    [order_closed_topology β] {b : β} (hb : 0 < b) (hf : summable fun a : α => b) : set.finite (Set.univ : set α) :=\n  by\n  have H :\n    ∀ s : Finset α,\n      «expr • » s.card b ≤\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" b :=\n    by\n    intro s\n    simpa using sum_le_has_sum s (fun a ha => hb.le) hf.has_sum\n  obtain ⟨n, hn⟩ :=\n    archimedean.arch\n      («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" b) hb\n  have : ∀ s : Finset α, s.card ≤ n := by\n    intro s\n    simpa [nsmul_le_nsmul_iff hb] using (H s).trans hn\n  haveI : fintype α := fintype_of_finset_card_le n this\n  exact set.finite_univ\n#align finite_of_summable_const finite_of_summable_const\n\n",
 "even_add_odd":
 "theorem summable.even_add_odd {f : ℕ → α} (he : summable fun k => f (2 * k)) (ho : summable fun k => f (2 * k + 1)) :\n    summable f :=\n  (he.has_sum.even_add_odd ho.has_sum).summable\n#align summable.even_add_odd summable.even_add_odd\n\n",
 "eq_add_of_has_sum_ite":
 "/-- Version of `has_sum_ite_sub_has_sum` for `add_comm_monoid` rather than `add_comm_group`.\nRather than showing that the `ite` expression has a specific sum in terms of `has_sum`,\nit gives a relationship between the sums of `f` and `ite (n = b) 0 (f n)` given that both exist. -/\ntheorem eq_add_of_has_sum_ite {α β : Type _} [topological_space α] [add_comm_monoid α] [t2_space α]\n    [has_continuous_add α] {f : β → α} {a : α} (hf : has_sum f a) (b : β) (a' : α)\n    (hf' : has_sum (fun n => ite (n = b) 0 (f n)) a') : a = a' + f b :=\n  by\n  refine' (add_zero a).symm.trans (hf.update' b 0 _)\n  convert hf'\n  exact funext (f.update_apply b 0)\n#align eq_add_of_has_sum_ite eq_add_of_has_sum_ite\n\n",
 "div_const":
 "theorem summable.div_const (h : summable f) (b : α) : summable fun x => f x / b :=\n  (h.has_sum.div_const b).summable\n#align summable.div_const summable.div_const\n\n",
 "dist_le_tsum_of_dist_le_of_tendsto₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem dist_le_tsum_of_dist_le_of_tendsto₀ [pseudo_metric_space α] {f : ℕ → α} (d : ℕ → exprℝ)\n    (hf : ∀ n, dist (f n) (f n.succ) ≤ d n) (hd : summable d) {a : α} (ha : tendsto f at_top ((nhds) a)) :\n    dist (f 0) a ≤ tsum d := by simpa only [zero_add] using dist_le_tsum_of_dist_le_of_tendsto d hf hd ha 0\n#align dist_le_tsum_of_dist_le_of_tendsto₀ dist_le_tsum_of_dist_le_of_tendsto₀\n\n",
 "dist_le_tsum_of_dist_le_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem dist_le_tsum_of_dist_le_of_tendsto [pseudo_metric_space α] {f : ℕ → α} (d : ℕ → exprℝ)\n    (hf : ∀ n, dist (f n) (f n.succ) ≤ d n) (hd : summable d) {a : α} (ha : tendsto f at_top ((nhds) a)) (n : ℕ) :\n    dist (f n) a ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (d (n + m)) :=\n  by\n  refine' le_of_tendsto (tendsto_const_nhds.dist ha) (eventually_at_top.2 ⟨n, fun m hnm => _⟩)\n  refine' le_trans (dist_le_Ico_sum_of_dist_le hnm fun k _ _ => hf k) _\n  rw [sum_Ico_eq_sum_range]\n  refine' sum_le_tsum (range _) (fun _ _ => le_trans dist_nonneg (hf _)) _\n  exact hd.comp_injective (add_right_injective n)\n#align dist_le_tsum_of_dist_le_of_tendsto dist_le_tsum_of_dist_le_of_tendsto\n\n",
 "dist_le_tsum_dist_of_tendsto₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem dist_le_tsum_dist_of_tendsto₀ [pseudo_metric_space α] {f : ℕ → α} (h : summable fun n => dist (f n) (f n.succ))\n    {a : α} (ha : tendsto f at_top ((nhds) a)) :\n    dist (f 0) a ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (dist (f n) (f n.succ)) :=\n  by simpa only [zero_add] using dist_le_tsum_dist_of_tendsto h ha 0\n#align dist_le_tsum_dist_of_tendsto₀ dist_le_tsum_dist_of_tendsto₀\n\n",
 "dist_le_tsum_dist_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem dist_le_tsum_dist_of_tendsto [pseudo_metric_space α] {f : ℕ → α} (h : summable fun n => dist (f n) (f n.succ))\n    {a : α} (ha : tendsto f at_top ((nhds) a)) (n) :\n    dist (f n) a ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (dist (f (n + m)) (f (n + m).succ)) :=\n  show\n    dist (f n) a ≤\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        ((fun x => dist (f x) (f x.succ)) (n + m))\n    from dist_le_tsum_of_dist_le_of_tendsto (fun n => dist (f n) (f n.succ)) (fun _ => le_rfl) h ha n\n#align dist_le_tsum_dist_of_tendsto dist_le_tsum_dist_of_tendsto\n\n",
 "const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem summable.const_smul {r : R} (hf : summable f) : summable fun z => «expr • » r (f z) :=\n  hf.has_sum.const_smul.summable\n#align summable.const_smul summable.const_smul\n\n",
 "congr":
 "theorem summable.congr (hf : summable f) (hfg : ∀ b, f b = g b) : summable g :=\n  (summable_congr hfg).mp hf\n#align summable.congr summable.congr\n\n",
 "compl_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem summable.compl_add {s : set β} (hs : summable (f ∘ coe : «expr ᶜ» s → α)) (hsc : summable (f ∘ coe : s → α)) :\n    summable f :=\n  (hs.has_sum.compl_add hsc.has_sum).summable\n#align summable.compl_add summable.compl_add\n\n",
 "comp_injective":
 "theorem summable.comp_injective {i : γ → β} (hf : summable f) (hi : injective i) : summable (f ∘ i) :=\n  by\n  simpa only [set.indicator_range_comp] using (hi.summable_iff _).2 (hf.indicator (Set.range i))\n  exact fun x hx => set.indicator_of_not_mem hx _\n#align summable.comp_injective summable.comp_injective\n\n",
 "cauchy_seq_of_summable_dist":
 "theorem cauchy_seq_of_summable_dist [pseudo_metric_space α] {f : ℕ → α} (h : summable fun n => dist (f n) (f n.succ)) :\n    cauchy_seq f :=\n  cauchy_seq_of_dist_le_of_summable _ (fun _ => le_rfl) h\n#align cauchy_seq_of_summable_dist cauchy_seq_of_summable_dist\n\n",
 "cauchy_seq_of_edist_le_of_summable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/-- If the extended distance between consecutive points of a sequence is estimated\nby a summable series of `nnreal`s, then the original sequence is a Cauchy sequence. -/\ntheorem cauchy_seq_of_edist_le_of_summable [pseudo_emetric_space α] {f : ℕ → α} (d : ℕ → nnreal)\n    (hf : ∀ n, edist (f n) (f n.succ) ≤ d n) (hd : summable d) : cauchy_seq f :=\n  by\n  refine' emetric.cauchy_seq_iff_nnreal.2 fun ε εpos => _\n  -- Actually we need partial sums of `d` to be a Cauchy sequence\n  replace hd :\n    cauchy_seq fun n : ℕ =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n) (d x) :=\n    let ⟨_, H⟩ := hd\n    H.tendsto_sum_nat.cauchy_seq\n  -- Now we take the same `N` as in one of the definitions of a Cauchy sequence\n  refine' (metric.cauchy_seq_iff'.1 hd ε (nnreal.coe_pos.2 εpos)).imp fun N hN n hn => _\n  have hsum := hN n hn\n  -- We simplify the known inequality\n  rw [dist_nndist, nnreal.nndist_eq, ← sum_range_add_sum_Ico _ hn, add_tsub_cancel_left] at hsum\n  norm_cast  at hsum\n  replace hsum := lt_of_le_of_lt (le_max_left _ _) hsum\n  rw [edist_comm]\n  -- Then use `hf` to simplify the goal to the same form\n  apply lt_of_le_of_lt (edist_le_Ico_sum_of_edist_le hn fun k _ _ => hf k)\n  assumption_mod_cast\n#align cauchy_seq_of_edist_le_of_summable cauchy_seq_of_edist_le_of_summable\n\n",
 "cauchy_seq_of_dist_le_of_summable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- If the distance between consecutive points of a sequence is estimated by a summable series,\nthen the original sequence is a Cauchy sequence. -/\ntheorem cauchy_seq_of_dist_le_of_summable [pseudo_metric_space α] {f : ℕ → α} (d : ℕ → exprℝ)\n    (hf : ∀ n, dist (f n) (f n.succ) ≤ d n) (hd : summable d) : cauchy_seq f :=\n  by\n  refine' metric.cauchy_seq_iff'.2 fun ε εpos => _\n  replace hd :\n    cauchy_seq fun n : ℕ =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n) (d x) :=\n    let ⟨_, H⟩ := hd\n    H.tendsto_sum_nat.cauchy_seq\n  refine' (metric.cauchy_seq_iff'.1 hd ε εpos).imp fun N hN n hn => _\n  have hsum := hN n hn\n  rw [real.dist_eq, ← sum_Ico_eq_sub _ hn] at hsum\n  calc\n    dist (f n) (f N) = dist (f N) (f n) := dist_comm _ _\n    _ ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Ico N n)\n          (d x) :=\n      dist_le_Ico_sum_of_dist_le hn fun k _ _ => hf k\n    _ ≤\n        |finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Ico N n)\n            (d x)| :=\n      le_abs_self _\n    _ < ε := hsum\n    \n#align cauchy_seq_of_dist_le_of_summable cauchy_seq_of_dist_le_of_summable\n\n",
 "cauchy_seq_finset_iff_vanishing":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem cauchy_seq_finset_iff_vanishing :\n    (cauchy_seq fun s : Finset β =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f b)) ↔\n      ∀ e ∈ (nhds) (0 : α),\n        ∃ s : Finset β,\n          ∀ t,\n            Disjoint t s →\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t (f b) ∈\n                e :=\n  by\n  simp only [cauchy_seq, cauchy_map_iff, and_iff_right at_top_ne_bot, prod_at_top_at_top_eq,\n    uniformity_eq_comap_nhds_zero α, tendsto_comap_iff, (· ∘ ·)]\n  rw [tendsto_at_top']\n  constructor\n  · intro h e he\n    rcases h e he with ⟨⟨s₁, s₂⟩, h⟩\n    use s₁ ∪ s₂\n    intro t ht\n    specialize h (s₁ ∪ s₂, s₁ ∪ s₂ ∪ t) ⟨le_sup_left, le_sup_of_le_left le_sup_right⟩\n    simpa only [finset.sum_union ht.symm, add_sub_cancel'] using h\n  · intro h e he\n    rcases exists_nhds_half_neg he with ⟨d, hd, hde⟩\n    rcases h d hd with ⟨s, h⟩\n    use (s, s)\n    rintro ⟨t₁, t₂⟩ ⟨ht₁, ht₂⟩\n    have :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t₂ (f b) -\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t₁ (f b) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (t₂ \\ s) (f b) -\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (t₁ \\ s)\n            (f b) :=\n      by simp only [(finset.sum_sdiff ht₁).symm, (finset.sum_sdiff ht₂).symm, add_sub_add_right_eq_sub]\n    simp only [this]\n    exact hde _ (h _ Finset.sdiff_disjoint) _ (h _ Finset.sdiff_disjoint)\n#align cauchy_seq_finset_iff_vanishing cauchy_seq_finset_iff_vanishing\n\n",
 "add_is_compl":
 "theorem has_sum.add_is_compl {s t : set β} (hs : IsCompl s t) (ha : has_sum (f ∘ coe : s → α) a)\n    (hb : has_sum (f ∘ coe : t → α) b) : has_sum f (a + b) := by\n  simpa [← hs.compl_eq] using (has_sum_subtype_iff_indicator.1 ha).add (has_sum_subtype_iff_indicator.1 hb)\n#align has_sum.add_is_compl has_sum.add_is_compl\n\n",
 "add_disjoint":
 "theorem has_sum.add_disjoint {s t : set β} (hs : Disjoint s t) (ha : has_sum (f ∘ coe : s → α) a)\n    (hb : has_sum (f ∘ coe : t → α) b) : has_sum (f ∘ coe : s ∪ t → α) (a + b) :=\n  by\n  rw [has_sum_subtype_iff_indicator] at *\n  rw [set.indicator_union_of_disjoint hs]\n  exact ha.add hb\n#align has_sum.add_disjoint has_sum.add_disjoint\n\n",
 "add_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem summable.add_compl {s : set β} (hs : summable (f ∘ coe : s → α)) (hsc : summable (f ∘ coe : «expr ᶜ» s → α)) :\n    summable f :=\n  (hs.has_sum.add_compl hsc.has_sum).summable\n#align summable.add_compl summable.add_compl\n\n",
 "add":
 "theorem summable.add (hf : summable f) (hg : summable g) : summable fun b => f b + g b :=\n  (hf.has_sum.add hg.has_sum).summable\n#align summable.add summable.add\n\n"}