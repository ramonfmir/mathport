{"topology_eq_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n@[to_additive]\ntheorem topology_eq_inf :\n    units.topological_space =\n      «expr ⊓ » (TopologicalSpace.induced (coe : «expr ˣ» M → M) ‹_›)\n        (TopologicalSpace.induced (fun u => ↑u⁻¹ : «expr ˣ» M → M) ‹_›) :=\n  by\n  simp only [inducing_embed_product.1, prod.topological_space, induced_inf, mul_opposite.topological_space,\n      induced_compose] <;>\n    rfl\n#align topology_eq_inf topology_eq_inf\n\n",
 "map_unop_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n@[simp, to_additive]\ntheorem map_unop_nhds (x : «expr ᵐᵒᵖ» M) : map (unop : «expr ᵐᵒᵖ» M → M) ((nhds) x) = (nhds) (unop x) :=\n  opHomeomorph.symm.map_nhds_eq x\n#align map_unop_nhds map_unop_nhds\n\n",
 "map_op_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n@[simp, to_additive]\ntheorem map_op_nhds (x : M) : map (op : M → «expr ᵐᵒᵖ» M) ((nhds) x) = (nhds) (op x) :=\n  opHomeomorph.map_nhds_eq x\n#align map_op_nhds map_op_nhds\n\n",
 "inducing_embed_product":
 "@[to_additive]\ntheorem inducing_embed_product : Inducing (embedProduct M) :=\n  ⟨rfl⟩\n#align inducing_embed_product inducing_embed_product\n\n",
 "embedding_embed_product":
 "@[to_additive]\ntheorem embedding_embed_product : Embedding (embedProduct M) :=\n  ⟨inducing_embedProduct, embedProduct_injective M⟩\n#align embedding_embed_product embedding_embed_product\n\n",
 "embedding_coe_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/-- An auxiliary lemma that can be used to prove that coercion `Mˣ → M` is a topological embedding.\nUse `units.coe_embedding₀`, `units.coe_embedding`, or `to_units_homeomorph` instead. -/\n@[to_additive\n      \"An auxiliary lemma that can be used to prove that coercion `add_units M → M` is a\\ntopological embedding. Use `add_units.coe_embedding` or `to_add_units_homeomorph` instead.\"]\ntheorem embedding_coe_mk {M : Type _} [DivisionMonoid M] [TopologicalSpace M]\n    (h : ContinuousOn has_inv.inv { x : M | IsUnit x }) : Embedding (coe : «expr ˣ» M → M) :=\n  by\n  refine' ⟨⟨_⟩, ext⟩\n  rw [topology_eq_inf, inf_eq_left, ← continuous_iff_le_induced, continuous_iff_continuousAt]\n  intro u s hs\n  simp only [coe_inv, nhds_induced, Filter.mem_map] at hs⊢\n  exact ⟨_, mem_inf_principal.1 (h u u.is_unit hs), fun u' hu' => hu' u'.is_unit⟩\n#align embedding_coe_mk embedding_coe_mk\n\n",
 "continuous_unop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/-\nCopyright (c) 2021 Nicolò Cavalleri. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Nicolò Cavalleri\n-/\n@[continuity, to_additive]\ntheorem continuous_unop : Continuous (unop : «expr ᵐᵒᵖ» M → M) :=\n  continuous_induced_dom\n#align continuous_unop continuous_unop\n\n",
 "continuous_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n@[continuity, to_additive]\ntheorem continuous_op : Continuous (op : M → «expr ᵐᵒᵖ» M) :=\n  continuous_induced_rng.2 continuous_id\n#align continuous_op continuous_op\n\n",
 "continuous_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n@[to_additive]\nprotected theorem continuous_iff {f : X → «expr ˣ» M} :\n    Continuous f ↔ Continuous (coe ∘ f : X → M) ∧ Continuous (fun x => ↑(f x)⁻¹ : X → M) := by\n  simp only [inducing_embed_product.continuous_iff, embed_product_apply, (· ∘ ·), continuous_prod_mk,\n    op_homeomorph.symm.inducing.continuous_iff, op_homeomorph_symm_apply, unop_op]\n#align continuous_iff continuous_iff\n\n",
 "continuous_embed_product":
 "@[to_additive]\ntheorem continuous_embed_product : Continuous (embedProduct M) :=\n  continuous_induced_dom\n#align continuous_embed_product continuous_embed_product\n\n",
 "continuous_coe_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n@[to_additive]\ntheorem continuous_coe_inv : Continuous (fun u => ↑u⁻¹ : «expr ˣ» M → M) :=\n  (Units.continuous_iff.1 continuous_id).2\n#align continuous_coe_inv continuous_coe_inv\n\n",
 "continuous_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n@[to_additive]\ntheorem continuous_coe : Continuous (coe : «expr ˣ» M → M) :=\n  (@continuous_embedProduct M _ _).fst\n#align continuous_coe continuous_coe\n\n",
 "comap_unop_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n@[simp, to_additive]\ntheorem comap_unop_nhds (x : M) : comap (unop : «expr ᵐᵒᵖ» M → M) ((nhds) x) = (nhds) (op x) :=\n  opHomeomorph.symm.comap_nhds_eq x\n#align comap_unop_nhds comap_unop_nhds\n\n",
 "comap_op_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n@[simp, to_additive]\ntheorem comap_op_nhds (x : «expr ᵐᵒᵖ» M) : comap (op : M → «expr ᵐᵒᵖ» M) ((nhds) x) = (nhds) (unop x) :=\n  opHomeomorph.comap_nhds_eq x\n#align comap_op_nhds comap_op_nhds\n\n"}