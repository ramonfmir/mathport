{"continuous_of_surjective":
 "#print Monotone.continuous_of_surjective /-\n/-- A monotone surjective function with a densely ordered codomain is continuous. -/\ntheorem Monotone.continuous_of_surjective [DenselyOrdered β] {f : α → β} (h_mono : Monotone f)\n    (h_surj : function.surjective f) : Continuous f :=\n  h_mono.continuous_of_dense_range h_surj.dense_range\n#align monotone.continuous_of_surjective Monotone.continuous_of_surjective\n-/\n\n",
 "continuous_of_denseRange":
 "#print Monotone.continuous_of_denseRange /-\n/-- A monotone function with densely ordered codomain and a dense range is continuous. -/\ntheorem Monotone.continuous_of_denseRange [DenselyOrdered β] {f : α → β} (h_mono : Monotone f)\n    (h_dense : DenseRange f) : Continuous f :=\n  continuous_iff_continuousAt.mpr fun a =>\n    continuousAt_of_monotoneOn_of_closure_image_mem_nhds (fun x hx y hy hxy => h_mono hxy) univ_mem <| by\n      simp only [image_univ, h_dense.closure_eq, univ_mem]\n#align monotone.continuous_of_dense_range Monotone.continuous_of_denseRange\n-/\n\n",
 "continuousWithinAt_right_of_surjOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n#print StrictMonoOn.continuousWithinAt_right_of_surjOn /-\n/-- If a function `f` is strictly monotone on a right neighborhood of `a` and the image of this\nneighborhood under `f` includes `Ioi (f a)`, then `f` is continuous at `a` from the right. -/\ntheorem StrictMonoOn.continuousWithinAt_right_of_surjOn {f : α → β} {s : Set α} {a : α} (h_mono : StrictMonoOn f s)\n    (hs : s ∈ nhds_within.ge a) (hfs : SurjOn f s (Ioi (f a))) : ContinuousWithinAt f (Ici a) a :=\n  h_mono.continuous_at_right_of_exists_between hs fun b hb =>\n    let ⟨c, hcs, hcb⟩ := hfs hb\n    ⟨c, hcs, hcb.symm ▸ hb, hcb.le⟩\n#align strict_mono_on.continuous_at_right_of_surj_on StrictMonoOn.continuousWithinAt_right_of_surjOn\n-/\n\n",
 "continuousWithinAt_right_of_monotoneOn_of_image_mem_nhdsWithin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n#print continuousWithinAt_right_of_monotoneOn_of_image_mem_nhdsWithin /-\n/-- If a function `f` with a densely ordered codomain is monotone on a right neighborhood of `a` and\nthe image of this neighborhood under `f` is a right neighborhood of `f a`, then `f` is continuous at\n`a` from the right. -/\ntheorem continuousWithinAt_right_of_monotoneOn_of_image_mem_nhdsWithin [DenselyOrdered β] {f : α → β} {s : Set α}\n    {a : α} (h_mono : MonotoneOn f s) (hs : s ∈ nhds_within.ge a) (hfs : «expr '' » f s ∈ nhds_within.ge (f a)) :\n    ContinuousWithinAt f (Ici a) a :=\n  continuousWithinAt_right_of_monotoneOn_of_closure_image_mem_nhdsWithin h_mono hs <| mem_of_superset hfs subset_closure\n#align continuous_at_right_of_monotone_on_of_image_mem_nhds_within continuousWithinAt_right_of_monotoneOn_of_image_mem_nhdsWithin\n-/\n\n",
 "continuousWithinAt_right_of_monotoneOn_of_exists_between":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n#print continuousWithinAt_right_of_monotoneOn_of_exists_between /-\n/-- If `f` is a monotone function on a right neighborhood of `a` and the image of this neighborhood\nunder `f` meets every interval `(f a, b)`, `b > f a`, then `f` is continuous at `a` from the right.\n\nThe assumption `hfs : ∀ b > f a, ∃ c ∈ s, f c ∈ Ioo (f a) b` cannot be replaced by the weaker\nassumption `hfs : ∀ b > f a, ∃ c ∈ s, f c ∈ Ioc (f a) b` we use for strictly monotone functions\nbecause otherwise the function `ceil : ℝ → ℤ` would be a counter-example at `a = 0`. -/\ntheorem continuousWithinAt_right_of_monotoneOn_of_exists_between {f : α → β} {s : Set α} {a : α}\n    (h_mono : MonotoneOn f s) (hs : s ∈ nhds_within.ge a) (hfs : ∀ b > f a, ∃ c ∈ s, f c ∈ Ioo (f a) b) :\n    ContinuousWithinAt f (Ici a) a := by\n  have ha : a ∈ Ici a := left_mem_Ici\n  have has : a ∈ s := mem_of_mem_nhdsWithin ha hs\n  refine' tendsto_order.2 ⟨fun b hb => _, fun b hb => _⟩\n  · filter_upwards [hs, self_mem_nhdsWithin]with _ hxs hxa using hb.trans_le (h_mono has hxs hxa)\n  · rcases hfs b hb with ⟨c, hcs, hac, hcb⟩\n    have : a < c := not_le.1 fun h => hac.not_le <| h_mono hcs has h\n    filter_upwards [hs, Ico_mem_nhdsWithin_Ici (left_mem_Ico.2 this)]\n    rintro x hx ⟨hax, hxc⟩\n    exact (h_mono hx hcs hxc.le).trans_lt hcb\n#align continuous_at_right_of_monotone_on_of_exists_between continuousWithinAt_right_of_monotoneOn_of_exists_between\n-/\n\n",
 "continuousWithinAt_right_of_monotoneOn_of_closure_image_mem_nhdsWithin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n#print continuousWithinAt_right_of_monotoneOn_of_closure_image_mem_nhdsWithin /-\n/-- If a function `f` with a densely ordered codomain is monotone on a right neighborhood of `a` and\nthe closure of the image of this neighborhood under `f` is a right neighborhood of `f a`, then `f`\nis continuous at `a` from the right. -/\ntheorem continuousWithinAt_right_of_monotoneOn_of_closure_image_mem_nhdsWithin [DenselyOrdered β] {f : α → β}\n    {s : Set α} {a : α} (h_mono : MonotoneOn f s) (hs : s ∈ nhds_within.ge a)\n    (hfs : closure («expr '' » f s) ∈ nhds_within.ge (f a)) : ContinuousWithinAt f (Ici a) a :=\n  by\n  refine' continuousWithinAt_right_of_monotoneOn_of_exists_between h_mono hs fun b hb => _\n  rcases(mem_nhdsWithin_Ici_iff_exists_mem_Ioc_Ico_subset hb).1 hfs with ⟨b', ⟨hab', hbb'⟩, hb'⟩\n  rcases exists_between hab' with ⟨c', hc'⟩\n  rcases mem_closure_iff.1 (hb' ⟨hc'.1.le, hc'.2⟩) (Ioo (f a) b') isOpen_Ioo hc' with ⟨_, hc, ⟨c, hcs, rfl⟩⟩\n  exact ⟨c, hcs, hc.1, hc.2.trans_le hbb'⟩\n#align continuous_at_right_of_monotone_on_of_closure_image_mem_nhds_within continuousWithinAt_right_of_monotoneOn_of_closure_image_mem_nhdsWithin\n-/\n\n",
 "continuousWithinAt_right_of_image_mem_nhdsWithin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n#print StrictMonoOn.continuousWithinAt_right_of_image_mem_nhdsWithin /-\n/-- If a function `f` with a densely ordered codomain is strictly monotone on a right neighborhood\nof `a` and the image of this neighborhood under `f` is a right neighborhood of `f a`, then `f` is\ncontinuous at `a` from the right. -/\ntheorem StrictMonoOn.continuousWithinAt_right_of_image_mem_nhdsWithin [DenselyOrdered β] {f : α → β} {s : Set α} {a : α}\n    (h_mono : StrictMonoOn f s) (hs : s ∈ nhds_within.ge a) (hfs : «expr '' » f s ∈ nhds_within.ge (f a)) :\n    ContinuousWithinAt f (Ici a) a :=\n  h_mono.continuous_at_right_of_closure_image_mem_nhds_within hs (mem_of_superset hfs subset_closure)\n#align strict_mono_on.continuous_at_right_of_image_mem_nhds_within StrictMonoOn.continuousWithinAt_right_of_image_mem_nhdsWithin\n-/\n\n",
 "continuousWithinAt_right_of_exists_between":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n#print StrictMonoOn.continuousWithinAt_right_of_exists_between /-\n/-\nCopyright (c) 2021 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov, Heather Macbeth\n-/\n/-- If `f` is a function strictly monotone on a right neighborhood of `a` and the\nimage of this neighborhood under `f` meets every interval `(f a, b]`, `b > f a`, then `f` is\ncontinuous at `a` from the right.\n\nThe assumption `hfs : ∀ b > f a, ∃ c ∈ s, f c ∈ Ioc (f a) b` is required because otherwise the\nfunction `f : ℝ → ℝ` given by `f x = if x ≤ 0 then x else x + 1` would be a counter-example at\n`a = 0`. -/\ntheorem StrictMonoOn.continuousWithinAt_right_of_exists_between {f : α → β} {s : Set α} {a : α}\n    (h_mono : StrictMonoOn f s) (hs : s ∈ nhds_within.ge a) (hfs : ∀ b > f a, ∃ c ∈ s, f c ∈ Ioc (f a) b) :\n    ContinuousWithinAt f (Ici a) a := by\n  have ha : a ∈ Ici a := left_mem_Ici\n  have has : a ∈ s := mem_of_mem_nhdsWithin ha hs\n  refine' tendsto_order.2 ⟨fun b hb => _, fun b hb => _⟩\n  · filter_upwards [hs, self_mem_nhdsWithin]with _ hxs hxa using hb.trans_le ((h_mono.le_iff_le has hxs).2 hxa)\n  · rcases hfs b hb with ⟨c, hcs, hac, hcb⟩\n    rw [h_mono.lt_iff_lt has hcs] at hac\n    filter_upwards [hs, Ico_mem_nhdsWithin_Ici (left_mem_Ico.2 hac)]\n    rintro x hx ⟨hax, hxc⟩\n    exact ((h_mono.lt_iff_lt hx hcs).2 hxc).trans_le hcb\n#align strict_mono_on.continuous_at_right_of_exists_between StrictMonoOn.continuousWithinAt_right_of_exists_between\n-/\n\n",
 "continuousWithinAt_right_of_closure_image_mem_nhdsWithin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\n#print StrictMonoOn.continuousWithinAt_right_of_closure_image_mem_nhdsWithin /-\n/-- If a function `f` with a densely ordered codomain is strictly monotone on a right neighborhood\nof `a` and the closure of the image of this neighborhood under `f` is a right neighborhood of `f a`,\nthen `f` is continuous at `a` from the right. -/\ntheorem StrictMonoOn.continuousWithinAt_right_of_closure_image_mem_nhdsWithin [DenselyOrdered β] {f : α → β} {s : Set α}\n    {a : α} (h_mono : StrictMonoOn f s) (hs : s ∈ nhds_within.ge a)\n    (hfs : closure («expr '' » f s) ∈ nhds_within.ge (f a)) : ContinuousWithinAt f (Ici a) a :=\n  continuousWithinAt_right_of_monotoneOn_of_closure_image_mem_nhdsWithin (fun x hx y hy => (h_mono.le_iff_le hx hy).2)\n    hs hfs\n#align strict_mono_on.continuous_at_right_of_closure_image_mem_nhds_within StrictMonoOn.continuousWithinAt_right_of_closure_image_mem_nhdsWithin\n-/\n\n",
 "continuousWithinAt_left_of_surjOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n#print StrictMonoOn.continuousWithinAt_left_of_surjOn /-\n/-- If a function `f` is strictly monotone on a left neighborhood of `a` and the image of this\nneighborhood under `f` includes `Iio (f a)`, then `f` is continuous at `a` from the left. -/\ntheorem StrictMonoOn.continuousWithinAt_left_of_surjOn {f : α → β} {s : Set α} {a : α} (h_mono : StrictMonoOn f s)\n    (hs : s ∈ nhds_within.le a) (hfs : SurjOn f s (Iio (f a))) : ContinuousWithinAt f (Iic a) a :=\n  h_mono.dual.continuous_at_right_of_surj_on hs hfs\n#align strict_mono_on.continuous_at_left_of_surj_on StrictMonoOn.continuousWithinAt_left_of_surjOn\n-/\n\n",
 "continuousWithinAt_left_of_monotoneOn_of_image_mem_nhdsWithin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n#print continuousWithinAt_left_of_monotoneOn_of_image_mem_nhdsWithin /-\n/-- If a function `f` with a densely ordered codomain is monotone on a left neighborhood of `a` and\nthe image of this neighborhood under `f` is a left neighborhood of `f a`, then `f` is continuous at\n`a` from the left. -/\ntheorem continuousWithinAt_left_of_monotoneOn_of_image_mem_nhdsWithin [DenselyOrdered β] {f : α → β} {s : Set α} {a : α}\n    (h_mono : MonotoneOn f s) (hs : s ∈ nhds_within.le a) (hfs : «expr '' » f s ∈ nhds_within.le (f a)) :\n    ContinuousWithinAt f (Iic a) a :=\n  continuousWithinAt_left_of_monotoneOn_of_closure_image_mem_nhdsWithin h_mono hs (mem_of_superset hfs subset_closure)\n#align continuous_at_left_of_monotone_on_of_image_mem_nhds_within continuousWithinAt_left_of_monotoneOn_of_image_mem_nhdsWithin\n-/\n\n",
 "continuousWithinAt_left_of_monotoneOn_of_exists_between":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n#print continuousWithinAt_left_of_monotoneOn_of_exists_between /-\n/-- If `f` is a monotone function on a left neighborhood of `a` and the image of this neighborhood\nunder `f` meets every interval `(b, f a)`, `b < f a`, then `f` is continuous at `a` from the left.\n\nThe assumption `hfs : ∀ b < f a, ∃ c ∈ s, f c ∈ Ioo b (f a)` cannot be replaced by the weaker\nassumption `hfs : ∀ b < f a, ∃ c ∈ s, f c ∈ Ico b (f a)` we use for strictly monotone functions\nbecause otherwise the function `floor : ℝ → ℤ` would be a counter-example at `a = 0`. -/\ntheorem continuousWithinAt_left_of_monotoneOn_of_exists_between {f : α → β} {s : Set α} {a : α} (hf : MonotoneOn f s)\n    (hs : s ∈ nhds_within.le a) (hfs : ∀ b < f a, ∃ c ∈ s, f c ∈ Ioo b (f a)) : ContinuousWithinAt f (Iic a) a :=\n  @continuousWithinAt_right_of_monotoneOn_of_exists_between («expr ᵒᵈ» α) («expr ᵒᵈ» β) _ _ _ _ _ _ f s a hf.dual hs\n    fun b hb =>\n    let ⟨c, hcs, hcb, hca⟩ := hfs b hb\n    ⟨c, hcs, hca, hcb⟩\n#align continuous_at_left_of_monotone_on_of_exists_between continuousWithinAt_left_of_monotoneOn_of_exists_between\n-/\n\n",
 "continuousWithinAt_left_of_monotoneOn_of_closure_image_mem_nhdsWithin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n#print continuousWithinAt_left_of_monotoneOn_of_closure_image_mem_nhdsWithin /-\n/-- If a function `f` with a densely ordered codomain is monotone on a left neighborhood of `a` and\nthe closure of the image of this neighborhood under `f` is a left neighborhood of `f a`, then `f` is\ncontinuous at `a` from the left -/\ntheorem continuousWithinAt_left_of_monotoneOn_of_closure_image_mem_nhdsWithin [DenselyOrdered β] {f : α → β} {s : Set α}\n    {a : α} (hf : MonotoneOn f s) (hs : s ∈ nhds_within.le a) (hfs : closure («expr '' » f s) ∈ nhds_within.le (f a)) :\n    ContinuousWithinAt f (Iic a) a :=\n  @continuousWithinAt_right_of_monotoneOn_of_closure_image_mem_nhdsWithin («expr ᵒᵈ» α) («expr ᵒᵈ» β) _ _ _ _ _ _ _ f s\n    a hf.dual hs hfs\n#align continuous_at_left_of_monotone_on_of_closure_image_mem_nhds_within continuousWithinAt_left_of_monotoneOn_of_closure_image_mem_nhdsWithin\n-/\n\n",
 "continuousWithinAt_left_of_image_mem_nhdsWithin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n#print StrictMonoOn.continuousWithinAt_left_of_image_mem_nhdsWithin /-\n/-- If a function `f` with a densely ordered codomain is strictly monotone on a left neighborhood of\n`a` and the image of this neighborhood under `f` is a left neighborhood of `f a`, then `f` is\ncontinuous at `a` from the left. -/\ntheorem StrictMonoOn.continuousWithinAt_left_of_image_mem_nhdsWithin [DenselyOrdered β] {f : α → β} {s : Set α} {a : α}\n    (h_mono : StrictMonoOn f s) (hs : s ∈ nhds_within.le a) (hfs : «expr '' » f s ∈ nhds_within.le (f a)) :\n    ContinuousWithinAt f (Iic a) a :=\n  h_mono.dual.continuous_at_right_of_image_mem_nhds_within hs hfs\n#align strict_mono_on.continuous_at_left_of_image_mem_nhds_within StrictMonoOn.continuousWithinAt_left_of_image_mem_nhdsWithin\n-/\n\n",
 "continuousWithinAt_left_of_exists_between":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n#print StrictMonoOn.continuousWithinAt_left_of_exists_between /-\n/-- If `f` is a strictly monotone function on a left neighborhood of `a` and the image of this\nneighborhood under `f` meets every interval `[b, f a)`, `b < f a`, then `f` is continuous at `a`\nfrom the left.\n\nThe assumption `hfs : ∀ b < f a, ∃ c ∈ s, f c ∈ Ico b (f a)` is required because otherwise the\nfunction `f : ℝ → ℝ` given by `f x = if x < 0 then x else x + 1` would be a counter-example at\n`a = 0`. -/\ntheorem StrictMonoOn.continuousWithinAt_left_of_exists_between {f : α → β} {s : Set α} {a : α}\n    (h_mono : StrictMonoOn f s) (hs : s ∈ nhds_within.le a) (hfs : ∀ b < f a, ∃ c ∈ s, f c ∈ Ico b (f a)) :\n    ContinuousWithinAt f (Iic a) a :=\n  h_mono.dual.continuous_at_right_of_exists_between hs fun b hb =>\n    let ⟨c, hcs, hcb, hca⟩ := hfs b hb\n    ⟨c, hcs, hca, hcb⟩\n#align strict_mono_on.continuous_at_left_of_exists_between StrictMonoOn.continuousWithinAt_left_of_exists_between\n-/\n\n",
 "continuousWithinAt_left_of_closure_image_mem_nhdsWithin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\n#print StrictMonoOn.continuousWithinAt_left_of_closure_image_mem_nhdsWithin /-\n/-- If a function `f` with a densely ordered codomain is strictly monotone on a left neighborhood of\n`a` and the closure of the image of this neighborhood under `f` is a left neighborhood of `f a`,\nthen `f` is continuous at `a` from the left. -/\ntheorem StrictMonoOn.continuousWithinAt_left_of_closure_image_mem_nhdsWithin [DenselyOrdered β] {f : α → β} {s : Set α}\n    {a : α} (h_mono : StrictMonoOn f s) (hs : s ∈ nhds_within.le a)\n    (hfs : closure («expr '' » f s) ∈ nhds_within.le (f a)) : ContinuousWithinAt f (Iic a) a :=\n  h_mono.dual.continuous_at_right_of_closure_image_mem_nhds_within hs hfs\n#align strict_mono_on.continuous_at_left_of_closure_image_mem_nhds_within StrictMonoOn.continuousWithinAt_left_of_closure_image_mem_nhdsWithin\n-/\n\n",
 "continuousAt_of_monotoneOn_of_image_mem_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print continuousAt_of_monotoneOn_of_image_mem_nhds /-\n/-- If a function `f` with a densely ordered codomain is monotone on a neighborhood of `a` and the\nimage of this neighborhood under `f` is a neighborhood of `f a`, then `f` is continuous at `a`. -/\ntheorem continuousAt_of_monotoneOn_of_image_mem_nhds [DenselyOrdered β] {f : α → β} {s : Set α} {a : α}\n    (h_mono : MonotoneOn f s) (hs : s ∈ (nhds) a) (hfs : «expr '' » f s ∈ (nhds) (f a)) : ContinuousAt f a :=\n  continuousAt_of_monotoneOn_of_closure_image_mem_nhds h_mono hs (mem_of_superset hfs subset_closure)\n#align continuous_at_of_monotone_on_of_image_mem_nhds continuousAt_of_monotoneOn_of_image_mem_nhds\n-/\n\n",
 "continuousAt_of_monotoneOn_of_exists_between":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print continuousAt_of_monotoneOn_of_exists_between /-\n/-- If `f` is a monotone function on a neighborhood of `a` and the image of this neighborhood under\n`f` meets every interval `(b, f a)`, `b < f a`, and every interval `(f a, b)`, `b > f a`, then `f`\nis continuous at `a`. -/\ntheorem continuousAt_of_monotoneOn_of_exists_between {f : α → β} {s : Set α} {a : α} (h_mono : MonotoneOn f s)\n    (hs : s ∈ (nhds) a) (hfs_l : ∀ b < f a, ∃ c ∈ s, f c ∈ Ioo b (f a))\n    (hfs_r : ∀ b > f a, ∃ c ∈ s, f c ∈ Ioo (f a) b) : ContinuousAt f a :=\n  continuousAt_iff_continuous_left_right.2\n    ⟨continuousWithinAt_left_of_monotoneOn_of_exists_between h_mono (mem_nhdsWithin_of_mem_nhds hs) hfs_l,\n      continuousWithinAt_right_of_monotoneOn_of_exists_between h_mono (mem_nhdsWithin_of_mem_nhds hs) hfs_r⟩\n#align continuous_at_of_monotone_on_of_exists_between continuousAt_of_monotoneOn_of_exists_between\n-/\n\n",
 "continuousAt_of_monotoneOn_of_closure_image_mem_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print continuousAt_of_monotoneOn_of_closure_image_mem_nhds /-\n/-- If a function `f` with a densely ordered codomain is monotone on a neighborhood of `a` and the\nclosure of the image of this neighborhood under `f` is a neighborhood of `f a`, then `f` is\ncontinuous at `a`. -/\ntheorem continuousAt_of_monotoneOn_of_closure_image_mem_nhds [DenselyOrdered β] {f : α → β} {s : Set α} {a : α}\n    (h_mono : MonotoneOn f s) (hs : s ∈ (nhds) a) (hfs : closure («expr '' » f s) ∈ (nhds) (f a)) : ContinuousAt f a :=\n  continuousAt_iff_continuous_left_right.2\n    ⟨continuousWithinAt_left_of_monotoneOn_of_closure_image_mem_nhdsWithin h_mono (mem_nhdsWithin_of_mem_nhds hs)\n        (mem_nhdsWithin_of_mem_nhds hfs),\n      continuousWithinAt_right_of_monotoneOn_of_closure_image_mem_nhdsWithin h_mono (mem_nhdsWithin_of_mem_nhds hs)\n        (mem_nhdsWithin_of_mem_nhds hfs)⟩\n#align continuous_at_of_monotone_on_of_closure_image_mem_nhds continuousAt_of_monotoneOn_of_closure_image_mem_nhds\n-/\n\n",
 "continuousAt_of_image_mem_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print StrictMonoOn.continuousAt_of_image_mem_nhds /-\n/-- If a function `f` with a densely ordered codomain is strictly monotone on a neighborhood of `a`\nand the image of this set under `f` is a neighborhood of `f a`, then `f` is continuous at `a`. -/\ntheorem StrictMonoOn.continuousAt_of_image_mem_nhds [DenselyOrdered β] {f : α → β} {s : Set α} {a : α}\n    (h_mono : StrictMonoOn f s) (hs : s ∈ (nhds) a) (hfs : «expr '' » f s ∈ (nhds) (f a)) : ContinuousAt f a :=\n  h_mono.continuous_at_of_closure_image_mem_nhds hs (mem_of_superset hfs subset_closure)\n#align strict_mono_on.continuous_at_of_image_mem_nhds StrictMonoOn.continuousAt_of_image_mem_nhds\n-/\n\n",
 "continuousAt_of_exists_between":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print StrictMonoOn.continuousAt_of_exists_between /-\n/-- If a function `f` is strictly monotone on a neighborhood of `a` and the image of this\nneighborhood under `f` meets every interval `[b, f a)`, `b < f a`, and every interval\n`(f a, b]`, `b > f a`, then `f` is continuous at `a`. -/\ntheorem StrictMonoOn.continuousAt_of_exists_between {f : α → β} {s : Set α} {a : α} (h_mono : StrictMonoOn f s)\n    (hs : s ∈ (nhds) a) (hfs_l : ∀ b < f a, ∃ c ∈ s, f c ∈ Ico b (f a))\n    (hfs_r : ∀ b > f a, ∃ c ∈ s, f c ∈ Ioc (f a) b) : ContinuousAt f a :=\n  continuousAt_iff_continuous_left_right.2\n    ⟨h_mono.continuous_at_left_of_exists_between (mem_nhdsWithin_of_mem_nhds hs) hfs_l,\n      h_mono.continuous_at_right_of_exists_between (mem_nhdsWithin_of_mem_nhds hs) hfs_r⟩\n#align strict_mono_on.continuous_at_of_exists_between StrictMonoOn.continuousAt_of_exists_between\n-/\n\n",
 "continuousAt_of_closure_image_mem_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print StrictMonoOn.continuousAt_of_closure_image_mem_nhds /-\n/-- If a function `f` with a densely ordered codomain is strictly monotone on a neighborhood of `a`\nand the closure of the image of this neighborhood under `f` is a neighborhood of `f a`, then `f` is\ncontinuous at `a`. -/\ntheorem StrictMonoOn.continuousAt_of_closure_image_mem_nhds [DenselyOrdered β] {f : α → β} {s : Set α} {a : α}\n    (h_mono : StrictMonoOn f s) (hs : s ∈ (nhds) a) (hfs : closure («expr '' » f s) ∈ (nhds) (f a)) :\n    ContinuousAt f a :=\n  continuousAt_iff_continuous_left_right.2\n    ⟨h_mono.continuous_at_left_of_closure_image_mem_nhds_within (mem_nhdsWithin_of_mem_nhds hs)\n        (mem_nhdsWithin_of_mem_nhds hfs),\n      h_mono.continuous_at_right_of_closure_image_mem_nhds_within (mem_nhdsWithin_of_mem_nhds hs)\n        (mem_nhdsWithin_of_mem_nhds hfs)⟩\n#align strict_mono_on.continuous_at_of_closure_image_mem_nhds StrictMonoOn.continuousAt_of_closure_image_mem_nhds\n-/\n\n",
 "coe_to_homeomorph_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_to_homeomorph_symm (e : «expr ≃o » α β) : «expr⇑ » e.to_homeomorph.symm = e.symm :=\n  rfl\n#align coe_to_homeomorph_symm coe_to_homeomorph_symm\n\n",
 "coe_to_homeomorph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_to_homeomorph (e : «expr ≃o » α β) : «expr⇑ » e.to_homeomorph = e :=\n  rfl\n#align coe_to_homeomorph coe_to_homeomorph\n\n",
 "Continuous":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n#print Continuous /-\nprotected theorem Continuous (e : «expr ≃o » α β) : Continuous e :=\n  by\n  rw [‹OrderTopology β›.topology_eq_generate_intervals]\n  refine' continuous_generateFrom fun s hs => _\n  rcases hs with ⟨a, rfl | rfl⟩\n  · rw [e.preimage_Ioi]\n    apply isOpen_lt'\n  · rw [e.preimage_Iio]\n    apply isOpen_gt'\n#align continuous Continuous\n-/\n\n"}