{"tendsto_right_lim_within":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.le -/\ntheorem tendsto_right_lim_within (x : α) : tendsto f (nhds_within.gt x) (nhds_within.le (right_lim f x)) :=\n  hf.dual_right.tendsto_right_lim_within x\n#align tendsto_right_lim_within tendsto_right_lim_within\n\n",
 "tendsto_right_lim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_right_lim (x : α) : tendsto f (nhds_within.gt x) ((nhds) (right_lim f x)) :=\n  hf.dual_right.tendsto_right_lim x\n#align tendsto_right_lim tendsto_right_lim\n\n",
 "tendsto_left_lim_within":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ge -/\ntheorem tendsto_left_lim_within (x : α) : tendsto f (nhds_within.lt x) (nhds_within.ge (left_lim f x)) :=\n  hf.dual_right.tendsto_left_lim_within x\n#align tendsto_left_lim_within tendsto_left_lim_within\n\n",
 "tendsto_left_lim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem tendsto_left_lim (x : α) : tendsto f (nhds_within.lt x) ((nhds) (left_lim f x)) :=\n  hf.dual_right.tendsto_left_lim x\n#align tendsto_left_lim tendsto_left_lim\n\n",
 "right_lim_le_left_lim":
 "theorem right_lim_le_left_lim (h : x ≤ y) : right_lim f y ≤ left_lim f x :=\n  hf.dual_right.left_lim_le_right_lim h\n#align right_lim_le_left_lim right_lim_le_left_lim\n\n",
 "right_lim_le":
 "theorem right_lim_le (h : x ≤ y) : right_lim f y ≤ f x :=\n  hf.dual_right.le_right_lim h\n#align right_lim_le right_lim_le\n\n",
 "right_lim":
 "@[mono]\nprotected theorem right_lim : antitone (right_lim f) :=\n  hf.dual_right.right_lim\n#align right_lim right_lim\n\n",
 "left_lim_le_right_lim":
 "theorem left_lim_le_right_lim (h : x < y) : left_lim f y ≤ right_lim f x :=\n  hf.dual_right.right_lim_le_left_lim h\n#align left_lim_le_right_lim left_lim_le_right_lim\n\n",
 "left_lim_le":
 "theorem left_lim_le (h : x < y) : left_lim f y ≤ f x :=\n  hf.dual_right.le_left_lim h\n#align left_lim_le left_lim_le\n\n",
 "left_lim_eq_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-\nCopyright (c) 2022 Sébastien Gouëzel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Sébastien Gouëzel\n-/\ntheorem left_lim_eq_of_tendsto [hα : topological_space α] [h'α : order_topology α] [t2_space β] {f : α → β} {a : α}\n    {y : β} (h : nhds_within.lt a ≠ «expr⊥») (h' : tendsto f (nhds_within.lt a) ((nhds) y)) : left_lim f a = y :=\n  by\n  have h'' : ∃ y, tendsto f (nhds_within.lt a) ((nhds) y) := ⟨y, h'⟩\n  rw [h'α.topology_eq_generate_intervals] at h h' h''\n  simp only [left_lim, h, h'', not_true, or_self_iff, if_false]\n  haveI := ne_bot_iff.2 h\n  exact h'.lim_eq\n#align left_lim_eq_of_tendsto left_lim_eq_of_tendsto\n\n",
 "left_lim_eq_of_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem left_lim_eq_of_eq_bot [hα : topological_space α] [h'α : order_topology α] (f : α → β) {a : α}\n    (h : nhds_within.lt a = «expr⊥») : left_lim f a = f a :=\n  by\n  rw [h'α.topology_eq_generate_intervals] at h\n  simp [left_lim, ite_eq_left_iff, h]\n#align left_lim_eq_of_eq_bot left_lim_eq_of_eq_bot\n\n",
 "left_lim_eq_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem left_lim_eq_Sup [topological_space α] [order_topology α] (h : nhds_within.lt x ≠ «expr⊥») :\n    left_lim f x = supₛ («expr '' » f (Iio x)) :=\n  left_lim_eq_of_tendsto h (hf.tendsto_nhds_within_Iio x)\n#align left_lim_eq_Sup left_lim_eq_Sup\n\n",
 "left_lim":
 "@[mono]\nprotected theorem left_lim : antitone (left_lim f) :=\n  hf.dual_right.left_lim\n#align left_lim left_lim\n\n",
 "le_right_lim":
 "theorem le_right_lim (h : x < y) : f y ≤ right_lim f x :=\n  hf.dual_right.right_lim_le h\n#align le_right_lim le_right_lim\n\n",
 "le_left_lim":
 "theorem le_left_lim (h : x ≤ y) : f y ≤ left_lim f x :=\n  hf.dual_right.left_lim_le h\n#align le_left_lim le_left_lim\n\n",
 "countable_not_continuous_within_at_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/-- In a second countable space, the set of points where a monotone function is not right-continuous\nis at most countable. Superseded by `countable_not_continuous_at` which gives the two-sided\nversion. -/\ntheorem countable_not_continuous_within_at_Ioi [topological_space.second_countable_topology β] :\n    set.countable { x | ¬continuous_within_at f (Ioi x) x } :=\n  by\n  /- If `f` is not continuous on the right at `x`, there is an interval `(f x, z x)` which is not\n    reached by `f`. This gives a family of disjoint open intervals in `β`. Such a family can only\n    be countable as `β` is second-countable. -/\n  nontriviality α\n  let s := { x | ¬continuous_within_at f (Ioi x) x }\n  have : ∀ x, x ∈ s → ∃ z, f x < z ∧ ∀ y, x < y → z ≤ f y :=\n    by\n    rintro x (hx : ¬continuous_within_at f (Ioi x) x)\n    contrapose! hx\n    refine' tendsto_order.2 ⟨fun m hm => _, fun u hu => _⟩\n    · filter_upwards [self_mem_nhds_within] with y hy using hm.trans_le (hf (le_of_lt hy))\n    rcases hx u hu with ⟨v, xv, fvu⟩\n    have : Ioo x v ∈ nhds_within.gt x := Ioo_mem_nhds_within_Ioi ⟨le_refl _, xv⟩\n    filter_upwards [this] with y hy\n    apply (hf hy.2.le).trans_lt fvu\n  -- choose `z x` such that `f` does not take the values in `(f x, z x)`.\n  choose! z hz using this\n  have I : inj_on f s := by\n    apply StrictMonoOn.injOn\n    intro x hx y hy hxy\n    calc\n      f x < z x := (hz x hx).1\n      _ ≤ f y := (hz x hx).2 y hxy\n      \n  -- show that `f s` is countable by arguing that a disjoint family of disjoint open intervals\n  -- (the intervals `(f x, z x)`) is at most countable.\n  have fs_count : («expr '' » f s).countable :=\n    by\n    have A : («expr '' » f s).pairwise_disjoint fun x => Ioo x (z (inv_fun_on f s x)) :=\n      by\n      rintro _ ⟨u, us, rfl⟩ _ ⟨v, vs, rfl⟩ huv\n      wlog (discharger := tactic.skip) h'uv : u ≤ v := le_total u v using u v, v u\n      · rcases eq_or_lt_of_le h'uv with (rfl | h''uv)\n        · exact (huv rfl).elim\n        apply disjoint_iff_forall_ne.2\n        rintro a ha b hb rfl\n        simp [I.left_inv_on_inv_fun_on us, I.left_inv_on_inv_fun_on vs] at ha hb\n        exact lt_irrefl _ ((ha.2.trans_le ((hz u us).2 v h''uv)).trans hb.1)\n      · intro hu hv h'uv\n        exact (this hv hu h'uv.symm).symm\n    apply set.pairwise_disjoint.countable_of_Ioo A\n    rintro _ ⟨y, ys, rfl⟩\n    simpa only [I.left_inv_on_inv_fun_on ys] using (hz y ys).1\n  exact maps_to.countable_of_inj_on (maps_to_image f s) I fs_count\n#align countable_not_continuous_within_at_Ioi countable_not_continuous_within_at_Ioi\n\n",
 "countable_not_continuous_within_at_Iio":
 "/-- In a second countable space, the set of points where a monotone function is not left-continuous\nis at most countable. Superseded by `countable_not_continuous_at` which gives the two-sided\nversion. -/\ntheorem countable_not_continuous_within_at_Iio [topological_space.second_countable_topology β] :\n    set.countable { x | ¬continuous_within_at f (Iio x) x } :=\n  hf.dual.countable_not_continuous_within_at_Ioi\n#align countable_not_continuous_within_at_Iio countable_not_continuous_within_at_Iio\n\n",
 "countable_not_continuous_at":
 "/-- In a second countable space, the set of points where an antitone function is not continuous\nis at most countable. -/\ntheorem countable_not_continuous_at [topological_space.second_countable_topology β] :\n    set.countable { x | ¬continuous_at f x } :=\n  hf.dual_right.countable_not_continuous_at\n#align countable_not_continuous_at countable_not_continuous_at\n\n",
 "continuous_within_at_Ioi_iff_right_lim_eq":
 "/-- An antitone function is continuous to the right at a point if and only if its right limit\ncoincides with the value of the function. -/\ntheorem continuous_within_at_Ioi_iff_right_lim_eq : continuous_within_at f (Ioi x) x ↔ right_lim f x = f x :=\n  hf.dual_right.continuous_within_at_Ioi_iff_right_lim_eq\n#align continuous_within_at_Ioi_iff_right_lim_eq continuous_within_at_Ioi_iff_right_lim_eq\n\n",
 "continuous_within_at_Iio_iff_left_lim_eq":
 "/-- An antitone function is continuous to the left at a point if and only if its left limit\ncoincides with the value of the function. -/\ntheorem continuous_within_at_Iio_iff_left_lim_eq : continuous_within_at f (Iio x) x ↔ left_lim f x = f x :=\n  hf.dual_right.continuous_within_at_Iio_iff_left_lim_eq\n#align continuous_within_at_Iio_iff_left_lim_eq continuous_within_at_Iio_iff_left_lim_eq\n\n",
 "continuous_at_iff_left_lim_eq_right_lim":
 "/-- An antitone function is continuous at a point if and only if its left and right limits\ncoincide. -/\ntheorem continuous_at_iff_left_lim_eq_right_lim : continuous_at f x ↔ left_lim f x = right_lim f x :=\n  hf.dual_right.continuous_at_iff_left_lim_eq_right_lim\n#align continuous_at_iff_left_lim_eq_right_lim continuous_at_iff_left_lim_eq_right_lim\n\n"}