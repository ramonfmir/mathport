{"unionᵢ_Iic_eq_Iio_of_lt_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n#print unionᵢ_Iic_eq_Iio_of_lt_of_tendsto /-\ntheorem unionᵢ_Iic_eq_Iio_of_lt_of_tendsto {ι : Type _} (x : R) {as : ι → R} (lt_x : ∀ i, as i < x) {F : Filter ι}\n    [Filter.NeBot F] (as_lim : Filter.Tendsto as F ((nhds) x)) :\n    «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (Iic (as i)) =\n      Iio x :=\n  @unionᵢ_Ici_eq_Ioi_of_lt_of_tendsto (OrderDual R) _ _ _ ι x as lt_x F _ as_lim\n#align Union_Iic_eq_Iio_of_lt_of_tendsto unionᵢ_Iic_eq_Iio_of_lt_of_tendsto\n-/\n\n",
 "unionᵢ_Ici_eq_Ioi_of_lt_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n#print unionᵢ_Ici_eq_Ioi_of_lt_of_tendsto /-\ntheorem unionᵢ_Ici_eq_Ioi_of_lt_of_tendsto {ι : Type _} (x : R) {as : ι → R} (x_lt : ∀ i, x < as i) {F : Filter ι}\n    [Filter.NeBot F] (as_lim : Filter.Tendsto as F ((nhds) x)) :\n    «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (Ici (as i)) =\n      Ioi x :=\n  by\n  have obs : x ∉ range as := by\n    intro maybe_x_is\n    rcases mem_range.mp maybe_x_is with ⟨i, hi⟩\n    simpa only [hi, lt_self_iff_false] using x_lt i\n  rw [← infᵢ_eq_of_forall_le_of_tendsto (fun i => (x_lt i).le) as_lim] at *\n  exact unionᵢ_Ici_eq_Ioi_infᵢ obs\n#align Union_Ici_eq_Ioi_of_lt_of_tendsto unionᵢ_Ici_eq_Ioi_of_lt_of_tendsto\n-/\n\n",
 "tendsto_of_no_upcrossings":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print tendsto_of_no_upcrossings /-\n/-- Assume that, for any `a < b`, a sequence can not be infinitely many times below `a` and\nabove `b`. If it is also ultimately bounded above and below, then it has to converge. This even\nworks if `a` and `b` are restricted to a dense subset.\n-/\ntheorem tendsto_of_no_upcrossings [DenselyOrdered α] {f : Filter β} {u : β → α} {s : Set α} (hs : Dense s)\n    (H :\n      ∀ a ∈ s,\n        ∀ b ∈ s,\n          a < b →\n            ¬(«expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\" f\n                  (u n < a) ∧\n                «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\"\n                  f (b < u n)))\n    (h : f.is_bounded_under (· ≤ ·) u := by\n      run_tac\n        is_bounded_default)\n    (h' : f.is_bounded_under (· ≥ ·) u := by\n      run_tac\n        is_bounded_default) :\n    ∃ c : α, Tendsto u f ((nhds) c) := by\n  by_cases hbot : f = «expr⊥»;\n  · rw [hbot]\n    exact ⟨Inf ∅, tendsto_bot⟩\n  haveI : ne_bot f := ⟨hbot⟩\n  refine' ⟨limsup u f, _⟩\n  apply tendsto_of_le_liminf_of_limsup_le _ le_rfl h h'\n  by_contra' hlt\n  obtain ⟨a, ⟨⟨la, au⟩, as⟩⟩ : ∃ a, (f.liminf u < a ∧ a < f.limsup u) ∧ a ∈ s :=\n    dense_iff_inter_open.1 hs (Set.Ioo (f.liminf u) (f.limsup u)) isOpen_Ioo (Set.nonempty_Ioo.2 hlt)\n  obtain ⟨b, ⟨⟨ab, bu⟩, bs⟩⟩ : ∃ b, (a < b ∧ b < f.limsup u) ∧ b ∈ s :=\n    dense_iff_inter_open.1 hs (Set.Ioo a (f.limsup u)) isOpen_Ioo (Set.nonempty_Ioo.2 au)\n  have A :\n    «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\" f\n      (u n < a) :=\n    frequently_lt_of_liminf_lt (is_bounded.is_cobounded_ge h) la\n  have B :\n    «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\" f\n      (b < u n) :=\n    frequently_lt_of_lt_limsup (is_bounded.is_cobounded_le h') bu\n  exact H a as b bs ab ⟨A, B⟩\n#align tendsto_of_no_upcrossings tendsto_of_no_upcrossings\n-/\n\n",
 "tendsto_of_liminf_eq_limsup":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print tendsto_of_liminf_eq_limsup /-\n/-- If the liminf and the limsup of a function coincide, then the limit of the function\nexists and has the same value -/\ntheorem tendsto_of_liminf_eq_limsup {f : Filter β} {u : β → α} {a : α} (hinf : liminf u f = a) (hsup : limsup u f = a)\n    (h : f.is_bounded_under (· ≤ ·) u := by\n      run_tac\n        is_bounded_default)\n    (h' : f.is_bounded_under (· ≥ ·) u := by\n      run_tac\n        is_bounded_default) :\n    Tendsto u f ((nhds) a) :=\n  le_nhds_of_limsupₛ_eq_liminfₛ h h' hsup hinf\n#align tendsto_of_liminf_eq_limsup tendsto_of_liminf_eq_limsup\n-/\n\n",
 "tendsto_of_le_liminf_of_limsup_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print tendsto_of_le_liminf_of_limsup_le /-\n/-- If a number `a` is less than or equal to the `liminf` of a function `f` at some filter\nand is greater than or equal to the `limsup` of `f`, then `f` tends to `a` along this filter. -/\ntheorem tendsto_of_le_liminf_of_limsup_le {f : Filter β} {u : β → α} {a : α} (hinf : a ≤ liminf u f)\n    (hsup : limsup u f ≤ a)\n    (h : f.is_bounded_under (· ≤ ·) u := by\n      run_tac\n        is_bounded_default)\n    (h' : f.is_bounded_under (· ≥ ·) u := by\n      run_tac\n        is_bounded_default) :\n    Tendsto u f ((nhds) a) :=\n  if hf : f = «expr⊥» then hf.symm ▸ tendsto_bot\n  else\n    haveI : ne_bot f := ⟨hf⟩\n    tendsto_of_liminf_eq_limsup (le_antisymm (le_trans (liminf_le_limsup h h') hsup) hinf)\n      (le_antisymm hsup (le_trans hinf (liminf_le_limsup h h'))) h h'\n#align tendsto_of_le_liminf_of_limsup_le tendsto_of_le_liminf_of_limsup_le\n-/\n\n",
 "supᵢ_eq_of_forall_le_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print supᵢ_eq_of_forall_le_of_tendsto /-\ntheorem supᵢ_eq_of_forall_le_of_tendsto {x : R} {as : ι → R} (le_x : ∀ i, as i ≤ x) {F : Filter ι} [Filter.NeBot F]\n    (as_lim : Filter.Tendsto as F ((nhds) x)) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (as i) = x :=\n  @infᵢ_eq_of_forall_le_of_tendsto ι (OrderDual R) _ _ _ x as le_x F _ as_lim\n#align supr_eq_of_forall_le_of_tendsto supᵢ_eq_of_forall_le_of_tendsto\n-/\n\n",
 "map_limsupₛ_of_continuousAt":
 "#print Monotone.map_limsupₛ_of_continuousAt /-\n/-- A monotone function between complete linear ordered spaces sends a `filter.Limsup`\nto the `filter.limsup` of the image if it is continuous at the `Limsup`. -/\ntheorem Monotone.map_limsupₛ_of_continuousAt {F : Filter R} [NeBot F] {f : R → S} (f_incr : Monotone f)\n    (f_cont : ContinuousAt f F.Limsup) : f F.Limsup = F.limsup f :=\n  @Antitone.map_limsupₛ_of_continuousAt R (OrderDual S) _ _ _ _ _ _ _ _ f f_incr f_cont\n#align monotone.map_Limsup_of_continuous_at Monotone.map_limsupₛ_of_continuousAt\n-/\n\n",
 "map_limsup_of_continuousAt":
 "#print Monotone.map_limsup_of_continuousAt /-\n/-- A continuous monotone function between complete linear ordered spaces sends a `filter.limsup`\nto the `filter.limsup` of the images. -/\ntheorem Monotone.map_limsup_of_continuousAt {f : R → S} (f_incr : Monotone f) (a : ι → R)\n    (f_cont : ContinuousAt f (F.limsup a)) : f (F.limsup a) = F.limsup (f ∘ a) :=\n  f_incr.map_Limsup_of_continuous_at f_cont\n#align monotone.map_limsup_of_continuous_at Monotone.map_limsup_of_continuousAt\n-/\n\n",
 "map_liminfₛ_of_continuousAt":
 "#print Monotone.map_liminfₛ_of_continuousAt /-\n/-- A monotone function between complete linear ordered spaces sends a `filter.Liminf`\nto the `filter.liminf` of the image if it is continuous at the `Liminf`. -/\ntheorem Monotone.map_liminfₛ_of_continuousAt {F : Filter R} [NeBot F] {f : R → S} (f_incr : Monotone f)\n    (f_cont : ContinuousAt f F.Liminf) : f F.Liminf = F.liminf f :=\n  @Antitone.map_liminfₛ_of_continuousAt R (OrderDual S) _ _ _ _ _ _ _ _ f f_incr f_cont\n#align monotone.map_Liminf_of_continuous_at Monotone.map_liminfₛ_of_continuousAt\n-/\n\n",
 "map_liminf_of_continuousAt":
 "#print Monotone.map_liminf_of_continuousAt /-\n/-- A continuous monotone function between complete linear ordered spaces sends a `filter.liminf`\nto the `filter.liminf` of the images. -/\ntheorem Monotone.map_liminf_of_continuousAt {f : R → S} (f_incr : Monotone f) (a : ι → R)\n    (f_cont : ContinuousAt f (F.liminf a)) : f (F.liminf a) = F.liminf (f ∘ a) :=\n  f_incr.map_Liminf_of_continuous_at f_cont\n#align monotone.map_liminf_of_continuous_at Monotone.map_liminf_of_continuousAt\n-/\n\n",
 "lt_mem_sets_of_limsupₛ_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n#print lt_mem_sets_of_limsupₛ_lt /-\ntheorem lt_mem_sets_of_limsupₛ_lt {f : Filter α} {b} (h : f.is_bounded (· ≤ ·)) (l : f.Limsup < b) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f (a < b) :=\n  let\n    ⟨c,\n      (h :\n        «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n          (a ≤ c)),\n      hcb⟩ :=\n    exists_lt_of_cinfₛ_lt h l\n  mem_of_superset h fun a hac => lt_of_le_of_lt hac hcb\n#align lt_mem_sets_of_Limsup_lt lt_mem_sets_of_limsupₛ_lt\n-/\n\n",
 "limsupₛ_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print limsupₛ_nhds /-\ntheorem limsupₛ_nhds (a : α) : limsupₛ ((nhds) a) = a :=\n  cinfₛ_eq_of_forall_ge_of_forall_gt_exists_lt (isBounded_le_nhds a)\n    (fun a' (h : { n : α | n ≤ a' } ∈ (nhds) a) => show a ≤ a' from @mem_of_mem_nhds α _ a _ h) fun b (hba : a < b) =>\n    show ∃ (c : _)(h : { n : α | n ≤ c } ∈ (nhds) a), c < b from\n      match dense_or_discrete a b with\n      | or.inl ⟨c, hac, hcb⟩ => ⟨c, ge_mem_nhds hac, hcb⟩\n      | or.inr ⟨_, h⟩ => ⟨a, ((nhds) a).sets_of_superset (gt_mem_nhds hba) h, hba⟩\n#align Limsup_nhds limsupₛ_nhds\n-/\n\n",
 "limsupₛ_eq_of_le_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print limsupₛ_eq_of_le_nhds /-\n/-- If a filter is converging, its liminf coincides with its limit. -/\ntheorem limsupₛ_eq_of_le_nhds : ∀ {f : Filter α} {a : α} [NeBot f], f ≤ (nhds) a → f.Limsup = a :=\n  @liminfₛ_eq_of_le_nhds («expr ᵒᵈ» α) _ _ _\n#align Limsup_eq_of_le_nhds limsupₛ_eq_of_le_nhds\n-/\n\n",
 "limsup_eq_tendsto_sum_indicator_nat_atTop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print limsup_eq_tendsto_sum_indicator_nat_atTop /-\ntheorem limsup_eq_tendsto_sum_indicator_nat_atTop (s : ℕ → Set α) :\n    limsup s atTop =\n      { ω |\n        Tendsto\n          (fun n =>\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range n) ((s (k + 1)).indicator (1 : α → ℕ) ω))\n          atTop atTop } :=\n  by\n  ext ω\n  simp only [limsup_eq_infi_supr_of_nat, ge_iff_le, Set.supᵢ_eq_unionᵢ, Set.infᵢ_eq_interᵢ, Set.mem_interᵢ,\n    Set.mem_unionᵢ, exists_prop]\n  constructor\n  · intro hω\n    refine'\n      tendsto_at_top_at_top_of_monotone'\n        (fun n m hnm =>\n          Finset.sum_mono_set_of_nonneg (fun i => Set.indicator_nonneg (fun _ _ => zero_le_one) _)\n            (Finset.range_mono hnm))\n        _\n    rintro ⟨i, h⟩\n    simp only [mem_upperBounds, Set.mem_range, forall_exists_index, forall_apply_eq_imp_iff'] at h\n    induction' i with k hk\n    · obtain ⟨j, hj₁, hj₂⟩ := hω 1\n      refine'\n        not_lt.2 (h <| j + 1)\n          (lt_of_le_of_lt\n            (finset.sum_const_zero.symm :\n                0 =\n                  finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                    (Finset.range (j + 1)) 0).le\n            _)\n      refine'\n        Finset.sum_lt_sum (fun m _ => Set.indicator_nonneg (fun _ _ => zero_le_one) _)\n          ⟨j - 1, Finset.mem_range.2 (lt_of_le_of_lt (nat.sub_le _ _) j.lt_succ_self), _⟩\n      rw [nat.sub_add_cancel hj₁, Set.indicator_of_mem hj₂]\n      exact zero_lt_one\n    · rw [imp_false] at hk\n      push_neg  at hk\n      obtain ⟨i, hi⟩ := hk\n      obtain ⟨j, hj₁, hj₂⟩ := hω (i + 1)\n      replace hi :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range i)\n            ((s (k + 1)).indicator 1 ω) =\n          k + 1 :=\n        le_antisymm (h i) hi\n      refine' not_lt.2 (h <| j + 1) _\n      rw [← Finset.sum_range_add_sum_Ico _ (i.le_succ.trans (hj₁.trans j.le_succ)), hi]\n      refine' lt_add_of_pos_right _ _\n      rw [(finset.sum_const_zero.symm :\n          0 =\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.Ico i (j + 1)) 0)]\n      refine'\n        Finset.sum_lt_sum (fun m _ => Set.indicator_nonneg (fun _ _ => zero_le_one) _)\n          ⟨j - 1,\n            Finset.mem_Ico.2\n              ⟨(nat.le_sub_iff_right (le_trans ((le_add_iff_nonneg_left _).2 zero_le') hj₁)).2 hj₁,\n                lt_of_le_of_lt (nat.sub_le _ _) j.lt_succ_self⟩,\n            _⟩\n      rw [nat.sub_add_cancel (le_trans ((le_add_iff_nonneg_left _).2 zero_le') hj₁), Set.indicator_of_mem hj₂]\n      exact zero_lt_one\n  · rintro hω i\n    rw [Set.mem_setOf_eq, tendsto_at_top_at_top] at hω\n    by_contra hcon\n    push_neg  at hcon\n    obtain ⟨j, h⟩ := hω (i + 1)\n    have :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range j)\n          ((s (k + 1)).indicator 1 ω) ≤\n        i :=\n      by\n      have hle :\n        ∀ j ≤ i,\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range j) ((s (k + 1)).indicator 1 ω) ≤\n            i :=\n        by\n        refine' fun j hij => (Finset.sum_le_card_nsmul _ _ _ _ : _ ≤ «expr • » (Finset.range j).card 1).trans _\n        · exact fun m hm => Set.indicator_apply_le' (fun _ => le_rfl) fun _ => zero_le_one\n        · simpa only [Finset.card_range, smul_eq_mul, mul_one]\n      by_cases hij : j < i\n      · exact hle _ hij.le\n      · rw [← Finset.sum_range_add_sum_Ico _ (not_lt.1 hij)]\n        suffices\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.Ico i j) ((s (k + 1)).indicator 1 ω) =\n            0\n          by\n          rw [this, add_zero]\n          exact hle _ le_rfl\n        rw [Finset.sum_eq_zero fun m hm => _]\n        exact Set.indicator_of_not_mem (hcon _ <| (Finset.mem_Ico.1 hm).1.trans m.le_succ) _\n    exact not_le.2 (lt_of_lt_of_le i.lt_succ_self <| h _ le_rfl) this\n#align limsup_eq_tendsto_sum_indicator_nat_at_top limsup_eq_tendsto_sum_indicator_nat_atTop\n-/\n\n",
 "limsup_eq_tendsto_sum_indicator_atTop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print limsup_eq_tendsto_sum_indicator_atTop /-\ntheorem limsup_eq_tendsto_sum_indicator_atTop (R : Type _) [StrictOrderedSemiring R] [Archimedean R] (s : ℕ → Set α) :\n    limsup s atTop =\n      { ω |\n        Tendsto\n          (fun n =>\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range n) ((s (k + 1)).indicator (1 : α → R) ω))\n          atTop atTop } :=\n  by\n  rw [limsup_eq_tendsto_sum_indicator_nat_atTop s]\n  ext ω\n  simp only [Set.mem_setOf_eq]\n  rw [(_ :\n      (fun n =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range n) ((s (k + 1)).indicator (1 : α → R) ω)) =\n        fun n =>\n        ↑(finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range n) ((s (k + 1)).indicator (1 : α → ℕ) ω)))]\n  · exact tendsto_coe_nat_at_top_iff.symm\n  · ext n\n    simp only [Set.indicator, Pi.one_apply, Finset.sum_boole, Nat.cast_id]\n#align limsup_eq_tendsto_sum_indicator_at_top limsup_eq_tendsto_sum_indicator_atTop\n-/\n\n",
 "limsup_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print limsup_eq_bot /-\n@[simp]\ntheorem limsup_eq_bot : f.limsup u = «expr⊥» ↔ «expr =ᶠ[ ] » u f («expr⊥») :=\n  ⟨fun h =>\n    (EventuallyLE.trans eventually_le_limsup <| eventually_of_forall fun _ => h.le).mono fun x hx =>\n      le_antisymm hx bot_le,\n    fun h => by\n    rw [limsup_congr h]\n    exact limsup_const_bot⟩\n#align limsup_eq_bot limsup_eq_bot\n-/\n\n",
 "limsup_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.limsup_eq /-\n/-- If a function has a limit, then its limsup coincides with its limit. -/\ntheorem Filter.Tendsto.limsup_eq {f : Filter β} {u : β → α} {a : α} [NeBot f] (h : Tendsto u f ((nhds) a)) :\n    limsup u f = a :=\n  limsupₛ_eq_of_le_nhds h\n#align filter.tendsto.limsup_eq Filter.Tendsto.limsup_eq\n-/\n\n",
 "liminfₛ_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print liminfₛ_nhds /-\ntheorem liminfₛ_nhds : ∀ a : α, liminfₛ ((nhds) a) = a :=\n  @limsupₛ_nhds («expr ᵒᵈ» α) _ _ _\n#align Liminf_nhds liminfₛ_nhds\n-/\n\n",
 "liminfₛ_eq_of_le_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print liminfₛ_eq_of_le_nhds /-\n/-- If a filter is converging, its limsup coincides with its limit. -/\ntheorem liminfₛ_eq_of_le_nhds {f : Filter α} {a : α} [NeBot f] (h : f ≤ (nhds) a) : f.Liminf = a :=\n  have hb_ge : IsBounded (· ≥ ·) f := (isBounded_ge_nhds a).mono h\n  have hb_le : IsBounded (· ≤ ·) f := (isBounded_le_nhds a).mono h\n  le_antisymm\n    (calc\n      f.Liminf ≤ f.Limsup := liminfₛ_le_limsupₛ hb_le hb_ge\n      _ ≤ ((nhds) a).Limsup := (limsupₛ_le_limsupₛ_of_le h hb_ge.is_cobounded_flip (isBounded_le_nhds a))\n      _ = a := limsupₛ_nhds a\n      )\n    (calc\n      a = ((nhds) a).Liminf := (liminfₛ_nhds a).symm\n      _ ≤ f.Liminf := liminfₛ_le_liminfₛ_of_le h (isBounded_ge_nhds a) hb_le.is_cobounded_flip\n      )\n#align Liminf_eq_of_le_nhds liminfₛ_eq_of_le_nhds\n-/\n\n",
 "liminf_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print liminf_eq_top /-\n@[simp]\ntheorem liminf_eq_top : f.liminf u = «expr⊤» ↔ «expr =ᶠ[ ] » u f («expr⊤») :=\n  @limsup_eq_bot («expr ᵒᵈ» α) _ _ _ _ _ _ _ _\n#align liminf_eq_top liminf_eq_top\n-/\n\n",
 "liminf_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.liminf_eq /-\n/-- If a function has a limit, then its liminf coincides with its limit. -/\ntheorem Filter.Tendsto.liminf_eq {f : Filter β} {u : β → α} {a : α} [NeBot f] (h : Tendsto u f ((nhds) a)) :\n    liminf u f = a :=\n  liminfₛ_eq_of_le_nhds h\n#align filter.tendsto.liminf_eq Filter.Tendsto.liminf_eq\n-/\n\n",
 "le_nhds_of_limsupₛ_eq_liminfₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print le_nhds_of_limsupₛ_eq_liminfₛ /-\n/-- If the liminf and the limsup of a filter coincide, then this filter converges to\ntheir common value, at least if the filter is eventually bounded above and below. -/\ntheorem le_nhds_of_limsupₛ_eq_liminfₛ {f : Filter α} {a : α} (hl : f.is_bounded (· ≤ ·)) (hg : f.is_bounded (· ≥ ·))\n    (hs : f.Limsup = a) (hi : f.Liminf = a) : f ≤ (nhds) a :=\n  tendsto_order.2 <|\n    and.intro (fun b hb => gt_mem_sets_of_liminfₛ_gt hg <| hi.symm ▸ hb) fun b hb =>\n      lt_mem_sets_of_limsupₛ_lt hl <| hs.symm ▸ hb\n#align le_nhds_of_Limsup_eq_Liminf le_nhds_of_limsupₛ_eq_liminfₛ\n-/\n\n",
 "isCobounded_le_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print isCobounded_le_nhds /-\ntheorem isCobounded_le_nhds (a : α) : ((nhds) a).is_cobounded (· ≤ ·) :=\n  (isBounded_ge_nhds a).is_cobounded_flip\n#align is_cobounded_le_nhds isCobounded_le_nhds\n-/\n\n",
 "isCobounded_ge_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print isCobounded_ge_nhds /-\ntheorem isCobounded_ge_nhds (a : α) : ((nhds) a).is_cobounded (· ≥ ·) :=\n  (isBounded_le_nhds a).is_cobounded_flip\n#align is_cobounded_ge_nhds isCobounded_ge_nhds\n-/\n\n",
 "isCoboundedUnder_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.isCoboundedUnder_le /-\ntheorem Filter.Tendsto.isCoboundedUnder_le {f : Filter β} {u : β → α} {a : α} [NeBot f] (h : Tendsto u f ((nhds) a)) :\n    f.is_cobounded_under (· ≤ ·) u :=\n  h.is_bounded_under_ge.is_cobounded_flip\n#align filter.tendsto.is_cobounded_under_le Filter.Tendsto.isCoboundedUnder_le\n-/\n\n",
 "isCoboundedUnder_ge":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.isCoboundedUnder_ge /-\ntheorem Filter.Tendsto.isCoboundedUnder_ge {f : Filter β} {u : β → α} {a : α} [NeBot f] (h : Tendsto u f ((nhds) a)) :\n    f.is_cobounded_under (· ≥ ·) u :=\n  h.is_bounded_under_le.is_cobounded_flip\n#align filter.tendsto.is_cobounded_under_ge Filter.Tendsto.isCoboundedUnder_ge\n-/\n\n",
 "isBounded_le_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print isBounded_le_nhds /-\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Mario Carneiro, Yury Kudryashov\n-/\ntheorem isBounded_le_nhds (a : α) : ((nhds) a).is_bounded (· ≤ ·) :=\n  (isTop_or_exists_gt a).elim (fun h => ⟨a, eventually_of_forall h⟩) fun ⟨b, hb⟩ => ⟨b, ge_mem_nhds hb⟩\n#align is_bounded_le_nhds isBounded_le_nhds\n-/\n\n",
 "isBounded_le_atBot":
 "#print isBounded_le_atBot /-\ntheorem isBounded_le_atBot (α : Type _) [hα : Nonempty α] [preorder α] : (atBot : Filter α).is_bounded (· ≤ ·) :=\n  isBounded_iff.2 ⟨Set.Iic hα.some, mem_atBot _, hα.some, fun x hx => hx⟩\n#align is_bounded_le_at_bot isBounded_le_atBot\n-/\n\n",
 "isBounded_ge_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print isBounded_ge_nhds /-\ntheorem isBounded_ge_nhds (a : α) : ((nhds) a).is_bounded (· ≥ ·) :=\n  @isBounded_le_nhds («expr ᵒᵈ» α) _ _ _ a\n#align is_bounded_ge_nhds isBounded_ge_nhds\n-/\n\n",
 "isBounded_ge_atTop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print isBounded_ge_atTop /-\ntheorem isBounded_ge_atTop (α : Type _) [hα : Nonempty α] [preorder α] : (atTop : Filter α).is_bounded (· ≥ ·) :=\n  isBounded_le_atBot («expr ᵒᵈ» α)\n#align is_bounded_ge_at_top isBounded_ge_atTop\n-/\n\n",
 "isBoundedUnder_le_atBot":
 "#print Filter.Tendsto.isBoundedUnder_le_atBot /-\ntheorem Filter.Tendsto.isBoundedUnder_le_atBot {α : Type _} [Nonempty α] [preorder α] {f : Filter β} {u : β → α}\n    (h : Tendsto u f atBot) : f.is_bounded_under (· ≤ ·) u :=\n  (isBounded_le_atBot α).mono h\n#align filter.tendsto.is_bounded_under_le_at_bot Filter.Tendsto.isBoundedUnder_le_atBot\n-/\n\n",
 "isBoundedUnder_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.isBoundedUnder_le /-\ntheorem Filter.Tendsto.isBoundedUnder_le {f : Filter β} {u : β → α} {a : α} (h : Tendsto u f ((nhds) a)) :\n    f.is_bounded_under (· ≤ ·) u :=\n  (isBounded_le_nhds a).mono h\n#align filter.tendsto.is_bounded_under_le Filter.Tendsto.isBoundedUnder_le\n-/\n\n",
 "isBoundedUnder_ge_atTop":
 "#print Filter.Tendsto.isBoundedUnder_ge_atTop /-\ntheorem Filter.Tendsto.isBoundedUnder_ge_atTop {α : Type _} [Nonempty α] [preorder α] {f : Filter β} {u : β → α}\n    (h : Tendsto u f atTop) : f.is_bounded_under (· ≥ ·) u :=\n  (isBounded_ge_atTop α).mono h\n#align filter.tendsto.is_bounded_under_ge_at_top Filter.Tendsto.isBoundedUnder_ge_atTop\n-/\n\n",
 "isBoundedUnder_ge":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.isBoundedUnder_ge /-\ntheorem Filter.Tendsto.isBoundedUnder_ge {f : Filter β} {u : β → α} {a : α} (h : Tendsto u f ((nhds) a)) :\n    f.is_bounded_under (· ≥ ·) u :=\n  (isBounded_ge_nhds a).mono h\n#align filter.tendsto.is_bounded_under_ge Filter.Tendsto.isBoundedUnder_ge\n-/\n\n",
 "infᵢ_eq_of_forall_le_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print infᵢ_eq_of_forall_le_of_tendsto /-\ntheorem infᵢ_eq_of_forall_le_of_tendsto {x : R} {as : ι → R} (x_le : ∀ i, x ≤ as i) {F : Filter ι} [Filter.NeBot F]\n    (as_lim : Filter.Tendsto as F ((nhds) x)) :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (as i) = x :=\n  by\n  refine' infᵢ_eq_of_forall_ge_of_forall_gt_exists_lt (fun i => x_le i) _\n  apply fun w x_lt_w => ‹Filter.NeBot F›.nonempty_of_mem (eventually_lt_of_tendsto_lt x_lt_w as_lim)\n#align infi_eq_of_forall_le_of_tendsto infᵢ_eq_of_forall_le_of_tendsto\n-/\n\n",
 "gt_mem_sets_of_liminfₛ_gt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n#print gt_mem_sets_of_liminfₛ_gt /-\ntheorem gt_mem_sets_of_liminfₛ_gt :\n    ∀ {f : Filter α} {b},\n      f.is_bounded (· ≥ ·) →\n        b < f.Liminf →\n          «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n            (b < a) :=\n  @lt_mem_sets_of_limsupₛ_lt («expr ᵒᵈ» α) _\n#align gt_mem_sets_of_Liminf_gt gt_mem_sets_of_liminfₛ_gt\n-/\n\n",
 "eventually_liminf_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n#print eventually_liminf_le /-\ntheorem eventually_liminf_le\n    (hf : IsBoundedUnder (· ≥ ·) f u := by\n      run_tac\n        is_bounded_default) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n      (f.liminf u ≤ u b) :=\n  @eventually_le_limsup («expr ᵒᵈ» α) _ _ _ _ _ _ _ _ hf\n#align eventually_liminf_le eventually_liminf_le\n-/\n\n",
 "eventually_le_limsup":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:69:18: unsupported non-interactive tactic is_bounded_default -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n#print eventually_le_limsup /-\ntheorem eventually_le_limsup\n    (hf : IsBoundedUnder (· ≤ ·) f u := by\n      run_tac\n        is_bounded_default) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n      (u b ≤ f.limsup u) :=\n  by\n  obtain ha | ha := isTop_or_exists_gt (f.limsup u)\n  · exact eventually_of_forall fun _ => ha _\n  by_cases H : IsGLB (Set.Ioi (f.limsup u)) (f.limsup u)\n  · obtain ⟨u, -, -, hua, hu⟩ := H.exists_seq_antitone_tendsto ha\n    have := fun n => eventually_lt_of_limsup_lt (hu n) hf\n    exact\n      (eventually_countable_forall.2 this).mono fun b hb => ge_of_tendsto hua <| eventually_of_forall fun n => (hb _).le\n  · obtain ⟨x, hx, xa⟩ : ∃ x, (∀ ⦃b⦄, f.limsup u < b → x ≤ b) ∧ f.limsup u < x :=\n      by\n      simp only [IsGLB, IsGreatest, lowerBounds, upperBounds, Set.mem_Ioi, Set.mem_setOf_eq, not_and, not_forall,\n        not_le, exists_prop] at H\n      exact H fun x hx => le_of_lt hx\n    filter_upwards [eventually_lt_of_limsup_lt xa hf]with y hy\n    contrapose! hy\n    exact hx hy\n#align eventually_le_limsup eventually_le_limsup\n-/\n\n",
 "bddBelow_range_of_tendsto_atTop_atTop":
 "#print bddBelow_range_of_tendsto_atTop_atTop /-\ntheorem bddBelow_range_of_tendsto_atTop_atTop {α : Type _} [Nonempty α] [SemilatticeInf α] {u : ℕ → α}\n    (hx : Tendsto u atTop atTop) : BddBelow (Set.range u) :=\n  (Filter.Tendsto.isBoundedUnder_ge_atTop hx).bdd_below_range\n#align bdd_below_range_of_tendsto_at_top_at_top bddBelow_range_of_tendsto_atTop_atTop\n-/\n\n",
 "bddBelow_range_of_cofinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.bddBelow_range_of_cofinite /-\ntheorem Filter.Tendsto.bddBelow_range_of_cofinite {u : β → α} {a : α} (h : Tendsto u cofinite ((nhds) a)) :\n    BddBelow (Set.range u) :=\n  h.is_bounded_under_ge.bdd_below_range_of_cofinite\n#align filter.tendsto.bdd_below_range_of_cofinite Filter.Tendsto.bddBelow_range_of_cofinite\n-/\n\n",
 "bddBelow_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.bddBelow_range /-\ntheorem Filter.Tendsto.bddBelow_range {u : ℕ → α} {a : α} (h : Tendsto u atTop ((nhds) a)) : BddBelow (Set.range u) :=\n  h.is_bounded_under_ge.bdd_below_range\n#align filter.tendsto.bdd_below_range Filter.Tendsto.bddBelow_range\n-/\n\n",
 "bddAbove_range_of_tendsto_atTop_atBot":
 "#print bddAbove_range_of_tendsto_atTop_atBot /-\ntheorem bddAbove_range_of_tendsto_atTop_atBot {α : Type _} [Nonempty α] [SemilatticeSup α] {u : ℕ → α}\n    (hx : Tendsto u atTop atBot) : BddAbove (Set.range u) :=\n  (Filter.Tendsto.isBoundedUnder_le_atBot hx).bdd_above_range\n#align bdd_above_range_of_tendsto_at_top_at_bot bddAbove_range_of_tendsto_atTop_atBot\n-/\n\n",
 "bddAbove_range_of_cofinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.bddAbove_range_of_cofinite /-\ntheorem Filter.Tendsto.bddAbove_range_of_cofinite {u : β → α} {a : α} (h : Tendsto u cofinite ((nhds) a)) :\n    BddAbove (Set.range u) :=\n  h.is_bounded_under_le.bdd_above_range_of_cofinite\n#align filter.tendsto.bdd_above_range_of_cofinite Filter.Tendsto.bddAbove_range_of_cofinite\n-/\n\n",
 "bddAbove_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.Tendsto.bddAbove_range /-\ntheorem Filter.Tendsto.bddAbove_range {u : ℕ → α} {a : α} (h : Tendsto u atTop ((nhds) a)) : BddAbove (Set.range u) :=\n  h.is_bounded_under_le.bdd_above_range\n#align filter.tendsto.bdd_above_range Filter.Tendsto.bddAbove_range\n-/\n\n"}