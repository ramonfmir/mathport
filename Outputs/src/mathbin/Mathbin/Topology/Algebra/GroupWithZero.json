{"zpow₀":
 "#print Continuous.zpow₀ /-\n@[continuity]\ntheorem Continuous.zpow₀ (hf : Continuous f) (m : ℤ) (h0 : ∀ a, f a ≠ 0 ∨ 0 ≤ m) : Continuous fun x => f x ^ m :=\n  continuous_iff_continuousAt.2 fun x => (hf.tendsto x).zpow₀ m (h0 x)\n#align continuous.zpow₀ Continuous.zpow₀\n-/\n\n",
 "tendsto_mul_iff_of_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.tendsto_mul_iff_of_ne_zero /-\ntheorem Filter.tendsto_mul_iff_of_ne_zero [T1Space G₀] {f g : α → G₀} {l : Filter α} {x y : G₀}\n    (hg : Tendsto g l ((nhds) y)) (hy : y ≠ 0) :\n    Tendsto (fun n => f n * g n) l (nhds <| x * y) ↔ Tendsto f l ((nhds) x) :=\n  by\n  refine' ⟨fun hfg => _, fun hf => hf.mul hg⟩\n  rw [← mul_div_cancel x hy]\n  refine' tendsto.congr' _ (hfg.div hg hy)\n  refine' eventually.mp (hg.eventually_ne hy) (eventually_of_forall fun n hn => mul_div_cancel _ hn)\n#align filter.tendsto_mul_iff_of_ne_zero Filter.tendsto_mul_iff_of_ne_zero\n-/\n\n",
 "tendsto_inv₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print tendsto_inv₀ /-\ntheorem tendsto_inv₀ {x : G₀} (hx : x ≠ 0) : Tendsto has_inv.inv ((nhds) x) ((nhds) x⁻¹) :=\n  continuous_at_inv₀ hx\n#align tendsto_inv₀ tendsto_inv₀\n-/\n\n",
 "mul_right₀_symm_apply":
 "@[simp]\ntheorem mul_right₀_symm_apply (c : α) (hc : c ≠ 0) : ((Homeomorph.mulRight₀ c hc).symm : α → α) = fun x => x * c⁻¹ :=\n  rfl\n#align mul_right₀_symm_apply mul_right₀_symm_apply\n\n",
 "mul_left₀_symm_apply":
 "@[simp]\ntheorem mul_left₀_symm_apply (c : α) (hc : c ≠ 0) : ((Homeomorph.mulLeft₀ c hc).symm : α → α) = (· * ·) c⁻¹ :=\n  rfl\n#align mul_left₀_symm_apply mul_left₀_symm_apply\n\n",
 "inv₀":
 "#print ContinuousOn.inv₀ /-\ntheorem ContinuousOn.inv₀ (hf : ContinuousOn f s) (h0 : ∀ x ∈ s, f x ≠ 0) : ContinuousOn (fun x => (f x)⁻¹) s :=\n  fun x hx => (hf x hx).inv₀ (h0 x hx)\n#align continuous_on.inv₀ ContinuousOn.inv₀\n-/\n\n",
 "embedding_val₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n#print Units.embedding_val₀ /-\n/-- If `G₀` is a group with zero with topology such that `x ↦ x⁻¹` is continuous at all nonzero\npoints. Then the coercion `Mˣ → M` is a topological embedding. -/\ntheorem Units.embedding_val₀ [GroupWithZero G₀] [TopologicalSpace G₀] [HasContinuousInv₀ G₀] :\n    Embedding (coe : «expr ˣ» G₀ → G₀) :=\n  Units.embedding_val_mk <| continuousOn_inv₀.mono fun x => IsUnit.ne_zero\n#align units.embedding_coe₀ Units.embedding_val₀\n-/\n\n",
 "div_const":
 "#print Continuous.div_const /-\n@[continuity]\ntheorem Continuous.div_const (hf : Continuous f) (y : G₀) : Continuous fun x => f x / y := by\n  simpa only [div_eq_mul_inv] using hf.mul continuous_const\n#align continuous.div_const Continuous.div_const\n-/\n\n",
 "div":
 "#print Continuous.div /-\n@[continuity]\ntheorem Continuous.div (hf : Continuous f) (hg : Continuous g) (h₀ : ∀ x, g x ≠ 0) : Continuous (f / g) := by\n  simpa only [div_eq_mul_inv] using hf.mul (hg.inv₀ h₀)\n#align continuous.div Continuous.div\n-/\n\n",
 "continuousOn_zpow₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print continuousOn_zpow₀ /-\ntheorem continuousOn_zpow₀ (m : ℤ) : ContinuousOn (fun x : G₀ => x ^ m) («expr ᶜ» {0}) := fun x hx =>\n  (continuousAt_zpow₀ _ _ (or.inl hx)).continuous_within_at\n#align continuous_on_zpow₀ continuousOn_zpow₀\n-/\n\n",
 "continuousOn_inv₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n#print continuousOn_inv₀ /-\ntheorem continuousOn_inv₀ : ContinuousOn (has_inv.inv : G₀ → G₀) («expr ᶜ» {0}) := fun x hx =>\n  (continuous_at_inv₀ hx).continuous_within_at\n#align continuous_on_inv₀ continuousOn_inv₀\n-/\n\n",
 "continuousOn_div":
 "#print continuousOn_div /-\ntheorem continuousOn_div : ContinuousOn (fun p : G₀ × G₀ => p.1 / p.2) { p | p.2 ≠ 0 } :=\n  continuousOn_fst.div continuousOn_snd fun _ => id\n#align continuous_on_div continuousOn_div\n-/\n\n",
 "continuousAt_zpow₀":
 "#print continuousAt_zpow₀ /-\ntheorem continuousAt_zpow₀ (x : G₀) (m : ℤ) (h : x ≠ 0 ∨ 0 ≤ m) : ContinuousAt (fun x => x ^ m) x :=\n  by\n  cases m\n  · simpa only [zpow_ofNat] using continuousAt_pow x m\n  · simp only [zpow_negSucc]\n    have hx : x ≠ 0 := h.resolve_right (int.neg_succ_of_nat_lt_zero m).not_le\n    exact (continuousAt_pow x (m + 1)).inv₀ (pow_ne_zero _ hx)\n#align continuous_at_zpow₀ continuousAt_zpow₀\n-/\n\n",
 "comp_div_cases":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uncurry -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `uncurry -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `filter.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Continuous.comp_div_cases /-\n/-- `h x (f x / g x)` is continuous under certain conditions, even if the denominator is sometimes\n  `0`. See docstring of `continuous_at.comp_div_cases`. -/\ntheorem Continuous.comp_div_cases {f g : α → G₀} (h : α → G₀ → β) (hf : Continuous f) (hg : Continuous g)\n    (hh : ∀ a, g a ≠ 0 → ContinuousAt (uncurry h) (a, f a / g a))\n    (h2h : ∀ a, g a = 0 → Tendsto (uncurry h) (filter.prod ((nhds) a) («expr⊤»)) ((nhds) (h a 0))) :\n    Continuous fun x => h x (f x / g x) :=\n  continuous_iff_continuousAt.mpr fun a => hf.continuous_at.comp_div_cases _ hg.continuous_at (hh a) (h2h a)\n#align continuous.comp_div_cases Continuous.comp_div_cases\n-/\n\n",
 "coe_mul_right₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_mul_right₀ (c : α) (hc : c ≠ 0) : «expr⇑ » (Homeomorph.mulRight₀ c hc) = fun x => x * c :=\n  rfl\n#align coe_mul_right₀ coe_mul_right₀\n\n",
 "coe_mul_left₀":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_mul_left₀ (c : α) (hc : c ≠ 0) : «expr⇑ » (Homeomorph.mulLeft₀ c hc) = (· * ·) c :=\n  rfl\n#align coe_mul_left₀ coe_mul_left₀\n\n"}