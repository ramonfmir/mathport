{"locallyCompactSpace_of_Group":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print TopologicalSpace.PositiveCompacts.locallyCompactSpace_of_Group /-\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Mario Carneiro, Patrick Massot\n-/\n/-- Every separated topological group in which there exists a compact set with nonempty interior\nis locally compact. -/\n@[to_additive\n      \"Every separated topological group in which there exists a compact set with nonempty\\ninterior is locally compact.\"]\ntheorem TopologicalSpace.PositiveCompacts.locallyCompactSpace_of_Group [T2Space G] (K : PositiveCompacts G) :\n    LocallyCompactSpace G := by\n  refine' locally_compact_of_compact_nhds fun x => _\n  obtain ⟨y, hy⟩ := K.interior_nonempty\n  let F := Homeomorph.mulLeft (x * y⁻¹)\n  refine' ⟨«expr '' » F K, _, K.is_compact.image F.continuous⟩\n  suffices «expr ⁻¹' » F.symm K ∈ (nhds) x by\n    convert this\n    apply Equiv.image_eq_preimage\n  apply ContinuousAt.preimage_mem_nhds F.symm.continuous.continuous_at\n  have : F.symm x = y := by simp [F, Homeomorph.mulLeft_symm]\n  rw [this]\n  exact mem_interior_iff_mem_nhds.1 hy\n#align topological_space.positive_compacts.locally_compact_space_of_group TopologicalSpace.PositiveCompacts.locallyCompactSpace_of_Group\n#align topological_space.positive_compacts.locally_compact_space_of_add_group TopologicalSpace.PositiveCompacts.locallyCompactSpace_of_AddGroup\n-/\n\n"}