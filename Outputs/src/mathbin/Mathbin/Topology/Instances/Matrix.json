{"transpose_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem matrix.transpose_tsum [t2_space R] {f : X → matrix m n R} :\n    matrix.transpose\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (matrix.transpose (f x)) :=\n  by\n  by_cases hf : summable f\n  · exact hf.has_sum.matrix_transpose.tsum_eq.symm\n  · have hft := summable_matrix_transpose.not.mpr hf\n    rw [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable hft, transpose_zero]\n#align matrix.transpose_tsum matrix.transpose_tsum\n\n",
 "summable_matrix_transpose":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n@[simp]\ntheorem summable_matrix_transpose {f : X → matrix m n R} : (summable fun x => matrix.transpose (f x)) ↔ summable f :=\n  (summable.map_iff_of_equiv (matrix.transpose_add_equiv m n R) (@continuous_id (matrix m n R) _).matrix_transpose\n      continuous_id.matrix_transpose :\n    _)\n#align summable_matrix_transpose summable_matrix_transpose\n\n",
 "summable_matrix_diagonal":
 "@[simp]\ntheorem summable_matrix_diagonal [decidable_eq n] {f : X → n → R} : (summable fun x => diagonal (f x)) ↔ summable f :=\n  (summable.map_iff_of_left_inverse (@matrix.diagonal_add_monoid_hom n R _ _) (matrix.diag_add_monoid_hom n R)\n      (continuous.matrix_diagonal continuous_id) continuous_matrix_diag fun A => diag_diagonal A :\n    _)\n#align summable_matrix_diagonal summable_matrix_diagonal\n\n",
 "summable_matrix_conj_transpose":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n@[simp]\ntheorem summable_matrix_conj_transpose [StarAddMonoid R] [has_continuous_star R] {f : X → matrix m n R} :\n    (summable fun x => matrix.conj_transpose (f x)) ↔ summable f :=\n  (summable.map_iff_of_equiv (matrix.conj_transpose_add_equiv m n R)\n      (@continuous_id (matrix m n R) _).matrix_conj_transpose continuous_id.matrix_conj_transpose :\n    _)\n#align summable_matrix_conj_transpose summable_matrix_conj_transpose\n\n",
 "summable_matrix_block_diagonal'":
 "theorem summable_matrix_block_diagonal' [decidable_eq l] {f : X → ∀ i, matrix (m' i) (n' i) R} :\n    (summable fun x => block_diagonal' (f x)) ↔ summable f :=\n  (summable.map_iff_of_left_inverse (matrix.block_diagonal'_add_monoid_hom m' n' R)\n      (matrix.block_diag'_add_monoid_hom m' n' R) (continuous.matrix_block_diagonal' continuous_id)\n      (continuous.matrix_block_diag' continuous_id) fun A => block_diag'_block_diagonal' A :\n    _)\n#align summable_matrix_block_diagonal' summable_matrix_block_diagonal'\n\n",
 "summable_matrix_block_diagonal":
 "theorem summable_matrix_block_diagonal [decidable_eq p] {f : X → p → matrix m n R} :\n    (summable fun x => block_diagonal (f x)) ↔ summable f :=\n  (summable.map_iff_of_left_inverse (matrix.block_diagonal_add_monoid_hom m n p R)\n      (matrix.block_diag_add_monoid_hom m n p R) (continuous.matrix_block_diagonal continuous_id)\n      (continuous.matrix_block_diag continuous_id) fun A => block_diag_block_diagonal A :\n    _)\n#align summable_matrix_block_diagonal summable_matrix_block_diagonal\n\n",
 "matrix_vec_mul_vec":
 "@[continuity]\ntheorem continuous.matrix_vec_mul_vec [Mul R] [has_continuous_mul R] {A : X → m → R} {B : X → n → R} (hA : continuous A)\n    (hB : continuous B) : continuous fun x => vec_mul_vec (A x) (B x) :=\n  continuous_matrix fun i j => ((continuous_apply _).comp hA).mul ((continuous_apply _).comp hB)\n#align continuous.matrix_vec_mul_vec continuous.matrix_vec_mul_vec\n\n",
 "matrix_vec_mul":
 "@[continuity]\ntheorem continuous.matrix_vec_mul [NonUnitalNonAssocSemiring R] [has_continuous_add R] [has_continuous_mul R]\n    [fintype m] {A : X → m → R} {B : X → matrix m n R} (hA : continuous A) (hB : continuous B) :\n    continuous fun x => vec_mul (A x) (B x) :=\n  continuous_pi fun i => hA.matrix_dot_product <| continuous_pi fun j => hB.matrix_elem _ _\n#align continuous.matrix_vec_mul continuous.matrix_vec_mul\n\n",
 "matrix_update_row":
 "@[continuity]\ntheorem continuous.matrix_update_row [decidable_eq m] (i : m) {A : X → matrix m n R} {B : X → n → R} (hA : continuous A)\n    (hB : continuous B) : continuous fun x => (A x).update_row i (B x) :=\n  hA.update i hB\n#align continuous.matrix_update_row continuous.matrix_update_row\n\n",
 "matrix_update_column":
 "@[continuity]\ntheorem continuous.matrix_update_column [decidable_eq n] (i : n) {A : X → matrix m n R} {B : X → m → R}\n    (hA : continuous A) (hB : continuous B) : continuous fun x => (A x).update_column i (B x) :=\n  continuous_matrix fun j k =>\n    (continuous_apply k).comp <| ((continuous_apply _).comp hA).update i ((continuous_apply _).comp hB)\n#align continuous.matrix_update_column continuous.matrix_update_column\n\n",
 "matrix_transpose":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem summable.matrix_transpose {f : X → matrix m n R} (hf : summable f) : summable fun x => matrix.transpose (f x) :=\n  hf.has_sum.matrix_transpose.summable\n#align summable.matrix_transpose summable.matrix_transpose\n\n",
 "matrix_trace":
 "@[continuity]\ntheorem continuous.matrix_trace [fintype n] [add_comm_monoid R] [has_continuous_add R] {A : X → matrix n n R}\n    (hA : continuous A) : continuous fun x => trace (A x) :=\n  continuous_finset_sum _ fun i hi => hA.matrix_elem _ _\n#align continuous.matrix_trace continuous.matrix_trace\n\n",
 "matrix_submatrix":
 "@[continuity]\ntheorem continuous.matrix_submatrix {A : X → matrix l n R} (hA : continuous A) (e₁ : m → l) (e₂ : p → n) :\n    continuous fun x => (A x).submatrix e₁ e₂ :=\n  continuous_matrix fun i j => hA.matrix_elem _ _\n#align continuous.matrix_submatrix continuous.matrix_submatrix\n\n",
 "matrix_row":
 "@[continuity]\ntheorem continuous.matrix_row {A : X → n → R} (hA : continuous A) : continuous fun x => row (A x) :=\n  continuous_matrix fun i j => (continuous_apply _).comp hA\n#align continuous.matrix_row continuous.matrix_row\n\n",
 "matrix_reindex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[continuity]\ntheorem continuous.matrix_reindex {A : X → matrix l n R} (hA : continuous A) (e₁ : «expr ≃ » l m) (e₂ : «expr ≃ » n p) :\n    continuous fun x => reindex e₁ e₂ (A x) :=\n  hA.matrix_submatrix _ _\n#align continuous.matrix_reindex continuous.matrix_reindex\n\n",
 "matrix_mul_vec":
 "@[continuity]\ntheorem continuous.matrix_mul_vec [NonUnitalNonAssocSemiring R] [has_continuous_add R] [has_continuous_mul R]\n    [fintype n] {A : X → matrix m n R} {B : X → n → R} (hA : continuous A) (hB : continuous B) :\n    continuous fun x => (A x).mul_vec (B x) :=\n  continuous_pi fun i => ((continuous_apply i).comp hA).matrix_dot_product hB\n#align continuous.matrix_mul_vec continuous.matrix_mul_vec\n\n",
 "matrix_mul":
 "/-- For square matrices the usual `continuous_mul` can be used. -/\n@[continuity]\ntheorem continuous.matrix_mul [fintype n] [Mul R] [add_comm_monoid R] [has_continuous_add R] [has_continuous_mul R]\n    {A : X → matrix m n R} {B : X → matrix n p R} (hA : continuous A) (hB : continuous B) :\n    continuous fun x => (A x).mul (B x) :=\n  continuous_matrix fun i j => continuous_finset_sum _ fun k _ => (hA.matrix_elem _ _).mul (hB.matrix_elem _ _)\n#align continuous.matrix_mul continuous.matrix_mul\n\n",
 "matrix_map":
 "@[continuity]\ntheorem continuous.matrix_map [topological_space S] {A : X → matrix m n S} {f : S → R} (hA : continuous A)\n    (hf : continuous f) : continuous fun x => (A x).map f :=\n  continuous_matrix fun i j => hf.comp <| hA.matrix_elem _ _\n#align continuous.matrix_map continuous.matrix_map\n\n",
 "matrix_from_blocks":
 "-- lemmas about functions in `data/matrix/block.lean`\n@[continuity]\ntheorem continuous.matrix_from_blocks {A : X → matrix n l R} {B : X → matrix n m R} {C : X → matrix p l R}\n    {D : X → matrix p m R} (hA : continuous A) (hB : continuous B) (hC : continuous C) (hD : continuous D) :\n    continuous fun x => matrix.from_blocks (A x) (B x) (C x) (D x) :=\n  continuous_matrix fun i j => by cases i <;> cases j <;> refine' continuous.matrix_elem _ i j <;> assumption\n#align continuous.matrix_from_blocks continuous.matrix_from_blocks\n\n",
 "matrix_elem":
 "theorem continuous.matrix_elem {A : X → matrix m n R} (hA : continuous A) (i : m) (j : n) :\n    continuous fun x => A x i j :=\n  (continuous_apply_apply i j).comp hA\n#align continuous.matrix_elem continuous.matrix_elem\n\n",
 "matrix_dot_product":
 "@[continuity]\ntheorem continuous.matrix_dot_product [fintype n] [Mul R] [add_comm_monoid R] [has_continuous_add R]\n    [has_continuous_mul R] {A : X → n → R} {B : X → n → R} (hA : continuous A) (hB : continuous B) :\n    continuous fun x => dot_product (A x) (B x) :=\n  continuous_finset_sum _ fun i _ => ((continuous_apply i).comp hA).mul ((continuous_apply i).comp hB)\n#align continuous.matrix_dot_product continuous.matrix_dot_product\n\n",
 "matrix_diagonal":
 "theorem summable.matrix_diagonal [decidable_eq n] {f : X → n → R} (hf : summable f) :\n    summable fun x => diagonal (f x) :=\n  hf.has_sum.matrix_diagonal.summable\n#align summable.matrix_diagonal summable.matrix_diagonal\n\n",
 "matrix_diag":
 "theorem summable.matrix_diag {f : X → matrix n n R} (hf : summable f) : summable fun x => diag (f x) :=\n  hf.has_sum.matrix_diag.summable\n#align summable.matrix_diag summable.matrix_diag\n\n",
 "matrix_det":
 "@[continuity]\ntheorem continuous.matrix_det [fintype n] [decidable_eq n] [CommRing R] [topological_ring R] {A : X → matrix n n R}\n    (hA : continuous A) : continuous fun x => (A x).det :=\n  by\n  simp_rw [matrix.det_apply]\n  refine' continuous_finset_sum _ fun l _ => continuous.const_smul _ _\n  refine' continuous_finset_prod _ fun l _ => hA.matrix_elem _ _\n#align continuous.matrix_det continuous.matrix_det\n\n",
 "matrix_cramer":
 "@[continuity]\ntheorem continuous.matrix_cramer [fintype n] [decidable_eq n] [CommRing R] [topological_ring R] {A : X → matrix n n R}\n    {B : X → n → R} (hA : continuous A) (hB : continuous B) : continuous fun x => (A x).cramer (B x) :=\n  continuous_pi fun i => (hA.matrix_update_column _ hB).matrix_det\n#align continuous.matrix_cramer continuous.matrix_cramer\n\n",
 "matrix_conj_transpose":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\ntheorem summable.matrix_conj_transpose [StarAddMonoid R] [has_continuous_star R] {f : X → matrix m n R}\n    (hf : summable f) : summable fun x => matrix.conj_transpose (f x) :=\n  hf.has_sum.matrix_conj_transpose.summable\n#align summable.matrix_conj_transpose summable.matrix_conj_transpose\n\n",
 "matrix_col":
 "@[continuity]\ntheorem continuous.matrix_col {A : X → n → R} (hA : continuous A) : continuous fun x => col (A x) :=\n  continuous_matrix fun i j => (continuous_apply _).comp hA\n#align continuous.matrix_col continuous.matrix_col\n\n",
 "matrix_block_diagonal'":
 "theorem summable.matrix_block_diagonal' [decidable_eq l] {f : X → ∀ i, matrix (m' i) (n' i) R} (hf : summable f) :\n    summable fun x => block_diagonal' (f x) :=\n  hf.has_sum.matrix_block_diagonal'.summable\n#align summable.matrix_block_diagonal' summable.matrix_block_diagonal'\n\n",
 "matrix_block_diagonal":
 "theorem summable.matrix_block_diagonal [decidable_eq p] {f : X → p → matrix m n R} (hf : summable f) :\n    summable fun x => block_diagonal (f x) :=\n  hf.has_sum.matrix_block_diagonal.summable\n#align summable.matrix_block_diagonal summable.matrix_block_diagonal\n\n",
 "matrix_block_diag'":
 "theorem summable.matrix_block_diag' {f : X → matrix (Σi, m' i) (Σi, n' i) R} (hf : summable f) :\n    summable fun x => block_diag' (f x) :=\n  hf.has_sum.matrix_block_diag'.summable\n#align summable.matrix_block_diag' summable.matrix_block_diag'\n\n",
 "matrix_block_diag":
 "theorem summable.matrix_block_diag {f : X → matrix (m × p) (n × p) R} (hf : summable f) :\n    summable fun x => block_diag (f x) :=\n  hf.has_sum.matrix_block_diag.summable\n#align summable.matrix_block_diag summable.matrix_block_diag\n\n",
 "matrix_adjugate":
 "@[continuity]\ntheorem continuous.matrix_adjugate [fintype n] [decidable_eq n] [CommRing R] [topological_ring R] {A : X → matrix n n R}\n    (hA : continuous A) : continuous fun x => (A x).adjugate :=\n  continuous_matrix fun j k => (hA.matrix_transpose.matrix_update_column k continuous_const).matrix_det\n#align continuous.matrix_adjugate continuous.matrix_adjugate\n\n",
 "diagonal_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem matrix.diagonal_tsum [decidable_eq n] [t2_space R] {f : X → n → R} :\n    diagonal («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (diagonal (f x)) :=\n  by\n  by_cases hf : summable f\n  · exact hf.has_sum.matrix_diagonal.tsum_eq.symm\n  · have hft := summable_matrix_diagonal.not.mpr hf\n    rw [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable hft]\n    exact diagonal_zero\n#align matrix.diagonal_tsum matrix.diagonal_tsum\n\n",
 "continuous_matrix_diag":
 "-- note this doesn't elaborate well from the above\ntheorem continuous_matrix_diag : continuous (matrix.diag : matrix n n R → n → R) :=\n  show continuous fun x : matrix n n R => matrix.diag x from continuous_id.matrix_diag\n#align continuous_matrix_diag continuous_matrix_diag\n\n",
 "continuous_matrix":
 "/-\nCopyright (c) 2021 Oliver Nash. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Oliver Nash, Eric Wieser\n-/\n/-- To show a function into matrices is continuous it suffices to show the coefficients of the\nresulting matrix are continuous -/\n@[continuity]\ntheorem continuous_matrix [topological_space α] {f : α → matrix m n R} (h : ∀ i j, continuous fun a => f a i j) :\n    continuous f :=\n  continuous_pi fun _ => continuous_pi fun j => h _ _\n#align continuous_matrix continuous_matrix\n\n",
 "continuous_at_matrix_inv":
 "/-- When `ring.inverse` is continuous at the determinant (such as in a `normed_ring`, or a\n`topological_field`), so is `matrix.has_inv`. -/\ntheorem continuous_at_matrix_inv [fintype n] [decidable_eq n] [CommRing R] [topological_ring R] (A : matrix n n R)\n    (h : continuous_at Ring.inverse A.det) : continuous_at has_inv.inv A :=\n  (h.comp continuous_id.matrix_det.continuous_at).smul continuous_id.matrix_adjugate.continuous_at\n#align continuous_at_matrix_inv continuous_at_matrix_inv\n\n",
 "conj_transpose_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\ntheorem matrix.conj_transpose_tsum [StarAddMonoid R] [has_continuous_star R] [t2_space R] {f : X → matrix m n R} :\n    matrix.conj_transpose\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (matrix.conj_transpose (f x)) :=\n  by\n  by_cases hf : summable f\n  · exact hf.has_sum.matrix_conj_transpose.tsum_eq.symm\n  · have hft := summable_matrix_conj_transpose.not.mpr hf\n    rw [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable hft, conj_transpose_zero]\n#align matrix.conj_transpose_tsum matrix.conj_transpose_tsum\n\n",
 "block_diagonal_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem matrix.block_diagonal_tsum [decidable_eq p] [t2_space R] {f : X → p → matrix m n R} :\n    block_diagonal\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (block_diagonal (f x)) :=\n  by\n  by_cases hf : summable f\n  · exact hf.has_sum.matrix_block_diagonal.tsum_eq.symm\n  · have hft := summable_matrix_block_diagonal.not.mpr hf\n    rw [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable hft]\n    exact block_diagonal_zero\n#align matrix.block_diagonal_tsum matrix.block_diagonal_tsum\n\n",
 "block_diagonal'_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem matrix.block_diagonal'_tsum [decidable_eq l] [t2_space R] {f : X → ∀ i, matrix (m' i) (n' i) R} :\n    block_diagonal'\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (block_diagonal' (f x)) :=\n  by\n  by_cases hf : summable f\n  · exact hf.has_sum.matrix_block_diagonal'.tsum_eq.symm\n  · have hft := summable_matrix_block_diagonal'.not.mpr hf\n    rw [tsum_eq_zero_of_not_summable hf, tsum_eq_zero_of_not_summable hft]\n    exact block_diagonal'_zero\n#align matrix.block_diagonal'_tsum matrix.block_diagonal'_tsum\n\n"}