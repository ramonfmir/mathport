{"uniform_embedding_coe_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem uniform_embedding_coe_real : UniformEmbedding (coe : exprℚ → exprℝ) :=\n  uniformEmbedding_comap Rat.cast_injective\n#align uniform_embedding_coe_real uniform_embedding_coe_real\n\n",
 "uniform_continuous_coe_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem uniform_continuous_coe_real : UniformContinuous (coe : exprℚ → exprℝ) :=\n  uniformContinuous_comap\n#align uniform_continuous_coe_real uniform_continuous_coe_real\n\n",
 "uniform_continuous_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\ntheorem uniform_continuous_abs : UniformContinuous (abs : exprℚ → exprℚ) :=\n  Metric.uniformContinuous_iff.2 fun ε ε0 =>\n    ⟨ε, ε0, fun a b h => lt_of_le_of_lt (by simpa [Rat.dist_eq] using abs_abs_sub_abs_le_abs_sub _ _) h⟩\n#align uniform_continuous_abs uniform_continuous_abs\n\n",
 "uniformEmbedding_coe_rat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n#print Int.uniformEmbedding_coe_rat /-\ntheorem Int.uniformEmbedding_coe_rat : UniformEmbedding (coe : ℤ → exprℚ) :=\n  uniformEmbedding_bot_of_pairwise_le_dist zero_lt_one <| by simpa using Int.pairwise_one_le_dist\n#align int.uniform_embedding_coe_rat Int.uniformEmbedding_coe_rat\n-/\n\n",
 "uniformContinuous_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n#print uniformContinuous_neg /-\ntheorem uniformContinuous_neg : UniformContinuous (@has_neg.neg (exprℚ) _) :=\n  Metric.uniformContinuous_iff.2 fun ε ε0 =>\n    ⟨_, ε0, fun a b h => by rw [dist_comm] at h <;> simpa [Rat.dist_eq] using h⟩\n#align uniform_continuous_neg uniformContinuous_neg\n-/\n\n",
 "uniformContinuous_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n#print uniformContinuous_add /-\n-- TODO(Mario): Find a way to use rat_add_continuous_lemma\ntheorem uniformContinuous_add : UniformContinuous fun p : exprℚ × exprℚ => p.1 + p.2 :=\n  Rat.uniformEmbedding_coe_real.to_uniform_inducing.uniform_continuous_iff.2 <| by\n    simp only [(· ∘ ·), Rat.cast_add] <;>\n      exact real.uniform_continuous_add.comp (rat.uniform_continuous_coe_real.prod_map Rat.uniformContinuous_coe_real)\n#align uniform_continuous_add uniformContinuous_add\n-/\n\n",
 "totallyBounded_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n#print totallyBounded_Icc /-\ntheorem totallyBounded_Icc (a b : exprℚ) : TotallyBounded (Icc a b) := by\n  simpa only [preimage_cast_Icc] using totallyBounded_preimage Rat.uniformEmbedding_coe_real (totallyBounded_Icc a b)\n#align totally_bounded_Icc totallyBounded_Icc\n-/\n\n",
 "embedding_coe_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem embedding_coe_real : Embedding (coe : exprℚ → exprℝ) :=\n  denseEmbedding_coe_real.to_embedding\n#align embedding_coe_real embedding_coe_real\n\n",
 "dist_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Mario Carneiro\n-/\n-- without the `by exact` this is noncomputable\ntheorem dist_eq (x y : exprℚ) : dist x y = |x - y| :=\n  rfl\n#align dist_eq dist_eq\n\n",
 "dist_cast_rat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n#print Int.dist_cast_rat /-\n@[norm_cast, simp]\ntheorem Int.dist_cast_rat (x y : ℤ) : dist (x : exprℚ) y = dist x y := by\n  rw [← Int.dist_cast_real, ← Rat.dist_cast] <;> congr 1 <;> norm_cast\n#align int.dist_cast_rat Int.dist_cast_rat\n-/\n\n",
 "dist_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[norm_cast, simp]\ntheorem dist_cast (x y : exprℚ) : dist (x : exprℝ) y = dist x y :=\n  rfl\n#align dist_cast dist_cast\n\n",
 "dense_embedding_coe_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem dense_embedding_coe_real : DenseEmbedding (coe : exprℚ → exprℝ) :=\n  uniformEmbedding_coe_real.dense_embedding Rat.denseRange_cast\n#align dense_embedding_coe_real dense_embedding_coe_real\n\n",
 "continuous_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n#print continuous_mul /-\ntheorem continuous_mul : Continuous fun p : exprℚ × exprℚ => p.1 * p.2 :=\n  Rat.embedding_coe_real.continuous_iff.2 <| by\n    simp [(· ∘ ·)] <;> exact real.continuous_mul.comp (rat.continuous_coe_real.prod_map Rat.continuous_coe_real)\n#align continuous_mul continuous_mul\n-/\n\n",
 "continuous_coe_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem continuous_coe_real : Continuous (coe : exprℚ → exprℝ) :=\n  uniformContinuous_coe_real.continuous\n#align continuous_coe_real continuous_coe_real\n\n",
 "closedEmbedding_coe_rat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n#print Int.closedEmbedding_coe_rat /-\ntheorem Int.closedEmbedding_coe_rat : ClosedEmbedding (coe : ℤ → exprℚ) :=\n  closedEmbedding_of_pairwise_le_dist zero_lt_one <| by simpa using Int.pairwise_one_le_dist\n#align int.closed_embedding_coe_rat Int.closedEmbedding_coe_rat\n-/\n\n"}