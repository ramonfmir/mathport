{"mk":
 "/-- Proves that `f` satisfies `is_locally_homeomorph f`. The condition `h` is weaker than the\ndefinition of `is_locally_homeomorph f`, since it only requires `e : local_homeomorph X Y` to\nagree with `f` on its source `e.source`, as opposed to on the whole space `X`. -/\ntheorem mk (h : ∀ x : X, ∃ e : local_homeomorph X Y, x ∈ e.source ∧ ∀ y ∈ e.source, f y = e y) :\n    is_locally_homeomorph f :=\n  is_locally_homeomorph_iff_is_locally_homeomorph_on_univ.mpr (is_locally_homeomorph_on.mk f Set.univ fun x hx => h x)\n#align mk mk\n\n",
 "map_nhds_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem map_nhds_eq (hf : is_locally_homeomorph f) (x : X) : ((nhds) x).map f = (nhds) (f x) :=\n  hf.is_locally_homeomorph_on.map_nhds_eq (Set.mem_univ x)\n#align map_nhds_eq map_nhds_eq\n\n",
 "is_open_map":
 "protected theorem is_open_map (hf : is_locally_homeomorph f) : is_open_map f :=\n  is_open_map.of_nhds_le fun x => ge_of_eq (hf.map_nhds_eq x)\n#align is_open_map is_open_map\n\n",
 "is_locally_homeomorph_on":
 "protected theorem is_locally_homeomorph.is_locally_homeomorph_on (hf : is_locally_homeomorph f) :\n    is_locally_homeomorph_on f Set.univ :=\n  is_locally_homeomorph_iff_is_locally_homeomorph_on_univ.mp hf\n#align is_locally_homeomorph.is_locally_homeomorph_on is_locally_homeomorph.is_locally_homeomorph_on\n\n",
 "is_locally_homeomorph_iff_is_locally_homeomorph_on_univ":
 "theorem is_locally_homeomorph_iff_is_locally_homeomorph_on_univ :\n    is_locally_homeomorph f ↔ is_locally_homeomorph_on f Set.univ := by\n  simp only [is_locally_homeomorph, is_locally_homeomorph_on, Set.mem_univ, forall_true_left]\n#align is_locally_homeomorph_iff_is_locally_homeomorph_on_univ is_locally_homeomorph_iff_is_locally_homeomorph_on_univ\n\n",
 "continuous_on":
 "protected theorem continuous_on (hf : is_locally_homeomorph_on f s) : continuous_on f s :=\n  continuous_at.continuous_on fun x => hf.continuous_at\n#align continuous_on continuous_on\n\n",
 "continuous_at":
 "protected theorem continuous_at (hf : is_locally_homeomorph_on f s) {x : X} (hx : x ∈ s) : continuous_at f x :=\n  (hf.map_nhds_eq hx).le\n#align continuous_at continuous_at\n\n",
 "continuous":
 "protected theorem continuous (hf : is_locally_homeomorph f) : continuous f :=\n  continuous_iff_continuous_on_univ.mpr hf.is_locally_homeomorph_on.continuous_on\n#align continuous continuous\n\n",
 "comp":
 "protected theorem comp (hg : is_locally_homeomorph g) (hf : is_locally_homeomorph f) : is_locally_homeomorph (g ∘ f) :=\n  is_locally_homeomorph_iff_is_locally_homeomorph_on_univ.mpr\n    (hg.is_locally_homeomorph_on.comp hf.is_locally_homeomorph_on (Set.univ.maps_to_univ f))\n#align comp comp\n\n"}