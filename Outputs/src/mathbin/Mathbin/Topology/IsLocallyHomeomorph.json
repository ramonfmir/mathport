{"mk":
 "/-- Proves that `f` satisfies `is_locally_homeomorph f`. The condition `h` is weaker than the\ndefinition of `is_locally_homeomorph f`, since it only requires `e : local_homeomorph X Y` to\nagree with `f` on its source `e.source`, as opposed to on the whole space `X`. -/\ntheorem mk (h : ∀ x : X, ∃ e : LocalHomeomorph X Y, x ∈ e.source ∧ ∀ y ∈ e.source, f y = e y) : IsLocallyHomeomorph f :=\n  isLocallyHomeomorph_iff_isLocallyHomeomorphOn_univ.mpr (IsLocallyHomeomorphOn.mk f Set.univ fun x hx => h x)\n#align mk mk\n\n",
 "map_nhds_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem map_nhds_eq (hf : IsLocallyHomeomorph f) (x : X) : ((nhds) x).map f = (nhds) (f x) :=\n  hf.is_locally_homeomorph_on.map_nhds_eq (Set.mem_univ x)\n#align map_nhds_eq map_nhds_eq\n\n",
 "isLocallyHomeomorph_iff_isLocallyHomeomorphOn_univ":
 "#print isLocallyHomeomorph_iff_isLocallyHomeomorphOn_univ /-\ntheorem isLocallyHomeomorph_iff_isLocallyHomeomorphOn_univ : IsLocallyHomeomorph f ↔ IsLocallyHomeomorphOn f Set.univ :=\n  by simp only [IsLocallyHomeomorph, IsLocallyHomeomorphOn, Set.mem_univ, forall_true_left]\n#align is_locally_homeomorph_iff_is_locally_homeomorph_on_univ isLocallyHomeomorph_iff_isLocallyHomeomorphOn_univ\n-/\n\n",
 "isLocallyHomeomorphOn":
 "#print IsLocallyHomeomorph.isLocallyHomeomorphOn /-\nprotected theorem IsLocallyHomeomorph.isLocallyHomeomorphOn (hf : IsLocallyHomeomorph f) :\n    IsLocallyHomeomorphOn f Set.univ :=\n  isLocallyHomeomorph_iff_isLocallyHomeomorphOn_univ.mp hf\n#align is_locally_homeomorph.is_locally_homeomorph_on IsLocallyHomeomorph.isLocallyHomeomorphOn\n-/\n\n",
 "comp":
 "protected theorem comp (hg : IsLocallyHomeomorph g) (hf : IsLocallyHomeomorph f) : IsLocallyHomeomorph (g ∘ f) :=\n  isLocallyHomeomorph_iff_isLocallyHomeomorphOn_univ.mpr\n    (hg.is_locally_homeomorph_on.comp hf.is_locally_homeomorph_on (Set.univ.maps_to_univ f))\n#align comp comp\n\n",
 "IsOpenMap":
 "#print IsOpenMap /-\nprotected theorem IsOpenMap (hf : IsLocallyHomeomorph f) : IsOpenMap f :=\n  IsOpenMap.of_nhds_le fun x => ge_of_eq (hf.map_nhds_eq x)\n#align is_open_map IsOpenMap\n-/\n\n",
 "ContinuousOn":
 "#print ContinuousOn /-\nprotected theorem ContinuousOn (hf : IsLocallyHomeomorphOn f s) : ContinuousOn f s :=\n  ContinuousAt.continuousOn fun x => hf.continuous_at\n#align continuous_on ContinuousOn\n-/\n\n",
 "ContinuousAt":
 "#print ContinuousAt /-\nprotected theorem ContinuousAt (hf : IsLocallyHomeomorphOn f s) {x : X} (hx : x ∈ s) : ContinuousAt f x :=\n  (hf.map_nhds_eq hx).le\n#align continuous_at ContinuousAt\n-/\n\n",
 "Continuous":
 "#print Continuous /-\nprotected theorem Continuous (hf : IsLocallyHomeomorph f) : Continuous f :=\n  continuous_iff_continuousOn_univ.mpr hf.is_locally_homeomorph_on.continuous_on\n#align continuous Continuous\n-/\n\n"}