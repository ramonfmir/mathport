{"pushforward_sheaf_of_sheaf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr _* » -/\n/-- The pushforward of a sheaf (by a continuous map) is a sheaf.\n-/\ntheorem pushforward_sheaf_of_sheaf {F : X.presheaf C} (h : F.is_sheaf) : («expr _* » f F).is_sheaf := by\n  rw [is_sheaf_iff_is_sheaf_pairwise_intersections] at h⊢ <;>\n    exact sheaf_condition_pairwise_intersections.pushforward_sheaf_of_sheaf f h\n#align pushforward_sheaf_of_sheaf pushforward_sheaf_of_sheaf\n\n",
 "map_diagram":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/-\nCopyright (c) 2021 Junyan Xu. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Junyan Xu\n-/\ntheorem map_diagram : «expr ⋙ » (Pairwise.diagram U) (Opens.map f) = Pairwise.diagram ((Opens.map f).obj ∘ U) :=\n  by\n  apply functor.hext\n  abstract obj_eq intro i; cases i <;> rfl\n  intro i j g; apply subsingleton.helim\n  iterate 2 rw [map_diagram.obj_eq]\n#align map_diagram map_diagram\n\n",
 "map_cocone":
 "theorem map_cocone : HEq ((Opens.map f).map_cocone (Pairwise.cocone U)) (Pairwise.cocone ((Opens.map f).obj ∘ U)) :=\n  by\n  unfold functor.map_cocone cocones.functoriality; dsimp; congr\n  iterate 2 rw [map_diagram]; rw [opens.map_supr]\n  apply subsingleton.helim; rw [map_diagram, opens.map_supr]\n  apply proof_irrel_heq\n#align map_cocone map_cocone\n\n"}