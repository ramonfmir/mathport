{"surjective_proj":
 "/-- The projection from a trivial fiber bundle to its base is surjective. -/\nprotected theorem surjective_proj [Nonempty F] (h : IsHomeomorphicTrivialFiberBundle F proj) :\n    function.surjective proj := by\n  obtain ⟨e, rfl⟩ := h.proj_eq\n  exact prod.fst_surjective.comp e.surjective\n#align surjective_proj surjective_proj\n\n",
 "quotient_map_proj":
 "/-- The projection from a trivial fiber bundle to its base is open. -/\nprotected theorem quotient_map_proj [Nonempty F] (h : IsHomeomorphicTrivialFiberBundle F proj) : QuotientMap proj :=\n  h.is_open_map_proj.to_quotient_map h.continuous_proj h.surjective_proj\n#align quotient_map_proj quotient_map_proj\n\n",
 "proj_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₜ » -/\n/-\nCopyright (c) 2019 Sébastien Gouëzel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Sébastien Gouëzel\n-/\nprotected theorem proj_eq (h : IsHomeomorphicTrivialFiberBundle F proj) :\n    ∃ e : «expr ≃ₜ » Z (B × F), proj = Prod.fst ∘ e :=\n  ⟨h.some, (funext h.some_spec).symm⟩\n#align proj_eq proj_eq\n\n",
 "is_open_map_proj":
 "/-- The projection from a trivial fiber bundle to its base is open. -/\nprotected theorem is_open_map_proj (h : IsHomeomorphicTrivialFiberBundle F proj) : IsOpenMap proj :=\n  by\n  obtain ⟨e, rfl⟩ := h.proj_eq\n  exact is_open_map_fst.comp e.is_open_map\n#align is_open_map_proj is_open_map_proj\n\n",
 "isHomeomorphicTrivialFiberBundle_snd":
 "#print isHomeomorphicTrivialFiberBundle_snd /-\n/-- The second projection in a product is a trivial fiber bundle. -/\ntheorem isHomeomorphicTrivialFiberBundle_snd : IsHomeomorphicTrivialFiberBundle F (Prod.snd : F × B → B) :=\n  ⟨Homeomorph.prodComm _ _, fun x => rfl⟩\n#align is_homeomorphic_trivial_fiber_bundle_snd isHomeomorphicTrivialFiberBundle_snd\n-/\n\n",
 "isHomeomorphicTrivialFiberBundle_fst":
 "#print isHomeomorphicTrivialFiberBundle_fst /-\n/-- The first projection in a product is a trivial fiber bundle. -/\ntheorem isHomeomorphicTrivialFiberBundle_fst : IsHomeomorphicTrivialFiberBundle F (Prod.fst : B × F → B) :=\n  ⟨Homeomorph.refl _, fun x => rfl⟩\n#align is_homeomorphic_trivial_fiber_bundle_fst isHomeomorphicTrivialFiberBundle_fst\n-/\n\n",
 "continuous_proj":
 "/-- The projection from a trivial fiber bundle to its base is continuous. -/\nprotected theorem continuous_proj (h : IsHomeomorphicTrivialFiberBundle F proj) : Continuous proj :=\n  by\n  obtain ⟨e, rfl⟩ := h.proj_eq\n  exact continuous_fst.comp e.continuous\n#align continuous_proj continuous_proj\n\n"}