{"upperSemicontinuous_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print upperSemicontinuous_sum /-\ntheorem upperSemicontinuous_sum {f : ι → α → γ} {a : Finset ι} (ha : ∀ i ∈ a, UpperSemicontinuous (f i)) :\n    UpperSemicontinuous fun z =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" a (f i z) :=\n  fun x => upperSemicontinuousAt_sum fun i hi => ha i hi x\n#align upper_semicontinuous_sum upperSemicontinuous_sum\n-/\n\n",
 "upperSemicontinuous_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuous_infᵢ /-\ntheorem upperSemicontinuous_infᵢ {f : ι → α → δ} (h : ∀ i, UpperSemicontinuous (f i)) :\n    UpperSemicontinuous fun x' =>\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i x') :=\n  fun x => upperSemicontinuousAt_infᵢ fun i => h i x\n#align upper_semicontinuous_infi upperSemicontinuous_infᵢ\n-/\n\n",
 "upperSemicontinuous_indicator":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print IsClosed.upperSemicontinuous_indicator /-\ntheorem IsClosed.upperSemicontinuous_indicator (hs : IsClosed s) (hy : 0 ≤ y) :\n    UpperSemicontinuous (indicator s fun x => y) :=\n  @IsClosed.lowerSemicontinuous_indicator α _ («expr ᵒᵈ» β) _ s y _ hs hy\n#align is_closed.upper_semicontinuous_indicator IsClosed.upperSemicontinuous_indicator\n-/\n\n",
 "upperSemicontinuous_iff_isOpen_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print upperSemicontinuous_iff_isOpen_preimage /-\ntheorem upperSemicontinuous_iff_isOpen_preimage : UpperSemicontinuous f ↔ ∀ y, IsOpen («expr ⁻¹' » f (Iio y)) :=\n  ⟨fun H y => isOpen_iff_mem_nhds.2 fun x hx => H x y hx, fun H x y y_lt => IsOpen.mem_nhds (H y) y_lt⟩\n#align upper_semicontinuous_iff_is_open_preimage upperSemicontinuous_iff_isOpen_preimage\n-/\n\n",
 "upperSemicontinuous_iff_isClosed_preimage":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr ∀ y, (_ : exprProp())]] -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print upperSemicontinuous_iff_isClosed_preimage /-\ntheorem upperSemicontinuous_iff_isClosed_preimage {f : α → γ} :\n    UpperSemicontinuous f ↔ ∀ y, IsClosed («expr ⁻¹' » f (Ici y)) :=\n  by\n  rw [upperSemicontinuous_iff_isOpen_preimage]\n  trace\n    \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr ∀ y, (_ : exprProp())]]\"\n  rw [← isOpen_compl_iff, ← preimage_compl, compl_Ici]\n#align upper_semicontinuous_iff_is_closed_preimage upperSemicontinuous_iff_isClosed_preimage\n-/\n\n",
 "upperSemicontinuous_const":
 "#print upperSemicontinuous_const /-\ntheorem upperSemicontinuous_const : UpperSemicontinuous fun x : α => z := fun x => upperSemicontinuousAt_const\n#align upper_semicontinuous_const upperSemicontinuous_const\n-/\n\n",
 "upperSemicontinuous_cinfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuous_cinfᵢ /-\ntheorem upperSemicontinuous_cinfᵢ {f : ι → α → δ'} (bdd : ∀ x, BddBelow (range fun i => f i x))\n    (h : ∀ i, UpperSemicontinuous (f i)) :\n    UpperSemicontinuous fun x' =>\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i x') :=\n  fun x => upperSemicontinuousAt_cinfᵢ (eventually_of_forall bdd) fun i => h i x\n#align upper_semicontinuous_cinfi upperSemicontinuous_cinfᵢ\n-/\n\n",
 "upperSemicontinuous_binfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuous_binfᵢ /-\ntheorem upperSemicontinuous_binfᵢ {p : ι → Prop} {f : ∀ (i) (h : p i), α → δ}\n    (h : ∀ i hi, UpperSemicontinuous (f i hi)) :\n    UpperSemicontinuous fun x' =>\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i hi x') :=\n  upperSemicontinuous_infᵢ fun i => upperSemicontinuous_infᵢ fun hi => h i hi\n#align upper_semicontinuous_binfi upperSemicontinuous_binfᵢ\n-/\n\n",
 "upperSemicontinuousWithinAt_univ_iff":
 "#print upperSemicontinuousWithinAt_univ_iff /-\ntheorem upperSemicontinuousWithinAt_univ_iff : UpperSemicontinuousWithinAt f univ x ↔ UpperSemicontinuousAt f x := by\n  simp [UpperSemicontinuousWithinAt, UpperSemicontinuousAt, nhdsWithin_univ]\n#align upper_semicontinuous_within_at_univ_iff upperSemicontinuousWithinAt_univ_iff\n-/\n\n",
 "upperSemicontinuousWithinAt_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print upperSemicontinuousWithinAt_sum /-\ntheorem upperSemicontinuousWithinAt_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, UpperSemicontinuousWithinAt (f i) s x) :\n    UpperSemicontinuousWithinAt\n      (fun z =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" a (f i z))\n      s x :=\n  @lowerSemicontinuousWithinAt_sum α _ x s ι («expr ᵒᵈ» γ) _ _ _ _ f a ha\n#align upper_semicontinuous_within_at_sum upperSemicontinuousWithinAt_sum\n-/\n\n",
 "upperSemicontinuousWithinAt_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuousWithinAt_infᵢ /-\ntheorem upperSemicontinuousWithinAt_infᵢ {f : ι → α → δ} (h : ∀ i, UpperSemicontinuousWithinAt (f i) s x) :\n    UpperSemicontinuousWithinAt\n      (fun x' =>\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i x'))\n      s x :=\n  @lowerSemicontinuousWithinAt_supᵢ α _ x s ι («expr ᵒᵈ» δ) _ f h\n#align upper_semicontinuous_within_at_infi upperSemicontinuousWithinAt_infᵢ\n-/\n\n",
 "upperSemicontinuousWithinAt_indicator":
 "#print IsClosed.upperSemicontinuousWithinAt_indicator /-\ntheorem IsClosed.upperSemicontinuousWithinAt_indicator (hs : IsClosed s) (hy : 0 ≤ y) :\n    UpperSemicontinuousWithinAt (indicator s fun x => y) t x :=\n  (hs.upper_semicontinuous_indicator hy).upper_semicontinuous_within_at t x\n#align is_closed.upper_semicontinuous_within_at_indicator IsClosed.upperSemicontinuousWithinAt_indicator\n-/\n\n",
 "upperSemicontinuousWithinAt_const":
 "#print upperSemicontinuousWithinAt_const /-\ntheorem upperSemicontinuousWithinAt_const : UpperSemicontinuousWithinAt (fun x => z) s x := fun y hy =>\n  Filter.eventually_of_forall fun x => hy\n#align upper_semicontinuous_within_at_const upperSemicontinuousWithinAt_const\n-/\n\n",
 "upperSemicontinuousWithinAt_cinfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuousWithinAt_cinfᵢ /-\ntheorem upperSemicontinuousWithinAt_cinfᵢ {f : ι → α → δ'}\n    (bdd :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        (nhds_within s x) (BddBelow (range fun i => f i y)))\n    (h : ∀ i, UpperSemicontinuousWithinAt (f i) s x) :\n    UpperSemicontinuousWithinAt\n      (fun x' =>\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i x'))\n      s x :=\n  @lowerSemicontinuousWithinAt_csupᵢ α _ x s ι («expr ᵒᵈ» δ') _ f bdd h\n#align upper_semicontinuous_within_at_cinfi upperSemicontinuousWithinAt_cinfᵢ\n-/\n\n",
 "upperSemicontinuousWithinAt_binfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuousWithinAt_binfᵢ /-\ntheorem upperSemicontinuousWithinAt_binfᵢ {p : ι → Prop} {f : ∀ (i) (h : p i), α → δ}\n    (h : ∀ i hi, UpperSemicontinuousWithinAt (f i hi) s x) :\n    UpperSemicontinuousWithinAt\n      (fun x' =>\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i hi x'))\n      s x :=\n  upperSemicontinuousWithinAt_infᵢ fun i => upperSemicontinuousWithinAt_infᵢ fun hi => h i hi\n#align upper_semicontinuous_within_at_binfi upperSemicontinuousWithinAt_binfᵢ\n-/\n\n",
 "upperSemicontinuousWithinAt":
 "#print ContinuousWithinAt.upperSemicontinuousWithinAt /-\ntheorem ContinuousWithinAt.upperSemicontinuousWithinAt {f : α → γ} (h : ContinuousWithinAt f s x) :\n    UpperSemicontinuousWithinAt f s x := fun y hy => h (Iio_mem_nhds hy)\n#align continuous_within_at.upper_semicontinuous_within_at ContinuousWithinAt.upperSemicontinuousWithinAt\n-/\n\n",
 "upperSemicontinuousOn_univ_iff":
 "#print upperSemicontinuousOn_univ_iff /-\ntheorem upperSemicontinuousOn_univ_iff : UpperSemicontinuousOn f univ ↔ UpperSemicontinuous f := by\n  simp [UpperSemicontinuousOn, UpperSemicontinuous, upperSemicontinuousWithinAt_univ_iff]\n#align upper_semicontinuous_on_univ_iff upperSemicontinuousOn_univ_iff\n-/\n\n",
 "upperSemicontinuousOn_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print upperSemicontinuousOn_sum /-\ntheorem upperSemicontinuousOn_sum {f : ι → α → γ} {a : Finset ι} (ha : ∀ i ∈ a, UpperSemicontinuousOn (f i) s) :\n    UpperSemicontinuousOn\n      (fun z =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" a (f i z))\n      s :=\n  fun x hx => upperSemicontinuousWithinAt_sum fun i hi => ha i hi x hx\n#align upper_semicontinuous_on_sum upperSemicontinuousOn_sum\n-/\n\n",
 "upperSemicontinuousOn_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuousOn_infᵢ /-\ntheorem upperSemicontinuousOn_infᵢ {f : ι → α → δ} (h : ∀ i, UpperSemicontinuousOn (f i) s) :\n    UpperSemicontinuousOn\n      (fun x' =>\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i x'))\n      s :=\n  fun x hx => upperSemicontinuousWithinAt_infᵢ fun i => h i x hx\n#align upper_semicontinuous_on_infi upperSemicontinuousOn_infᵢ\n-/\n\n",
 "upperSemicontinuousOn_indicator":
 "#print IsClosed.upperSemicontinuousOn_indicator /-\ntheorem IsClosed.upperSemicontinuousOn_indicator (hs : IsClosed s) (hy : 0 ≤ y) :\n    UpperSemicontinuousOn (indicator s fun x => y) t :=\n  (hs.upper_semicontinuous_indicator hy).upper_semicontinuous_on t\n#align is_closed.upper_semicontinuous_on_indicator IsClosed.upperSemicontinuousOn_indicator\n-/\n\n",
 "upperSemicontinuousOn_const":
 "#print upperSemicontinuousOn_const /-\ntheorem upperSemicontinuousOn_const : UpperSemicontinuousOn (fun x => z) s := fun x hx =>\n  upperSemicontinuousWithinAt_const\n#align upper_semicontinuous_on_const upperSemicontinuousOn_const\n-/\n\n",
 "upperSemicontinuousOn_cinfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuousOn_cinfᵢ /-\ntheorem upperSemicontinuousOn_cinfᵢ {f : ι → α → δ'} (bdd : ∀ x ∈ s, BddBelow (range fun i => f i x))\n    (h : ∀ i, UpperSemicontinuousOn (f i) s) :\n    UpperSemicontinuousOn\n      (fun x' =>\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i x'))\n      s :=\n  fun x hx => upperSemicontinuousWithinAt_cinfᵢ (eventually_nhdsWithin_of_forall bdd) fun i => h i x hx\n#align upper_semicontinuous_on_cinfi upperSemicontinuousOn_cinfᵢ\n-/\n\n",
 "upperSemicontinuousOn_binfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuousOn_binfᵢ /-\ntheorem upperSemicontinuousOn_binfᵢ {p : ι → Prop} {f : ∀ (i) (h : p i), α → δ}\n    (h : ∀ i hi, UpperSemicontinuousOn (f i hi) s) :\n    UpperSemicontinuousOn\n      (fun x' =>\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i hi x'))\n      s :=\n  upperSemicontinuousOn_infᵢ fun i => upperSemicontinuousOn_infᵢ fun hi => h i hi\n#align upper_semicontinuous_on_binfi upperSemicontinuousOn_binfᵢ\n-/\n\n",
 "upperSemicontinuousOn":
 "#print ContinuousOn.upperSemicontinuousOn /-\ntheorem ContinuousOn.upperSemicontinuousOn {f : α → γ} (h : ContinuousOn f s) : UpperSemicontinuousOn f s := fun x hx =>\n  (h x hx).upper_semicontinuous_within_at\n#align continuous_on.upper_semicontinuous_on ContinuousOn.upperSemicontinuousOn\n-/\n\n",
 "upperSemicontinuousAt_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print upperSemicontinuousAt_sum /-\ntheorem upperSemicontinuousAt_sum {f : ι → α → γ} {a : Finset ι} (ha : ∀ i ∈ a, UpperSemicontinuousAt (f i) x) :\n    UpperSemicontinuousAt\n      (fun z =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" a (f i z))\n      x :=\n  by\n  simp_rw [← upperSemicontinuousWithinAt_univ_iff] at *\n  exact upperSemicontinuousWithinAt_sum ha\n#align upper_semicontinuous_at_sum upperSemicontinuousAt_sum\n-/\n\n",
 "upperSemicontinuousAt_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuousAt_infᵢ /-\ntheorem upperSemicontinuousAt_infᵢ {f : ι → α → δ} (h : ∀ i, UpperSemicontinuousAt (f i) x) :\n    UpperSemicontinuousAt\n      (fun x' =>\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i x'))\n      x :=\n  @lowerSemicontinuousAt_supᵢ α _ x ι («expr ᵒᵈ» δ) _ f h\n#align upper_semicontinuous_at_infi upperSemicontinuousAt_infᵢ\n-/\n\n",
 "upperSemicontinuousAt_indicator":
 "#print IsClosed.upperSemicontinuousAt_indicator /-\ntheorem IsClosed.upperSemicontinuousAt_indicator (hs : IsClosed s) (hy : 0 ≤ y) :\n    UpperSemicontinuousAt (indicator s fun x => y) x :=\n  (hs.upper_semicontinuous_indicator hy).upper_semicontinuous_at x\n#align is_closed.upper_semicontinuous_at_indicator IsClosed.upperSemicontinuousAt_indicator\n-/\n\n",
 "upperSemicontinuousAt_const":
 "#print upperSemicontinuousAt_const /-\ntheorem upperSemicontinuousAt_const : UpperSemicontinuousAt (fun x => z) x := fun y hy =>\n  Filter.eventually_of_forall fun x => hy\n#align upper_semicontinuous_at_const upperSemicontinuousAt_const\n-/\n\n",
 "upperSemicontinuousAt_cinfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuousAt_cinfᵢ /-\ntheorem upperSemicontinuousAt_cinfᵢ {f : ι → α → δ'}\n    (bdd :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) x)\n        (BddBelow (range fun i => f i y)))\n    (h : ∀ i, UpperSemicontinuousAt (f i) x) :\n    UpperSemicontinuousAt\n      (fun x' =>\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i x'))\n      x :=\n  @lowerSemicontinuousAt_csupᵢ α _ x ι («expr ᵒᵈ» δ') _ f bdd h\n#align upper_semicontinuous_at_cinfi upperSemicontinuousAt_cinfᵢ\n-/\n\n",
 "upperSemicontinuousAt_binfᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print upperSemicontinuousAt_binfᵢ /-\ntheorem upperSemicontinuousAt_binfᵢ {p : ι → Prop} {f : ∀ (i) (h : p i), α → δ}\n    (h : ∀ i hi, UpperSemicontinuousAt (f i hi) x) :\n    UpperSemicontinuousAt\n      (fun x' =>\n        «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i hi x'))\n      x :=\n  upperSemicontinuousAt_infᵢ fun i => upperSemicontinuousAt_infᵢ fun hi => h i hi\n#align upper_semicontinuous_at_binfi upperSemicontinuousAt_binfᵢ\n-/\n\n",
 "upperSemicontinuousAt":
 "#print ContinuousAt.upperSemicontinuousAt /-\ntheorem ContinuousAt.upperSemicontinuousAt {f : α → γ} (h : ContinuousAt f x) : UpperSemicontinuousAt f x := fun y hy =>\n  h (Iio_mem_nhds hy)\n#align continuous_at.upper_semicontinuous_at ContinuousAt.upperSemicontinuousAt\n-/\n\n",
 "upperSemicontinuous":
 "#print Continuous.upperSemicontinuous /-\ntheorem Continuous.upperSemicontinuous {f : α → γ} (h : Continuous f) : UpperSemicontinuous f := fun x =>\n  h.continuous_at.upper_semicontinuous_at\n#align continuous.upper_semicontinuous Continuous.upperSemicontinuous\n-/\n\n",
 "mono":
 "#print UpperSemicontinuousOn.mono /-\ntheorem UpperSemicontinuousOn.mono (h : UpperSemicontinuousOn f s) (hst : t ⊆ s) : UpperSemicontinuousOn f t :=\n  fun x hx => (h x (hst hx)).mono hst\n#align upper_semicontinuous_on.mono UpperSemicontinuousOn.mono\n-/\n\n",
 "lowerSemicontinuous_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n#print lowerSemicontinuous_tsum /-\ntheorem lowerSemicontinuous_tsum {f : ι → α → ennreal} (h : ∀ i, LowerSemicontinuous (f i)) :\n    LowerSemicontinuous fun x' =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i x') :=\n  fun x => lowerSemicontinuousAt_tsum fun i => h i x\n#align lower_semicontinuous_tsum lowerSemicontinuous_tsum\n-/\n\n",
 "lowerSemicontinuous_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuous_supᵢ /-\ntheorem lowerSemicontinuous_supᵢ {f : ι → α → δ} (h : ∀ i, LowerSemicontinuous (f i)) :\n    LowerSemicontinuous fun x' =>\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i x') :=\n  lowerSemicontinuous_csupᵢ (by simp) h\n#align lower_semicontinuous_supr lowerSemicontinuous_supᵢ\n-/\n\n",
 "lowerSemicontinuous_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print lowerSemicontinuous_sum /-\ntheorem lowerSemicontinuous_sum {f : ι → α → γ} {a : Finset ι} (ha : ∀ i ∈ a, LowerSemicontinuous (f i)) :\n    LowerSemicontinuous fun z =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" a (f i z) :=\n  fun x => lowerSemicontinuousAt_sum fun i hi => ha i hi x\n#align lower_semicontinuous_sum lowerSemicontinuous_sum\n-/\n\n",
 "lowerSemicontinuous_indicator":
 "#print IsClosed.lowerSemicontinuous_indicator /-\ntheorem IsClosed.lowerSemicontinuous_indicator (hs : IsClosed s) (hy : y ≤ 0) :\n    LowerSemicontinuous (indicator s fun x => y) := by\n  intro x z hz\n  by_cases h : x ∈ s <;> simp [h] at hz\n  · apply Filter.eventually_of_forall fun x' => _\n    by_cases h' : x' ∈ s <;> simp [h', hz, hz.trans_le hy]\n  · filter_upwards [hs.is_open_compl.mem_nhds h]\n    simp (config := { contextual := true }) [hz]\n#align is_closed.lower_semicontinuous_indicator IsClosed.lowerSemicontinuous_indicator\n-/\n\n",
 "lowerSemicontinuous_iff_isOpen_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print lowerSemicontinuous_iff_isOpen_preimage /-\ntheorem lowerSemicontinuous_iff_isOpen_preimage : LowerSemicontinuous f ↔ ∀ y, IsOpen («expr ⁻¹' » f (Ioi y)) :=\n  ⟨fun H y => isOpen_iff_mem_nhds.2 fun x hx => H x y hx, fun H x y y_lt => IsOpen.mem_nhds (H y) y_lt⟩\n#align lower_semicontinuous_iff_is_open_preimage lowerSemicontinuous_iff_isOpen_preimage\n-/\n\n",
 "lowerSemicontinuous_iff_isClosed_preimage":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr ∀ y, (_ : exprProp())]] -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print lowerSemicontinuous_iff_isClosed_preimage /-\ntheorem lowerSemicontinuous_iff_isClosed_preimage {f : α → γ} :\n    LowerSemicontinuous f ↔ ∀ y, IsClosed («expr ⁻¹' » f (Iic y)) :=\n  by\n  rw [lowerSemicontinuous_iff_isOpen_preimage]\n  trace\n    \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr ∀ y, (_ : exprProp())]]\"\n  rw [← isOpen_compl_iff, ← preimage_compl, compl_Iic]\n#align lower_semicontinuous_iff_is_closed_preimage lowerSemicontinuous_iff_isClosed_preimage\n-/\n\n",
 "lowerSemicontinuous_csupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuous_csupᵢ /-\ntheorem lowerSemicontinuous_csupᵢ {f : ι → α → δ'} (bdd : ∀ x, BddAbove (range fun i => f i x))\n    (h : ∀ i, LowerSemicontinuous (f i)) :\n    LowerSemicontinuous fun x' =>\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i x') :=\n  fun x => lowerSemicontinuousAt_csupᵢ (eventually_of_forall bdd) fun i => h i x\n#align lower_semicontinuous_csupr lowerSemicontinuous_csupᵢ\n-/\n\n",
 "lowerSemicontinuous_const":
 "#print lowerSemicontinuous_const /-\ntheorem lowerSemicontinuous_const : LowerSemicontinuous fun x : α => z := fun x => lowerSemicontinuousAt_const\n#align lower_semicontinuous_const lowerSemicontinuous_const\n-/\n\n",
 "lowerSemicontinuous_bsupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuous_bsupᵢ /-\ntheorem lowerSemicontinuous_bsupᵢ {p : ι → Prop} {f : ∀ (i) (h : p i), α → δ}\n    (h : ∀ i hi, LowerSemicontinuous (f i hi)) :\n    LowerSemicontinuous fun x' =>\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i hi x') :=\n  lowerSemicontinuous_supᵢ fun i => lowerSemicontinuous_supᵢ fun hi => h i hi\n#align lower_semicontinuous_bsupr lowerSemicontinuous_bsupᵢ\n-/\n\n",
 "lowerSemicontinuousWithinAt_univ_iff":
 "#print lowerSemicontinuousWithinAt_univ_iff /-\ntheorem lowerSemicontinuousWithinAt_univ_iff : LowerSemicontinuousWithinAt f univ x ↔ LowerSemicontinuousAt f x := by\n  simp [LowerSemicontinuousWithinAt, LowerSemicontinuousAt, nhdsWithin_univ]\n#align lower_semicontinuous_within_at_univ_iff lowerSemicontinuousWithinAt_univ_iff\n-/\n\n",
 "lowerSemicontinuousWithinAt_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n#print lowerSemicontinuousWithinAt_tsum /-\ntheorem lowerSemicontinuousWithinAt_tsum {f : ι → α → ennreal} (h : ∀ i, LowerSemicontinuousWithinAt (f i) s x) :\n    LowerSemicontinuousWithinAt\n      (fun x' =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i x'))\n      s x :=\n  by\n  simp_rw [ENNReal.tsum_eq_supᵢ_sum]\n  apply lowerSemicontinuousWithinAt_supᵢ fun b => _\n  exact lowerSemicontinuousWithinAt_sum fun i hi => h i\n#align lower_semicontinuous_within_at_tsum lowerSemicontinuousWithinAt_tsum\n-/\n\n",
 "lowerSemicontinuousWithinAt_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuousWithinAt_supᵢ /-\ntheorem lowerSemicontinuousWithinAt_supᵢ {f : ι → α → δ} (h : ∀ i, LowerSemicontinuousWithinAt (f i) s x) :\n    LowerSemicontinuousWithinAt\n      (fun x' =>\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i x'))\n      s x :=\n  lowerSemicontinuousWithinAt_csupᵢ (by simp) h\n#align lower_semicontinuous_within_at_supr lowerSemicontinuousWithinAt_supᵢ\n-/\n\n",
 "lowerSemicontinuousWithinAt_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print lowerSemicontinuousWithinAt_sum /-\ntheorem lowerSemicontinuousWithinAt_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, LowerSemicontinuousWithinAt (f i) s x) :\n    LowerSemicontinuousWithinAt\n      (fun z =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" a (f i z))\n      s x :=\n  by\n  classical\n    induction' a using Finset.induction_on with i a ia IH generalizing ha\n    · exact lowerSemicontinuousWithinAt_const\n    · simp only [ia, Finset.sum_insert, not_false_iff]\n      exact\n        LowerSemicontinuousWithinAt.add (ha _ (Finset.mem_insert_self i a))\n          (IH fun j ja => ha j (Finset.mem_insert_of_mem ja))\n#align lower_semicontinuous_within_at_sum lowerSemicontinuousWithinAt_sum\n-/\n\n",
 "lowerSemicontinuousWithinAt_indicator":
 "#print IsClosed.lowerSemicontinuousWithinAt_indicator /-\ntheorem IsClosed.lowerSemicontinuousWithinAt_indicator (hs : IsClosed s) (hy : y ≤ 0) :\n    LowerSemicontinuousWithinAt (indicator s fun x => y) t x :=\n  (hs.lower_semicontinuous_indicator hy).lower_semicontinuous_within_at t x\n#align is_closed.lower_semicontinuous_within_at_indicator IsClosed.lowerSemicontinuousWithinAt_indicator\n-/\n\n",
 "lowerSemicontinuousWithinAt_csupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuousWithinAt_csupᵢ /-\ntheorem lowerSemicontinuousWithinAt_csupᵢ {f : ι → α → δ'}\n    (bdd :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\"\n        (nhds_within s x) (BddAbove (range fun i => f i y)))\n    (h : ∀ i, LowerSemicontinuousWithinAt (f i) s x) :\n    LowerSemicontinuousWithinAt\n      (fun x' =>\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i x'))\n      s x :=\n  by\n  cases isEmpty_or_nonempty ι\n  · simpa only [supᵢ_of_empty'] using lowerSemicontinuousWithinAt_const\n  · intro y hy\n    rcases exists_lt_of_lt_csupᵢ hy with ⟨i, hi⟩\n    filter_upwards [h i y hi, bdd]with y hy hy' using hy.trans_le (le_csupᵢ hy' i)\n#align lower_semicontinuous_within_at_csupr lowerSemicontinuousWithinAt_csupᵢ\n-/\n\n",
 "lowerSemicontinuousWithinAt_const":
 "#print lowerSemicontinuousWithinAt_const /-\ntheorem lowerSemicontinuousWithinAt_const : LowerSemicontinuousWithinAt (fun x => z) s x := fun y hy =>\n  Filter.eventually_of_forall fun x => hy\n#align lower_semicontinuous_within_at_const lowerSemicontinuousWithinAt_const\n-/\n\n",
 "lowerSemicontinuousWithinAt_bsupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuousWithinAt_bsupᵢ /-\ntheorem lowerSemicontinuousWithinAt_bsupᵢ {p : ι → Prop} {f : ∀ (i) (h : p i), α → δ}\n    (h : ∀ i hi, LowerSemicontinuousWithinAt (f i hi) s x) :\n    LowerSemicontinuousWithinAt\n      (fun x' =>\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i hi x'))\n      s x :=\n  lowerSemicontinuousWithinAt_supᵢ fun i => lowerSemicontinuousWithinAt_supᵢ fun hi => h i hi\n#align lower_semicontinuous_within_at_bsupr lowerSemicontinuousWithinAt_bsupᵢ\n-/\n\n",
 "lowerSemicontinuousWithinAt":
 "#print ContinuousWithinAt.lowerSemicontinuousWithinAt /-\ntheorem ContinuousWithinAt.lowerSemicontinuousWithinAt {f : α → γ} (h : ContinuousWithinAt f s x) :\n    LowerSemicontinuousWithinAt f s x := fun y hy => h (Ioi_mem_nhds hy)\n#align continuous_within_at.lower_semicontinuous_within_at ContinuousWithinAt.lowerSemicontinuousWithinAt\n-/\n\n",
 "lowerSemicontinuousOn_univ_iff":
 "#print lowerSemicontinuousOn_univ_iff /-\ntheorem lowerSemicontinuousOn_univ_iff : LowerSemicontinuousOn f univ ↔ LowerSemicontinuous f := by\n  simp [LowerSemicontinuousOn, LowerSemicontinuous, lowerSemicontinuousWithinAt_univ_iff]\n#align lower_semicontinuous_on_univ_iff lowerSemicontinuousOn_univ_iff\n-/\n\n",
 "lowerSemicontinuousOn_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n#print lowerSemicontinuousOn_tsum /-\ntheorem lowerSemicontinuousOn_tsum {f : ι → α → ennreal} (h : ∀ i, LowerSemicontinuousOn (f i) s) :\n    LowerSemicontinuousOn\n      (fun x' =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i x'))\n      s :=\n  fun x hx => lowerSemicontinuousWithinAt_tsum fun i => h i x hx\n#align lower_semicontinuous_on_tsum lowerSemicontinuousOn_tsum\n-/\n\n",
 "lowerSemicontinuousOn_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuousOn_supᵢ /-\ntheorem lowerSemicontinuousOn_supᵢ {f : ι → α → δ} (h : ∀ i, LowerSemicontinuousOn (f i) s) :\n    LowerSemicontinuousOn\n      (fun x' =>\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i x'))\n      s :=\n  lowerSemicontinuousOn_csupᵢ (by simp) h\n#align lower_semicontinuous_on_supr lowerSemicontinuousOn_supᵢ\n-/\n\n",
 "lowerSemicontinuousOn_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print lowerSemicontinuousOn_sum /-\ntheorem lowerSemicontinuousOn_sum {f : ι → α → γ} {a : Finset ι} (ha : ∀ i ∈ a, LowerSemicontinuousOn (f i) s) :\n    LowerSemicontinuousOn\n      (fun z =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" a (f i z))\n      s :=\n  fun x hx => lowerSemicontinuousWithinAt_sum fun i hi => ha i hi x hx\n#align lower_semicontinuous_on_sum lowerSemicontinuousOn_sum\n-/\n\n",
 "lowerSemicontinuousOn_indicator":
 "#print IsClosed.lowerSemicontinuousOn_indicator /-\ntheorem IsClosed.lowerSemicontinuousOn_indicator (hs : IsClosed s) (hy : y ≤ 0) :\n    LowerSemicontinuousOn (indicator s fun x => y) t :=\n  (hs.lower_semicontinuous_indicator hy).lower_semicontinuous_on t\n#align is_closed.lower_semicontinuous_on_indicator IsClosed.lowerSemicontinuousOn_indicator\n-/\n\n",
 "lowerSemicontinuousOn_csupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuousOn_csupᵢ /-\ntheorem lowerSemicontinuousOn_csupᵢ {f : ι → α → δ'} (bdd : ∀ x ∈ s, BddAbove (range fun i => f i x))\n    (h : ∀ i, LowerSemicontinuousOn (f i) s) :\n    LowerSemicontinuousOn\n      (fun x' =>\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i x'))\n      s :=\n  fun x hx => lowerSemicontinuousWithinAt_csupᵢ (eventually_nhdsWithin_of_forall bdd) fun i => h i x hx\n#align lower_semicontinuous_on_csupr lowerSemicontinuousOn_csupᵢ\n-/\n\n",
 "lowerSemicontinuousOn_const":
 "#print lowerSemicontinuousOn_const /-\ntheorem lowerSemicontinuousOn_const : LowerSemicontinuousOn (fun x => z) s := fun x hx =>\n  lowerSemicontinuousWithinAt_const\n#align lower_semicontinuous_on_const lowerSemicontinuousOn_const\n-/\n\n",
 "lowerSemicontinuousOn_bsupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuousOn_bsupᵢ /-\ntheorem lowerSemicontinuousOn_bsupᵢ {p : ι → Prop} {f : ∀ (i) (h : p i), α → δ}\n    (h : ∀ i hi, LowerSemicontinuousOn (f i hi) s) :\n    LowerSemicontinuousOn\n      (fun x' =>\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i hi x'))\n      s :=\n  lowerSemicontinuousOn_supᵢ fun i => lowerSemicontinuousOn_supᵢ fun hi => h i hi\n#align lower_semicontinuous_on_bsupr lowerSemicontinuousOn_bsupᵢ\n-/\n\n",
 "lowerSemicontinuousOn":
 "#print ContinuousOn.lowerSemicontinuousOn /-\ntheorem ContinuousOn.lowerSemicontinuousOn {f : α → γ} (h : ContinuousOn f s) : LowerSemicontinuousOn f s := fun x hx =>\n  (h x hx).lower_semicontinuous_within_at\n#align continuous_on.lower_semicontinuous_on ContinuousOn.lowerSemicontinuousOn\n-/\n\n",
 "lowerSemicontinuousAt_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n#print lowerSemicontinuousAt_tsum /-\ntheorem lowerSemicontinuousAt_tsum {f : ι → α → ennreal} (h : ∀ i, LowerSemicontinuousAt (f i) x) :\n    LowerSemicontinuousAt\n      (fun x' =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f i x'))\n      x :=\n  by\n  simp_rw [← lowerSemicontinuousWithinAt_univ_iff] at *\n  exact lowerSemicontinuousWithinAt_tsum h\n#align lower_semicontinuous_at_tsum lowerSemicontinuousAt_tsum\n-/\n\n",
 "lowerSemicontinuousAt_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuousAt_supᵢ /-\ntheorem lowerSemicontinuousAt_supᵢ {f : ι → α → δ} (h : ∀ i, LowerSemicontinuousAt (f i) x) :\n    LowerSemicontinuousAt\n      (fun x' =>\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i x'))\n      x :=\n  lowerSemicontinuousAt_csupᵢ (by simp) h\n#align lower_semicontinuous_at_supr lowerSemicontinuousAt_supᵢ\n-/\n\n",
 "lowerSemicontinuousAt_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print lowerSemicontinuousAt_sum /-\ntheorem lowerSemicontinuousAt_sum {f : ι → α → γ} {a : Finset ι} (ha : ∀ i ∈ a, LowerSemicontinuousAt (f i) x) :\n    LowerSemicontinuousAt\n      (fun z =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" a (f i z))\n      x :=\n  by\n  simp_rw [← lowerSemicontinuousWithinAt_univ_iff] at *\n  exact lowerSemicontinuousWithinAt_sum ha\n#align lower_semicontinuous_at_sum lowerSemicontinuousAt_sum\n-/\n\n",
 "lowerSemicontinuousAt_indicator":
 "#print IsClosed.lowerSemicontinuousAt_indicator /-\ntheorem IsClosed.lowerSemicontinuousAt_indicator (hs : IsClosed s) (hy : y ≤ 0) :\n    LowerSemicontinuousAt (indicator s fun x => y) x :=\n  (hs.lower_semicontinuous_indicator hy).lower_semicontinuous_at x\n#align is_closed.lower_semicontinuous_at_indicator IsClosed.lowerSemicontinuousAt_indicator\n-/\n\n",
 "lowerSemicontinuousAt_csupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuousAt_csupᵢ /-\ntheorem lowerSemicontinuousAt_csupᵢ {f : ι → α → δ'}\n    (bdd :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" ((nhds) x)\n        (BddAbove (range fun i => f i y)))\n    (h : ∀ i, LowerSemicontinuousAt (f i) x) :\n    LowerSemicontinuousAt\n      (fun x' =>\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i x'))\n      x :=\n  by\n  simp_rw [← lowerSemicontinuousWithinAt_univ_iff] at *\n  rw [← nhdsWithin_univ] at bdd\n  exact lowerSemicontinuousWithinAt_csupᵢ bdd h\n#align lower_semicontinuous_at_csupr lowerSemicontinuousAt_csupᵢ\n-/\n\n",
 "lowerSemicontinuousAt_const":
 "#print lowerSemicontinuousAt_const /-\ntheorem lowerSemicontinuousAt_const : LowerSemicontinuousAt (fun x => z) x := fun y hy =>\n  Filter.eventually_of_forall fun x => hy\n#align lower_semicontinuous_at_const lowerSemicontinuousAt_const\n-/\n\n",
 "lowerSemicontinuousAt_bsupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print lowerSemicontinuousAt_bsupᵢ /-\ntheorem lowerSemicontinuousAt_bsupᵢ {p : ι → Prop} {f : ∀ (i) (h : p i), α → δ}\n    (h : ∀ i hi, LowerSemicontinuousAt (f i hi) x) :\n    LowerSemicontinuousAt\n      (fun x' =>\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i hi x'))\n      x :=\n  lowerSemicontinuousAt_supᵢ fun i => lowerSemicontinuousAt_supᵢ fun hi => h i hi\n#align lower_semicontinuous_at_bsupr lowerSemicontinuousAt_bsupᵢ\n-/\n\n",
 "lowerSemicontinuousAt":
 "#print ContinuousAt.lowerSemicontinuousAt /-\ntheorem ContinuousAt.lowerSemicontinuousAt {f : α → γ} (h : ContinuousAt f x) : LowerSemicontinuousAt f x := fun y hy =>\n  h (Ioi_mem_nhds hy)\n#align continuous_at.lower_semicontinuous_at ContinuousAt.lowerSemicontinuousAt\n-/\n\n",
 "lowerSemicontinuous":
 "#print Continuous.lowerSemicontinuous /-\ntheorem Continuous.lowerSemicontinuous {f : α → γ} (h : Continuous f) : LowerSemicontinuous f := fun x =>\n  h.continuous_at.lower_semicontinuous_at\n#align continuous.lower_semicontinuous Continuous.lowerSemicontinuous\n-/\n\n",
 "isOpen_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print UpperSemicontinuous.isOpen_preimage /-\ntheorem UpperSemicontinuous.isOpen_preimage (hf : UpperSemicontinuous f) (y : β) : IsOpen («expr ⁻¹' » f (Iio y)) :=\n  upperSemicontinuous_iff_isOpen_preimage.1 hf y\n#align upper_semicontinuous.is_open_preimage UpperSemicontinuous.isOpen_preimage\n-/\n\n",
 "isClosed_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print UpperSemicontinuous.isClosed_preimage /-\ntheorem UpperSemicontinuous.isClosed_preimage {f : α → γ} (hf : UpperSemicontinuous f) (y : γ) :\n    IsClosed («expr ⁻¹' » f (Ici y)) :=\n  upperSemicontinuous_iff_isClosed_preimage.1 hf y\n#align upper_semicontinuous.is_closed_preimage UpperSemicontinuous.isClosed_preimage\n-/\n\n",
 "continuous_iff_lower_upperSemicontinuous":
 "#print continuous_iff_lower_upperSemicontinuous /-\ntheorem continuous_iff_lower_upperSemicontinuous {f : α → γ} :\n    Continuous f ↔ LowerSemicontinuous f ∧ UpperSemicontinuous f := by\n  simp_rw [continuous_iff_continuousOn_univ, continuousOn_iff_lower_upperSemicontinuousOn,\n    lowerSemicontinuousOn_univ_iff, upperSemicontinuousOn_univ_iff]\n#align continuous_iff_lower_upper_semicontinuous continuous_iff_lower_upperSemicontinuous\n-/\n\n",
 "continuousWithinAt_iff_lower_upperSemicontinuousWithinAt":
 "#print continuousWithinAt_iff_lower_upperSemicontinuousWithinAt /-\ntheorem continuousWithinAt_iff_lower_upperSemicontinuousWithinAt {f : α → γ} :\n    ContinuousWithinAt f s x ↔ LowerSemicontinuousWithinAt f s x ∧ UpperSemicontinuousWithinAt f s x :=\n  by\n  refine' ⟨fun h => ⟨h.lower_semicontinuous_within_at, h.upper_semicontinuous_within_at⟩, _⟩\n  rintro ⟨h₁, h₂⟩\n  intro v hv\n  simp only [Filter.mem_map]\n  by_cases Hl : ∃ l, l < f x\n  · rcases exists_Ioc_subset_of_mem_nhds hv Hl with ⟨l, lfx, hl⟩\n    by_cases Hu : ∃ u, f x < u\n    · rcases exists_Ico_subset_of_mem_nhds hv Hu with ⟨u, fxu, hu⟩\n      filter_upwards [h₁ l lfx, h₂ u fxu]with a lfa fau\n      cases' le_or_gt (f a) (f x) with h h\n      · exact hl ⟨lfa, h⟩\n      · exact hu ⟨le_of_lt h, fau⟩\n    · simp only [not_exists, not_lt] at Hu\n      filter_upwards [h₁ l lfx]with a lfa using hl ⟨lfa, Hu (f a)⟩\n  · simp only [not_exists, not_lt] at Hl\n    by_cases Hu : ∃ u, f x < u\n    · rcases exists_Ico_subset_of_mem_nhds hv Hu with ⟨u, fxu, hu⟩\n      filter_upwards [h₂ u fxu]with a lfa\n      apply hu\n      exact ⟨Hl (f a), lfa⟩\n    · simp only [not_exists, not_lt] at Hu\n      apply Filter.eventually_of_forall\n      intro a\n      have : f a = f x := le_antisymm (Hu _) (Hl _)\n      rw [this]\n      exact mem_of_mem_nhds hv\n#align continuous_within_at_iff_lower_upper_semicontinuous_within_at continuousWithinAt_iff_lower_upperSemicontinuousWithinAt\n-/\n\n",
 "continuousOn_iff_lower_upperSemicontinuousOn":
 "#print continuousOn_iff_lower_upperSemicontinuousOn /-\ntheorem continuousOn_iff_lower_upperSemicontinuousOn {f : α → γ} :\n    ContinuousOn f s ↔ LowerSemicontinuousOn f s ∧ UpperSemicontinuousOn f s :=\n  by\n  simp only [ContinuousOn, continuousWithinAt_iff_lower_upperSemicontinuousWithinAt]\n  exact ⟨fun H => ⟨fun x hx => (H x hx).1, fun x hx => (H x hx).2⟩, fun H x hx => ⟨H.1 x hx, H.2 x hx⟩⟩\n#align continuous_on_iff_lower_upper_semicontinuous_on continuousOn_iff_lower_upperSemicontinuousOn\n-/\n\n",
 "continuousAt_iff_lower_upperSemicontinuousAt":
 "#print continuousAt_iff_lower_upperSemicontinuousAt /-\ntheorem continuousAt_iff_lower_upperSemicontinuousAt {f : α → γ} :\n    ContinuousAt f x ↔ LowerSemicontinuousAt f x ∧ UpperSemicontinuousAt f x := by\n  simp_rw [← continuousWithinAt_univ, ← lowerSemicontinuousWithinAt_univ_iff, ← upperSemicontinuousWithinAt_univ_iff,\n    continuousWithinAt_iff_lower_upperSemicontinuousWithinAt]\n#align continuous_at_iff_lower_upper_semicontinuous_at continuousAt_iff_lower_upperSemicontinuousAt\n-/\n\n",
 "comp_upperSemicontinuous_antitone":
 "#print Continuous.comp_upperSemicontinuous_antitone /-\ntheorem Continuous.comp_upperSemicontinuous_antitone {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : UpperSemicontinuous f) (gmon : Antitone g) : LowerSemicontinuous (g ∘ f) := fun x =>\n  hg.continuous_at.comp_upper_semicontinuous_at_antitone (hf x) gmon\n#align continuous.comp_upper_semicontinuous_antitone Continuous.comp_upperSemicontinuous_antitone\n-/\n\n",
 "comp_upperSemicontinuousWithinAt_antitone":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print ContinuousAt.comp_upperSemicontinuousWithinAt_antitone /-\ntheorem ContinuousAt.comp_upperSemicontinuousWithinAt_antitone {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : UpperSemicontinuousWithinAt f s x) (gmon : Antitone g) : LowerSemicontinuousWithinAt (g ∘ f) s x :=\n  @ContinuousAt.comp_upperSemicontinuousWithinAt α _ x s γ _ _ _ («expr ᵒᵈ» δ) _ _ _ g f hg hf gmon\n#align continuous_at.comp_upper_semicontinuous_within_at_antitone ContinuousAt.comp_upperSemicontinuousWithinAt_antitone\n-/\n\n",
 "comp_upperSemicontinuousWithinAt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print ContinuousAt.comp_upperSemicontinuousWithinAt /-\ntheorem ContinuousAt.comp_upperSemicontinuousWithinAt {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : UpperSemicontinuousWithinAt f s x) (gmon : Monotone g) : UpperSemicontinuousWithinAt (g ∘ f) s x :=\n  @ContinuousAt.comp_lowerSemicontinuousWithinAt α _ x s («expr ᵒᵈ» γ) _ _ _ («expr ᵒᵈ» δ) _ _ _ g f hg hf gmon.dual\n#align continuous_at.comp_upper_semicontinuous_within_at ContinuousAt.comp_upperSemicontinuousWithinAt\n-/\n\n",
 "comp_upperSemicontinuousOn_antitone":
 "#print Continuous.comp_upperSemicontinuousOn_antitone /-\ntheorem Continuous.comp_upperSemicontinuousOn_antitone {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : UpperSemicontinuousOn f s) (gmon : Antitone g) : LowerSemicontinuousOn (g ∘ f) s := fun x hx =>\n  hg.continuous_at.comp_upper_semicontinuous_within_at_antitone (hf x hx) gmon\n#align continuous.comp_upper_semicontinuous_on_antitone Continuous.comp_upperSemicontinuousOn_antitone\n-/\n\n",
 "comp_upperSemicontinuousOn":
 "#print Continuous.comp_upperSemicontinuousOn /-\ntheorem Continuous.comp_upperSemicontinuousOn {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : UpperSemicontinuousOn f s) (gmon : Monotone g) : UpperSemicontinuousOn (g ∘ f) s := fun x hx =>\n  hg.continuous_at.comp_upper_semicontinuous_within_at (hf x hx) gmon\n#align continuous.comp_upper_semicontinuous_on Continuous.comp_upperSemicontinuousOn\n-/\n\n",
 "comp_upperSemicontinuousAt_antitone":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print ContinuousAt.comp_upperSemicontinuousAt_antitone /-\ntheorem ContinuousAt.comp_upperSemicontinuousAt_antitone {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : UpperSemicontinuousAt f x) (gmon : Antitone g) : LowerSemicontinuousAt (g ∘ f) x :=\n  @ContinuousAt.comp_upperSemicontinuousAt α _ x γ _ _ _ («expr ᵒᵈ» δ) _ _ _ g f hg hf gmon\n#align continuous_at.comp_upper_semicontinuous_at_antitone ContinuousAt.comp_upperSemicontinuousAt_antitone\n-/\n\n",
 "comp_upperSemicontinuousAt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print ContinuousAt.comp_upperSemicontinuousAt /-\ntheorem ContinuousAt.comp_upperSemicontinuousAt {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : UpperSemicontinuousAt f x) (gmon : Monotone g) : UpperSemicontinuousAt (g ∘ f) x :=\n  @ContinuousAt.comp_lowerSemicontinuousAt α _ x («expr ᵒᵈ» γ) _ _ _ («expr ᵒᵈ» δ) _ _ _ g f hg hf gmon.dual\n#align continuous_at.comp_upper_semicontinuous_at ContinuousAt.comp_upperSemicontinuousAt\n-/\n\n",
 "comp_upperSemicontinuous":
 "#print Continuous.comp_upperSemicontinuous /-\ntheorem Continuous.comp_upperSemicontinuous {g : γ → δ} {f : α → γ} (hg : Continuous g) (hf : UpperSemicontinuous f)\n    (gmon : Monotone g) : UpperSemicontinuous (g ∘ f) := fun x =>\n  hg.continuous_at.comp_upper_semicontinuous_at (hf x) gmon\n#align continuous.comp_upper_semicontinuous Continuous.comp_upperSemicontinuous\n-/\n\n",
 "comp_lowerSemicontinuous_antitone":
 "#print Continuous.comp_lowerSemicontinuous_antitone /-\ntheorem Continuous.comp_lowerSemicontinuous_antitone {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : LowerSemicontinuous f) (gmon : Antitone g) : UpperSemicontinuous (g ∘ f) := fun x =>\n  hg.continuous_at.comp_lower_semicontinuous_at_antitone (hf x) gmon\n#align continuous.comp_lower_semicontinuous_antitone Continuous.comp_lowerSemicontinuous_antitone\n-/\n\n",
 "comp_lowerSemicontinuousWithinAt_antitone":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print ContinuousAt.comp_lowerSemicontinuousWithinAt_antitone /-\ntheorem ContinuousAt.comp_lowerSemicontinuousWithinAt_antitone {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : LowerSemicontinuousWithinAt f s x) (gmon : Antitone g) : UpperSemicontinuousWithinAt (g ∘ f) s x :=\n  @ContinuousAt.comp_lowerSemicontinuousWithinAt α _ x s γ _ _ _ («expr ᵒᵈ» δ) _ _ _ g f hg hf gmon\n#align continuous_at.comp_lower_semicontinuous_within_at_antitone ContinuousAt.comp_lowerSemicontinuousWithinAt_antitone\n-/\n\n",
 "comp_lowerSemicontinuousWithinAt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print ContinuousAt.comp_lowerSemicontinuousWithinAt /-\ntheorem ContinuousAt.comp_lowerSemicontinuousWithinAt {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : LowerSemicontinuousWithinAt f s x) (gmon : Monotone g) : LowerSemicontinuousWithinAt (g ∘ f) s x :=\n  by\n  intro y hy\n  by_cases h : ∃ l, l < f x\n  · obtain ⟨z, zlt, hz⟩ : ∃ z < f x, Ioc z (f x) ⊆ «expr ⁻¹' » g (Ioi y) :=\n      exists_Ioc_subset_of_mem_nhds (hg (Ioi_mem_nhds hy)) h\n    filter_upwards [hf z zlt]with a ha\n    calc\n      y < g (min (f x) (f a)) := hz (by simp [zlt, ha, le_refl])\n      _ ≤ g (f a) := gmon (min_le_right _ _)\n      \n  · simp only [not_exists, not_lt] at h\n    exact Filter.eventually_of_forall fun a => hy.trans_le (gmon (h (f a)))\n#align continuous_at.comp_lower_semicontinuous_within_at ContinuousAt.comp_lowerSemicontinuousWithinAt\n-/\n\n",
 "comp_lowerSemicontinuousOn_antitone":
 "#print Continuous.comp_lowerSemicontinuousOn_antitone /-\ntheorem Continuous.comp_lowerSemicontinuousOn_antitone {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : LowerSemicontinuousOn f s) (gmon : Antitone g) : UpperSemicontinuousOn (g ∘ f) s := fun x hx =>\n  hg.continuous_at.comp_lower_semicontinuous_within_at_antitone (hf x hx) gmon\n#align continuous.comp_lower_semicontinuous_on_antitone Continuous.comp_lowerSemicontinuousOn_antitone\n-/\n\n",
 "comp_lowerSemicontinuousOn":
 "#print Continuous.comp_lowerSemicontinuousOn /-\ntheorem Continuous.comp_lowerSemicontinuousOn {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : LowerSemicontinuousOn f s) (gmon : Monotone g) : LowerSemicontinuousOn (g ∘ f) s := fun x hx =>\n  hg.continuous_at.comp_lower_semicontinuous_within_at (hf x hx) gmon\n#align continuous.comp_lower_semicontinuous_on Continuous.comp_lowerSemicontinuousOn\n-/\n\n",
 "comp_lowerSemicontinuousAt_antitone":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print ContinuousAt.comp_lowerSemicontinuousAt_antitone /-\ntheorem ContinuousAt.comp_lowerSemicontinuousAt_antitone {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : LowerSemicontinuousAt f x) (gmon : Antitone g) : UpperSemicontinuousAt (g ∘ f) x :=\n  @ContinuousAt.comp_lowerSemicontinuousAt α _ x γ _ _ _ («expr ᵒᵈ» δ) _ _ _ g f hg hf gmon\n#align continuous_at.comp_lower_semicontinuous_at_antitone ContinuousAt.comp_lowerSemicontinuousAt_antitone\n-/\n\n",
 "comp_lowerSemicontinuousAt":
 "#print ContinuousAt.comp_lowerSemicontinuousAt /-\ntheorem ContinuousAt.comp_lowerSemicontinuousAt {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : LowerSemicontinuousAt f x) (gmon : Monotone g) : LowerSemicontinuousAt (g ∘ f) x :=\n  by\n  simp only [← lowerSemicontinuousWithinAt_univ_iff] at hf⊢\n  exact hg.comp_lower_semicontinuous_within_at hf gmon\n#align continuous_at.comp_lower_semicontinuous_at ContinuousAt.comp_lowerSemicontinuousAt\n-/\n\n",
 "comp_lowerSemicontinuous":
 "#print Continuous.comp_lowerSemicontinuous /-\ntheorem Continuous.comp_lowerSemicontinuous {g : γ → δ} {f : α → γ} (hg : Continuous g) (hf : LowerSemicontinuous f)\n    (gmon : Monotone g) : LowerSemicontinuous (g ∘ f) := fun x =>\n  hg.continuous_at.comp_lower_semicontinuous_at (hf x) gmon\n#align continuous.comp_lower_semicontinuous Continuous.comp_lowerSemicontinuous\n-/\n\n",
 "add'":
 "#print UpperSemicontinuous.add' /-\n/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with an\nexplicit continuity assumption on addition, for application to `ereal`. The unprimed version of\nthe lemma uses `[has_continuous_add]`. -/\ntheorem UpperSemicontinuous.add' {f g : α → γ} (hf : UpperSemicontinuous f) (hg : UpperSemicontinuous g)\n    (hcont : ∀ x, ContinuousAt (fun p : γ × γ => p.1 + p.2) (f x, g x)) : UpperSemicontinuous fun z => f z + g z :=\n  fun x => (hf x).add' (hg x) (hcont x)\n#align upper_semicontinuous.add' UpperSemicontinuous.add'\n-/\n\n",
 "add":
 "#print UpperSemicontinuous.add /-\n/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with\n`[has_continuous_add]`. The primed version of the lemma uses an explicit continuity assumption on\naddition, for application to `ereal`. -/\ntheorem UpperSemicontinuous.add {f g : α → γ} (hf : UpperSemicontinuous f) (hg : UpperSemicontinuous g) :\n    UpperSemicontinuous fun z => f z + g z :=\n  hf.add' hg fun x => continuous_add.continuous_at\n#align upper_semicontinuous.add UpperSemicontinuous.add\n-/\n\n"}