{"ultrafilter_le_nhds_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem ultrafilter_le_nhds_infty {f : Ultrafilter (Alexandroff X)} :\n    (f : Filter (Alexandroff X)) ≤ (nhds) (alexandroff.infty) ↔\n      ∀ s : Set X, IsClosed s → IsCompact s → «expr '' » coe s ∉ f :=\n  by simp only [le_nhds_infty, ← compl_image_coe, Ultrafilter.mem_coe, Ultrafilter.compl_mem_iff_not_mem]\n#align ultrafilter_le_nhds_infty ultrafilter_le_nhds_infty\n\n",
 "tendsto_nhds_infty'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem tendsto_nhds_infty' {α : Type _} {f : Alexandroff X → α} {l : Filter α} :\n    Tendsto f ((nhds) (alexandroff.infty)) l ↔\n      Tendsto f (pure (alexandroff.infty)) l ∧ Tendsto (f ∘ coe) (coclosedCompact X) l :=\n  by simp [nhds_infty_eq, and_comm']\n#align tendsto_nhds_infty' tendsto_nhds_infty'\n\n",
 "tendsto_nhds_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem tendsto_nhds_infty {α : Type _} {f : Alexandroff X → α} {l : Filter α} :\n    Tendsto f ((nhds) (alexandroff.infty)) l ↔\n      ∀ s ∈ l, f (alexandroff.infty) ∈ s ∧ ∃ t : Set X, IsClosed t ∧ IsCompact t ∧ MapsTo (f ∘ coe) («expr ᶜ» t) s :=\n  tendsto_nhds_infty'.trans <| by\n    simp only [tendsto_pure_left, has_basis_coclosed_compact.tendsto_left_iff, forall_and, and_assoc', exists_prop]\n#align tendsto_nhds_infty tendsto_nhds_infty\n\n",
 "t1_counterexample":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n#print Continuous.homeoOfEquivCompactToT2.t1_counterexample /-\n/-- A concrete counterexample shows that  `continuous.homeo_of_equiv_compact_to_t2`\ncannot be generalized from `t2_space` to `t1_space`.\n\nLet `α = alexandroff ℕ` be the one-point compactification of `ℕ`, and let `β` be the same space\n`alexandroff ℕ` with the cofinite topology.  Then `α` is compact, `β` is T1, and the identity map\n`id : α → β` is a continuous equivalence that is not a homeomorphism.\n-/\ntheorem Continuous.homeoOfEquivCompactToT2.t1_counterexample :\n    ∃ (α β : Type)(Iα : TopologicalSpace α)(Iβ : TopologicalSpace β),\n      CompactSpace α ∧ T1Space β ∧ ∃ f : «expr ≃ » α β, Continuous f ∧ ¬Continuous f.symm :=\n  ⟨Alexandroff ℕ, CofiniteTopology (Alexandroff ℕ), inferInstance, inferInstance, inferInstance, inferInstance,\n    CofiniteTopology.of, CofiniteTopology.continuous_of, Alexandroff.not_continuous_cofiniteTopology_of_symm⟩\n#align continuous.homeo_of_equiv_compact_to_t2.t1_counterexample Continuous.homeoOfEquivCompactToT2.t1_counterexample\n-/\n\n",
 "specializes_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n@[simp]\ntheorem specializes_coe {x y : X} : «expr ⤳ » (x : Alexandroff X) y ↔ «expr ⤳ » x y :=\n  openEmbedding_coe.to_inducing.specializes_iff\n#align specializes_coe specializes_coe\n\n",
 "range_coe_union_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n@[simp]\ntheorem range_coe_union_infty : range (coe : X → Alexandroff X) ∪ {alexandroff.infty} = univ :=\n  range_some_union_none X\n#align range_coe_union_infty range_coe_union_infty\n\n",
 "range_coe_inter_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n@[simp]\ntheorem range_coe_inter_infty : range (coe : X → Alexandroff X) ∩ {alexandroff.infty} = ∅ :=\n  range_some_inter_none X\n#align range_coe_inter_infty range_coe_inter_infty\n\n",
 "open_embedding_coe":
 "theorem open_embedding_coe : OpenEmbedding (coe : X → Alexandroff X) :=\n  openEmbedding_of_continuous_injective_open continuous_coe coe_injective isOpenMap_coe\n#align open_embedding_coe open_embedding_coe\n\n",
 "not_specializes_infty_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem not_specializes_infty_coe {x : X} : ¬Specializes (alexandroff.infty) (x : Alexandroff X) :=\n  isClosed_infty.not_specializes rfl (coe_ne_infty x)\n#align not_specializes_infty_coe not_specializes_infty_coe\n\n",
 "not_mem_range_coe_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem not_mem_range_coe_iff {x : Alexandroff X} : x ∉ range (coe : X → Alexandroff X) ↔ x = alexandroff.infty := by\n  rw [← mem_compl_iff, compl_range_coe, mem_singleton_iff]\n#align not_mem_range_coe_iff not_mem_range_coe_iff\n\n",
 "not_inseparable_infty_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem not_inseparable_infty_coe {x : X} : ¬Inseparable (alexandroff.infty) (x : Alexandroff X) := fun h =>\n  not_specializes_infty_coe h.specializes\n#align not_inseparable_infty_coe not_inseparable_infty_coe\n\n",
 "not_inseparable_coe_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem not_inseparable_coe_infty {x : X} : ¬Inseparable (x : Alexandroff X) (alexandroff.infty) := fun h =>\n  not_specializes_infty_coe h.specializes'\n#align not_inseparable_coe_infty not_inseparable_coe_infty\n\n",
 "not_continuous_cofinite_topology_of_symm":
 "/-- If `X` is an infinite type with discrete topology (e.g., `ℕ`), then the identity map from\n`cofinite_topology (alexandroff X)` to `alexandroff X` is not continuous. -/\ntheorem not_continuous_cofinite_topology_of_symm [Infinite X] [DiscreteTopology X] :\n    ¬Continuous (@CofiniteTopology.of (Alexandroff X)).symm :=\n  by\n  inhabit X\n  simp only [continuous_iff_continuousAt, ContinuousAt, not_forall]\n  use CofiniteTopology.of ↑(default : X)\n  simpa [nhds_coe_eq, nhds_discrete, CofiniteTopology.nhds_eq] using\n    (finite_singleton ((default : X) : Alexandroff X)).infinite_compl\n#align not_continuous_cofinite_topology_of_symm not_continuous_cofinite_topology_of_symm\n\n",
 "nhds_within_compl_infty_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem nhds_within_compl_infty_eq : nhds_within.ne (alexandroff.infty : Alexandroff X) = map coe (coclosedCompact X) :=\n  by\n  refine' (nhdsWithin_basis_open (alexandroff.infty) _).ext (has_basis_coclosed_compact.map _) _ _\n  · rintro s ⟨hs, hso⟩\n    refine' ⟨_, (is_open_iff_of_mem hs).mp hso, _⟩\n    simp\n  · rintro s ⟨h₁, h₂⟩\n    refine' ⟨_, ⟨mem_compl infty_not_mem_image_coe, is_open_compl_image_coe.2 ⟨h₁, h₂⟩⟩, _⟩\n    simp [compl_image_coe, ← diff_eq, subset_preimage_image]\n#align nhds_within_compl_infty_eq nhds_within_compl_infty_eq\n\n",
 "nhds_within_coe_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\ntheorem nhds_within_coe_image (s : Set X) (x : X) :\n    nhds_within («expr '' » coe s) (x : Alexandroff X) = map coe (nhds_within s x) :=\n  (openEmbedding_coe.to_embedding.map_nhds_within_eq _ _).symm\n#align nhds_within_coe_image nhds_within_coe_image\n\n",
 "nhds_within_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem nhds_within_coe (s : Set (Alexandroff X)) (x : X) :\n    nhds_within s ↑x = map coe (nhds_within («expr ⁻¹' » coe s) x) :=\n  (openEmbedding_coe.map_nhds_within_preimage_eq _ _).symm\n#align nhds_within_coe nhds_within_coe\n\n",
 "nhds_infty_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem nhds_infty_eq :\n    (nhds) (alexandroff.infty : Alexandroff X) = «expr ⊔ » (map coe (coclosedCompact X)) (pure (alexandroff.infty)) :=\n  by rw [← nhds_within_compl_infty_eq, nhdsWithin_compl_singleton_sup_pure]\n#align nhds_infty_eq nhds_infty_eq\n\n",
 "nhds_coe_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem nhds_coe_eq (x : X) : (nhds) ↑x = map (coe : X → Alexandroff X) ((nhds) x) :=\n  (openEmbedding_coe.map_nhds_eq x).symm\n#align nhds_coe_eq nhds_coe_eq\n\n",
 "ne_infty_iff_exists":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem ne_infty_iff_exists {x : Alexandroff X} : x ≠ alexandroff.infty ↔ ∃ y : X, (y : Alexandroff X) = x := by\n  induction x using Alexandroff.rec <;> simp\n#align ne_infty_iff_exists ne_infty_iff_exists\n\n",
 "le_nhds_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem le_nhds_infty {f : Filter (Alexandroff X)} :\n    f ≤ (nhds) (alexandroff.infty) ↔\n      ∀ s : Set X, IsClosed s → IsCompact s → «expr '' » coe («expr ᶜ» s) ∪ {alexandroff.infty} ∈ f :=\n  by simp only [has_basis_nhds_infty.ge_iff, and_imp]\n#align le_nhds_infty le_nhds_infty\n\n",
 "is_open_range_coe":
 "theorem is_open_range_coe : IsOpen (range (coe : X → Alexandroff X)) :=\n  openEmbedding_coe.open_range\n#align is_open_range_coe is_open_range_coe\n\n",
 "is_open_map_coe":
 "theorem is_open_map_coe : IsOpenMap (coe : X → Alexandroff X) := fun s => isOpen_image_coe.2\n#align is_open_map_coe is_open_map_coe\n\n",
 "is_open_image_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem is_open_image_coe {s : Set X} : IsOpen («expr '' » coe s : Set (Alexandroff X)) ↔ IsOpen s := by\n  rw [is_open_iff_of_not_mem infty_not_mem_image_coe, preimage_image_eq _ coe_injective]\n#align is_open_image_coe is_open_image_coe\n\n",
 "is_open_iff_of_not_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem is_open_iff_of_not_mem (h : alexandroff.infty ∉ s) : IsOpen s ↔ IsOpen («expr ⁻¹' » coe s : Set X) := by\n  simp [is_open_def, h]\n#align is_open_iff_of_not_mem is_open_iff_of_not_mem\n\n",
 "is_open_iff_of_mem'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem is_open_iff_of_mem' (h : alexandroff.infty ∈ s) :\n    IsOpen s ↔ IsCompact («expr ᶜ» («expr ⁻¹' » coe s : Set X)) ∧ IsOpen («expr ⁻¹' » coe s : Set X) := by\n  simp [is_open_def, h]\n#align is_open_iff_of_mem' is_open_iff_of_mem'\n\n",
 "is_open_iff_of_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem is_open_iff_of_mem (h : alexandroff.infty ∈ s) :\n    IsOpen s ↔ IsClosed («expr ᶜ» («expr ⁻¹' » coe s : Set X)) ∧ IsCompact («expr ᶜ» («expr ⁻¹' » coe s : Set X)) := by\n  simp only [is_open_iff_of_mem' h, isClosed_compl_iff, and_comm]\n#align is_open_iff_of_mem is_open_iff_of_mem\n\n",
 "is_open_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem is_open_def :\n    IsOpen s ↔\n      (alexandroff.infty ∈ s → IsCompact («expr ᶜ» («expr ⁻¹' » coe s : Set X))) ∧ IsOpen («expr ⁻¹' » coe s : Set X) :=\n  iff.rfl\n#align is_open_def is_open_def\n\n",
 "is_open_compl_image_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem is_open_compl_image_coe {s : Set X} :\n    IsOpen («expr ᶜ» («expr '' » coe s : Set (Alexandroff X))) ↔ IsClosed s ∧ IsCompact s :=\n  by\n  rw [is_open_iff_of_mem, ← preimage_compl, compl_compl, preimage_image_eq _ coe_injective]\n  exact infty_not_mem_image_coe\n#align is_open_compl_image_coe is_open_compl_image_coe\n\n",
 "is_compl_range_coe_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem is_compl_range_coe_infty : IsCompl (range (coe : X → Alexandroff X)) {alexandroff.infty} :=\n  isCompl_range_some_none X\n#align is_compl_range_coe_infty is_compl_range_coe_infty\n\n",
 "is_closed_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem is_closed_infty : IsClosed ({alexandroff.infty} : Set (Alexandroff X)) :=\n  by\n  rw [← compl_range_coe, isClosed_compl_iff]\n  exact is_open_range_coe\n#align is_closed_infty is_closed_infty\n\n",
 "is_closed_image_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem is_closed_image_coe {s : Set X} :\n    IsClosed («expr '' » coe s : Set (Alexandroff X)) ↔ IsClosed s ∧ IsCompact s := by\n  rw [← isOpen_compl_iff, is_open_compl_image_coe]\n#align is_closed_image_coe is_closed_image_coe\n\n",
 "is_closed_iff_of_not_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem is_closed_iff_of_not_mem (h : alexandroff.infty ∉ s) :\n    IsClosed s ↔ IsClosed («expr ⁻¹' » coe s : Set X) ∧ IsCompact («expr ⁻¹' » coe s : Set X) := by\n  rw [← isOpen_compl_iff, is_open_iff_of_mem (mem_compl h), ← preimage_compl, compl_compl]\n#align is_closed_iff_of_not_mem is_closed_iff_of_not_mem\n\n",
 "is_closed_iff_of_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem is_closed_iff_of_mem (h : alexandroff.infty ∈ s) : IsClosed s ↔ IsClosed («expr ⁻¹' » coe s : Set X) :=\n  by\n  have : alexandroff.infty ∉ «expr ᶜ» s := fun H => H h\n  rw [← isOpen_compl_iff, is_open_iff_of_not_mem this, ← isOpen_compl_iff, preimage_compl]\n#align is_closed_iff_of_mem is_closed_iff_of_mem\n\n",
 "inseparable_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem inseparable_iff {x y : Alexandroff X} :\n    Inseparable x y ↔\n      x = alexandroff.infty ∧ y = alexandroff.infty ∨ ∃ x' : X, x = x' ∧ ∃ y' : X, y = y' ∧ Inseparable x' y' :=\n  by\n  induction x using Alexandroff.rec <;> induction y using Alexandroff.rec <;>\n    simp [not_inseparable_infty_coe, not_inseparable_coe_infty, coe_eq_coe]\n#align inseparable_iff inseparable_iff\n\n",
 "inseparable_coe":
 "@[simp]\ntheorem inseparable_coe {x y : X} : Inseparable (x : Alexandroff X) y ↔ Inseparable x y :=\n  openEmbedding_coe.to_inducing.inseparable_iff\n#align inseparable_coe inseparable_coe\n\n",
 "infty_not_mem_range_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem infty_not_mem_range_coe : alexandroff.infty ∉ range (coe : X → Alexandroff X) :=\n  not_mem_range_coe_iff.2 rfl\n#align infty_not_mem_range_coe infty_not_mem_range_coe\n\n",
 "infty_not_mem_image_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem infty_not_mem_image_coe {s : Set X} : alexandroff.infty ∉ «expr '' » (coe : X → Alexandroff X) s :=\n  not_mem_subset (image_subset_range _ _) infty_not_mem_range_coe\n#align infty_not_mem_image_coe infty_not_mem_image_coe\n\n",
 "infty_ne_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n@[simp]\ntheorem infty_ne_coe (x : X) : alexandroff.infty ≠ (x : Alexandroff X) :=\n  fun.\n#align infty_ne_coe infty_ne_coe\n\n",
 "infty_mem_opens_of_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem infty_mem_opens_of_compl {s : Set X} (h₁ : IsClosed s) (h₂ : IsCompact s) :\n    alexandroff.infty ∈ opensOfCompl s h₁ h₂ :=\n  mem_compl infty_not_mem_image_coe\n#align infty_mem_opens_of_compl infty_mem_opens_of_compl\n\n",
 "has_basis_nhds_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem has_basis_nhds_infty :\n    ((nhds) (alexandroff.infty : Alexandroff X)).has_basis (fun s : Set X => IsClosed s ∧ IsCompact s) fun s =>\n      «expr '' » coe («expr ᶜ» s) ∪ {alexandroff.infty} :=\n  by\n  rw [nhds_infty_eq]\n  exact (has_basis_coclosed_compact.map _).sup_pure _\n#align has_basis_nhds_infty has_basis_nhds_infty\n\n",
 "dense_range_coe":
 "/-- If `X` is not a compact space, then the natural embedding `X → alexandroff X` has dense range.\n-/\ntheorem dense_range_coe [NoncompactSpace X] : DenseRange (coe : X → Alexandroff X) :=\n  by\n  rw [DenseRange, ← compl_infty]\n  exact dense_compl_singleton _\n#align dense_range_coe dense_range_coe\n\n",
 "dense_embedding_coe":
 "theorem dense_embedding_coe [NoncompactSpace X] : DenseEmbedding (coe : X → Alexandroff X) :=\n  { openEmbedding_coe with dense := denseRange_coe }\n#align dense_embedding_coe dense_embedding_coe\n\n",
 "continuous_coe":
 "@[continuity]\ntheorem continuous_coe : Continuous (coe : X → Alexandroff X) :=\n  continuous_def.mpr fun s hs => hs.right\n#align continuous_coe continuous_coe\n\n",
 "continuous_at_infty'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem continuous_at_infty' {Y : Type _} [TopologicalSpace Y] {f : Alexandroff X → Y} :\n    ContinuousAt f (alexandroff.infty) ↔ Tendsto (f ∘ coe) (coclosedCompact X) ((nhds) (f (alexandroff.infty))) :=\n  tendsto_nhds_infty'.trans <| and_iff_right (tendsto_pure_nhds _ _)\n#align continuous_at_infty' continuous_at_infty'\n\n",
 "continuous_at_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem continuous_at_infty {Y : Type _} [TopologicalSpace Y] {f : Alexandroff X → Y} :\n    ContinuousAt f (alexandroff.infty) ↔\n      ∀ s ∈ (nhds) (f (alexandroff.infty)), ∃ t : Set X, IsClosed t ∧ IsCompact t ∧ MapsTo (f ∘ coe) («expr ᶜ» t) s :=\n  continuousAt_infty'.trans <| by simp only [has_basis_coclosed_compact.tendsto_left_iff, exists_prop, and_assoc']\n#align continuous_at_infty continuous_at_infty\n\n",
 "continuous_at_coe":
 "theorem continuous_at_coe {Y : Type _} [TopologicalSpace Y] {f : Alexandroff X → Y} {x : X} :\n    ContinuousAt f x ↔ ContinuousAt (f ∘ coe) x := by rw [ContinuousAt, nhds_coe_eq, tendsto_map'_iff, ContinuousAt]\n#align continuous_at_coe continuous_at_coe\n\n",
 "compl_range_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n@[simp]\ntheorem compl_range_coe : «expr ᶜ» (range (coe : X → Alexandroff X)) = {alexandroff.infty} :=\n  compl_range_some X\n#align compl_range_coe compl_range_coe\n\n",
 "compl_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem compl_infty : («expr ᶜ» {alexandroff.infty} : Set (Alexandroff X)) = range (coe : X → Alexandroff X) :=\n  (@isCompl_range_coe_infty X).symm.compl_eq\n#align compl_infty compl_infty\n\n",
 "compl_image_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\ntheorem compl_image_coe (s : Set X) :\n    «expr ᶜ» («expr '' » coe s : Set (Alexandroff X)) = «expr '' » coe («expr ᶜ» s) ∪ {alexandroff.infty} := by\n  rw [coe_injective.compl_image_eq, compl_range_coe]\n#align compl_image_coe compl_image_coe\n\n",
 "comap_coe_nhds_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n@[simp]\ntheorem comap_coe_nhds_infty : comap (coe : X → Alexandroff X) ((nhds) (alexandroff.infty)) = coclosedCompact X := by\n  simp [nhds_infty_eq, comap_sup, comap_map coe_injective]\n#align comap_coe_nhds_infty comap_coe_nhds_infty\n\n",
 "comap_coe_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem comap_coe_nhds (x : X) : comap (coe : X → Alexandroff X) ((nhds) x) = (nhds) x :=\n  (openEmbedding_coe.to_inducing.nhds_eq_comap x).symm\n#align comap_coe_nhds comap_coe_nhds\n\n",
 "coe_preimage_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n@[simp]\ntheorem coe_preimage_infty : «expr ⁻¹' » (coe : X → Alexandroff X) {alexandroff.infty} = ∅ :=\n  by\n  ext\n  simp\n#align coe_preimage_infty coe_preimage_infty\n\n",
 "coe_ne_infty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `alexandroff.infty -/\n@[simp]\ntheorem coe_ne_infty (x : X) : (x : Alexandroff X) ≠ alexandroff.infty :=\n  fun.\n#align coe_ne_infty coe_ne_infty\n\n",
 "coe_injective":
 "/-\nCopyright (c) 2021 Yourong Zang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yourong Zang, Yury Kudryashov\n-/\ntheorem coe_injective : function.injective (coe : X → Alexandroff X) :=\n  Option.some_injective X\n#align coe_injective coe_injective\n\n",
 "coe_eq_coe":
 "@[norm_cast]\ntheorem coe_eq_coe {x y : X} : (x : Alexandroff X) = y ↔ x = y :=\n  coe_injective.eq_iff\n#align coe_eq_coe coe_eq_coe\n\n"}