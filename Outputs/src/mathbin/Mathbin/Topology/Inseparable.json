{"trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print trans /-\n@[trans]\ntheorem trans (h₁ : «expr ~ » x y) (h₂ : «expr ~ » y z) : «expr ~ » x z :=\n  h₁.trans h₂\n#align trans trans\n-/\n\n",
 "tendsto_lift₂_nhds_within":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem tendsto_lift₂_nhds_within {f : X → Y → α} {hf : ∀ a b c d, «expr ~ » a c → «expr ~ » b d → f a b = f c d}\n    {x : X} {y : Y} {s : Set (SeparationQuotient X × SeparationQuotient Y)} {l : Filter α} :\n    Tendsto (uncurry <| lift₂ f hf) (nhds_within s (mk x, mk y)) l ↔\n      Tendsto (uncurry f) (nhds_within («expr ⁻¹' » (prod.map mk mk) s) (x, y)) l :=\n  by\n  rw [nhdsWithin, ← map_prod_map_mk_nhds, ← Filter.push_pull, comap_principal]\n  rfl\n#align tendsto_lift₂_nhds_within tendsto_lift₂_nhds_within\n\n",
 "tendsto_lift₂_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n@[simp]\ntheorem tendsto_lift₂_nhds {f : X → Y → α} {hf : ∀ a b c d, «expr ~ » a c → «expr ~ » b d → f a b = f c d} {x : X}\n    {y : Y} {l : Filter α} :\n    Tendsto (uncurry <| lift₂ f hf) ((nhds) (mk x, mk y)) l ↔ Tendsto (uncurry f) ((nhds) (x, y)) l :=\n  by\n  rw [← map_prod_map_mk_nhds, tendsto_map'_iff]\n  rfl\n#align tendsto_lift₂_nhds tendsto_lift₂_nhds\n\n",
 "tendsto_lift_nhds_within_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem tendsto_lift_nhds_within_mk {f : X → α} {hf : ∀ x y, «expr ~ » x y → f x = f y} {x : X}\n    {s : Set (SeparationQuotient X)} {l : Filter α} :\n    Tendsto (lift f hf) (nhds_within s (mk x)) l ↔ Tendsto f (nhds_within («expr ⁻¹' » mk s) x) l := by\n  simp only [← map_mk_nhds_within_preimage, tendsto_map'_iff, lift_comp_mk]\n#align tendsto_lift_nhds_within_mk tendsto_lift_nhds_within_mk\n\n",
 "tendsto_lift_nhds_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n@[simp]\ntheorem tendsto_lift_nhds_mk {f : X → α} {hf : ∀ x y, «expr ~ » x y → f x = f y} {x : X} {l : Filter α} :\n    Tendsto (lift f hf) (nhds <| mk x) l ↔ Tendsto f ((nhds) x) l := by\n  simp only [← map_mk_nhds, tendsto_map'_iff, lift_comp_mk]\n#align tendsto_lift_nhds_mk tendsto_lift_nhds_mk\n\n",
 "symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print symm /-\n@[symm]\ntheorem symm (h : «expr ~ » x y) : «expr ~ » y x :=\n  h.symm\n#align symm symm\n-/\n\n",
 "surjective_mk":
 "theorem surjective_mk : surjective (mk : X → SeparationQuotient X) :=\n  surjective_quot_mk _\n#align surjective_mk surjective_mk\n\n",
 "subtype_specializes_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print subtype_specializes_iff /-\ntheorem subtype_specializes_iff {p : X → Prop} (x y : Subtype p) : «expr ⤳ » x y ↔ «expr ⤳ » (x : X) y :=\n  inducing_subtype_val.specializes_iff.symm\n#align subtype_specializes_iff subtype_specializes_iff\n-/\n\n",
 "subtype_inseparable_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print subtype_inseparable_iff /-\ntheorem subtype_inseparable_iff {p : X → Prop} (x y : Subtype p) : «expr ~ » x y ↔ «expr ~ » (x : X) y :=\n  inducing_subtype_val.inseparable_iff.symm\n#align subtype_inseparable_iff subtype_inseparable_iff\n-/\n\n",
 "specializes_rfl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_rfl /-\ntheorem specializes_rfl : «expr ⤳ » x x :=\n  le_rfl\n#align specializes_rfl specializes_rfl\n-/\n\n",
 "specializes_refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_refl /-\n@[refl]\ntheorem specializes_refl (x : X) : «expr ⤳ » x x :=\n  specializes_rfl\n#align specializes_refl specializes_refl\n-/\n\n",
 "specializes_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_prod /-\n@[simp]\ntheorem specializes_prod {x₁ x₂ : X} {y₁ y₂ : Y} : «expr ⤳ » (x₁, y₁) (x₂, y₂) ↔ «expr ⤳ » x₁ x₂ ∧ «expr ⤳ » y₁ y₂ := by\n  simp only [Specializes, nhds_prod_eq, prod_le_prod]\n#align specializes_prod specializes_prod\n-/\n\n",
 "specializes_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_pi /-\n@[simp]\ntheorem specializes_pi {f g : ∀ i, π i} : «expr ⤳ » f g ↔ ∀ i, «expr ⤳ » (f i) (g i) := by\n  simp only [Specializes, nhds_pi, pi_le_pi]\n#align specializes_pi specializes_pi\n-/\n\n",
 "specializes_of_nhdsWithin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_of_nhdsWithin /-\ntheorem specializes_of_nhdsWithin (h₁ : nhds_within s x ≤ nhds_within s y) (h₂ : x ∈ s) : «expr ⤳ » x y :=\n  specializes_iff_pure.2 <|\n    calc\n      pure x ≤ nhds_within s x := le_inf (pure_le_nhds _) (le_principal_iff.2 h₂)\n      _ ≤ nhds_within s y := h₁\n      _ ≤ (nhds) y := inf_le_left\n      \n#align specializes_of_nhds_within specializes_of_nhdsWithin\n-/\n\n",
 "specializes_of_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_of_eq /-\ntheorem specializes_of_eq (e : x = y) : «expr ⤳ » x y :=\n  e ▸ specializes_refl x\n#align specializes_of_eq specializes_of_eq\n-/\n\n",
 "specializes_iff_pure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print specializes_iff_pure /-\ntheorem specializes_iff_pure : «expr ⤳ » x y ↔ pure x ≤ (nhds) y :=\n  (specializes_TFAE x y).out 0 1\n#align specializes_iff_pure specializes_iff_pure\n-/\n\n",
 "specializes_iff_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print specializes_iff_nhds /-\ntheorem specializes_iff_nhds : «expr ⤳ » x y ↔ (nhds) x ≤ (nhds) y :=\n  iff.rfl\n#align specializes_iff_nhds specializes_iff_nhds\n-/\n\n",
 "specializes_iff_mem_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_iff_mem_closure /-\ntheorem specializes_iff_mem_closure : «expr ⤳ » x y ↔ y ∈ closure ({x} : Set X) :=\n  (specializes_TFAE x y).out 0 4\n#align specializes_iff_mem_closure specializes_iff_mem_closure\n-/\n\n",
 "specializes_iff_forall_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_iff_forall_open /-\ntheorem specializes_iff_forall_open : «expr ⤳ » x y ↔ ∀ s : Set X, IsOpen s → y ∈ s → x ∈ s :=\n  (specializes_TFAE x y).out 0 2\n#align specializes_iff_forall_open specializes_iff_forall_open\n-/\n\n",
 "specializes_iff_forall_closed":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_iff_forall_closed /-\ntheorem specializes_iff_forall_closed : «expr ⤳ » x y ↔ ∀ s : Set X, IsClosed s → x ∈ s → y ∈ s :=\n  (specializes_TFAE x y).out 0 3\n#align specializes_iff_forall_closed specializes_iff_forall_closed\n-/\n\n",
 "specializes_iff_closure_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print specializes_iff_closure_subset /-\ntheorem specializes_iff_closure_subset : «expr ⤳ » x y ↔ closure ({y} : Set X) ⊆ closure {x} :=\n  (specializes_TFAE x y).out 0 5\n#align specializes_iff_closure_subset specializes_iff_closure_subset\n-/\n\n",
 "specializes_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print Inducing.specializes_iff /-\ntheorem Inducing.specializes_iff (hf : Inducing f) : «expr ⤳ » (f x) (f y) ↔ «expr ⤳ » x y := by\n  simp only [specializes_iff_mem_closure, hf.closure_eq_preimage_closure_image, image_singleton, mem_preimage]\n#align inducing.specializes_iff Inducing.specializes_iff\n-/\n\n",
 "specializes_TFAE":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print specializes_TFAE /-\n/-\nCopyright (c) 2021 Andrew Yang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Andrew Yang, Yury G. Kudryashov\n-/\n/-- A collection of equivalent definitions of `x ⤳ y`. The public API is given by `iff` lemmas\nbelow. -/\ntheorem specializes_TFAE (x y : X) :\n    TFAE\n      [«expr ⤳ » x y, pure x ≤ (nhds) y, ∀ s : Set X, IsOpen s → y ∈ s → x ∈ s, ∀ s : Set X, IsClosed s → x ∈ s → y ∈ s,\n        y ∈ closure ({x} : Set X), closure ({y} : Set X) ⊆ closure {x}, ClusterPt y (pure x)] :=\n  by\n  tfae_have 1 → 2; exact (pure_le_nhds _).trans\n  tfae_have 2 → 3; exact fun h s hso hy => h (hso.mem_nhds hy)\n  tfae_have 3 → 4; exact fun h s hsc hx => of_not_not fun hy => h («expr ᶜ» s) hsc.is_open_compl hy hx\n  tfae_have 4 → 5; exact fun h => h _ isClosed_closure (subset_closure <| mem_singleton _)\n  tfae_have 6 ↔ 5; exact is_closed_closure.closure_subset_iff.trans singleton_subset_iff\n  tfae_have 5 ↔ 7; · rw [mem_closure_iff_clusterPt, principal_singleton]\n  tfae_have 5 → 1\n  · refine' fun h => (nhds_basis_opens _).ge_iff.2 _\n    rintro s ⟨hy, ho⟩\n    rcases mem_closure_iff.1 h s ho hy with ⟨z, hxs, rfl : z = x⟩\n    exact ho.mem_nhds hxs\n  tfae_finish\n#align specializes_tfae specializes_TFAE\n-/\n\n",
 "specializes'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print Inseparable.specializes' /-\ntheorem Inseparable.specializes' (h : «expr ~ » x y) : «expr ⤳ » y x :=\n  h.ge\n#align inseparable.specializes' Inseparable.specializes'\n-/\n\n",
 "specializes":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print Inseparable.specializes /-\ntheorem Inseparable.specializes (h : «expr ~ » x y) : «expr ⤳ » x y :=\n  h.le\n#align inseparable.specializes Inseparable.specializes\n-/\n\n",
 "specialization_monotone":
 "#print Continuous.specialization_monotone /-\n/-- A continuous function is monotone with respect to the specialization preorders on the domain and\nthe codomain. -/\ntheorem Continuous.specialization_monotone (hf : Continuous f) :\n    @Monotone _ _ (specializationPreorder X) (specializationPreorder Y) f := fun x y h => h.map hf\n#align continuous.specialization_monotone Continuous.specialization_monotone\n-/\n\n",
 "rfl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print rfl /-\ntheorem rfl : «expr ~ » x x :=\n  refl x\n#align rfl rfl\n-/\n\n",
 "refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print refl /-\n@[refl]\ntheorem refl (x : X) : «expr ~ » x x :=\n  Eq.refl ((nhds) x)\n#align refl refl\n-/\n\n",
 "range_mk":
 "@[simp]\ntheorem range_mk : range (mk : X → SeparationQuotient X) = univ :=\n  surjective_mk.range_eq\n#align range_mk range_mk\n\n",
 "quotient_map_mk":
 "theorem quotient_map_mk : QuotientMap (mk : X → SeparationQuotient X) :=\n  quotientMap_quot_mk\n#align quotient_map_mk quotient_map_mk\n\n",
 "prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print Inseparable.prod /-\ntheorem Inseparable.prod {x₁ x₂ : X} {y₁ y₂ : Y} (hx : «expr ~ » x₁ x₂) (hy : «expr ~ » y₁ y₂) :\n    «expr ~ » (x₁, y₁) (x₂, y₂) :=\n  inseparable_prod.2 ⟨hx, hy⟩\n#align inseparable.prod Inseparable.prod\n-/\n\n",
 "preimage_mk_interior":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem preimage_mk_interior : «expr ⁻¹' » mk (interior t) = interior («expr ⁻¹' » mk t) :=\n  isOpenMap_mk.preimage_interior_eq_interior_preimage continuous_mk t\n#align preimage_mk_interior preimage_mk_interior\n\n",
 "preimage_mk_frontier":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem preimage_mk_frontier : «expr ⁻¹' » mk (frontier t) = frontier («expr ⁻¹' » mk t) :=\n  isOpenMap_mk.preimage_frontier_eq_frontier_preimage continuous_mk t\n#align preimage_mk_frontier preimage_mk_frontier\n\n",
 "preimage_mk_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem preimage_mk_closure : «expr ⁻¹' » mk (closure t) = closure («expr ⁻¹' » mk t) :=\n  isOpenMap_mk.preimage_closure_eq_closure_preimage continuous_mk t\n#align preimage_mk_closure preimage_mk_closure\n\n",
 "preimage_image_mk_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem preimage_image_mk_open (hs : IsOpen s) : «expr ⁻¹' » mk («expr '' » mk s) = s :=\n  by\n  refine' subset.antisymm _ (subset_preimage_image _ _)\n  rintro x ⟨y, hys, hxy⟩\n  exact ((mk_eq_mk.1 hxy).mem_open_iff hs).1 hys\n#align preimage_image_mk_open preimage_image_mk_open\n\n",
 "preimage_image_mk_closed":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem preimage_image_mk_closed (hs : IsClosed s) : «expr ⁻¹' » mk («expr '' » mk s) = s :=\n  by\n  refine' subset.antisymm _ (subset_preimage_image _ _)\n  rintro x ⟨y, hys, hxy⟩\n  exact ((mk_eq_mk.1 hxy).mem_closed_iff hs).1 hys\n#align preimage_image_mk_closed preimage_image_mk_closed\n\n",
 "of_eq":
 "#print of_eq /-\ntheorem of_eq (e : x = y) : Inseparable x y :=\n  e ▸ refl x\n#align of_eq of_eq\n-/\n\n",
 "not_specializes_iff_exists_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print not_specializes_iff_exists_open /-\ntheorem not_specializes_iff_exists_open : ¬«expr ⤳ » x y ↔ ∃ S : Set X, IsOpen S ∧ y ∈ S ∧ x ∉ S :=\n  by\n  rw [specializes_iff_forall_open]\n  push_neg\n  rfl\n#align not_specializes_iff_exists_open not_specializes_iff_exists_open\n-/\n\n",
 "not_specializes_iff_exists_closed":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print not_specializes_iff_exists_closed /-\ntheorem not_specializes_iff_exists_closed : ¬«expr ⤳ » x y ↔ ∃ S : Set X, IsClosed S ∧ x ∈ S ∧ y ∉ S :=\n  by\n  rw [specializes_iff_forall_closed]\n  push_neg\n  rfl\n#align not_specializes_iff_exists_closed not_specializes_iff_exists_closed\n-/\n\n",
 "not_specializes":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print IsClosed.not_specializes /-\ntheorem IsClosed.not_specializes (hs : IsClosed s) (hx : x ∈ s) (hy : y ∉ s) : ¬«expr ⤳ » x y := fun h =>\n  hy <| h.mem_closed hs hx\n#align is_closed.not_specializes IsClosed.not_specializes\n-/\n\n",
 "not_inseparable_iff_exists_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print not_inseparable_iff_exists_open /-\ntheorem not_inseparable_iff_exists_open : ¬«expr ~ » x y ↔ ∃ s : Set X, IsOpen s ∧ Xor' (x ∈ s) (y ∈ s) := by\n  simp [inseparable_iff_forall_open, ← xor_iff_not_iff]\n#align not_inseparable_iff_exists_open not_inseparable_iff_exists_open\n-/\n\n",
 "not_inseparable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print IsOpen.not_inseparable /-\ntheorem IsOpen.not_inseparable (hs : IsOpen s) (hx : x ∈ s) (hy : y ∉ s) : ¬«expr ~ » x y := fun h =>\n  hy <| (h.mem_open_iff hs).1 hx\n#align is_open.not_inseparable IsOpen.not_inseparable\n-/\n\n",
 "nhds_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem nhds_eq (h : «expr ~ » x y) : (nhds) x = (nhds) y :=\n  h\n#align nhds_eq nhds_eq\n\n",
 "mk_eq_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n@[simp]\ntheorem mk_eq_mk : mk x = mk y ↔ «expr ~ » x y :=\n  Quotient.eq''\n#align mk_eq_mk mk_eq_mk\n\n",
 "mem_open_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\ntheorem mem_open_iff (h : «expr ~ » x y) (hs : IsOpen s) : x ∈ s ↔ y ∈ s :=\n  inseparable_iff_forall_open.1 h s hs\n#align mem_open_iff mem_open_iff\n\n",
 "mem_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print Specializes.mem_open /-\ntheorem Specializes.mem_open (h : «expr ⤳ » x y) (hs : IsOpen s) (hy : y ∈ s) : x ∈ s :=\n  specializes_iff_forall_open.1 h s hs hy\n#align specializes.mem_open Specializes.mem_open\n-/\n\n",
 "mem_closed_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\ntheorem mem_closed_iff (h : «expr ~ » x y) (hs : IsClosed s) : x ∈ s ↔ y ∈ s :=\n  inseparable_iff_forall_closed.1 h s hs\n#align mem_closed_iff mem_closed_iff\n\n",
 "mem_closed":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print Specializes.mem_closed /-\ntheorem Specializes.mem_closed (h : «expr ⤳ » x y) (hs : IsClosed s) (hx : x ∈ s) : y ∈ s :=\n  specializes_iff_forall_closed.1 h s hs hx\n#align specializes.mem_closed Specializes.mem_closed\n-/\n\n",
 "map_prod_map_mk_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem map_prod_map_mk_nhds (x : X) (y : Y) : map (prod.map mk mk) ((nhds) (x, y)) = (nhds) (mk x, mk y) := by\n  rw [nhds_prod_eq, ← prod_map_map_eq', map_mk_nhds, map_mk_nhds, nhds_prod_eq]\n#align map_prod_map_mk_nhds map_prod_map_mk_nhds\n\n",
 "map_of_continuous_at":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\ntheorem map_of_continuous_at (h : «expr ~ » x y) (hx : ContinuousAt f x) (hy : ContinuousAt f y) :\n    «expr ~ » (f x) (f y) :=\n  (h.specializes.map_of_continuous_at hy).antisymm (h.specializes'.map_of_continuous_at hx)\n#align map_of_continuous_at map_of_continuous_at\n\n",
 "map_of_continuousAt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print Specializes.map_of_continuousAt /-\ntheorem Specializes.map_of_continuousAt (h : «expr ⤳ » x y) (hy : ContinuousAt f y) : «expr ⤳ » (f x) (f y) :=\n  specializes_iff_pure.2 fun s hs => mem_pure.2 <| mem_preimage.1 <| mem_of_mem_nhds <| hy.mono_left h hs\n#align specializes.map_of_continuous_at Specializes.map_of_continuousAt\n-/\n\n",
 "map_mk_nhds_within_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\ntheorem map_mk_nhds_within_preimage (s : Set (SeparationQuotient X)) (x : X) :\n    map mk (nhds_within («expr ⁻¹' » mk s) x) = nhds_within s (mk x) := by\n  rw [nhdsWithin, ← comap_principal, Filter.push_pull, nhdsWithin, map_mk_nhds]\n#align map_mk_nhds_within_preimage map_mk_nhds_within_preimage\n\n",
 "map_mk_nhds_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_set -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_set -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem map_mk_nhds_set : map mk ((nhds_set) s) = (nhds_set) («expr '' » mk s) := by\n  rw [← comap_mk_nhds_set_image, map_comap_of_surjective surjective_mk]\n#align map_mk_nhds_set map_mk_nhds_set\n\n",
 "map_mk_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem map_mk_nhds : map mk ((nhds) x) = (nhds) (mk x) := by\n  rw [← comap_mk_nhds_mk, map_comap_of_surjective surjective_mk]\n#align map_mk_nhds map_mk_nhds\n\n",
 "map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\ntheorem map (h : «expr ~ » x y) (hf : Continuous f) : «expr ~ » (f x) (f y) :=\n  h.map_of_continuous_at hf.continuous_at hf.continuous_at\n#align map map\n\n",
 "lift₂_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n@[simp]\ntheorem lift₂_mk {f : X → Y → α} (hf : ∀ a b c d, «expr ~ » a c → «expr ~ » b d → f a b = f c d) (x : X) (y : Y) :\n    lift₂ f hf (mk x) (mk y) = f x y :=\n  rfl\n#align lift₂_mk lift₂_mk\n\n",
 "lift_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n@[simp]\ntheorem lift_mk {f : X → α} (hf : ∀ x y, «expr ~ » x y → f x = f y) (x : X) : lift f hf (mk x) = f x :=\n  rfl\n#align lift_mk lift_mk\n\n",
 "lift_comp_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n@[simp]\ntheorem lift_comp_mk {f : X → α} (hf : ∀ x y, «expr ~ » x y → f x = f y) : lift f hf ∘ mk = f :=\n  rfl\n#align lift_comp_mk lift_comp_mk\n\n",
 "is_open_map_mk":
 "theorem is_open_map_mk : IsOpenMap (mk : X → SeparationQuotient X) := fun s hs =>\n  quotientMap_mk.is_open_preimage.1 <| by rwa [preimage_image_mk_open hs]\n#align is_open_map_mk is_open_map_mk\n\n",
 "is_closed_map_mk":
 "theorem is_closed_map_mk : IsClosedMap (mk : X → SeparationQuotient X) :=\n  inducing_mk.is_closed_map <| by\n    rw [range_mk]\n    exact isClosed_univ\n#align is_closed_map_mk is_closed_map_mk\n\n",
 "inseparable_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print inseparable_prod /-\n@[simp]\ntheorem inseparable_prod {x₁ x₂ : X} {y₁ y₂ : Y} : «expr ~ » (x₁, y₁) (x₂, y₂) ↔ «expr ~ » x₁ x₂ ∧ «expr ~ » y₁ y₂ := by\n  simp only [Inseparable, nhds_prod_eq, prod_inj]\n#align inseparable_prod inseparable_prod\n-/\n\n",
 "inseparable_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print inseparable_pi /-\n@[simp]\ntheorem inseparable_pi {f g : ∀ i, π i} : «expr ~ » f g ↔ ∀ i, «expr ~ » (f i) (g i) := by\n  simp only [Inseparable, nhds_pi, funext_iff, pi_inj]\n#align inseparable_pi inseparable_pi\n-/\n\n",
 "inseparable_of_nhdsWithin_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print inseparable_of_nhdsWithin_eq /-\ntheorem inseparable_of_nhdsWithin_eq (hx : x ∈ s) (hy : y ∈ s) (h : nhds_within s x = nhds_within s y) :\n    «expr ~ » x y :=\n  (specializes_of_nhdsWithin h.le hx).antisymm (specializes_of_nhdsWithin h.ge hy)\n#align inseparable_of_nhds_within_eq inseparable_of_nhdsWithin_eq\n-/\n\n",
 "inseparable_iff_specializes_and":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n#print inseparable_iff_specializes_and /-\ntheorem inseparable_iff_specializes_and : «expr ~ » x y ↔ «expr ⤳ » x y ∧ «expr ⤳ » y x :=\n  le_antisymm_iff\n#align inseparable_iff_specializes_and inseparable_iff_specializes_and\n-/\n\n",
 "inseparable_iff_mem_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print inseparable_iff_mem_closure /-\ntheorem inseparable_iff_mem_closure : «expr ~ » x y ↔ x ∈ closure ({y} : Set X) ∧ y ∈ closure ({x} : Set X) :=\n  inseparable_iff_specializes_and.trans <| by simp only [specializes_iff_mem_closure, and_comm']\n#align inseparable_iff_mem_closure inseparable_iff_mem_closure\n-/\n\n",
 "inseparable_iff_forall_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print inseparable_iff_forall_open /-\ntheorem inseparable_iff_forall_open : «expr ~ » x y ↔ ∀ s : Set X, IsOpen s → (x ∈ s ↔ y ∈ s) := by\n  simp only [inseparable_iff_specializes_and, specializes_iff_forall_open, ← forall_and, ← iff_def, iff.comm]\n#align inseparable_iff_forall_open inseparable_iff_forall_open\n-/\n\n",
 "inseparable_iff_forall_closed":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print inseparable_iff_forall_closed /-\ntheorem inseparable_iff_forall_closed : «expr ~ » x y ↔ ∀ s : Set X, IsClosed s → (x ∈ s ↔ y ∈ s) := by\n  simp only [inseparable_iff_specializes_and, specializes_iff_forall_closed, ← forall_and, ← iff_def]\n#align inseparable_iff_forall_closed inseparable_iff_forall_closed\n-/\n\n",
 "inseparable_iff_closure_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print inseparable_iff_closure_eq /-\ntheorem inseparable_iff_closure_eq : «expr ~ » x y ↔ closure ({x} : Set X) = closure {y} := by\n  simp only [inseparable_iff_specializes_and, specializes_iff_closure_subset, ← subset_antisymm_iff, eq_comm]\n#align inseparable_iff_closure_eq inseparable_iff_closure_eq\n-/\n\n",
 "inseparable_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print Inducing.inseparable_iff /-\ntheorem Inducing.inseparable_iff (hf : Inducing f) : «expr ~ » (f x) (f y) ↔ «expr ~ » x y := by\n  simp only [inseparable_iff_specializes_and, hf.specializes_iff]\n#align inducing.inseparable_iff Inducing.inseparable_iff\n-/\n\n",
 "inseparable_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print inseparable_def /-\ntheorem inseparable_def : «expr ~ » x y ↔ (nhds) x = (nhds) y :=\n  iff.rfl\n#align inseparable_def inseparable_def\n-/\n\n",
 "inducing_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem inducing_mk : Inducing (mk : X → SeparationQuotient X) :=\n  ⟨le_antisymm (continuous_iff_le_induced.1 continuous_mk) fun s hs =>\n      ⟨«expr '' » mk s, isOpenMap_mk s hs, preimage_image_mk_open hs⟩⟩\n#align inducing_mk inducing_mk\n\n",
 "image_mk_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_mk_closure : «expr '' » mk (closure s) = closure («expr '' » mk s) :=\n  (image_closure_subset_closure_image continuous_mk).antisymm <| isClosedMap_mk.closure_image_subset _\n#align image_mk_closure image_mk_closure\n\n",
 "continuous_within_at_lift₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem continuous_within_at_lift₂ {f : X → Y → Z} {hf : ∀ a b c d, «expr ~ » a c → «expr ~ » b d → f a b = f c d}\n    {s : Set (SeparationQuotient X × SeparationQuotient Y)} {x : X} {y : Y} :\n    ContinuousWithinAt (uncurry <| lift₂ f hf) s (mk x, mk y) ↔\n      ContinuousWithinAt (uncurry f) («expr ⁻¹' » (prod.map mk mk) s) (x, y) :=\n  tendsto_lift₂_nhdsWithin\n#align continuous_within_at_lift₂ continuous_within_at_lift₂\n\n",
 "continuous_within_at_lift":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem continuous_within_at_lift {f : X → Y} {hf : ∀ x y, «expr ~ » x y → f x = f y} {s : Set (SeparationQuotient X)}\n    {x : X} : ContinuousWithinAt (lift f hf) s (mk x) ↔ ContinuousWithinAt f («expr ⁻¹' » mk s) x :=\n  tendsto_lift_nhdsWithin_mk\n#align continuous_within_at_lift continuous_within_at_lift\n\n",
 "continuous_on_lift₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem continuous_on_lift₂ {f : X → Y → Z} {hf : ∀ a b c d, «expr ~ » a c → «expr ~ » b d → f a b = f c d}\n    {s : Set (SeparationQuotient X × SeparationQuotient Y)} :\n    ContinuousOn (uncurry <| lift₂ f hf) s ↔ ContinuousOn (uncurry f) («expr ⁻¹' » (prod.map mk mk) s) :=\n  by\n  simp_rw [ContinuousOn, (surjective_mk.prod_map surjective_mk).forall, Prod.forall, prod.map,\n    continuous_within_at_lift₂]\n  rfl\n#align continuous_on_lift₂ continuous_on_lift₂\n\n",
 "continuous_on_lift":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem continuous_on_lift {f : X → Y} {hf : ∀ x y, «expr ~ » x y → f x = f y} {s : Set (SeparationQuotient X)} :\n    ContinuousOn (lift f hf) s ↔ ContinuousOn f («expr ⁻¹' » mk s) := by\n  simp only [ContinuousOn, surjective_mk.forall, continuous_within_at_lift, mem_preimage]\n#align continuous_on_lift continuous_on_lift\n\n",
 "continuous_mk":
 "theorem continuous_mk : Continuous (mk : X → SeparationQuotient X) :=\n  continuous_quot_mk\n#align continuous_mk continuous_mk\n\n",
 "continuous_lift₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n@[simp]\ntheorem continuous_lift₂ {f : X → Y → Z} {hf : ∀ a b c d, «expr ~ » a c → «expr ~ » b d → f a b = f c d} :\n    Continuous (uncurry <| lift₂ f hf) ↔ Continuous (uncurry f) := by\n  simp only [continuous_iff_continuousOn_univ, continuous_on_lift₂, preimage_univ]\n#align continuous_lift₂ continuous_lift₂\n\n",
 "continuous_lift":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n@[simp]\ntheorem continuous_lift {f : X → Y} {hf : ∀ x y, «expr ~ » x y → f x = f y} : Continuous (lift f hf) ↔ Continuous f :=\n  by simp only [continuous_iff_continuousOn_univ, continuous_on_lift, preimage_univ]\n#align continuous_lift continuous_lift\n\n",
 "continuous_at_lift₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n@[simp]\ntheorem continuous_at_lift₂ {f : X → Y → Z} {hf : ∀ a b c d, «expr ~ » a c → «expr ~ » b d → f a b = f c d} {x : X}\n    {y : Y} : ContinuousAt (uncurry <| lift₂ f hf) (mk x, mk y) ↔ ContinuousAt (uncurry f) (x, y) :=\n  tendsto_lift₂_nhds\n#align continuous_at_lift₂ continuous_at_lift₂\n\n",
 "continuous_at_lift":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n@[simp]\ntheorem continuous_at_lift {f : X → Y} {hf : ∀ x y, «expr ~ » x y → f x = f y} {x : X} :\n    ContinuousAt (lift f hf) (mk x) ↔ ContinuousAt f x :=\n  tendsto_lift_nhds_mk\n#align continuous_at_lift continuous_at_lift\n\n",
 "comap_mk_nhds_set_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_set -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_set -/\n@[simp]\ntheorem comap_mk_nhds_set_image : comap mk ((nhds_set) («expr '' » mk s)) = (nhds_set) s :=\n  (inducing_mk.nhds_set_eq_comap _).symm\n#align comap_mk_nhds_set_image comap_mk_nhds_set_image\n\n",
 "comap_mk_nhds_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_set -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_set -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem comap_mk_nhds_set : comap mk ((nhds_set) t) = (nhds_set) («expr ⁻¹' » mk t) := by\n  conv_lhs => rw [← image_preimage_eq t surjective_mk, comap_mk_nhds_set_image]\n#align comap_mk_nhds_set comap_mk_nhds_set\n\n",
 "comap_mk_nhds_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n@[simp]\ntheorem comap_mk_nhds_mk : comap mk ((nhds) (mk x)) = (nhds) x :=\n  (inducing_mk.nhds_eq_comap _).symm\n#align comap_mk_nhds_mk comap_mk_nhds_mk\n\n",
 "antisymm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⤳ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n#print Specializes.antisymm /-\ntheorem Specializes.antisymm (h₁ : «expr ⤳ » x y) (h₂ : «expr ⤳ » y x) : «expr ~ » x y :=\n  le_antisymm h₁ h₂\n#align specializes.antisymm Specializes.antisymm\n-/\n\n"}