{"tendsto_nhds_generate_from":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem tendsto_nhds_generate_from {β : Type _} {m : α → β} {f : Filter α} {g : Set (Set β)} {b : β}\n    (h : ∀ s ∈ g, b ∈ s → «expr ⁻¹' » m s ∈ f) : Tendsto m f (@nhds β (generateFrom g) b) := by\n  rw [nhds_generate_from] <;>\n    exact tendsto_infi.2 fun s => tendsto_infi.2 fun ⟨hbs, hsg⟩ => tendsto_principal.2 <| h s hsg hbs\n#align tendsto_nhds_generate_from tendsto_nhds_generate_from\n\n",
 "singletons_open_iff_discrete":
 "#print singletons_open_iff_discrete /-\ntheorem singletons_open_iff_discrete {X : Type _} [TopologicalSpace X] :\n    (∀ a : X, IsOpen ({a} : Set X)) ↔ DiscreteTopology X :=\n  ⟨fun h => ⟨eq_bot_of_singletons_open h⟩, fun a _ => @isOpen_discrete _ _ a _⟩\n#align singletons_open_iff_discrete singletons_open_iff_discrete\n-/\n\n",
 "set_of_is_open_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\ntheorem set_of_is_open_injective : injective fun t : TopologicalSpace α => { s | (is_open_of t) s } :=\n  (gci_generate_from α).l_injective\n#align set_of_is_open_injective set_of_is_open_injective\n\n",
 "setOf_isOpen_supₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n#print setOf_isOpen_supₛ /-\ntheorem setOf_isOpen_supₛ {T : Set (TopologicalSpace α)} :\n    { s | (is_open_of (supₛ T)) s } =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        { s | (is_open_of t) s } :=\n  (topological_space.gc_generate_from α).l_Sup\n#align set_of_is_open_Sup setOf_isOpen_supₛ\n-/\n\n",
 "setOf_isOpen_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n#print setOf_isOpen_supᵢ /-\ntheorem setOf_isOpen_supᵢ {t : ι → TopologicalSpace α} :\n    { s |\n        (is_open_of\n            («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (t i)))\n          s } =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        { s | (is_open_of (t i)) s } :=\n  (topological_space.gc_generate_from α).l_supr\n#align set_of_is_open_supr setOf_isOpen_supᵢ\n-/\n\n",
 "setOf_isOpen_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n#print setOf_isOpen_sup /-\ntheorem setOf_isOpen_sup (t₁ t₂ : TopologicalSpace α) :\n    { s | (is_open_of («expr ⊔ » t₁ t₂)) s } = { s | (is_open_of t₁) s } ∩ { s | (is_open_of t₂) s } :=\n  rfl\n#align set_of_is_open_sup setOf_isOpen_sup\n-/\n\n",
 "preimage_nhds_coinduced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print preimage_nhds_coinduced /-\ntheorem preimage_nhds_coinduced [TopologicalSpace α] {π : α → β} {s : Set β} {a : α}\n    (hs : s ∈ @nhds β (TopologicalSpace.coinduced π ‹_›) (π a)) : «expr ⁻¹' » π s ∈ (nhds) a :=\n  by\n  letI := TopologicalSpace.coinduced π ‹_›\n  rcases mem_nhds_iff.mp hs with ⟨V, hVs, V_op, mem_V⟩\n  exact mem_nhds_iff.mpr ⟨«expr ⁻¹' » π V, Set.preimage_mono hVs, V_op, mem_V⟩\n#align preimage_nhds_coinduced preimage_nhds_coinduced\n-/\n\n",
 "nhds_true":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print nhds_true /-\n@[simp]\ntheorem nhds_true : (nhds) True = pure True :=\n  le_antisymm (le_pure_iff.2 <| isOpen_singleton_true.mem_nhds <| mem_singleton _) (pure_le_nhds _)\n#align nhds_true nhds_true\n-/\n\n",
 "nhds_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print nhds_top /-\ntheorem nhds_top {a : α} : @nhds α («expr⊤») a = «expr⊤» :=\n  (gc_nhds a).u_top\n#align nhds_top nhds_top\n-/\n\n",
 "nhds_mono":
 "#print nhds_mono /-\ntheorem nhds_mono {t₁ t₂ : TopologicalSpace α} {a : α} (h : t₁ ≤ t₂) : @nhds α t₁ a ≤ @nhds α t₂ a :=\n  (gc_nhds a).monotone_u h\n#align nhds_mono nhds_mono\n-/\n\n",
 "nhds_mk_of_nhds_single":
 "theorem nhds_mk_of_nhds_single [DecidableEq α] {a₀ : α} {l : Filter α} (h : pure a₀ ≤ l) (b : α) :\n    @nhds α (TopologicalSpace.mkOfNhds <| update pure a₀ l) b = (update pure a₀ l : α → Filter α) b :=\n  by\n  refine' nhds_mk_of_nhds _ _ (le_update_iff.mpr ⟨h, fun _ _ => le_rfl⟩) fun a s hs => _\n  rcases eq_or_ne a a₀ with (rfl | ha)\n  · refine' ⟨s, hs, subset.rfl, fun b hb => _⟩\n    rcases eq_or_ne b a with (rfl | hb)\n    · exact hs\n    · rwa [update_noteq hb]\n  · have hs' := hs\n    rw [update_noteq ha] at hs⊢\n    exact ⟨{a}, rfl, singleton_subset_iff.mpr hs, forall_eq.2 hs'⟩\n#align nhds_mk_of_nhds_single nhds_mk_of_nhds_single\n\n",
 "nhds_mk_of_nhds_filter_basis":
 "theorem nhds_mk_of_nhds_filter_basis (B : α → FilterBasis α) (a : α) (h₀ : ∀ (x), ∀ n ∈ B x, x ∈ n)\n    (h₁ : ∀ (x), ∀ n ∈ B x, ∃ n₁ ∈ B x, n₁ ⊆ n ∧ ∀ x' ∈ n₁, ∃ n₂ ∈ B x', n₂ ⊆ n) :\n    @nhds α (TopologicalSpace.mkOfNhds fun x => (B x).filter) a = (B a).filter :=\n  by\n  rw [TopologicalSpace.nhds_mkOfNhds] <;> intro x n hn <;> obtain ⟨m, hm₁, hm₂⟩ := (B x).mem_filter_iff.mp hn\n  · exact hm₂ (h₀ _ _ hm₁)\n  · obtain ⟨n₁, hn₁, hn₂, hn₃⟩ := h₁ x m hm₁\n    refine' ⟨n₁, (B x).mem_filter_of_mem hn₁, hn₂.trans hm₂, fun x' hx' => (B x').mem_filter_iff.mp _⟩\n    obtain ⟨n₂, hn₄, hn₅⟩ := hn₃ x' hx'\n    exact ⟨n₂, hn₄, hn₅.trans hm₂⟩\n#align nhds_mk_of_nhds_filter_basis nhds_mk_of_nhds_filter_basis\n\n",
 "nhds_mk_of_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem nhds_mk_of_nhds (n : α → Filter α) (a : α) (h₀ : pure ≤ n)\n    (h₁ : ∀ a s, s ∈ n a → ∃ t ∈ n a, t ⊆ s ∧ ∀ a' ∈ t, s ∈ n a') : @nhds α (TopologicalSpace.mkOfNhds n) a = n a :=\n  by\n  letI := TopologicalSpace.mkOfNhds n\n  refine' le_antisymm (fun s hs => _) fun s hs => _\n  · have h₀ : { b | s ∈ n b } ⊆ s := fun b hb => mem_pure.1 <| h₀ b hb\n    have h₁ : { b | s ∈ n b } ∈ (nhds) a :=\n      by\n      refine' IsOpen.mem_nhds (fun b (hb : s ∈ n b) => _) hs\n      rcases h₁ _ _ hb with ⟨t, ht, hts, h⟩\n      exact mem_of_superset ht h\n    exact mem_of_superset h₁ h₀\n  · rcases(@mem_nhds_iff α (TopologicalSpace.mkOfNhds n) _ _).1 hs with ⟨t, hts, ht, hat⟩\n    exact (n a).sets_of_superset (ht _ hat) hts\n#align nhds_mk_of_nhds nhds_mk_of_nhds\n\n",
 "nhds_infₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print nhds_infₛ /-\ntheorem nhds_infₛ {s : Set (TopologicalSpace α)} {a : α} :\n    @nhds α (infₛ s) a =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (@nhds α t a) :=\n  (gc_nhds a).u_Inf\n#align nhds_Inf nhds_infₛ\n-/\n\n",
 "nhds_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print nhds_infᵢ /-\ntheorem nhds_infᵢ {ι : Sort _} {t : ι → TopologicalSpace α} {a : α} :\n    @nhds α (infᵢ t) a =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (@nhds α (t i) a) :=\n  (gc_nhds a).u_infi\n#align nhds_infi nhds_infᵢ\n-/\n\n",
 "nhds_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print nhds_inf /-\ntheorem nhds_inf {t₁ t₂ : TopologicalSpace α} {a : α} :\n    @nhds α («expr ⊓ » t₁ t₂) a = «expr ⊓ » (@nhds α t₁ a) (@nhds α t₂ a) :=\n  (gc_nhds a).u_inf\n#align nhds_inf nhds_inf\n-/\n\n",
 "nhds_induced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print nhds_induced /-\ntheorem nhds_induced [T : TopologicalSpace α] (f : β → α) (a : β) :\n    @nhds β (TopologicalSpace.induced f T) a = comap f ((nhds) (f a)) :=\n  by\n  ext s\n  rw [mem_nhds_induced, mem_comap]\n#align nhds_induced nhds_induced\n-/\n\n",
 "nhds_generate_from":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `filter.principal -/\ntheorem nhds_generate_from {g : Set (Set α)} {a : α} :\n    @nhds α (generateFrom g) a =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        ((filter.principal) s) :=\n  by\n  rw [nhds_def]\n  refine' le_antisymm (binfᵢ_mono fun s ⟨as, sg⟩ => ⟨as, generate_open.basic _ sg⟩) _\n  refine' le_infᵢ₂ fun s hs => _; cases' hs with ha hs\n  induction hs\n  case basic s hs => exact infᵢ₂_le _ ⟨ha, hs⟩\n  case univ => exact le_top.trans_eq principal_univ.symm\n  case inter s t hs' ht' hs ht => exact (le_inf (hs ha.1) (ht ha.2)).trans_eq inf_principal\n  case sUnion S hS' hS =>\n    rcases ha with ⟨t, htS, hat⟩\n    exact (hS t htS hat).trans (principal_mono.2 <| subset_sUnion_of_mem htS)\n#align nhds_generate_from nhds_generate_from\n\n",
 "nhds_false":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print nhds_false /-\n@[simp]\ntheorem nhds_false : (nhds) False = «expr⊤» :=\n  TopologicalSpace.nhds_generateFrom.trans <| by simp [@and_comm (_ ∈ _)]\n#align nhds_false nhds_false\n-/\n\n",
 "nhds_discrete":
 "#print nhds_discrete /-\n@[simp]\ntheorem nhds_discrete (α : Type _) [TopologicalSpace α] [DiscreteTopology α] : @nhds α _ = pure :=\n  le_antisymm (fun _ s hs => (isOpen_discrete s).mem_nhds hs) pure_le_nhds\n#align nhds_discrete nhds_discrete\n-/\n\n",
 "nhdsAdjoint_nhds_of_ne":
 "#print nhdsAdjoint_nhds_of_ne /-\ntheorem nhdsAdjoint_nhds_of_ne {α : Type _} (a : α) (f : Filter α) {b : α} (h : b ≠ a) :\n    @nhds α (nhdsAdjoint a f) b = pure b := by\n  apply le_antisymm\n  · intro U hU\n    rw [mem_nhds_iff]\n    use {b}\n    simp only [and_true_iff, singleton_subset_iff, mem_singleton]\n    refine' ⟨hU, fun ha => (h.symm ha).elim⟩\n  · exact @pure_le_nhds α (nhdsAdjoint a f) b\n#align nhds_adjoint_nhds_of_ne nhdsAdjoint_nhds_of_ne\n-/\n\n",
 "nhdsAdjoint_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print nhdsAdjoint_nhds /-\ntheorem nhdsAdjoint_nhds {α : Type _} (a : α) (f : Filter α) : @nhds α (nhdsAdjoint a f) a = «expr ⊔ » (pure a) f :=\n  by\n  ext U\n  rw [mem_nhds_iff]\n  constructor\n  · rintro ⟨t, htU, ht, hat⟩\n    exact ⟨htU hat, mem_of_superset (ht hat) htU⟩\n  · rintro ⟨haU, hU⟩\n    exact ⟨U, subset.rfl, fun h => hU, haU⟩\n#align nhds_adjoint_nhds nhdsAdjoint_nhds\n-/\n\n",
 "mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_closed_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_closed_of -/\n#print IsClosed.mono /-\ntheorem IsClosed.mono {α} {t₁ t₂ : TopologicalSpace α} {s : Set α} (hs : (is_closed_of t₂) s) (h : t₁ ≤ t₂) :\n    (is_closed_of t₁) s :=\n  (@isOpen_compl_iff α t₁ s).mp <| hs.is_open_compl.mono h\n#align is_closed.mono IsClosed.mono\n-/\n\n",
 "mk_of_closure_sets":
 "theorem mk_of_closure_sets {s : Set (Set α)} {hs : { u | GenerateOpen s u } = s} :\n    TopologicalSpace.mkOfClosure s hs = TopologicalSpace.generateFrom s :=\n  topologicalSpace_eq hs.symm\n#align mk_of_closure_sets mk_of_closure_sets\n\n",
 "mem_nhds_induced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print mem_nhds_induced /-\n-- 𝓝 in the induced topology\ntheorem mem_nhds_induced [T : TopologicalSpace α] (f : β → α) (a : β) (s : Set β) :\n    s ∈ @nhds β (TopologicalSpace.induced f T) a ↔ ∃ u ∈ (nhds) (f a), «expr ⁻¹' » f u ⊆ s :=\n  by\n  simp only [mem_nhds_iff, isOpen_induced_iff, exists_prop, Set.mem_setOf_eq]\n  constructor\n  · rintro ⟨u, usub, ⟨v, openv, ueq⟩, au⟩\n    exact ⟨v, ⟨v, Set.Subset.refl v, openv, by rwa [← ueq] at au⟩, by rw [ueq] <;> exact usub⟩\n  rintro ⟨u, ⟨v, vsubu, openv, amem⟩, finvsub⟩\n  exact ⟨«expr ⁻¹' » f v, Set.Subset.trans (Set.preimage_mono vsubu) finvsub, ⟨⟨v, openv, rfl⟩, amem⟩⟩\n#align mem_nhds_induced mem_nhds_induced\n-/\n\n",
 "mem_nhds_discrete":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print mem_nhds_discrete /-\ntheorem mem_nhds_discrete [TopologicalSpace α] [DiscreteTopology α] {x : α} {s : Set α} : s ∈ (nhds) x ↔ x ∈ s := by\n  rw [nhds_discrete, mem_pure]\n#align mem_nhds_discrete mem_nhds_discrete\n-/\n\n",
 "map_nhds_induced_of_surjective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print map_nhds_induced_of_surjective /-\ntheorem map_nhds_induced_of_surjective [T : TopologicalSpace α] {f : β → α} (hf : surjective f) (a : β) :\n    map f (@nhds β (TopologicalSpace.induced f T) a) = (nhds) (f a) := by rw [nhds_induced, map_comap_of_surjective hf]\n#align map_nhds_induced_of_surjective map_nhds_induced_of_surjective\n-/\n\n",
 "map_nhds_induced_of_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print map_nhds_induced_of_mem /-\ntheorem map_nhds_induced_of_mem {a : α} (h : range f ∈ (nhds) (f a)) : map f (@nhds α (induced f t) a) = (nhds) (f a) :=\n  by rw [nhds_induced, Filter.map_comap_of_mem h]\n#align map_nhds_induced_of_mem map_nhds_induced_of_mem\n-/\n\n",
 "map_nhds_induced_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n#print map_nhds_induced_eq /-\ntheorem map_nhds_induced_eq (a : α) : map f (@nhds α (induced f t) a) = nhds_within (range f) (f a) := by\n  rw [nhds_induced, Filter.map_comap, nhdsWithin]\n#align map_nhds_induced_eq map_nhds_induced_eq\n-/\n\n",
 "left_inverse_generate_from":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\ntheorem left_inverse_generate_from : left_inverse generateFrom fun t : TopologicalSpace α => { s | (is_open_of t) s } :=\n  (gci_generate_from α).u_l_left_inverse\n#align left_inverse_generate_from left_inverse_generate_from\n\n",
 "le_of_nhds_le_nhds":
 "#print le_of_nhds_le_nhds /-\ntheorem le_of_nhds_le_nhds {t₁ t₂ : TopologicalSpace α} (h : ∀ x, @nhds α t₁ x ≤ @nhds α t₂ x) : t₁ ≤ t₂ :=\n  by\n  intro s\n  rw [@isOpen_iff_mem_nhds _ t₁, @isOpen_iff_mem_nhds α t₂]\n  exact fun hs a ha => h _ (hs _ ha)\n#align le_of_nhds_le_nhds le_of_nhds_le_nhds\n-/\n\n",
 "le_nhdsAdjoint_iff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (b «expr ≠ » a) -/\n#print le_nhdsAdjoint_iff' /-\ntheorem le_nhdsAdjoint_iff' {α : Type _} (a : α) (f : Filter α) (t : TopologicalSpace α) :\n    t ≤ nhdsAdjoint a f ↔ @nhds α t a ≤ «expr ⊔ » (pure a) f ∧ ∀ (b) (_ : b ≠ a), @nhds α t b = pure b :=\n  by\n  rw [le_iff_nhds]\n  constructor\n  · intro h\n    constructor\n    · specialize h a\n      rwa [nhdsAdjoint_nhds] at h\n    · intro b hb\n      apply le_antisymm _ (pure_le_nhds b)\n      specialize h b\n      rwa [nhdsAdjoint_nhds_of_ne a f hb] at h\n  · rintro ⟨h, h'⟩ b\n    by_cases hb : b = a\n    · rwa [hb, nhdsAdjoint_nhds]\n    · simp [nhdsAdjoint_nhds_of_ne a f hb, h' b hb]\n#align le_nhds_adjoint_iff' le_nhdsAdjoint_iff'\n-/\n\n",
 "le_nhdsAdjoint_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n#print le_nhdsAdjoint_iff /-\ntheorem le_nhdsAdjoint_iff {α : Type _} (a : α) (f : Filter α) (t : TopologicalSpace α) :\n    t ≤ nhdsAdjoint a f ↔ @nhds α t a ≤ «expr ⊔ » (pure a) f ∧ ∀ b, b ≠ a → (is_open_of t) {b} :=\n  by\n  change _ ↔ _ ∧ ∀ b : α, b ≠ a → IsOpen {b}\n  rw [le_nhdsAdjoint_iff', and_congr_right_iff]\n  apply fun h => forall_congr' fun b => _\n  rw [@isOpen_singleton_iff_nhds_eq_pure α t b]\n#align le_nhds_adjoint_iff le_nhdsAdjoint_iff\n-/\n\n",
 "le_induced_generateFrom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print le_induced_generateFrom /-\ntheorem le_induced_generateFrom {α β} [t : TopologicalSpace α] {b : Set (Set β)} {f : α → β}\n    (h : ∀ a : Set β, a ∈ b → IsOpen («expr ⁻¹' » f a)) : t ≤ induced f (generateFrom b) :=\n  by\n  rw [induced_generateFrom_eq]\n  apply le_generateFrom\n  simp only [mem_image, and_imp, forall_apply_eq_imp_iff₂, exists_imp]\n  exact h\n#align le_induced_generate_from le_induced_generateFrom\n-/\n\n",
 "le_induced":
 "#print Continuous.le_induced /-\ntheorem Continuous.le_induced (h : @Continuous α β t t' f) : t ≤ t'.induced f :=\n  coinduced_le_iff_le_induced.1 h.coinduced_le\n#align continuous.le_induced Continuous.le_induced\n-/\n\n",
 "le_iff_nhds":
 "#print le_iff_nhds /-\ntheorem le_iff_nhds {α : Type _} (t t' : TopologicalSpace α) : t ≤ t' ↔ ∀ x, @nhds α t x ≤ @nhds α t' x :=\n  ⟨fun h x => nhds_mono h, le_of_nhds_le_nhds⟩\n#align le_iff_nhds le_iff_nhds\n-/\n\n",
 "le_generate_from_iff_subset_is_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\ntheorem le_generate_from_iff_subset_is_open {g : Set (Set α)} {t : TopologicalSpace α} :\n    t ≤ TopologicalSpace.generateFrom g ↔ g ⊆ { s | (is_open_of t) s } :=\n  ⟨fun ht s hs => ht _ <| generate_open.basic s hs, fun hg s hs =>\n    hs.rec_on (fun v hv => hg hv) t.is_open_univ (fun u v _ _ => t.is_open_inter u v) fun k _ => t.is_open_sUnion k⟩\n#align le_generate_from_iff_subset_is_open le_generate_from_iff_subset_is_open\n\n",
 "le_generateFrom":
 "#print le_generateFrom /-\ntheorem le_generateFrom {t : TopologicalSpace α} {g : Set (Set α)} (h : ∀ s ∈ g, IsOpen s) : t ≤ generateFrom g :=\n  le_generateFrom_iff_subset_isOpen.2 h\n#align le_generate_from le_generateFrom\n-/\n\n",
 "le_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\nprotected theorem le_def {α} {t s : TopologicalSpace α} : t ≤ s ↔ is_open_of s ≤ is_open_of t :=\n  iff.rfl\n#align le_def le_def\n\n",
 "is_open_generate_from_of_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Mario Carneiro\n-/\ntheorem is_open_generate_from_of_mem {g : Set (Set α)} {s : Set α} (hs : s ∈ g) : (is_open_of (generateFrom g)) s :=\n  generate_open.basic s hs\n#align is_open_generate_from_of_mem is_open_generate_from_of_mem\n\n",
 "isOpen_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print TopologicalSpace.isOpen_top_iff /-\n/-- The only open sets in the indiscrete topology are the empty set and the whole space. -/\ntheorem TopologicalSpace.isOpen_top_iff {α} (U : Set α) : (is_open_of («expr⊤»)) U ↔ U = ∅ ∨ U = univ :=\n  ⟨fun h => by\n    induction' h with V h _ _ _ _ ih₁ ih₂ _ _ ih\n    · cases h; · exact or.inr rfl\n    · obtain ⟨rfl | rfl, rfl | rfl⟩ := ih₁, ih₂ <;> simp\n    · rw [sUnion_eq_empty, or_iff_not_imp_left]\n      intro h\n      push_neg  at h\n      obtain ⟨U, hU, hne⟩ := h\n      have := (ih U hU).resolve_left hne\n      subst this\n      refine' sUnion_eq_univ_iff.2 fun a => ⟨_, hU, trivial⟩,\n    by\n    rintro (rfl | rfl)\n    exacts[@isOpen_empty _ («expr⊤»), @isOpen_univ _ («expr⊤»)]⟩\n#align topological_space.is_open_top_iff TopologicalSpace.isOpen_top_iff\n-/\n\n",
 "isOpen_supᵢ_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n#print isOpen_supᵢ_iff /-\ntheorem isOpen_supᵢ_iff {s : Set α} :\n    (is_open_of («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (t i)))\n        s ↔\n      ∀ i, (is_open_of (t i)) s :=\n  show s ∈ setOf (is_open_of (supᵢ t)) ↔ s ∈ { x : Set α | ∀ i : ι, (is_open_of (t i)) x } by simp [setOf_isOpen_supᵢ]\n#align is_open_supr_iff isOpen_supᵢ_iff\n-/\n\n",
 "isOpen_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n#print isOpen_sup /-\ntheorem isOpen_sup {t₁ t₂ : TopologicalSpace α} {s : Set α} :\n    (is_open_of («expr ⊔ » t₁ t₂)) s ↔ (is_open_of t₁) s ∧ (is_open_of t₂) s :=\n  iff.rfl\n#align is_open_sup isOpen_sup\n-/\n\n",
 "isOpen_singleton_true":
 "#print isOpen_singleton_true /-\n@[simp]\ntheorem isOpen_singleton_true : IsOpen ({True} : Set Prop) :=\n  topological_space.generate_open.basic _ (mem_singleton _)\n#align is_open_singleton_true isOpen_singleton_true\n-/\n\n",
 "isOpen_singleton_nhdsAdjoint":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n#print isOpen_singleton_nhdsAdjoint /-\ntheorem isOpen_singleton_nhdsAdjoint {α : Type _} {a b : α} (f : Filter α) (hb : b ≠ a) :\n    (is_open_of (nhdsAdjoint a f)) {b} :=\n  by\n  rw [isOpen_singleton_iff_nhds_eq_pure]\n  exact nhdsAdjoint_nhds_of_ne a f hb\n#align is_open_singleton_nhds_adjoint isOpen_singleton_nhdsAdjoint\n-/\n\n",
 "isOpen_induced_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print isOpen_induced_iff /-\ntheorem isOpen_induced_iff [t : TopologicalSpace β] {s : Set α} {f : α → β} :\n    (is_open_of (t.induced f)) s ↔ ∃ t, IsOpen t ∧ «expr ⁻¹' » f t = s :=\n  iff.rfl\n#align is_open_induced_iff isOpen_induced_iff\n-/\n\n",
 "isOpen_induced_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print isOpen_induced_eq /-\ntheorem isOpen_induced_eq {s : Set α} : (is_open_of (induced f t)) s ↔ s ∈ «expr '' » (preimage f) { s | IsOpen s } :=\n  iff.rfl\n#align is_open_induced_eq isOpen_induced_eq\n-/\n\n",
 "isOpen_induced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print isOpen_induced /-\ntheorem isOpen_induced {s : Set β} (h : IsOpen s) : (is_open_of (induced f t)) («expr ⁻¹' » f s) :=\n  ⟨s, h, rfl⟩\n#align is_open_induced isOpen_induced\n-/\n\n",
 "isOpen_implies_isOpen_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n#print isOpen_implies_isOpen_iff /-\ntheorem isOpen_implies_isOpen_iff {a b : TopologicalSpace α} : (∀ s, (is_open_of a) s → (is_open_of b) s) ↔ b ≤ a :=\n  iff.rfl\n#align is_open_implies_is_open_iff isOpen_implies_isOpen_iff\n-/\n\n",
 "isOpen_iff_continuous_mem":
 "#print isOpen_iff_continuous_mem /-\ntheorem isOpen_iff_continuous_mem {s : Set α} : IsOpen s ↔ Continuous fun x => x ∈ s :=\n  continuous_Prop.symm\n#align is_open_iff_continuous_mem isOpen_iff_continuous_mem\n-/\n\n",
 "isOpen_discrete":
 "#print isOpen_discrete /-\n@[simp]\ntheorem isOpen_discrete [TopologicalSpace α] [DiscreteTopology α] (s : Set α) : IsOpen s :=\n  (discrete_topology.eq_bot α).symm ▸ trivial\n#align is_open_discrete isOpen_discrete\n-/\n\n",
 "isOpen_coinduced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print isOpen_coinduced /-\ntheorem isOpen_coinduced {t : TopologicalSpace α} {s : Set β} {f : α → β} :\n    (is_open_of (t.coinduced f)) s ↔ IsOpen («expr ⁻¹' » f s) :=\n  iff.rfl\n#align is_open_coinduced isOpen_coinduced\n-/\n\n",
 "isClosed_supᵢ_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_closed_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_closed_of -/\n#print isClosed_supᵢ_iff /-\ntheorem isClosed_supᵢ_iff {s : Set α} :\n    (is_closed_of\n          («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (t i)))\n        s ↔\n      ∀ i, (is_closed_of (t i)) s :=\n  by simp [← isOpen_compl_iff, isOpen_supᵢ_iff]\n#align is_closed_supr_iff isClosed_supᵢ_iff\n-/\n\n",
 "isClosed_induced_iff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_closed_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print isClosed_induced_iff' /-\ntheorem isClosed_induced_iff' [t : TopologicalSpace β] {f : α → β} {s : Set α} :\n    (is_closed_of (t.induced f)) s ↔ ∀ a, f a ∈ closure («expr '' » f s) → a ∈ s := by\n  simp only [← closure_subset_iff_isClosed, subset_def, closure_induced]\n#align is_closed_induced_iff' isClosed_induced_iff'\n-/\n\n",
 "isClosed_induced_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_closed_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print isClosed_induced_iff /-\ntheorem isClosed_induced_iff [t : TopologicalSpace β] {s : Set α} {f : α → β} :\n    (is_closed_of (t.induced f)) s ↔ ∃ t, IsClosed t ∧ «expr ⁻¹' » f t = s :=\n  by\n  simp only [← isOpen_compl_iff, isOpen_induced_iff]\n  exact compl_surjective.exists.trans (by simp only [preimage_compl, compl_inj_iff])\n#align is_closed_induced_iff isClosed_induced_iff\n-/\n\n",
 "isClosed_discrete":
 "#print isClosed_discrete /-\n@[simp]\ntheorem isClosed_discrete [TopologicalSpace α] [DiscreteTopology α] (s : Set α) : IsClosed s :=\n  isOpen_compl_iff.1 <| isOpen_discrete _\n#align is_closed_discrete isClosed_discrete\n-/\n\n",
 "induced_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print induced_top /-\n@[simp]\ntheorem induced_top : («expr⊤» : TopologicalSpace α).induced g = «expr⊤» :=\n  (gc_coinduced_induced g).u_top\n#align induced_top induced_top\n-/\n\n",
 "induced_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n#print Equiv.induced_symm /-\ntheorem Equiv.induced_symm {α β : Type _} (e : «expr ≃ » α β) :\n    TopologicalSpace.induced e.symm = TopologicalSpace.coinduced e :=\n  by\n  ext (t U)\n  constructor\n  · rintro ⟨V, hV, rfl⟩\n    rwa [isOpen_coinduced, e.preimage_symm_preimage]\n  · exact fun hU => ⟨«expr ⁻¹' » e U, hU, e.symm_preimage_preimage _⟩\n#align equiv.induced_symm Equiv.induced_symm\n-/\n\n",
 "induced_mono":
 "#print induced_mono /-\ntheorem induced_mono (h : t₁ ≤ t₂) : t₁.induced g ≤ t₂.induced g :=\n  (gc_coinduced_induced g).monotone_u h\n#align induced_mono induced_mono\n-/\n\n",
 "induced_infᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print induced_infᵢ /-\n@[simp]\ntheorem induced_infᵢ {ι : Sort w} {t : ι → TopologicalSpace α} :\n    («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (t i)).induced g =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        ((t i).induced g) :=\n  (gc_coinduced_induced g).u_infi\n#align induced_infi induced_infᵢ\n-/\n\n",
 "induced_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print induced_inf /-\n@[simp]\ntheorem induced_inf : («expr ⊓ » t₁ t₂).induced g = «expr ⊓ » (t₁.induced g) (t₂.induced g) :=\n  (gc_coinduced_induced g).u_inf\n#align induced_inf induced_inf\n-/\n\n",
 "induced_iff_nhds_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print induced_iff_nhds_eq /-\ntheorem induced_iff_nhds_eq [tα : TopologicalSpace α] [tβ : TopologicalSpace β] (f : β → α) :\n    tβ = tα.induced f ↔ ∀ b, (nhds) b = comap f (nhds <| f b) :=\n  ⟨fun h a => h.symm ▸ nhds_induced f a, fun h => eq_of_nhds_eq_nhds fun x => by rw [h, nhds_induced]⟩\n#align induced_iff_nhds_eq induced_iff_nhds_eq\n-/\n\n",
 "induced_id":
 "#print induced_id /-\ntheorem induced_id [t : TopologicalSpace α] : t.induced id = t :=\n  topologicalSpace_eq <| funext fun s => propext <| ⟨fun ⟨s', hs, h⟩ => h ▸ hs, fun hs => ⟨s, hs, rfl⟩⟩\n#align induced_id induced_id\n-/\n\n",
 "induced_generateFrom_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print induced_generateFrom_eq /-\ntheorem induced_generateFrom_eq {α β} {b : Set (Set β)} {f : α → β} :\n    (generateFrom b).induced f = TopologicalSpace.generateFrom («expr '' » (preimage f) b) :=\n  le_antisymm (le_generateFrom <| ball_image_iff.2 fun s hs => ⟨s, generate_open.basic _ hs, rfl⟩)\n    (coinduced_le_iff_le_induced.1 <| le_generateFrom fun s hs => generate_open.basic _ <| mem_image_of_mem _ hs)\n#align induced_generate_from_eq induced_generateFrom_eq\n-/\n\n",
 "induced_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print induced_const /-\ntheorem induced_const [t : TopologicalSpace α] {x : α} : (t.induced fun y : β => x) = «expr⊤» :=\n  le_antisymm le_top (@continuous_const β α («expr⊤») t x).le_induced\n#align induced_const induced_const\n-/\n\n",
 "induced_compose":
 "#print induced_compose /-\ntheorem induced_compose [tγ : TopologicalSpace γ] {f : α → β} {g : β → γ} :\n    (tγ.induced g).induced f = tγ.induced (g ∘ f) :=\n  topologicalSpace_eq <|\n    funext fun s =>\n      propext <|\n        ⟨fun ⟨s', ⟨s, hs, h₂⟩, h₁⟩ => h₁ ▸ h₂ ▸ ⟨s, hs, rfl⟩, fun ⟨s, hs, h⟩ => ⟨preimage g s, ⟨s, hs, rfl⟩, h ▸ rfl⟩⟩\n#align induced_compose induced_compose\n-/\n\n",
 "generate_from_surjective":
 "theorem generate_from_surjective : surjective (generateFrom : Set (Set α) → TopologicalSpace α) :=\n  (gci_generate_from α).u_surjective\n#align generate_from_surjective generate_from_surjective\n\n",
 "generate_from_set_of_is_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\ntheorem generate_from_set_of_is_open (t : TopologicalSpace α) : generateFrom { s | (is_open_of t) s } = t :=\n  (gci_generate_from α).u_l_eq t\n#align generate_from_set_of_is_open generate_from_set_of_is_open\n\n",
 "generate_from_anti":
 "@[mono]\ntheorem generate_from_anti {α} {g₁ g₂ : Set (Set α)} (h : g₁ ⊆ g₂) : generateFrom g₂ ≤ generateFrom g₁ :=\n  (gc_generate_from _).monotone_u h\n#align generate_from_anti generate_from_anti\n\n",
 "generateFrom_unionₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print generateFrom_unionₛ /-\ntheorem generateFrom_unionₛ {S : Set (Set (Set α))} :\n    TopologicalSpace.generateFrom (⋃₀ S) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (TopologicalSpace.generateFrom s) :=\n  (topological_space.gc_generate_from α).u_Inf\n#align generate_from_sUnion generateFrom_unionₛ\n-/\n\n",
 "generateFrom_unionᵢ_isOpen":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print generateFrom_unionᵢ_isOpen /-\ntheorem generateFrom_unionᵢ_isOpen (f : ι → TopologicalSpace α) :\n    TopologicalSpace.generateFrom\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n          { s | (is_open_of (f i)) s }) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (f i) :=\n  (topological_space.gci_generate_from α).u_infi_l f\n#align generate_from_Union_is_open generateFrom_unionᵢ_isOpen\n-/\n\n",
 "generateFrom_unionᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n#print generateFrom_unionᵢ /-\ntheorem generateFrom_unionᵢ {f : ι → Set (Set α)} :\n    TopologicalSpace.generateFrom\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (TopologicalSpace.generateFrom (f i)) :=\n  (topological_space.gc_generate_from α).u_infi\n#align generate_from_Union generateFrom_unionᵢ\n-/\n\n",
 "generateFrom_union_isOpen":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print generateFrom_union_isOpen /-\ntheorem generateFrom_union_isOpen (a b : TopologicalSpace α) :\n    TopologicalSpace.generateFrom ({ s | (is_open_of a) s } ∪ { s | (is_open_of b) s }) = «expr ⊓ » a b :=\n  (topological_space.gci_generate_from α).u_inf_l a b\n#align generate_from_union_is_open generateFrom_union_isOpen\n-/\n\n",
 "generateFrom_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print generateFrom_union /-\ntheorem generateFrom_union (a₁ a₂ : Set (Set α)) :\n    TopologicalSpace.generateFrom (a₁ ∪ a₂) =\n      «expr ⊓ » (TopologicalSpace.generateFrom a₁) (TopologicalSpace.generateFrom a₂) :=\n  (topological_space.gc_generate_from α).u_inf\n#align generate_from_union generateFrom_union\n-/\n\n",
 "generateFrom_interᵢ_of_generateFrom_eq_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print generateFrom_interᵢ_of_generateFrom_eq_self /-\ntheorem generateFrom_interᵢ_of_generateFrom_eq_self (f : ι → Set (Set α))\n    (hf : ∀ i, { s | (is_open_of (TopologicalSpace.generateFrom (f i))) s } = f i) :\n    TopologicalSpace.generateFrom\n        («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (f i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (TopologicalSpace.generateFrom (f i)) :=\n  (topological_space.gci_generate_from α).u_supr_of_lu_eq_self f hf\n#align generate_from_Inter_of_generate_from_eq_self generateFrom_interᵢ_of_generateFrom_eq_self\n-/\n\n",
 "generateFrom_interᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print generateFrom_interᵢ /-\ntheorem generateFrom_interᵢ (f : ι → TopologicalSpace α) :\n    TopologicalSpace.generateFrom\n        («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n          { s | (is_open_of (f i)) s }) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) :=\n  (topological_space.gci_generate_from α).u_supr_l f\n#align generate_from_Inter generateFrom_interᵢ\n-/\n\n",
 "generateFrom_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print generateFrom_inter /-\ntheorem generateFrom_inter (a b : TopologicalSpace α) :\n    TopologicalSpace.generateFrom ({ s | (is_open_of a) s } ∩ { s | (is_open_of b) s }) = «expr ⊔ » a b :=\n  (topological_space.gci_generate_from α).u_sup_l a b\n#align generate_from_inter generateFrom_inter\n-/\n\n",
 "gc_nhds":
 "#print gc_nhds /-\ntheorem gc_nhds (a : α) : GaloisConnection (nhdsAdjoint a) fun t => @nhds α t a := fun f t =>\n  by\n  rw [le_nhds_iff]\n  exact ⟨fun H s hs has => H _ has hs, fun H s has hs => H _ hs has⟩\n#align gc_nhds gc_nhds\n-/\n\n",
 "gc_generate_from":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\ntheorem gc_generate_from (α) :\n    GaloisConnection (fun t : TopologicalSpace α => OrderDual.toDual { s | (is_open_of t) s })\n      (generateFrom ∘ OrderDual.ofDual) :=\n  fun _ _ => le_generateFrom_iff_subset_isOpen.symm\n#align gc_generate_from gc_generate_from\n\n",
 "gc_coinduced_induced":
 "#print gc_coinduced_induced /-\ntheorem gc_coinduced_induced (f : α → β) :\n    GaloisConnection (TopologicalSpace.coinduced f) (TopologicalSpace.induced f) := fun f g =>\n  coinduced_le_iff_le_induced\n#align gc_coinduced_induced gc_coinduced_induced\n-/\n\n",
 "forall_open_iff_discrete":
 "#print forall_open_iff_discrete /-\ntheorem forall_open_iff_discrete {X : Type _} [TopologicalSpace X] : (∀ s : Set X, IsOpen s) ↔ DiscreteTopology X :=\n  ⟨fun h => ⟨eq_bot_of_singletons_open fun _ => h _⟩, @isOpen_discrete _ _⟩\n#align forall_open_iff_discrete forall_open_iff_discrete\n-/\n\n",
 "eq_of_nhds_eq_nhds":
 "#print eq_of_nhds_eq_nhds /-\ntheorem eq_of_nhds_eq_nhds {t₁ t₂ : TopologicalSpace α} (h : ∀ x, @nhds α t₁ x = @nhds α t₂ x) : t₁ = t₂ :=\n  le_antisymm (le_of_nhds_le_nhds fun x => le_of_eq <| h x) (le_of_nhds_le_nhds fun x => le_of_eq <| (h x).symm)\n#align eq_of_nhds_eq_nhds eq_of_nhds_eq_nhds\n-/\n\n",
 "eq_bot_of_singletons_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `is_open_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print eq_bot_of_singletons_open /-\ntheorem eq_bot_of_singletons_open {t : TopologicalSpace α} (h : ∀ x, (is_open_of t) {x}) : t = «expr⊥» :=\n  bot_unique fun s hs => bunionᵢ_of_singleton s ▸ isOpen_bunionᵢ fun x _ => h x\n#align eq_bot_of_singletons_open eq_bot_of_singletons_open\n-/\n\n",
 "discreteTopology_iff_singleton_mem_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print discreteTopology_iff_singleton_mem_nhds /-\ntheorem discreteTopology_iff_singleton_mem_nhds [TopologicalSpace α] : DiscreteTopology α ↔ ∀ x : α, {x} ∈ (nhds) x :=\n  by simp only [← singletons_open_iff_discrete, isOpen_iff_mem_nhds, mem_singleton_iff, forall_eq]\n#align discrete_topology_iff_singleton_mem_nhds discreteTopology_iff_singleton_mem_nhds\n-/\n\n",
 "discreteTopology_iff_nhds_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.ne -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print discreteTopology_iff_nhds_ne /-\ntheorem discreteTopology_iff_nhds_ne [TopologicalSpace α] : DiscreteTopology α ↔ ∀ x : α, nhds_within.ne x = «expr⊥» :=\n  by simp only [discreteTopology_iff_singleton_mem_nhds, nhdsWithin, inf_principal_eq_bot, compl_compl]\n#align discrete_topology_iff_nhds_ne discreteTopology_iff_nhds_ne\n-/\n\n",
 "discreteTopology_iff_nhds":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print discreteTopology_iff_nhds /-\n/-- This lemma characterizes discrete topological spaces as those whose singletons are\nneighbourhoods. -/\ntheorem discreteTopology_iff_nhds [TopologicalSpace α] : DiscreteTopology α ↔ ∀ x : α, (nhds) x = pure x := by\n  simp only [discreteTopology_iff_singleton_mem_nhds, ← nhds_ne_bot.le_pure_iff, le_pure_iff]\n#align discrete_topology_iff_nhds discreteTopology_iff_nhds\n-/\n\n",
 "discreteTopology_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print discreteTopology_bot /-\ntheorem discreteTopology_bot (α : Type _) : @DiscreteTopology α («expr⊥») :=\n  @discrete_topology.mk α («expr⊥») rfl\n#align discrete_topology_bot discreteTopology_bot\n-/\n\n",
 "continuous_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n#print continuous_top /-\n@[continuity]\ntheorem continuous_top {t : (exprtspace) α} : (exprcont) t («expr⊤») f :=\n  continuous_iff_coinduced_le.2 <| le_top\n#align continuous_top continuous_top\n-/\n\n",
 "continuous_supₛ_rng":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_supₛ_rng /-\ntheorem continuous_supₛ_rng {t₁ : (exprtspace) α} {t₂ : Set ((exprtspace) β)} {t : (exprtspace) β} (h₁ : t ∈ t₂)\n    (hf : (exprcont) t₁ t f) : (exprcont) t₁ (supₛ t₂) f :=\n  continuous_iff_coinduced_le.2 <| le_supₛ_of_le h₁ <| continuous_iff_coinduced_le.1 hf\n#align continuous_Sup_rng continuous_supₛ_rng\n-/\n\n",
 "continuous_supₛ_dom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_supₛ_dom /-\ntheorem continuous_supₛ_dom {T : Set ((exprtspace) α)} {t₂ : (exprtspace) β} :\n    (exprcont) (supₛ T) t₂ f ↔ ∀ t ∈ T, (exprcont) t t₂ f := by simp only [continuous_iff_le_induced, supₛ_le_iff]\n#align continuous_Sup_dom continuous_supₛ_dom\n-/\n\n",
 "continuous_supᵢ_rng":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_supᵢ_rng /-\ntheorem continuous_supᵢ_rng {t₁ : (exprtspace) α} {t₂ : ι → (exprtspace) β} {i : ι} (h : (exprcont) t₁ (t₂ i) f) :\n    (exprcont) t₁ (supᵢ t₂) f :=\n  continuous_supₛ_rng ⟨i, rfl⟩ h\n#align continuous_supr_rng continuous_supᵢ_rng\n-/\n\n",
 "continuous_supᵢ_dom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_supᵢ_dom /-\ntheorem continuous_supᵢ_dom {t₁ : ι → (exprtspace) α} {t₂ : (exprtspace) β} :\n    (exprcont) (supᵢ t₁) t₂ f ↔ ∀ i, (exprcont) (t₁ i) t₂ f := by simp only [continuous_iff_le_induced, supᵢ_le_iff]\n#align continuous_supr_dom continuous_supᵢ_dom\n-/\n\n",
 "continuous_sup_rng_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print continuous_sup_rng_right /-\ntheorem continuous_sup_rng_right {t₁ : (exprtspace) α} {t₃ t₂ : (exprtspace) β} :\n    (exprcont) t₁ t₃ f → (exprcont) t₁ («expr ⊔ » t₂ t₃) f :=\n  continuous_le_rng le_sup_right\n#align continuous_sup_rng_right continuous_sup_rng_right\n-/\n\n",
 "continuous_sup_rng_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print continuous_sup_rng_left /-\ntheorem continuous_sup_rng_left {t₁ : (exprtspace) α} {t₃ t₂ : (exprtspace) β} :\n    (exprcont) t₁ t₂ f → (exprcont) t₁ («expr ⊔ » t₂ t₃) f :=\n  continuous_le_rng le_sup_left\n#align continuous_sup_rng_left continuous_sup_rng_left\n-/\n\n",
 "continuous_sup_dom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_sup_dom /-\ntheorem continuous_sup_dom {t₁ t₂ : (exprtspace) α} {t₃ : (exprtspace) β} :\n    (exprcont) («expr ⊔ » t₁ t₂) t₃ f ↔ (exprcont) t₁ t₃ f ∧ (exprcont) t₂ t₃ f := by\n  simp only [continuous_iff_le_induced, sup_le_iff]\n#align continuous_sup_dom continuous_sup_dom\n-/\n\n",
 "continuous_of_discreteTopology":
 "#print continuous_of_discreteTopology /-\n@[nontriviality]\ntheorem continuous_of_discreteTopology [TopologicalSpace α] [DiscreteTopology α] [TopologicalSpace β] {f : α → β} :\n    Continuous f :=\n  continuous_def.2 fun s hs => isOpen_discrete _\n#align continuous_of_discrete_topology continuous_of_discreteTopology\n-/\n\n",
 "continuous_le_rng":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_le_rng /-\ntheorem continuous_le_rng {t₁ : (exprtspace) α} {t₂ t₃ : (exprtspace) β} (h₁ : t₂ ≤ t₃) (h₂ : (exprcont) t₁ t₂ f) :\n    (exprcont) t₁ t₃ f := by\n  rw [continuous_def] at h₂⊢\n  intro s h\n  exact h₂ s (h₁ s h)\n#align continuous_le_rng continuous_le_rng\n-/\n\n",
 "continuous_le_dom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_le_dom /-\ntheorem continuous_le_dom {t₁ t₂ : (exprtspace) α} {t₃ : (exprtspace) β} (h₁ : t₂ ≤ t₁) (h₂ : (exprcont) t₁ t₃ f) :\n    (exprcont) t₂ t₃ f := by\n  rw [continuous_def] at h₂⊢\n  intro s h\n  exact h₁ _ (h₂ s h)\n#align continuous_le_dom continuous_le_dom\n-/\n\n",
 "continuous_infₛ_rng":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_infₛ_rng /-\ntheorem continuous_infₛ_rng {t₁ : (exprtspace) α} {T : Set ((exprtspace) β)} :\n    (exprcont) t₁ (infₛ T) f ↔ ∀ t ∈ T, (exprcont) t₁ t f := by simp only [continuous_iff_coinduced_le, le_infₛ_iff]\n#align continuous_Inf_rng continuous_infₛ_rng\n-/\n\n",
 "continuous_infₛ_dom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_infₛ_dom /-\ntheorem continuous_infₛ_dom {t₁ : Set ((exprtspace) α)} {t₂ : (exprtspace) β} {t : (exprtspace) α} (h₁ : t ∈ t₁) :\n    (exprcont) t t₂ f → (exprcont) (infₛ t₁) t₂ f :=\n  continuous_le_dom <| infₛ_le h₁\n#align continuous_Inf_dom continuous_infₛ_dom\n-/\n\n",
 "continuous_infᵢ_rng":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_infᵢ_rng /-\ntheorem continuous_infᵢ_rng {t₁ : (exprtspace) α} {t₂ : ι → (exprtspace) β} :\n    (exprcont) t₁ (infᵢ t₂) f ↔ ∀ i, (exprcont) t₁ (t₂ i) f := by simp only [continuous_iff_coinduced_le, le_infᵢ_iff]\n#align continuous_infi_rng continuous_infᵢ_rng\n-/\n\n",
 "continuous_infᵢ_dom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_infᵢ_dom /-\ntheorem continuous_infᵢ_dom {t₁ : ι → (exprtspace) α} {t₂ : (exprtspace) β} {i : ι} :\n    (exprcont) (t₁ i) t₂ f → (exprcont) (infᵢ t₁) t₂ f :=\n  continuous_le_dom <| infᵢ_le _ _\n#align continuous_infi_dom continuous_infᵢ_dom\n-/\n\n",
 "continuous_inf_rng":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_inf_rng /-\ntheorem continuous_inf_rng {t₁ : (exprtspace) α} {t₂ t₃ : (exprtspace) β} :\n    (exprcont) t₁ («expr ⊓ » t₂ t₃) f ↔ (exprcont) t₁ t₂ f ∧ (exprcont) t₁ t₃ f := by\n  simp only [continuous_iff_coinduced_le, le_inf_iff]\n#align continuous_inf_rng continuous_inf_rng\n-/\n\n",
 "continuous_inf_dom_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print continuous_inf_dom_right /-\ntheorem continuous_inf_dom_right {t₁ t₂ : (exprtspace) α} {t₃ : (exprtspace) β} :\n    (exprcont) t₂ t₃ f → (exprcont) («expr ⊓ » t₁ t₂) t₃ f :=\n  continuous_le_dom inf_le_right\n#align continuous_inf_dom_right continuous_inf_dom_right\n-/\n\n",
 "continuous_inf_dom_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print continuous_inf_dom_left /-\ntheorem continuous_inf_dom_left {t₁ t₂ : (exprtspace) α} {t₃ : (exprtspace) β} :\n    (exprcont) t₁ t₃ f → (exprcont) («expr ⊓ » t₁ t₂) t₃ f :=\n  continuous_le_dom inf_le_left\n#align continuous_inf_dom_left continuous_inf_dom_left\n-/\n\n",
 "continuous_induced_rng":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_induced_rng /-\ntheorem continuous_induced_rng {g : γ → α} {t₂ : (exprtspace) β} {t₁ : (exprtspace) γ} :\n    (exprcont) t₁ (induced f t₂) g ↔ (exprcont) t₁ t₂ (f ∘ g) := by\n  simp only [continuous_iff_le_induced, induced_compose]\n#align continuous_induced_rng continuous_induced_rng\n-/\n\n",
 "continuous_induced_dom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_induced_dom /-\n@[continuity]\ntheorem continuous_induced_dom {t : (exprtspace) β} : (exprcont) (induced f t) t f :=\n  by\n  rw [continuous_def]\n  intro s h\n  exact ⟨_, h, rfl⟩\n#align continuous_induced_dom continuous_induced_dom\n-/\n\n",
 "continuous_iff_le_induced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_iff_le_induced /-\ntheorem continuous_iff_le_induced {t₁ : (exprtspace) α} {t₂ : (exprtspace) β} :\n    (exprcont) t₁ t₂ f ↔ t₁ ≤ induced f t₂ :=\n  iff.trans continuous_iff_coinduced_le (gc_coinduced_induced f _ _)\n#align continuous_iff_le_induced continuous_iff_le_induced\n-/\n\n",
 "continuous_iff_coinduced_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_iff_coinduced_le /-\ntheorem continuous_iff_coinduced_le {t₁ : (exprtspace) α} {t₂ : (exprtspace) β} :\n    (exprcont) t₁ t₂ f ↔ coinduced f t₁ ≤ t₂ :=\n  continuous_def.trans iff.rfl\n#align continuous_iff_coinduced_le continuous_iff_coinduced_le\n-/\n\n",
 "continuous_id_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_id_of_le /-\ntheorem continuous_id_of_le {t t' : (exprtspace) α} (h : t ≤ t') : (exprcont) t t' id :=\n  continuous_id_iff_le.2 h\n#align continuous_id_of_le continuous_id_of_le\n-/\n\n",
 "continuous_id_iff_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_id_iff_le /-\ntheorem continuous_id_iff_le {t t' : (exprtspace) α} : (exprcont) t t' id ↔ t ≤ t' :=\n  @continuous_def _ _ t t' id\n#align continuous_id_iff_le continuous_id_iff_le\n-/\n\n",
 "continuous_generateFrom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_generateFrom /-\ntheorem continuous_generateFrom {t : (exprtspace) α} {b : Set (Set β)} (h : ∀ s ∈ b, IsOpen («expr ⁻¹' » f s)) :\n    (exprcont) t (generateFrom b) f :=\n  continuous_iff_coinduced_le.2 <| le_generateFrom h\n#align continuous_generated_from continuous_generateFrom\n-/\n\n",
 "continuous_empty_function":
 "#print continuous_empty_function /-\n-- constructions using the complete lattice structure\ntheorem continuous_empty_function [TopologicalSpace α] [TopologicalSpace β] [IsEmpty β] (f : α → β) : Continuous f :=\n  letI := Function.isEmpty f\n  continuous_of_discreteTopology\n#align continuous_empty_function continuous_empty_function\n-/\n\n",
 "continuous_coinduced_rng":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_coinduced_rng /-\ntheorem continuous_coinduced_rng {t : (exprtspace) α} : (exprcont) t (coinduced f t) f :=\n  by\n  rw [continuous_def]\n  intro s h\n  exact h\n#align continuous_coinduced_rng continuous_coinduced_rng\n-/\n\n",
 "continuous_coinduced_dom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n#print continuous_coinduced_dom /-\ntheorem continuous_coinduced_dom {g : β → γ} {t₁ : (exprtspace) α} {t₂ : (exprtspace) γ} :\n    (exprcont) (coinduced f t₁) t₂ g ↔ (exprcont) t₁ t₂ (g ∘ f) := by\n  simp only [continuous_iff_coinduced_le, coinduced_compose]\n#align continuous_coinduced_dom continuous_coinduced_dom\n-/\n\n",
 "continuous_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtspace -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcont -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print continuous_bot /-\n@[continuity]\ntheorem continuous_bot {t : (exprtspace) β} : (exprcont) («expr⊥») t f :=\n  continuous_iff_le_induced.2 <| bot_le\n#align continuous_bot continuous_bot\n-/\n\n",
 "continuous_Prop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print continuous_Prop /-\ntheorem continuous_Prop {p : α → Prop} : Continuous p ↔ IsOpen { x | p x } :=\n  ⟨fun h : Continuous p =>\n    by\n    have : IsOpen («expr ⁻¹' » p {True}) := isOpen_singleton_true.preimage h\n    simpa [preimage, eq_true_iff] using this, fun h : IsOpen { x | p x } =>\n    continuous_generateFrom fun s (hs : s = {True}) => by simp [hs, preimage, eq_true_iff, h]⟩\n#align continuous_Prop continuous_Prop\n-/\n\n",
 "coinduced_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n#print Equiv.coinduced_symm /-\ntheorem Equiv.coinduced_symm {α β : Type _} (e : «expr ≃ » α β) :\n    TopologicalSpace.coinduced e.symm = TopologicalSpace.induced e := by rw [← e.symm.induced_symm, e.symm_symm]\n#align equiv.coinduced_symm Equiv.coinduced_symm\n-/\n\n",
 "coinduced_supᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print coinduced_supᵢ /-\n@[simp]\ntheorem coinduced_supᵢ {ι : Sort w} {t : ι → TopologicalSpace α} :\n    («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (t i)).coinduced\n        f =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        ((t i).coinduced f) :=\n  (gc_coinduced_induced f).l_supr\n#align coinduced_supr coinduced_supᵢ\n-/\n\n",
 "coinduced_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print coinduced_sup /-\n@[simp]\ntheorem coinduced_sup : («expr ⊔ » t₁ t₂).coinduced f = «expr ⊔ » (t₁.coinduced f) (t₂.coinduced f) :=\n  (gc_coinduced_induced f).l_sup\n#align coinduced_sup coinduced_sup\n-/\n\n",
 "coinduced_mono":
 "#print coinduced_mono /-\ntheorem coinduced_mono (h : t₁ ≤ t₂) : t₁.coinduced f ≤ t₂.coinduced f :=\n  (gc_coinduced_induced f).monotone_l h\n#align coinduced_mono coinduced_mono\n-/\n\n",
 "coinduced_le_iff_le_induced":
 "#print coinduced_le_iff_le_induced /-\ntheorem coinduced_le_iff_le_induced {f : α → β} {tα : TopologicalSpace α} {tβ : TopologicalSpace β} :\n    tα.coinduced f ≤ tβ ↔ tα ≤ tβ.induced f :=\n  ⟨fun h s ⟨t, ht, hst⟩ => hst ▸ h _ ht, fun h s hs => h _ ⟨s, hs, rfl⟩⟩\n#align coinduced_le_iff_le_induced coinduced_le_iff_le_induced\n-/\n\n",
 "coinduced_le":
 "#print Continuous.coinduced_le /-\ntheorem Continuous.coinduced_le (h : @Continuous α β t t' f) : t.coinduced f ≤ t' := fun s hs =>\n  (continuous_def.1 h s hs : _)\n#align continuous.coinduced_le Continuous.coinduced_le\n-/\n\n",
 "coinduced_id":
 "#print coinduced_id /-\ntheorem coinduced_id [t : TopologicalSpace α] : t.coinduced id = t :=\n  topologicalSpace_eq rfl\n#align coinduced_id coinduced_id\n-/\n\n",
 "coinduced_compose":
 "#print coinduced_compose /-\ntheorem coinduced_compose [tα : TopologicalSpace α] {f : α → β} {g : β → γ} :\n    (tα.coinduced f).coinduced g = tα.coinduced (g ∘ f) :=\n  topologicalSpace_eq rfl\n#align coinduced_compose coinduced_compose\n-/\n\n",
 "coinduced_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print coinduced_bot /-\n@[simp]\ntheorem coinduced_bot : («expr⊥» : TopologicalSpace α).coinduced f = «expr⊥» :=\n  (gc_coinduced_induced f).l_bot\n#align coinduced_bot coinduced_bot\n-/\n\n",
 "closure_induced":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n#print closure_induced /-\ntheorem closure_induced [t : TopologicalSpace β] {f : α → β} {a : α} {s : Set α} :\n    a ∈ @closure α (TopologicalSpace.induced f t) s ↔ f a ∈ closure («expr '' » f s) := by\n  simp only [mem_closure_iff_frequently, nhds_induced, frequently_comap, mem_image, and_comm']\n#align closure_induced closure_induced\n-/\n\n"}