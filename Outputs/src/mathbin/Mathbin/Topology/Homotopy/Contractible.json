{"nullhomotopic_of_constant":
 "/-\nCopyright (c) 2022 Praneeth Kolichala. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Praneeth Kolichala\n-/\ntheorem nullhomotopic_of_constant (y : Y) : nullhomotopic (continuous_map.const X y) :=\n  ⟨y, by rfl⟩\n#align nullhomotopic_of_constant nullhomotopic_of_constant\n\n",
 "id_nullhomotopic":
 "theorem id_nullhomotopic (X : Type _) [topological_space X] [contractible_space X] :\n    (continuous_map.id X).nullhomotopic :=\n  by\n  obtain ⟨hv⟩ := contractible_space.hequiv_unit X\n  use hv.inv_fun ()\n  convert hv.left_inv.symm\n  ext; simp; congr\n#align id_nullhomotopic id_nullhomotopic\n\n",
 "contractible_space_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₜ » -/\nprotected theorem homeomorph.contractible_space_iff (e : «expr ≃ₜ » X Y) :\n    contractible_space X ↔ contractible_space Y :=\n  e.to_homotopy_equiv.contractible_space_iff\n#align homeomorph.contractible_space_iff homeomorph.contractible_space_iff\n\n",
 "contractible_space":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₜ » -/\nprotected theorem homeomorph.contractible_space [contractible_space Y] (e : «expr ≃ₜ » X Y) : contractible_space X :=\n  e.to_homotopy_equiv.contractible_space\n#align homeomorph.contractible_space homeomorph.contractible_space\n\n",
 "contractible_iff_id_nullhomotopic":
 "theorem contractible_iff_id_nullhomotopic (Y : Type _) [topological_space Y] :\n    contractible_space Y ↔ (continuous_map.id Y).nullhomotopic :=\n  by\n  constructor;\n  · intro\n    apply id_nullhomotopic\n  rintro ⟨p, h⟩\n  refine_struct\n    {\n      hequiv_unit :=\n        ⟨{  to_fun := continuous_map.const _ ()\n            inv_fun := continuous_map.const _ p }⟩ }\n  · exact h.symm;\n  · convert homotopic.refl (continuous_map.id unit)\n    ext\n#align contractible_iff_id_nullhomotopic contractible_iff_id_nullhomotopic\n\n",
 "comp_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\ntheorem nullhomotopic.comp_right {f : «exprC( , )» X Y} (hf : f.nullhomotopic) (g : «exprC( , )» Y Z) :\n    (g.comp f).nullhomotopic := by\n  cases' hf with y hy\n  use g y\n  exact homotopic.hcomp hy (homotopic.refl g)\n#align nullhomotopic.comp_right nullhomotopic.comp_right\n\n",
 "comp_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprC( , )» -/\ntheorem nullhomotopic.comp_left {f : «exprC( , )» Y Z} (hf : f.nullhomotopic) (g : «exprC( , )» X Y) :\n    (f.comp g).nullhomotopic := by\n  cases' hf with y hy\n  use y\n  exact homotopic.hcomp (homotopic.refl g) hy\n#align nullhomotopic.comp_left nullhomotopic.comp_left\n\n"}