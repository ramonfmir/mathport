{"sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n#print IsLocalMaxOn.sup /-\ntheorem IsLocalMaxOn.sup (hf : IsLocalMaxOn f s a) (hg : IsLocalMaxOn g s a) :\n    IsLocalMaxOn (fun x => «expr ⊔ » (f x) (g x)) s a :=\n  hf.sup hg\n#align is_local_max_on.sup IsLocalMaxOn.sup\n-/\n\n",
 "sub":
 "#print IsLocalMaxOn.sub /-\ntheorem IsLocalMaxOn.sub (hf : IsLocalMaxOn f s a) (hg : IsLocalMinOn g s a) : IsLocalMaxOn (fun x => f x - g x) s a :=\n  hf.sub hg\n#align is_local_max_on.sub IsLocalMaxOn.sub\n-/\n\n",
 "on_subset":
 "#print IsLocalExtrOn.on_subset /-\ntheorem IsLocalExtrOn.on_subset {t : Set α} (hf : IsLocalExtrOn f t a) (h : s ⊆ t) : IsLocalExtrOn f s a :=\n  hf.filter_mono <| nhdsWithin_mono a h\n#align is_local_extr_on.on_subset IsLocalExtrOn.on_subset\n-/\n\n",
 "on":
 "#print IsLocalExtr.on /-\ntheorem IsLocalExtr.on (h : IsLocalExtr f a) (s) : IsLocalExtrOn f s a :=\n  h.filter_inf _\n#align is_local_extr.on IsLocalExtr.on\n-/\n\n",
 "not_nhds_le_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.lt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within.gt -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n#print IsLocalExtrOn.not_nhds_le_map /-\ntheorem IsLocalExtrOn.not_nhds_le_map [TopologicalSpace β] (hf : IsLocalExtrOn f s a) [NeBot (nhds_within.lt (f a))]\n    [NeBot (nhds_within.gt (f a))] : ¬(nhds) (f a) ≤ map f (nhds_within s a) :=\n  hf.elim (fun h => h.not_nhds_le_map) fun h => h.not_nhds_le_map\n#align is_local_extr_on.not_nhds_le_map IsLocalExtrOn.not_nhds_le_map\n-/\n\n",
 "neg":
 "#print IsLocalExtrOn.neg /-\ntheorem IsLocalExtrOn.neg (hf : IsLocalExtrOn f s a) : IsLocalExtrOn (fun x => -f x) s a :=\n  hf.neg\n#align is_local_extr_on.neg IsLocalExtrOn.neg\n-/\n\n",
 "min":
 "#print IsLocalMaxOn.min /-\ntheorem IsLocalMaxOn.min (hf : IsLocalMaxOn f s a) (hg : IsLocalMaxOn g s a) :\n    IsLocalMaxOn (fun x => min (f x) (g x)) s a :=\n  hf.min hg\n#align is_local_max_on.min IsLocalMaxOn.min\n-/\n\n",
 "max":
 "#print IsLocalMaxOn.max /-\ntheorem IsLocalMaxOn.max (hf : IsLocalMaxOn f s a) (hg : IsLocalMaxOn g s a) :\n    IsLocalMaxOn (fun x => max (f x) (g x)) s a :=\n  hf.max hg\n#align is_local_max_on.max IsLocalMaxOn.max\n-/\n\n",
 "localize":
 "#print IsExtrOn.localize /-\ntheorem IsExtrOn.localize (hf : IsExtrOn f s a) : IsLocalExtrOn f s a :=\n  hf.filter_mono <| inf_le_right\n#align is_extr_on.localize IsExtrOn.localize\n-/\n\n",
 "isLocalMin_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.EventuallyEq.isLocalMin_iff /-\ntheorem Filter.EventuallyEq.isLocalMin_iff {f g : α → β} {a : α} (heq : «expr =ᶠ[ ] » f ((nhds) a) g) :\n    IsLocalMin f a ↔ IsLocalMin g a :=\n  HEq.is_min_filter_iff HEq.eq_of_nhds\n#align filter.eventually_eq.is_local_min_iff Filter.EventuallyEq.isLocalMin_iff\n-/\n\n",
 "isLocalMin_const":
 "#print isLocalMin_const /-\ntheorem isLocalMin_const {b : β} : IsLocalMin (fun _ => b) a :=\n  isMinFilter_const\n#align is_local_min_const isLocalMin_const\n-/\n\n",
 "isLocalMinOn_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n#print Filter.EventuallyEq.isLocalMinOn_iff /-\ntheorem Filter.EventuallyEq.isLocalMinOn_iff {f g : α → β} {a : α} (heq : «expr =ᶠ[ ] » f (nhds_within s a) g)\n    (hmem : a ∈ s) : IsLocalMinOn f s a ↔ IsLocalMinOn g s a :=\n  HEq.is_min_filter_iff <| HEq.eq_of_nhds_within hmem\n#align filter.eventually_eq.is_local_min_on_iff Filter.EventuallyEq.isLocalMinOn_iff\n-/\n\n",
 "isLocalMinOn_const":
 "#print isLocalMinOn_const /-\ntheorem isLocalMinOn_const {b : β} : IsLocalMinOn (fun _ => b) s a :=\n  isMinFilter_const\n#align is_local_min_on_const isLocalMinOn_const\n-/\n\n",
 "isLocalMinOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n#print Filter.EventuallyLE.isLocalMinOn /-\ntheorem Filter.EventuallyLE.isLocalMinOn {f g : α → β} {a : α} (hle : «expr ≤ᶠ[ ] » f (nhds_within s a) g)\n    (hfga : f a = g a) (h : IsLocalMinOn f s a) : IsLocalMinOn g s a :=\n  hle.is_min_filter hfga h\n#align filter.eventually_le.is_local_min_on Filter.EventuallyLE.isLocalMinOn\n-/\n\n",
 "isLocalMin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.EventuallyLE.isLocalMin /-\ntheorem Filter.EventuallyLE.isLocalMin {f g : α → β} {a : α} (hle : «expr ≤ᶠ[ ] » f ((nhds) a) g) (hfga : f a = g a)\n    (h : IsLocalMin f a) : IsLocalMin g a :=\n  hle.is_min_filter hfga h\n#align filter.eventually_le.is_local_min Filter.EventuallyLE.isLocalMin\n-/\n\n",
 "isLocalMax_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.EventuallyEq.isLocalMax_iff /-\ntheorem Filter.EventuallyEq.isLocalMax_iff {f g : α → β} {a : α} (heq : «expr =ᶠ[ ] » f ((nhds) a) g) :\n    IsLocalMax f a ↔ IsLocalMax g a :=\n  HEq.is_max_filter_iff HEq.eq_of_nhds\n#align filter.eventually_eq.is_local_max_iff Filter.EventuallyEq.isLocalMax_iff\n-/\n\n",
 "isLocalMax_const":
 "#print isLocalMax_const /-\ntheorem isLocalMax_const {b : β} : IsLocalMax (fun _ => b) a :=\n  isMaxFilter_const\n#align is_local_max_const isLocalMax_const\n-/\n\n",
 "isLocalMaxOn_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n#print Filter.EventuallyEq.isLocalMaxOn_iff /-\ntheorem Filter.EventuallyEq.isLocalMaxOn_iff {f g : α → β} {a : α} (heq : «expr =ᶠ[ ] » f (nhds_within s a) g)\n    (hmem : a ∈ s) : IsLocalMaxOn f s a ↔ IsLocalMaxOn g s a :=\n  HEq.is_max_filter_iff <| HEq.eq_of_nhds_within hmem\n#align filter.eventually_eq.is_local_max_on_iff Filter.EventuallyEq.isLocalMaxOn_iff\n-/\n\n",
 "isLocalMaxOn_const":
 "#print isLocalMaxOn_const /-\ntheorem isLocalMaxOn_const {b : β} : IsLocalMaxOn (fun _ => b) s a :=\n  isMaxFilter_const\n#align is_local_max_on_const isLocalMaxOn_const\n-/\n\n",
 "isLocalMaxOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n#print Filter.EventuallyLE.isLocalMaxOn /-\ntheorem Filter.EventuallyLE.isLocalMaxOn {f g : α → β} {a : α} (hle : «expr ≤ᶠ[ ] » g (nhds_within s a) f)\n    (hfga : f a = g a) (h : IsLocalMaxOn f s a) : IsLocalMaxOn g s a :=\n  hle.is_max_filter hfga h\n#align filter.eventually_le.is_local_max_on Filter.EventuallyLE.isLocalMaxOn\n-/\n\n",
 "isLocalMax":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.EventuallyLE.isLocalMax /-\ntheorem Filter.EventuallyLE.isLocalMax {f g : α → β} {a : α} (hle : «expr ≤ᶠ[ ] » g ((nhds) a) f) (hfga : f a = g a)\n    (h : IsLocalMax f a) : IsLocalMax g a :=\n  hle.is_max_filter hfga h\n#align filter.eventually_le.is_local_max Filter.EventuallyLE.isLocalMax\n-/\n\n",
 "isLocalExtr_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print Filter.EventuallyEq.isLocalExtr_iff /-\ntheorem Filter.EventuallyEq.isLocalExtr_iff {f g : α → β} {a : α} (heq : «expr =ᶠ[ ] » f ((nhds) a) g) :\n    IsLocalExtr f a ↔ IsLocalExtr g a :=\n  HEq.is_extr_filter_iff HEq.eq_of_nhds\n#align filter.eventually_eq.is_local_extr_iff Filter.EventuallyEq.isLocalExtr_iff\n-/\n\n",
 "isLocalExtr_const":
 "#print isLocalExtr_const /-\ntheorem isLocalExtr_const {b : β} : IsLocalExtr (fun _ => b) a :=\n  isExtrFilter_const\n#align is_local_extr_const isLocalExtr_const\n-/\n\n",
 "isLocalExtrOn_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds_within -/\n#print Filter.EventuallyEq.isLocalExtrOn_iff /-\ntheorem Filter.EventuallyEq.isLocalExtrOn_iff {f g : α → β} {a : α} (heq : «expr =ᶠ[ ] » f (nhds_within s a) g)\n    (hmem : a ∈ s) : IsLocalExtrOn f s a ↔ IsLocalExtrOn g s a :=\n  HEq.is_extr_filter_iff <| HEq.eq_of_nhds_within hmem\n#align filter.eventually_eq.is_local_extr_on_iff Filter.EventuallyEq.isLocalExtrOn_iff\n-/\n\n",
 "isLocalExtrOn_const":
 "#print isLocalExtrOn_const /-\ntheorem isLocalExtrOn_const {b : β} : IsLocalExtrOn (fun _ => b) s a :=\n  isExtrFilter_const\n#align is_local_extr_on_const isLocalExtrOn_const\n-/\n\n",
 "isLocalExtr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print IsExtrOn.isLocalExtr /-\ntheorem IsExtrOn.isLocalExtr (hf : IsExtrOn f s a) (hs : s ∈ (nhds) a) : IsLocalExtr f a :=\n  hf.localize.is_local_extr hs\n#align is_extr_on.is_local_extr IsExtrOn.isLocalExtr\n-/\n\n",
 "inter":
 "#print IsLocalExtrOn.inter /-\ntheorem IsLocalExtrOn.inter (hf : IsLocalExtrOn f s a) (t) : IsLocalExtrOn f (s ∩ t) a :=\n  hf.on_subset (inter_subset_left s t)\n#align is_local_extr_on.inter IsLocalExtrOn.inter\n-/\n\n",
 "inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n#print IsLocalMaxOn.inf /-\ntheorem IsLocalMaxOn.inf (hf : IsLocalMaxOn f s a) (hg : IsLocalMaxOn g s a) :\n    IsLocalMaxOn (fun x => «expr ⊓ » (f x) (g x)) s a :=\n  hf.inf hg\n#align is_local_max_on.inf IsLocalMaxOn.inf\n-/\n\n",
 "elim":
 "#print IsLocalExtr.elim /-\ntheorem IsLocalExtr.elim {p : Prop} : IsLocalExtr f a → (IsLocalMin f a → p) → (IsLocalMax f a → p) → p :=\n  or.elim\n#align is_local_extr.elim IsLocalExtr.elim\n-/\n\n",
 "congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᶠ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n#print IsLocalExtr.congr /-\ntheorem IsLocalExtr.congr {f g : α → β} {a : α} (h : IsLocalExtr f a) (heq : «expr =ᶠ[ ] » f ((nhds) a) g) :\n    IsLocalExtr g a :=\n  h.congr HEq HEq.eq_of_nhds\n#align is_local_extr.congr IsLocalExtr.congr\n-/\n\n",
 "comp_mono":
 "#print IsLocalExtrOn.comp_mono /-\ntheorem IsLocalExtrOn.comp_mono (hf : IsLocalExtrOn f s a) {g : β → γ} (hg : Monotone g) : IsLocalExtrOn (g ∘ f) s a :=\n  hf.comp_mono hg\n#align is_local_extr_on.comp_mono IsLocalExtrOn.comp_mono\n-/\n\n",
 "comp_continuousOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n#print IsLocalExtrOn.comp_continuousOn /-\ntheorem IsLocalExtrOn.comp_continuousOn [TopologicalSpace δ] {t : Set α} {s : Set δ} (g : δ → α) {b : δ}\n    (hf : IsLocalExtrOn f t (g b)) (hst : s ⊆ «expr ⁻¹' » g t) (hg : ContinuousOn g s) (hb : b ∈ s) :\n    IsLocalExtrOn (f ∘ g) s b :=\n  hf.elim (fun hf => (hf.comp_continuous_on hst hg hb).is_extr) fun hf =>\n    (IsLocalMaxOn.comp_continuousOn hf hst hg hb).is_extr\n#align is_local_extr_on.comp_continuous_on IsLocalExtrOn.comp_continuousOn\n-/\n\n",
 "comp_continuous":
 "#print IsLocalExtr.comp_continuous /-\ntheorem IsLocalExtr.comp_continuous [TopologicalSpace δ] {g : δ → α} {b : δ} (hf : IsLocalExtr f (g b))\n    (hg : ContinuousAt g b) : IsLocalExtr (f ∘ g) b :=\n  hf.comp_tendsto hg\n#align is_local_extr.comp_continuous IsLocalExtr.comp_continuous\n-/\n\n",
 "comp_antitone":
 "#print IsLocalExtrOn.comp_antitone /-\ntheorem IsLocalExtrOn.comp_antitone (hf : IsLocalExtrOn f s a) {g : β → γ} (hg : Antitone g) :\n    IsLocalExtrOn (g ∘ f) s a :=\n  hf.comp_antitone hg\n#align is_local_extr_on.comp_antitone IsLocalExtrOn.comp_antitone\n-/\n\n",
 "bicomp_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⇒ » -/\n#print IsLocalMaxOn.bicomp_mono /-\ntheorem IsLocalMaxOn.bicomp_mono [preorder δ] {op : β → γ → δ}\n    (hop : («expr ⇒ » (· ≤ ·) («expr ⇒ » (· ≤ ·) (· ≤ ·))) op op) (hf : IsLocalMaxOn f s a) {g : α → γ}\n    (hg : IsLocalMaxOn g s a) : IsLocalMaxOn (fun x => op (f x) (g x)) s a :=\n  hf.bicomp_mono hop hg\n#align is_local_max_on.bicomp_mono IsLocalMaxOn.bicomp_mono\n-/\n\n",
 "add":
 "#print IsLocalMaxOn.add /-\ntheorem IsLocalMaxOn.add (hf : IsLocalMaxOn f s a) (hg : IsLocalMaxOn g s a) : IsLocalMaxOn (fun x => f x + g x) s a :=\n  hf.add hg\n#align is_local_max_on.add IsLocalMaxOn.add\n-/\n\n"}