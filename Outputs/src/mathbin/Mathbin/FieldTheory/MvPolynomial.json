{"quotient_mk_comp_C_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-\nCopyright (c) 2019 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl\n-/\ntheorem quotient_mk_comp_C_injective (I : ideal (mv_polynomial σ K)) (hI : I ≠ «expr⊤») :\n    function.injective ((ideal.quotient.mk I).comp mv_polynomial.C) :=\n  by\n  refine' (injective_iff_map_eq_zero _).2 fun x hx => _\n  rw [RingHom.comp_apply, ideal.quotient.eq_zero_iff_mem] at hx\n  refine' by_contradiction fun hx0 => absurd (I.eq_top_iff_one.2 _) hI\n  have := I.mul_mem_left (mv_polynomial.C x⁻¹) hx\n  rwa [← mv_polynomial.C.map_mul, inv_mul_cancel hx0, mv_polynomial.C_1] at this\n#align quotient_mk_comp_C_injective quotient_mk_comp_C_injective\n\n",
 "dim_mv_polynomial":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem dim_mv_polynomial : module.rank K (mv_polynomial σ K) = cardinal.mk («expr →₀ » σ ℕ) := by\n  rw [← cardinal.lift_inj, ← (basis_monomials σ K).mk_eq_dim]\n#align dim_mv_polynomial dim_mv_polynomial\n\n"}