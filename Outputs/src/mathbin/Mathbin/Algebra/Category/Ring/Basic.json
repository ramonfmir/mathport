{"ring_hom_comp_eq_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem CommRing.ring_hom_comp_eq_comp {R S T : Type _} [CommRing R] [CommRing S] [CommRing T] (f : «expr →+* » R S)\n    (g : «expr →+* » S T) : g.comp f = «expr ≫ » (CommRing.of_hom f) (CommRing.of_hom g) :=\n  rfl\n#align CommRing.ring_hom_comp_eq_comp CommRing.ring_hom_comp_eq_comp\n\n",
 "of_hom_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n@[simp]\ntheorem of_hom_apply {R S : Type u} [CommRing R] [CommRing S] (f : «expr →+* » R S) (x : R) : of_hom f x = f x :=\n  rfl\n#align of_hom_apply of_hom_apply\n\n",
 "comp_eq_ring_hom_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem CommRing.comp_eq_ring_hom_comp {R S T : CommRing} (f : «expr ⟶ » R S) (g : «expr ⟶ » S T) :\n    «expr ≫ » f g = g.comp f :=\n  rfl\n#align CommRing.comp_eq_ring_hom_comp CommRing.comp_eq_ring_hom_comp\n\n",
 "coe_of":
 "@[simp]\ntheorem coe_of (R : Type u) [CommRing R] : (CommRing.of R : Type u) = R :=\n  rfl\n#align coe_of coe_of\n\n",
 "CommRing_iso_to_ring_equiv_to_ring_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n-- This example verifies an improvement possible in Lean 3.8.\n-- Before that, to have `add_ring_hom.map_zero` usable by `simp` here,\n-- we had to mark all the concrete category `has_coe_to_sort` instances reducible.\n-- Now, it just works.\n@[simp]\ntheorem CommRing_iso_to_ring_equiv_to_ring_hom {X Y : CommRing} (i : «expr ≅ » X Y) :\n    i.CommRing_iso_to_ring_equiv.to_ring_hom = i.hom := by\n  ext\n  rfl\n#align CommRing_iso_to_ring_equiv_to_ring_hom CommRing_iso_to_ring_equiv_to_ring_hom\n\n",
 "CommRing_iso_to_ring_equiv_symm_to_ring_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem CommRing_iso_to_ring_equiv_symm_to_ring_hom {X Y : CommRing} (i : «expr ≅ » X Y) :\n    i.CommRing_iso_to_ring_equiv.symm.to_ring_hom = i.inv :=\n  by\n  ext\n  rfl\n#align CommRing_iso_to_ring_equiv_symm_to_ring_hom CommRing_iso_to_ring_equiv_symm_to_ring_hom\n\n"}