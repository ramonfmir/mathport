{"pi_iso_pi_inv_kernel_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/-\nCopyright (c) 2022 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n-- While we could use this to construct a `has_products (Module R)` instance,\n-- we already have `has_limits (Module R)` in `algebra.category.Module.limits`.\n-- We now show this isomorphism commutes with the inclusion of the kernel into the source.\n@[simp, elementwise]\ntheorem pi_iso_pi_inv_kernel_ι (i : ι) :\n    «expr ≫ » (piIsoPi Z).inv (Pi.π Z i) = (LinearMap.proj i : «expr →ₗ[ ] » (∀ i : ι, Z i) R (Z i)) :=\n  limit.isoLimitCone_inv_π _ _\n#align pi_iso_pi_inv_kernel_ι pi_iso_pi_inv_kernel_ι\n\n",
 "pi_iso_pi_hom_ker_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp, elementwise]\ntheorem pi_iso_pi_hom_ker_subtype (i : ι) :\n    «expr ≫ » (piIsoPi Z).hom (LinearMap.proj i : «expr →ₗ[ ] » (∀ i : ι, Z i) R (Z i)) = Pi.π Z i :=\n  IsLimit.conePointUniqueUpToIso_inv_comp _ (limit.isLimit _) (discrete.mk i)\n#align pi_iso_pi_hom_ker_subtype pi_iso_pi_hom_ker_subtype\n\n"}