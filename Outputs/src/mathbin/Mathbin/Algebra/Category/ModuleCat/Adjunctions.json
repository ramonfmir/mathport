{"μ_natural":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\ntheorem μ_natural {X Y X' Y' : Type u} (f : «expr ⟶ » X Y) (g : «expr ⟶ » X' Y') :\n    «expr ≫ » (tensor_iso ((free R).map f) ((free R).map g)) (μ R Y Y').hom =\n      «expr ≫ » (μ R X X').hom ((free R).map (tensor_iso f g)) :=\n  by\n  intros\n  ext (x x'⟨y, y'⟩)\n  dsimp [μ]\n  simp_rw [finsupp.map_domain_single, finsupp_tensor_finsupp'_single_tmul_single, mul_one, finsupp.map_domain_single,\n    category_theory.tensor_apply]\n#align μ_natural μ_natural\n\n",
 "ε_apply":
 "/-\nCopyright (c) 2021 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Johan Commelin\n-/\n@[simp]\ntheorem ε_apply (r : R) : ε R r = finsupp.single PUnit.unit r :=\n  rfl\n#align ε_apply ε_apply\n\n",
 "single_comp_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- In fact, it's strong monoidal, but we don't yet have a typeclass for that.\n-- Send `R` to `punit →₀ R`\n-- Send `(α →₀ R) ⊗ (β →₀ R)` to `α × β →₀ R`\n-- Conceptually, it would be nice to construct this via \"transport of enrichment\",\n-- using the fact that `Module.free R : Type ⥤ Module R` and `Module.forget` are both lax monoidal.\n-- This still seems difficult, so we just do it by hand.\n-- This imitates the proof of associativity for `monoid_algebra`.\ntheorem single_comp_single {X Y Z : C} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) (r s : R) :\n    («expr ≫ » (single f r) (single g s) : «expr ⟶ » (Free.of R X) (Free.of R Z)) = single («expr ≫ » f g) (r * s) :=\n  by\n  dsimp\n  simp\n#align single_comp_single single_comp_single\n\n",
 "right_unitality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\ntheorem right_unitality (X : Type u) :\n    ((exprρ_) ((free R).obj X)).hom =\n      «expr ≫ » (tensor_iso ((«expr𝟙») ((free R).obj X)) (ε R))\n        («expr ≫ » (μ R X ((«expr𝟙_») (Type u))).hom (map (free R).obj ((exprρ_) X).hom)) :=\n  by\n  intros\n  ext\n  dsimp [ε, μ]\n  simp_rw [finsupp_tensor_finsupp'_single_tmul_single, Module.monoidal_category.right_unitor_hom_apply,\n    finsupp.smul_single', mul_one, finsupp.map_domain_single, category_theory.right_unitor_hom_apply]\n#align right_unitality right_unitality\n\n",
 "lift_map_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem lift_map_single (F : «expr ⥤ » C D) {X Y : C} (f : «expr ⟶ » X Y) (r : R) :\n    (lift R F).map (single f r) = «expr • » r (F.map f) := by simp\n#align lift_map_single lift_map_single\n\n",
 "left_unitality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\ntheorem left_unitality (X : Type u) :\n    ((«exprλ_») ((free R).obj X)).hom =\n      «expr ≫ » (tensor_iso (ε R) ((«expr𝟙») ((free R).obj X)))\n        («expr ≫ » (μ R ((«expr𝟙_») (Type u)) X).hom (map (free R).obj ((«exprλ_») X).hom)) :=\n  by\n  intros\n  ext\n  dsimp [ε, μ]\n  simp_rw [finsupp_tensor_finsupp'_single_tmul_single, Module.monoidal_category.left_unitor_hom_apply,\n    finsupp.smul_single', mul_one, finsupp.map_domain_single, category_theory.left_unitor_hom_apply]\n#align left_unitality left_unitality\n\n",
 "associativity":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\ntheorem associativity (X Y Z : Type u) :\n    «expr ≫ » (tensor_iso (μ R X Y).hom ((«expr𝟙») ((free R).obj Z)))\n        («expr ≫ » (μ R (tensor_iso X Y) Z).hom (map (free R).obj ((exprα_) X Y Z).hom)) =\n      «expr ≫ » ((exprα_) ((free R).obj X) ((free R).obj Y) ((free R).obj Z)).hom\n        («expr ≫ » (tensor_iso ((«expr𝟙») ((free R).obj X)) (μ R Y Z).hom) (μ R X (tensor_iso Y Z)).hom) :=\n  by\n  intros\n  ext\n  dsimp [μ]\n  simp_rw [finsupp_tensor_finsupp'_single_tmul_single, finsupp.map_domain_single, mul_one,\n    category_theory.associator_hom_apply]\n#align associativity associativity\n\n"}