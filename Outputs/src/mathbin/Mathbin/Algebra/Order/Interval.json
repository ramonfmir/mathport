{"to_prod_pow":
 "-- TODO: if `to_additive` gets improved sufficiently, derive this from `has_pow`\n@[simp, to_additive to_prod_nsmul]\ntheorem to_prod_pow : (s ^ n).to_prod = s.to_prod ^ n :=\n  rfl\n#align to_prod_pow to_prod_pow\n\n",
 "to_prod_one":
 "/-\nCopyright (c) 2022 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\n@[simp, to_additive to_prod_zero]\ntheorem to_prod_one : (1 : nonempty_interval α).to_prod = 1 :=\n  rfl\n#align to_prod_one to_prod_one\n\n",
 "to_prod_mul":
 "@[simp, to_additive to_prod_add]\ntheorem to_prod_mul : (s * t).to_prod = s.to_prod * t.to_prod :=\n  rfl\n#align to_prod_mul to_prod_mul\n\n",
 "sub_mem_sub":
 "theorem sub_mem_sub (ha : a ∈ s) (hb : b ∈ t) : a - b ∈ s - t :=\n  ⟨tsub_le_tsub ha.1 hb.2, tsub_le_tsub ha.2 hb.1⟩\n#align sub_mem_sub sub_mem_sub\n\n",
 "sub_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem sub_bot : s - «expr⊥» = «expr⊥» :=\n  Option.map₂_none_right _ _\n#align sub_bot sub_bot\n\n",
 "snd_sub":
 "@[simp]\ntheorem snd_sub : (s - t).snd = s.snd - t.fst :=\n  rfl\n#align snd_sub snd_sub\n\n",
 "snd_pow":
 "@[to_additive]\ntheorem snd_pow : (s ^ n).snd = s.snd ^ n :=\n  rfl\n#align snd_pow snd_pow\n\n",
 "snd_one":
 "@[to_additive]\ntheorem snd_one : (1 : nonempty_interval α).snd = 1 :=\n  rfl\n#align snd_one snd_one\n\n",
 "snd_mul":
 "@[to_additive]\ntheorem snd_mul : (s * t).snd = s.snd * t.snd :=\n  rfl\n#align snd_mul snd_mul\n\n",
 "snd_inv":
 "@[simp, to_additive]\ntheorem snd_inv : s⁻¹.snd = s.fst⁻¹ :=\n  rfl\n#align snd_inv snd_inv\n\n",
 "snd_div":
 "@[simp, to_additive]\ntheorem snd_div : (s / t).snd = s.snd / t.fst :=\n  rfl\n#align snd_div snd_div\n\n",
 "pure_sub_pure":
 "@[simp]\ntheorem pure_sub_pure (a b : α) : pure a - pure b = pure (a - b) :=\n  rfl\n#align pure_sub_pure pure_sub_pure\n\n",
 "pure_pow":
 "@[simp, to_additive]\ntheorem pure_pow : pure a ^ n = pure (a ^ n) :=\n  rfl\n#align pure_pow pure_pow\n\n",
 "pure_one":
 "@[simp, to_additive]\ntheorem pure_one : pure (1 : α) = 1 :=\n  rfl\n#align pure_one pure_one\n\n",
 "pure_mul_pure":
 "@[simp, to_additive]\ntheorem pure_mul_pure : pure a * pure b = pure (a * b) :=\n  rfl\n#align pure_mul_pure pure_mul_pure\n\n",
 "pure_div_pure":
 "@[simp, to_additive]\ntheorem pure_div_pure : pure a / pure b = pure (a / b) :=\n  rfl\n#align pure_div_pure pure_div_pure\n\n",
 "one_ne_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp, to_additive]\ntheorem one_ne_bot : (1 : interval α) ≠ «expr⊥» :=\n  pure_ne_bot\n#align one_ne_bot one_ne_bot\n\n",
 "one_mem_one":
 "@[to_additive]\ntheorem one_mem_one : (1 : α) ∈ (1 : interval α) :=\n  ⟨le_rfl, le_rfl⟩\n#align one_mem_one one_mem_one\n\n",
 "mul_eq_one_iff":
 "#print mul_eq_one_iff /-\n@[to_additive]\nprotected theorem mul_eq_one_iff : s * t = 1 ↔ ∃ a b, s = pure a ∧ t = pure b ∧ a * b = 1 :=\n  by\n  cases s\n  · simp [WithBot.none_eq_bot]\n  cases t\n  · simp [WithBot.none_eq_bot]\n  · simp [WithBot.some_eq_coe, ← nonempty_interval.coe_mul_interval, nonempty_interval.mul_eq_one_iff]\n#align mul_eq_one_iff mul_eq_one_iff\n#align add_eq_zero_iff add_eq_zero_iff\n-/\n\n",
 "mul_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp, to_additive]\ntheorem mul_bot : s * «expr⊥» = «expr⊥» :=\n  Option.map₂_none_right _ _\n#align mul_bot mul_bot\n\n",
 "length_zero":
 "@[simp]\ntheorem length_zero : (0 : interval α).length = 0 :=\n  length_pure _\n#align length_zero length_zero\n\n",
 "length_sum_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem length_sum_le (f : ι → interval α) (s : Finset ι) :\n    (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)).length ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i).length :=\n  Finset.le_sum_of_subadditive _ length_zero length_add_le _ _\n#align length_sum_le length_sum_le\n\n",
 "length_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n@[simp]\ntheorem length_sum (f : ι → nonempty_interval α) (s : Finset ι) :\n    (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)).length =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i).length :=\n  map_sum (⟨length, length_zero, length_add⟩ : «expr →+ » (nonempty_interval α) α) _ _\n#align length_sum length_sum\n\n",
 "length_sub_le":
 "theorem length_sub_le : (s - t).length ≤ s.length + t.length := by simpa [sub_eq_add_neg] using length_add_le s (-t)\n#align length_sub_le length_sub_le\n\n",
 "length_sub":
 "@[simp]\ntheorem length_sub : (s - t).length = s.length + t.length := by simp [sub_eq_add_neg]\n#align length_sub length_sub\n\n",
 "length_pure":
 "@[simp]\ntheorem length_pure : (pure a).length = 0 :=\n  nonempty_interval.length_pure _\n#align length_pure length_pure\n\n",
 "length_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem length_nonneg : ∀ s : interval α, 0 ≤ s.length\n  | «expr⊥» => le_rfl\n  | (s : nonempty_interval α) => s.length_nonneg\n#align length_nonneg length_nonneg\n\n",
 "length_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem length_neg : ∀ s : interval α, (-s).length = s.length\n  | «expr⊥» => rfl\n  | (s : nonempty_interval α) => s.length_neg\n#align length_neg length_neg\n\n",
 "length_add_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem length_add_le : ∀ s t : interval α, (s + t).length ≤ s.length + t.length\n  | «expr⊥», _ => by simp\n  | _, «expr⊥» => by simp\n  | (s : nonempty_interval α), (t : nonempty_interval α) => (s.length_add t).le\n#align length_add_le length_add_le\n\n",
 "length_add":
 "@[simp]\ntheorem length_add : (s + t).length = s.length + t.length :=\n  add_sub_add_comm _ _ _ _\n#align length_add length_add\n\n",
 "inv_pure":
 "@[simp, to_additive]\ntheorem inv_pure : (pure a)⁻¹ = pure a⁻¹ :=\n  rfl\n#align inv_pure inv_pure\n\n",
 "inv_mem_inv":
 "@[to_additive]\ntheorem inv_mem_inv (ha : a ∈ s) : a⁻¹ ∈ s⁻¹ :=\n  ⟨inv_le_inv' ha.2, inv_le_inv' ha.1⟩\n#align inv_mem_inv inv_mem_inv\n\n",
 "inv_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp, to_additive]\ntheorem interval.inv_bot : («expr⊥» : interval α)⁻¹ = «expr⊥» :=\n  rfl\n#align interval.inv_bot interval.inv_bot\n\n",
 "fst_sub":
 "@[simp]\ntheorem fst_sub : (s - t).fst = s.fst - t.snd :=\n  rfl\n#align fst_sub fst_sub\n\n",
 "fst_pow":
 "@[to_additive]\ntheorem fst_pow : (s ^ n).fst = s.fst ^ n :=\n  rfl\n#align fst_pow fst_pow\n\n",
 "fst_one":
 "@[to_additive]\ntheorem fst_one : (1 : nonempty_interval α).fst = 1 :=\n  rfl\n#align fst_one fst_one\n\n",
 "fst_mul":
 "@[to_additive]\ntheorem fst_mul : (s * t).fst = s.fst * t.fst :=\n  rfl\n#align fst_mul fst_mul\n\n",
 "fst_inv":
 "@[simp, to_additive]\ntheorem fst_inv : s⁻¹.fst = s.snd⁻¹ :=\n  rfl\n#align fst_inv fst_inv\n\n",
 "fst_div":
 "@[simp, to_additive]\ntheorem fst_div : (s / t).fst = s.fst / t.snd :=\n  rfl\n#align fst_div fst_div\n\n",
 "div_mem_div":
 "@[to_additive]\ntheorem div_mem_div (ha : a ∈ s) (hb : b ∈ t) : a / b ∈ s / t :=\n  ⟨div_le_div'' ha.1 hb.2, div_le_div'' ha.2 hb.1⟩\n#align div_mem_div div_mem_div\n\n",
 "div_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp, to_additive]\ntheorem div_bot : s / «expr⊥» = «expr⊥» :=\n  Option.map₂_none_right _ _\n#align div_bot div_bot\n\n",
 "coe_sub_interval":
 "@[simp]\ntheorem coe_sub_interval : (↑(s - t) : interval α) = s - t :=\n  rfl\n#align coe_sub_interval coe_sub_interval\n\n",
 "coe_pow_interval":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[simp, to_additive]\ntheorem coe_pow_interval [OrderedCommMonoid α] (s : nonempty_interval α) (n : ℕ) : (↑(s ^ n) : interval α) = s ^ n :=\n  map_pow (⟨coe, coe_one_interval, coe_mul_interval⟩ : «expr →* » (nonempty_interval α) (interval α)) _ _\n#align coe_pow_interval coe_pow_interval\n\n",
 "coe_one_interval":
 "@[simp, norm_cast, to_additive]\ntheorem coe_one_interval : ((1 : nonempty_interval α) : interval α) = 1 :=\n  rfl\n#align coe_one_interval coe_one_interval\n\n",
 "coe_one":
 "@[simp, to_additive]\ntheorem coe_one : ((1 : interval α) : Set α) = 1 :=\n  Icc_self _\n#align coe_one coe_one\n\n",
 "coe_mul_interval":
 "@[simp, to_additive]\ntheorem coe_mul_interval : (↑(s * t) : interval α) = s * t :=\n  rfl\n#align coe_mul_interval coe_mul_interval\n\n",
 "coe_inv_interval":
 "@[simp, to_additive]\ntheorem coe_inv_interval : (↑s⁻¹ : interval α) = s⁻¹ :=\n  rfl\n#align coe_inv_interval coe_inv_interval\n\n",
 "coe_div_interval":
 "@[simp, to_additive]\ntheorem coe_div_interval : (↑(s / t) : interval α) = s / t :=\n  rfl\n#align coe_div_interval coe_div_interval\n\n",
 "bot_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot_sub : «expr⊥» - t = «expr⊥» :=\n  rfl\n#align bot_sub bot_sub\n\n",
 "bot_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[to_additive]\ntheorem bot_pow : ∀ {n : ℕ} (hn : n ≠ 0), («expr⊥» : interval α) ^ n = «expr⊥»\n  | 0, h => (h rfl).elim\n  | nat.succ n, _ => bot_mul («expr⊥» ^ n)\n#align bot_pow bot_pow\n\n",
 "bot_ne_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp, to_additive]\ntheorem bot_ne_one : («expr⊥» : interval α) ≠ 1 :=\n  bot_ne_pure\n#align bot_ne_one bot_ne_one\n\n",
 "bot_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp, to_additive]\ntheorem bot_mul : «expr⊥» * t = «expr⊥» :=\n  rfl\n#align bot_mul bot_mul\n\n",
 "bot_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp, to_additive]\ntheorem bot_div : «expr⊥» / t = «expr⊥» :=\n  rfl\n#align bot_div bot_div\n\n"}