{"mul_lt_mul_iff_of_le_of_le":
 "#print mul_lt_mul_iff_of_le_of_le /-\n@[to_additive]\ntheorem mul_lt_mul_iff_of_le_of_le [CovariantClass α α (· * ·) (· ≤ ·)] [CovariantClass α α (swap (· * ·)) (· ≤ ·)]\n    [CovariantClass α α (· * ·) (· < ·)] [CovariantClass α α (swap (· * ·)) (· < ·)] {a₁ a₂ b₁ b₂ : α} (ha : a₁ ≤ a₂)\n    (hb : b₁ ≤ b₂) : a₁ * b₁ < a₂ * b₂ ↔ a₁ < a₂ ∨ b₁ < b₂ :=\n  by\n  refine' ⟨lt_or_lt_of_mul_lt_mul, _⟩\n  rintro (ha | hb)\n  · exact mul_lt_mul_of_lt_of_le ha hb\n  · exact mul_lt_mul_of_le_of_lt ha hb\n#align mul_lt_mul_iff_of_le_of_le mul_lt_mul_iff_of_le_of_le\n#align add_lt_add_iff_of_le_of_le add_lt_add_iff_of_le_of_le\n-/\n\n",
 "min_mul_mul_right":
 "#print min_mul_mul_right /-\n@[to_additive]\ntheorem min_mul_mul_right (a b c : α) : min (a * c) (b * c) = min a b * c :=\n  (monotone_id.mul_const' c).map_min.symm\n#align min_mul_mul_right min_mul_mul_right\n#align min_add_add_right min_add_add_right\n-/\n\n",
 "min_mul_mul_left":
 "#print min_mul_mul_left /-\n@[to_additive]\ntheorem min_mul_mul_left (a b c : α) : min (a * b) (a * c) = a * min b c :=\n  (monotone_id.const_mul' a).map_min.symm\n#align min_mul_mul_left min_mul_mul_left\n#align min_add_add_left min_add_add_left\n-/\n\n",
 "min_mul_max":
 "#print min_mul_max /-\n@[to_additive]\ntheorem min_mul_max [linear_order α] [CommSemigroup α] (n m : α) : min n m * max n m = n * m :=\n  fn_min_mul_fn_max id n m\n#align min_mul_max min_mul_max\n#align min_add_max min_add_max\n-/\n\n",
 "min_le_mul_of_one_le_right":
 "#print min_le_mul_of_one_le_right /-\n@[to_additive]\ntheorem min_le_mul_of_one_le_right [CovariantClass α α (· * ·) (· ≤ ·)] {a b : α} (hb : 1 ≤ b) : min a b ≤ a * b :=\n  min_le_iff.2 <| or.inl <| le_mul_of_one_le_right' hb\n#align min_le_mul_of_one_le_right min_le_mul_of_one_le_right\n#align min_le_add_of_nonneg_right min_le_add_of_nonneg_right\n-/\n\n",
 "min_le_mul_of_one_le_left":
 "#print min_le_mul_of_one_le_left /-\n@[to_additive]\ntheorem min_le_mul_of_one_le_left [CovariantClass α α (function.swap (· * ·)) (· ≤ ·)] {a b : α} (ha : 1 ≤ a) :\n    min a b ≤ a * b :=\n  min_le_iff.2 <| or.inr <| le_mul_of_one_le_left' ha\n#align min_le_mul_of_one_le_left min_le_mul_of_one_le_left\n#align min_le_add_of_nonneg_left min_le_add_of_nonneg_left\n-/\n\n",
 "max_mul_mul_right":
 "#print max_mul_mul_right /-\n@[to_additive]\ntheorem max_mul_mul_right (a b c : α) : max (a * c) (b * c) = max a b * c :=\n  (monotone_id.mul_const' c).map_max.symm\n#align max_mul_mul_right max_mul_mul_right\n#align max_add_add_right max_add_add_right\n-/\n\n",
 "max_mul_mul_left":
 "#print max_mul_mul_left /-\n@[to_additive]\ntheorem max_mul_mul_left (a b c : α) : max (a * b) (a * c) = a * max b c :=\n  (monotone_id.const_mul' a).map_max.symm\n#align max_mul_mul_left max_mul_mul_left\n#align max_add_add_left max_add_add_left\n-/\n\n",
 "max_le_mul_of_one_le":
 "#print max_le_mul_of_one_le /-\n@[to_additive]\ntheorem max_le_mul_of_one_le [CovariantClass α α (· * ·) (· ≤ ·)] [CovariantClass α α (function.swap (· * ·)) (· ≤ ·)]\n    {a b : α} (ha : 1 ≤ a) (hb : 1 ≤ b) : max a b ≤ a * b :=\n  max_le_iff.2 ⟨le_mul_of_one_le_right' hb, le_mul_of_one_le_left' ha⟩\n#align max_le_mul_of_one_le max_le_mul_of_one_le\n#align max_le_add_of_nonneg max_le_add_of_nonneg\n-/\n\n",
 "lt_or_lt_of_mul_lt_mul":
 "#print lt_or_lt_of_mul_lt_mul /-\n@[to_additive]\ntheorem lt_or_lt_of_mul_lt_mul [CovariantClass α α (· * ·) (· ≤ ·)] [CovariantClass α α (swap (· * ·)) (· ≤ ·)]\n    {a₁ a₂ b₁ b₂ : α} : a₁ * b₁ < a₂ * b₂ → a₁ < a₂ ∨ b₁ < b₂ :=\n  by\n  contrapose!\n  exact fun h => mul_le_mul' h.1 h.2\n#align lt_or_lt_of_mul_lt_mul lt_or_lt_of_mul_lt_mul\n#align lt_or_lt_of_add_lt_add lt_or_lt_of_add_lt_add\n-/\n\n",
 "lt_or_le_of_mul_le_mul":
 "#print lt_or_le_of_mul_le_mul /-\n@[to_additive]\ntheorem lt_or_le_of_mul_le_mul [CovariantClass α α (· * ·) (· < ·)] [CovariantClass α α (swap (· * ·)) (· ≤ ·)]\n    {a₁ a₂ b₁ b₂ : α} : a₁ * b₁ ≤ a₂ * b₂ → a₁ < a₂ ∨ b₁ ≤ b₂ :=\n  by\n  contrapose!\n  exact fun h => mul_lt_mul_of_le_of_lt h.1 h.2\n#align lt_or_le_of_mul_le_mul lt_or_le_of_mul_le_mul\n#align lt_or_le_of_add_le_add lt_or_le_of_add_le_add\n-/\n\n",
 "le_or_lt_of_mul_le_mul":
 "#print le_or_lt_of_mul_le_mul /-\n@[to_additive]\ntheorem le_or_lt_of_mul_le_mul [CovariantClass α α (· * ·) (· ≤ ·)] [CovariantClass α α (swap (· * ·)) (· < ·)]\n    {a₁ a₂ b₁ b₂ : α} : a₁ * b₁ ≤ a₂ * b₂ → a₁ ≤ a₂ ∨ b₁ < b₂ :=\n  by\n  contrapose!\n  exact fun h => mul_lt_mul_of_lt_of_le h.1 h.2\n#align le_or_lt_of_mul_le_mul le_or_lt_of_mul_le_mul\n#align le_or_lt_of_add_le_add le_or_lt_of_add_le_add\n-/\n\n",
 "le_or_le_of_mul_le_mul":
 "#print le_or_le_of_mul_le_mul /-\n@[to_additive]\ntheorem le_or_le_of_mul_le_mul [CovariantClass α α (· * ·) (· < ·)] [CovariantClass α α (swap (· * ·)) (· < ·)]\n    {a₁ a₂ b₁ b₂ : α} : a₁ * b₁ ≤ a₂ * b₂ → a₁ ≤ a₂ ∨ b₁ ≤ b₂ :=\n  by\n  contrapose!\n  exact fun h => mul_lt_mul_of_lt_of_lt h.1 h.2\n#align le_or_le_of_mul_le_mul le_or_le_of_mul_le_mul\n#align le_or_le_of_add_le_add le_or_le_of_add_le_add\n-/\n\n",
 "fn_min_mul_fn_max":
 "#print fn_min_mul_fn_max /-\n/-\nCopyright (c) 2016 Jeremy Avigad. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jeremy Avigad, Leonardo de Moura, Mario Carneiro, Johannes Hölzl\n-/\n@[to_additive]\ntheorem fn_min_mul_fn_max [linear_order α] [CommSemigroup β] (f : α → β) (n m : α) :\n    f (min n m) * f (max n m) = f n * f m := by cases' le_total n m with h h <;> simp [h, mul_comm]\n#align fn_min_mul_fn_max fn_min_mul_fn_max\n#align fn_min_add_fn_max fn_min_add_fn_max\n-/\n\n"}