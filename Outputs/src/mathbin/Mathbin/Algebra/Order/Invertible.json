{"invOf_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n#print invOf_pos /-\n/-\nCopyright (c) 2021 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov\n-/\n@[simp]\ntheorem invOf_pos [Invertible a] : 0 < («expr⅟») a ↔ 0 < a :=\n  haveI : 0 < a * («expr⅟») a := by simp only [mul_invOf_self, zero_lt_one]\n  ⟨fun h => pos_of_mul_pos_left this h.le, fun h => pos_of_mul_pos_right this h.le⟩\n#align inv_of_pos invOf_pos\n-/\n\n",
 "invOf_nonpos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n#print invOf_nonpos /-\n@[simp]\ntheorem invOf_nonpos [Invertible a] : («expr⅟») a ≤ 0 ↔ a ≤ 0 := by simp only [← not_lt, invOf_pos]\n#align inv_of_nonpos invOf_nonpos\n-/\n\n",
 "invOf_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n#print invOf_nonneg /-\n@[simp]\ntheorem invOf_nonneg [Invertible a] : 0 ≤ («expr⅟») a ↔ 0 ≤ a :=\n  haveI : 0 < a * («expr⅟») a := by simp only [mul_invOf_self, zero_lt_one]\n  ⟨fun h => (pos_of_mul_pos_left this h).le, fun h => (pos_of_mul_pos_right this h).le⟩\n#align inv_of_nonneg invOf_nonneg\n-/\n\n",
 "invOf_lt_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n#print invOf_lt_zero /-\n@[simp]\ntheorem invOf_lt_zero [Invertible a] : («expr⅟») a < 0 ↔ a < 0 := by simp only [← not_le, invOf_nonneg]\n#align inv_of_lt_zero invOf_lt_zero\n-/\n\n",
 "invOf_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n#print invOf_le_one /-\n@[simp]\ntheorem invOf_le_one [Invertible a] (h : 1 ≤ a) : («expr⅟») a ≤ 1 :=\n  haveI := @linear_order.decidable_le α _\n  mul_invOf_self a ▸ le_mul_of_one_le_left (invOf_nonneg.2 <| zero_le_one.trans h) h\n#align inv_of_le_one invOf_le_one\n-/\n\n"}