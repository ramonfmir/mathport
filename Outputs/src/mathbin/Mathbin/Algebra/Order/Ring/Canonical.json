{"tsub_mul":
 "#print tsub_mul /-\ntheorem tsub_mul (a b c : α) : (a - b) * c = a * c - b * c :=\n  Contravariant.AddLECancellable.tsub_mul\n#align tsub_mul tsub_mul\n-/\n\n",
 "mul_tsub":
 "#print mul_tsub /-\ntheorem mul_tsub (a b c : α) : a * (b - c) = a * b - a * c :=\n  Contravariant.AddLECancellable.mul_tsub\n#align mul_tsub mul_tsub\n-/\n\n",
 "mul_pos":
 "#print mul_pos /-\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n@[simp]\ntheorem mul_pos : 0 < a * b ↔ 0 < a ∧ 0 < b := by simp only [pos_iff_ne_zero, ne.def, mul_eq_zero, not_or]\n#align mul_pos mul_pos\n-/\n\n",
 "mul_add_mul_lt_mul_add_mul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print mul_add_mul_lt_mul_add_mul' /-\n/-- Binary **rearrangement inequality**. -/\ntheorem mul_add_mul_lt_mul_add_mul' (hba : b < a) (hdc : d < c) :\n    «expr • » a d + «expr • » b c < «expr • » a c + «expr • » b d :=\n  by\n  rw [add_comm («expr • » a d), add_comm («expr • » a c)]\n  exact mul_add_mul_lt_mul_add_mul hba hdc\n#align mul_add_mul_lt_mul_add_mul' mul_add_mul_lt_mul_add_mul'\n-/\n\n",
 "mul_add_mul_lt_mul_add_mul":
 "#print mul_add_mul_lt_mul_add_mul /-\n/-- Binary strict **rearrangement inequality**. -/\ntheorem mul_add_mul_lt_mul_add_mul (hab : a < b) (hcd : c < d) : a * d + b * c < a * c + b * d :=\n  by\n  obtain ⟨b, rfl⟩ := exists_add_of_le hab.le\n  obtain ⟨d, rfl⟩ := exists_add_of_le hcd.le\n  rw [mul_add, add_right_comm, mul_add, ← add_assoc]\n  exact add_lt_add_left (mul_lt_mul_of_pos_right hab <| (lt_add_iff_pos_right _).1 hcd) _\n#align mul_add_mul_lt_mul_add_mul mul_add_mul_lt_mul_add_mul\n-/\n\n",
 "mul_add_mul_le_mul_add_mul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print mul_add_mul_le_mul_add_mul' /-\n/-- Binary **rearrangement inequality**. -/\ntheorem mul_add_mul_le_mul_add_mul' (hba : b ≤ a) (hdc : d ≤ c) :\n    «expr • » a d + «expr • » b c ≤ «expr • » a c + «expr • » b d :=\n  by\n  rw [add_comm («expr • » a d), add_comm («expr • » a c)]\n  exact mul_add_mul_le_mul_add_mul hba hdc\n#align mul_add_mul_le_mul_add_mul' mul_add_mul_le_mul_add_mul'\n-/\n\n",
 "mul_add_mul_le_mul_add_mul":
 "#print mul_add_mul_le_mul_add_mul /-\n/-\nCopyright (c) 2016 Jeremy Avigad. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jeremy Avigad, Leonardo de Moura, Mario Carneiro\n-/\n/-- Binary **rearrangement inequality**. -/\ntheorem mul_add_mul_le_mul_add_mul (hab : a ≤ b) (hcd : c ≤ d) : a * d + b * c ≤ a * c + b * d :=\n  by\n  obtain ⟨b, rfl⟩ := exists_add_of_le hab\n  obtain ⟨d, rfl⟩ := exists_add_of_le hcd\n  rw [mul_add, add_right_comm, mul_add, ← add_assoc]\n  exact add_le_add_left (mul_le_mul_of_nonneg_right hab <| (le_add_iff_nonneg_right _).1 hcd) _\n#align mul_add_mul_le_mul_add_mul mul_add_mul_le_mul_add_mul\n-/\n\n"}