{"untop'_zero_mul":
 "@[simp]\ntheorem untop'_zero_mul (a b : WithTop α) : (a * b).untop' 0 = a.untop' 0 * b.untop' 0 :=\n  by\n  by_cases ha : a = 0; · rw [ha, zero_mul, ← coe_zero, untop'_coe, zero_mul]\n  by_cases hb : b = 0; · rw [hb, mul_zero, ← coe_zero, untop'_coe, mul_zero]\n  induction a using WithTop.recTopCoe; · rw [top_mul hb, untop'_top, zero_mul]\n  induction b using WithTop.recTopCoe; · rw [mul_top ha, untop'_top, mul_zero]\n  rw [← coe_mul, untop'_coe, untop'_coe, untop'_coe]\n#align untop'_zero_mul untop'_zero_mul\n\n",
 "top_mul_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem top_mul_top : («expr⊤» * «expr⊤» : WithTop α) = «expr⊤» :=\n  top_mul top_ne_zero\n#align top_mul_top top_mul_top\n\n",
 "top_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem top_mul {a : WithTop α} (h : a ≠ 0) : «expr⊤» * a = «expr⊤» := by cases a <;> simp [mul_def, h] <;> rfl\n#align top_mul top_mul\n\n",
 "mul_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem mul_top {a : WithTop α} (h : a ≠ 0) : a * «expr⊤» = «expr⊤» := by cases a <;> simp [mul_def, h] <;> rfl\n#align mul_top mul_top\n\n",
 "mul_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem mul_lt_top [preorder α] {a b : WithTop α} (ha : a ≠ «expr⊤») (hb : b ≠ «expr⊤») : a * b < «expr⊤» :=\n  by\n  lift a to α using ha\n  lift b to α using hb\n  simp only [← coe_mul, coe_lt_top]\n#align mul_lt_top mul_lt_top\n\n",
 "mul_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem mul_eq_top_iff {a b : WithTop α} : a * b = «expr⊤» ↔ a ≠ 0 ∧ b = «expr⊤» ∨ a = «expr⊤» ∧ b ≠ 0 :=\n  by\n  cases a <;> cases b <;> simp only [none_eq_top, some_eq_coe]\n  · simp [← coe_mul]\n  · by_cases hb : b = 0 <;> simp [hb]\n  · by_cases ha : a = 0 <;> simp [ha]\n  · simp [← coe_mul]\n#align mul_eq_top_iff mul_eq_top_iff\n\n",
 "mul_eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem mul_eq_bot_iff {a b : WithBot α} : a * b = «expr⊥» ↔ a ≠ 0 ∧ b = «expr⊥» ∨ a = «expr⊥» ∧ b ≠ 0 :=\n  WithTop.mul_eq_top_iff\n#align mul_eq_bot_iff mul_eq_bot_iff\n\n",
 "mul_def":
 "theorem mul_def {a b : WithBot α} : a * b = if a = 0 ∨ b = 0 then 0 else Option.map₂ (· * ·) a b :=\n  rfl\n#align mul_def mul_def\n\n",
 "mul_coe":
 "theorem mul_coe {b : α} (hb : b ≠ 0) {a : WithBot α} : a * b = a.bind fun a : α => ↑(a * b) :=\n  WithTop.mul_coe hb\n#align mul_coe mul_coe\n\n",
 "mul_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem mul_bot {a : WithBot α} (h : a ≠ 0) : a * «expr⊥» = «expr⊥» :=\n  WithTop.mul_top h\n#align mul_bot mul_bot\n\n",
 "distrib'":
 "private theorem distrib' (a b c : WithTop α) : (a + b) * c = a * c + b * c :=\n  by\n  induction c using WithTop.recTopCoe\n  · by_cases ha : a = 0 <;> simp [ha]\n  · by_cases hc : c = 0\n    · simp [hc]\n    simp [mul_coe hc]\n    cases a <;> cases b\n    repeat' first |rfl|exact congr_arg some (add_mul _ _ _)\n#align distrib' distrib'\n\n",
 "coe_mul":
 "@[norm_cast]\ntheorem coe_mul {a b : α} : (↑(a * b) : WithBot α) = a * b :=\n  WithTop.coe_mul\n#align coe_mul coe_mul\n\n",
 "bot_mul_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot_mul_bot : («expr⊥» * «expr⊥» : WithBot α) = «expr⊥» :=\n  WithTop.top_mul_top\n#align bot_mul_bot bot_mul_bot\n\n",
 "bot_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot_mul {a : WithBot α} (h : a ≠ 0) : «expr⊥» * a = «expr⊥» :=\n  WithTop.top_mul h\n#align bot_mul bot_mul\n\n",
 "bot_lt_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem bot_lt_mul [preorder α] {a b : WithBot α} (ha : «expr⊥» < a) (hb : «expr⊥» < b) : «expr⊥» < a * b :=\n  by\n  lift a to α using ne_bot_of_gt ha\n  lift b to α using ne_bot_of_gt hb\n  simp only [← coe_mul, bot_lt_coe]\n#align bot_lt_mul bot_lt_mul\n\n"}