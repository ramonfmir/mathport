{"subset_upperBounds_mul":
 "#print subset_upperBounds_mul /-\n@[to_additive]\ntheorem subset_upperBounds_mul (s t : Set M) : upperBounds s * upperBounds t ⊆ upperBounds (s * t) :=\n  image2_subset_iff.2 fun x hx y hy => mul_mem_upperBounds_mul hx hy\n#align subset_upper_bounds_mul subset_upperBounds_mul\n#align subset_upper_bounds_add subset_upperBounds_add\n-/\n\n",
 "subset_lowerBounds_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print subset_lowerBounds_mul /-\n@[to_additive]\ntheorem subset_lowerBounds_mul (s t : Set M) : lowerBounds s * lowerBounds t ⊆ lowerBounds (s * t) :=\n  @subset_upperBounds_mul («expr ᵒᵈ» M) _ _ _ _ _ _\n#align subset_lower_bounds_mul subset_lowerBounds_mul\n#align subset_lower_bounds_add subset_lowerBounds_add\n-/\n\n",
 "mul_mem_upperBounds_mul":
 "#print mul_mem_upperBounds_mul /-\n@[to_additive]\ntheorem mul_mem_upperBounds_mul {s t : Set M} {a b : M} (ha : a ∈ upperBounds s) (hb : b ∈ upperBounds t) :\n    a * b ∈ upperBounds (s * t) :=\n  forall_image2_iff.2 fun x hx y hy => mul_le_mul' (ha hx) (hb hy)\n#align mul_mem_upper_bounds_mul mul_mem_upperBounds_mul\n#align add_mem_upper_bounds_add add_mem_upperBounds_add\n-/\n\n",
 "mul_mem_lowerBounds_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print mul_mem_lowerBounds_mul /-\n@[to_additive]\ntheorem mul_mem_lowerBounds_mul {s t : Set M} {a b : M} (ha : a ∈ lowerBounds s) (hb : b ∈ lowerBounds t) :\n    a * b ∈ lowerBounds (s * t) :=\n  @mul_mem_upperBounds_mul («expr ᵒᵈ» M) _ _ _ _ _ _ _ _ ha hb\n#align mul_mem_lower_bounds_mul mul_mem_lowerBounds_mul\n#align add_mem_lower_bounds_add add_mem_lowerBounds_add\n-/\n\n",
 "mul_csupᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print mul_csupᵢ /-\n@[to_additive]\ntheorem mul_csupᵢ (hf : BddAbove (Set.range f)) (a : G) :\n    a * «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (a * f i) :=\n  (OrderIso.mulLeft a).map_csupr hf\n#align mul_csupr mul_csupᵢ\n#align add_csupr add_csupᵢ\n-/\n\n",
 "mul":
 "#print BddBelow.mul /-\n@[to_additive]\ntheorem BddBelow.mul {s t : Set M} (hs : BddBelow s) (ht : BddBelow t) : BddBelow (s * t) :=\n  (hs.mul ht).mono (subset_lowerBounds_mul s t)\n#align bdd_below.mul BddBelow.mul\n#align bdd_below.add BddBelow.add\n-/\n\n",
 "isLUB_inv'":
 "#print isLUB_inv' /-\n@[to_additive]\ntheorem isLUB_inv' : IsLUB s⁻¹ a⁻¹ ↔ IsGLB s a :=\n  (OrderIso.inv G).is_lub_preimage'\n#align is_lub_inv' isLUB_inv'\n#align is_lub_neg' isLUB_neg'\n-/\n\n",
 "isLUB_inv":
 "#print isLUB_inv /-\n@[simp, to_additive]\ntheorem isLUB_inv : IsLUB s⁻¹ a ↔ IsGLB s a⁻¹ :=\n  (OrderIso.inv G).is_lub_preimage\n#align is_lub_inv isLUB_inv\n#align is_lub_neg isLUB_neg\n-/\n\n",
 "isGLB_inv'":
 "#print isGLB_inv' /-\n@[to_additive]\ntheorem isGLB_inv' : IsGLB s⁻¹ a⁻¹ ↔ IsLUB s a :=\n  (OrderIso.inv G).is_glb_preimage'\n#align is_glb_inv' isGLB_inv'\n#align is_glb_neg' isGLB_neg'\n-/\n\n",
 "isGLB_inv":
 "#print isGLB_inv /-\n@[simp, to_additive]\ntheorem isGLB_inv : IsGLB s⁻¹ a ↔ IsLUB s a⁻¹ :=\n  (OrderIso.inv G).is_glb_preimage\n#align is_glb_inv isGLB_inv\n#align is_glb_neg isGLB_neg\n-/\n\n",
 "inv":
 "#print IsLUB.inv /-\n@[to_additive]\ntheorem IsLUB.inv (h : IsLUB s a) : IsGLB s⁻¹ a⁻¹ :=\n  isGLB_inv'.2 h\n#align is_lub.inv IsLUB.inv\n#align is_lub.neg IsLUB.neg\n-/\n\n",
 "csupᵢ_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print csupᵢ_mul /-\n@[to_additive]\ntheorem csupᵢ_mul (hf : BddAbove (Set.range f)) (a : G) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) * a =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i * a) :=\n  (OrderIso.mulRight a).map_csupr hf\n#align csupr_mul csupᵢ_mul\n#align csupr_add csupᵢ_add\n-/\n\n",
 "csupᵢ_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n#print csupᵢ_div /-\n@[to_additive]\ntheorem csupᵢ_div (hf : BddAbove (Set.range f)) (a : G) :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i) / a =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (f i / a) :=\n  by simp only [div_eq_mul_inv, csupᵢ_mul hf]\n#align csupr_div csupᵢ_div\n#align csupr_sub csupᵢ_sub\n-/\n\n",
 "bddBelow_inv":
 "#print bddBelow_inv /-\n@[simp, to_additive]\ntheorem bddBelow_inv : BddBelow s⁻¹ ↔ BddAbove s :=\n  (OrderIso.inv G).bdd_below_preimage\n#align bdd_below_inv bddBelow_inv\n#align bdd_below_neg bddBelow_neg\n-/\n\n",
 "bddAbove_inv":
 "#print bddAbove_inv /-\n/-\nCopyright (c) 2021 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov\n-/\n@[simp, to_additive]\ntheorem bddAbove_inv : BddAbove s⁻¹ ↔ BddBelow s :=\n  (OrderIso.inv G).bdd_above_preimage\n#align bdd_above_inv bddAbove_inv\n#align bdd_above_neg bddAbove_neg\n-/\n\n"}