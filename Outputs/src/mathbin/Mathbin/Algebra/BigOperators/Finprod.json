{"smul_finsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print smul_finsum /-\ntheorem smul_finsum {R M : Type _} [Ring R] [AddCommGroup M] [Module R M] [NoZeroSMulDivisors R M] (c : R) (f : ι → M) :\n    «expr • » c (finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\" (f i)) =\n      finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\" («expr • » c (f i)) :=\n  by\n  rcases eq_or_ne c 0 with (rfl | hc); · simp\n  exact (smulAddHom R M c).map_finsum_of_injective (smul_right_injective M hc) _\n#align smul_finsum smul_finsum\n-/\n\n",
 "single_le_finprod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print single_le_finprod /-\n@[to_additive]\ntheorem single_le_finprod {M : Type _} [OrderedCommMonoid M] (i : α) {f : α → M} (hf : (mulSupport f).finite)\n    (h : ∀ j, 1 ≤ f j) :\n    f i ≤ finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f j) := by\n  classical calc\n      f i ≤\n          finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n            (insert i hf.to_finset) (f j) :=\n        Finset.single_le_prod' (fun j hj => h j) (Finset.mem_insert_self _ _)\n      _ = finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f j) :=\n        (finprod_eq_prod_of_mulSupport_toFinset_subset _ hf (Finset.subset_insert _ _)).symm\n      \n#align single_le_finprod single_le_finprod\n#align single_le_finsum single_le_finsum\n-/\n\n",
 "prod_finprod_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print prod_finprod_comm /-\n@[to_additive]\ntheorem prod_finprod_comm (s : Finset α) (f : α → β → M) (h : ∀ a ∈ s, (mulSupport (f a)).finite) :\n    finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s\n        (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a b)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f a b)) :=\n  (finprod_prod_comm s (fun b a => f a b) h).symm\n#align prod_finprod_comm prod_finprod_comm\n#align sum_finsum_comm sum_finsum_comm\n-/\n\n",
 "one_le_finprod'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print one_le_finprod' /-\n@[to_additive finsum_nonneg]\ntheorem one_le_finprod' {M : Type _} [OrderedCommMonoid M] {f : α → M} (hf : ∀ i, 1 ≤ f i) :\n    1 ≤ finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  finprod_induction _ le_rfl (fun _ _ => one_le_mul) hf\n#align one_le_finprod' one_le_finprod'\n#align finsum_nonneg finsum_nonneg\n-/\n\n",
 "nonempty_of_finprod_mem_ne_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print nonempty_of_finprod_mem_ne_one /-\n/-- A set `s` is nonempty if the product of some function over `s` is not equal to `1`. -/\n@[to_additive \"A set `s` is nonempty if the sum of some function over `s` is not equal to `0`.\"]\ntheorem nonempty_of_finprod_mem_ne_one\n    (h : finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) ≠ 1) :\n    s.nonempty :=\n  nonempty_iff_ne_empty.2 fun h' => h <| h'.symm ▸ finprod_mem_empty\n#align nonempty_of_finprod_mem_ne_one nonempty_of_finprod_mem_ne_one\n#align nonempty_of_finsum_mem_ne_zero nonempty_of_finsum_mem_ne_zero\n-/\n\n",
 "mul_finsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n#print mul_finsum /-\ntheorem mul_finsum {R : Type _} [Semiring R] (f : α → R) (r : R) (h : (support f).finite) :\n    r * finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\" (f a) =\n      finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\" (r * f a) :=\n  (AddMonoidHom.mulLeft r).map_finsum h\n#align mul_finsum mul_finsum\n-/\n\n",
 "mul_finprod_cond_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print mul_finprod_cond_ne /-\n@[to_additive]\ntheorem mul_finprod_cond_ne (a : α) (hf : (mulSupport f).finite) :\n    f a * finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by\n  classical\n    rw [finprod_eq_prod _ hf]\n    have h : ∀ x : α, f x ≠ 1 → (x ≠ a ↔ x ∈ hf.to_finset \\ {a}) :=\n      by\n      intro x hx\n      rw [Finset.mem_sdiff, Finset.mem_singleton, finite.mem_to_finset, mem_mul_support]\n      exact ⟨fun h => and.intro hx h, fun h => h.2⟩\n    rw [finprod_cond_eq_prod_of_cond_iff f h, Finset.sdiff_singleton_eq_erase]\n    by_cases ha : a ∈ mul_support f\n    · apply Finset.mul_prod_erase _ _ ((finite.mem_to_finset _).mpr ha)\n    · rw [mem_mul_support, Classical.not_not] at ha\n      rw [ha, one_mul]\n      apply Finset.prod_erase _ ha\n#align mul_finprod_cond_ne mul_finprod_cond_ne\n#align add_finsum_cond_ne add_finsum_cond_ne\n-/\n\n",
 "mulSupport_of_fiberwise_prod_subset_image":
 "#print Finset.mulSupport_of_fiberwise_prod_subset_image /-\n@[to_additive]\ntheorem Finset.mulSupport_of_fiberwise_prod_subset_image [DecidableEq β] (s : Finset α) (f : α → M) (g : α → β) :\n    (mulSupport fun b => (s.filter fun a => g a = b).prod f) ⊆ s.image g :=\n  by\n  simp only [Finset.coe_image, Set.mem_image, Finset.mem_coe, Function.support_subset_iff]\n  intro b h\n  suffices (s.filter fun a : α => g a = b).nonempty by\n    simpa only [s.fiber_nonempty_iff_mem_image g b, Finset.mem_image, exists_prop]\n  exact Finset.nonempty_of_prod_ne_one h\n#align finset.mul_support_of_fiberwise_prod_subset_image Finset.mulSupport_of_fiberwise_prod_subset_image\n#align finset.support_of_fiberwise_sum_subset_image Finset.support_of_fiberwise_sum_subset_image\n-/\n\n",
 "map_finprod_pLift":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print MonoidHom.map_finprod_pLift /-\n@[to_additive]\ntheorem MonoidHom.map_finprod_pLift (f : «expr →* » M N) (g : α → M) (h : (mulSupport <| g ∘ PLift.down).finite) :\n    f (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g x)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (g x)) :=\n  by\n  rw [finprod_eq_prod_pLift_of_mulSupport_subset h.coe_to_finset.ge, finprod_eq_prod_pLift_of_mulSupport_subset,\n    f.map_prod]\n  rw [h.coe_to_finset]\n  exact mul_support_comp_subset f.map_one (g ∘ PLift.down)\n#align monoid_hom.map_finprod_plift MonoidHom.map_finprod_pLift\n#align add_monoid_hom.map_finsum_plift AddMonoidHom.map_finsum_pLift\n-/\n\n",
 "map_finprod_of_preimage_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print MonoidHom.map_finprod_of_preimage_one /-\n@[to_additive]\ntheorem MonoidHom.map_finprod_of_preimage_one (f : «expr →* » M N) (hf : ∀ x, f x = 1 → x = 1) (g : α → M) :\n    f (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g i)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (g i)) :=\n  by\n  by_cases hg : (mul_support <| g ∘ PLift.down).finite; · exact f.map_finprod_plift g hg\n  rw [finprod, dif_neg, f.map_one, finprod, dif_neg]\n  exacts[infinite.mono (fun x hx => mt (hf (g x.down)) hx) hg, hg]\n#align monoid_hom.map_finprod_of_preimage_one MonoidHom.map_finprod_of_preimage_one\n#align add_monoid_hom.map_finsum_of_preimage_zero AddMonoidHom.map_finsum_of_preimage_zero\n-/\n\n",
 "map_finprod_of_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print MonoidHom.map_finprod_of_injective /-\n@[to_additive]\ntheorem MonoidHom.map_finprod_of_injective (g : «expr →* » M N) (hg : injective g) (f : α → M) :\n    g (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g (f i)) :=\n  g.map_finprod_of_preimage_one (fun x => (hg.eq_iff' g.map_one).mp) f\n#align monoid_hom.map_finprod_of_injective MonoidHom.map_finprod_of_injective\n#align add_monoid_hom.map_finsum_of_injective AddMonoidHom.map_finsum_of_injective\n-/\n\n",
 "map_finprod_mem'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print MonoidHom.map_finprod_mem' /-\n/-- A more general version of `monoid_hom.map_finprod_mem` that requires `s ∩ mul_support f` rather\nthan `s` to be finite. -/\n@[to_additive\n      \"A more general version of `add_monoid_hom.map_finsum_mem` that requires\\n`s ∩ support f` rather than `s` to be finite.\"]\ntheorem MonoidHom.map_finprod_mem' {f : α → M} (g : «expr →* » M N) (h₀ : (s ∩ mulSupport f).finite) :\n    g (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f j)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g (f i)) :=\n  by\n  rw [g.map_finprod]\n  · simp only [g.map_finprod_Prop]\n  · simpa only [finprod_eq_mulIndicator_apply, mul_support_mul_indicator]\n#align monoid_hom.map_finprod_mem' MonoidHom.map_finprod_mem'\n#align add_monoid_hom.map_finsum_mem' AddMonoidHom.map_finsum_mem'\n-/\n\n",
 "map_finprod_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print MulEquiv.map_finprod_mem /-\n@[to_additive]\ntheorem MulEquiv.map_finprod_mem (g : «expr ≃* » M N) (f : α → M) {s : Set α} (hs : s.finite) :\n    g (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g (f i)) :=\n  g.to_monoid_hom.map_finprod_mem f hs\n#align mul_equiv.map_finprod_mem MulEquiv.map_finprod_mem\n#align add_equiv.map_finsum_mem AddEquiv.map_finsum_mem\n-/\n\n",
 "map_finprod_Prop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print MonoidHom.map_finprod_Prop /-\n@[to_additive]\ntheorem MonoidHom.map_finprod_Prop {p : Prop} (f : «expr →* » M N) (g : p → M) :\n    f (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g x)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (g x)) :=\n  f.map_finprod_plift g (Set.toFinite _)\n#align monoid_hom.map_finprod_Prop MonoidHom.map_finprod_Prop\n#align add_monoid_hom.map_finsum_Prop AddMonoidHom.map_finsum_Prop\n-/\n\n",
 "map_finprod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print MonoidHom.map_finprod /-\n@[to_additive]\ntheorem MonoidHom.map_finprod {f : α → M} (g : «expr →* » M N) (hf : (mulSupport f).finite) :\n    g (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g (f i)) :=\n  g.map_finprod_plift f <| hf.preimage <| Equiv.plift.injective.inj_on _\n#align monoid_hom.map_finprod MonoidHom.map_finprod\n#align add_monoid_hom.map_finsum AddMonoidHom.map_finsum\n-/\n\n",
 "finsum_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print finsum_smul /-\ntheorem finsum_smul {R M : Type _} [Ring R] [AddCommGroup M] [Module R M] [NoZeroSMulDivisors R M] (f : ι → R) (x : M) :\n    «expr • » (finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\" (f i)) x =\n      finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\" («expr • » (f i) x) :=\n  by\n  rcases eq_or_ne x 0 with (rfl | hx); · simp\n  exact ((smulAddHom R M).flip x).map_finsum_of_injective (smul_left_injective R hx) _\n#align finsum_smul finsum_smul\n-/\n\n",
 "finsum_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finsum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum -/\n#print finsum_mul /-\ntheorem finsum_mul {R : Type _} [Semiring R] (f : α → R) (r : R) (h : (support f).finite) :\n    finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\" (f a) * r =\n      finsum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finsum\" (f a * r) :=\n  (AddMonoidHom.mulRight r).map_finsum h\n#align finsum_mul finsum_mul\n-/\n\n",
 "finprod_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_unique /-\n@[to_additive]\ntheorem finprod_unique [Unique α] (f : α → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = f default :=\n  finprod_eq_single f default fun x hx => (hx <| Unique.eq_default _).elim\n#align finprod_unique finprod_unique\n#align finsum_unique finsum_unique\n-/\n\n",
 "finprod_true":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_true /-\n@[simp, to_additive]\ntheorem finprod_true (f : True → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = f trivial :=\n  @finprod_unique M True _ ⟨⟨trivial⟩, fun _ => rfl⟩ f\n#align finprod_true finprod_true\n#align finsum_true finsum_true\n-/\n\n",
 "finprod_subtype_eq_finprod_cond":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_subtype_eq_finprod_cond /-\n@[to_additive]\ntheorem finprod_subtype_eq_finprod_cond (p : α → Prop) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f j) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  finprod_set_coe_eq_finprod_mem { i | p i }\n#align finprod_subtype_eq_finprod_cond finprod_subtype_eq_finprod_cond\n#align finsum_subtype_eq_finsum_cond finsum_subtype_eq_finsum_cond\n-/\n\n",
 "finprod_set_coe_eq_finprod_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_set_coe_eq_finprod_mem /-\n@[to_additive]\ntheorem finprod_set_coe_eq_finprod_mem (s : Set α) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f j) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by\n  rw [← finprod_mem_range, Subtype.range_coe]\n  exact Subtype.coe_injective\n#align finprod_set_coe_eq_finprod_mem finprod_set_coe_eq_finprod_mem\n#align finsum_set_coe_eq_finsum_mem finsum_set_coe_eq_finsum_mem\n-/\n\n",
 "finprod_prod_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_prod_comm /-\n@[to_additive]\ntheorem finprod_prod_comm (s : Finset β) (f : α → β → M) (h : ∀ b ∈ s, (mulSupport fun a => f a b).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f a b)) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s\n        (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a b)) :=\n  by\n  have hU :\n    (mul_support fun a =>\n        finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f a b)) ⊆\n      (s.finite_to_set.bUnion fun b hb => h b (Finset.mem_coe.1 hb)).to_finset :=\n    by\n    rw [finite.coe_to_finset]\n    intro x hx\n    simp only [exists_prop, mem_Union, ne.def, mem_mul_support, Finset.mem_coe]\n    contrapose! hx\n    rw [mem_mul_support, Classical.not_not, Finset.prod_congr rfl hx, Finset.prod_const_one]\n  rw [finprod_eq_prod_of_mulSupport_subset _ hU, Finset.prod_comm]\n  refine' Finset.prod_congr rfl fun b hb => (finprod_eq_prod_of_mulSupport_subset _ _).symm\n  intro a ha\n  simp only [finite.coe_to_finset, mem_Union]\n  exact ⟨b, hb, ha⟩\n#align finprod_prod_comm finprod_prod_comm\n#align finsum_sum_comm finsum_sum_comm\n-/\n\n",
 "finprod_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_pow /-\n@[to_additive]\ntheorem finprod_pow (hf : (mulSupport f).finite) (n : ℕ) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) ^ n =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i ^ n) :=\n  (powMonoidHom n).map_finprod hf\n#align finprod_pow finprod_pow\n#align finsum_nsmul finsum_nsmul\n-/\n\n",
 "finprod_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_one /-\n@[simp, to_additive]\ntheorem finprod_one :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (1 : M) = 1 :=\n  by\n  have : (mul_support fun x : PLift α => (fun _ => 1 : α → M) x.down) ⊆ (∅ : Finset (PLift α)) := fun x h => h rfl\n  rw [finprod_eq_prod_pLift_of_mulSupport_subset this, Finset.prod_empty]\n#align finprod_one finprod_one\n#align finsum_zero finsum_zero\n-/\n\n",
 "finprod_of_isEmpty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_of_isEmpty /-\n@[to_additive]\ntheorem finprod_of_isEmpty [IsEmpty α] (f : α → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = 1 :=\n  by\n  rw [← finprod_one]\n  congr\n#align finprod_of_is_empty finprod_of_isEmpty\n#align finsum_of_is_empty finsum_of_isEmpty\n-/\n\n",
 "finprod_of_infinite_mulSupport":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_of_infinite_mulSupport /-\n@[to_additive]\ntheorem finprod_of_infinite_mulSupport {f : α → M} (hf : (mulSupport f).infinite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = 1 := by\n  classical rw [finprod_def, dif_neg hf]\n#align finprod_of_infinite_mul_support finprod_of_infinite_mulSupport\n#align finsum_of_infinite_support finsum_of_infinite_support\n-/\n\n",
 "finprod_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_nonneg /-\ntheorem finprod_nonneg {R : Type _} [OrderedCommSemiring R] {f : α → R} (hf : ∀ x, 0 ≤ f x) :\n    0 ≤ finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f x) :=\n  finprod_induction (fun x => 0 ≤ x) zero_le_one (fun x y => mul_nonneg) hf\n#align finprod_nonneg finprod_nonneg\n-/\n\n",
 "finprod_mul_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mul_distrib /-\n/-- If the multiplicative supports of `f` and `g` are finite, then the product of `f i * g i` equals\nthe product of `f i` multiplied by the product of `g i`. -/\n@[to_additive\n      \"If the additive supports of `f` and `g` are finite, then the sum of `f i + g i`\\nequals the sum of `f i` plus the sum of `g i`.\"]\ntheorem finprod_mul_distrib (hf : (mulSupport f).finite) (hg : (mulSupport g).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i * g i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g i) :=\n  by\n  classical\n    rw [finprod_eq_prod_of_mulSupport_toFinset_subset _ hf (Finset.subset_union_left _ _),\n      finprod_eq_prod_of_mulSupport_toFinset_subset _ hg (Finset.subset_union_right _ _), ← Finset.prod_mul_distrib]\n    refine' finprod_eq_prod_of_mulSupport_subset _ _\n    simp [mul_support_mul]\n#align finprod_mul_distrib finprod_mul_distrib\n#align finsum_add_distrib finsum_add_distrib\n-/\n\n",
 "finprod_mem_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_univ /-\n@[to_additive]\ntheorem finprod_mem_univ (f : α → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  finprod_congr fun i => finprod_true _\n#align finprod_mem_univ finprod_mem_univ\n#align finsum_mem_univ finsum_mem_univ\n-/\n\n",
 "finprod_mem_unionₛ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_unionₛ /-\n/-- If `t` is a finite set of pairwise disjoint finite sets, then the product of `f a`\nover `a ∈ ⋃₀ t` is the product over `s ∈ t` of the products of `f a` over `a ∈ s`. -/\n@[to_additive\n      \"If `t` is a finite set of pairwise disjoint finite sets, then the sum of `f a` over\\n`a ∈ ⋃₀ t` is the sum over `s ∈ t` of the sums of `f a` over `a ∈ s`.\"]\ntheorem finprod_mem_unionₛ {t : Set (Set α)} (h : t.pairwise_disjoint id) (ht₀ : t.finite)\n    (ht₁ : ∀ x ∈ t, Set.Finite x) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a)) :=\n  by\n  rw [Set.unionₛ_eq_bunionᵢ]\n  exact finprod_mem_bunionᵢ h ht₀ ht₁\n#align finprod_mem_sUnion finprod_mem_unionₛ\n#align finsum_mem_sUnion finsum_mem_unionₛ\n-/\n\n",
 "finprod_mem_unionᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr on » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_unionᵢ /-\n/-- Given a family of pairwise disjoint finite sets `t i` indexed by a finite type, the product of\n`f a` over the union `⋃ i, t i` is equal to the product over all indexes `i` of the products of\n`f a` over `a ∈ t i`. -/\n@[to_additive\n      \"Given a family of pairwise disjoint finite sets `t i` indexed by a finite type, the\\nsum of `f a` over the union `⋃ i, t i` is equal to the sum over all indexes `i` of the sums of `f a`\\nover `a ∈ t i`.\"]\ntheorem finprod_mem_unionᵢ [Finite ι] {t : ι → Set α} (h : Pairwise («expr on » Disjoint t)) (ht : ∀ i, (t i).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a)) :=\n  by\n  cases nonempty_fintype ι\n  lift t to ι → Finset α using ht\n  classical\n    rw [← bUnion_univ, ← Finset.coe_univ, ← Finset.coe_bunionᵢ, finprod_mem_coe_finset, Finset.prod_bunionᵢ]\n    · simp only [finprod_mem_coe_finset, finprod_eq_prod_of_fintype]\n    · exact fun x _ y _ hxy => Finset.disjoint_coe.1 (h hxy)\n#align finprod_mem_Union finprod_mem_unionᵢ\n#align finsum_mem_Union finsum_mem_unionᵢ\n-/\n\n",
 "finprod_mem_union_inter'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_union_inter' /-\n/-- A more general version of `finprod_mem_union_inter` that requires `s ∩ mul_support f` and\n`t ∩ mul_support f` rather than `s` and `t` to be finite. -/\n@[to_additive\n      \"A more general version of `finsum_mem_union_inter` that requires `s ∩ support f` and\\n`t ∩ support f` rather than `s` and `t` to be finite.\"]\ntheorem finprod_mem_union_inter' (hs : (s ∩ mulSupport f).finite) (ht : (t ∩ mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by\n  rw [← finprod_mem_inter_mulSupport f s, ← finprod_mem_inter_mulSupport f t, ← finprod_mem_union_inter hs ht, ←\n    union_inter_distrib_right, finprod_mem_inter_mulSupport, ← finprod_mem_inter_mulSupport f (s ∩ t)]\n  congr 2\n  rw [inter_left_comm, inter_assoc, inter_assoc, inter_self, inter_left_comm]\n#align finprod_mem_union_inter' finprod_mem_union_inter'\n#align finsum_mem_union_inter' finsum_mem_union_inter'\n-/\n\n",
 "finprod_mem_union_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_union_inter /-\n/-- Given finite sets `s` and `t`, the product of `f i` over `i ∈ s ∪ t` times the product of\n`f i` over `i ∈ s ∩ t` equals the product of `f i` over `i ∈ s` times the product of `f i`\nover `i ∈ t`. -/\n@[to_additive\n      \"Given finite sets `s` and `t`, the sum of `f i` over `i ∈ s ∪ t` plus the sum of\\n`f i` over `i ∈ s ∩ t` equals the sum of `f i` over `i ∈ s` plus the sum of `f i` over `i ∈ t`.\"]\ntheorem finprod_mem_union_inter (hs : s.finite) (ht : t.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by\n  lift s to Finset α using hs; lift t to Finset α using ht\n  classical\n    rw [← Finset.coe_union, ← Finset.coe_inter]\n    simp only [finprod_mem_coe_finset, Finset.prod_union_inter]\n#align finprod_mem_union_inter finprod_mem_union_inter\n#align finsum_mem_union_inter finsum_mem_union_inter\n-/\n\n",
 "finprod_mem_union''":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_union'' /-\n/-- A more general version of `finprod_mem_union'` that requires `s ∩ mul_support f` and\n`t ∩ mul_support f` rather than `s` and `t` to be disjoint -/\n@[to_additive\n      \"A more general version of `finsum_mem_union'` that requires `s ∩ support f` and\\n`t ∩ support f` rather than `s` and `t` to be disjoint\"]\ntheorem finprod_mem_union'' (hst : Disjoint (s ∩ mulSupport f) (t ∩ mulSupport f)) (hs : (s ∩ mulSupport f).finite)\n    (ht : (t ∩ mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by\n  rw [← finprod_mem_inter_mulSupport f s, ← finprod_mem_inter_mulSupport f t, ← finprod_mem_union hst hs ht, ←\n    union_inter_distrib_right, finprod_mem_inter_mulSupport]\n#align finprod_mem_union'' finprod_mem_union''\n#align finsum_mem_union'' finsum_mem_union''\n-/\n\n",
 "finprod_mem_union'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_union' /-\n/-- A more general version of `finprod_mem_union` that requires `s ∩ mul_support f` and\n`t ∩ mul_support f` rather than `s` and `t` to be finite. -/\n@[to_additive\n      \"A more general version of `finsum_mem_union` that requires `s ∩ support f` and\\n`t ∩ support f` rather than `s` and `t` to be finite.\"]\ntheorem finprod_mem_union' (hst : Disjoint s t) (hs : (s ∩ mulSupport f).finite) (ht : (t ∩ mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by rw [← finprod_mem_union_inter' hs ht, disjoint_iff_inter_eq_empty.1 hst, finprod_mem_empty, mul_one]\n#align finprod_mem_union' finprod_mem_union'\n#align finsum_mem_union' finsum_mem_union'\n-/\n\n",
 "finprod_mem_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_union /-\n/-- Given two finite disjoint sets `s` and `t`, the product of `f i` over `i ∈ s ∪ t` equals the\nproduct of `f i` over `i ∈ s` times the product of `f i` over `i ∈ t`. -/\n@[to_additive\n      \"Given two finite disjoint sets `s` and `t`, the sum of `f i` over `i ∈ s ∪ t` equals\\nthe sum of `f i` over `i ∈ s` plus the sum of `f i` over `i ∈ t`.\"]\ntheorem finprod_mem_union (hst : Disjoint s t) (hs : s.finite) (ht : t.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  finprod_mem_union' hst (hs.inter_of_left _) (ht.inter_of_left _)\n#align finprod_mem_union finprod_mem_union\n#align finsum_mem_union finsum_mem_union\n-/\n\n",
 "finprod_mem_singleton":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_singleton /-\n/-- The product of `f i` over `i ∈ {a}` equals `f a`. -/\n@[to_additive \"The sum of `f i` over `i ∈ {a}` equals `f a`.\"]\ntheorem finprod_mem_singleton :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = f a := by\n  rw [← Finset.coe_singleton, finprod_mem_coe_finset, Finset.prod_singleton]\n#align finprod_mem_singleton finprod_mem_singleton\n#align finsum_mem_singleton finsum_mem_singleton\n-/\n\n",
 "finprod_mem_range'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_range' /-\n/-- The product of `f y` over `y ∈ set.range g` equals the product of `f (g i)` over all `i`\nprovided that `g` is injective on `mul_support (f ∘ g)`. -/\n@[to_additive\n      \"The sum of `f y` over `y ∈ set.range g` equals the sum of `f (g i)` over all `i`\\nprovided that `g` is injective on `support (f ∘ g)`.\"]\ntheorem finprod_mem_range' {g : β → α} (hg : (mulSupport (f ∘ g)).inj_on g) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (g j)) :=\n  by\n  rw [← image_univ, finprod_mem_image', finprod_mem_univ]\n  rwa [univ_inter]\n#align finprod_mem_range' finprod_mem_range'\n#align finsum_mem_range' finsum_mem_range'\n-/\n\n",
 "finprod_mem_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_range /-\n/-- The product of `f y` over `y ∈ set.range g` equals the product of `f (g i)` over all `i`\nprovided that `g` is injective. -/\n@[to_additive\n      \"The sum of `f y` over `y ∈ set.range g` equals the sum of `f (g i)` over all `i`\\nprovided that `g` is injective.\"]\ntheorem finprod_mem_range {g : β → α} (hg : injective g) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (g j)) :=\n  finprod_mem_range' (hg.inj_on _)\n#align finprod_mem_range finprod_mem_range\n#align finsum_mem_range finsum_mem_range\n-/\n\n",
 "finprod_mem_pair":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_pair /-\n/-- The product of `f i` over `i ∈ {a, b}`, `a ≠ b`, is equal to `f a * f b`. -/\n@[to_additive \"The sum of `f i` over `i ∈ {a, b}`, `a ≠ b`, is equal to `f a + f b`.\"]\ntheorem finprod_mem_pair (h : a ≠ b) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = f a * f b :=\n  by\n  rw [finprod_mem_insert, finprod_mem_singleton]\n  exacts[h, finite_singleton b]\n#align finprod_mem_pair finprod_mem_pair\n#align finsum_mem_pair finsum_mem_pair\n-/\n\n",
 "finprod_mem_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_one /-\n/-- The product of the constant function `1` over any set equals `1`. -/\n@[to_additive \"The product of the constant function `0` over any set equals `0`.\"]\ntheorem finprod_mem_one (s : Set α) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (1 : M) = 1 := by simp\n#align finprod_mem_one finprod_mem_one\n#align finsum_mem_zero finsum_mem_zero\n-/\n\n",
 "finprod_mem_of_eqOn_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_of_eqOn_one /-\n/-- If a function `f` equals `1` on a set `s`, then the product of `f i` over `i ∈ s` equals `1`. -/\n@[to_additive \"If a function `f` equals `0` on a set `s`, then the product of `f i` over `i ∈ s`\\nequals `0`.\"]\ntheorem finprod_mem_of_eqOn_one (hf : s.eq_on f 1) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = 1 :=\n  by\n  rw [← finprod_mem_one s]\n  exact finprod_mem_congr rfl hf\n#align finprod_mem_of_eq_on_one finprod_mem_of_eqOn_one\n#align finsum_mem_of_eq_on_zero finsum_mem_of_eqOn_zero\n-/\n\n",
 "finprod_mem_mul_distrib'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_mul_distrib' /-\n/-- A more general version of `finprod_mem_mul_distrib` that only requires `s ∩ mul_support f` and\n`s ∩ mul_support g` rather than `s` to be finite. -/\n@[to_additive\n      \"A more general version of `finsum_mem_add_distrib` that only requires `s ∩ support f`\\nand `s ∩ support g` rather than `s` to be finite.\"]\ntheorem finprod_mem_mul_distrib' (hf : (s ∩ mulSupport f).finite) (hg : (s ∩ mulSupport g).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i * g i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g i) :=\n  by\n  rw [← mul_support_mul_indicator] at hf hg\n  simp only [finprod_mem_def, mul_indicator_mul, finprod_mul_distrib hf hg]\n#align finprod_mem_mul_distrib' finprod_mem_mul_distrib'\n#align finsum_mem_add_distrib' finsum_mem_add_distrib'\n-/\n\n",
 "finprod_mem_mul_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_mul_distrib /-\n/-- Given a finite set `s`, the product of `f i * g i` over `i ∈ s` equals the product of `f i`\nover `i ∈ s` times the product of `g i` over `i ∈ s`. -/\n@[to_additive\n      \"Given a finite set `s`, the sum of `f i + g i` over `i ∈ s` equals the sum of `f i`\\nover `i ∈ s` plus the sum of `g i` over `i ∈ s`.\"]\ntheorem finprod_mem_mul_distrib (hs : s.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i * g i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g i) :=\n  finprod_mem_mul_distrib' (hs.inter_of_left _) (hs.inter_of_left _)\n#align finprod_mem_mul_distrib finprod_mem_mul_distrib\n#align finsum_mem_add_distrib finsum_mem_add_distrib\n-/\n\n",
 "finprod_mem_mul_diff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_mul_diff' /-\n/-- A more general version of `finprod_mem_mul_diff` that requires `t ∩ mul_support f` rather than\n`t` to be finite. -/\n@[to_additive\n      \"A more general version of `finsum_mem_add_diff` that requires `t ∩ support f` rather\\nthan `t` to be finite.\"]\ntheorem finprod_mem_mul_diff' (hst : s ⊆ t) (ht : (t ∩ mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by rw [← finprod_mem_inter_mul_diff' _ ht, inter_eq_self_of_subset_right hst]\n#align finprod_mem_mul_diff' finprod_mem_mul_diff'\n#align finsum_mem_add_diff' finsum_mem_add_diff'\n-/\n\n",
 "finprod_mem_mul_diff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_mul_diff /-\n/-- Given a finite set `t` and a subset `s` of `t`, the product of `f i` over `i ∈ s`\ntimes the product of `f i` over `t \\ s` equals the product of `f i` over `i ∈ t`. -/\n@[to_additive\n      \"Given a finite set `t` and a subset `s` of `t`, the sum of `f i` over `i ∈ s` plus\\nthe sum of `f i` over `t \\\\ s` equals the sum of `f i` over `i ∈ t`.\"]\ntheorem finprod_mem_mul_diff (hst : s ⊆ t) (ht : t.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  finprod_mem_mul_diff' hst (ht.inter_of_left _)\n#align finprod_mem_mul_diff finprod_mem_mul_diff\n#align finsum_mem_add_diff finsum_mem_add_diff\n-/\n\n",
 "finprod_mem_mulSupport":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_mulSupport /-\n@[simp, to_additive]\ntheorem finprod_mem_mulSupport (f : α → M) (a : α) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a) = f a := by\n  rw [← mem_mul_support, finprod_eq_mulIndicator_apply, mul_indicator_mul_support]\n#align finprod_mem_mul_support finprod_mem_mulSupport\n#align finsum_mem_support finsum_mem_support\n-/\n\n",
 "finprod_mem_inv_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_inv_distrib /-\n@[to_additive]\ntheorem finprod_mem_inv_distrib [DivisionCommMonoid G] (f : α → G) (hs : s.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f x)⁻¹ =\n      (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f x))⁻¹ :=\n  ((MulEquiv.inv G).map_finprod_mem f hs).symm\n#align finprod_mem_inv_distrib finprod_mem_inv_distrib\n#align finsum_mem_neg_distrib finsum_mem_neg_distrib\n-/\n\n",
 "finprod_mem_inter_mul_diff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_inter_mul_diff' /-\n@[to_additive]\ntheorem finprod_mem_inter_mul_diff' (t : Set α) (h : (s ∩ mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by\n  rw [← finprod_mem_union', inter_union_diff]\n  rw [disjoint_iff_inf_le]\n  exacts[fun x hx => hx.2.2 hx.1.2, h.subset fun x hx => ⟨hx.1.1, hx.2⟩, h.subset fun x hx => ⟨hx.1.1, hx.2⟩]\n#align finprod_mem_inter_mul_diff' finprod_mem_inter_mul_diff'\n#align finsum_mem_inter_add_diff' finsum_mem_inter_add_diff'\n-/\n\n",
 "finprod_mem_inter_mul_diff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_inter_mul_diff /-\n@[to_additive]\ntheorem finprod_mem_inter_mul_diff (t : Set α) (h : s.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) *\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  finprod_mem_inter_mul_diff' _ <| h.inter_of_left _\n#align finprod_mem_inter_mul_diff finprod_mem_inter_mul_diff\n#align finsum_mem_inter_add_diff finsum_mem_inter_add_diff\n-/\n\n",
 "finprod_mem_inter_mulSupport_eq'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_inter_mulSupport_eq' /-\n@[to_additive]\ntheorem finprod_mem_inter_mulSupport_eq' (f : α → M) (s t : Set α) (h : ∀ x ∈ mulSupport f, x ∈ s ↔ x ∈ t) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by\n  apply finprod_mem_inter_mulSupport_eq\n  ext x\n  exact and_congr_left (h x)\n#align finprod_mem_inter_mul_support_eq' finprod_mem_inter_mulSupport_eq'\n#align finsum_mem_inter_support_eq' finsum_mem_inter_support_eq'\n-/\n\n",
 "finprod_mem_inter_mulSupport_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_inter_mulSupport_eq /-\n@[to_additive]\ntheorem finprod_mem_inter_mulSupport_eq (f : α → M) (s t : Set α) (h : s ∩ mulSupport f = t ∩ mulSupport f) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by rw [← finprod_mem_inter_mulSupport, h, finprod_mem_inter_mulSupport]\n#align finprod_mem_inter_mul_support_eq finprod_mem_inter_mulSupport_eq\n#align finsum_mem_inter_support_eq finsum_mem_inter_support_eq\n-/\n\n",
 "finprod_mem_inter_mulSupport":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_inter_mulSupport /-\n@[to_additive]\ntheorem finprod_mem_inter_mulSupport (f : α → M) (s : Set α) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by rw [finprod_mem_def, finprod_mem_def, mul_indicator_inter_mul_support]\n#align finprod_mem_inter_mul_support finprod_mem_inter_mulSupport\n#align finsum_mem_inter_support finsum_mem_inter_support\n-/\n\n",
 "finprod_mem_insert_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_insert_one /-\n/-- If `f a = 1`, then the product of `f i` over `i ∈ insert a s` equals the product of `f i` over\n`i ∈ s`. -/\n@[to_additive \"If `f a = 0`, then the sum of `f i` over `i ∈ insert a s` equals the sum of `f i`\\nover `i ∈ s`.\"]\ntheorem finprod_mem_insert_one (h : f a = 1) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  finprod_mem_insert_of_eq_one_if_not_mem fun _ => h\n#align finprod_mem_insert_one finprod_mem_insert_one\n#align finsum_mem_insert_zero finsum_mem_insert_zero\n-/\n\n",
 "finprod_mem_insert_of_eq_one_if_not_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_insert_of_eq_one_if_not_mem /-\n/-- If `f a = 1` when `a ∉ s`, then the product of `f i` over `i ∈ insert a s` equals the product of\n`f i` over `i ∈ s`. -/\n@[to_additive\n      \"If `f a = 0` when `a ∉ s`, then the sum of `f i` over `i ∈ insert a s` equals the sum\\nof `f i` over `i ∈ s`.\"]\ntheorem finprod_mem_insert_of_eq_one_if_not_mem (h : a ∉ s → f a = 1) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by\n  refine' finprod_mem_inter_mulSupport_eq' _ _ _ fun x hx => ⟨_, or.inr⟩\n  rintro (rfl | hxs)\n  exacts[not_imp_comm.1 h hx, hxs]\n#align finprod_mem_insert_of_eq_one_if_not_mem finprod_mem_insert_of_eq_one_if_not_mem\n#align finsum_mem_insert_of_eq_zero_if_not_mem finsum_mem_insert_of_eq_zero_if_not_mem\n-/\n\n",
 "finprod_mem_insert'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_insert' /-\n/-- A more general version of `finprod_mem_insert` that requires `s ∩ mul_support f` rather than `s`\nto be finite. -/\n@[to_additive\n      \"A more general version of `finsum_mem_insert` that requires `s ∩ support f` rather\\nthan `s` to be finite.\"]\ntheorem finprod_mem_insert' (f : α → M) (h : a ∉ s) (hs : (s ∩ mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      f a * finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  by\n  rw [insert_eq, finprod_mem_union' _ _ hs, finprod_mem_singleton]\n  · rwa [disjoint_singleton_left]\n  · exact (finite_singleton a).inter_of_left _\n#align finprod_mem_insert' finprod_mem_insert'\n#align finsum_mem_insert' finsum_mem_insert'\n-/\n\n",
 "finprod_mem_insert":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_insert /-\n/-- Given a finite set `s` and an element `a ∉ s`, the product of `f i` over `i ∈ insert a s` equals\n`f a` times the product of `f i` over `i ∈ s`. -/\n@[to_additive\n      \"Given a finite set `s` and an element `a ∉ s`, the sum of `f i` over `i ∈ insert a s`\\nequals `f a` plus the sum of `f i` over `i ∈ s`.\"]\ntheorem finprod_mem_insert (f : α → M) (h : a ∉ s) (hs : s.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      f a * finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) :=\n  finprod_mem_insert' f h <| hs.inter_of_left _\n#align finprod_mem_insert finprod_mem_insert\n#align finsum_mem_insert finsum_mem_insert\n-/\n\n",
 "finprod_mem_induction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_induction /-\n/-- To prove a property of a finite product, it suffices to prove that the property is\nmultiplicative and holds on factors. -/\n@[to_additive\n      \"To prove a property of a finite sum, it suffices to prove that the property is\\nadditive and holds on summands.\"]\ntheorem finprod_mem_induction (p : M → Prop) (hp₀ : p 1) (hp₁ : ∀ x y, p x → p y → p (x * y))\n    (hp₂ : ∀ x ∈ s, p <| f x) :\n    p (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i)) :=\n  finprod_induction _ hp₀ hp₁ fun x => finprod_induction _ hp₀ hp₁ <| hp₂ x\n#align finprod_mem_induction finprod_mem_induction\n#align finsum_mem_induction finsum_mem_induction\n-/\n\n",
 "finprod_mem_image'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_image' /-\n/-- The product of `f y` over `y ∈ g '' s` equals the product of `f (g i)` over `s`\nprovided that `g` is injective on `s ∩ mul_support (f ∘ g)`. -/\n@[to_additive\n      \"The sum of `f y` over `y ∈ g '' s` equals the sum of `f (g i)` over `s` provided that\\n`g` is injective on `s ∩ support (f ∘ g)`.\"]\ntheorem finprod_mem_image' {s : Set β} {g : β → α} (hg : (s ∩ mulSupport (f ∘ g)).inj_on g) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (g j)) :=\n  by\n  classical\n    by_cases hs : (s ∩ mul_support (f ∘ g)).finite\n    · have hg : ∀ x ∈ hs.to_finset, ∀ y ∈ hs.to_finset, g x = g y → x = y := by simpa only [hs.mem_to_finset]\n      rw [finprod_mem_eq_prod _ hs, ← Finset.prod_image hg]\n      refine' finprod_mem_eq_prod_of_inter_mulSupport_eq f _\n      rw [Finset.coe_image, hs.coe_to_finset, ← image_inter_mul_support_eq, inter_assoc, inter_self]\n    · rw [finprod_mem_eq_one_of_infinite hs, finprod_mem_eq_one_of_infinite]\n      rwa [image_inter_mul_support_eq, infinite_image_iff hg]\n#align finprod_mem_image' finprod_mem_image'\n#align finsum_mem_image' finsum_mem_image'\n-/\n\n",
 "finprod_mem_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_image /-\n/-- The product of `f y` over `y ∈ g '' s` equals the product of `f (g i)` over `s` provided that\n`g` is injective on `s`. -/\n@[to_additive\n      \"The sum of `f y` over `y ∈ g '' s` equals the sum of `f (g i)` over `s` provided that\\n`g` is injective on `s`.\"]\ntheorem finprod_mem_image {s : Set β} {g : β → α} (hg : s.inj_on g) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (g j)) :=\n  finprod_mem_image' <| hg.mono <| inter_subset_left _ _\n#align finprod_mem_image finprod_mem_image\n#align finsum_mem_image finsum_mem_image\n-/\n\n",
 "finprod_mem_finset_product₃":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_finset_product₃ /-\n@[to_additive]\ntheorem finprod_mem_finset_product₃ {γ : Type _} (s : Finset (α × β × γ)) (f : α × β × γ → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f abc) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (a, b, c)) :=\n  by\n  classical\n    rw [finprod_mem_finset_product']\n    simp_rw [finprod_mem_finset_product']\n    simp\n#align finprod_mem_finset_product₃ finprod_mem_finset_product₃\n#align finsum_mem_finset_product₃ finsum_mem_finset_product₃\n-/\n\n",
 "finprod_mem_finset_product'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_finset_product' /-\n/-- Note that `b ∈ (s.filter (λ ab, prod.fst ab = a)).image prod.snd` iff `(a, b) ∈ s` so we can\nsimplify the right hand side of this lemma. However the form stated here is more useful for\niterating this lemma, e.g., if we have `f : α × β × γ → M`. -/\n@[to_additive\n      \"Note that `b ∈ (s.filter (λ ab, prod.fst ab = a)).image prod.snd` iff `(a, b) ∈ s` so\\nwe can simplify the right hand side of this lemma. However the form stated here is more useful for\\niterating this lemma, e.g., if we have `f : α × β × γ → M`.\"]\ntheorem finprod_mem_finset_product' [DecidableEq α] [DecidableEq β] (s : Finset (α × β)) (f : α × β → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f ab) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (a, b)) :=\n  by\n  have :\n    ∀ a,\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n          ((s.filter fun ab => Prod.fst ab = a).image Prod.snd) (f (a, i)) =\n        (Finset.filter (fun ab => Prod.fst ab = a) s).prod f :=\n    by\n    refine' fun a => Finset.prod_bij (fun b _ => (a, b)) _ _ _ _ <;>-- `finish` closes these goals\n      try simp; done\n    suffices ∀ a' b, (a', b) ∈ s → a' = a → (a, b) ∈ s ∧ a' = a by simpa\n    rintro a' b hp rfl\n    exact ⟨hp, rfl⟩\n  rw [finprod_mem_finset_eq_prod]\n  simp_rw [finprod_mem_finset_eq_prod, this]\n  rw [finprod_eq_prod_of_mulSupport_subset _ (s.mul_support_of_fiberwise_prod_subset_image f Prod.fst), ←\n    Finset.prod_fiberwise_of_maps_to _ f]\n  -- `finish` could close the goal here\n  simp only [Finset.mem_image, prod.mk.eta]\n  exact fun x hx => ⟨x, hx, rfl⟩\n#align finprod_mem_finset_product' finprod_mem_finset_product'\n#align finsum_mem_finset_product' finsum_mem_finset_product'\n-/\n\n",
 "finprod_mem_finset_product":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_finset_product /-\n/-- See also `finprod_mem_finset_product'`. -/\n@[to_additive \"See also `finsum_mem_finset_product'`.\"]\ntheorem finprod_mem_finset_product (s : Finset (α × β)) (f : α × β → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f ab) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (a, b)) :=\n  by\n  classical\n    rw [finprod_mem_finset_product']\n    simp\n#align finprod_mem_finset_product finprod_mem_finset_product\n#align finsum_mem_finset_product finsum_mem_finset_product\n-/\n\n",
 "finprod_mem_finset_eq_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_mem_finset_eq_prod /-\n@[to_additive]\ntheorem finprod_mem_finset_eq_prod (f : α → M) (s : Finset α) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i) :=\n  finprod_mem_eq_prod_of_inter_mulSupport_eq _ rfl\n#align finprod_mem_finset_eq_prod finprod_mem_finset_eq_prod\n#align finsum_mem_finset_eq_sum finsum_mem_finset_eq_sum\n-/\n\n",
 "finprod_mem_eq_toFinset_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_mem_eq_toFinset_prod /-\n@[to_additive]\ntheorem finprod_mem_eq_toFinset_prod (f : α → M) (s : Set α) [Fintype s] :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s.to_finset\n        (f i) :=\n  finprod_mem_eq_prod_of_inter_mulSupport_eq _ <| by rw [coe_to_finset]\n#align finprod_mem_eq_to_finset_prod finprod_mem_eq_toFinset_prod\n#align finsum_mem_eq_to_finset_sum finsum_mem_eq_toFinset_sum\n-/\n\n",
 "finprod_mem_eq_prod_of_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_mem_eq_prod_of_subset /-\n@[to_additive]\ntheorem finprod_mem_eq_prod_of_subset (f : α → M) {s : Set α} {t : Finset α} (h₁ : s ∩ mulSupport f ⊆ t) (h₂ : ↑t ⊆ s) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" t (f i) :=\n  finprod_cond_eq_prod_of_cond_iff _ fun x hx => ⟨fun h => h₁ ⟨h, hx⟩, fun h => h₂ h⟩\n#align finprod_mem_eq_prod_of_subset finprod_mem_eq_prod_of_subset\n#align finsum_mem_eq_sum_of_subset finsum_mem_eq_sum_of_subset\n-/\n\n",
 "finprod_mem_eq_prod_of_inter_mulSupport_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_mem_eq_prod_of_inter_mulSupport_eq /-\n@[to_additive]\ntheorem finprod_mem_eq_prod_of_inter_mulSupport_eq (f : α → M) {s : Set α} {t : Finset α}\n    (h : s ∩ mulSupport f = t ∩ mulSupport f) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" t (f i) :=\n  finprod_cond_eq_prod_of_cond_iff _ <| by simpa [Set.ext_iff] using h\n#align finprod_mem_eq_prod_of_inter_mul_support_eq finprod_mem_eq_prod_of_inter_mulSupport_eq\n#align finsum_mem_eq_sum_of_inter_support_eq finsum_mem_eq_sum_of_inter_support_eq\n-/\n\n",
 "finprod_mem_eq_prod_filter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_mem_eq_prod_filter /-\n@[to_additive]\ntheorem finprod_mem_eq_prod_filter (f : α → M) (s : Set α) [DecidablePred (· ∈ s)] (hf : (mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n        (Finset.filter (· ∈ s) hf.to_finset) (f i) :=\n  finprod_mem_eq_prod_of_inter_mulSupport_eq _ <| by simp [inter_comm, inter_left_comm]\n#align finprod_mem_eq_prod_filter finprod_mem_eq_prod_filter\n#align finsum_mem_eq_sum_filter finsum_mem_eq_sum_filter\n-/\n\n",
 "finprod_mem_eq_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_mem_eq_prod /-\n@[to_additive]\ntheorem finprod_mem_eq_prod (f : α → M) {s : Set α} (hf : (s ∩ mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" hf.to_finset\n        (f i) :=\n  finprod_mem_eq_prod_of_inter_mulSupport_eq _ <| by simp [inter_assoc]\n#align finprod_mem_eq_prod finprod_mem_eq_prod\n#align finsum_mem_eq_sum finsum_mem_eq_sum\n-/\n\n",
 "finprod_mem_eq_one_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_eq_one_of_infinite /-\n@[to_additive]\ntheorem finprod_mem_eq_one_of_infinite {f : α → M} {s : Set α} (hs : (s ∩ mulSupport f).infinite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = 1 :=\n  by\n  rw [finprod_mem_def]\n  apply finprod_of_infinite_mulSupport\n  rwa [← mul_support_mul_indicator] at hs\n#align finprod_mem_eq_one_of_infinite finprod_mem_eq_one_of_infinite\n#align finsum_mem_eq_zero_of_infinite finsum_mem_eq_zero_of_infinite\n-/\n\n",
 "finprod_mem_eq_one_of_forall_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_eq_one_of_forall_eq_one /-\n@[to_additive]\ntheorem finprod_mem_eq_one_of_forall_eq_one {f : α → M} {s : Set α} (h : ∀ x ∈ s, f x = 1) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = 1 := by\n  simp (config := { contextual := true }) [h]\n#align finprod_mem_eq_one_of_forall_eq_one finprod_mem_eq_one_of_forall_eq_one\n#align finsum_mem_eq_zero_of_forall_eq_zero finsum_mem_eq_zero_of_forall_eq_zero\n-/\n\n",
 "finprod_mem_eq_of_bijOn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_eq_of_bijOn /-\n/-- See also `finset.prod_bij`. -/\n@[to_additive \"See also `finset.sum_bij`.\"]\ntheorem finprod_mem_eq_of_bijOn {s : Set α} {t : Set β} {f : α → M} {g : β → M} (e : α → β) (he₀ : s.bij_on e t)\n    (he₁ : ∀ x ∈ s, f x = g (e x)) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g j) :=\n  by\n  rw [← Set.BijOn.image_eq he₀, finprod_mem_image he₀.2.1]\n  exact finprod_mem_congr rfl he₁\n#align finprod_mem_eq_of_bij_on finprod_mem_eq_of_bijOn\n#align finsum_mem_eq_of_bij_on finsum_mem_eq_of_bijOn\n-/\n\n",
 "finprod_mem_eq_finite_toFinset_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_mem_eq_finite_toFinset_prod /-\n@[to_additive]\ntheorem finprod_mem_eq_finite_toFinset_prod (f : α → M) {s : Set α} (hs : s.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" hs.to_finset\n        (f i) :=\n  finprod_mem_eq_prod_of_inter_mulSupport_eq _ <| by rw [hs.coe_to_finset]\n#align finprod_mem_eq_finite_to_finset_prod finprod_mem_eq_finite_toFinset_prod\n#align finsum_mem_eq_finite_to_finset_sum finsum_mem_eq_finite_toFinset_sum\n-/\n\n",
 "finprod_mem_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_empty /-\n/-- The product of any function over an empty set is `1`. -/\n@[to_additive \"The sum of any function over an empty set is `0`.\"]\ntheorem finprod_mem_empty :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = 1 := by simp\n#align finprod_mem_empty finprod_mem_empty\n#align finsum_mem_empty finsum_mem_empty\n-/\n\n",
 "finprod_mem_dvd":
 "#print finprod_mem_dvd /-\n/-- If the multiplicative support of `f` is finite, then for every `x` in the domain of `f`, `f x`\ndivides `finprod f`.  -/\ntheorem finprod_mem_dvd {f : α → N} (a : α) (hf : (mulSupport f).finite) : f a ∣ finprod f :=\n  by\n  by_cases ha : a ∈ mul_support f\n  · rw [finprod_eq_prod_of_mulSupport_toFinset_subset f hf (Set.Subset.refl _)]\n    exact Finset.dvd_prod_of_mem f ((finite.mem_to_finset hf).mpr ha)\n  · rw [nmem_mul_support.mp ha]\n    exact one_dvd (finprod f)\n#align finprod_mem_dvd finprod_mem_dvd\n-/\n\n",
 "finprod_mem_div_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_div_distrib /-\n/-- Given a finite set `s`, the product of `f i / g i` over `i ∈ s` equals the product of `f i`\nover `i ∈ s` divided by the product of `g i` over `i ∈ s`. -/\n@[to_additive\n      \"Given a finite set `s`, the sum of `f i / g i` over `i ∈ s` equals the sum of `f i`\\nover `i ∈ s` minus the sum of `g i` over `i ∈ s`.\"]\ntheorem finprod_mem_div_distrib [DivisionCommMonoid G] (f g : α → G) (hs : s.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i / g i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) /\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g i) :=\n  by simp only [div_eq_mul_inv, finprod_mem_mul_distrib hs, finprod_mem_inv_distrib g hs]\n#align finprod_mem_div_distrib finprod_mem_div_distrib\n#align finsum_mem_sub_distrib finsum_mem_sub_distrib\n-/\n\n",
 "finprod_mem_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_def /-\n@[to_additive]\ntheorem finprod_mem_def (s : Set α) (f : α → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (mulIndicator s f a) :=\n  finprod_congr <| finprod_eq_mulIndicator_apply s f\n#align finprod_mem_def finprod_mem_def\n#align finsum_mem_def finsum_mem_def\n-/\n\n",
 "finprod_mem_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_congr /-\n@[to_additive]\ntheorem finprod_mem_congr (h₀ : s = t) (h₁ : ∀ x ∈ t, f x = g x) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g i) :=\n  h₀.symm ▸ finprod_congr fun i => finprod_congr_Prop rfl (h₁ i)\n#align finprod_mem_congr finprod_mem_congr\n#align finsum_mem_congr finsum_mem_congr\n-/\n\n",
 "finprod_mem_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_comm /-\n/-- If `s : set α` and `t : set β` are finite sets, then taking the product over `s` commutes with\ntaking the product over `t`. -/\n@[to_additive \"If `s : set α` and `t : set β` are finite sets, then summing over `s` commutes with\\nsumming over `t`.\"]\ntheorem finprod_mem_comm {s : Set α} {t : Set β} (f : α → β → M) (hs : s.finite) (ht : t.finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i j)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i j)) :=\n  by\n  lift s to Finset α using hs; lift t to Finset β using ht\n  simp only [finprod_mem_coe_finset]\n  exact Finset.prod_comm\n#align finprod_mem_comm finprod_mem_comm\n#align finsum_mem_comm finsum_mem_comm\n-/\n\n",
 "finprod_mem_coe_finset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_mem_coe_finset /-\n@[to_additive]\ntheorem finprod_mem_coe_finset (f : α → M) (s : Finset α) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i) :=\n  finprod_mem_eq_prod_of_inter_mulSupport_eq _ rfl\n#align finprod_mem_coe_finset finprod_mem_coe_finset\n#align finsum_mem_coe_finset finsum_mem_coe_finset\n-/\n\n",
 "finprod_mem_bunionᵢ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_mem_bunionᵢ /-\n/-- Given a family of sets `t : ι → set α`, a finite set `I` in the index type such that all sets\n`t i`, `i ∈ I`, are finite, if all `t i`, `i ∈ I`, are pairwise disjoint, then the product of `f a`\nover `a ∈ ⋃ i ∈ I, t i` is equal to the product over `i ∈ I` of the products of `f a` over\n`a ∈ t i`. -/\n@[to_additive\n      \"Given a family of sets `t : ι → set α`, a finite set `I` in the index type such that\\nall sets `t i`, `i ∈ I`, are finite, if all `t i`, `i ∈ I`, are pairwise disjoint, then the sum of\\n`f a` over `a ∈ ⋃ i ∈ I, t i` is equal to the sum over `i ∈ I` of the sums of `f a` over\\n`a ∈ t i`.\"]\ntheorem finprod_mem_bunionᵢ {I : Set ι} {t : ι → Set α} (h : I.pairwise_disjoint t) (hI : I.finite)\n    (ht : ∀ i ∈ I, (t i).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f j)) :=\n  by\n  haveI := hI.fintype\n  rw [bUnion_eq_Union, finprod_mem_unionᵢ, ← finprod_set_coe_eq_finprod_mem]\n  exacts[fun x y hxy => h x.2 y.2 (subtype.coe_injective.ne hxy), fun b => ht b b.2]\n#align finprod_mem_bUnion finprod_mem_bunionᵢ\n#align finsum_mem_bUnion finsum_mem_bunionᵢ\n-/\n\n",
 "finprod_inv_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_inv_distrib /-\n@[to_additive]\ntheorem finprod_inv_distrib [DivisionCommMonoid G] (f : α → G) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f x)⁻¹ =\n      (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f x))⁻¹ :=\n  ((MulEquiv.inv G).map_finprod f).symm\n#align finprod_inv_distrib finprod_inv_distrib\n#align finsum_neg_distrib finsum_neg_distrib\n-/\n\n",
 "finprod_induction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_induction /-\n/-- To prove a property of a finite product, it suffices to prove that the property is\nmultiplicative and holds on the factors. -/\n@[to_additive\n      \"To prove a property of a finite sum, it suffices to prove that the property is\\nadditive and holds on the summands.\"]\ntheorem finprod_induction {f : α → M} (p : M → Prop) (hp₀ : p 1) (hp₁ : ∀ x y, p x → p y → p (x * y))\n    (hp₂ : ∀ i, p (f i)) :\n    p (finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i)) :=\n  by\n  rw [finprod]\n  split_ifs\n  exacts[Finset.prod_induction _ _ hp₁ hp₀ fun i hi => hp₂ _, hp₀]\n#align finprod_induction finprod_induction\n#align finsum_induction finsum_induction\n-/\n\n",
 "finprod_false":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_false /-\n@[simp, to_additive]\ntheorem finprod_false (f : False → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = 1 :=\n  finprod_of_isEmpty _\n#align finprod_false finprod_false\n#align finsum_false finsum_false\n-/\n\n",
 "finprod_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_eq_zero /-\ntheorem finprod_eq_zero {M₀ : Type _} [CommMonoidWithZero M₀] (f : α → M₀) (x : α) (hx : f x = 0)\n    (hf : (mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f x) = 0 :=\n  by\n  nontriviality\n  rw [finprod_eq_prod f hf]\n  refine' Finset.prod_eq_zero (hf.mem_to_finset.2 _) hx\n  simp [hx]\n#align finprod_eq_zero finprod_eq_zero\n-/\n\n",
 "finprod_eq_single":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (x «expr ≠ » a) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_eq_single /-\n@[to_additive]\ntheorem finprod_eq_single (f : α → M) (a : α) (ha : ∀ (x) (_ : x ≠ a), f x = 1) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f x) = f a :=\n  by\n  have : mul_support (f ∘ PLift.down) ⊆ ({PLift.up a} : Finset (PLift α)) :=\n    by\n    intro x\n    contrapose\n    simpa [PLift.eq_up_iff_down_eq] using ha x.down\n  rw [finprod_eq_prod_pLift_of_mulSupport_subset this, Finset.prod_singleton]\n#align finprod_eq_single finprod_eq_single\n#align finsum_eq_single finsum_eq_single\n-/\n\n",
 "finprod_eq_prod_pLift_of_mulSupport_toFinset_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_eq_prod_pLift_of_mulSupport_toFinset_subset /-\n/-\nCopyright (c) 2020 Kexing Ying and Kevin Buzzard. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kexing Ying, Kevin Buzzard, Yury Kudryashov\n-/\n/- Note: we use classical logic only for these definitions, to ensure that we do not write lemmas\nwith `classical.dec` in their statement. -/\n@[to_additive]\ntheorem finprod_eq_prod_pLift_of_mulSupport_toFinset_subset {f : α → M} (hf : (mulSupport (f ∘ PLift.down)).finite)\n    {s : Finset (PLift α)} (hs : hf.to_finset ⊆ s) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i.down) :=\n  by\n  rw [finprod, dif_pos]\n  refine' Finset.prod_subset hs fun x hx hxf => _\n  rwa [hf.mem_to_finset, nmem_mul_support] at hxf\n#align finprod_eq_prod_plift_of_mul_support_to_finset_subset finprod_eq_prod_pLift_of_mulSupport_toFinset_subset\n#align finsum_eq_sum_plift_of_support_to_finset_subset finsum_eq_sum_pLift_of_support_toFinset_subset\n-/\n\n",
 "finprod_eq_prod_pLift_of_mulSupport_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_eq_prod_pLift_of_mulSupport_subset /-\n@[to_additive]\ntheorem finprod_eq_prod_pLift_of_mulSupport_subset {f : α → M} {s : Finset (PLift α)}\n    (hs : mulSupport (f ∘ PLift.down) ⊆ s) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i.down) :=\n  finprod_eq_prod_pLift_of_mulSupport_toFinset_subset (s.finite_to_set.subset hs) fun x hx =>\n    by\n    rw [finite.mem_to_finset] at hx\n    exact hs hx\n#align finprod_eq_prod_plift_of_mul_support_subset finprod_eq_prod_pLift_of_mulSupport_subset\n#align finsum_eq_sum_plift_of_support_subset finsum_eq_sum_pLift_of_support_subset\n-/\n\n",
 "finprod_eq_prod_of_mulSupport_toFinset_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_eq_prod_of_mulSupport_toFinset_subset /-\n@[to_additive]\ntheorem finprod_eq_prod_of_mulSupport_toFinset_subset (f : α → M) (hf : (mulSupport f).finite) {s : Finset α}\n    (h : hf.to_finset ⊆ s) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i) :=\n  finprod_eq_prod_of_mulSupport_subset _ fun x hx => h <| hf.mem_to_finset.2 hx\n#align finprod_eq_prod_of_mul_support_to_finset_subset finprod_eq_prod_of_mulSupport_toFinset_subset\n#align finsum_eq_sum_of_support_to_finset_subset finsum_eq_sum_of_support_toFinset_subset\n-/\n\n",
 "finprod_eq_prod_of_mulSupport_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_eq_prod_of_mulSupport_subset /-\n@[to_additive]\ntheorem finprod_eq_prod_of_mulSupport_subset (f : α → M) {s : Finset α} (h : mulSupport f ⊆ s) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i) :=\n  by\n  have A : mul_support (f ∘ PLift.down) = «expr '' » equiv.plift.symm (mul_support f) :=\n    by\n    rw [mul_support_comp_eq_preimage]\n    exact (equiv.plift.symm.image_eq_preimage _).symm\n  have : mul_support (f ∘ PLift.down) ⊆ s.map equiv.plift.symm.to_embedding :=\n    by\n    rw [A, Finset.coe_map]\n    exact image_subset _ h\n  rw [finprod_eq_prod_pLift_of_mulSupport_subset this]\n  simp\n#align finprod_eq_prod_of_mul_support_subset finprod_eq_prod_of_mulSupport_subset\n#align finsum_eq_sum_of_support_subset finsum_eq_sum_of_support_subset\n-/\n\n",
 "finprod_eq_prod_of_fintype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n#print finprod_eq_prod_of_fintype /-\n@[to_additive]\ntheorem finprod_eq_prod_of_fintype [Fintype α] (f : α → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n        (f i) :=\n  finprod_eq_prod_of_mulSupport_toFinset_subset _ (Set.toFinite _) <| Finset.subset_univ _\n#align finprod_eq_prod_of_fintype finprod_eq_prod_of_fintype\n#align finsum_eq_sum_of_fintype finsum_eq_sum_of_fintype\n-/\n\n",
 "finprod_eq_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_eq_prod /-\n@[to_additive]\ntheorem finprod_eq_prod (f : α → M) (hf : (mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" hf.to_finset\n        (f i) :=\n  by classical rw [finprod_def, dif_pos hf]\n#align finprod_eq_prod finprod_eq_prod\n#align finsum_eq_sum finsum_eq_sum\n-/\n\n",
 "finprod_eq_one_of_forall_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_eq_one_of_forall_eq_one /-\n@[to_additive]\ntheorem finprod_eq_one_of_forall_eq_one {f : α → M} (h : ∀ x, f x = 1) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = 1 := by\n  simp (config := { contextual := true }) [h]\n#align finprod_eq_one_of_forall_eq_one finprod_eq_one_of_forall_eq_one\n#align finsum_eq_zero_of_forall_eq_zero finsum_eq_zero_of_forall_eq_zero\n-/\n\n",
 "finprod_eq_of_bijective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_eq_of_bijective /-\n/-- See `finprod_comp`, `fintype.prod_bijective` and `finset.prod_bij`. -/\n@[to_additive \"See `finsum_comp`, `fintype.sum_bijective` and `finset.sum_bij`.\"]\ntheorem finprod_eq_of_bijective {f : α → M} {g : β → M} (e : α → β) (he₀ : bijective e) (he₁ : ∀ x, f x = g (e x)) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g j) :=\n  by\n  rw [← finprod_mem_univ f, ← finprod_mem_univ g]\n  exact finprod_mem_eq_of_bijOn _ (bijective_iff_bij_on_univ.mp he₀) fun x _ => he₁ x\n#align finprod_eq_of_bijective finprod_eq_of_bijective\n#align finsum_eq_of_bijective finsum_eq_of_bijective\n-/\n\n",
 "finprod_eq_mulIndicator_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_eq_mulIndicator_apply /-\n@[to_additive]\ntheorem finprod_eq_mulIndicator_apply (s : Set α) (f : α → M) (a : α) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a) =\n      mulIndicator s f a :=\n  by convert finprod_eq_if\n#align finprod_eq_mul_indicator_apply finprod_eq_mulIndicator_apply\n#align finsum_eq_indicator_apply finsum_eq_indicator_apply\n-/\n\n",
 "finprod_eq_if":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_eq_if /-\n@[to_additive]\ntheorem finprod_eq_if {p : Prop} [Decidable p] {x : M} :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" x = if p then x else 1 :=\n  finprod_eq_dif fun _ => x\n#align finprod_eq_if finprod_eq_if\n#align finsum_eq_if finsum_eq_if\n-/\n\n",
 "finprod_eq_finset_prod_of_mulSupport_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_eq_finset_prod_of_mulSupport_subset /-\n@[to_additive]\ntheorem finprod_eq_finset_prod_of_mulSupport_subset (f : α → M) {s : Finset α} (h : mulSupport f ⊆ (s : Set α)) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i) :=\n  haveI h' : (s.finite_to_set.subset h).to_finset ⊆ s := by simpa [← Finset.coe_subset, Set.coe_toFinset]\n  finprod_eq_prod_of_mulSupport_toFinset_subset _ _ h'\n#align finprod_eq_finset_prod_of_mul_support_subset finprod_eq_finset_prod_of_mulSupport_subset\n#align finsum_eq_finset_sum_of_support_subset finsum_eq_finset_sum_of_support_subset\n-/\n\n",
 "finprod_eq_dif":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_eq_dif /-\n@[to_additive]\ntheorem finprod_eq_dif {p : Prop} [Decidable p] (f : p → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      if h : p then f h else 1 :=\n  by\n  split_ifs\n  · haveI : Unique p := ⟨⟨h⟩, fun _ => rfl⟩\n    exact finprod_unique f\n  · haveI : IsEmpty p := ⟨h⟩\n    exact finprod_of_isEmpty f\n#align finprod_eq_dif finprod_eq_dif\n#align finsum_eq_dif finsum_eq_dif\n-/\n\n",
 "finprod_emb_domain'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_emb_domain' /-\n@[to_additive]\ntheorem finprod_emb_domain' {f : α → β} (hf : injective f) [DecidablePred (· ∈ Set.range f)] (g : α → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (if h : b ∈ Set.range f then g (Classical.choose h) else 1) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g a) :=\n  by\n  simp_rw [← finprod_eq_dif]\n  rw [finprod_dmem, finprod_mem_range hf, finprod_congr fun a => _]\n  rw [dif_pos (Set.mem_range_self a), hf (Classical.choose_spec (Set.mem_range_self a))]\n#align finprod_emb_domain' finprod_emb_domain'\n#align finsum_emb_domain' finsum_emb_domain'\n-/\n\n",
 "finprod_emb_domain":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_emb_domain /-\n@[to_additive]\ntheorem finprod_emb_domain (f : «expr ↪ » α β) [DecidablePred (· ∈ Set.range f)] (g : α → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (if h : b ∈ Set.range f then g (Classical.choose h) else 1) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g a) :=\n  finprod_emb_domain' f.injective g\n#align finprod_emb_domain finprod_emb_domain\n#align finsum_emb_domain finsum_emb_domain\n-/\n\n",
 "finprod_dmem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_dmem /-\n@[to_additive]\ntheorem finprod_dmem {s : Set α} [DecidablePred (· ∈ s)] (f : ∀ a : α, a ∈ s → M) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a h) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\"\n        (if h' : a ∈ s then f a h' else 1) :=\n  finprod_congr fun a => finprod_congr fun ha => (dif_pos ha).symm\n#align finprod_dmem finprod_dmem\n#align finsum_dmem finsum_dmem\n-/\n\n",
 "finprod_div_distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_div_distrib /-\n/-- If the multiplicative supports of `f` and `g` are finite, then the product of `f i / g i`\nequals the product of `f i` divided by the product of `g i`. -/\n@[to_additive\n      \"If the additive supports of `f` and `g` are finite, then the sum of `f i - g i`\\nequals the sum of `f i` minus the sum of `g i`.\"]\ntheorem finprod_div_distrib [DivisionCommMonoid G] {f g : α → G} (hf : (mulSupport f).finite)\n    (hg : (mulSupport g).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i / g i) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) /\n        finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g i) :=\n  by simp only [div_eq_mul_inv, finprod_mul_distrib hf ((mul_support_inv g).symm.rec hg), finprod_inv_distrib]\n#align finprod_div_distrib finprod_div_distrib\n#align finsum_sub_distrib finsum_sub_distrib\n-/\n\n",
 "finprod_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_def /-\n@[to_additive]\ntheorem finprod_def (f : α → M) [Decidable (mulSupport f).finite] :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      if h : (mulSupport f).finite then\n        finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" h.to_finset\n          (f i)\n      else 1 :=\n  by\n  split_ifs\n  · exact finprod_eq_prod_of_mulSupport_toFinset_subset _ h (Finset.Subset.refl _)\n  · rw [finprod, dif_neg]\n    rw [mul_support_comp_eq_preimage]\n    exact mt (fun hf => hf.of_preimage equiv.plift.surjective) h\n#align finprod_def finprod_def\n#align finsum_def finsum_def\n-/\n\n",
 "finprod_curry₃":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_curry₃ /-\n@[to_additive]\ntheorem finprod_curry₃ {γ : Type _} (f : α × β × γ → M) (h : (mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f abc) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (a, b, c)) :=\n  by\n  rw [finprod_curry f h]\n  congr\n  ext a\n  rw [finprod_curry]\n  simp [h]\n#align finprod_curry₃ finprod_curry₃\n#align finsum_curry₃ finsum_curry₃\n-/\n\n",
 "finprod_curry":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_curry /-\n@[to_additive]\ntheorem finprod_curry (f : α × β → M) (hf : (mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f ab) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (a, b)) :=\n  by\n  have h₁ :\n    ∀ a, finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a) = f a := by\n    simp\n  have h₂ :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f a) :=\n    by simp\n  simp_rw [h₂, finprod_mem_finset_product, h₁]\n#align finprod_curry finprod_curry\n#align finsum_curry finsum_curry\n-/\n\n",
 "finprod_congr_Prop":
 "#print finprod_congr_Prop /-\n@[congr, to_additive]\ntheorem finprod_congr_Prop {p q : Prop} {f : p → M} {g : q → M} (hpq : p = q) (hfg : ∀ h : q, f (hpq.mpr h) = g h) :\n    finprod f = finprod g := by\n  subst q\n  exact finprod_congr hfg\n#align finprod_congr_Prop finprod_congr_Prop\n#align finsum_congr_Prop finsum_congr_Prop\n-/\n\n",
 "finprod_congr":
 "#print finprod_congr /-\n@[to_additive]\ntheorem finprod_congr {f g : α → M} (h : ∀ x, f x = g x) : finprod f = finprod g :=\n  congr_arg _ <| funext h\n#align finprod_congr finprod_congr\n#align finsum_congr finsum_congr\n-/\n\n",
 "finprod_cond_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_cond_nonneg /-\ntheorem finprod_cond_nonneg {R : Type _} [OrderedCommSemiring R] {p : α → Prop} {f : α → R} (hf : ∀ x, p x → 0 ≤ f x) :\n    0 ≤ finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f x) :=\n  finprod_nonneg fun x => finprod_nonneg <| hf x\n#align finprod_cond_nonneg finprod_cond_nonneg\n-/\n\n",
 "finprod_cond_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_cond_ne /-\n@[to_additive]\ntheorem finprod_cond_ne (f : α → M) (a : α) [DecidableEq α] (hf : (mulSupport f).finite) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n        (hf.to_finset.erase a) (f i) :=\n  by\n  apply finprod_cond_eq_prod_of_cond_iff\n  intro x hx\n  rw [Finset.mem_erase, finite.mem_to_finset, mem_mul_support]\n  exact ⟨fun h => and.intro h hx, fun h => h.1⟩\n#align finprod_cond_ne finprod_cond_ne\n#align finsum_cond_ne finsum_cond_ne\n-/\n\n",
 "finprod_cond_eq_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_cond_eq_right /-\n@[simp, to_additive]\ntheorem finprod_cond_eq_right :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = f a := by\n  simp [@eq_comm _ a]\n#align finprod_cond_eq_right finprod_cond_eq_right\n#align finsum_cond_eq_right finsum_cond_eq_right\n-/\n\n",
 "finprod_cond_eq_prod_of_cond_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n#print finprod_cond_eq_prod_of_cond_iff /-\n@[to_additive]\ntheorem finprod_cond_eq_prod_of_cond_iff (f : α → M) {p : α → Prop} {t : Finset α}\n    (h : ∀ {x}, f x ≠ 1 → (p x ↔ x ∈ t)) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" t (f i) :=\n  by\n  set s := { x | p x }\n  have : mul_support (s.mul_indicator f) ⊆ t :=\n    by\n    rw [Set.mulSupport_mulIndicator]\n    intro x hx\n    exact (h hx.2).1 hx.1\n  erw [finprod_mem_def, finprod_eq_prod_of_mulSupport_subset _ this]\n  refine' Finset.prod_congr rfl fun x hx => mul_indicator_apply_eq_self.2 fun hxs => _\n  contrapose! hxs\n  exact (h hxs).2 hx\n#align finprod_cond_eq_prod_of_cond_iff finprod_cond_eq_prod_of_cond_iff\n#align finsum_cond_eq_sum_of_cond_iff finsum_cond_eq_sum_of_cond_iff\n-/\n\n",
 "finprod_cond_eq_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_cond_eq_left /-\n@[simp, to_additive]\ntheorem finprod_cond_eq_left :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) = f a :=\n  finprod_mem_singleton\n#align finprod_cond_eq_left finprod_cond_eq_left\n#align finsum_cond_eq_left finsum_cond_eq_left\n-/\n\n",
 "finprod_comp_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_comp_equiv /-\n@[to_additive]\ntheorem finprod_comp_equiv (e : «expr ≃ » α β) {f : β → M} :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f (e i)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i') :=\n  finprod_comp e e.bijective\n#align finprod_comp_equiv finprod_comp_equiv\n#align finsum_comp_equiv finsum_comp_equiv\n-/\n\n",
 "finprod_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print finprod_comp /-\n/-- See also `finprod_eq_of_bijective`, `fintype.prod_bijective` and `finset.prod_bij`. -/\n@[to_additive \"See also `finsum_eq_of_bijective`, `fintype.sum_bijective` and `finset.sum_bij`.\"]\ntheorem finprod_comp {g : β → M} (e : α → β) (he₀ : function.bijective e) :\n    finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g (e i)) =\n      finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (g j) :=\n  finprod_eq_of_bijective e he₀ fun x => rfl\n#align finprod_comp finprod_comp\n#align finsum_comp finsum_comp\n-/\n\n",
 "exists_ne_one_of_finprod_mem_ne_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finprod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod -/\n#print exists_ne_one_of_finprod_mem_ne_one /-\n/-- If the product of `f i` over `i ∈ s` is not equal to `1`, then there is some `x ∈ s` such that\n`f x ≠ 1`. -/\n@[to_additive\n      \"If the product of `f i` over `i ∈ s` is not equal to `0`, then there is some `x ∈ s`\\nsuch that `f x ≠ 0`.\"]\ntheorem exists_ne_one_of_finprod_mem_ne_one\n    (h : finprod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finprod\" (f i) ≠ 1) :\n    ∃ x ∈ s, f x ≠ 1 := by\n  by_contra' h'\n  exact h (finprod_mem_of_eqOn_one h')\n#align exists_ne_one_of_finprod_mem_ne_one exists_ne_one_of_finprod_mem_ne_one\n#align exists_ne_zero_of_finsum_mem_ne_zero exists_ne_zero_of_finsum_mem_ne_zero\n-/\n\n"}