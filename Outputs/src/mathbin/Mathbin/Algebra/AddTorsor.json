{"vsub_vadd_eq_vsub_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Subtracting the result of adding a group element produces the same result\nas subtracting the points and subtracting that group element. -/\ntheorem vsub_vadd_eq_vsub_sub (p1 p2 : P) (g : G) : «expr -ᵥ » p1 («expr +ᵥ » g p2) = «expr -ᵥ » p1 p2 - g := by\n  rw [← add_right_inj («expr -ᵥ » p2 p1 : G), vsub_add_vsub_cancel, ← neg_vsub_eq_vsub_rev, vadd_vsub, ← add_sub_assoc,\n    ← neg_vsub_eq_vsub_rev, neg_add_self, zero_sub]\n#align vsub_vadd_eq_vsub_sub vsub_vadd_eq_vsub_sub\n\n",
 "vsub_vadd_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem vsub_vadd_comm (p1 p2 p3 : P) : «expr +ᵥ » («expr -ᵥ » p1 p2 : G) p3 = «expr +ᵥ » («expr -ᵥ » p3 p2) p1 :=\n  by\n  rw [← @vsub_eq_zero_iff_eq G, vadd_vsub_assoc, vsub_vadd_eq_vsub_sub]\n  simp\n#align vsub_vadd_comm vsub_vadd_comm\n\n",
 "vsub_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Adding the result of subtracting from another point produces that\npoint. -/\n@[simp]\ntheorem vsub_vadd (p1 p2 : P) : «expr +ᵥ » («expr -ᵥ » p1 p2) p2 = p1 :=\n  add_torsor.vsub_vadd' p1 p2\n#align vsub_vadd vsub_vadd\n\n",
 "vsub_sub_vsub_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem vsub_sub_vsub_comm (p₁ p₂ p₃ p₄ : P) :\n    «expr -ᵥ » p₁ p₂ - «expr -ᵥ » p₃ p₄ = «expr -ᵥ » p₁ p₃ - «expr -ᵥ » p₂ p₄ := by\n  rw [← vsub_vadd_eq_vsub_sub, vsub_vadd_comm, vsub_vadd_eq_vsub_sub]\n#align vsub_sub_vsub_comm vsub_sub_vsub_comm\n\n",
 "vsub_sub_vsub_cancel_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Cancellation subtracting the results of two subtractions. -/\n@[simp]\ntheorem vsub_sub_vsub_cancel_right (p1 p2 p3 : P) : «expr -ᵥ » p1 p3 - «expr -ᵥ » p2 p3 = «expr -ᵥ » p1 p2 := by\n  rw [← vsub_vadd_eq_vsub_sub, vsub_vadd]\n#align vsub_sub_vsub_cancel_right vsub_sub_vsub_cancel_right\n\n",
 "vsub_sub_vsub_cancel_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Cancellation subtracting the results of two subtractions. -/\n@[simp]\ntheorem vsub_sub_vsub_cancel_left (p1 p2 p3 : P) : «expr -ᵥ » p3 p2 - «expr -ᵥ » p3 p1 = «expr -ᵥ » p1 p2 := by\n  rw [sub_eq_add_neg, neg_vsub_eq_vsub_rev, add_comm, vsub_add_vsub_cancel]\n#align vsub_sub_vsub_cancel_left vsub_sub_vsub_cancel_left\n\n",
 "vsub_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Subtracting a point from itself produces 0. -/\n@[simp]\ntheorem vsub_self (p : P) : «expr -ᵥ » p p = (0 : G) := by\n  rw [← zero_add («expr -ᵥ » p p), ← vadd_vsub_assoc, vadd_vsub]\n#align vsub_self vsub_self\n\n",
 "vsub_right_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr -ᵥ » -/\n/-- Subtracting a point from the point `p` is an injective\nfunction. -/\ntheorem vsub_right_injective (p : P) : function.injective ((«expr -ᵥ » · ·) p : P → G) := fun p2 p3 => vsub_right_cancel\n#align vsub_right_injective vsub_right_injective\n\n",
 "vsub_right_cancel_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Subtracting two points from the same point produces equal results\nif and only if those points are equal. -/\n@[simp]\ntheorem vsub_right_cancel_iff {p1 p2 p : P} : «expr -ᵥ » p p1 = «expr -ᵥ » p p2 ↔ p1 = p2 :=\n  ⟨vsub_right_cancel, fun h => h ▸ rfl⟩\n#align vsub_right_cancel_iff vsub_right_cancel_iff\n\n",
 "vsub_right_cancel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- If subtracting two points from the same point produces equal\nresults, those points are equal. -/\ntheorem vsub_right_cancel {p1 p2 p : P} (h : «expr -ᵥ » p p1 = «expr -ᵥ » p p2) : p1 = p2 :=\n  by\n  refine' vadd_left_cancel («expr -ᵥ » p p2) _\n  rw [vsub_vadd, ← h, vsub_vadd]\n#align vsub_right_cancel vsub_right_cancel\n\n",
 "vsub_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem vsub_ne_zero {p q : P} : «expr -ᵥ » p q ≠ (0 : G) ↔ p ≠ q :=\n  not_congr vsub_eq_zero_iff_eq\n#align vsub_ne_zero vsub_ne_zero\n\n",
 "vsub_left_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr -ᵥ » -/\n/-- Subtracting the point `p` is an injective function. -/\ntheorem vsub_left_injective (p : P) : function.injective ((«expr -ᵥ » · p) : P → G) := fun p2 p3 => vsub_left_cancel\n#align vsub_left_injective vsub_left_injective\n\n",
 "vsub_left_cancel_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- The same point subtracted from two points produces equal results\nif and only if those points are equal. -/\n@[simp]\ntheorem vsub_left_cancel_iff {p1 p2 p : P} : «expr -ᵥ » p1 p = «expr -ᵥ » p2 p ↔ p1 = p2 :=\n  ⟨vsub_left_cancel, fun h => h ▸ rfl⟩\n#align vsub_left_cancel_iff vsub_left_cancel_iff\n\n",
 "vsub_left_cancel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- If the same point subtracted from two points produces equal\nresults, those points are equal. -/\ntheorem vsub_left_cancel {p1 p2 p : P} (h : «expr -ᵥ » p1 p = «expr -ᵥ » p2 p) : p1 = p2 := by\n  rwa [← sub_eq_zero, vsub_sub_vsub_cancel_right, vsub_eq_zero_iff_eq] at h\n#align vsub_left_cancel vsub_left_cancel\n\n",
 "vsub_eq_zero_iff_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Subtracting two points produces 0 if and only if they are\nequal. -/\n@[simp]\ntheorem vsub_eq_zero_iff_eq {p1 p2 : P} : «expr -ᵥ » p1 p2 = (0 : G) ↔ p1 = p2 :=\n  iff.intro eq_of_vsub_eq_zero fun h => h ▸ vsub_self _\n#align vsub_eq_zero_iff_eq vsub_eq_zero_iff_eq\n\n",
 "vsub_eq_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-\nCopyright (c) 2020 Joseph Myers. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Joseph Myers, Yury Kudryashov\n-/\n/-- Simplify subtraction for a torsor for an `add_group G` over\nitself. -/\n@[simp]\ntheorem vsub_eq_sub {G : Type _} [add_group G] (g1 g2 : G) : «expr -ᵥ » g1 g2 = g1 - g2 :=\n  rfl\n#align vsub_eq_sub vsub_eq_sub\n\n",
 "vsub_add_vsub_cancel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Cancellation adding the results of two subtractions. -/\n@[simp]\ntheorem vsub_add_vsub_cancel (p1 p2 p3 : P) : «expr -ᵥ » p1 p2 + «expr -ᵥ » p2 p3 = «expr -ᵥ » p1 p3 :=\n  by\n  apply vadd_right_cancel p3\n  rw [add_vadd, vsub_vadd, vsub_vadd, vsub_vadd]\n#align vsub_add_vsub_cancel vsub_add_vsub_cancel\n\n",
 "vadd_vsub_vadd_cancel_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n@[simp]\ntheorem vadd_vsub_vadd_cancel_right (v₁ v₂ : G) (p : P) : «expr -ᵥ » («expr +ᵥ » v₁ p) («expr +ᵥ » v₂ p) = v₁ - v₂ := by\n  rw [vsub_vadd_eq_vsub_sub, vadd_vsub_assoc, vsub_self, add_zero]\n#align vadd_vsub_vadd_cancel_right vadd_vsub_vadd_cancel_right\n\n",
 "vadd_vsub_vadd_cancel_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem vadd_vsub_vadd_cancel_left (v : G) (p1 p2 : P) :\n    «expr -ᵥ » («expr +ᵥ » v p1) («expr +ᵥ » v p2) = «expr -ᵥ » p1 p2 := by\n  rw [vsub_vadd_eq_vsub_sub, vadd_vsub_assoc, add_sub_cancel']\n#align vadd_vsub_vadd_cancel_left vadd_vsub_vadd_cancel_left\n\n",
 "vadd_vsub_eq_sub_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem vadd_vsub_eq_sub_vsub (g : G) (p q : P) : «expr -ᵥ » («expr +ᵥ » g p) q = g - «expr -ᵥ » q p := by\n  rw [vadd_vsub_assoc, sub_eq_add_neg, neg_vsub_eq_vsub_rev]\n#align vadd_vsub_eq_sub_vsub vadd_vsub_eq_sub_vsub\n\n",
 "vadd_vsub_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Adding a group element to a point, then subtracting another point,\nproduces the same result as subtracting the points then adding the\ngroup element. -/\ntheorem vadd_vsub_assoc (g : G) (p1 p2 : P) : «expr -ᵥ » («expr +ᵥ » g p1) p2 = g + «expr -ᵥ » p1 p2 :=\n  by\n  apply vadd_right_cancel p2\n  rw [vsub_vadd, add_vadd, vsub_vadd]\n#align vadd_vsub_assoc vadd_vsub_assoc\n\n",
 "vadd_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- Adding a group element then subtracting the original point\nproduces that group element. -/\n@[simp]\ntheorem vadd_vsub (g : G) (p : P) : «expr -ᵥ » («expr +ᵥ » g p) p = g :=\n  add_torsor.vadd_vsub' g p\n#align vadd_vsub vadd_vsub\n\n",
 "vadd_right_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr +ᵥ » -/\n/-- Adding a group element to the point `p` is an injective\nfunction. -/\ntheorem vadd_right_injective (p : P) : function.injective ((«expr +ᵥ » · p) : G → P) := fun g1 g2 => vadd_right_cancel p\n#align vadd_right_injective vadd_right_injective\n\n",
 "vadd_right_cancel_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n@[simp]\ntheorem vadd_right_cancel_iff {g1 g2 : G} (p : P) : «expr +ᵥ » g1 p = «expr +ᵥ » g2 p ↔ g1 = g2 :=\n  ⟨vadd_right_cancel p, fun h => h ▸ rfl⟩\n#align vadd_right_cancel_iff vadd_right_cancel_iff\n\n",
 "vadd_right_cancel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- If the same point added to two group elements produces equal\nresults, those group elements are equal. -/\ntheorem vadd_right_cancel {g1 g2 : G} (p : P) (h : «expr +ᵥ » g1 p = «expr +ᵥ » g2 p) : g1 = g2 := by\n  rw [← vadd_vsub g1, h, vadd_vsub]\n#align vadd_right_cancel vadd_right_cancel\n\n",
 "vadd_eq_vadd_iff_sub_eq_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem vadd_eq_vadd_iff_sub_eq_vsub {v₁ v₂ : G} {p₁ p₂ : P} :\n    «expr +ᵥ » v₁ p₁ = «expr +ᵥ » v₂ p₂ ↔ v₂ - v₁ = «expr -ᵥ » p₁ p₂ := by\n  rw [vadd_eq_vadd_iff_neg_add_eq_vsub, neg_add_eq_sub]\n#align vadd_eq_vadd_iff_sub_eq_vsub vadd_eq_vadd_iff_sub_eq_vsub\n\n",
 "vadd_eq_vadd_iff_neg_add_eq_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem vadd_eq_vadd_iff_neg_add_eq_vsub {v₁ v₂ : G} {p₁ p₂ : P} :\n    «expr +ᵥ » v₁ p₁ = «expr +ᵥ » v₂ p₂ ↔ -v₁ + v₂ = «expr -ᵥ » p₁ p₂ := by\n  rw [eq_vadd_iff_vsub_eq, vadd_vsub_assoc, ← add_right_inj (-v₁), neg_add_cancel_left, eq_comm]\n#align vadd_eq_vadd_iff_neg_add_eq_vsub vadd_eq_vadd_iff_neg_add_eq_vsub\n\n",
 "subsingleton_iff":
 "theorem add_torsor.subsingleton_iff (G P : Type _) [add_group G] [add_torsor G P] : subsingleton G ↔ subsingleton P :=\n  by\n  inhabit P\n  exact (equiv.vadd_const default).subsingleton_congr\n#align add_torsor.subsingleton_iff add_torsor.subsingleton_iff\n\n",
 "snd_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem snd_vsub (p₁ p₂ : P × P') : («expr -ᵥ » p₁ p₂ : G × G').2 = «expr -ᵥ » p₁.2 p₂.2 :=\n  rfl\n#align snd_vsub snd_vsub\n\n",
 "snd_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n@[simp]\ntheorem snd_vadd (v : G × G') (p : P × P') : («expr +ᵥ » v p).2 = «expr +ᵥ » v.2 p.2 :=\n  rfl\n#align snd_vadd snd_vadd\n\n",
 "singleton_vsub_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem singleton_vsub_self (p : P) : «expr -ᵥ » ({p} : set P) {p} = {(0 : G)} := by\n  rw [Set.singleton_vsub_singleton, vsub_self]\n#align singleton_vsub_self singleton_vsub_self\n\n",
 "point_reflection_symm":
 "@[simp]\ntheorem point_reflection_symm (x : P) : (point_reflection x).symm = point_reflection x :=\n  ext <| by simp [point_reflection]\n#align point_reflection_symm point_reflection_symm\n\n",
 "point_reflection_self":
 "@[simp]\ntheorem point_reflection_self (x : P) : point_reflection x x = x :=\n  vsub_vadd _ _\n#align point_reflection_self point_reflection_self\n\n",
 "point_reflection_involutive":
 "theorem point_reflection_involutive (x : P) : involutive (point_reflection x : P → P) := fun y =>\n  (equiv.apply_eq_iff_eq_symm_apply _).2 <| by rw [point_reflection_symm]\n#align point_reflection_involutive point_reflection_involutive\n\n",
 "point_reflection_fixed_iff_of_injective_bit0":
 "/-- `x` is the only fixed point of `point_reflection x`. This lemma requires\n`x + x = y + y ↔ x = y`. There is no typeclass to use here, so we add it as an explicit argument. -/\ntheorem point_reflection_fixed_iff_of_injective_bit0 {x y : P} (h : injective (bit0 : G → G)) :\n    point_reflection x y = y ↔ y = x := by\n  rw [point_reflection_apply, eq_comm, eq_vadd_iff_vsub_eq, ← neg_vsub_eq_vsub_rev, neg_eq_iff_add_eq_zero, ← bit0, ←\n    bit0_zero, h.eq_iff, vsub_eq_zero_iff_eq, eq_comm]\n#align point_reflection_fixed_iff_of_injective_bit0 point_reflection_fixed_iff_of_injective_bit0\n\n",
 "point_reflection_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem point_reflection_apply (x y : P) : point_reflection x y = «expr +ᵥ » («expr -ᵥ » x y) x :=\n  rfl\n#align point_reflection_apply point_reflection_apply\n\n",
 "neg_vsub_eq_vsub_rev":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Subtracting two points in the reverse order produces the negation\nof subtracting them. -/\n@[simp]\ntheorem neg_vsub_eq_vsub_rev (p1 p2 : P) : -«expr -ᵥ » p1 p2 = «expr -ᵥ » p2 p1 :=\n  by\n  refine' neg_eq_of_add_eq_zero_right (vadd_right_cancel p1 _)\n  rw [vsub_add_vsub_cancel, vsub_self]\n#align neg_vsub_eq_vsub_rev neg_vsub_eq_vsub_rev\n\n",
 "mk_vsub_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem mk_vsub_mk (p₁ p₂ : P) (p₁' p₂' : P') :\n    («expr -ᵥ » (p₁, p₁') (p₂, p₂') : G × G') = («expr -ᵥ » p₁ p₂, «expr -ᵥ » p₁' p₂') :=\n  rfl\n#align mk_vsub_mk mk_vsub_mk\n\n",
 "mk_vadd_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n@[simp]\ntheorem mk_vadd_mk (v : G) (v' : G') (p : P) (p' : P') :\n    «expr +ᵥ » (v, v') (p, p') = («expr +ᵥ » v p, «expr +ᵥ » v' p') :=\n  rfl\n#align mk_vadd_mk mk_vadd_mk\n\n",
 "injective_point_reflection_left_of_injective_bit0":
 "theorem injective_point_reflection_left_of_injective_bit0 {G P : Type _} [add_comm_group G] [add_torsor G P]\n    (h : injective (bit0 : G → G)) (y : P) : injective fun x : P => point_reflection x y :=\n  fun x₁ x₂ (hy : point_reflection x₁ y = point_reflection x₂ y) => by\n  rwa [point_reflection_apply, point_reflection_apply, vadd_eq_vadd_iff_sub_eq_vsub, vsub_sub_vsub_cancel_right, ←\n    neg_vsub_eq_vsub_rev, neg_eq_iff_add_eq_zero, ← bit0, ← bit0_zero, h.eq_iff, vsub_eq_zero_iff_eq] at hy\n#align injective_point_reflection_left_of_injective_bit0 injective_point_reflection_left_of_injective_bit0\n\n",
 "fst_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem fst_vsub (p₁ p₂ : P × P') : («expr -ᵥ » p₁ p₂ : G × G').1 = «expr -ᵥ » p₁.1 p₂.1 :=\n  rfl\n#align fst_vsub fst_vsub\n\n",
 "fst_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n@[simp]\ntheorem fst_vadd (v : G × G') (p : P × P') : («expr +ᵥ » v p).1 = «expr +ᵥ » v.1 p.1 :=\n  rfl\n#align fst_vadd fst_vadd\n\n",
 "eq_vadd_iff_vsub_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Convert between an equality with adding a group element to a point\nand an equality of a subtraction of two points with a group\nelement. -/\ntheorem eq_vadd_iff_vsub_eq (p1 : P) (g : G) (p2 : P) : p1 = «expr +ᵥ » g p2 ↔ «expr -ᵥ » p1 p2 = g :=\n  ⟨fun h => h.symm ▸ vadd_vsub _ _, fun h => h ▸ (vsub_vadd _ _).symm⟩\n#align eq_vadd_iff_vsub_eq eq_vadd_iff_vsub_eq\n\n",
 "eq_of_vsub_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- If subtracting two points produces 0, they are equal. -/\ntheorem eq_of_vsub_eq_zero {p1 p2 : P} (h : «expr -ᵥ » p1 p2 = (0 : G)) : p1 = p2 := by\n  rw [← vsub_vadd p1 p2, h, zero_vadd]\n#align eq_of_vsub_eq_zero eq_of_vsub_eq_zero\n\n",
 "const_vadd_zero":
 "@[simp]\ntheorem const_vadd_zero : const_vadd P (0 : G) = 1 :=\n  ext <| zero_vadd G\n#align const_vadd_zero const_vadd_zero\n\n",
 "const_vadd_add":
 "@[simp]\ntheorem const_vadd_add (v₁ v₂ : G) : const_vadd P (v₁ + v₂) = const_vadd P v₁ * const_vadd P v₂ :=\n  ext <| add_vadd v₁ v₂\n#align const_vadd_add const_vadd_add\n\n",
 "coe_vadd_const_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem coe_vadd_const_symm (p : P) : «expr⇑ » (vadd_const p).symm = fun p' => «expr -ᵥ » p' p :=\n  rfl\n#align coe_vadd_const_symm coe_vadd_const_symm\n\n",
 "coe_vadd_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n@[simp]\ntheorem coe_vadd_const (p : P) : «expr⇑ » (vadd_const p) = fun v => «expr +ᵥ » v p :=\n  rfl\n#align coe_vadd_const coe_vadd_const\n\n",
 "coe_const_vsub_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n@[simp]\ntheorem coe_const_vsub_symm (p : P) : «expr⇑ » (const_vsub p).symm = fun v => «expr +ᵥ » (-v) p :=\n  rfl\n#align coe_const_vsub_symm coe_const_vsub_symm\n\n",
 "coe_const_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr -ᵥ » -/\n@[simp]\ntheorem coe_const_vsub (p : P) : «expr⇑ » (const_vsub p) = («expr -ᵥ » · ·) p :=\n  rfl\n#align coe_const_vsub coe_const_vsub\n\n",
 "coe_const_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr +ᵥ » -/\n@[simp]\ntheorem coe_const_vadd (v : G) : «expr⇑ » (const_vadd P v) = («expr +ᵥ » · ·) v :=\n  rfl\n#align coe_const_vadd coe_const_vadd\n\n"}