{"zpow_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n#print zpow_iterate /-\n@[simp, to_additive]\ntheorem zpow_iterate (n : ℤ) (j : ℕ) : «expr ^[ ]» (fun x : G => x ^ n) j = fun x => x ^ n ^ j :=\n  letI : MulAction ℤ G :=\n    { smul := fun n g => g ^ n\n      one_smul := zpow_one\n      mul_smul := fun m n g => zpow_mul' g m n }\n  smul_iterate n j\n#align zpow_iterate zpow_iterate\n-/\n\n",
 "smul_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr • » -/\n#print smul_iterate /-\n--what should be the namespace for this section?\n@[simp, to_additive]\ntheorem smul_iterate [MulAction G H] : «expr ^[ ]» ((«expr • » · ·) a : H → H) n = («expr • » · ·) (a ^ n) :=\n  funext fun b =>\n    nat.rec_on n (by rw [iterate_zero, id.def, pow_zero, one_smul]) fun n ih => by\n      rw [iterate_succ', comp_app, ih, pow_succ, mul_smul]\n#align smul_iterate smul_iterate\n-/\n\n",
 "pow_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n#print pow_iterate /-\n@[simp, to_additive]\ntheorem pow_iterate (n : ℕ) (j : ℕ) : «expr ^[ ]» (fun x : G => x ^ n) j = fun x => x ^ n ^ j :=\n  letI : MulAction ℕ G :=\n    { smul := fun n g => g ^ n\n      one_smul := pow_one\n      mul_smul := fun m n g => pow_mul' g m n }\n  smul_iterate n j\n#align pow_iterate pow_iterate\n-/\n\n",
 "mul_right_iterate_apply_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n#print mul_right_iterate_apply_one /-\n@[to_additive]\ntheorem mul_right_iterate_apply_one : («expr ^[ ]» (· * a) n) 1 = a ^ n := by simp [mul_right_iterate]\n#align mul_right_iterate_apply_one mul_right_iterate_apply_one\n-/\n\n",
 "mul_right_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n#print mul_right_iterate /-\n@[simp, to_additive]\ntheorem mul_right_iterate : «expr ^[ ]» (· * a) n = (· * a ^ n) :=\n  smul_iterate (MulOpposite.op a) n\n#align mul_right_iterate mul_right_iterate\n-/\n\n",
 "mul_left_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n#print mul_left_iterate /-\n@[simp, to_additive]\ntheorem mul_left_iterate : «expr ^[ ]» ((· * ·) a) n = (· * ·) (a ^ n) :=\n  smul_iterate a n\n#align mul_left_iterate mul_left_iterate\n-/\n\n",
 "iterate_map_zsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_zsmul (n : ℕ) (m : ℤ) (x : R) :\n    («expr ^[ ]» f n) («expr • » m x) = «expr • » m ((«expr ^[ ]» f n) x) :=\n  f.to_add_monoid_hom.iterate_map_zsmul n m x\n#align iterate_map_zsmul iterate_map_zsmul\n\n",
 "iterate_map_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_zpow (f : «expr →* » G G) (n : ℕ) (a) (m : ℤ) :\n    («expr ^[ ]» f n) (a ^ m) = («expr ^[ ]» f n) a ^ m :=\n  commute.iterate_left (fun x => f.map_zpow x m) n a\n#align iterate_map_zpow iterate_map_zpow\n\n",
 "iterate_map_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_zero : («expr ^[ ]» f n) 0 = 0 :=\n  f.to_add_monoid_hom.iterate_map_zero n\n#align iterate_map_zero iterate_map_zero\n\n",
 "iterate_map_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_sub : («expr ^[ ]» f n) (x - y) = («expr ^[ ]» f n) x - («expr ^[ ]» f n) y :=\n  f.to_add_monoid_hom.iterate_map_sub n x y\n#align iterate_map_sub iterate_map_sub\n\n",
 "iterate_map_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_smul (n m : ℕ) (x : R) : («expr ^[ ]» f n) («expr • » m x) = «expr • » m ((«expr ^[ ]» f n) x) :=\n  f.to_add_monoid_hom.iterate_map_smul n m x\n#align iterate_map_smul iterate_map_smul\n\n",
 "iterate_map_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_pow (a) (n m : ℕ) : («expr ^[ ]» f n) (a ^ m) = («expr ^[ ]» f n) a ^ m :=\n  f.to_monoid_hom.iterate_map_pow n a m\n#align iterate_map_pow iterate_map_pow\n\n",
 "iterate_map_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_one : («expr ^[ ]» f n) 1 = 1 :=\n  f.to_monoid_hom.iterate_map_one n\n#align iterate_map_one iterate_map_one\n\n",
 "iterate_map_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_neg : («expr ^[ ]» f n) (-x) = -(«expr ^[ ]» f n) x :=\n  f.to_add_monoid_hom.iterate_map_neg n x\n#align iterate_map_neg iterate_map_neg\n\n",
 "iterate_map_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_mul : («expr ^[ ]» f n) (x * y) = («expr ^[ ]» f n) x * («expr ^[ ]» f n) y :=\n  f.to_monoid_hom.iterate_map_mul n x y\n#align iterate_map_mul iterate_map_mul\n\n",
 "iterate_map_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n@[simp, to_additive]\ntheorem iterate_map_inv (f : «expr →* » G G) (n : ℕ) (x) : («expr ^[ ]» f n) x⁻¹ = ((«expr ^[ ]» f n) x)⁻¹ :=\n  commute.iterate_left f.map_inv n x\n#align iterate_map_inv iterate_map_inv\n\n",
 "iterate_map_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n@[simp, to_additive]\ntheorem iterate_map_div (f : «expr →* » G G) (n : ℕ) (x y) :\n    («expr ^[ ]» f n) (x / y) = («expr ^[ ]» f n) x / («expr ^[ ]» f n) y :=\n  semiconj₂.iterate f.map_div n x y\n#align iterate_map_div iterate_map_div\n\n",
 "iterate_map_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_map_add : («expr ^[ ]» f n) (x + y) = («expr ^[ ]» f n) x + («expr ^[ ]» f n) y :=\n  f.to_add_monoid_hom.iterate_map_add n x y\n#align iterate_map_add iterate_map_add\n\n",
 "hom_coe_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n#print hom_coe_pow /-\n/-\nCopyright (c) 2020 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\n/-- An auxiliary lemma that can be used to prove `⇑(f ^ n) = (⇑f^[n])`. -/\ntheorem hom_coe_pow {F : Type _} [monoid F] (c : F → M → M) (h1 : c 1 = id) (hmul : ∀ f g, c (f * g) = c f ∘ c g)\n    (f : F) : ∀ n, c (f ^ n) = «expr ^[ ]» (c f) n\n  | 0 => by\n    rw [pow_zero, h1]\n    rfl\n  | n + 1 => by rw [pow_succ, iterate_succ', hmul, hom_coe_pow]\n#align hom_coe_pow hom_coe_pow\n-/\n\n",
 "function_semiconj_mul_right_swap":
 "#print SemiconjBy.function_semiconj_mul_right_swap /-\n@[to_additive]\ntheorem SemiconjBy.function_semiconj_mul_right_swap (h : SemiconjBy a b c) :\n    function.semiconj (· * a) (· * c) (· * b) := fun j => by simp_rw [mul_assoc, ← h.eq]\n#align semiconj_by.function_semiconj_mul_right_swap SemiconjBy.function_semiconj_mul_right_swap\n-/\n\n",
 "function_semiconj_mul_left":
 "#print SemiconjBy.function_semiconj_mul_left /-\n@[to_additive]\ntheorem SemiconjBy.function_semiconj_mul_left (h : SemiconjBy a b c) :\n    function.semiconj ((· * ·) a) ((· * ·) b) ((· * ·) c) := fun j => by rw [← mul_assoc, h.eq, mul_assoc]\n#align semiconj_by.function_semiconj_mul_left SemiconjBy.function_semiconj_mul_left\n-/\n\n",
 "function_commute_mul_right":
 "#print Commute.function_commute_mul_right /-\n@[to_additive]\ntheorem Commute.function_commute_mul_right (h : Commute a b) : function.commute (· * a) (· * b) :=\n  SemiconjBy.function_semiconj_mul_right_swap h\n#align commute.function_commute_mul_right Commute.function_commute_mul_right\n-/\n\n",
 "function_commute_mul_left":
 "#print Commute.function_commute_mul_left /-\n@[to_additive]\ntheorem Commute.function_commute_mul_left (h : Commute a b) : function.commute ((· * ·) a) ((· * ·) b) :=\n  SemiconjBy.function_semiconj_mul_left h\n#align commute.function_commute_mul_left Commute.function_commute_mul_left\n-/\n\n",
 "coe_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem coe_pow (n : ℕ) : «expr⇑ » (f ^ n) = «expr ^[ ]» f n :=\n  hom_coe_pow _ rfl (fun f g => rfl) f n\n#align coe_pow coe_pow\n\n"}