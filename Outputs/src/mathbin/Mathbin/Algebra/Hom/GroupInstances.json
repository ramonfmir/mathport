{"natCast_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print AddMonoid.End.natCast_apply /-\n/-\nCopyright (c) 2018 Patrick Massot. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Patrick Massot, Kevin Buzzard, Scott Morrison, Johan Commelin, Chris Hughes,\n  Johannes Hölzl, Yury Kudryashov\n-/\n/-- See also `add_monoid.End.nat_cast_def`. -/\n@[simp]\ntheorem AddMonoid.End.natCast_apply [AddCommMonoid M] (n : ℕ) (m : M) : (↑n : AddMonoid.End M) m = «expr • » n m :=\n  rfl\n#align add_monoid.End.nat_cast_apply AddMonoid.End.natCast_apply\n-/\n\n",
 "mul_apply":
 "#print AddMonoidHom.mul_apply /-\ntheorem AddMonoidHom.mul_apply (x y : R) : AddMonoidHom.mul x y = x * y :=\n  rfl\n#align add_monoid_hom.mul_apply AddMonoidHom.mul_apply\n-/\n\n",
 "map_one₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[to_additive]\ntheorem map_one₂ {mM : MulOneClass M} {mN : MulOneClass N} {mP : CommMonoid P} (f : «expr →* » M («expr →* » N P))\n    (n : N) : f 1 n = 1 :=\n  (flip f n).map_one\n#align map_one₂ map_one₂\n\n",
 "map_mul₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[to_additive]\ntheorem map_mul₂ {mM : MulOneClass M} {mN : MulOneClass N} {mP : CommMonoid P} (f : «expr →* » M («expr →* » N P))\n    (m₁ m₂ : M) (n : N) : f (m₁ * m₂) n = f m₁ n * f m₂ n :=\n  (flip f n).map_mul _ _\n#align map_mul₂ map_mul₂\n\n",
 "map_mul_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n#print AddMonoidHom.map_mul_iff /-\n/-- An `add_monoid_hom` preserves multiplication if pre- and post- composition with\n`add_monoid_hom.mul` are equivalent. By converting the statement into an equality of\n`add_monoid_hom`s, this lemma allows various specialized `ext` lemmas about `→+` to then be applied.\n-/\ntheorem AddMonoidHom.map_mul_iff (f : «expr →+ » R S) :\n    (∀ x y, f (x * y) = f x * f y) ↔\n      (AddMonoidHom.mul : «expr →+ » R («expr →+ » R R)).compr₂ f = (AddMonoidHom.mul.comp f).compl₂ f :=\n  iff.symm AddMonoidHom.ext_iff₂\n#align add_monoid_hom.map_mul_iff AddMonoidHom.map_mul_iff\n-/\n\n",
 "map_inv₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[to_additive]\ntheorem map_inv₂ {mM : Group M} {mN : MulOneClass N} {mP : CommGroup P} (f : «expr →* » M («expr →* » N P)) (m : M)\n    (n : N) : f m⁻¹ n = (f m n)⁻¹ :=\n  (flip f n).map_inv _\n#align map_inv₂ map_inv₂\n\n",
 "map_div₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[to_additive]\ntheorem map_div₂ {mM : Group M} {mN : MulOneClass N} {mP : CommGroup P} (f : «expr →* » M («expr →* » N P)) (m₁ m₂ : M)\n    (n : N) : f (m₁ / m₂) n = f m₁ n / f m₂ n :=\n  (flip f n).map_div _ _\n#align map_div₂ map_div₂\n\n",
 "int_cast_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print AddMonoid.End.int_cast_apply /-\n/-- See also `add_monoid.End.int_cast_def`. -/\n@[simp]\ntheorem AddMonoid.End.int_cast_apply [AddCommGroup M] (z : ℤ) (m : M) : (↑z : AddMonoid.End M) m = «expr • » z m :=\n  rfl\n#align add_monoid.End.int_cast_apply AddMonoid.End.int_cast_apply\n-/\n\n",
 "flip_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[simp, to_additive]\ntheorem flip_apply {mM : MulOneClass M} {mN : MulOneClass N} {mP : CommMonoid P} (f : «expr →* » M («expr →* » N P))\n    (x : M) (y : N) : f.flip y x = f x y :=\n  rfl\n#align flip_apply flip_apply\n\n",
 "ext_iff₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[to_additive]\ntheorem ext_iff₂ {mM : MulOneClass M} {mN : MulOneClass N} {mP : CommMonoid P} {f g : «expr →* » M («expr →* » N P)} :\n    f = g ↔ ∀ x y, f x y = g x y :=\n  MonoidHom.ext_iff.trans <| forall_congr' fun _ => MonoidHom.ext_iff\n#align ext_iff₂ ext_iff₂\n\n",
 "compr₂_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[simp, to_additive]\ntheorem compr₂_apply [MulOneClass M] [MulOneClass N] [CommMonoid P] [CommMonoid Q] (f : «expr →* » M («expr →* » N P))\n    (g : «expr →* » P Q) (m : M) (n : N) : (compr₂ f g) m n = g (f m n) :=\n  rfl\n#align compr₂_apply compr₂_apply\n\n",
 "compl₂_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[simp, to_additive]\ntheorem compl₂_apply [MulOneClass M] [MulOneClass N] [CommMonoid P] [MulOneClass Q] (f : «expr →* » M («expr →* » N P))\n    (g : «expr →* » Q N) (m : M) (q : Q) : (compl₂ f g) m q = f m (g q) :=\n  rfl\n#align compl₂_apply compl₂_apply\n\n",
 "coe_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n#print AddMonoidHom.coe_mul /-\n@[simp]\ntheorem AddMonoidHom.coe_mul : «expr⇑ » (AddMonoidHom.mul : «expr →+ » R («expr →+ » R R)) = AddMonoidHom.mulLeft :=\n  rfl\n#align add_monoid_hom.coe_mul AddMonoidHom.coe_mul\n-/\n\n",
 "coe_flip_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n#print AddMonoidHom.coe_flip_mul /-\n@[simp]\ntheorem AddMonoidHom.coe_flip_mul :\n    «expr⇑ » (AddMonoidHom.mul : «expr →+ » R («expr →+ » R R)).flip = AddMonoidHom.mulRight :=\n  rfl\n#align add_monoid_hom.coe_flip_mul AddMonoidHom.coe_flip_mul\n-/\n\n"}