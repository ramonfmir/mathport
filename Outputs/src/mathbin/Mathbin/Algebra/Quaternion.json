{"zero_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem zero_re : (0 : quaternion R).re = 0 :=\n  rfl\n#align zero_re zero_re\n\n",
 "zero_im_k":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem zero_im_k : (0 : quaternion R).im_k = 0 :=\n  rfl\n#align zero_im_k zero_im_k\n\n",
 "zero_im_j":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem zero_im_j : (0 : quaternion R).im_j = 0 :=\n  rfl\n#align zero_im_j zero_im_j\n\n",
 "zero_im_i":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem zero_im_i : (0 : quaternion R).im_i = 0 :=\n  rfl\n#align zero_im_i zero_im_i\n\n",
 "zero_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem zero_im : (0 : quaternion R).im = 0 :=\n  rfl\n#align zero_im zero_im\n\n",
 "sub_self_re":
 "@[simp]\ntheorem sub_self_re : a - a.re = a.im :=\n  a.sub_self_re\n#align sub_self_re sub_self_re\n\n",
 "sub_self_im":
 "@[simp]\ntheorem sub_self_im : a - a.im = a.re :=\n  a.sub_self_im\n#align sub_self_im sub_self_im\n\n",
 "sub_re":
 "@[simp]\ntheorem sub_re : (a - b).re = a.re - b.re :=\n  rfl\n#align sub_re sub_re\n\n",
 "sub_im_k":
 "@[simp]\ntheorem sub_im_k : (a - b).im_k = a.im_k - b.im_k :=\n  rfl\n#align sub_im_k sub_im_k\n\n",
 "sub_im_j":
 "@[simp]\ntheorem sub_im_j : (a - b).im_j = a.im_j - b.im_j :=\n  rfl\n#align sub_im_j sub_im_j\n\n",
 "sub_im_i":
 "@[simp]\ntheorem sub_im_i : (a - b).im_i = a.im_i - b.im_i :=\n  rfl\n#align sub_im_i sub_im_i\n\n",
 "sub_im":
 "@[simp]\ntheorem sub_im : (a - b).im = a.im - b.im :=\n  ext _ _ (sub_zero _).symm rfl rfl rfl\n#align sub_im sub_im\n\n",
 "star_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem star_smul [Monoid S] [DistribMulAction S R] (s : S) (a : quaternion R) :\n    star («expr • » s a) = «expr • » s (star a) :=\n  quaternion_algebra.star_smul _ _\n#align star_smul star_smul\n\n",
 "star_re":
 "@[simp]\ntheorem star_re : (star a).re = a.re :=\n  rfl\n#align star_re star_re\n\n",
 "star_mul_self":
 "theorem star_mul_self : star a * a = norm_sq a := by rw [star_comm_self', self_mul_star]\n#align star_mul_self star_mul_self\n\n",
 "star_mul_eq_coe":
 "theorem star_mul_eq_coe : star a * a = (star a * a).re :=\n  a.star_mul_eq_coe\n#align star_mul_eq_coe star_mul_eq_coe\n\n",
 "star_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[simp]\ntheorem star_mk (a₁ a₂ a₃ a₄ : R) : star (mk a₁ a₂ a₃ a₄ : quaternion_algebra R c₁ c₂) = ⟨a₁, -a₂, -a₃, -a₄⟩ :=\n  rfl\n#align star_mk star_mk\n\n",
 "star_im_k":
 "@[simp]\ntheorem star_im_k : (star a).im_k = -a.im_k :=\n  rfl\n#align star_im_k star_im_k\n\n",
 "star_im_j":
 "@[simp]\ntheorem star_im_j : (star a).im_j = -a.im_j :=\n  rfl\n#align star_im_j star_im_j\n\n",
 "star_im_i":
 "@[simp]\ntheorem star_im_i : (star a).im_i = -a.im_i :=\n  rfl\n#align star_im_i star_im_i\n\n",
 "star_im":
 "@[simp]\ntheorem star_im : (star a).im = -a.im :=\n  a.im_star\n#align star_im star_im\n\n",
 "star_eq_two_re_sub":
 "theorem star_eq_two_re_sub : star a = ↑(2 * a.re) - a :=\n  a.star_eq_two_re_sub\n#align star_eq_two_re_sub star_eq_two_re_sub\n\n",
 "star_eq_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem star_eq_self {a : quaternion R} : star a = a ↔ a = a.re :=\n  quaternion_algebra.star_eq_self\n#align star_eq_self star_eq_self\n\n",
 "star_eq_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem star_eq_neg {a : quaternion R} : star a = -a ↔ a.re = 0 :=\n  quaternion_algebra.star_eq_neg\n#align star_eq_neg star_eq_neg\n\n",
 "star_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem star_coe : star (x : quaternion R) = x :=\n  quaternion_algebra.star_coe x\n#align star_coe star_coe\n\n",
 "star_add_self'":
 "theorem star_add_self' : star a + a = ↑(2 * a.re) :=\n  a.star_add_self'\n#align star_add_self' star_add_self'\n\n",
 "star_add_self":
 "theorem star_add_self : star a + a = 2 * a.re :=\n  a.star_add_self\n#align star_add_self star_add_self\n\n",
 "sq_eq_norm_sq":
 "theorem sq_eq_norm_sq : a ^ 2 = norm_sq a ↔ a = a.re :=\n  by\n  simp_rw [← star_eq_self]\n  obtain rfl | hq0 := eq_or_ne a 0\n  · simp\n  · rw [← star_mul_self, sq, mul_left_inj' hq0, eq_comm]\n#align sq_eq_norm_sq sq_eq_norm_sq\n\n",
 "sq_eq_neg_norm_sq":
 "theorem sq_eq_neg_norm_sq : a ^ 2 = -norm_sq a ↔ a.re = 0 :=\n  by\n  simp_rw [← star_eq_neg]\n  obtain rfl | hq0 := eq_or_ne a 0\n  · simp\n  rw [← star_mul_self, ← mul_neg, ← neg_sq, sq, mul_left_inj' (neg_ne_zero.mpr hq0), eq_comm]\n#align sq_eq_neg_norm_sq sq_eq_neg_norm_sq\n\n",
 "smul_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_re [SMul S R] (s : S) : («expr • » s a).re = «expr • » s a.re :=\n  rfl\n#align smul_re smul_re\n\n",
 "smul_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_mk (re im_i im_j im_k : R) :\n    «expr • » s (⟨re, im_i, im_j, im_k⟩ : quaternion_algebra R c₁ c₂) =\n      ⟨«expr • » s re, «expr • » s im_i, «expr • » s im_j, «expr • » s im_k⟩ :=\n  rfl\n#align smul_mk smul_mk\n\n",
 "smul_im_k":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_im_k [SMul S R] (s : S) : («expr • » s a).im_k = «expr • » s a.im_k :=\n  rfl\n#align smul_im_k smul_im_k\n\n",
 "smul_im_j":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_im_j [SMul S R] (s : S) : («expr • » s a).im_j = «expr • » s a.im_j :=\n  rfl\n#align smul_im_j smul_im_j\n\n",
 "smul_im_i":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_im_i [SMul S R] (s : S) : («expr • » s a).im_i = «expr • » s a.im_i :=\n  rfl\n#align smul_im_i smul_im_i\n\n",
 "smul_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_im [SMulZeroClass S R] (s : S) : («expr • » s a).im = «expr • » s a.im :=\n  ext _ _ (smul_zero _).symm rfl rfl rfl\n#align smul_im smul_im\n\n",
 "smul_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem smul_coe : «expr • » x (y : quaternion R) = ↑(x * y) :=\n  quaternion_algebra.smul_coe x y\n#align smul_coe smul_coe\n\n",
 "self_mul_star":
 "theorem self_mul_star : a * star a = norm_sq a := by rw [mul_star_eq_coe, norm_sq_def]\n#align self_mul_star self_mul_star\n\n",
 "self_add_star'":
 "theorem self_add_star' : a + star a = ↑(2 * a.re) :=\n  a.self_add_star'\n#align self_add_star' self_add_star'\n\n",
 "self_add_star":
 "theorem self_add_star : a + star a = 2 * a.re :=\n  a.self_add_star\n#align self_add_star self_add_star\n\n",
 "re_star":
 "@[simp]\ntheorem re_star : (star a).re = a.re :=\n  rfl\n#align re_star re_star\n\n",
 "re_add_im":
 "@[simp]\ntheorem re_add_im : ↑a.re + a.im = a :=\n  a.re_add_im\n#align re_add_im re_add_im\n\n",
 "rat_cast_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem rat_cast_re (q : exprℚ) : (q : quaternion R).re = q :=\n  rfl\n#align rat_cast_re rat_cast_re\n\n",
 "rat_cast_im_k":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem rat_cast_im_k (q : exprℚ) : (q : quaternion R).im_k = 0 :=\n  rfl\n#align rat_cast_im_k rat_cast_im_k\n\n",
 "rat_cast_im_j":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem rat_cast_im_j (q : exprℚ) : (q : quaternion R).im_j = 0 :=\n  rfl\n#align rat_cast_im_j rat_cast_im_j\n\n",
 "rat_cast_im_i":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem rat_cast_im_i (q : exprℚ) : (q : quaternion R).im_i = 0 :=\n  rfl\n#align rat_cast_im_i rat_cast_im_i\n\n",
 "rat_cast_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem rat_cast_im (q : exprℚ) : (q : quaternion R).im = 0 :=\n  rfl\n#align rat_cast_im rat_cast_im\n\n",
 "rank_eq_four":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem rank_eq_four [StrongRankCondition R] : Module.rank R (quaternion R) = 4 :=\n  quaternion_algebra.rank_eq_four _ _\n#align rank_eq_four rank_eq_four\n\n",
 "pow_four":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\nprivate theorem pow_four [Infinite R] : cardinal.mk R ^ 4 = cardinal.mk R :=\n  power_nat_eq (aleph0_le_mk R) <| by simp\n#align pow_four pow_four\n\n",
 "one_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem one_re : (1 : quaternion R).re = 1 :=\n  rfl\n#align one_re one_re\n\n",
 "one_im_k":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem one_im_k : (1 : quaternion R).im_k = 0 :=\n  rfl\n#align one_im_k one_im_k\n\n",
 "one_im_j":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem one_im_j : (1 : quaternion R).im_j = 0 :=\n  rfl\n#align one_im_j one_im_j\n\n",
 "one_im_i":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem one_im_i : (1 : quaternion R).im_i = 0 :=\n  rfl\n#align one_im_i one_im_i\n\n",
 "one_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem one_im : (1 : quaternion R).im = 0 :=\n  rfl\n#align one_im one_im\n\n",
 "norm_sq_zpow":
 "@[simp]\ntheorem norm_sq_zpow (z : ℤ) : norm_sq (a ^ z) = norm_sq a ^ z :=\n  map_zpow₀ norm_sq a z\n#align norm_sq_zpow norm_sq_zpow\n\n",
 "norm_sq_star":
 "@[simp]\ntheorem norm_sq_star : norm_sq (star a) = norm_sq a := by simp [norm_sq_def']\n#align norm_sq_star norm_sq_star\n\n",
 "norm_sq_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem norm_sq_smul (r : R) (q : quaternion R) : norm_sq («expr • » r q) = r ^ 2 * norm_sq q := by\n  simp_rw [norm_sq_def, star_smul, smul_mul_smul, smul_re, sq, smul_eq_mul]\n#align norm_sq_smul norm_sq_smul\n\n",
 "norm_sq_rat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast]\ntheorem norm_sq_rat_cast (q : exprℚ) : norm_sq (q : quaternion R) = q ^ 2 := by rw [← coe_rat_cast, norm_sq_coe]\n#align norm_sq_rat_cast norm_sq_rat_cast\n\n",
 "norm_sq_nonneg":
 "@[simp]\ntheorem norm_sq_nonneg : 0 ≤ norm_sq a := by\n  rw [norm_sq_def']\n  apply_rules [sq_nonneg, add_nonneg]\n#align norm_sq_nonneg norm_sq_nonneg\n\n",
 "norm_sq_neg":
 "@[simp]\ntheorem norm_sq_neg : norm_sq (-a) = norm_sq a := by simp only [norm_sq_def, star_neg, neg_mul_neg]\n#align norm_sq_neg norm_sq_neg\n\n",
 "norm_sq_ne_zero":
 "theorem norm_sq_ne_zero : norm_sq a ≠ 0 ↔ a ≠ 0 :=\n  not_congr norm_sq_eq_zero\n#align norm_sq_ne_zero norm_sq_ne_zero\n\n",
 "norm_sq_nat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast]\ntheorem norm_sq_nat_cast (n : ℕ) : norm_sq (n : quaternion R) = n ^ 2 := by rw [← coe_nat_cast, norm_sq_coe]\n#align norm_sq_nat_cast norm_sq_nat_cast\n\n",
 "norm_sq_le_zero":
 "@[simp]\ntheorem norm_sq_le_zero : norm_sq a ≤ 0 ↔ a = 0 := by\n  simpa only [le_antisymm_iff, norm_sq_nonneg, and_true_iff] using @norm_sq_eq_zero _ _ a\n#align norm_sq_le_zero norm_sq_le_zero\n\n",
 "norm_sq_inv":
 "@[simp]\ntheorem norm_sq_inv : norm_sq a⁻¹ = (norm_sq a)⁻¹ :=\n  map_inv₀ norm_sq _\n#align norm_sq_inv norm_sq_inv\n\n",
 "norm_sq_int_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast]\ntheorem norm_sq_int_cast (z : ℤ) : norm_sq (z : quaternion R) = z ^ 2 := by rw [← coe_int_cast, norm_sq_coe]\n#align norm_sq_int_cast norm_sq_int_cast\n\n",
 "norm_sq_eq_zero":
 "@[simp]\ntheorem norm_sq_eq_zero : norm_sq a = 0 ↔ a = 0 :=\n  by\n  refine' ⟨fun h => _, fun h => h.symm ▸ norm_sq.map_zero⟩\n  rw [norm_sq_def', add_eq_zero_iff', add_eq_zero_iff', add_eq_zero_iff'] at h\n  exact ext a 0 (pow_eq_zero h.1.1.1) (pow_eq_zero h.1.1.2) (pow_eq_zero h.1.2) (pow_eq_zero h.2)\n  all_goals apply_rules [sq_nonneg, add_nonneg]\n#align norm_sq_eq_zero norm_sq_eq_zero\n\n",
 "norm_sq_div":
 "@[simp]\ntheorem norm_sq_div : norm_sq (a / b) = norm_sq a / norm_sq b :=\n  map_div₀ norm_sq a b\n#align norm_sq_div norm_sq_div\n\n",
 "norm_sq_def'":
 "theorem norm_sq_def' : norm_sq a = a.1 ^ 2 + a.2 ^ 2 + a.3 ^ 2 + a.4 ^ 2 := by\n  simp only [norm_sq_def, sq, mul_neg, sub_neg_eq_add, mul_re, star_re, star_im_i, star_im_j, star_im_k]\n#align norm_sq_def' norm_sq_def'\n\n",
 "norm_sq_def":
 "theorem norm_sq_def : norm_sq a = (a * star a).re :=\n  rfl\n#align norm_sq_def norm_sq_def\n\n",
 "norm_sq_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem norm_sq_coe : norm_sq (x : quaternion R) = x ^ 2 := by rw [norm_sq_def, star_coe, ← coe_mul, coe_re, sq]\n#align norm_sq_coe norm_sq_coe\n\n",
 "norm_sq_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem norm_sq_add (a b : quaternion R) : norm_sq (a + b) = norm_sq a + norm_sq b + 2 * (a * star b).re :=\n  calc\n    norm_sq (a + b) = norm_sq a + (a * star b).re + ((b * star a).re + norm_sq b) := by\n      simp_rw [norm_sq_def, star_add, add_mul, mul_add, add_re]\n    _ = norm_sq a + norm_sq b + ((a * star b).re + (b * star a).re) := by abel\n    _ = norm_sq a + norm_sq b + 2 * (a * star b).re := by rw [← add_re, ← star_mul_star a b, self_add_star', coe_re]\n    \n#align norm_sq_add norm_sq_add\n\n",
 "neg_re":
 "@[simp]\ntheorem neg_re : (-a).re = -a.re :=\n  rfl\n#align neg_re neg_re\n\n",
 "neg_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[simp]\ntheorem neg_mk (a₁ a₂ a₃ a₄ : R) : -(mk a₁ a₂ a₃ a₄ : quaternion_algebra R c₁ c₂) = ⟨-a₁, -a₂, -a₃, -a₄⟩ :=\n  rfl\n#align neg_mk neg_mk\n\n",
 "neg_im_k":
 "@[simp]\ntheorem neg_im_k : (-a).im_k = -a.im_k :=\n  rfl\n#align neg_im_k neg_im_k\n\n",
 "neg_im_j":
 "@[simp]\ntheorem neg_im_j : (-a).im_j = -a.im_j :=\n  rfl\n#align neg_im_j neg_im_j\n\n",
 "neg_im_i":
 "@[simp]\ntheorem neg_im_i : (-a).im_i = -a.im_i :=\n  rfl\n#align neg_im_i neg_im_i\n\n",
 "neg_im":
 "@[simp]\ntheorem neg_im : (-a).im = -a.im :=\n  ext _ _ neg_zero.symm rfl rfl rfl\n#align neg_im neg_im\n\n",
 "nat_cast_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem nat_cast_re (n : ℕ) : (n : quaternion R).re = n :=\n  rfl\n#align nat_cast_re nat_cast_re\n\n",
 "nat_cast_im_k":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem nat_cast_im_k (n : ℕ) : (n : quaternion R).im_k = 0 :=\n  rfl\n#align nat_cast_im_k nat_cast_im_k\n\n",
 "nat_cast_im_j":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem nat_cast_im_j (n : ℕ) : (n : quaternion R).im_j = 0 :=\n  rfl\n#align nat_cast_im_j nat_cast_im_j\n\n",
 "nat_cast_im_i":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem nat_cast_im_i (n : ℕ) : (n : quaternion R).im_i = 0 :=\n  rfl\n#align nat_cast_im_i nat_cast_im_i\n\n",
 "nat_cast_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem nat_cast_im (n : ℕ) : (n : quaternion R).im = 0 :=\n  rfl\n#align nat_cast_im nat_cast_im\n\n",
 "mul_star_eq_coe":
 "theorem mul_star_eq_coe : a * star a = (a * star a).re :=\n  a.mul_star_eq_coe\n#align mul_star_eq_coe mul_star_eq_coe\n\n",
 "mul_re":
 "@[simp]\ntheorem mul_re : (a * b).re = a.re * b.re - a.im_i * b.im_i - a.im_j * b.im_j - a.im_k * b.im_k :=\n  (quaternion_algebra.has_mul_mul_re a b).trans <| by simp only [one_mul, neg_mul, sub_eq_add_neg, neg_neg]\n#align mul_re mul_re\n\n",
 "mul_im_k":
 "@[simp]\ntheorem mul_im_k : (a * b).im_k = a.re * b.im_k + a.im_i * b.im_j - a.im_j * b.im_i + a.im_k * b.re :=\n  (quaternion_algebra.has_mul_mul_im_k a b).trans <| by simp only [one_mul, neg_mul, sub_eq_add_neg, neg_neg]\n#align mul_im_k mul_im_k\n\n",
 "mul_im_j":
 "@[simp]\ntheorem mul_im_j : (a * b).im_j = a.re * b.im_j - a.im_i * b.im_k + a.im_j * b.re + a.im_k * b.im_i :=\n  (quaternion_algebra.has_mul_mul_im_j a b).trans <| by simp only [one_mul, neg_mul, sub_eq_add_neg, neg_neg]\n#align mul_im_j mul_im_j\n\n",
 "mul_im_i":
 "@[simp]\ntheorem mul_im_i : (a * b).im_i = a.re * b.im_i + a.im_i * b.re + a.im_j * b.im_k - a.im_k * b.im_j :=\n  (quaternion_algebra.has_mul_mul_im_i a b).trans <| by simp only [one_mul, neg_mul, sub_eq_add_neg, neg_neg]\n#align mul_im_i mul_im_i\n\n",
 "mul_coe_eq_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem mul_coe_eq_smul : a * r = «expr • » r a :=\n  quaternion_algebra.mul_coe_eq_smul r a\n#align mul_coe_eq_smul mul_coe_eq_smul\n\n",
 "mk_univ_quaternion_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n@[simp]\ntheorem mk_univ_quaternion_of_infinite [Infinite R] : cardinal.mk (Set.univ : Set (quaternion R)) = cardinal.mk R := by\n  rw [mk_univ_quaternion, pow_four]\n#align mk_univ_quaternion_of_infinite mk_univ_quaternion_of_infinite\n\n",
 "mk_univ_quaternion_algebra_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n@[simp]\ntheorem mk_univ_quaternion_algebra_of_infinite [Infinite R] :\n    cardinal.mk (Set.univ : Set (quaternion_algebra R c₁ c₂)) = cardinal.mk R := by\n  rw [mk_univ_quaternion_algebra, pow_four]\n#align mk_univ_quaternion_algebra_of_infinite mk_univ_quaternion_algebra_of_infinite\n\n",
 "mk_univ_quaternion_algebra":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/-- The cardinality of a quaternion algebra, as a set. -/\ntheorem mk_univ_quaternion_algebra : cardinal.mk (Set.univ : Set (quaternion_algebra R c₁ c₂)) = cardinal.mk R ^ 4 := by\n  rw [mk_univ, mk_quaternion_algebra]\n#align mk_univ_quaternion_algebra mk_univ_quaternion_algebra\n\n",
 "mk_univ_quaternion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/-- The cardinality of the quaternions, as a set. -/\n@[simp]\ntheorem mk_univ_quaternion : cardinal.mk (Set.univ : Set (quaternion R)) = cardinal.mk R ^ 4 :=\n  mk_univ_quaternion_algebra _ _\n#align mk_univ_quaternion mk_univ_quaternion\n\n",
 "mk_sub_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[simp]\ntheorem mk_sub_mk (a₁ a₂ a₃ a₄ b₁ b₂ b₃ b₄ : R) :\n    (mk a₁ a₂ a₃ a₄ : quaternion_algebra R c₁ c₂) - mk b₁ b₂ b₃ b₄ = mk (a₁ - b₁) (a₂ - b₂) (a₃ - b₃) (a₄ - b₄) :=\n  rfl\n#align mk_sub_mk mk_sub_mk\n\n",
 "mk_quaternion_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n@[simp]\ntheorem mk_quaternion_of_infinite [Infinite R] : cardinal.mk (quaternion R) = cardinal.mk R := by\n  rw [mk_quaternion, pow_four]\n#align mk_quaternion_of_infinite mk_quaternion_of_infinite\n\n",
 "mk_quaternion_algebra_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n@[simp]\ntheorem mk_quaternion_algebra_of_infinite [Infinite R] : cardinal.mk (quaternion_algebra R c₁ c₂) = cardinal.mk R := by\n  rw [mk_quaternion_algebra, pow_four]\n#align mk_quaternion_algebra_of_infinite mk_quaternion_algebra_of_infinite\n\n",
 "mk_quaternion_algebra":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/-- The cardinality of a quaternion algebra, as a type. -/\ntheorem mk_quaternion_algebra : cardinal.mk (quaternion_algebra R c₁ c₂) = cardinal.mk R ^ 4 :=\n  by\n  rw [mk_congr (quaternion_algebra.equiv_prod c₁ c₂)]\n  simp only [mk_prod, lift_id]\n  ring\n#align mk_quaternion_algebra mk_quaternion_algebra\n\n",
 "mk_quaternion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/-- The cardinality of the quaternions, as a type. -/\n@[simp]\ntheorem mk_quaternion : cardinal.mk (quaternion R) = cardinal.mk R ^ 4 :=\n  mk_quaternion_algebra _ _\n#align mk_quaternion mk_quaternion\n\n",
 "mk_mul_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[simp]\ntheorem mk_mul_mk (a₁ a₂ a₃ a₄ b₁ b₂ b₃ b₄ : R) :\n    (mk a₁ a₂ a₃ a₄ : quaternion_algebra R c₁ c₂) * mk b₁ b₂ b₃ b₄ =\n      ⟨a₁ * b₁ + c₁ * a₂ * b₂ + c₂ * a₃ * b₃ - c₁ * c₂ * a₄ * b₄, a₁ * b₂ + a₂ * b₁ - c₂ * a₃ * b₄ + c₂ * a₄ * b₃,\n        a₁ * b₃ + c₁ * a₂ * b₄ + a₃ * b₁ - c₁ * a₄ * b₂, a₁ * b₄ + a₂ * b₃ - a₃ * b₂ + a₄ * b₁⟩ :=\n  rfl\n#align mk_mul_mk mk_mul_mk\n\n",
 "mk_add_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[simp]\ntheorem mk_add_mk (a₁ a₂ a₃ a₄ b₁ b₂ b₃ b₄ : R) :\n    (mk a₁ a₂ a₃ a₄ : quaternion_algebra R c₁ c₂) + mk b₁ b₂ b₃ b₄ = mk (a₁ + b₁) (a₂ + b₂) (a₃ + b₃) (a₄ + b₄) :=\n  rfl\n#align mk_add_mk mk_add_mk\n\n",
 "int_cast_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem int_cast_re (z : ℤ) : (z : quaternion R).re = z :=\n  rfl\n#align int_cast_re int_cast_re\n\n",
 "int_cast_im_k":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem int_cast_im_k (z : ℤ) : (z : quaternion R).im_k = 0 :=\n  rfl\n#align int_cast_im_k int_cast_im_k\n\n",
 "int_cast_im_j":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem int_cast_im_j (z : ℤ) : (z : quaternion R).im_j = 0 :=\n  rfl\n#align int_cast_im_j int_cast_im_j\n\n",
 "int_cast_im_i":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem int_cast_im_i (z : ℤ) : (z : quaternion R).im_i = 0 :=\n  rfl\n#align int_cast_im_i int_cast_im_i\n\n",
 "int_cast_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem int_cast_im (z : ℤ) : (z : quaternion R).im = 0 :=\n  rfl\n#align int_cast_im int_cast_im\n\n",
 "im_star":
 "@[simp]\ntheorem im_star : star a.im = -a.im :=\n  quaternion_algebra.im_star _\n#align im_star im_star\n\n",
 "im_sq":
 "theorem im_sq : a.im ^ 2 = -norm_sq a.im := by simp_rw [sq, ← star_mul_self, im_star, neg_mul, neg_neg]\n#align im_sq im_sq\n\n",
 "im_re":
 "@[simp]\ntheorem im_re : a.im.re = 0 :=\n  rfl\n#align im_re im_re\n\n",
 "im_k_star":
 "@[simp]\ntheorem im_k_star : (star a).im_k = -a.im_k :=\n  rfl\n#align im_k_star im_k_star\n\n",
 "im_j_star":
 "@[simp]\ntheorem im_j_star : (star a).im_j = -a.im_j :=\n  rfl\n#align im_j_star im_j_star\n\n",
 "im_im_k":
 "@[simp]\ntheorem im_im_k : a.im.im_k = a.im_k :=\n  rfl\n#align im_im_k im_im_k\n\n",
 "im_im_j":
 "@[simp]\ntheorem im_im_j : a.im.im_j = a.im_j :=\n  rfl\n#align im_im_j im_im_j\n\n",
 "im_im_i":
 "@[simp]\ntheorem im_im_i : a.im.im_i = a.im_i :=\n  rfl\n#align im_im_i im_im_i\n\n",
 "im_idem":
 "@[simp]\ntheorem im_idem : a.im.im = a.im :=\n  rfl\n#align im_idem im_idem\n\n",
 "im_i_star":
 "@[simp]\ntheorem im_i_star : (star a).im_i = -a.im_i :=\n  rfl\n#align im_i_star im_i_star\n\n",
 "finrank_eq_four":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem finrank_eq_four [StrongRankCondition R] : FiniteDimensional.finrank R (quaternion R) = 4 :=\n  quaternion_algebra.finrank_eq_four _ _\n#align finrank_eq_four finrank_eq_four\n\n",
 "ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem ext_iff {a b : quaternion R} : a = b ↔ a.re = b.re ∧ a.im_i = b.im_i ∧ a.im_j = b.im_j ∧ a.im_k = b.im_k :=\n  quaternion_algebra.ext_iff a b\n#align ext_iff ext_iff\n\n",
 "ext":
 "@[ext]\ntheorem ext : a.re = b.re → a.im_i = b.im_i → a.im_j = b.im_j → a.im_k = b.im_k → a = b :=\n  quaternion_algebra.ext a b\n#align ext ext\n\n",
 "eta":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[simp]\ntheorem mk.eta {R : Type _} {c₁ c₂} : ∀ a : quaternion_algebra R c₁ c₂, mk a.1 a.2 a.3 a.4 = a\n  | ⟨a₁, a₂, a₃, a₄⟩ => rfl\n#align mk.eta mk.eta\n\n",
 "equiv_tuple_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem quaternion.equiv_tuple_apply (R : Type _) [One R] [Neg R] (x : quaternion R) :\n    quaternion.equiv_tuple R x =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  rfl\n#align quaternion.equiv_tuple_apply quaternion.equiv_tuple_apply\n\n",
 "eq_re_of_eq_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem eq_re_of_eq_coe {a : quaternion R} {x : R} (h : a = x) : a = a.re :=\n  quaternion_algebra.eq_re_of_eq_coe h\n#align eq_re_of_eq_coe eq_re_of_eq_coe\n\n",
 "eq_re_iff_mem_range_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem eq_re_iff_mem_range_coe {a : quaternion R} : a = a.re ↔ a ∈ Set.range (coe : R → quaternion R) :=\n  quaternion_algebra.eq_re_iff_mem_range_coe\n#align eq_re_iff_mem_range_coe eq_re_iff_mem_range_coe\n\n",
 "coe_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast, simp]\ntheorem coe_zpow (x : R) (z : ℤ) : ((x ^ z : R) : quaternion R) = x ^ z :=\n  map_zpow₀ (algebraMap R (quaternion R)) x z\n#align coe_zpow coe_zpow\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_zero : ((0 : R) : quaternion R) = 0 :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_sub : ((x - y : R) : quaternion R) = x - y :=\n  quaternion_algebra.coe_sub x y\n#align coe_sub coe_sub\n\n",
 "coe_star_ae":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem coe_star_ae : «expr⇑ » (star_ae : «expr ≃ₐ[ ] » (quaternion R) R («expr ᵐᵒᵖ» (quaternion R))) = op ∘ star :=\n  rfl\n#align coe_star_ae coe_star_ae\n\n",
 "coe_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, norm_cast]\ntheorem coe_smul [SMulZeroClass S R] (s : S) (r : R) : (↑(«expr • » s r) : quaternion R) = «expr • » s ↑r :=\n  quaternion_algebra.coe_smul _ _\n#align coe_smul coe_smul\n\n",
 "coe_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_re : (x : quaternion R).re = x :=\n  rfl\n#align coe_re coe_re\n\n",
 "coe_rat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast]\ntheorem coe_rat_cast (q : exprℚ) : ↑(q : R) = (q : quaternion R) :=\n  rfl\n#align coe_rat_cast coe_rat_cast\n\n",
 "coe_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast, simp]\ntheorem coe_pow (n : ℕ) : (↑(x ^ n) : quaternion R) = ↑x ^ n :=\n  quaternion_algebra.coe_pow x n\n#align coe_pow coe_pow\n\n",
 "coe_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_one : ((1 : R) : quaternion R) = 1 :=\n  rfl\n#align coe_one coe_one\n\n",
 "coe_norm_sq_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem coe_norm_sq_add : (norm_sq (a + b) : quaternion R) = norm_sq a + a * star b + b * star a + norm_sq b := by\n  simp [← self_mul_star, mul_add, add_mul, add_assoc]\n#align coe_norm_sq_add coe_norm_sq_add\n\n",
 "coe_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_neg : ((-x : R) : quaternion R) = -x :=\n  quaternion_algebra.coe_neg x\n#align coe_neg coe_neg\n\n",
 "coe_nat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast]\ntheorem coe_nat_cast (n : ℕ) : ↑(n : R) = (n : quaternion R) :=\n  rfl\n#align coe_nat_cast coe_nat_cast\n\n",
 "coe_mul_eq_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem coe_mul_eq_smul : ↑r * a = «expr • » r a :=\n  quaternion_algebra.coe_mul_eq_smul r a\n#align coe_mul_eq_smul coe_mul_eq_smul\n\n",
 "coe_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_mul : ((x * y : R) : quaternion R) = x * y :=\n  quaternion_algebra.coe_mul x y\n#align coe_mul coe_mul\n\n",
 "coe_linear_equiv_tuple_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_linear_equiv_tuple_symm : «expr⇑ » (linear_equiv_tuple c₁ c₂).symm = (equiv_tuple c₁ c₂).symm :=\n  rfl\n#align coe_linear_equiv_tuple_symm coe_linear_equiv_tuple_symm\n\n",
 "coe_linear_equiv_tuple":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n-- proofs are not `rfl` in the forward direction\n@[simp]\ntheorem coe_linear_equiv_tuple : «expr⇑ » (linear_equiv_tuple c₁ c₂) = equiv_tuple c₁ c₂ :=\n  rfl\n#align coe_linear_equiv_tuple coe_linear_equiv_tuple\n\n",
 "coe_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast, simp]\ntheorem coe_inv (x : R) : ((x⁻¹ : R) : quaternion R) = x⁻¹ :=\n  map_inv₀ (algebraMap R (quaternion R)) _\n#align coe_inv coe_inv\n\n",
 "coe_int_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast]\ntheorem coe_int_cast (z : ℤ) : ↑(z : R) = (z : quaternion R) :=\n  rfl\n#align coe_int_cast coe_int_cast\n\n",
 "coe_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\ntheorem coe_injective : function.injective (coe : R → quaternion R) :=\n  quaternion_algebra.coe_injective\n#align coe_injective coe_injective\n\n",
 "coe_inj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem coe_inj {x y : R} : (x : quaternion R) = y ↔ x = y :=\n  coe_injective.eq_iff\n#align coe_inj coe_inj\n\n",
 "coe_im_k":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_im_k : (x : quaternion R).im_k = 0 :=\n  rfl\n#align coe_im_k coe_im_k\n\n",
 "coe_im_j":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_im_j : (x : quaternion R).im_j = 0 :=\n  rfl\n#align coe_im_j coe_im_j\n\n",
 "coe_im_i":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_im_i : (x : quaternion R).im_i = 0 :=\n  rfl\n#align coe_im_i coe_im_i\n\n",
 "coe_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_im : (x : quaternion R).im = 0 :=\n  rfl\n#align coe_im coe_im\n\n",
 "coe_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[norm_cast, simp]\ntheorem coe_div (x y : R) : ((x / y : R) : quaternion R) = x / y :=\n  map_div₀ (algebraMap R (quaternion R)) x y\n#align coe_div coe_div\n\n",
 "coe_commutes":
 "theorem coe_commutes : ↑r * a = a * r :=\n  quaternion_algebra.coe_commutes r a\n#align coe_commutes coe_commutes\n\n",
 "coe_commute":
 "theorem coe_commute : Commute (↑r) a :=\n  quaternion_algebra.coe_commute r a\n#align coe_commute coe_commute\n\n",
 "coe_basis_one_i_j_k_repr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem coe_basis_one_i_j_k_repr (q : quaternion_algebra R c₁ c₂) :\n    «expr⇑ » ((basis_one_i_j_k c₁ c₂).repr q) =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  rfl\n#align coe_basis_one_i_j_k_repr coe_basis_one_i_j_k_repr\n\n",
 "coe_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[norm_cast, simp]\ntheorem coe_algebra_map : «expr⇑ » (algebraMap R (quaternion_algebra R c₁ c₂)) = coe :=\n  rfl\n#align coe_algebra_map coe_algebra_map\n\n",
 "coe_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp, norm_cast]\ntheorem coe_add : ((x + y : R) : quaternion R) = x + y :=\n  quaternion_algebra.coe_add x y\n#align coe_add coe_add\n\n",
 "algebra_map_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n-- TODO: add weaker `mul_action`, `distrib_mul_action`, and `module` instances (and repeat them\n-- for `ℍ[R]`)\ntheorem algebra_map_eq (r : R) : algebraMap R (quaternion_algebra R c₁ c₂) r = ⟨r, 0, 0, 0⟩ :=\n  rfl\n#align algebra_map_eq algebra_map_eq\n\n",
 "algebra_map_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion -/\n@[simp]\ntheorem algebra_map_def : «expr⇑ » (algebraMap R (quaternion R)) = coe :=\n  rfl\n#align algebra_map_def algebra_map_def\n\n",
 "add_re":
 "@[simp]\ntheorem add_re : (a + b).re = a.re + b.re :=\n  rfl\n#align add_re add_re\n\n",
 "add_im_k":
 "@[simp]\ntheorem add_im_k : (a + b).im_k = a.im_k + b.im_k :=\n  rfl\n#align add_im_k add_im_k\n\n",
 "add_im_j":
 "@[simp]\ntheorem add_im_j : (a + b).im_j = a.im_j + b.im_j :=\n  rfl\n#align add_im_j add_im_j\n\n",
 "add_im_i":
 "@[simp]\ntheorem add_im_i : (a + b).im_i = a.im_i + b.im_i :=\n  rfl\n#align add_im_i add_im_i\n\n",
 "add_im":
 "@[simp]\ntheorem add_im : (a + b).im = a.im + b.im :=\n  ext _ _ (add_zero _).symm rfl rfl rfl\n#align add_im add_im\n\n"}