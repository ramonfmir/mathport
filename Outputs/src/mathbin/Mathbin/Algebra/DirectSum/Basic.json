{"zero_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n@[simp]\ntheorem zero_apply (i : ι) :\n    (0 : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i)) i = 0 :=\n  rfl\n#align zero_apply zero_apply\n\n",
 "unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\ntheorem to_add_monoid.unique\n    (f : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i)) :\n    ψ f = toAddMonoid (fun i => ψ.comp (of β i)) f := by\n  congr\n  ext\n  simp [to_add_monoid, of]\n#align to_add_monoid.unique to_add_monoid.unique\n\n",
 "to_add_monoid_of":
 "@[simp]\ntheorem to_add_monoid_of (i) (x : β i) : toAddMonoid φ (of β i x) = φ i x :=\n  Dfinsupp.liftAddHom_apply_single φ i x\n#align to_add_monoid_of to_add_monoid_of\n\n",
 "support_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n@[simp]\ntheorem support_zero [∀ (i : ι) (x : β i), Decidable (x ≠ 0)] :\n    (0 :\n          direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\"\n            (β i)).support =\n      ∅ :=\n  Dfinsupp.support_zero\n#align support_zero support_zero\n\n",
 "support_of_subset":
 "theorem support_of_subset [∀ (i : ι) (x : β i), Decidable (x ≠ 0)] {i : ι} {b : β i} : (of _ i b).support ⊆ {i} :=\n  Dfinsupp.support_single_subset\n#align support_of_subset support_of_subset\n\n",
 "support_of":
 "@[simp]\ntheorem support_of [∀ (i : ι) (x : β i), Decidable (x ≠ 0)] (i : ι) (x : β i) (h : x ≠ 0) : (of _ i x).support = {i} :=\n  Dfinsupp.support_single_ne_zero h\n#align support_of support_of\n\n",
 "sum_support_of":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_support_of [∀ (i : ι) (x : β i), Decidable (x ≠ 0)]\n    (x : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i)) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" x.support\n        (of β i (x i)) =\n      x :=\n  Dfinsupp.sum_single\n#align sum_support_of sum_support_of\n\n",
 "sub_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/-\nCopyright (c) 2019 Kenny Lau. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kenny Lau\n-/\n@[simp]\ntheorem sub_apply\n    (g₁ g₂ : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i))\n    (i : ι) : (g₁ - g₂) i = g₁ i - g₂ i :=\n  rfl\n#align sub_apply sub_apply\n\n",
 "sigma_uncurry_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n@[simp]\ntheorem sigma_uncurry_apply [∀ i, DecidableEq (α i)] [∀ i j, DecidableEq (δ i j)]\n    (f : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (δ i j))\n    (i : ι) (j : α i) : sigmaUncurry f ⟨i, j⟩ = f i j :=\n  Dfinsupp.sigmaUncurry_apply f i j\n#align sigma_uncurry_apply sigma_uncurry_apply\n\n",
 "sigma_curry_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n@[simp]\ntheorem sigma_curry_apply\n    (f : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (δ i.1 i.2))\n    (i : ι) (j : α i) : sigmaCurry f i j = f ⟨i, j⟩ :=\n  @Dfinsupp.sigmaCurry_apply _ _ δ _ f i j\n#align sigma_curry_apply sigma_curry_apply\n\n",
 "of_injective":
 "theorem of_injective (i : ι) : function.injective (of β i) :=\n  Dfinsupp.single_injective\n#align of_injective of_injective\n\n",
 "of_eq_same":
 "@[simp]\ntheorem of_eq_same (i : ι) (x : β i) : (of _ i x) i = x :=\n  Dfinsupp.single_eq_same\n#align of_eq_same of_eq_same\n\n",
 "of_eq_of_ne":
 "theorem of_eq_of_ne (i j : ι) (x : β i) (h : i ≠ j) : (of _ i x) j = 0 :=\n  Dfinsupp.single_eq_of_ne h\n#align of_eq_of_ne of_eq_of_ne\n\n",
 "mk_injective":
 "theorem mk_injective (s : Finset ι) : function.injective (mk β s) :=\n  Dfinsupp.mk_injective s\n#align mk_injective mk_injective\n\n",
 "induction_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n@[elab_as_elim]\nprotected theorem induction_on\n    {C : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i) → Prop}\n    (x : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i))\n    (H_zero : C 0) (H_basic : ∀ (i : ι) (x : β i), C (of β i x)) (H_plus : ∀ x y, C x → C y → C (x + y)) : C x :=\n  by\n  apply Dfinsupp.induction x H_zero\n  intro i b f h1 h2 ih\n  solve_by_elim\n#align induction_on induction_on\n\n",
 "from_add_monoid_of_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\ntheorem from_add_monoid_of_apply (i : ι) (f : «expr →+ » γ (β i)) (x : γ) : fromAddMonoid (of _ i f) x = of _ i (f x) :=\n  by rw [from_add_monoid_of, AddMonoidHom.coe_comp]\n#align from_add_monoid_of_apply from_add_monoid_of_apply\n\n",
 "from_add_monoid_of":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n@[simp]\ntheorem from_add_monoid_of (i : ι) (f : «expr →+ » γ (β i)) : fromAddMonoid (of _ i f) = (of _ i).comp f :=\n  by\n  rw [from_add_monoid, to_add_monoid_of]\n  rfl\n#align from_add_monoid_of from_add_monoid_of\n\n",
 "equiv_congr_left_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n-- TODO: generalize this to remove the assumption `S ⊆ T`.\n@[simp]\ntheorem equiv_congr_left_apply (h : «expr ≃ » ι κ)\n    (f : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i))\n    (k : κ) : equivCongrLeft h f k = f (h.symm k) :=\n  Dfinsupp.comapDomain'_apply _ _ _ _\n#align equiv_congr_left_apply equiv_congr_left_apply\n\n",
 "coe_of_apply":
 "theorem coe_of_apply {M S : Type _} [DecidableEq ι] [AddCommMonoid M] [SetLike S M] [AddSubmonoidClass S M] {A : ι → S}\n    (i j : ι) (x : A i) : (of _ i x j : M) = if i = j then x else 0 :=\n  by\n  obtain rfl | h := Decidable.eq_or_ne i j\n  · rw [DirectSum.of_eq_same, if_pos rfl]\n  · rw [DirectSum.of_eq_of_ne _ _ _ _ h, if_neg h, ZeroMemClass.coe_zero]\n#align coe_of_apply coe_of_apply\n\n",
 "coe_add_monoid_hom_of":
 "@[simp]\ntheorem coe_add_monoid_hom_of {M S : Type _} [DecidableEq ι] [AddCommMonoid M] [SetLike S M] [AddSubmonoidClass S M]\n    (A : ι → S) (i : ι) (x : A i) : DirectSum.coeAddMonoidHom A (of (fun i => A i) i x) = x :=\n  toAddMonoid_of _ _ _\n#align coe_add_monoid_hom_of coe_add_monoid_hom_of\n\n",
 "add_submonoid_supr_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem is_internal.add_submonoid_supr_eq_top {M : Type _} [DecidableEq ι] [AddCommMonoid M] (A : ι → AddSubmonoid M)\n    (h : IsInternal A) : supᵢ A = «expr⊤» :=\n  by\n  rw [AddSubmonoid.supᵢ_eq_mrange_dfinsupp_sumAddHom, AddMonoidHom.mrange_top_iff_surjective]\n  exact Function.Bijective.surjective h\n#align is_internal.add_submonoid_supr_eq_top is_internal.add_submonoid_supr_eq_top\n\n",
 "add_hom_ext'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/-- If two additive homomorphisms from `⨁ i, β i` are equal on each `of β i y`,\nthen they are equal.\n\nSee note [partially-applied ext lemmas]. -/\n@[ext]\ntheorem add_hom_ext' {γ : Type _} [AddMonoid γ]\n    ⦃f g :\n      «expr →+ » (direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i))\n        γ⦄\n    (H : ∀ i : ι, f.comp (of _ i) = g.comp (of _ i)) : f = g :=\n  addHom_ext fun i => AddMonoidHom.congr_fun <| H i\n#align add_hom_ext' add_hom_ext'\n\n",
 "add_hom_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/-- If two additive homomorphisms from `⨁ i, β i` are equal on each `of β i y`,\nthen they are equal. -/\ntheorem add_hom_ext {γ : Type _} [AddMonoid γ]\n    ⦃f g :\n      «expr →+ » (direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i))\n        γ⦄\n    (H : ∀ (i : ι) (y : β i), f (of _ i y) = g (of _ i y)) : f = g :=\n  Dfinsupp.addHom_ext H\n#align add_hom_ext add_hom_ext\n\n",
 "add_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n@[simp]\ntheorem add_apply\n    (g₁ g₂ : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (β i))\n    (i : ι) : (g₁ + g₂) i = g₁ i + g₂ i :=\n  rfl\n#align add_apply add_apply\n\n"}