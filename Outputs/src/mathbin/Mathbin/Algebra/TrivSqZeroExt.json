{"snd_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_zero [Zero R] [Zero M] : (0 : (exprtsze) R M).snd = 0 :=\n  rfl\n#align snd_zero snd_zero\n\n",
 "snd_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem snd_sum {ι} [AddCommMonoid R] [AddCommMonoid M] (s : Finset ι) (f : ι → (exprtsze) R M) :\n    (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)).snd =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i).snd :=\n  Prod.snd_sum\n#align snd_sum snd_sum\n\n",
 "snd_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_sub [Sub R] [Sub M] (x₁ x₂ : (exprtsze) R M) : (x₁ - x₂).snd = x₁.snd - x₂.snd :=\n  rfl\n#align snd_sub snd_sub\n\n",
 "snd_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem snd_smul [SMul S R] [SMul S M] (s : S) (x : (exprtsze) R M) : («expr • » s x).snd = «expr • » s x.snd :=\n  rfl\n#align snd_smul snd_smul\n\n",
 "snd_pow_of_smul_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem snd_pow_of_smul_comm [Monoid R] [AddMonoid M] [DistribMulAction R M] [DistribMulAction («expr ᵐᵒᵖ» R) M]\n    [SMulCommClass R («expr ᵐᵒᵖ» R) M] (x : (exprtsze) R M) (n : ℕ)\n    (h : «expr • » (op x.fst) x.snd = «expr • » x.fst x.snd) :\n    snd (x ^ n) = «expr • » n («expr • » (x.fst ^ n.pred) x.snd) :=\n  by\n  have : ∀ n : ℕ, «expr • » (op (x.fst ^ n)) x.snd = «expr • » (x.fst ^ n) x.snd :=\n    by\n    intro n\n    induction' n with n ih\n    · simp\n    · rw [pow_succ', MulOpposite.op_mul, mul_smul, mul_smul, ← h, smul_comm (_ : R) (op x.fst) x.snd, ih]\n  simp_rw [snd_pow_eq_sum, this, smul_smul, ← pow_add]\n  cases n\n  · rw [nat.pred_zero, pow_zero, List.range_zero, zero_smul, List.map_nil, List.sum_nil]\n  simp_rw [nat.pred_succ]\n  refine' (List.sum_eq_card_nsmul _ («expr • » (x.fst ^ n) x.snd) _).trans _\n  · rintro m hm\n    simp_rw [List.mem_map, List.mem_range] at hm\n    obtain ⟨i, hi, rfl⟩ := hm\n    rw [tsub_add_cancel_of_le (nat.lt_succ_iff.mp hi)]\n  · rw [list.length_map, List.length_range]\n#align snd_pow_of_smul_comm snd_pow_of_smul_comm\n\n",
 "snd_pow_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem snd_pow_eq_sum [Monoid R] [AddMonoid M] [DistribMulAction R M] [DistribMulAction («expr ᵐᵒᵖ» R) M]\n    (x : (exprtsze) R M) (n : ℕ) :\n    snd (x ^ n) =\n      ((list.range n).map fun i => «expr • » (x.fst ^ (n.pred - i)) («expr • » (op (x.fst ^ i)) x.snd)).sum :=\n  rfl\n#align snd_pow_eq_sum snd_pow_eq_sum\n\n",
 "snd_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem snd_pow [CommMonoid R] [AddMonoid M] [DistribMulAction R M] [DistribMulAction («expr ᵐᵒᵖ» R) M]\n    [IsCentralScalar R M] (x : (exprtsze) R M) (n : ℕ) : snd (x ^ n) = «expr • » n («expr • » (x.fst ^ n.pred) x.snd) :=\n  snd_pow_of_smul_comm _ _ (op_smul_eq_smul _ _)\n#align snd_pow snd_pow\n\n",
 "snd_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_one [One R] [Zero M] : (1 : (exprtsze) R M).snd = 0 :=\n  rfl\n#align snd_one snd_one\n\n",
 "snd_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_neg [Neg R] [Neg M] (x : (exprtsze) R M) : (-x).snd = -x.snd :=\n  rfl\n#align snd_neg snd_neg\n\n",
 "snd_nat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_nat_cast [AddMonoidWithOne R] [AddMonoid M] (n : ℕ) : (n : (exprtsze) R M).snd = 0 :=\n  rfl\n#align snd_nat_cast snd_nat_cast\n\n",
 "snd_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem snd_mul [Mul R] [Add M] [SMul R M] [SMul («expr ᵐᵒᵖ» R) M] (x₁ x₂ : (exprtsze) R M) :\n    (x₁ * x₂).snd = «expr • » x₁.fst x₂.snd + «expr • » (op x₂.fst) x₁.snd :=\n  rfl\n#align snd_mul snd_mul\n\n",
 "snd_mk":
 "@[simp]\ntheorem snd_mk (r : R) (m : M) : snd (r, m) = m :=\n  rfl\n#align snd_mk snd_mk\n\n",
 "snd_list_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- The second element of a product $\\prod_{i=0}^n (r_i + m_i)$ is a sum of terms of the form\n$r_0\\cdots r_{i-1}m_ir_{i+1}\\cdots r_n$. -/\ntheorem snd_list_prod [Semiring R] [AddCommMonoid M] [Module R M] [Module («expr ᵐᵒᵖ» R) M]\n    [SMulCommClass R («expr ᵐᵒᵖ» R) M] (l : List ((exprtsze) R M)) :\n    l.prod.snd =\n      (l.enum.map fun x : ℕ × (exprtsze) R M =>\n          «expr • » ((l.map fst).take x.1).prod («expr • » (op ((l.map fst).drop x.1.succ).prod) x.snd.snd)).sum :=\n  by\n  induction' l with x xs ih\n  · simp\n  · rw [List.enum_cons, ← List.map_fst_add_enum_eq_enumFrom]\n    simp_rw [list.map_cons, list.map_map, Function.comp, Prod.map_snd, Prod.map_fst, id, List.take_zero, List.take_cons,\n      List.prod_nil, List.prod_cons, snd_mul, one_smul, list.drop, mul_smul, List.sum_cons, fst_list_prod, ih,\n      List.smul_sum, list.map_map]\n    exact add_comm _ _\n#align snd_list_prod snd_list_prod\n\n",
 "snd_int_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_int_cast [AddGroupWithOne R] [AddGroup M] (z : ℤ) : (z : (exprtsze) R M).snd = 0 :=\n  rfl\n#align snd_int_cast snd_int_cast\n\n",
 "snd_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_inr [Zero R] (m : M) : (inr m : (exprtsze) R M).snd = m :=\n  rfl\n#align snd_inr snd_inr\n\n",
 "snd_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_inl [Zero M] (r : R) : (inl r : (exprtsze) R M).snd = 0 :=\n  rfl\n#align snd_inl snd_inl\n\n",
 "snd_comp_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_comp_inr [Zero R] : snd ∘ (inr : M → (exprtsze) R M) = id :=\n  rfl\n#align snd_comp_inr snd_comp_inr\n\n",
 "snd_comp_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_comp_inl [Zero M] : snd ∘ (inl : R → (exprtsze) R M) = 0 :=\n  rfl\n#align snd_comp_inl snd_comp_inl\n\n",
 "snd_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem snd_add [Add R] [Add M] (x₁ x₂ : (exprtsze) R M) : (x₁ + x₂).snd = x₁.snd + x₂.snd :=\n  rfl\n#align snd_add snd_add\n\n",
 "linear_map_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/-- This cannot be marked `@[ext]` as it ends up being used instead of `linear_map.prod_ext` when\nworking with `R × M`. -/\ntheorem linear_map_ext {N} [Semiring S] [AddCommMonoid R] [AddCommMonoid M] [AddCommMonoid N] [Module S R] [Module S M]\n    [Module S N] ⦃f g : «expr →ₗ[ ] » ((exprtsze) R M) S N⦄ (hl : ∀ r, f (inl r) = g (inl r))\n    (hr : ∀ m, f (inr m) = g (inr m)) : f = g :=\n  LinearMap.prod_ext (LinearMap.ext hl) (LinearMap.ext hr)\n#align linear_map_ext linear_map_ext\n\n",
 "lift_aux_inr_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n-- When applied to `inr` itself, `lift_aux` is the identity.\n@[simp]\ntheorem lift_aux_inr_hom : liftAux (inrHom R' M) (inr_mul_inr R') = AlgHom.id R' ((exprtsze) R' M) :=\n  algHom_ext' <| liftAux_comp_inrHom _ _\n#align lift_aux_inr_hom lift_aux_inr_hom\n\n",
 "lift_aux_comp_inr_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem lift_aux_comp_inr_hom (f : «expr →ₗ[ ] » M R' A) (hf : ∀ x y, f x * f y = 0) :\n    (liftAux f hf).to_linear_map.comp (inrHom R' M) = f :=\n  LinearMap.ext <| liftAux_apply_inr f hf\n#align lift_aux_comp_inr_hom lift_aux_comp_inr_hom\n\n",
 "lift_aux_apply_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem lift_aux_apply_inr (f : «expr →ₗ[ ] » M R' A) (hf : ∀ x y, f x * f y = 0) (m : M) :\n    liftAux f hf (inr m) = f m :=\n  show algebraMap R' A 0 + f m = f m by rw [RingHom.map_zero, zero_add]\n#align lift_aux_apply_inr lift_aux_apply_inr\n\n",
 "inr_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inr_zero [Zero R] [Zero M] : (inr 0 : (exprtsze) R M) = 0 :=\n  rfl\n#align inr_zero inr_zero\n\n",
 "inr_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem inr_sum {ι} [AddCommMonoid R] [AddCommMonoid M] (s : Finset ι) (f : ι → M) :\n    (inr (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) :\n        (exprtsze) R M) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (inr (f i)) :=\n  (LinearMap.inr ℕ _ _).map_sum\n#align inr_sum inr_sum\n\n",
 "inr_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inr_sub [SubNegZeroMonoid R] [Sub M] (m₁ m₂ : M) : (inr (m₁ - m₂) : (exprtsze) R M) = inr m₁ - inr m₂ :=\n  ext (sub_zero _).symm rfl\n#align inr_sub inr_sub\n\n",
 "inr_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem inr_smul [Zero R] [Zero S] [SMulWithZero S R] [SMul S M] (r : S) (m : M) :\n    (inr («expr • » r m) : (exprtsze) R M) = «expr • » r (inr m) :=\n  ext (smul_zero _).symm rfl\n#align inr_smul inr_smul\n\n",
 "inr_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inr_neg [SubNegZeroMonoid R] [Neg M] (m : M) : (inr (-m) : (exprtsze) R M) = -inr m :=\n  ext neg_zero.symm rfl\n#align inr_neg inr_neg\n\n",
 "inr_mul_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inr_mul_inr [Semiring R] [AddCommMonoid M] [Module R M] [Module («expr ᵐᵒᵖ» R) M] (m₁ m₂ : M) :\n    (inr m₁ * inr m₂ : (exprtsze) R M) = 0 :=\n  ext (MulZeroClass.mul_zero _) <|\n    show «expr • » (0 : R) m₂ + «expr • » (0 : «expr ᵐᵒᵖ» R) m₁ = 0 by rw [zero_smul, zero_add, zero_smul]\n#align inr_mul_inr inr_mul_inr\n\n",
 "inr_mul_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem inr_mul_inl [Semiring R] [AddCommMonoid M] [Module R M] [Module («expr ᵐᵒᵖ» R) M] (r : R) (m : M) :\n    (inr m * inl r : (exprtsze) R M) = inr («expr • » (op r) m) :=\n  ext (MulZeroClass.zero_mul r) <|\n    show «expr • » (0 : R) 0 + «expr • » (op r) m = «expr • » (op r) m by rw [smul_zero, zero_add]\n#align inr_mul_inl inr_mul_inl\n\n",
 "inr_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\ntheorem inr_injective [Zero R] : function.injective (inr : M → (exprtsze) R M) :=\n  function.left_inverse.injective <| snd_inr _\n#align inr_injective inr_injective\n\n",
 "inr_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inr_add [AddZeroClass R] [AddZeroClass M] (m₁ m₂ : M) : (inr (m₁ + m₂) : (exprtsze) R M) = inr m₁ + inr m₂ :=\n  ext (add_zero 0).symm rfl\n#align inr_add inr_add\n\n",
 "inl_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inl_zero [Zero R] [Zero M] : (inl 0 : (exprtsze) R M) = 0 :=\n  rfl\n#align inl_zero inl_zero\n\n",
 "inl_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem inl_sum {ι} [AddCommMonoid R] [AddCommMonoid M] (s : Finset ι) (f : ι → R) :\n    (inl (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) :\n        (exprtsze) R M) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (inl (f i)) :=\n  (LinearMap.inl ℕ _ _).map_sum\n#align inl_sum inl_sum\n\n",
 "inl_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inl_sub [Sub R] [SubNegZeroMonoid M] (r₁ r₂ : R) : (inl (r₁ - r₂) : (exprtsze) R M) = inl r₁ - inl r₂ :=\n  ext rfl (sub_zero _).symm\n#align inl_sub inl_sub\n\n",
 "inl_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem inl_smul [Monoid S] [AddMonoid M] [SMul S R] [DistribMulAction S M] (s : S) (r : R) :\n    (inl («expr • » s r) : (exprtsze) R M) = «expr • » s (inl r) :=\n  ext rfl (smul_zero s).symm\n#align inl_smul inl_smul\n\n",
 "inl_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inl_pow [Monoid R] [AddMonoid M] [DistribMulAction R M] [DistribMulAction («expr ᵐᵒᵖ» R) M] (r : R) (n : ℕ) :\n    (inl r ^ n : (exprtsze) R M) = inl (r ^ n) :=\n  ext rfl <| by simp [snd_pow_eq_sum]\n#align inl_pow inl_pow\n\n",
 "inl_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inl_one [One R] [Zero M] : (inl 1 : (exprtsze) R M) = 1 :=\n  rfl\n#align inl_one inl_one\n\n",
 "inl_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inl_neg [Neg R] [SubNegZeroMonoid M] (r : R) : (inl (-r) : (exprtsze) R M) = -inl r :=\n  ext rfl neg_zero.symm\n#align inl_neg inl_neg\n\n",
 "inl_nat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inl_nat_cast [AddMonoidWithOne R] [AddMonoid M] (n : ℕ) : (inl n : (exprtsze) R M) = n :=\n  rfl\n#align inl_nat_cast inl_nat_cast\n\n",
 "inl_mul_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem inl_mul_inr [Semiring R] [AddCommMonoid M] [Module R M] [Module («expr ᵐᵒᵖ» R) M] (r : R) (m : M) :\n    (inl r * inr m : (exprtsze) R M) = inr («expr • » r m) :=\n  ext (MulZeroClass.mul_zero r) <|\n    show «expr • » r m + «expr • » (0 : «expr ᵐᵒᵖ» R) 0 = «expr • » r m by rw [smul_zero, add_zero]\n#align inl_mul_inr inl_mul_inr\n\n",
 "inl_mul_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\ntheorem inl_mul_inl [Monoid R] [AddMonoid M] [DistribMulAction R M] [DistribMulAction («expr ᵐᵒᵖ» R) M] (r₁ r₂ : R) :\n    (inl r₁ * inl r₂ : (exprtsze) R M) = inl (r₁ * r₂) :=\n  (inl_mul M r₁ r₂).symm\n#align inl_mul_inl inl_mul_inl\n\n",
 "inl_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inl_mul [Monoid R] [AddMonoid M] [DistribMulAction R M] [DistribMulAction («expr ᵐᵒᵖ» R) M] (r₁ r₂ : R) :\n    (inl (r₁ * r₂) : (exprtsze) R M) = inl r₁ * inl r₂ :=\n  ext rfl <| show (0 : M) = «expr • » r₁ 0 + «expr • » (op r₂) 0 by rw [smul_zero, zero_add, smul_zero]\n#align inl_mul inl_mul\n\n",
 "inl_int_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inl_int_cast [AddGroupWithOne R] [AddGroup M] (z : ℤ) : (inl z : (exprtsze) R M) = z :=\n  rfl\n#align inl_int_cast inl_int_cast\n\n",
 "inl_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\ntheorem inl_injective [Zero M] : function.injective (inl : R → (exprtsze) R M) :=\n  function.left_inverse.injective <| fst_inl _\n#align inl_injective inl_injective\n\n",
 "inl_fst_add_inr_snd_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\ntheorem inl_fst_add_inr_snd_eq [AddZeroClass R] [AddZeroClass M] (x : (exprtsze) R M) : inl x.fst + inr x.snd = x :=\n  ext (add_zero x.1) (zero_add x.2)\n#align inl_fst_add_inr_snd_eq inl_fst_add_inr_snd_eq\n\n",
 "inl_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem inl_add [Add R] [AddZeroClass M] (r₁ r₂ : R) : (inl (r₁ + r₂) : (exprtsze) R M) = inl r₁ + inl r₂ :=\n  ext rfl (add_zero 0).symm\n#align inl_add inl_add\n\n",
 "ind":
 "/-- To show a property hold on all `triv_sq_zero_ext R M` it suffices to show it holds\non terms of the form `inl r + inr m`.\n\nThis can be used as `induction x using triv_sq_zero_ext.ind`. -/\ntheorem ind {R M} [AddZeroClass R] [AddZeroClass M] {P : TrivSqZeroExt R M → Prop} (h : ∀ r m, P (inl r + inr m)) (x) :\n    P x :=\n  inl_fst_add_inr_snd_eq x ▸ h x.1 x.2\n#align ind ind\n\n",
 "fst_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_zero [Zero R] [Zero M] : (0 : (exprtsze) R M).fst = 0 :=\n  rfl\n#align fst_zero fst_zero\n\n",
 "fst_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem fst_sum {ι} [AddCommMonoid R] [AddCommMonoid M] (s : Finset ι) (f : ι → (exprtsze) R M) :\n    (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)).fst =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i).fst :=\n  Prod.fst_sum\n#align fst_sum fst_sum\n\n",
 "fst_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_sub [Sub R] [Sub M] (x₁ x₂ : (exprtsze) R M) : (x₁ - x₂).fst = x₁.fst - x₂.fst :=\n  rfl\n#align fst_sub fst_sub\n\n",
 "fst_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem fst_smul [SMul S R] [SMul S M] (s : S) (x : (exprtsze) R M) : («expr • » s x).fst = «expr • » s x.fst :=\n  rfl\n#align fst_smul fst_smul\n\n",
 "fst_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_pow [Monoid R] [AddMonoid M] [DistribMulAction R M] [DistribMulAction («expr ᵐᵒᵖ» R) M] (x : (exprtsze) R M)\n    (n : ℕ) : fst (x ^ n) = x.fst ^ n :=\n  rfl\n#align fst_pow fst_pow\n\n",
 "fst_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_one [One R] [Zero M] : (1 : (exprtsze) R M).fst = 1 :=\n  rfl\n#align fst_one fst_one\n\n",
 "fst_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_neg [Neg R] [Neg M] (x : (exprtsze) R M) : (-x).fst = -x.fst :=\n  rfl\n#align fst_neg fst_neg\n\n",
 "fst_nat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_nat_cast [AddMonoidWithOne R] [AddMonoid M] (n : ℕ) : (n : (exprtsze) R M).fst = n :=\n  rfl\n#align fst_nat_cast fst_nat_cast\n\n",
 "fst_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_mul [Mul R] [Add M] [SMul R M] [SMul («expr ᵐᵒᵖ» R) M] (x₁ x₂ : (exprtsze) R M) :\n    (x₁ * x₂).fst = x₁.fst * x₂.fst :=\n  rfl\n#align fst_mul fst_mul\n\n",
 "fst_mk":
 "/-\nCopyright (c) 2020 Kenny Lau. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kenny Lau, Eric Wieser\n-/\n@[simp]\ntheorem fst_mk (r : R) (m : M) : fst (r, m) = r :=\n  rfl\n#align fst_mk fst_mk\n\n",
 "fst_list_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵐᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\ntheorem fst_list_prod [Monoid R] [AddMonoid M] [DistribMulAction R M] [DistribMulAction («expr ᵐᵒᵖ» R) M]\n    [SMulCommClass R («expr ᵐᵒᵖ» R) M] (l : List ((exprtsze) R M)) : l.prod.fst = (l.map fst).prod :=\n  map_list_prod (⟨fst, fst_one, fst_mul⟩ : «expr →* » ((exprtsze) R M) R) _\n#align fst_list_prod fst_list_prod\n\n",
 "fst_int_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_int_cast [AddGroupWithOne R] [AddGroup M] (z : ℤ) : (z : (exprtsze) R M).fst = z :=\n  rfl\n#align fst_int_cast fst_int_cast\n\n",
 "fst_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_inr [Zero R] (m : M) : (inr m : (exprtsze) R M).fst = 0 :=\n  rfl\n#align fst_inr fst_inr\n\n",
 "fst_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_inl [Zero M] (r : R) : (inl r : (exprtsze) R M).fst = r :=\n  rfl\n#align fst_inl fst_inl\n\n",
 "fst_comp_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_comp_inr [Zero R] : fst ∘ (inr : M → (exprtsze) R M) = 0 :=\n  rfl\n#align fst_comp_inr fst_comp_inr\n\n",
 "fst_comp_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_comp_inl [Zero M] : fst ∘ (inl : R → (exprtsze) R M) = id :=\n  rfl\n#align fst_comp_inl fst_comp_inl\n\n",
 "fst_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[simp]\ntheorem fst_add [Add R] [Add M] (x₁ x₂ : (exprtsze) R M) : (x₁ + x₂).fst = x₁.fst + x₂.fst :=\n  rfl\n#align fst_add fst_add\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[ext]\ntheorem ext {x y : (exprtsze) R M} (h1 : x.fst = y.fst) (h2 : x.snd = y.snd) : x = y :=\n  Prod.ext h1 h2\n#align ext ext\n\n",
 "algebra_map_eq_inl_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\ntheorem algebra_map_eq_inl_hom : algebraMap R' ((exprtsze) R' M) = inlHom R' M :=\n  rfl\n#align algebra_map_eq_inl_hom algebra_map_eq_inl_hom\n\n",
 "algebra_map_eq_inl'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\ntheorem algebra_map_eq_inl' (s : S) : algebraMap S ((exprtsze) R M) s = inl (algebraMap S R s) :=\n  rfl\n#align algebra_map_eq_inl' algebra_map_eq_inl'\n\n",
 "algebra_map_eq_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n-- shortcut instance for the common case\ntheorem algebra_map_eq_inl : «expr⇑ » (algebraMap R' ((exprtsze) R' M)) = inl :=\n  rfl\n#align algebra_map_eq_inl algebra_map_eq_inl\n\n",
 "alg_hom_ext'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\n@[ext]\ntheorem alg_hom_ext' {A} [Semiring A] [Algebra R' A] ⦃f g : «expr →ₐ[ ] » ((exprtsze) R' M) R' A⦄\n    (h : f.to_linear_map.comp (inrHom R' M) = g.to_linear_map.comp (inrHom R' M)) : f = g :=\n  algHom_ext <| LinearMap.congr_fun h\n#align alg_hom_ext' alg_hom_ext'\n\n",
 "alg_hom_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprtsze -/\ntheorem alg_hom_ext {A} [Semiring A] [Algebra R' A] ⦃f g : «expr →ₐ[ ] » ((exprtsze) R' M) R' A⦄\n    (h : ∀ m, f (inr m) = g (inr m)) : f = g :=\n  AlgHom.toLinearMap_injective <| linearMap_ext (fun r => (f.commutes _).trans (g.commutes _).symm) h\n#align alg_hom_ext alg_hom_ext\n\n"}