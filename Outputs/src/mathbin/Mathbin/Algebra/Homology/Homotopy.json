{"prev_d_zero_cochain_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem prev_d_zero_cochain_complex (f : ∀ i j, «expr ⟶ » (P.X i) (Q.X j)) : prev_d 0 f = 0 :=\n  by\n  dsimp [prev_d]\n  rw [Q.shape, comp_zero]\n  rw [cochain_complex.prev_nat_zero]; dsimp; decide\n#align prev_d_zero_cochain_complex prev_d_zero_cochain_complex\n\n",
 "prev_d_succ_cochain_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem prev_d_succ_cochain_complex (f : ∀ i j, «expr ⟶ » (P.X i) (Q.X j)) (i : ℕ) :\n    prev_d (i + 1) f = «expr ≫ » (f (i + 1) _) (Q.d i (i + 1)) :=\n  by\n  dsimp [prev_d]\n  have : (complex_shape.up ℕ).prev (i + 1) = i := cochain_complex.prev_nat_succ i\n  congr 2\n#align prev_d_succ_cochain_complex prev_d_succ_cochain_complex\n\n",
 "prev_d_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem prev_d_nat (C D : cochain_complex V ℕ) (i : ℕ) (f : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) :\n    prev_d i f = «expr ≫ » (f i (i - 1)) (D.d (i - 1) i) :=\n  by\n  dsimp [prev_d]\n  cases i\n  · simp only [shape, cochain_complex.prev_nat_zero, complex_shape.up_rel, nat.one_ne_zero, not_false_iff, comp_zero]\n  · dsimp only [nat.succ_eq_add_one]\n    have : (complex_shape.up ℕ).prev (i + 1) = i + 1 - 1 :=\n      by\n      rw [cochain_complex.prev_nat_succ]\n      rfl\n    congr 2\n#align prev_d_nat prev_d_nat\n\n",
 "prev_d_eq_to_prev_d_to":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem prev_d_eq_to_prev_d_to (f : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) (j : ι) :\n    prev_d j f = «expr ≫ » (to_prev j f) (D.d_to j) :=\n  rfl\n#align prev_d_eq_to_prev_d_to prev_d_eq_to_prev_d_to\n\n",
 "prev_d_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem prev_d_eq (f : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) {j j' : ι} (w : c.rel j' j) :\n    prev_d j f = «expr ≫ » (f j j') (D.d j' j) :=\n  by\n  obtain rfl := c.prev_eq' w\n  rfl\n#align prev_d_eq prev_d_eq\n\n",
 "prev_d_comp_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem prev_d_comp_right (f : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) (g : «expr ⟶ » D E) (j : ι) :\n    (prev_d j fun i j => «expr ≫ » (f i j) (g.f j)) = «expr ≫ » (prev_d j f) (g.f j) :=\n  by\n  dsimp [prev_d]\n  simp only [category.assoc, g.comm]\n#align prev_d_comp_right prev_d_comp_right\n\n",
 "prev_d_comp_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem prev_d_comp_left (f : «expr ⟶ » C D) (g : ∀ i j, «expr ⟶ » (D.X i) (E.X j)) (j : ι) :\n    (prev_d j fun i j => «expr ≫ » (f.f i) (g i j)) = «expr ≫ » (f.f j) (prev_d j g) :=\n  category.assoc _ _ _\n#align prev_d_comp_left prev_d_comp_left\n\n",
 "prev_d_chain_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem prev_d_chain_complex (f : ∀ i j, «expr ⟶ » (P.X i) (Q.X j)) (j : ℕ) :\n    prev_d j f = «expr ≫ » (f j (j + 1)) (Q.d _ _) :=\n  by\n  dsimp [prev_d]\n  have : (complex_shape.down ℕ).prev j = j + 1 := chain_complex.prev ℕ j\n  congr 2\n#align prev_d_chain_complex prev_d_chain_complex\n\n",
 "null_homotopic_map_f_of_not_rel_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem null_homotopic_map_f_of_not_rel_right {k₁ k₀ : ι} (r₁₀ : c.rel k₁ k₀) (hk₁ : ∀ l : ι, ¬c.rel l k₁)\n    (hom : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) : (null_homotopic_map hom).f k₁ = «expr ≫ » (C.d k₁ k₀) (hom k₀ k₁) :=\n  by\n  dsimp only [null_homotopic_map]\n  rw [d_next_eq hom r₁₀, prev_d, add_monoid_hom.mk'_apply, D.shape, comp_zero, add_zero]\n  exact hk₁ _\n#align null_homotopic_map_f_of_not_rel_right null_homotopic_map_f_of_not_rel_right\n\n",
 "null_homotopic_map_f_of_not_rel_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem null_homotopic_map_f_of_not_rel_left {k₁ k₀ : ι} (r₁₀ : c.rel k₁ k₀) (hk₀ : ∀ l : ι, ¬c.rel k₀ l)\n    (hom : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) : (null_homotopic_map hom).f k₀ = «expr ≫ » (hom k₀ k₁) (D.d k₁ k₀) :=\n  by\n  dsimp only [null_homotopic_map]\n  rw [prev_d_eq hom r₁₀, d_next, add_monoid_hom.mk'_apply, C.shape, zero_comp, zero_add]\n  exact hk₀ _\n#align null_homotopic_map_f_of_not_rel_left null_homotopic_map_f_of_not_rel_left\n\n",
 "null_homotopic_map_f_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem null_homotopic_map_f_eq_zero {k₀ : ι} (hk₀ : ∀ l : ι, ¬c.rel k₀ l) (hk₀' : ∀ l : ι, ¬c.rel l k₀)\n    (hom : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) : (null_homotopic_map hom).f k₀ = 0 :=\n  by\n  dsimp [null_homotopic_map, d_next, prev_d]\n  rw [C.shape, D.shape, zero_comp, comp_zero, add_zero] <;> apply_assumption\n#align null_homotopic_map_f_eq_zero null_homotopic_map_f_eq_zero\n\n",
 "null_homotopic_map_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem null_homotopic_map_f {k₂ k₁ k₀ : ι} (r₂₁ : c.rel k₂ k₁) (r₁₀ : c.rel k₁ k₀)\n    (hom : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) :\n    (null_homotopic_map hom).f k₁ = «expr ≫ » (C.d k₁ k₀) (hom k₀ k₁) + «expr ≫ » (hom k₁ k₂) (D.d k₂ k₁) :=\n  by\n  dsimp only [null_homotopic_map]\n  rw [d_next_eq hom r₁₀, prev_d_eq hom r₂₁]\n#align null_homotopic_map_f null_homotopic_map_f\n\n",
 "null_homotopic_map_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- Compatibility of `null_homotopic_map` with the postcomposition by a morphism\nof complexes. -/\ntheorem null_homotopic_map_comp (hom : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) (g : «expr ⟶ » D E) :\n    «expr ≫ » (null_homotopic_map hom) g = null_homotopic_map fun i j => «expr ≫ » (hom i j) (g.f j) :=\n  by\n  ext n\n  dsimp [null_homotopic_map, from_next, to_prev, add_monoid_hom.mk'_apply]\n  simp only [preadditive.add_comp, category.assoc, g.comm]\n#align null_homotopic_map_comp null_homotopic_map_comp\n\n",
 "null_homotopic_map'_f_of_not_rel_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem null_homotopic_map'_f_of_not_rel_right {k₁ k₀ : ι} (r₁₀ : c.rel k₁ k₀) (hk₁ : ∀ l : ι, ¬c.rel l k₁)\n    (h : ∀ i j, c.rel j i → «expr ⟶ » (C.X i) (D.X j)) :\n    (null_homotopic_map' h).f k₁ = «expr ≫ » (C.d k₁ k₀) (h k₀ k₁ r₁₀) :=\n  by\n  simp only [← null_homotopic_map']\n  rw [null_homotopic_map_f_of_not_rel_right r₁₀ hk₁ fun i j => dite (c.rel j i) (h i j) fun _ => 0]\n  dsimp\n  split_ifs\n  rfl\n#align null_homotopic_map'_f_of_not_rel_right null_homotopic_map'_f_of_not_rel_right\n\n",
 "null_homotopic_map'_f_of_not_rel_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem null_homotopic_map'_f_of_not_rel_left {k₁ k₀ : ι} (r₁₀ : c.rel k₁ k₀) (hk₀ : ∀ l : ι, ¬c.rel k₀ l)\n    (h : ∀ i j, c.rel j i → «expr ⟶ » (C.X i) (D.X j)) :\n    (null_homotopic_map' h).f k₀ = «expr ≫ » (h k₀ k₁ r₁₀) (D.d k₁ k₀) :=\n  by\n  simp only [← null_homotopic_map']\n  rw [null_homotopic_map_f_of_not_rel_left r₁₀ hk₀ fun i j => dite (c.rel j i) (h i j) fun _ => 0]\n  dsimp\n  split_ifs\n  rfl\n#align null_homotopic_map'_f_of_not_rel_left null_homotopic_map'_f_of_not_rel_left\n\n",
 "null_homotopic_map'_f_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem null_homotopic_map'_f_eq_zero {k₀ : ι} (hk₀ : ∀ l : ι, ¬c.rel k₀ l) (hk₀' : ∀ l : ι, ¬c.rel l k₀)\n    (h : ∀ i j, c.rel j i → «expr ⟶ » (C.X i) (D.X j)) : (null_homotopic_map' h).f k₀ = 0 :=\n  by\n  simp only [← null_homotopic_map']\n  exact null_homotopic_map_f_eq_zero hk₀ hk₀' fun i j => dite (c.rel j i) (h i j) fun _ => 0\n#align null_homotopic_map'_f_eq_zero null_homotopic_map'_f_eq_zero\n\n",
 "null_homotopic_map'_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem null_homotopic_map'_f {k₂ k₁ k₀ : ι} (r₂₁ : c.rel k₂ k₁) (r₁₀ : c.rel k₁ k₀)\n    (h : ∀ i j, c.rel j i → «expr ⟶ » (C.X i) (D.X j)) :\n    (null_homotopic_map' h).f k₁ = «expr ≫ » (C.d k₁ k₀) (h k₀ k₁ r₁₀) + «expr ≫ » (h k₁ k₂ r₂₁) (D.d k₂ k₁) :=\n  by\n  simp only [← null_homotopic_map']\n  rw [null_homotopic_map_f r₂₁ r₁₀ fun i j => dite (c.rel j i) (h i j) fun _ => 0]\n  dsimp\n  split_ifs\n  rfl\n#align null_homotopic_map'_f null_homotopic_map'_f\n\n",
 "null_homotopic_map'_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- Compatibility of `null_homotopic_map'` with the postcomposition by a morphism\nof complexes. -/\ntheorem null_homotopic_map'_comp (hom : ∀ i j, c.rel j i → «expr ⟶ » (C.X i) (D.X j)) (g : «expr ⟶ » D E) :\n    «expr ≫ » (null_homotopic_map' hom) g = null_homotopic_map' fun i j hij => «expr ≫ » (hom i j hij) (g.f j) :=\n  by\n  ext n\n  erw [null_homotopic_map_comp]\n  congr\n  ext (i j)\n  split_ifs\n  · rfl\n  · rw [zero_comp]\n#align null_homotopic_map'_comp null_homotopic_map'_comp\n\n",
 "mk_inductive_aux₃":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem mk_inductive_aux₃ (i j : ℕ) (h : i + 1 = j) :\n    «expr ≫ » (mk_inductive_aux₂ e zero comm_zero one comm_one succ i).2.1 (Q.X_prev_iso h).hom =\n      «expr ≫ » (P.X_next_iso h).inv (mk_inductive_aux₂ e zero comm_zero one comm_one succ j).1 :=\n  by\n  subst j <;> rcases i with (_ | _ | i) <;>\n    · dsimp\n      simp\n#align mk_inductive_aux₃ mk_inductive_aux₃\n\n",
 "mk_coinductive_aux₃":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem mk_coinductive_aux₃ (i j : ℕ) (h : i + 1 = j) :\n    «expr ≫ » (P.X_next_iso h).inv (mk_coinductive_aux₂ e zero comm_zero one comm_one succ i).2.1 =\n      «expr ≫ » (mk_coinductive_aux₂ e zero comm_zero one comm_one succ j).1 (Q.X_prev_iso h).hom :=\n  by\n  subst j <;> rcases i with (_ | _ | i) <;>\n    · dsimp\n      simp\n#align mk_coinductive_aux₃ mk_coinductive_aux₃\n\n",
 "map_null_homotopic_map'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-- Compatibility of `null_homotopic_map'` with the application of additive functors -/\ntheorem map_null_homotopic_map' {W : Type _} [Category W] [preadditive W] (G : «expr ⥤ » V W) [G.additive]\n    (hom : ∀ i j, c.rel j i → «expr ⟶ » (C.X i) (D.X j)) :\n    (G.map_homological_complex c).map (null_homotopic_map' hom) =\n      null_homotopic_map' fun i j hij => G.map (hom i j hij) :=\n  by\n  ext n\n  erw [map_null_homotopic_map]\n  congr\n  ext (i j)\n  split_ifs\n  · rfl\n  · rw [G.map_zero]\n#align map_null_homotopic_map' map_null_homotopic_map'\n\n",
 "map_null_homotopic_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-- Compatibility of `null_homotopic_map` with the application of additive functors -/\ntheorem map_null_homotopic_map {W : Type _} [Category W] [preadditive W] (G : «expr ⥤ » V W) [G.additive]\n    (hom : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) :\n    (G.map_homological_complex c).map (null_homotopic_map hom) = null_homotopic_map fun i j => G.map (hom i j) :=\n  by\n  ext i\n  dsimp [null_homotopic_map, d_next, prev_d]\n  simp only [G.map_comp, functor.map_add]\n#align map_null_homotopic_map map_null_homotopic_map\n\n",
 "homology_map_eq_of_homotopy":
 "/-- Homotopic maps induce the same map on homology.\n-/\ntheorem homology_map_eq_of_homotopy (h : homotopy f g) (i : ι) :\n    (homology_functor V c i).map f = (homology_functor V c i).map g :=\n  by\n  dsimp [homology_functor]\n  apply eq_of_sub_eq_zero\n  ext\n  simp only [homology.π_map, comp_zero, preadditive.comp_sub]\n  dsimp [kernel_subobject_map]\n  simp_rw [h.comm i]\n  simp only [zero_add, zero_comp, d_next_eq_d_from_from_next, kernel_subobject_arrow_comp_assoc, preadditive.comp_add]\n  rw [← preadditive.sub_comp]\n  simp only [category_theory.subobject.factor_thru_add_sub_factor_thru_right]\n  erw [subobject.factor_thru_of_le (D.boundaries_le_cycles i)]\n  · simp\n  · rw [prev_d_eq_to_prev_d_to, ← category.assoc]\n    apply image_subobject_factors_comp_self\n#align homology_map_eq_of_homotopy homology_map_eq_of_homotopy\n\n",
 "d_next_zero_chain_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem d_next_zero_chain_complex (f : ∀ i j, «expr ⟶ » (P.X i) (Q.X j)) : d_next 0 f = 0 :=\n  by\n  dsimp [d_next]\n  rw [P.shape, zero_comp]\n  rw [chain_complex.next_nat_zero]; dsimp; decide\n#align d_next_zero_chain_complex d_next_zero_chain_complex\n\n",
 "d_next_succ_chain_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem d_next_succ_chain_complex (f : ∀ i j, «expr ⟶ » (P.X i) (Q.X j)) (i : ℕ) :\n    d_next (i + 1) f = «expr ≫ » (P.d _ _) (f i (i + 1)) :=\n  by\n  dsimp [d_next]\n  have : (complex_shape.down ℕ).next (i + 1) = i := chain_complex.next_nat_succ _\n  congr 2\n#align d_next_succ_chain_complex d_next_succ_chain_complex\n\n",
 "d_next_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem d_next_nat (C D : chain_complex V ℕ) (i : ℕ) (f : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) :\n    d_next i f = «expr ≫ » (C.d i (i - 1)) (f (i - 1) i) :=\n  by\n  dsimp [d_next]\n  cases i\n  · simp only [shape, chain_complex.next_nat_zero, complex_shape.down_rel, nat.one_ne_zero, not_false_iff, zero_comp]\n  · dsimp only [nat.succ_eq_add_one]\n    have : (complex_shape.down ℕ).next (i + 1) = i + 1 - 1 :=\n      by\n      rw [chain_complex.next_nat_succ]\n      rfl\n    congr 2\n#align d_next_nat d_next_nat\n\n",
 "d_next_eq_d_from_from_next":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2021 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n@[simp]\ntheorem d_next_eq_d_from_from_next (f : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) (i : ι) :\n    d_next i f = «expr ≫ » (C.d_from i) (from_next i f) :=\n  rfl\n#align d_next_eq_d_from_from_next d_next_eq_d_from_from_next\n\n",
 "d_next_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem d_next_eq (f : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) {i i' : ι} (w : c.rel i i') :\n    d_next i f = «expr ≫ » (C.d i i') (f i' i) :=\n  by\n  obtain rfl := c.next_eq' w\n  rfl\n#align d_next_eq d_next_eq\n\n",
 "d_next_comp_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem d_next_comp_right (f : ∀ i j, «expr ⟶ » (C.X i) (D.X j)) (g : «expr ⟶ » D E) (i : ι) :\n    (d_next i fun i j => «expr ≫ » (f i j) (g.f j)) = «expr ≫ » (d_next i f) (g.f i) :=\n  (category.assoc _ _ _).symm\n#align d_next_comp_right d_next_comp_right\n\n",
 "d_next_comp_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem d_next_comp_left (f : «expr ⟶ » C D) (g : ∀ i j, «expr ⟶ » (D.X i) (E.X j)) (i : ι) :\n    (d_next i fun i j => «expr ≫ » (f.f i) (g i j)) = «expr ≫ » (f.f i) (d_next i g) :=\n  (f.comm_assoc _ _ _).symm\n#align d_next_comp_left d_next_comp_left\n\n",
 "d_next_cochain_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem d_next_cochain_complex (f : ∀ i j, «expr ⟶ » (P.X i) (Q.X j)) (j : ℕ) :\n    d_next j f = «expr ≫ » (P.d _ _) (f (j + 1) j) :=\n  by\n  dsimp [d_next]\n  have : (complex_shape.up ℕ).next j = j + 1 := cochain_complex.next ℕ j\n  congr 2\n#align d_next_cochain_complex d_next_cochain_complex\n\n",
 "comp_null_homotopic_map'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- Compatibility of `null_homotopic_map'` with the precomposition by a morphism\nof complexes. -/\ntheorem comp_null_homotopic_map' (f : «expr ⟶ » C D) (hom : ∀ i j, c.rel j i → «expr ⟶ » (D.X i) (E.X j)) :\n    «expr ≫ » f (null_homotopic_map' hom) = null_homotopic_map' fun i j hij => «expr ≫ » (f.f i) (hom i j hij) :=\n  by\n  ext n\n  erw [comp_null_homotopic_map]\n  congr\n  ext (i j)\n  split_ifs\n  · rfl\n  · rw [comp_zero]\n#align comp_null_homotopic_map' comp_null_homotopic_map'\n\n",
 "comp_null_homotopic_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- Compatibility of `null_homotopic_map` with the precomposition by a morphism\nof complexes. -/\ntheorem comp_null_homotopic_map (f : «expr ⟶ » C D) (hom : ∀ i j, «expr ⟶ » (D.X i) (E.X j)) :\n    «expr ≫ » f (null_homotopic_map hom) = null_homotopic_map fun i j => «expr ≫ » (f.f i) (hom i j) :=\n  by\n  ext n\n  dsimp [null_homotopic_map, from_next, to_prev, add_monoid_hom.mk'_apply]\n  simp only [preadditive.comp_add, category.assoc, f.comm_assoc]\n#align comp_null_homotopic_map comp_null_homotopic_map\n\n"}