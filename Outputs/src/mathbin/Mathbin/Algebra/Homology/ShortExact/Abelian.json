{"is_iso_of_short_exact_of_is_iso_of_is_iso":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2021 Johan Commelin. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johan Commelin, Andrew Yang, Pierre-Alexandre Bazin\n-/\ntheorem is_iso_of_short_exact_of_is_iso_of_is_iso (h : short_exact f g) (h' : short_exact f' g') (i₁ : «expr ⟶ » A A')\n    (i₂ : «expr ⟶ » B B') (i₃ : «expr ⟶ » C C') (comm₁ : «expr ≫ » i₁ f' = «expr ≫ » f i₂)\n    (comm₂ : «expr ≫ » i₂ g' = «expr ≫ » g i₃) [IsIso i₁] [IsIso i₃] : IsIso i₂ :=\n  by\n  obtain ⟨_⟩ := h\n  obtain ⟨_⟩ := h'\n  skip\n  refine'\n            @abelian.is_iso_of_is_iso_of_is_iso_of_is_iso_of_is_iso 𝒜 _ _ 0 _ _ _ 0 _ _ _ 0 f g 0 f' g' 0 i₁ i₂ i₃ _\n              comm₁ comm₂ 0 0 0 0 0 _ _ _ _ _ _ _ _ _ _ _ <;>\n          try simp <;>\n        try apply exact_zero_left_of_mono <;>\n      try assumption <;>\n    rwa [← epi_iff_exact_zero_right]\n#align is_iso_of_short_exact_of_is_iso_of_is_iso is_iso_of_short_exact_of_is_iso_of_is_iso\n\n"}