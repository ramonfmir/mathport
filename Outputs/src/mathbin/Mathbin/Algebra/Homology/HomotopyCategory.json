{"quotient_obj_as":
 "/-\nCopyright (c) 2021 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n-- TODO the homotopy_category is preadditive\n-- TODO upgrade this to `has_zero_object`, presumably for any `quotient`.\n@[simp]\ntheorem quotient_obj_as (C : HomologicalComplex V c) : ((quotient V c).obj C).as = C :=\n  rfl\n#align quotient_obj_as quotient_obj_as\n\n",
 "quotient_map_out_comp_out":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem quotient_map_out_comp_out {C D E : HomotopyCategory V c} (f : «expr ⟶ » C D) (g : «expr ⟶ » D E) :\n    (quotient V c).map («expr ≫ » (Quot.out f) (Quot.out g)) = «expr ≫ » f g := by\n  conv_rhs => erw [← quotient_map_out f, ← quotient_map_out g, ← (quotient V c).map_comp]\n#align quotient_map_out_comp_out quotient_map_out_comp_out\n\n",
 "quotient_map_out":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem quotient_map_out {C D : HomotopyCategory V c} (f : «expr ⟶ » C D) : (quotient V c).map f.out = f :=\n  Quot.out_eq _\n#align quotient_map_out quotient_map_out\n\n",
 "map_homotopy_category_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n-- TODO `F.map_homotopy_category c` is additive (and linear when `F` is linear).\n@[simp]\ntheorem nat_trans.map_homotopy_category_id (c : ComplexShape ι) (F : «expr ⥤ » V W) [F.additive] :\n    NatTrans.mapHomotopyCategory ((«expr𝟙») F) c = («expr𝟙») (F.map_homotopy_category c) := by tidy\n#align nat_trans.map_homotopy_category_id nat_trans.map_homotopy_category_id\n\n",
 "map_homotopy_category_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem nat_trans.map_homotopy_category_comp (c : ComplexShape ι) {F G H : «expr ⥤ » V W} [F.additive] [G.additive]\n    [H.additive] (α : «expr ⟶ » F G) (β : «expr ⟶ » G H) :\n    NatTrans.mapHomotopyCategory («expr ≫ » α β) c =\n      «expr ≫ » (NatTrans.mapHomotopyCategory α c) (NatTrans.mapHomotopyCategory β c) :=\n  by tidy\n#align nat_trans.map_homotopy_category_comp nat_trans.map_homotopy_category_comp\n\n",
 "homology_functor_map_factors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem homology_functor_map_factors (i : ι) {C D : HomologicalComplex V c} (f : «expr ⟶ » C D) :\n    (homologyFunctor V c i).map f = ((homologyFunctor V c i).map ((quotient V c).map f) : _) :=\n  (CategoryTheory.Quotient.lift_map_functor_map _ (homologyFunctor V c i) _ f).symm\n#align homology_functor_map_factors homology_functor_map_factors\n\n",
 "homology_factors_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem homology_factors_inv_app (i : ι) (C : HomologicalComplex V c) :\n    (homologyFactors V c i).inv.app C = («expr𝟙») _ :=\n  rfl\n#align homology_factors_inv_app homology_factors_inv_app\n\n",
 "homology_factors_hom_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem homology_factors_hom_app (i : ι) (C : HomologicalComplex V c) :\n    (homologyFactors V c i).hom.app C = («expr𝟙») _ :=\n  rfl\n#align homology_factors_hom_app homology_factors_hom_app\n\n",
 "eq_of_homotopy":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem eq_of_homotopy {C D : HomologicalComplex V c} (f g : «expr ⟶ » C D) (h : Homotopy f g) :\n    (quotient V c).map f = (quotient V c).map g :=\n  CategoryTheory.Quotient.sound _ ⟨h⟩\n#align eq_of_homotopy eq_of_homotopy\n\n"}