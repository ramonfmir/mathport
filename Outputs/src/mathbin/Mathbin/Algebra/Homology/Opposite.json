{"image_to_kernel_unop":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\ntheorem image_to_kernel_unop {X Y Z : «expr ᵒᵖ» V} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) (w : «expr ≫ » f g = 0) :\n    imageToKernel g.unop f.unop (by rw [← unop_comp, w, unop_zero]) =\n      «expr ≫ » («expr ≪≫ » (imageSubobjectIso _) (imageUnopUnop _).symm).hom\n        («expr ≫ »\n          (cokernel.desc f (factorThruImage g)\n              (by rw [← cancel_mono (image.ι g), category.assoc, image.fac, w, zero_comp])).unop\n          («expr ≪≫ » (kernelSubobjectIso _) (kernelUnopUnop _)).inv) :=\n  by\n  ext\n  dsimp only [image_unop_unop]\n  simp only [iso.trans_hom, iso.symm_hom, iso.trans_inv, kernel_unop_unop_inv, category.assoc, imageToKernel_arrow,\n    kernel_subobject_arrow', kernel.lift_ι, cokernel.π_desc, iso.unop_inv, ← unop_comp,\n    factor_thru_image_comp_image_unop_op_inv, Quiver.Hom.unop_op, image_subobject_arrow]\n#align image_to_kernel_unop image_to_kernel_unop\n\n",
 "image_to_kernel_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/-\nCopyright (c) 2022 Amelia Livingston. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johan Commelin, Amelia Livingston\n-/\ntheorem image_to_kernel_op {X Y Z : V} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) (w : «expr ≫ » f g = 0) :\n    imageToKernel g.op f.op (by rw [← op_comp, w, op_zero]) =\n      «expr ≫ » («expr ≪≫ » (imageSubobjectIso _) (imageOpOp _).symm).hom\n        («expr ≫ »\n          (cokernel.desc f (factorThruImage g)\n              (by rw [← cancel_mono (image.ι g), category.assoc, image.fac, w, zero_comp])).op\n          («expr ≪≫ » (kernelSubobjectIso _) (kernelOpOp _)).inv) :=\n  by\n  ext\n  simpa only [iso.trans_hom, iso.symm_hom, iso.trans_inv, kernel_op_op_inv, category.assoc, imageToKernel_arrow,\n    kernel_subobject_arrow', kernel.lift_ι, ← op_comp, cokernel.π_desc, ← image_subobject_arrow, ←\n    image_unop_op_inv_comp_op_factor_thru_image g.op]\n#align image_to_kernel_op image_to_kernel_op\n\n"}