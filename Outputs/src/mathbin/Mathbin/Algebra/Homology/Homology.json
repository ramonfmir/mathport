{"image_to_kernel_as_boundaries_to_cycles":
 "/-- Prefer `boundaries_to_cycles`. -/\n@[simp]\ntheorem image_to_kernel_as_boundaries_to_cycles (C : HomologicalComplex V c) (i : ι) (h) :\n    (C.boundaries i).of_le (C.cycles i) h = C.boundaries_to_cycles i :=\n  rfl\n#align image_to_kernel_as_boundaries_to_cycles image_to_kernel_as_boundaries_to_cycles\n\n",
 "cycles_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem cycles_eq_top {i} (h : ¬c.rel i (c.next i)) : C.cycles i = «expr⊤» :=\n  by\n  rw [eq_top_iff]\n  apply le_kernel_subobject\n  rw [C.d_from_eq_zero h, comp_zero]\n#align cycles_eq_top cycles_eq_top\n\n",
 "cycles_eq_kernel_subobject":
 "/-\nCopyright (c) 2021 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\ntheorem cycles_eq_kernel_subobject {i j : ι} (r : c.rel i j) : C.cycles i = kernelSubobject (C.d i j) :=\n  C.kernel_from_eq_kernel r\n#align cycles_eq_kernel_subobject cycles_eq_kernel_subobject\n\n",
 "cyclesMap_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n#print cyclesMap_id /-\n@[simp]\ntheorem cyclesMap_id (i : ι) : cyclesMap ((«expr𝟙») C₁) i = («expr𝟙») _ :=\n  by\n  dsimp only [cyclesMap]\n  simp\n#align cycles_map_id cyclesMap_id\n-/\n\n",
 "cyclesMap_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n#print cyclesMap_comp /-\n@[simp]\ntheorem cyclesMap_comp (f : «expr ⟶ » C₁ C₂) (g : «expr ⟶ » C₂ C₃) (i : ι) :\n    cyclesMap («expr ≫ » f g) i = «expr ≫ » (cyclesMap f i) (cyclesMap g i) :=\n  by\n  dsimp only [cyclesMap]\n  simp [subobject.factor_thru_right]\n#align cycles_map_comp cyclesMap_comp\n-/\n\n",
 "cyclesMap_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n#print cyclesMap_arrow /-\n@[simp, reassoc.1, elementwise]\ntheorem cyclesMap_arrow (f : «expr ⟶ » C₁ C₂) (i : ι) :\n    «expr ≫ » (cyclesMap f i) (C₂.cycles i).arrow = «expr ≫ » (C₁.cycles i).arrow (f.f i) := by simp\n#align cycles_map_arrow cyclesMap_arrow\n-/\n\n",
 "boundaries_le_cycles":
 "theorem boundaries_le_cycles (C : HomologicalComplex V c) (i : ι) : C.boundaries i ≤ C.cycles i :=\n  image_le_kernel _ _ (C.d_to_comp_d_from i)\n#align boundaries_le_cycles boundaries_le_cycles\n\n",
 "boundaries_eq_image_subobject":
 "theorem boundaries_eq_image_subobject [HasEqualizers V] {i j : ι} (r : c.rel i j) :\n    C.boundaries j = imageSubobject (C.d i j) :=\n  C.image_to_eq_image r\n#align boundaries_eq_image_subobject boundaries_eq_image_subobject\n\n",
 "boundaries_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem boundaries_eq_bot [HasZeroObject V] {j} (h : ¬c.rel (c.prev j) j) : C.boundaries j = «expr⊥» :=\n  by\n  rw [eq_bot_iff]\n  refine' image_subobject_le _ 0 _\n  rw [C.d_to_eq_zero h, zero_comp]\n#align boundaries_eq_bot boundaries_eq_bot\n\n",
 "boundariesToCycles_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n#print boundariesToCycles_naturality /-\n@[simp, reassoc.1]\ntheorem boundariesToCycles_naturality (i : ι) :\n    «expr ≫ » (boundariesMap f i) (C₂.boundaries_to_cycles i) = «expr ≫ » (C₁.boundaries_to_cycles i) (cyclesMap f i) :=\n  by\n  ext\n  simp\n#align boundaries_to_cycles_naturality boundariesToCycles_naturality\n-/\n\n"}