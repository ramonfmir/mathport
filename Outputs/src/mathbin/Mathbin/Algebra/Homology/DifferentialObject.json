{"eq_to_hom_f'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem eq_to_hom_f' {X Y : differential_object (graded_object_with_shift b V)} (f : «expr ⟶ » X Y) {x y : β}\n    (h : x = y) : «expr ≫ » (X.X_eq_to_hom h) (f.f y) = «expr ≫ » (f.f x) (Y.X_eq_to_hom h) :=\n  by\n  cases h\n  simp\n#align eq_to_hom_f' eq_to_hom_f'\n\n",
 "eq_to_hom_d":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem eq_to_hom_d (X : differential_object (graded_object_with_shift b V)) {x y : β} (h : x = y) :\n    «expr ≫ » (X.X_eq_to_hom h) (X.d y) =\n      «expr ≫ » (X.d x)\n        (X.X_eq_to_hom\n          (by\n            cases h\n            rfl)) :=\n  by\n  cases h\n  dsimp\n  simp\n#align eq_to_hom_d eq_to_hom_d\n\n",
 "d_eq_to_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem d_eq_to_hom (X : homological_complex V (complex_shape.up' b)) {x y z : β} (h : y = z) :\n    «expr ≫ » (X.d x y) (eq_to_hom (congr_arg X.X h)) = X.d x z :=\n  by\n  cases h\n  simp\n#align d_eq_to_hom d_eq_to_hom\n\n",
 "X_eq_to_hom_refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-\nCopyright (c) 2021 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n@[simp]\ntheorem _root_.category_theory.differential_object.X_eq_to_hom_refl\n    (X : differential_object (graded_object_with_shift b V)) (i : β) : X.X_eq_to_hom (refl i) = («expr𝟙») _ :=\n  rfl\n#align category_theory.differential_object.X_eq_to_hom_refl category_theory.differential_object.X_eq_to_hom_refl\n\n"}