{"top_to_add_submonoid":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem top_to_add_submonoid : («expr⊤» : Submodule R M).to_add_submonoid = «expr⊤» :=\n  rfl\n#align top_to_add_submonoid top_to_add_submonoid\n\n",
 "top_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem top_coe : ((«expr⊤» : Submodule R M) : Set M) = Set.univ :=\n  rfl\n#align top_coe top_coe\n\n",
 "toNatSubmodule_toAddSubmonoid":
 "#print AddSubmonoid.toNatSubmodule_toAddSubmonoid /-\n@[simp]\ntheorem AddSubmonoid.toNatSubmodule_toAddSubmonoid (S : AddSubmonoid M) : S.to_nat_submodule.to_add_submonoid = S :=\n  AddSubmonoid.toNatSubmodule.symm_apply_apply S\n#align add_submonoid.to_nat_submodule_to_add_submonoid AddSubmonoid.toNatSubmodule_toAddSubmonoid\n-/\n\n",
 "toNatSubmodule_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n#print AddSubmonoid.toNatSubmodule_symm /-\n@[simp]\ntheorem AddSubmonoid.toNatSubmodule_symm :\n    «expr⇑ » (AddSubmonoid.toNatSubmodule.symm : «expr ≃o » _ (AddSubmonoid M)) = Submodule.toAddSubmonoid :=\n  rfl\n#align add_submonoid.to_nat_submodule_symm AddSubmonoid.toNatSubmodule_symm\n-/\n\n",
 "toIntSubmodule_toAddSubgroup":
 "#print AddSubgroup.toIntSubmodule_toAddSubgroup /-\n@[simp]\ntheorem AddSubgroup.toIntSubmodule_toAddSubgroup (S : AddSubgroup M) : S.to_int_submodule.to_add_subgroup = S :=\n  AddSubgroup.toIntSubmodule.symm_apply_apply S\n#align add_subgroup.to_int_submodule_to_add_subgroup AddSubgroup.toIntSubmodule_toAddSubgroup\n-/\n\n",
 "toIntSubmodule_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃o » -/\n#print AddSubgroup.toIntSubmodule_symm /-\n@[simp]\ntheorem AddSubgroup.toIntSubmodule_symm :\n    «expr⇑ » (AddSubgroup.toIntSubmodule.symm : «expr ≃o » _ (AddSubgroup M)) = Submodule.toAddSubgroup :=\n  rfl\n#align add_subgroup.to_int_submodule_symm AddSubgroup.toIntSubmodule_symm\n-/\n\n",
 "toAddSubmonoid_toNatSubmodule":
 "#print Submodule.toAddSubmonoid_toNatSubmodule /-\n@[simp]\ntheorem Submodule.toAddSubmonoid_toNatSubmodule (S : Submodule ℕ M) : S.to_add_submonoid.to_nat_submodule = S :=\n  AddSubmonoid.toNatSubmodule.apply_symm_apply S\n#align submodule.to_add_submonoid_to_nat_submodule Submodule.toAddSubmonoid_toNatSubmodule\n-/\n\n",
 "toAddSubgroup_toIntSubmodule":
 "#print Submodule.toAddSubgroup_toIntSubmodule /-\n@[simp]\ntheorem Submodule.toAddSubgroup_toIntSubmodule (S : Submodule ℤ M) : S.to_add_subgroup.to_int_submodule = S :=\n  AddSubgroup.toIntSubmodule.apply_symm_apply S\n#align submodule.to_add_subgroup_to_int_submodule Submodule.toAddSubgroup_toIntSubmodule\n-/\n\n",
 "sum_mem_supr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem sum_mem_supr {ι : Type _} [Fintype ι] {f : ι → M} {p : ι → Submodule R M} (h : ∀ i, f i ∈ p i) :\n    finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\" (f i) ∈\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (p i) :=\n  sum_mem fun i hi => mem_supᵢ_of_mem i (h i)\n#align sum_mem_supr sum_mem_supr\n\n",
 "sum_mem_bsupr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem sum_mem_bsupr {ι : Type _} {s : Finset ι} {f : ι → M} {p : ι → Submodule R M} (h : ∀ i ∈ s, f i ∈ p i) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i) ∈\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (p i) :=\n  sum_mem fun i hi => mem_supᵢ_of_mem i <| mem_supᵢ_of_mem hi (h i hi)\n#align sum_mem_bsupr sum_mem_bsupr\n\n",
 "sub_mem_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem sub_mem_sup {R' M' : Type _} [Ring R'] [AddCommGroup M'] [Module R' M'] {S T : Submodule R' M'} {s t : M'}\n    (hs : s ∈ S) (ht : t ∈ T) : s - t ∈ «expr ⊔ » S T :=\n  by\n  rw [sub_eq_add_neg]\n  exact add_mem_sup hs (neg_mem ht)\n#align sub_mem_sup sub_mem_sup\n\n",
 "restrict_scalars_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem restrict_scalars_top : restrictScalars S («expr⊤» : Submodule R M) = «expr⊤» :=\n  rfl\n#align restrict_scalars_top restrict_scalars_top\n\n",
 "restrict_scalars_eq_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem restrict_scalars_eq_top_iff {p : Submodule R M} : restrictScalars S p = «expr⊤» ↔ p = «expr⊤» := by\n  simp [SetLike.ext_iff]\n#align restrict_scalars_eq_top_iff restrict_scalars_eq_top_iff\n\n",
 "restrict_scalars_eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem restrict_scalars_eq_bot_iff {p : Submodule R M} : restrictScalars S p = «expr⊥» ↔ p = «expr⊥» := by\n  simp [SetLike.ext_iff]\n#align restrict_scalars_eq_bot_iff restrict_scalars_eq_bot_iff\n\n",
 "restrict_scalars_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem restrict_scalars_bot : restrictScalars S («expr⊥» : Submodule R M) = «expr⊥» :=\n  rfl\n#align restrict_scalars_bot restrict_scalars_bot\n\n",
 "nonzero_mem_of_bot_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem nonzero_mem_of_bot_lt {p : Submodule R M} (bot_lt : «expr⊥» < p) : ∃ a : p, a ≠ 0 :=\n  let ⟨b, hb₁, hb₂⟩ := p.ne_bot_iff.mp bot_lt.ne'\n  ⟨⟨b, hb₁⟩, hb₂ ∘ congr_arg coe⟩\n#align nonzero_mem_of_bot_lt nonzero_mem_of_bot_lt\n\n",
 "ne_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\nprotected theorem ne_bot_iff (p : Submodule R M) : p ≠ «expr⊥» ↔ ∃ x ∈ p, x ≠ (0 : M) :=\n  by\n  haveI := classical.prop_decidable\n  simp_rw [ne.def, p.eq_bot_iff, not_forall]\n#align ne_bot_iff ne_bot_iff\n\n",
 "mem_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem mem_top {x : M} : x ∈ («expr⊤» : Submodule R M) :=\n  trivial\n#align mem_top mem_top\n\n",
 "mem_supr_of_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem mem_supr_of_mem {ι : Sort _} {b : M} {p : ι → Submodule R M} (i : ι) (h : b ∈ p i) :\n    b ∈ «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (p i) :=\n  have : p i ≤ «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (p i) :=\n    le_supᵢ p i\n  @this b h\n#align mem_supr_of_mem mem_supr_of_mem\n\n",
 "mem_sup_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem mem_sup_right {S T : Submodule R M} : ∀ {x : M}, x ∈ T → x ∈ «expr ⊔ » S T :=\n  show T ≤ «expr ⊔ » S T from le_sup_right\n#align mem_sup_right mem_sup_right\n\n",
 "mem_sup_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem mem_sup_left {S T : Submodule R M} : ∀ {x : M}, x ∈ S → x ∈ «expr ⊔ » S T :=\n  show S ≤ «expr ⊔ » S T from le_sup_left\n#align mem_sup_left mem_sup_left\n\n",
 "mem_infi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n@[simp]\ntheorem mem_infi {ι} (p : ι → Submodule R M) {x} :\n    x ∈ «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (p i) ↔\n      ∀ i, x ∈ p i :=\n  by rw [← SetLike.mem_coe, infi_coe, Set.mem_interᵢ] <;> rfl\n#align mem_infi mem_infi\n\n",
 "mem_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem mem_inf {p q : Submodule R M} {x : M} : x ∈ «expr ⊓ » p q ↔ x ∈ p ∧ x ∈ q :=\n  iff.rfl\n#align mem_inf mem_inf\n\n",
 "mem_finset_inf":
 "@[simp]\ntheorem mem_finset_inf {ι} {s : Finset ι} {p : ι → Submodule R M} {x : M} : x ∈ s.inf p ↔ ∀ i ∈ s, x ∈ p i := by\n  simp only [← SetLike.mem_coe, finset_inf_coe, Set.mem_interᵢ]\n#align mem_finset_inf mem_finset_inf\n\n",
 "mem_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem mem_bot {x : M} : x ∈ («expr⊥» : Submodule R M) ↔ x = 0 :=\n  Set.mem_singleton_iff\n#align mem_bot mem_bot\n\n",
 "mem_Sup_of_mem":
 "theorem mem_Sup_of_mem {S : Set (Submodule R M)} {s : Submodule R M} (hs : s ∈ S) : ∀ {x : M}, x ∈ s → x ∈ supₛ S :=\n  show s ≤ supₛ S from le_supₛ hs\n#align mem_Sup_of_mem mem_Sup_of_mem\n\n",
 "mem_Inf":
 "@[simp]\ntheorem mem_Inf {S : Set (Submodule R M)} {x : M} : x ∈ infₛ S ↔ ∀ p ∈ S, x ∈ p :=\n  Set.mem_interᵢ₂\n#align mem_Inf mem_Inf\n\n",
 "le_Inf'":
 "private theorem le_Inf' {S : Set (Submodule R M)} {p} : (∀ q ∈ S, p ≤ q) → p ≤ infₛ S :=\n  Set.subset_interᵢ₂\n#align le_Inf' le_Inf'\n\n",
 "infi_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n@[simp]\ntheorem infi_coe {ι} (p : ι → Submodule R M) :\n    (↑(«expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (p i)) : Set M) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" ↑(p i) :=\n  by rw [infᵢ, Inf_coe] <;> ext a <;> simp <;> exact ⟨fun h i => h _ i rfl, fun h i x e => e ▸ h _⟩\n#align infi_coe infi_coe\n\n",
 "inf_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem inf_coe : ↑(«expr ⊓ » p q) = (p ∩ q : Set M) :=\n  rfl\n#align inf_coe inf_coe\n\n",
 "finset_inf_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n@[simp]\ntheorem finset_inf_coe {ι} (s : Finset ι) (p : ι → Submodule R M) :\n    (↑(s.inf p) : Set M) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" ↑(p i) :=\n  by\n  letI := Classical.decEq ι\n  refine' s.induction_on _ fun i s hi ih => _\n  · simp\n  · rw [Finset.inf_insert, inf_coe, ih]\n    simp\n#align finset_inf_coe finset_inf_coe\n\n",
 "exists_mem_ne_zero_of_ne_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem exists_mem_ne_zero_of_ne_bot {p : Submodule R M} (h : p ≠ «expr⊥») : ∃ b : M, b ∈ p ∧ b ≠ 0 :=\n  let ⟨b, hb₁, hb₂⟩ := p.ne_bot_iff.mp h\n  ⟨b, hb₁, hb₂⟩\n#align exists_mem_ne_zero_of_ne_bot exists_mem_ne_zero_of_ne_bot\n\n",
 "eq_zero_of_coe_mem_of_disjoint":
 "theorem eq_zero_of_coe_mem_of_disjoint (hpq : Disjoint p q) {a : p} (ha : (a : M) ∈ q) : a = 0 := by\n  exact_mod_cast disjoint_def.mp hpq a (coe_mem a) ha\n#align eq_zero_of_coe_mem_of_disjoint eq_zero_of_coe_mem_of_disjoint\n\n",
 "eq_top_iff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem eq_top_iff' {p : Submodule R M} : p = «expr⊤» ↔ ∀ x, x ∈ p :=\n  eq_top_iff.trans ⟨fun h x => h trivial, fun h x _ => h x⟩\n#align eq_top_iff' eq_top_iff'\n\n",
 "eq_bot_of_subsingleton":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem eq_bot_of_subsingleton (p : Submodule R M) [subsingleton p] : p = «expr⊥» :=\n  by\n  rw [eq_bot_iff]\n  intro v hv\n  exact congr_arg coe (subsingleton.elim (⟨v, hv⟩ : p) 0)\n#align eq_bot_of_subsingleton eq_bot_of_subsingleton\n\n",
 "eq_bot_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n#print eq_bot_iff /-\nprotected theorem eq_bot_iff (p : Submodule R M) : p = «expr⊥» ↔ ∀ x ∈ p, x = (0 : M) :=\n  ⟨fun h => h.symm ▸ fun x hx => (mem_bot R).mp hx, fun h => eq_bot_iff.mpr fun x hx => (mem_bot R).mpr (h x hx)⟩\n#align eq_bot_iff eq_bot_iff\n-/\n\n",
 "disjoint_def'":
 "theorem disjoint_def' {p p' : Submodule R M} : Disjoint p p' ↔ ∀ x ∈ p, ∀ y ∈ p', x = y → x = (0 : M) :=\n  disjoint_def.trans ⟨fun h x hx y hy hxy => h x hx <| hxy.symm ▸ hy, fun h x hx hx' => h _ hx x hx' rfl⟩\n#align disjoint_def' disjoint_def'\n\n",
 "disjoint_def":
 "theorem disjoint_def {p p' : Submodule R M} : Disjoint p p' ↔ ∀ x ∈ p, x ∈ p' → x = (0 : M) :=\n  disjoint_iff_inf_le.trans <| show (∀ x, x ∈ p ∧ x ∈ p' → x ∈ ({0} : Set M)) ↔ _ by simp\n#align disjoint_def disjoint_def\n\n",
 "coe_toNatSubmodule":
 "#print AddSubmonoid.coe_toNatSubmodule /-\n@[simp]\ntheorem AddSubmonoid.coe_toNatSubmodule (S : AddSubmonoid M) : (S.to_nat_submodule : Set M) = S :=\n  rfl\n#align add_submonoid.coe_to_nat_submodule AddSubmonoid.coe_toNatSubmodule\n-/\n\n",
 "coe_toIntSubmodule":
 "#print AddSubgroup.coe_toIntSubmodule /-\n@[simp]\ntheorem AddSubgroup.coe_toIntSubmodule (S : AddSubgroup M) : (S.to_int_submodule : Set M) = S :=\n  rfl\n#align add_subgroup.coe_to_int_submodule AddSubgroup.coe_toIntSubmodule\n-/\n\n",
 "bot_to_add_submonoid":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot_to_add_submonoid : («expr⊥» : Submodule R M).to_add_submonoid = «expr⊥» :=\n  rfl\n#align bot_to_add_submonoid bot_to_add_submonoid\n\n",
 "bot_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[ext]\nprotected theorem bot_ext (x y : («expr⊥» : Submodule R M)) : x = y :=\n  by\n  rcases x with ⟨x, xm⟩; rcases y with ⟨y, ym⟩; congr\n  rw [(Submodule.eq_bot_iff _).mp rfl x xm]\n  rw [(Submodule.eq_bot_iff _).mp rfl y ym]\n#align bot_ext bot_ext\n\n",
 "bot_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Mario Carneiro, Kevin Buzzard, Yury Kudryashov\n-/\n@[simp]\ntheorem bot_coe : ((«expr⊥» : Submodule R M) : Set M) = {0} :=\n  rfl\n#align bot_coe bot_coe\n\n",
 "add_mem_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem add_mem_sup {S T : Submodule R M} {s t : M} (hs : s ∈ S) (ht : t ∈ T) : s + t ∈ «expr ⊔ » S T :=\n  add_mem (mem_sup_left hs) (mem_sup_right ht)\n#align add_mem_sup add_mem_sup\n\n",
 "Inf_le'":
 "private theorem Inf_le' {S : Set (Submodule R M)} {p} : p ∈ S → infₛ S ≤ p :=\n  Set.binterᵢ_subset_of_mem\n#align Inf_le' Inf_le'\n\n",
 "Inf_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n@[simp]\ntheorem Inf_coe (P : Set (Submodule R M)) :\n    (↑(infₛ P) : Set M) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" ↑p :=\n  rfl\n#align Inf_coe Inf_coe\n\n"}