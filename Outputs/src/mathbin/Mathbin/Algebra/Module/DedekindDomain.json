{"is_internal_prime_power_torsion_of_is_torsion_by_ideal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/-\nCopyright (c) 2022 Pierre-Alexandre Bazin. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Pierre-Alexandre Bazin\n-/\n/-- Over a Dedekind domain, a `I`-torsion module is the internal direct sum of its `p i ^ e i`-\ntorsion submodules, where `I = ∏ i, p i ^ e i` is its unique decomposition in prime ideals.-/\ntheorem is_internal_prime_power_torsion_of_is_torsion_by_ideal {I : Ideal R} (hI : I ≠ «expr⊥»)\n    (hM : module.is_torsion_by_set R M I) :\n    DirectSum.IsInternal fun p : (factors I).to_finset => torsion_by_set R M (p ^ (factors I).count p : Ideal R) :=\n  by\n  let P := factors I\n  have prime_of_mem := fun p (hp : p ∈ P.to_finset) => prime_of_factor p (multiset.mem_to_finset.mp hp)\n  apply @torsion_by_set_is_internal _ _ _ _ _ _ _ _ (fun p => p ^ P.count p) _\n  · convert hM\n    rw [← Finset.inf_eq_infᵢ, is_dedekind_domain.inf_prime_pow_eq_prod, ← Finset.prod_multiset_count, ←\n      associated_iff_eq]\n    · exact factors_prod hI\n    · exact prime_of_mem\n    · exact fun _ _ _ _ ij => ij\n  · intro p hp q hq pq\n    dsimp\n    rw [irreducible_pow_sup]\n    · suffices (normalized_factors _).count p = 0 by rw [this, zero_min, pow_zero, Ideal.one_eq_top]\n      · rw [Multiset.count_eq_zero, normalized_factors_of_irreducible_pow (prime_of_mem q hq).irreducible,\n          Multiset.mem_replicate]\n        exact fun H => pq <| H.2.trans <| normalize_eq q\n    · rw [← Ideal.zero_eq_bot]\n      apply pow_ne_zero\n      exact (prime_of_mem q hq).ne_zero\n    · exact (prime_of_mem p hp).irreducible\n#align is_internal_prime_power_torsion_of_is_torsion_by_ideal is_internal_prime_power_torsion_of_is_torsion_by_ideal\n\n",
 "is_internal_prime_power_torsion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- A finitely generated torsion module over a Dedekind domain is an internal direct sum of its\n`p i ^ e i`-torsion submodules where `p i` are factors of `(⊤ : submodule R M).annihilator` and\n`e i` are their multiplicities. -/\ntheorem is_internal_prime_power_torsion [Module.Finite R M] (hM : module.is_torsion R M) :\n    DirectSum.IsInternal fun p : (factors («expr⊤» : Submodule R M).annihilator).to_finset =>\n      torsion_by_set R M (p ^ (factors («expr⊤» : Submodule R M).annihilator).count p : Ideal R) :=\n  by\n  have hM' := module.is_torsion_by_set_annihilator_top R M\n  have hI := submodule.annihilator_top_inter_non_zero_divisors hM\n  refine' is_internal_prime_power_torsion_of_is_torsion_by_ideal _ hM'\n  rw [← Set.nonempty_iff_ne_empty] at hI; rw [Submodule.ne_bot_iff]\n  obtain ⟨x, H, hx⟩ := hI; exact ⟨x, H, nonZeroDivisors.ne_zero hx⟩\n#align is_internal_prime_power_torsion is_internal_prime_power_torsion\n\n",
 "exists_is_internal_prime_power_torsion":
 "/-- A finitely generated torsion module over a Dedekind domain is an internal direct sum of its\n`p i ^ e i`-torsion submodules for some prime ideals `p i` and numbers `e i`.-/\ntheorem exists_is_internal_prime_power_torsion [Module.Finite R M] (hM : module.is_torsion R M) :\n    ∃ (P : Finset <| Ideal R)(_ : DecidableEq P)(_ : ∀ p ∈ P, Prime p)(e : P → ℕ),\n      DirectSum.IsInternal fun p : P => torsion_by_set R M (p ^ e p : Ideal R) :=\n  ⟨_, _, fun p hp => prime_of_factor p (Multiset.mem_toFinset.mp hp), _, is_internal_prime_power_torsion hM⟩\n#align exists_is_internal_prime_power_torsion exists_is_internal_prime_power_torsion\n\n"}