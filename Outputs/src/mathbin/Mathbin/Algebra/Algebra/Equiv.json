{"trans_to_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem trans_to_linear_map (f : «expr ≃ₐ[ ] » A₁ R A₂) (g : «expr ≃ₐ[ ] » A₂ R A₃) :\n    (f.trans g).to_linear_map = g.to_linear_map.comp f.to_linear_map :=\n  rfl\n#align trans_to_linear_map trans_to_linear_map\n\n",
 "trans_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem trans_apply (e₁ : «expr ≃ₐ[ ] » A₁ R A₂) (e₂ : «expr ≃ₐ[ ] » A₂ R A₃) (x : A₁) : (e₁.trans e₂) x = e₂ (e₁ x) :=\n  rfl\n#align trans_apply trans_apply\n\n",
 "to_ring_equiv_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃+* » -/\n--this should be a simp lemma but causes a lint timeout\ntheorem to_ring_equiv_symm (f : «expr ≃ₐ[ ] » A₁ R A₁) : (f : «expr ≃+* » A₁ A₁).symm = f.symm :=\n  rfl\n#align to_ring_equiv_symm to_ring_equiv_symm\n\n",
 "to_ring_equiv_eq_coe":
 "@[simp]\ntheorem to_ring_equiv_eq_coe : e.to_ring_equiv = e :=\n  rfl\n#align to_ring_equiv_eq_coe to_ring_equiv_eq_coe\n\n",
 "to_linear_map_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem to_linear_map_injective : function.injective (to_linear_map : _ → «expr →ₗ[ ] » A₁ R A₂) := fun e₁ e₂ h =>\n  ext <| linear_map.congr_fun h\n#align to_linear_map_injective to_linear_map_injective\n\n",
 "to_linear_map_apply":
 "@[simp]\ntheorem to_linear_map_apply (x : A₁) : e.to_linear_map x = e x :=\n  rfl\n#align to_linear_map_apply to_linear_map_apply\n\n",
 "to_linear_equiv_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem to_linear_equiv_trans (e₁ : «expr ≃ₐ[ ] » A₁ R A₂) (e₂ : «expr ≃ₐ[ ] » A₂ R A₃) :\n    (e₁.trans e₂).to_linear_equiv = e₁.to_linear_equiv.trans e₂.to_linear_equiv :=\n  rfl\n#align to_linear_equiv_trans to_linear_equiv_trans\n\n",
 "to_linear_equiv_to_linear_map":
 "@[simp]\ntheorem to_linear_equiv_to_linear_map : e.to_linear_equiv.to_linear_map = e.to_linear_map :=\n  rfl\n#align to_linear_equiv_to_linear_map to_linear_equiv_to_linear_map\n\n",
 "to_linear_equiv_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem to_linear_equiv_symm (e : «expr ≃ₐ[ ] » A₁ R A₂) : e.to_linear_equiv.symm = e.symm.to_linear_equiv :=\n  rfl\n#align to_linear_equiv_symm to_linear_equiv_symm\n\n",
 "to_linear_equiv_refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem to_linear_equiv_refl : (alg_equiv.refl : «expr ≃ₐ[ ] » A₁ R A₁).to_linear_equiv = linear_equiv.refl R A₁ :=\n  rfl\n#align to_linear_equiv_refl to_linear_equiv_refl\n\n",
 "to_linear_equiv_of_linear_equiv":
 "@[simp]\ntheorem to_linear_equiv_of_linear_equiv : to_linear_equiv (of_linear_equiv l map_mul commutes) = l :=\n  by\n  ext\n  rfl\n#align to_linear_equiv_of_linear_equiv to_linear_equiv_of_linear_equiv\n\n",
 "to_linear_equiv_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\ntheorem to_linear_equiv_injective : function.injective (to_linear_equiv : _ → «expr ≃ₗ[ ] » A₁ R A₂) := fun e₁ e₂ h =>\n  ext <| linear_equiv.congr_fun h\n#align to_linear_equiv_injective to_linear_equiv_injective\n\n",
 "to_fun_eq_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem to_fun_eq_coe (e : «expr ≃ₐ[ ] » A₁ R A₂) : e.to_fun = e :=\n  rfl\n#align to_fun_eq_coe to_fun_eq_coe\n\n",
 "to_equiv_eq_coe":
 "@[simp]\ntheorem to_equiv_eq_coe : e.to_equiv = e :=\n  rfl\n#align to_equiv_eq_coe to_equiv_eq_coe\n\n",
 "to_alg_hom_to_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem to_alg_hom_to_linear_map : (e : «expr →ₐ[ ] » A₁ R A₂).to_linear_map = e.to_linear_map :=\n  rfl\n#align to_alg_hom_to_linear_map to_alg_hom_to_linear_map\n\n",
 "to_alg_hom_eq_coe":
 "@[simp]\ntheorem to_alg_hom_eq_coe : e.to_alg_hom = e :=\n  rfl\n#align to_alg_hom_eq_coe to_alg_hom_eq_coe\n\n",
 "to_alg_equiv_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\ntheorem to_alg_equiv_injective [FaithfulSMul G A] :\n    function.injective (mul_semiring_action.to_alg_equiv R A : G → «expr ≃ₐ[ ] » A R A) := fun m₁ m₂ h =>\n  eq_of_smul_eq_smul fun r => alg_equiv.ext_iff.1 h r\n#align to_alg_equiv_injective to_alg_equiv_injective\n\n",
 "symm_trans_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem symm_trans_apply (e₁ : «expr ≃ₐ[ ] » A₁ R A₂) (e₂ : «expr ≃ₐ[ ] » A₂ R A₃) (x : A₃) :\n    (e₁.trans e₂).symm x = e₁.symm (e₂.symm x) :=\n  rfl\n#align symm_trans_apply symm_trans_apply\n\n",
 "symm_to_ring_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃+* » -/\n@[simp]\ntheorem symm_to_ring_equiv : (e.symm : «expr ≃+* » A₂ A₁) = (e : «expr ≃+* » A₁ A₂).symm :=\n  rfl\n#align symm_to_ring_equiv symm_to_ring_equiv\n\n",
 "symm_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem symm_symm (e : «expr ≃ₐ[ ] » A₁ R A₂) : e.symm.symm = e :=\n  by\n  ext\n  rfl\n#align symm_symm symm_symm\n\n",
 "symm_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem symm_mk (f f') (h₁ h₂ h₃ h₄ h₅) :\n    (⟨f, f', h₁, h₂, h₃, h₄, h₅⟩ : «expr ≃ₐ[ ] » A₁ R A₂).symm =\n      {\n        (⟨f, f', h₁, h₂, h₃, h₄, h₅⟩ : «expr ≃ₐ[ ] » A₁ R\n              A₂).symm with\n        to_fun := f'\n        inv_fun := f } :=\n  rfl\n#align symm_mk symm_mk\n\n",
 "symm_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem symm_comp (e : «expr ≃ₐ[ ] » A₁ R A₂) : alg_hom.comp ↑e.symm (e : «expr →ₐ[ ] » A₁ R A₂) = alg_hom.id R A₁ :=\n  by\n  ext\n  simp\n#align symm_comp symm_comp\n\n",
 "symm_bijective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\ntheorem symm_bijective : function.bijective (symm : «expr ≃ₐ[ ] » A₁ R A₂ → «expr ≃ₐ[ ] » A₂ R A₁) :=\n  Equiv.bijective ⟨symm, symm, symm_symm, symm_symm⟩\n#align symm_bijective symm_bijective\n\n",
 "symm_apply_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem symm_apply_apply (e : «expr ≃ₐ[ ] » A₁ R A₂) : ∀ x, e.symm (e x) = x :=\n  e.to_equiv.symm_apply_apply\n#align symm_apply_apply symm_apply_apply\n\n",
 "surjective":
 "protected theorem surjective : function.surjective e :=\n  equiv_like.surjective e\n#align surjective surjective\n\n",
 "smul_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\nprotected theorem smul_def (f : «expr ≃ₐ[ ] » A₁ R A₁) (a : A₁) : «expr • » f a = f a :=\n  rfl\n#align smul_def smul_def\n\n",
 "right_inverse_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\ntheorem right_inverse_symm (e : «expr ≃ₐ[ ] » A₁ R A₂) : function.right_inverse e.symm e :=\n  e.right_inv\n#align right_inverse_symm right_inverse_symm\n\n",
 "refl_to_alg_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem refl_to_alg_hom : ↑(refl : «expr ≃ₐ[ ] » A₁ R A₁) = alg_hom.id R A₁ :=\n  rfl\n#align refl_to_alg_hom refl_to_alg_hom\n\n",
 "refl_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem refl_symm : (alg_equiv.refl : «expr ≃ₐ[ ] » A₁ R A₁).symm = alg_equiv.refl :=\n  rfl\n#align refl_symm refl_symm\n\n",
 "one_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem one_apply (x : A₁) : (1 : «expr ≃ₐ[ ] » A₁ R A₁) x = x :=\n  rfl\n#align one_apply one_apply\n\n",
 "of_linear_equiv_to_linear_equiv":
 "@[simp]\ntheorem of_linear_equiv_to_linear_equiv (map_mul) (commutes) : of_linear_equiv e.to_linear_equiv map_mul commutes = e :=\n  by\n  ext\n  rfl\n#align of_linear_equiv_to_linear_equiv of_linear_equiv_to_linear_equiv\n\n",
 "of_linear_equiv_symm":
 "@[simp]\ntheorem of_linear_equiv_symm :\n    (of_linear_equiv l map_mul commutes).symm =\n      of_linear_equiv l.symm (of_linear_equiv l map_mul commutes).symm.map_mul\n        (of_linear_equiv l map_mul commutes).symm.commutes :=\n  rfl\n#align of_linear_equiv_symm of_linear_equiv_symm\n\n",
 "of_bijective_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\ntheorem of_bijective_apply {f : «expr →ₐ[ ] » A₁ R A₂} {hf : function.bijective f} (a : A₁) :\n    (alg_equiv.of_bijective f hf) a = f a :=\n  rfl\n#align of_bijective_apply of_bijective_apply\n\n",
 "of_alg_hom_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\ntheorem of_alg_hom_symm (f : «expr →ₐ[ ] » A₁ R A₂) (g : «expr →ₐ[ ] » A₂ R A₁) (h₁ h₂) :\n    (of_alg_hom f g h₁ h₂).symm = of_alg_hom g f h₂ h₁ :=\n  rfl\n#align of_alg_hom_symm of_alg_hom_symm\n\n",
 "of_alg_hom_coe_alg_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem of_alg_hom_coe_alg_hom (f : «expr ≃ₐ[ ] » A₁ R A₂) (g : «expr →ₐ[ ] » A₂ R A₁) (h₁ h₂) :\n    of_alg_hom (↑f) g h₁ h₂ = f :=\n  ext fun _ => rfl\n#align of_alg_hom_coe_alg_hom of_alg_hom_coe_alg_hom\n\n",
 "mul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem mul_apply (e₁ e₂ : «expr ≃ₐ[ ] » A₁ R A₁) (x : A₁) : (e₁ * e₂) x = e₁ (e₂ x) :=\n  rfl\n#align mul_apply mul_apply\n\n",
 "mk_coe'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem mk_coe' (e : «expr ≃ₐ[ ] » A₁ R A₂) (f h₁ h₂ h₃ h₄ h₅) :\n    (⟨f, e, h₁, h₂, h₃, h₄, h₅⟩ : «expr ≃ₐ[ ] » A₂ R A₁) = e.symm :=\n  symm_bijective.injective <| ext fun x => rfl\n#align mk_coe' mk_coe'\n\n",
 "mk_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem mk_coe (e : «expr ≃ₐ[ ] » A₁ R A₂) (e' h₁ h₂ h₃ h₄ h₅) :\n    (⟨e, e', h₁, h₂, h₃, h₄, h₅⟩ : «expr ≃ₐ[ ] » A₁ R A₂) = e :=\n  ext fun _ => rfl\n#align mk_coe mk_coe\n\n",
 "map_zero":
 "#print map_zero /-\nprotected theorem map_zero : e 0 = 0 :=\n  map_zero e\n#align map_zero map_zero\n-/\n\n",
 "map_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem map_sum {ι : Type _} (f : ι → A₁) (s : Finset ι) :\n    e (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f x)) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (e (f x)) :=\n  e.to_add_equiv.map_sum f s\n#align map_sum map_sum\n\n",
 "map_sub":
 "#print map_sub /-\nprotected theorem map_sub (x y) : e (x - y) = e x - e y :=\n  map_sub e x y\n#align map_sub map_sub\n-/\n\n",
 "map_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem map_smul (r : R) (x : A₁) : e («expr • » r x) = «expr • » r (e x) := by\n  simp only [algebra.smul_def, map_mul, commutes]\n#align map_smul map_smul\n\n",
 "map_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\ntheorem map_prod {ι : Type _} (f : ι → A₁) (s : Finset ι) :\n    e (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f x)) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (e (f x)) :=\n  map_prod _ f s\n#align map_prod map_prod\n\n",
 "map_pow":
 "#print map_pow /-\nprotected theorem map_pow : ∀ (x : A₁) (n : ℕ), e (x ^ n) = e x ^ n :=\n  map_pow _\n#align map_pow map_pow\n-/\n\n",
 "map_one":
 "#print map_one /-\nprotected theorem map_one : e 1 = 1 :=\n  map_one e\n#align map_one map_one\n-/\n\n",
 "map_neg":
 "#print map_neg /-\nprotected theorem map_neg (x) : e (-x) = -e x :=\n  map_neg e x\n#align map_neg map_neg\n-/\n\n",
 "map_mul":
 "#print map_mul /-\nprotected theorem map_mul : ∀ x y, e (x * y) = e x * e y :=\n  map_mul e\n#align map_mul map_mul\n-/\n\n",
 "map_finsupp_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem map_finsupp_sum {α : Type _} [Zero α] {ι : Type _} (f : «expr →₀ » ι α) (g : ι → α → A₁) :\n    e (f.sum g) = f.sum fun i b => e (g i b) :=\n  e.map_sum _ _\n#align map_finsupp_sum map_finsupp_sum\n\n",
 "map_finsupp_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem map_finsupp_prod {α : Type _} [Zero α] {ι : Type _} (f : «expr →₀ » ι α) (g : ι → α → A₁) :\n    e (f.prod g) = f.prod fun i a => e (g i a) :=\n  map_finsupp_prod _ f g\n#align map_finsupp_prod map_finsupp_prod\n\n",
 "map_add":
 "#print map_add /-\nprotected theorem map_add : ∀ x y, e (x + y) = e x + e y :=\n  map_add e\n#align map_add map_add\n-/\n\n",
 "left_inverse_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\ntheorem left_inverse_symm (e : «expr ≃ₐ[ ] » A₁ R A₂) : function.left_inverse e.symm e :=\n  e.left_inv\n#align left_inverse_symm left_inverse_symm\n\n",
 "inv_fun_eq_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem inv_fun_eq_symm {e : «expr ≃ₐ[ ] » A₁ R A₂} : e.inv_fun = e.symm :=\n  rfl\n#align inv_fun_eq_symm inv_fun_eq_symm\n\n",
 "injective":
 "protected theorem injective : function.injective e :=\n  equiv_like.injective e\n#align injective injective\n\n",
 "ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\nprotected theorem ext_iff {f g : «expr ≃ₐ[ ] » A₁ R A₂} : f = g ↔ ∀ x, f x = g x :=\n  fun_like.ext_iff\n#align ext_iff ext_iff\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[ext]\ntheorem ext {f g : «expr ≃ₐ[ ] » A₁ R A₂} (h : ∀ a, f a = g a) : f = g :=\n  fun_like.ext f g h\n#align ext ext\n\n",
 "congr_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n#print congr_fun /-\nprotected theorem congr_fun {f g : «expr ≃ₐ[ ] » A₁ R A₂} (h : f = g) (x : A₁) : f x = g x :=\n  fun_like.congr_fun h x\n#align congr_fun congr_fun\n-/\n\n",
 "congr_arg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n#print congr_arg /-\nprotected theorem congr_arg {f : «expr ≃ₐ[ ] » A₁ R A₂} {x x' : A₁} : x = x' → f x = f x' :=\n  fun_like.congr_arg f\n#align congr_arg congr_arg\n-/\n\n",
 "comp_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem comp_symm (e : «expr ≃ₐ[ ] » A₁ R A₂) : alg_hom.comp (e : «expr →ₐ[ ] » A₁ R A₂) ↑e.symm = alg_hom.id R A₂ :=\n  by\n  ext\n  simp\n#align comp_symm comp_symm\n\n",
 "commutes":
 "@[simp]\ntheorem commutes : ∀ r : R, e (algebra_map R A₁ r) = algebra_map R A₂ r :=\n  e.commutes'\n#align commutes commutes\n\n",
 "coe_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_trans (e₁ : «expr ≃ₐ[ ] » A₁ R A₂) (e₂ : «expr ≃ₐ[ ] » A₂ R A₃) : «expr⇑ » (e₁.trans e₂) = e₂ ∘ e₁ :=\n  rfl\n#align coe_trans coe_trans\n\n",
 "coe_ring_hom_commutes":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/-- The two paths coercion can take to a `ring_hom` are equivalent -/\ntheorem coe_ring_hom_commutes :\n    ((e : «expr →ₐ[ ] » A₁ R A₂) : «expr →+* » A₁ A₂) = ((e : «expr ≃+* » A₁ A₂) : «expr →+* » A₁ A₂) :=\n  rfl\n#align coe_ring_hom_commutes coe_ring_hom_commutes\n\n",
 "coe_ring_equiv_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃+* » -/\ntheorem coe_ring_equiv_injective : function.injective (coe : «expr ≃ₐ[ ] » A₁ R A₂ → «expr ≃+* » A₁ A₂) :=\n  fun e₁ e₂ h => ext <| RingEquiv.congr_fun h\n#align coe_ring_equiv_injective coe_ring_equiv_injective\n\n",
 "coe_ring_equiv'":
 "theorem coe_ring_equiv' : (e.to_ring_equiv : A₁ → A₂) = e :=\n  rfl\n#align coe_ring_equiv' coe_ring_equiv'\n\n",
 "coe_ring_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃+* » -/\n@[simp, norm_cast]\ntheorem coe_ring_equiv : ((e : «expr ≃+* » A₁ A₂) : A₁ → A₂) = e :=\n  rfl\n#align coe_ring_equiv coe_ring_equiv\n\n",
 "coe_refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem coe_refl : «expr⇑ » (refl : «expr ≃ₐ[ ] » A₁ R A₁) = id :=\n  rfl\n#align coe_refl coe_refl\n\n",
 "coe_of_bijective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem coe_of_bijective {f : «expr →ₐ[ ] » A₁ R A₂} {hf : function.bijective f} :\n    (alg_equiv.of_bijective f hf : A₁ → A₂) = f :=\n  rfl\n#align coe_of_bijective coe_of_bijective\n\n",
 "coe_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem coe_mk {to_fun inv_fun left_inv right_inv map_mul map_add commutes} :\n    «expr⇑ » (⟨to_fun, inv_fun, left_inv, right_inv, map_mul, map_add, commutes⟩ : «expr ≃ₐ[ ] » A₁ R A₂) = to_fun :=\n  rfl\n#align coe_mk coe_mk\n\n",
 "coe_fun_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\ntheorem coe_fun_injective : @function.injective («expr ≃ₐ[ ] » A₁ R A₂) (A₁ → A₂) fun e => (e : A₁ → A₂) :=\n  fun_like.coe_injective\n#align coe_fun_injective coe_fun_injective\n\n",
 "coe_coe_symm_apply_coe_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem coe_coe_symm_apply_coe_apply {F : Type _} [alg_equiv_class F R A₁ A₂] (f : F) (x : A₁) :\n    (f : «expr ≃ₐ[ ] » A₁ R A₂).symm (f x) = x :=\n  equiv_like.left_inv f x\n#align coe_coe_symm_apply_coe_apply coe_coe_symm_apply_coe_apply\n\n",
 "coe_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/-\nCopyright (c) 2018 Kenny Lau. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kenny Lau, Yury Kudryashov\n-/\n-- `R` becomes a metavariable but that's fine because it's an `out_param`\n-- See note [lower instance priority]\n@[simp, protected]\ntheorem coe_coe {F : Type _} [alg_equiv_class F R A₁ A₂] (f : F) : «expr⇑ » (f : «expr ≃ₐ[ ] » A₁ R A₂) = f :=\n  rfl\n#align coe_coe coe_coe\n\n",
 "coe_apply_coe_coe_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem coe_apply_coe_coe_symm_apply {F : Type _} [alg_equiv_class F R A₁ A₂] (f : F) (x : A₂) :\n    f ((f : «expr ≃ₐ[ ] » A₁ R A₂).symm x) = x :=\n  equiv_like.right_inv f x\n#align coe_apply_coe_coe_symm_apply coe_apply_coe_coe_symm_apply\n\n",
 "coe_alg_hom_of_alg_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\ntheorem coe_alg_hom_of_alg_hom (f : «expr →ₐ[ ] » A₁ R A₂) (g : «expr →ₐ[ ] » A₂ R A₁) (h₁ h₂) :\n    ↑(of_alg_hom f g h₁ h₂) = f :=\n  alg_hom.ext fun _ => rfl\n#align coe_alg_hom_of_alg_hom coe_alg_hom_of_alg_hom\n\n",
 "coe_alg_hom_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\ntheorem coe_alg_hom_injective : function.injective (coe : «expr ≃ₐ[ ] » A₁ R A₂ → «expr →ₐ[ ] » A₁ R A₂) :=\n  fun e₁ e₂ h => ext <| alg_hom.congr_fun h\n#align coe_alg_hom_injective coe_alg_hom_injective\n\n",
 "coe_alg_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp, norm_cast]\ntheorem coe_alg_hom : ((e : «expr →ₐ[ ] » A₁ R A₂) : A₁ → A₂) = e :=\n  rfl\n#align coe_alg_hom coe_alg_hom\n\n",
 "bijective":
 "protected theorem bijective : function.bijective e :=\n  equiv_like.bijective e\n#align bijective bijective\n\n",
 "aut_congr_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem aut_congr_trans (ϕ : «expr ≃ₐ[ ] » A₁ R A₂) (ψ : «expr ≃ₐ[ ] » A₂ R A₃) :\n    (aut_congr ϕ).trans (aut_congr ψ) = aut_congr (ϕ.trans ψ) :=\n  rfl\n#align aut_congr_trans aut_congr_trans\n\n",
 "aut_congr_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem aut_congr_symm (ϕ : «expr ≃ₐ[ ] » A₁ R A₂) : (aut_congr ϕ).symm = aut_congr ϕ.symm :=\n  rfl\n#align aut_congr_symm aut_congr_symm\n\n",
 "aut_congr_refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem aut_congr_refl : aut_congr alg_equiv.refl = MulEquiv.refl («expr ≃ₐ[ ] » A₁ R A₁) :=\n  by\n  ext\n  rfl\n#align aut_congr_refl aut_congr_refl\n\n",
 "arrow_congr_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem arrow_congr_trans {A₁' A₂' A₃' : Type _} [Semiring A₁'] [Semiring A₂'] [Semiring A₃'] [algebra R A₁']\n    [algebra R A₂'] [algebra R A₃'] (e₁ : «expr ≃ₐ[ ] » A₁ R A₂) (e₁' : «expr ≃ₐ[ ] » A₁' R A₂')\n    (e₂ : «expr ≃ₐ[ ] » A₂ R A₃) (e₂' : «expr ≃ₐ[ ] » A₂' R A₃') :\n    arrow_congr (e₁.trans e₂) (e₁'.trans e₂') = (arrow_congr e₁ e₁').trans (arrow_congr e₂ e₂') :=\n  by\n  ext\n  rfl\n#align arrow_congr_trans arrow_congr_trans\n\n",
 "arrow_congr_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem arrow_congr_symm {A₁' A₂' : Type _} [Semiring A₁'] [Semiring A₂'] [algebra R A₁'] [algebra R A₂']\n    (e₁ : «expr ≃ₐ[ ] » A₁ R A₁') (e₂ : «expr ≃ₐ[ ] » A₂ R A₂') :\n    (arrow_congr e₁ e₂).symm = arrow_congr e₁.symm e₂.symm :=\n  by\n  ext\n  rfl\n#align arrow_congr_symm arrow_congr_symm\n\n",
 "arrow_congr_refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem arrow_congr_refl : arrow_congr alg_equiv.refl alg_equiv.refl = equiv.refl («expr →ₐ[ ] » A₁ R A₂) :=\n  by\n  ext\n  rfl\n#align arrow_congr_refl arrow_congr_refl\n\n",
 "arrow_congr_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\ntheorem arrow_congr_comp {A₁' A₂' A₃' : Type _} [Semiring A₁'] [Semiring A₂'] [Semiring A₃'] [algebra R A₁']\n    [algebra R A₂'] [algebra R A₃'] (e₁ : «expr ≃ₐ[ ] » A₁ R A₁') (e₂ : «expr ≃ₐ[ ] » A₂ R A₂')\n    (e₃ : «expr ≃ₐ[ ] » A₃ R A₃') (f : «expr →ₐ[ ] » A₁ R A₂) (g : «expr →ₐ[ ] » A₂ R A₃) :\n    arrow_congr e₁ e₃ (g.comp f) = (arrow_congr e₂ e₃ g).comp (arrow_congr e₁ e₂ f) :=\n  by\n  ext\n  simp only [arrow_congr, equiv.coe_fn_mk, alg_hom.comp_apply]\n  congr\n  exact (e₂.symm_apply_apply _).symm\n#align arrow_congr_comp arrow_congr_comp\n\n",
 "apply_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem apply_symm_apply (e : «expr ≃ₐ[ ] » A₁ R A₂) : ∀ x, e (e.symm x) = x :=\n  e.to_equiv.apply_symm_apply\n#align apply_symm_apply apply_symm_apply\n\n",
 "algebra_map_eq_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n@[simp]\ntheorem algebra_map_eq_apply (e : «expr ≃ₐ[ ] » A₁ R A₂) {y : R} {x : A₁} :\n    algebra_map R A₂ y = e x ↔ algebra_map R A₁ y = x :=\n  ⟨fun h => by simpa using e.symm.to_alg_hom.algebra_map_eq_apply h, fun h => e.to_alg_hom.algebra_map_eq_apply h⟩\n#align algebra_map_eq_apply algebra_map_eq_apply\n\n"}