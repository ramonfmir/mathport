{"sub_iff":
 "#print IsUnit.sub_iff /-\ntheorem IsUnit.sub_iff [Ring α] {x y : α} : is_unit (x - y) ↔ is_unit (y - x) :=\n  (IsUnit.neg_iff _).symm.trans <| neg_sub x y ▸ iff.rfl\n#align is_unit.sub_iff IsUnit.sub_iff\n-/\n\n",
 "sub_divp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[field_simps]\ntheorem sub_divp (a b : α) (u : «expr ˣ» α) : a - «expr /ₚ » b u = «expr /ₚ » (a * u - b) u := by\n  simp only [divp, sub_mul, Units.mul_inv_cancel_right]\n#align sub_divp sub_divp\n\n",
 "neg_iff":
 "#print IsUnit.neg_iff /-\n@[simp]\ntheorem IsUnit.neg_iff [monoid α] [HasDistribNeg α] (a : α) : is_unit (-a) ↔ is_unit a :=\n  ⟨fun h => neg_neg a ▸ h.neg, IsUnit.neg⟩\n#align is_unit.neg_iff IsUnit.neg_iff\n-/\n\n",
 "neg_divp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[field_simps]\ntheorem neg_divp (a : α) (u : «expr ˣ» α) : -«expr /ₚ » a u = «expr /ₚ » (-a) u := by simp only [divp, neg_mul]\n#align neg_divp neg_divp\n\n",
 "neg":
 "#print IsUnit.neg /-\ntheorem IsUnit.neg [monoid α] [HasDistribNeg α] {a : α} : is_unit a → is_unit (-a)\n  | ⟨x, hx⟩ => hx ▸ (-x).is_unit\n#align is_unit.neg IsUnit.neg\n-/\n\n",
 "divp_sub_divp_same":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[field_simps]\ntheorem divp_sub_divp_same (a b : α) (u : «expr ˣ» α) : «expr /ₚ » a u - «expr /ₚ » b u = «expr /ₚ » (a - b) u := by\n  rw [sub_eq_add_neg, sub_eq_add_neg, neg_divp, divp_add_divp_same]\n#align divp_sub_divp_same divp_sub_divp_same\n\n",
 "divp_sub_divp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[field_simps]\ntheorem divp_sub_divp [CommRing α] (a b : α) (u₁ u₂ : «expr ˣ» α) :\n    «expr /ₚ » a u₁ - «expr /ₚ » b u₂ = «expr /ₚ » (a * u₂ - u₁ * b) (u₁ * u₂) := by\n  simp_rw [sub_eq_add_neg, neg_divp, divp_add_divp, mul_neg]\n#align divp_sub_divp divp_sub_divp\n\n",
 "divp_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[field_simps]\ntheorem divp_sub (a b : α) (u : «expr ˣ» α) : «expr /ₚ » a u - b = «expr /ₚ » (a - b * u) u :=\n  by\n  simp only [divp, sub_mul, sub_right_inj]\n  assoc_rw [Units.mul_inv, mul_one]\n#align divp_sub divp_sub\n\n",
 "divp_add_divp_same":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[field_simps]\ntheorem divp_add_divp_same (a b : α) (u : «expr ˣ» α) : «expr /ₚ » a u + «expr /ₚ » b u = «expr /ₚ » (a + b) u := by\n  simp only [divp, add_mul]\n#align divp_add_divp_same divp_add_divp_same\n\n",
 "divp_add_divp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[field_simps]\ntheorem divp_add_divp [CommRing α] (a b : α) (u₁ u₂ : «expr ˣ» α) :\n    «expr /ₚ » a u₁ + «expr /ₚ » b u₂ = «expr /ₚ » (a * u₂ + u₁ * b) (u₁ * u₂) :=\n  by\n  simp only [divp, add_mul, mul_inv_rev, coe_mul]\n  rw [mul_comm (↑u₁ * b), mul_comm b]\n  assoc_rw [mul_inv, mul_inv, mul_one, mul_one]\n#align divp_add_divp divp_add_divp\n\n",
 "divp_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[field_simps]\ntheorem divp_add (a b : α) (u : «expr ˣ» α) : «expr /ₚ » a u + b = «expr /ₚ » (a + b * u) u := by\n  simp only [divp, add_mul, Units.mul_inv_cancel_right]\n#align divp_add divp_add\n\n",
 "coe_neg_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n@[simp, norm_cast]\nprotected theorem coe_neg_one : ((-1 : «expr ˣ» α) : α) = -1 :=\n  rfl\n#align coe_neg_one coe_neg_one\n\n",
 "coe_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/-\nCopyright (c) 2014 Jeremy Avigad. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jeremy Avigad, Leonardo de Moura, Floris van Doorn, Yury Kudryashov, Neil Strickland\n-/\n/-- Representing an element of a ring's unit group as an element of the ring commutes with\n    mapping this element to its additive inverse. -/\n@[simp, norm_cast]\nprotected theorem coe_neg (u : «expr ˣ» α) : (↑(-u) : α) = -u :=\n  rfl\n#align coe_neg coe_neg\n\n",
 "add_eq_mul_one_add_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\ntheorem add_eq_mul_one_add_div [Semiring R] {a : «expr ˣ» R} {b : R} : ↑a + b = a * (1 + ↑a⁻¹ * b) := by\n  rwa [mul_add, mul_one, ← mul_assoc, Units.mul_inv, one_mul]\n#align add_eq_mul_one_add_div add_eq_mul_one_add_div\n\n",
 "add_divp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[field_simps]\ntheorem add_divp (a b : α) (u : «expr ˣ» α) : a + «expr /ₚ » b u = «expr /ₚ » (a * u + b) u := by\n  simp only [divp, add_mul, Units.mul_inv_cancel_right]\n#align add_divp add_divp\n\n"}