{"ring_hom_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\ntheorem ring_hom_injective {γ : Type w} [nonempty I] [∀ i, NonAssocSemiring (f i)] [NonAssocSemiring γ]\n    (g : ∀ i, «expr →+* » γ (f i)) (hg : ∀ i, function.injective (g i)) : function.injective (Pi.ringHom g) :=\n  monoidHom_injective (fun i => (g i).to_monoid_hom) hg\n#align ring_hom_injective ring_hom_injective\n\n",
 "non_unital_ring_hom_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₙ+* » -/\n/-\nCopyright (c) 2018 Simon Hudon. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Simon Hudon, Patrick Massot\n-/\n-- The indexing type\n-- The family of types already equipped with instances\ntheorem non_unital_ring_hom_injective {γ : Type w} [nonempty I] [∀ i, NonUnitalNonAssocSemiring (f i)]\n    [NonUnitalNonAssocSemiring γ] (g : ∀ i, «expr →ₙ+* » γ (f i)) (hg : ∀ i, function.injective (g i)) :\n    function.injective (Pi.nonUnitalRingHom g) :=\n  mulHom_injective (fun i => (g i).to_mul_hom) hg\n#align non_unital_ring_hom_injective non_unital_ring_hom_injective\n\n"}