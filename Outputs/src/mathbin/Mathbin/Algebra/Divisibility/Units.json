{"not_isUnit_of_not_isUnit_dvd":
 "#print not_isUnit_of_not_isUnit_dvd /-\ntheorem not_isUnit_of_not_isUnit_dvd {a b : α} (ha : ¬is_unit a) (hb : a ∣ b) : ¬is_unit b :=\n  mt (isUnit_of_dvd_unit hb) ha\n#align not_is_unit_of_not_is_unit_dvd not_isUnit_of_not_isUnit_dvd\n-/\n\n",
 "mul_right_dvd":
 "/-- In a monoid, an element a divides an element b iff all associates of `a` divide `b`.-/\n@[simp]\ntheorem mul_right_dvd : a * u ∣ b ↔ a ∣ b := by\n  rcases hu with ⟨u, rfl⟩\n  apply Units.mul_right_dvd\n#align mul_right_dvd mul_right_dvd\n\n",
 "mul_left_dvd":
 "/-- In a commutative monoid, an element `a` divides an element `b` iff all\n  left associates of `a` divide `b`.-/\n@[simp]\ntheorem mul_left_dvd : u * a ∣ b ↔ a ∣ b := by\n  rcases hu with ⟨u, rfl⟩\n  apply Units.mul_left_dvd\n#align mul_left_dvd mul_left_dvd\n\n",
 "isUnit_of_dvd_unit":
 "#print isUnit_of_dvd_unit /-\ntheorem isUnit_of_dvd_unit {x y : α} (xy : x ∣ y) (hu : is_unit y) : is_unit x :=\n  isUnit_iff_dvd_one.2 <| xy.trans <| isUnit_iff_dvd_one.1 hu\n#align is_unit_of_dvd_unit isUnit_of_dvd_unit\n-/\n\n",
 "isUnit_of_dvd_one":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (a «expr ∣ » 1) -/\n#print isUnit_of_dvd_one /-\ntheorem isUnit_of_dvd_one : ∀ (a) (_ : a ∣ 1), is_unit (a : α)\n  | a, ⟨b, eq⟩ => ⟨units.mk_of_mul_eq_one a b eq.symm, rfl⟩\n#align is_unit_of_dvd_one isUnit_of_dvd_one\n-/\n\n",
 "isUnit_iff_forall_dvd":
 "#print isUnit_iff_forall_dvd /-\ntheorem isUnit_iff_forall_dvd {x : α} : is_unit x ↔ ∀ y, x ∣ y :=\n  isUnit_iff_dvd_one.trans ⟨fun h y => h.trans (one_dvd _), fun h => h _⟩\n#align is_unit_iff_forall_dvd isUnit_iff_forall_dvd\n-/\n\n",
 "isUnit_iff_dvd_one":
 "#print isUnit_iff_dvd_one /-\ntheorem isUnit_iff_dvd_one {x : α} : is_unit x ↔ x ∣ 1 :=\n  ⟨is_unit.dvd, fun ⟨y, h⟩ => ⟨⟨x, y, h.symm, by rw [h, mul_comm]⟩, rfl⟩⟩\n#align is_unit_iff_dvd_one isUnit_iff_dvd_one\n-/\n\n",
 "dvd_mul_right":
 "#print dvd_mul_right /-\n@[simp]\ntheorem dvd_mul_right : a ∣ b * u ↔ a ∣ b := by\n  rcases hu with ⟨u, rfl⟩\n  apply units.dvd_mul_right\n#align dvd_mul_right dvd_mul_right\n-/\n\n",
 "dvd_mul_left":
 "#print dvd_mul_left /-\n/-- In a commutative monoid, an element `a` divides an element `b` iff `a` divides all left\n    associates of `b`. -/\n@[simp]\ntheorem dvd_mul_left : a ∣ u * b ↔ a ∣ b := by\n  rcases hu with ⟨u, rfl⟩\n  apply Units.dvd_mul_left\n#align dvd_mul_left dvd_mul_left\n-/\n\n",
 "dvd":
 "/-- Units of a monoid divide any element of the monoid. -/\n@[simp]\ntheorem dvd : u ∣ a := by\n  rcases hu with ⟨u, rfl⟩\n  apply units.coe_dvd\n#align dvd dvd\n\n",
 "coe_dvd":
 "/-\nCopyright (c) 2014 Jeremy Avigad. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jeremy Avigad, Leonardo de Moura, Floris van Doorn, Amelia Livingston, Yury Kudryashov,\nNeil Strickland, Aaron Anderson\n-/\n/-- Elements of the unit group of a monoid represented as elements of the monoid\n    divide any element of the monoid. -/\ntheorem coe_dvd : ↑u ∣ a :=\n  ⟨↑u⁻¹ * a, by simp⟩\n#align coe_dvd coe_dvd\n\n"}