{"zsmul_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem zsmul_lie (a : ℤ) : «expr⁅ , ⁆» («expr • » a x) m = «expr • » a («expr⁅ , ⁆» x m) :=\n  AddMonoidHom.map_zsmul ⟨fun x : L => «expr⁅ , ⁆» x m, zero_lie m, fun _ _ => add_lie _ _ _⟩ _ _\n#align zsmul_lie zsmul_lie\n\n",
 "zsmul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem zsmul_apply (z : ℤ) (f : «expr →ₗ⁅ , ⁆ » M R L N) (m : M) : («expr • » z f) m = «expr • » z (f m) :=\n  rfl\n#align zsmul_apply zsmul_apply\n\n",
 "zero_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem zero_lie : «expr⁅ , ⁆» (0 : L) m = 0 :=\n  (AddMonoidHom.mk' (fun x : L => «expr⁅ , ⁆» x m) fun x y => add_lie x y m).map_zero\n#align zero_lie zero_lie\n\n",
 "zero_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\ntheorem zero_apply (m : M) : (0 : «expr →ₗ⁅ , ⁆ » M R L N) m = 0 :=\n  rfl\n#align zero_apply zero_apply\n\n",
 "trans_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem trans_apply (e₁ : «expr ≃ₗ⁅ , ⁆ » M R L N) (e₂ : «expr ≃ₗ⁅ , ⁆ » N R L P) (m : M) :\n    (e₁.trans e₂) m = e₂ (e₁ m) :=\n  rfl\n#align trans_apply trans_apply\n\n",
 "to_linear_equiv_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n@[simp]\ntheorem to_linear_equiv_mk (f : «expr →ₗ⁅ ⁆ » L₁ R L₂) (g h₁ h₂) :\n    (mk f g h₁ h₂ : «expr ≃ₗ[ ] » L₁ R L₂) =\n      { f with\n        inv_fun := g\n        left_inv := h₁\n        right_inv := h₂ } :=\n  rfl\n#align to_linear_equiv_mk to_linear_equiv_mk\n\n",
 "to_fun_eq_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem to_fun_eq_coe (f : «expr →ₗ⁅ ⁆ » L₁ R L₂) : f.to_fun = «expr⇑ » f :=\n  rfl\n#align to_fun_eq_coe to_fun_eq_coe\n\n",
 "to_equiv_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\ntheorem to_equiv_injective : function.injective (to_equiv : «expr ≃ₗ⁅ , ⁆ » M R L N → «expr ≃ » M N) := fun e₁ e₂ h =>\n  by\n  rcases e₁ with ⟨⟨⟩⟩; rcases e₂ with ⟨⟨⟩⟩\n  have inj := equiv.mk.inj h\n  dsimp at inj\n  apply lie_module_equiv.mk.inj_eq.mpr\n  constructor\n  · congr\n    ext\n    rw [inj.1]\n  · exact inj.2\n#align to_equiv_injective to_equiv_injective\n\n",
 "symm_trans_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem symm_trans_self (e : «expr ≃ₗ⁅ , ⁆ » M R L N) : e.symm.trans e = refl :=\n  ext _ _ e.apply_symm_apply\n#align symm_trans_self symm_trans_self\n\n",
 "symm_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem symm_trans (e₁ : «expr ≃ₗ⁅ , ⁆ » M R L N) (e₂ : «expr ≃ₗ⁅ , ⁆ » N R L P) :\n    (e₁.trans e₂).symm = e₂.symm.trans e₁.symm :=\n  rfl\n#align symm_trans symm_trans\n\n",
 "symm_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem symm_symm (e : «expr ≃ₗ⁅ , ⁆ » M R L N) : e.symm.symm = e :=\n  by\n  ext\n  apply_fun e.symm using e.symm.injective\n  simp\n#align symm_symm symm_symm\n\n",
 "symm_apply_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem symm_apply_apply (e : «expr ≃ₗ⁅ , ⁆ » M R L N) : ∀ x, e.symm (e x) = x :=\n  e.to_linear_equiv.symm_apply_apply\n#align symm_apply_apply symm_apply_apply\n\n",
 "surjective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\nprotected theorem surjective (e : «expr ≃ₗ⁅ ⁆ » L₁ R L₂) :\n    function.surjective ((e : «expr →ₗ⁅ ⁆ » L₁ R L₂) : L₁ → L₂) :=\n  e.to_linear_equiv.surjective\n#align surjective surjective\n\n",
 "sub_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem sub_lie : «expr⁅ , ⁆» (x - y) m = «expr⁅ , ⁆» x m - «expr⁅ , ⁆» y m := by simp [sub_eq_add_neg]\n#align sub_lie sub_lie\n\n",
 "sub_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\ntheorem sub_apply (f g : «expr →ₗ⁅ , ⁆ » M R L N) (m : M) : (f - g) m = f m - g m :=\n  rfl\n#align sub_apply sub_apply\n\n",
 "smul_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem smul_lie : «expr⁅ , ⁆» («expr • » t x) m = «expr • » t («expr⁅ , ⁆» x m) :=\n  lie_module.smul_lie t x m\n#align smul_lie smul_lie\n\n",
 "smul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_apply (t : R) (f : «expr →ₗ⁅ , ⁆ » M R L N) (m : M) : («expr • » t f) m = «expr • » t (f m) :=\n  rfl\n#align smul_apply smul_apply\n\n",
 "self_trans_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem self_trans_symm (e : «expr ≃ₗ⁅ , ⁆ » M R L N) : e.trans e.symm = refl :=\n  ext _ _ e.symm_apply_apply\n#align self_trans_symm self_trans_symm\n\n",
 "refl_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ ⁆ » -/\n@[simp]\ntheorem refl_symm : (refl : «expr ≃ₗ⁅ ⁆ » L₁ R L₁).symm = refl :=\n  rfl\n#align refl_symm refl_symm\n\n",
 "refl_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem refl_apply (m : M) : (refl : «expr ≃ₗ⁅ , ⁆ » M R L M) m = m :=\n  rfl\n#align refl_apply refl_apply\n\n",
 "one_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem one_apply (m : M) : (1 : «expr ≃ₗ⁅ , ⁆ » M R L M) m = m :=\n  rfl\n#align one_apply one_apply\n\n",
 "nsmul_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem nsmul_lie (n : ℕ) : «expr⁅ , ⁆» («expr • » n x) m = «expr • » n («expr⁅ , ⁆» x m) :=\n  AddMonoidHom.map_nsmul ⟨fun x : L => «expr⁅ , ⁆» x m, zero_lie m, fun _ _ => add_lie _ _ _⟩ _ _\n#align nsmul_lie nsmul_lie\n\n",
 "nsmul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem nsmul_apply (n : ℕ) (f : «expr →ₗ⁅ , ⁆ » M R L N) (m : M) : («expr • » n f) m = «expr • » n (f m) :=\n  rfl\n#align nsmul_apply nsmul_apply\n\n",
 "neg_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem neg_lie : «expr⁅ , ⁆» (-x) m = -«expr⁅ , ⁆» x m :=\n  by\n  rw [← sub_eq_zero, sub_neg_eq_add, ← add_lie]\n  simp\n#align neg_lie neg_lie\n\n",
 "neg_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\ntheorem neg_apply (f : «expr →ₗ⁅ , ⁆ » M R L N) (m : M) : (-f) m = -f m :=\n  rfl\n#align neg_apply neg_apply\n\n",
 "mk_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem mk_coe (f : «expr →ₗ⁅ , ⁆ » M R L N) (h) : (⟨f, h⟩ : «expr →ₗ⁅ , ⁆ » M R L N) = f :=\n  by\n  ext\n  rfl\n#align mk_coe mk_coe\n\n",
 "map_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n#print map_zero /-\n@[simp]\ntheorem map_zero (f : «expr →ₗ⁅ , ⁆ » M R L N) : f 0 = 0 :=\n  linear_map.map_zero (f : «expr →ₗ[ ] » M R N)\n#align map_zero map_zero\n-/\n\n",
 "map_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n#print map_sub /-\n@[simp]\ntheorem map_sub (f : «expr →ₗ⁅ , ⁆ » M R L N) (x y : M) : f (x - y) = f x - f y :=\n  linear_map.map_sub (f : «expr →ₗ[ ] » M R N) x y\n#align map_sub map_sub\n-/\n\n",
 "map_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem map_smul (f : «expr →ₗ⁅ , ⁆ » M R L N) (c : R) (x : M) : f («expr • » c x) = «expr • » c (f x) :=\n  linear_map.map_smul (f : «expr →ₗ[ ] » M R N) c x\n#align map_smul map_smul\n\n",
 "map_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n#print map_neg /-\n@[simp]\ntheorem map_neg (f : «expr →ₗ⁅ , ⁆ » M R L N) (x : M) : f (-x) = -f x :=\n  linear_map.map_neg (f : «expr →ₗ[ ] » M R N) x\n#align map_neg map_neg\n-/\n\n",
 "map_lie₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem map_lie₂ (f : «expr →ₗ⁅ , ⁆ » M R L («expr →ₗ[ ] » N R P)) (x : L) (m : M) (n : N) :\n    «expr⁅ , ⁆» x (f m n) = f («expr⁅ , ⁆» x m) n + f m («expr⁅ , ⁆» x n) := by\n  simp only [sub_add_cancel, map_lie, lie_hom.lie_apply]\n#align map_lie₂ map_lie₂\n\n",
 "map_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem map_lie (f : «expr →ₗ⁅ , ⁆ » M R L N) (x : L) (m : M) : f («expr⁅ , ⁆» x m) = «expr⁅ , ⁆» x (f m) :=\n  lie_module_hom.map_lie' f\n#align map_lie map_lie\n\n",
 "map_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n#print map_add /-\n@[simp]\ntheorem map_add (f : «expr →ₗ⁅ , ⁆ » M R L N) (x y : M) : f (x + y) = f x + f y :=\n  linear_map.map_add (f : «expr →ₗ[ ] » M R N) x y\n#align map_add map_add\n-/\n\n",
 "lie_zsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_zsmul (a : ℤ) : «expr⁅ , ⁆» x («expr • » a m) = «expr • » a («expr⁅ , ⁆» x m) :=\n  AddMonoidHom.map_zsmul ⟨fun m : M => «expr⁅ , ⁆» x m, lie_zero x, fun _ _ => lie_add _ _ _⟩ _ _\n#align lie_zsmul lie_zsmul\n\n",
 "lie_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_zero : «expr⁅ , ⁆» x 0 = (0 : M) :=\n  (AddMonoidHom.mk' _ (lie_add x)).map_zero\n#align lie_zero lie_zero\n\n",
 "lie_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_sub : «expr⁅ , ⁆» x (m - n) = «expr⁅ , ⁆» x m - «expr⁅ , ⁆» x n := by simp [sub_eq_add_neg]\n#align lie_sub lie_sub\n\n",
 "lie_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_smul : «expr⁅ , ⁆» x («expr • » t m) = «expr • » t («expr⁅ , ⁆» x m) :=\n  lie_module.lie_smul t x m\n#align lie_smul lie_smul\n\n",
 "lie_skew":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_skew : -«expr⁅ , ⁆» y x = «expr⁅ , ⁆» x y :=\n  by\n  have h : «expr⁅ , ⁆» (x + y) x + «expr⁅ , ⁆» (x + y) y = 0 := by rw [← lie_add]; apply lie_self\n  simpa [neg_eq_iff_add_eq_zero] using h\n#align lie_skew lie_skew\n\n",
 "lie_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_self : «expr⁅ , ⁆» x x = 0 :=\n  lie_ring.lie_self x\n#align lie_self lie_self\n\n",
 "lie_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_nsmul (n : ℕ) : «expr⁅ , ⁆» x («expr • » n m) = «expr • » n («expr⁅ , ⁆» x m) :=\n  AddMonoidHom.map_nsmul ⟨fun m : M => «expr⁅ , ⁆» x m, lie_zero x, fun _ _ => lie_add _ _ _⟩ _ _\n#align lie_nsmul lie_nsmul\n\n",
 "lie_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_neg : «expr⁅ , ⁆» x (-m) = -«expr⁅ , ⁆» x m :=\n  by\n  rw [← sub_eq_zero, sub_neg_eq_add, ← lie_add]\n  simp\n#align lie_neg lie_neg\n\n",
 "lie_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_lie : «expr⁅ , ⁆» («expr⁅ , ⁆» x y) m = «expr⁅ , ⁆» x («expr⁅ , ⁆» y m) - «expr⁅ , ⁆» y («expr⁅ , ⁆» x m) :=\n  by rw [leibniz_lie, add_sub_cancel]\n#align lie_lie lie_lie\n\n",
 "lie_jacobi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem lie_jacobi :\n    «expr⁅ , ⁆» x («expr⁅ , ⁆» y z) + «expr⁅ , ⁆» y («expr⁅ , ⁆» z x) + «expr⁅ , ⁆» z («expr⁅ , ⁆» x y) = 0 :=\n  by\n  rw [← neg_neg («expr⁅ , ⁆» x y), lie_neg z, lie_skew y x, ← lie_skew, lie_lie]\n  abel\n#align lie_jacobi lie_jacobi\n\n",
 "lie_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_hom.lie_apply (f : «expr →ₗ[ ] » M R N) (x : L) (m : M) :\n    («expr⁅ , ⁆» x f) m = «expr⁅ , ⁆» x (f m) - f («expr⁅ , ⁆» x m) :=\n  rfl\n#align lie_hom.lie_apply lie_hom.lie_apply\n\n",
 "lie_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_add : «expr⁅ , ⁆» x (m + n) = «expr⁅ , ⁆» x m + «expr⁅ , ⁆» x n :=\n  lie_ring_module.lie_add x m n\n#align lie_add lie_add\n\n",
 "leibniz_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem leibniz_lie :\n    «expr⁅ , ⁆» x («expr⁅ , ⁆» y m) = «expr⁅ , ⁆» («expr⁅ , ⁆» x y) m + «expr⁅ , ⁆» y («expr⁅ , ⁆» x m) :=\n  lie_ring_module.leibniz_lie x y m\n#align leibniz_lie leibniz_lie\n\n",
 "injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\ntheorem injective (e : «expr ≃ₗ⁅ , ⁆ » M R L N) : function.injective e :=\n  e.to_equiv.injective\n#align injective injective\n\n",
 "id_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\n@[simp]\ntheorem id_comp (f : «expr →ₗ⁅ ⁆ » L₁ R L₂) : (id : «expr →ₗ⁅ ⁆ » L₂ R L₂).comp f = f :=\n  by\n  ext\n  rfl\n#align id_comp id_comp\n\n",
 "id_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\ntheorem id_apply (x : M) : (id : «expr →ₗ⁅ , ⁆ » M R L M) x = x :=\n  rfl\n#align id_apply id_apply\n\n",
 "ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\ntheorem ext_iff {f g : «expr →ₗ⁅ , ⁆ » M R L N} : f = g ↔ ∀ m, f m = g m :=\n  ⟨by\n    rintro rfl m\n    rfl, ext⟩\n#align ext_iff ext_iff\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[ext]\ntheorem ext (e₁ e₂ : «expr ≃ₗ⁅ , ⁆ » M R L N) (h : ∀ m, e₁ m = e₂ m) : e₁ = e₂ :=\n  to_equiv_injective (equiv.ext h)\n#align ext ext\n\n",
 "congr_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n#print congr_fun /-\ntheorem congr_fun {f g : «expr →ₗ⁅ , ⁆ » M R L N} (h : f = g) (x : M) : f x = g x :=\n  h ▸ rfl\n#align congr_fun congr_fun\n-/\n\n",
 "comp_lie_hom_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem lie_ring_module.comp_lie_hom_apply (x : L₁) (m : M) :\n    haveI := lie_ring_module.comp_lie_hom M f\n    «expr⁅ , ⁆» x m = «expr⁅ , ⁆» (f x) m :=\n  rfl\n#align lie_ring_module.comp_lie_hom_apply lie_ring_module.comp_lie_hom_apply\n\n",
 "comp_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\n@[simp]\ntheorem comp_id (f : «expr →ₗ⁅ ⁆ » L₁ R L₂) : f.comp (id : «expr →ₗ⁅ ⁆ » L₁ R L₁) = f :=\n  by\n  ext\n  rfl\n#align comp_id comp_id\n\n",
 "comp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\ntheorem comp_apply (f : «expr →ₗ⁅ , ⁆ » N R L P) (g : «expr →ₗ⁅ , ⁆ » M R L N) (m : M) : f.comp g m = f (g m) :=\n  rfl\n#align comp_apply comp_apply\n\n",
 "coe_zsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[norm_cast, simp]\ntheorem coe_zsmul (z : ℤ) (f : «expr →ₗ⁅ , ⁆ » M R L N) : «expr⇑ » («expr • » z f) = «expr • » z f :=\n  rfl\n#align coe_zsmul coe_zsmul\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n@[norm_cast, simp]\ntheorem coe_zero : ((0 : «expr →ₗ⁅ , ⁆ » M R L N) : M → N) = 0 :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_to_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp, norm_cast]\ntheorem coe_to_linear_map (f : «expr →ₗ⁅ , ⁆ » M R L N) : ((f : «expr →ₗ[ ] » M R N) : M → N) = f :=\n  rfl\n#align coe_to_linear_map coe_to_linear_map\n\n",
 "coe_to_linear_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n@[simp, norm_cast]\ntheorem coe_to_linear_equiv (e : «expr ≃ₗ⁅ , ⁆ » M R L N) : ((e : «expr ≃ₗ[ ] » M R N) : M → N) = e :=\n  rfl\n#align coe_to_linear_equiv coe_to_linear_equiv\n\n",
 "coe_to_lie_module_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n@[simp, norm_cast]\ntheorem coe_to_lie_module_hom (e : «expr ≃ₗ⁅ , ⁆ » M R L N) : ((e : «expr →ₗ⁅ , ⁆ » M R L N) : M → N) = e :=\n  rfl\n#align coe_to_lie_module_hom coe_to_lie_module_hom\n\n",
 "coe_to_lie_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\n@[simp, norm_cast]\ntheorem coe_to_lie_hom (e : «expr ≃ₗ⁅ ⁆ » L₁ R L₂) : ((e : «expr →ₗ⁅ ⁆ » L₁ R L₂) : L₁ → L₂) = e :=\n  rfl\n#align coe_to_lie_hom coe_to_lie_hom\n\n",
 "coe_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[norm_cast, simp]\ntheorem coe_sub (f g : «expr →ₗ⁅ , ⁆ » M R L N) : «expr⇑ » (f - g) = f - g :=\n  rfl\n#align coe_sub coe_sub\n\n",
 "coe_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[norm_cast, simp]\ntheorem coe_smul (t : R) (f : «expr →ₗ⁅ , ⁆ » M R L N) : «expr⇑ » («expr • » t f) = «expr • » t f :=\n  rfl\n#align coe_smul coe_smul\n\n",
 "coe_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\n@[simp]\ntheorem coe_one : ((1 : «expr →ₗ⁅ ⁆ » L₁ R L₁) : L₁ → L₁) = _root_.id :=\n  rfl\n#align coe_one coe_one\n\n",
 "coe_nsmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[norm_cast, simp]\ntheorem coe_nsmul (n : ℕ) (f : «expr →ₗ⁅ , ⁆ » M R L N) : «expr⇑ » («expr • » n f) = «expr • » n f :=\n  rfl\n#align coe_nsmul coe_nsmul\n\n",
 "coe_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[norm_cast, simp]\ntheorem coe_neg (f : «expr →ₗ⁅ , ⁆ » M R L N) : «expr⇑ » (-f) = -f :=\n  rfl\n#align coe_neg coe_neg\n\n",
 "coe_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem coe_mk (f : «expr →ₗ⁅ , ⁆ » M R L N) (inv_fun h₁ h₂) :\n    ((⟨f, inv_fun, h₁, h₂⟩ : «expr ≃ₗ⁅ , ⁆ » M R L N) : M → N) = f :=\n  rfl\n#align coe_mk coe_mk\n\n",
 "coe_linear_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[norm_cast, simp]\ntheorem coe_linear_mk (f : «expr →ₗ[ ] » M R N) (h) : ((⟨f, h⟩ : «expr →ₗ⁅ , ⁆ » M R L N) : «expr →ₗ[ ] » M R N) = f :=\n  by\n  ext\n  rfl\n#align coe_linear_mk coe_linear_mk\n\n",
 "coe_linear_map_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[norm_cast, simp]\ntheorem coe_linear_map_comp (f : «expr →ₗ⁅ , ⁆ » N R L P) (g : «expr →ₗ⁅ , ⁆ » M R L N) :\n    (f.comp g : «expr →ₗ[ ] » M R P) = (f : «expr →ₗ[ ] » N R P).comp (g : «expr →ₗ[ ] » M R N) :=\n  rfl\n#align coe_linear_map_comp coe_linear_map_comp\n\n",
 "coe_linear_equiv_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\ntheorem coe_linear_equiv_injective : injective (coe : «expr ≃ₗ⁅ ⁆ » L₁ R L₂ → «expr ≃ₗ[ ] » L₁ R L₂) :=\n  by\n  intro f₁ f₂ h; cases f₁; cases f₂; dsimp at h; simp only at h\n  congr ; exacts[lie_hom.coe_injective h.1, h.2]\n#align coe_linear_equiv_injective coe_linear_equiv_injective\n\n",
 "coe_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\ntheorem coe_injective : @function.injective («expr →ₗ⁅ , ⁆ » M R L N) (M → N) coe_fn :=\n  by\n  rintro ⟨⟨f, _⟩⟩ ⟨⟨g, _⟩⟩ ⟨h⟩\n  congr\n#align coe_injective coe_injective\n\n",
 "coe_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem coe_id : ((id : «expr →ₗ⁅ , ⁆ » M R L M) : M → M) = _root_.id :=\n  rfl\n#align coe_id coe_id\n\n",
 "coe_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n@[norm_cast, simp]\ntheorem coe_comp (f : «expr →ₗ⁅ , ⁆ » N R L P) (g : «expr →ₗ⁅ , ⁆ » M R L N) : (f.comp g : M → P) = f ∘ g :=\n  rfl\n#align coe_comp coe_comp\n\n",
 "coe_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[norm_cast, simp]\ntheorem coe_add (f g : «expr →ₗ⁅ , ⁆ » M R L N) : «expr⇑ » (f + g) = f + g :=\n  rfl\n#align coe_add coe_add\n\n",
 "bijective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ ⁆ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ ⁆ » -/\nprotected theorem bijective (e : «expr ≃ₗ⁅ ⁆ » L₁ R L₂) : function.bijective ((e : «expr →ₗ⁅ ⁆ » L₁ R L₂) : L₁ → L₂) :=\n  e.to_linear_equiv.bijective\n#align bijective bijective\n\n",
 "apply_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ⁅ , ⁆ » -/\n@[simp]\ntheorem apply_symm_apply (e : «expr ≃ₗ⁅ , ⁆ » M R L N) : ∀ x, e (e.symm x) = x :=\n  e.to_linear_equiv.apply_symm_apply\n#align apply_symm_apply apply_symm_apply\n\n",
 "add_lie":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/-\nCopyright (c) 2019 Oliver Nash. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Oliver Nash\n-/\n@[simp]\ntheorem add_lie : «expr⁅ , ⁆» (x + y) m = «expr⁅ , ⁆» x m + «expr⁅ , ⁆» y m :=\n  lie_ring_module.add_lie x y m\n#align add_lie add_lie\n\n",
 "add_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ⁅ , ⁆ » -/\ntheorem add_apply (f g : «expr →ₗ⁅ , ⁆ » M R L N) (m : M) : (f + g) m = f m + g m :=\n  rfl\n#align add_apply add_apply\n\n"}