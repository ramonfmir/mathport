{"skew_adjoint_matrices_lie_subalgebra_equiv_transpose_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n@[simp]\ntheorem skew_adjoint_matrices_lie_subalgebra_equiv_transpose_apply {m : Type w} [DecidableEq m] [Fintype m]\n    (e : «expr ≃ₐ[ ] » (Matrix n n R) R (Matrix m m R)) (h : ∀ A, matrix.transpose (e A) = e (matrix.transpose A))\n    (A : skew_adjoint_matrices_lie_subalgebra J) :\n    (skew_adjoint_matrices_lie_subalgebra_equiv_transpose J e h A : Matrix m m R) = e A :=\n  rfl\n#align skew_adjoint_matrices_lie_subalgebra_equiv_transpose_apply skew_adjoint_matrices_lie_subalgebra_equiv_transpose_apply\n\n",
 "skew_adjoint_matrices_lie_subalgebra_equiv_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem skew_adjoint_matrices_lie_subalgebra_equiv_apply (P : Matrix n n R) (h : Invertible P)\n    (A : skew_adjoint_matrices_lie_subalgebra J) :\n    ↑(skew_adjoint_matrices_lie_subalgebra_equiv J P h A) = matrix.mul (matrix.mul P⁻¹ ↑A) P := by\n  simp [skew_adjoint_matrices_lie_subalgebra_equiv]\n#align skew_adjoint_matrices_lie_subalgebra_equiv_apply skew_adjoint_matrices_lie_subalgebra_equiv_apply\n\n",
 "skew_adjoint_lie_subalgebra_equiv_symm_apply":
 "@[simp]\ntheorem skew_adjoint_lie_subalgebra_equiv_symm_apply (f : skew_adjoint_lie_subalgebra B) :\n    ↑((skew_adjoint_lie_subalgebra_equiv B e).symm f) = e.symm.lie_conj f := by simp [skew_adjoint_lie_subalgebra_equiv]\n#align skew_adjoint_lie_subalgebra_equiv_symm_apply skew_adjoint_lie_subalgebra_equiv_symm_apply\n\n",
 "skew_adjoint_lie_subalgebra_equiv_apply":
 "@[simp]\ntheorem skew_adjoint_lie_subalgebra_equiv_apply (f : skew_adjoint_lie_subalgebra (B.comp ↑e ↑e)) :\n    ↑(skew_adjoint_lie_subalgebra_equiv B e f) = e.lie_conj f := by simp [skew_adjoint_lie_subalgebra_equiv]\n#align skew_adjoint_lie_subalgebra_equiv_apply skew_adjoint_lie_subalgebra_equiv_apply\n\n",
 "mem_skew_adjoint_matrices_lie_subalgebra_unit_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem mem_skew_adjoint_matrices_lie_subalgebra_unit_smul (u : «expr ˣ» R) (J A : Matrix n n R) :\n    A ∈ skew_adjoint_matrices_lie_subalgebra («expr • » u J) ↔ A ∈ skew_adjoint_matrices_lie_subalgebra J :=\n  by\n  change A ∈ skew_adjoint_matrices_submodule («expr • » u J) ↔ A ∈ skew_adjoint_matrices_submodule J\n  simp only [mem_skew_adjoint_matrices_submodule, matrix.is_skew_adjoint, matrix.is_adjoint_pair]\n  constructor <;> intro h\n  · simpa using congr_arg (fun B => «expr • » u⁻¹ B) h\n  · simp [h]\n#align mem_skew_adjoint_matrices_lie_subalgebra_unit_smul mem_skew_adjoint_matrices_lie_subalgebra_unit_smul\n\n",
 "mem_skew_adjoint_matrices_lie_subalgebra":
 "@[simp]\ntheorem mem_skew_adjoint_matrices_lie_subalgebra (A : Matrix n n R) :\n    A ∈ skew_adjoint_matrices_lie_subalgebra J ↔ A ∈ skew_adjoint_matrices_submodule J :=\n  iff.rfl\n#align mem_skew_adjoint_matrices_lie_subalgebra mem_skew_adjoint_matrices_lie_subalgebra\n\n",
 "lie_transpose":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem matrix.lie_transpose (A B : Matrix n n R) :\n    matrix.transpose («expr⁅ , ⁆» A B) = «expr⁅ , ⁆» (matrix.transpose B) (matrix.transpose A) :=\n  show\n    matrix.transpose (A * B - B * A) = matrix.transpose B * matrix.transpose A - matrix.transpose A * matrix.transpose B\n    by simp\n#align matrix.lie_transpose matrix.lie_transpose\n\n",
 "is_skew_adjoint_bracket":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem matrix.is_skew_adjoint_bracket (A B : Matrix n n R) (hA : A ∈ skew_adjoint_matrices_submodule J)\n    (hB : B ∈ skew_adjoint_matrices_submodule J) : «expr⁅ , ⁆» A B ∈ skew_adjoint_matrices_submodule J :=\n  by\n  simp only [mem_skew_adjoint_matrices_submodule] at *\n  change matrix.mul (matrix.transpose («expr⁅ , ⁆» A B)) J = matrix.mul J (-«expr⁅ , ⁆» A B);\n  change matrix.mul (matrix.transpose A) J = matrix.mul J (-A) at hA;\n  change matrix.mul (matrix.transpose B) J = matrix.mul J (-B) at hB\n  simp only [← Matrix.mul_eq_mul] at *\n  rw [matrix.lie_transpose, lie_ring.of_associative_ring_bracket, lie_ring.of_associative_ring_bracket, sub_mul,\n    mul_assoc, mul_assoc, hA, hB, ← mul_assoc, ← mul_assoc, hA, hB]\n  noncomm_ring\n#align matrix.is_skew_adjoint_bracket matrix.is_skew_adjoint_bracket\n\n"}