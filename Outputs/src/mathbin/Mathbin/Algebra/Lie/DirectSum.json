{"lie_of_of_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem lie_of_of_ne [DecidableEq ι] {i j : ι} (hij : j ≠ i) (x : L i) (y : L j) :\n    «expr⁅ , ⁆» (of L i x) (of L j y) = 0 := by\n  apply lie_algebra_ext R ι L; intro k\n  rw [LieHom.map_lie]\n  simp only [component, of, lapply_apply, single_add_hom_apply, lie_algebra_component_apply, single_apply, zero_apply]\n  by_cases hik : i = k\n  · simp only [dif_neg, not_false_iff, lie_zero, hik.symm, hij]\n  · simp only [dif_neg, not_false_iff, zero_lie, hik]\n#align lie_of_of_ne lie_of_of_ne\n\n",
 "lie_of_of_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem lie_of_of_eq [DecidableEq ι] {i j : ι} (hij : j = i) (x : L i) (y : L j) :\n    «expr⁅ , ⁆» (of L i x) (of L j y) = of L i («expr⁅ , ⁆» x (hij.rec_on y)) :=\n  by\n  have : of L j y = of L i (hij.rec_on y) := eq.drec (Eq.refl _) hij\n  rw [this, ← lie_algebra_of_apply R ι L i («expr⁅ , ⁆» x (hij.rec_on y)), LieHom.map_lie, lie_algebra_of_apply,\n    lie_algebra_of_apply]\n#align lie_of_of_eq lie_of_of_eq\n\n",
 "lie_of":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem lie_of [DecidableEq ι] {i j : ι} (x : L i) (y : L j) :\n    «expr⁅ , ⁆» (of L i x) (of L j y) =\n      if hij : j = i then lie_algebra_of R ι L i («expr⁅ , ⁆» x (hij.rec_on y)) else 0 :=\n  by\n  by_cases hij : j = i\n  · simp only [lie_of_of_eq R ι L hij x y, hij, dif_pos, not_false_iff, lie_algebra_of_apply]\n  · simp only [lie_of_of_ne R ι L hij x y, hij, dif_neg, not_false_iff]\n#align lie_of lie_of\n\n",
 "lie_module_bracket_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/-\nCopyright (c) 2020 Oliver Nash. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Oliver Nash\n-/\n@[simp]\ntheorem lie_module_bracket_apply (x : L)\n    (m : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (M i))\n    (i : ι) : («expr⁅ , ⁆» x m) i = «expr⁅ , ⁆» x (m i) :=\n  mapRange_apply _ _ m i\n#align lie_module_bracket_apply lie_module_bracket_apply\n\n",
 "lie_algebra_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n@[ext]\ntheorem lie_algebra_ext\n    {x y : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (L i)}\n    (h : ∀ i, lie_algebra_component R ι L i x = lie_algebra_component R ι L i y) : x = y :=\n  Dfinsupp.ext h\n#align lie_algebra_ext lie_algebra_ext\n\n",
 "bracket_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem bracket_apply\n    (x y : direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (L i))\n    (i : ι) : («expr⁅ , ⁆» x y) i = «expr⁅ , ⁆» (x i) (y i) :=\n  zipWith_apply _ _ x y i\n#align bracket_apply bracket_apply\n\n"}