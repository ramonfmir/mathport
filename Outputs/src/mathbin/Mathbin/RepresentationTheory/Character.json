{"char_tensor":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/-- The character is multiplicative under the tensor product. -/\n@[simp]\ntheorem char_tensor (V W : fdRep k G) : (tensor_iso V W).character = V.character * W.character :=\n  by\n  ext g\n  convert trace_tensor_product' (V.ρ g) (W.ρ g)\n#align char_tensor char_tensor\n\n",
 "char_orthonormal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/-- Orthogonality of characters for irreducible representations of finite group over an\nalgebraically closed field whose characteristic doesn't divide the order of the group. -/\ntheorem char_orthonormal (V W : fdRep k G) [simple V] [simple W] :\n    «expr • » ((«expr⅟») (fintype.card G : k))\n        (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (V.character g * W.character g⁻¹)) =\n      if nonempty («expr ≅ » V W) then ↑1 else ↑0 :=\n  by\n  -- First, we can rewrite the summand `V.character g * W.character g⁻¹` as the character\n  -- of the representation `V ⊗ W* ≅ Hom(W, V)` applied to `g`.\n  conv in\n    V.character _ * W.character\n        _ =>\n    rw [mul_comm, ← char_dual, ← pi.mul_apply, ← char_tensor]\n    rw [char_iso (fdRep.dual_tensor_iso_lin_hom W.ρ V)]\n  -- The average over the group of the character of a representation equals the dimension of the\n  -- space of invariants.\n  rw [average_char_eq_finrank_invariants]\n  rw [show (of (lin_hom W.ρ V.ρ)).ρ = lin_hom W.ρ V.ρ from fdRep.of_ρ (lin_hom W.ρ V.ρ)]\n  -- The space of invariants of `Hom(W, V)` is the subspace of `G`-equivariant linear maps,\n  -- `Hom_G(W, V)`.\n  rw [(lin_hom.invariants_equiv_fdRep_hom W V).finrank_eq]\n  -- By Schur's Lemma, the dimension of `Hom_G(W, V)` is `1` is `V ≅ W` and `0` otherwise.\n  rw_mod_cast [finrank_hom_simple_simple W V, iso.nonempty_iso_symm]\n#align char_orthonormal char_orthonormal\n\n",
 "char_one":
 "@[simp]\ntheorem char_one (V : fdRep k G) : V.character 1 = finite_dimensional.finrank k V := by\n  simp only [character, map_one, trace_one]\n#align char_one char_one\n\n",
 "char_mul_comm":
 "/-\nCopyright (c) 2022 Antoine Labelle. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Antoine Labelle\n-/\ntheorem char_mul_comm (V : fdRep k G) (g : G) (h : G) : V.character (h * g) = V.character (g * h) := by\n  simp only [trace_mul_comm, character, map_mul]\n#align char_mul_comm char_mul_comm\n\n",
 "char_lin_hom":
 "@[simp]\ntheorem char_lin_hom (V W : fdRep k G) (g : G) : (of (lin_hom V.ρ W.ρ)).character g = V.character g⁻¹ * W.character g :=\n  by rw [← char_iso (dual_tensor_iso_lin_hom _ _), char_tensor, pi.mul_apply, char_dual]\n#align char_lin_hom char_lin_hom\n\n",
 "char_iso":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/-- The character of isomorphic representations is the same. -/\ntheorem char_iso {V W : fdRep k G} (i : «expr ≅ » V W) : V.character = W.character :=\n  by\n  ext g\n  simp only [character, fdRep.iso.conj_ρ i]\n  exact (trace_conj' (V.ρ g) _).symm\n#align char_iso char_iso\n\n",
 "char_dual":
 "@[simp]\ntheorem char_dual (V : fdRep k G) (g : G) : (of (dual V.ρ)).character g = V.character g⁻¹ :=\n  trace_transpose' (V.ρ g⁻¹)\n#align char_dual char_dual\n\n",
 "char_conj":
 "/-- The character of a representation is constant on conjugacy classes. -/\n@[simp]\ntheorem char_conj (V : fdRep k G) (g : G) (h : G) : V.character (h * g * h⁻¹) = V.character g := by\n  rw [char_mul_comm, inv_mul_cancel_left]\n#align char_conj char_conj\n\n",
 "average_char_eq_finrank_invariants":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem average_char_eq_finrank_invariants (V : fdRep k G) :\n    «expr • » ((«expr⅟») (fintype.card G : k))\n        (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          (V.character g)) =\n      finrank k (invariants V.ρ) :=\n  by\n  rw [← (is_proj_average_map V.ρ).trace]\n  simp [character, group_algebra.average, _root_.map_sum]\n#align average_char_eq_finrank_invariants average_char_eq_finrank_invariants\n\n"}