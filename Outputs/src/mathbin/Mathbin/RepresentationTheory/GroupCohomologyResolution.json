{"ε_to_single₀_comp_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem ε_to_single₀_comp_eq :\n    «expr ≫ » (((forget₂ _ (Module.{u} k)).map_homological_complex _).map (ε_to_single₀ k G))\n        ((chain_complex.single₀_map_homological_complex _).hom.app _) =\n      (forget₂_to_Module_homotopy_equiv k G).hom :=\n  by\n  refine' chain_complex.to_single₀_ext _ _ _\n  dsimp\n  rw [category.comp_id]\n  exact (forget₂_to_Module_homotopy_equiv_f_0_eq k G).symm\n#align ε_to_single₀_comp_eq ε_to_single₀_comp_eq\n\n",
 "to_tensor_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ⁺¹» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem to_tensor_single (f : «exprGⁿ⁺¹») (m : k) :\n    (to_tensor k G n).hom (single f m) = «expr ⊗ₜ » (single (f 0) m) (single (fun i => (f i)⁻¹ * f i.succ) 1) :=\n  to_tensor_aux_single _ _\n#align to_tensor_single to_tensor_single\n\n",
 "to_tensor_aux_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ⁺¹» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/-\nCopyright (c) 2022 Amelia Livingston. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Amelia Livingston\n-/\ntheorem to_tensor_aux_single (f : «exprGⁿ⁺¹») (m : k) :\n    to_tensor_aux k G n (single f m) = «expr ⊗ₜ » (single (f 0) m) (single (fun i => (f i)⁻¹ * f i.succ) 1) :=\n  by\n  simp only [to_tensor_aux, lift_apply, sum_single_index, tensor_product.smul_tmul']\n  · simp\n#align to_tensor_aux_single to_tensor_aux_single\n\n",
 "to_tensor_aux_right_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ» -/\ntheorem to_tensor_aux_right_inv (x : tensor_product («expr →₀ » G k) k («expr →₀ » («exprGⁿ») k)) :\n    to_tensor_aux _ _ _ (of_tensor_aux _ _ _ x) = x :=\n  by\n  refine' tensor_product.induction_on x (by simp) (fun y z => _) fun z w hz hw => by simp [hz, hw]\n  rw [← finsupp.sum_single y, finsupp.sum, tensor_product.sum_tmul]\n  simp only [finset.smul_sum, linear_map.map_sum]\n  refine' finset.sum_congr rfl fun f hf => _\n  simp only [of_tensor_aux_single, finsupp.lift_apply, finsupp.smul_single', linear_map.map_finsupp_sum,\n    to_tensor_aux_single, fin.partial_prod_right_inv]\n  dsimp\n  simp only [fin.partial_prod_zero, mul_one]\n  conv_rhs => rw [← finsupp.sum_single z, finsupp.sum, tensor_product.tmul_sum]\n  exact\n    finset.sum_congr rfl fun g hg =>\n      show «expr ⊗ₜ » _ _ = _ by rw [← finsupp.smul_single', tensor_product.smul_tmul, finsupp.smul_single_one]\n#align to_tensor_aux_right_inv to_tensor_aux_right_inv\n\n",
 "to_tensor_aux_of_mul_action":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ⁺¹» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ⁺¹» -/\ntheorem to_tensor_aux_of_mul_action (g : G) (x : «exprGⁿ⁺¹») :\n    to_tensor_aux k G n (of_mul_action k G («exprGⁿ⁺¹») g (single x 1)) =\n      tensor_product.map (of_mul_action k G G g) 1 (to_tensor_aux k G n (single x 1)) :=\n  by simp [of_mul_action_def, to_tensor_aux_single, mul_assoc, inv_mul_cancel_left]\n#align to_tensor_aux_of_mul_action to_tensor_aux_of_mul_action\n\n",
 "to_tensor_aux_left_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ⁺¹» -/\ntheorem to_tensor_aux_left_inv (x : «expr →₀ » («exprGⁿ⁺¹») k) : of_tensor_aux _ _ _ (to_tensor_aux _ _ _ x) = x :=\n  by\n  refine'\n    linear_map.ext_iff.1\n      (@finsupp.lhom_ext _ _ _ k _ _ _ _ _ (linear_map.comp (of_tensor_aux _ _ _) (to_tensor_aux _ _ _)) linear_map.id\n        fun x y => _)\n      x\n  dsimp\n  rw [to_tensor_aux_single x y, of_tensor_aux_single, finsupp.lift_apply, finsupp.sum_single_index, one_smul,\n    fin.partial_prod_left_inv]\n  · rw [zero_smul]\n#align to_tensor_aux_left_inv to_tensor_aux_left_inv\n\n",
 "quasi_iso_of_forget₂_ε_to_single₀":
 "theorem quasi_iso_of_forget₂_ε_to_single₀ :\n    quasi_iso (((forget₂ _ (Module.{u} k)).map_homological_complex _).map (ε_to_single₀ k G)) :=\n  by\n  have h : quasi_iso (forget₂_to_Module_homotopy_equiv k G).hom := homotopy_equiv.to_quasi_iso _\n  rw [← ε_to_single₀_comp_eq k G] at h\n  haveI := h\n  exact quasi_iso_of_comp_right _ ((chain_complex.single₀_map_homological_complex _).hom.app _)\n#align quasi_iso_of_forget₂_ε_to_single₀ quasi_iso_of_forget₂_ε_to_single₀\n\n",
 "of_tensor_single'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem of_tensor_single' (g : «expr →₀ » G k) (x : «exprGⁿ») (m : k) :\n    (of_tensor k G n).hom («expr ⊗ₜ » g (single x m)) =\n      finsupp.lift _ k G (fun a => single («expr • » a (partial_prod x)) m) g :=\n  by simp [of_tensor, of_tensor_aux]\n#align of_tensor_single' of_tensor_single'\n\n",
 "of_tensor_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ⁺¹» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem of_tensor_single (g : G) (m : k) (x : «expr →₀ » («exprGⁿ») k) :\n    (of_tensor k G n).hom («expr ⊗ₜ » (single g m) x) =\n      finsupp.lift (Rep.of_mul_action k G («exprGⁿ⁺¹»)) k («exprGⁿ») (fun f => single («expr • » g (partial_prod f)) m)\n        x :=\n  of_tensor_aux_single _ _ _\n#align of_tensor_single of_tensor_single\n\n",
 "of_tensor_aux_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ⁺¹» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem of_tensor_aux_single (g : G) (m : k) (x : «expr →₀ » («exprGⁿ») k) :\n    of_tensor_aux k G n («expr ⊗ₜ » (single g m) x) =\n      finsupp.lift («expr →₀ » («exprGⁿ⁺¹») k) k («exprGⁿ») (fun f => single («expr • » g (partial_prod f)) m) x :=\n  by simp [of_tensor_aux, sum_single_index, smul_sum, mul_comm m]\n#align of_tensor_aux_single of_tensor_aux_single\n\n",
 "of_tensor_aux_comm_of_mul_action":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprGⁿ⁺¹» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\ntheorem of_tensor_aux_comm_of_mul_action (g h : G) (x : «exprGⁿ») :\n    of_tensor_aux k G n\n        (tensor_product.map (of_mul_action k G G g) (1 : module.End k («expr →₀ » («exprGⁿ») k))\n          («expr ⊗ₜ » (single h (1 : k)) (single x (1 : k)))) =\n      of_mul_action k G («exprGⁿ⁺¹») g (of_tensor_aux k G n («expr ⊗ₜ » (single h 1) (single x 1))) :=\n  by simp [of_mul_action_def, of_tensor_aux_single, mul_smul]\n#align of_tensor_aux_comm_of_mul_action of_tensor_aux_comm_of_mul_action\n\n",
 "of_mul_action_free":
 "theorem of_mul_action_free : module.free (monoid_algebra k G) (of_mul_action k G (fin (n + 1) → G)).as_module :=\n  module.free.of_basis (of_mul_action_basis k G n)\n#align of_mul_action_free of_mul_action_free\n\n",
 "forget₂_to_Module_homotopy_equiv_f_0_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤_ » -/\n/-- The homotopy equivalence of complexes of `k`-modules between the standard resolution of `k` as\na trivial `G`-representation, and the complex which is `k` at 0 and 0 everywhere else, acts as\n`∑ nᵢgᵢ ↦ ∑ nᵢ : k[G¹] → k` at 0. -/\ntheorem forget₂_to_Module_homotopy_equiv_f_0_eq :\n    (forget₂_to_Module_homotopy_equiv k G).1.f 0 = (forget₂ (Rep k G) _).map (ε k G) :=\n  by\n  show («expr ≫ » (homotopy_equiv.hom _) («expr ≫ » (homotopy_equiv.hom _) (homotopy_equiv.hom _))).f 0 = _\n  simp only [homological_complex.comp_f]\n  convert category.id_comp _\n  · dsimp only [homotopy_equiv.of_iso, comp_forget_augmented_iso, map_alternating_face_map_complex]\n    simp only [iso.symm_hom, eq_to_iso.inv, homological_complex.eq_to_hom_f, eq_to_hom_refl]\n  trans (finsupp.total _ _ _ fun f => (1 : k)).comp ((Module.free k).map (terminal.from _))\n  · dsimp\n    rw [@finsupp.lmap_domain_total (fin 1 → G) k k _ _ _ («expr⊤_ » (Type u)) k _ _ (fun i => (1 : k))\n        (fun i => (1 : k))\n        (terminal.from ((classifying_space_universal_cover G).obj (opposite.op (simplex_category.mk 0))).V)\n        linear_map.id fun i => rfl,\n      linear_map.id_comp]\n    rfl\n  · congr\n    · ext\n      dsimp [homotopy_equiv.of_iso]\n      rw [finsupp.total_single, one_smul, @unique.eq_default _ types.terminal_iso.to_equiv.unique a,\n        finsupp.single_eq_same]\n    · exact @subsingleton.elim _ (@unique.subsingleton _ (limits.unique_to_terminal _)) _ _\n#align forget₂_to_Module_homotopy_equiv_f_0_eq forget₂_to_Module_homotopy_equiv_f_0_eq\n\n",
 "equiv_tensor_inv_def":
 "@[simp]\ntheorem equiv_tensor_inv_def : (equiv_tensor k G n).inv = of_tensor k G n :=\n  rfl\n#align equiv_tensor_inv_def equiv_tensor_inv_def\n\n",
 "equiv_tensor_def":
 "@[simp]\ntheorem equiv_tensor_def : (equiv_tensor k G n).hom = to_tensor k G n :=\n  rfl\n#align equiv_tensor_def equiv_tensor_def\n\n",
 "d_of":
 "@[simp]\ntheorem d_of {G : Type u} {n : ℕ} (c : fin (n + 1) → G) :\n    d k G n (finsupp.single c 1) =\n      finset.univ.sum fun p : fin (n + 1) => finsupp.single (c ∘ p.succ_above) ((-1 : k) ^ (p : ℕ)) :=\n  by simp [d]\n#align d_of d_of\n\n",
 "d_eq":
 "/-- Simpler expression for the differential in the standard resolution of `k` as a\n`G`-representation. It sends `(g₀, ..., gₙ₊₁) ↦ ∑ (-1)ⁱ • (g₀, ..., ĝᵢ, ..., gₙ₊₁)`. -/\ntheorem d_eq (n : ℕ) : ((group_cohomology.resolution k G).d (n + 1) n).hom = d k G (n + 1) :=\n  by\n  ext (x y)\n  dsimp [group_cohomology.resolution]\n  simpa [← @int_cast_smul k, simplicial_object.δ]\n#align d_eq d_eq\n\n",
 "d_comp_ε":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem d_comp_ε : «expr ≫ » ((group_cohomology.resolution k G).d 1 0) (ε k G) = 0 :=\n  by\n  ext1\n  refine' linear_map.ext fun x => _\n  have : «expr ≫ » ((forget₂_to_Module k G).d 1 0) ((forget₂ (Rep k G) (Module.{u} k)).map (ε k G)) = 0 := by\n    rw [← forget₂_to_Module_homotopy_equiv_f_0_eq, ← (forget₂_to_Module_homotopy_equiv k G).1.2 1 0 rfl] <;>\n      exact comp_zero\n  exact linear_map.ext_iff.1 this _\n#align d_comp_ε d_comp_ε\n\n",
 "X_projective":
 "theorem X_projective (G : Type u) [group G] (n : ℕ) : projective ((group_cohomology.resolution k G).X n) :=\n  Rep.equivalence_Module_monoid_algebra.to_adjunction.projective_of_map_projective _ <|\n    @Module.projective_of_free.{u} _ _\n      (Module.of (monoid_algebra k G) (representation.of_mul_action k G (fin (n + 1) → G)).as_module) _\n      (of_mul_action_basis k G n)\n#align X_projective X_projective\n\n"}