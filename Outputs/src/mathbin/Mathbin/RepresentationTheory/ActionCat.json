{"ρ_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n-- Note: this is _not_ a categorical action of `G` on `V`.\n@[simp]\ntheorem ρ_one {G : Mon.{u}} (A : Action V G) : A.ρ 1 = («expr𝟙») A.V :=\n  by\n  rw [MonoidHom.map_one]\n  rfl\n#align ρ_one ρ_one\n\n",
 "tensor_unit_rho":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n@[simp]\ntheorem tensor_unit_rho {g : G} : ((«expr𝟙_») (Action V G)).ρ g = («expr𝟙») ((«expr𝟙_») V) :=\n  rfl\n#align tensor_unit_rho tensor_unit_rho\n\n",
 "tensor_unit_V":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n@[simp]\ntheorem tensor_unit_V : ((«expr𝟙_») (Action V G)).V = («expr𝟙_») V :=\n  rfl\n#align tensor_unit_V tensor_unit_V\n\n",
 "tensor_rho":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n@[simp]\ntheorem tensor_rho {X Y : Action V G} {g : G} : (tensor_iso X Y).ρ g = tensor_iso (X.ρ g) (Y.ρ g) :=\n  rfl\n#align tensor_rho tensor_rho\n\n",
 "tensor_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n@[simp]\ntheorem tensor_hom {W X Y Z : Action V G} (f : «expr ⟶ » W X) (g : «expr ⟶ » Y Z) :\n    (tensor_iso f g).hom = tensor_iso f.hom g.hom :=\n  rfl\n#align tensor_hom tensor_hom\n\n",
 "tensor_V":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n@[simp]\ntheorem tensor_V {X Y : Action V G} : (tensor_iso X Y).V = tensor_iso X.V Y.V :=\n  rfl\n#align tensor_V tensor_V\n\n",
 "sum_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem sum_hom {X Y : Action V G} {ι : Type _} (f : ι → «expr ⟶ » X Y) (s : Finset ι) :\n    (s.sum f).hom = s.sum fun i => (f i).hom :=\n  (forget V G).map_sum f s\n#align sum_hom sum_hom\n\n",
 "smul_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_hom {X Y : Action V G} (r : R) (f : «expr ⟶ » X Y) : («expr • » r f).hom = «expr • » r f.hom :=\n  rfl\n#align smul_hom smul_hom\n\n",
 "right_unitor_inv_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n@[simp]\ntheorem right_unitor_inv_hom {X : Action V G} : hom.hom ((exprρ_) X).inv = ((exprρ_) X.V).inv :=\n  by\n  dsimp [monoidal.transport_right_unitor]\n  simp\n#align right_unitor_inv_hom right_unitor_inv_hom\n\n",
 "right_unitor_hom_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n@[simp]\ntheorem right_unitor_hom_hom {X : Action V G} : hom.hom ((exprρ_) X).hom = ((exprρ_) X.V).hom :=\n  by\n  dsimp [monoidal.transport_right_unitor]\n  simp\n#align right_unitor_hom_hom right_unitor_hom_hom\n\n",
 "right_dual_ρ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `right_adjoint_mate -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `right_adjoint_mate -/\n@[simp]\ntheorem right_dual_ρ [right_rigid_category V] (h : H) :\n    (right_adjoint_mate X).ρ h = right_adjoint_mate (X.ρ (h⁻¹ : H)) :=\n  by\n  rw [← single_obj.inv_as_inv]\n  rfl\n#align right_dual_ρ right_dual_ρ\n\n",
 "right_dual_V":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `right_adjoint_mate -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `right_adjoint_mate -/\n@[simp]\ntheorem right_dual_V [right_rigid_category V] : (right_adjoint_mate X).V = right_adjoint_mate X.V :=\n  rfl\n#align right_dual_V right_dual_V\n\n",
 "of_mul_action_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n-- TODO promote `res` to a pseudofunctor from\n-- the locally discrete bicategory constructed from `Monᵒᵖ` to `Cat`, sending `G` to `Action V G`.\n@[simp]\ntheorem of_mul_action_apply {G H : Type u} [monoid G] [MulAction G H] (g : G) (x : H) :\n    (of_mul_action G H).ρ g x = («expr • » g x : H) :=\n  rfl\n#align of_mul_action_apply of_mul_action_apply\n\n",
 "neg_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem neg_hom {X Y : Action V G} (f : «expr ⟶ » X Y) : (-f).hom = -f.hom :=\n  rfl\n#align neg_hom neg_hom\n\n",
 "left_unitor_inv_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n@[simp]\ntheorem left_unitor_inv_hom {X : Action V G} : hom.hom ((«exprλ_») X).inv = ((«exprλ_») X.V).inv :=\n  by\n  dsimp [monoidal.transport_left_unitor]\n  simp\n#align left_unitor_inv_hom left_unitor_inv_hom\n\n",
 "left_unitor_hom_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n@[simp]\ntheorem left_unitor_hom_hom {X : Action V G} : hom.hom ((«exprλ_») X).hom = ((«exprλ_») X.V).hom :=\n  by\n  dsimp [monoidal.transport_left_unitor]\n  simp\n#align left_unitor_hom_hom left_unitor_hom_hom\n\n",
 "left_dual_ρ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `left_adjoint_mate -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `left_adjoint_mate -/\n@[simp]\ntheorem left_dual_ρ [left_rigid_category V] (h : H) : (left_adjoint_mate X).ρ h = left_adjoint_mate (X.ρ (h⁻¹ : H)) :=\n  by\n  rw [← single_obj.inv_as_inv]\n  rfl\n#align left_dual_ρ left_dual_ρ\n\n",
 "left_dual_V":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `left_adjoint_mate -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `left_adjoint_mate -/\n@[simp]\ntheorem left_dual_V [left_rigid_category V] : (left_adjoint_mate X).V = left_adjoint_mate X.V :=\n  rfl\n#align left_dual_V left_dual_V\n\n",
 "id_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem id_hom (M : Action V G) : ((«expr𝟙») M : hom M M).hom = («expr𝟙») M.V :=\n  rfl\n#align id_hom id_hom\n\n",
 "conj_ρ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n-- TODO construct categorical images?\ntheorem iso.conj_ρ {M N : Action V G} (f : «expr ≅ » M N) (g : G) : N.ρ g = ((forget V G).map_iso f).conj (M.ρ g) :=\n  by\n  rw [iso.conj_apply, iso.eq_inv_comp]\n  simp [f.hom.comm']\n#align iso.conj_ρ iso.conj_ρ\n\n",
 "comp_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem comp_hom {M N K : Action V G} (f : «expr ⟶ » M N) (g : «expr ⟶ » N K) :\n    («expr ≫ » f g : hom M K).hom = «expr ≫ » f.hom g.hom :=\n  rfl\n#align comp_hom comp_hom\n\n",
 "associator_inv_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n@[simp]\ntheorem associator_inv_hom {X Y Z : Action V G} : hom.hom ((exprα_) X Y Z).inv = ((exprα_) X.V Y.V Z.V).inv :=\n  by\n  dsimp [monoidal.transport_associator]\n  simp\n#align associator_inv_hom associator_inv_hom\n\n",
 "associator_hom_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n@[simp]\ntheorem associator_hom_hom {X Y Z : Action V G} : hom.hom ((exprα_) X Y Z).hom = ((exprα_) X.V Y.V Z.V).hom :=\n  by\n  dsimp [monoidal.transport_associator]\n  simp\n#align associator_hom_hom associator_hom_hom\n\n",
 "ZeroHom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n#print ZeroHom /-\n@[simp]\ntheorem ZeroHom {X Y : Action V G} : (0 : «expr ⟶ » X Y).hom = 0 :=\n  rfl\n#align zero_hom ZeroHom\n-/\n\n",
 "AddHom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n#print AddHom /-\n@[simp]\ntheorem AddHom {X Y : Action V G} (f g : «expr ⟶ » X Y) : (f + g).hom = f.hom + g.hom :=\n  rfl\n#align add_hom AddHom\n-/\n\n"}