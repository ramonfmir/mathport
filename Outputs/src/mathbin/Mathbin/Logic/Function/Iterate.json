{"self_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem self_iterate (n : ℕ) : commute f («expr ^[ ]» f n) :=\n  (refl f).iterate_right n\n#align self_iterate self_iterate\n\n",
 "rec_zero":
 "theorem iterate.rec_zero (p : α → Sort _) {f : α → α} (h : ∀ a, p a → p (f a)) {a : α} (ha : p a) :\n    iterate.rec p h ha 0 = ha :=\n  rfl\n#align iterate.rec_zero iterate.rec_zero\n\n",
 "iterate_zero_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_zero_apply (x : α) : («expr ^[ ]» f 0) x = x :=\n  rfl\n#align iterate_zero_apply iterate_zero_apply\n\n",
 "iterate_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/-\nCopyright (c) 2020 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\n@[simp]\ntheorem iterate_zero : «expr ^[ ]» f 0 = id :=\n  rfl\n#align iterate_zero iterate_zero\n\n",
 "iterate_succ_apply'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_succ_apply' (n : ℕ) (x : α) : («expr ^[ ]» f n.succ) x = f ((«expr ^[ ]» f n) x) := by\n  rw [iterate_succ']\n#align iterate_succ_apply' iterate_succ_apply'\n\n",
 "iterate_succ_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_succ_apply (n : ℕ) (x : α) : («expr ^[ ]» f n.succ) x = («expr ^[ ]» f n) (f x) :=\n  rfl\n#align iterate_succ_apply iterate_succ_apply\n\n",
 "iterate_succ'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_succ' (n : ℕ) : «expr ^[ ]» f n.succ = f ∘ «expr ^[ ]» f n := by\n  rw [iterate_succ, (commute.self_iterate f n).comp_eq]\n#align iterate_succ' iterate_succ'\n\n",
 "iterate_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n@[simp]\ntheorem iterate_succ (n : ℕ) : «expr ^[ ]» f n.succ = «expr ^[ ]» f n ∘ f :=\n  rfl\n#align iterate_succ iterate_succ\n\n",
 "iterate_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_self (n : ℕ) : commute («expr ^[ ]» f n) f :=\n  (refl f).iterate_left n\n#align iterate_self iterate_self\n\n",
 "iterate_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_right (h : commute f g) (n : ℕ) : commute f («expr ^[ ]» g n) :=\n  h.iterate_right n\n#align iterate_right iterate_right\n\n",
 "iterate_pred_comp_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_pred_comp_of_pos {n : ℕ} (hn : 0 < n) : «expr ^[ ]» f n.pred ∘ f = «expr ^[ ]» f n := by\n  rw [← iterate_succ, nat.succ_pred_eq_of_pos hn]\n#align iterate_pred_comp_of_pos iterate_pred_comp_of_pos\n\n",
 "iterate_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n@[simp]\ntheorem iterate_one : «expr ^[ ]» f 1 = f :=\n  funext fun a => rfl\n#align iterate_one iterate_one\n\n",
 "iterate_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_mul (m : ℕ) : ∀ n, «expr ^[ ]» f (m * n) = «expr ^[ ]» («expr ^[ ]» f m) n\n  | 0 => by simp only [nat.mul_zero, iterate_zero]\n  | n + 1 => by simp only [nat.mul_succ, nat.mul_one, iterate_one, iterate_add, iterate_mul n]\n#align iterate_mul iterate_mul\n\n",
 "iterate_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_left (h : commute f g) (n : ℕ) : commute («expr ^[ ]» f n) g :=\n  (h.symm.iterate_right n).symm\n#align iterate_left iterate_left\n\n",
 "iterate_iterate_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_iterate_self (m n : ℕ) : commute («expr ^[ ]» f m) («expr ^[ ]» f n) :=\n  (refl f).iterate_iterate m n\n#align iterate_iterate_self iterate_iterate_self\n\n",
 "iterate_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_iterate (h : commute f g) (m n : ℕ) : commute («expr ^[ ]» f m) («expr ^[ ]» g n) :=\n  (h.iterate_left m).iterate_right n\n#align iterate_iterate iterate_iterate\n\n",
 "iterate_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n@[simp]\ntheorem iterate_id (n : ℕ) : «expr ^[ ]» (id : α → α) n = id :=\n  nat.rec_on n rfl fun n ihn => by rw [iterate_succ, ihn, comp.left_id]\n#align iterate_id iterate_id\n\n",
 "iterate_fixed":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_fixed {x} (h : f x = x) (n : ℕ) : («expr ^[ ]» f n) x = x :=\n  nat.rec_on n rfl fun n ihn => by rw [iterate_succ_apply, h, ihn]\n#align iterate_fixed iterate_fixed\n\n",
 "iterate_eq_of_map_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_eq_of_map_eq (h : commute f g) (n : ℕ) {x} (hx : f x = g x) :\n    («expr ^[ ]» f n) x = («expr ^[ ]» g n) x :=\n  nat.rec_on n rfl fun n ihn => by\n    simp only [iterate_succ_apply, hx, (h.iterate_left n).eq, ihn, ((refl g).iterate_right n).eq]\n#align iterate_eq_of_map_eq iterate_eq_of_map_eq\n\n",
 "iterate_commute":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_commute (m n : ℕ) : commute (fun f : α → α => «expr ^[ ]» f m) fun f => «expr ^[ ]» f n := fun f =>\n  iterate_comm f m n\n#align iterate_commute iterate_commute\n\n",
 "iterate_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_comm (f : α → α) (m n : ℕ) : «expr ^[ ]» («expr ^[ ]» f n) m = «expr ^[ ]» («expr ^[ ]» f m) n :=\n  (iterate_mul _ _ _).symm.trans (eq.trans (by rw [nat.mul_comm]) (iterate_mul _ _ _))\n#align iterate_comm iterate_comm\n\n",
 "iterate_cancel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_cancel (hf : injective f) (ha : («expr ^[ ]» f m) a = («expr ^[ ]» f n) a) :\n    («expr ^[ ]» f (m - n)) a = a := by\n  cases le_total m n\n  · simp [nat.sub_eq_zero_of_le h]\n  · exact iterate_cancel_of_add hf (by rwa [nat.sub_add_cancel h])\n#align iterate_cancel iterate_cancel\n\n",
 "iterate_add_eq_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_add_eq_iterate (hf : injective f) :\n    («expr ^[ ]» f (m + n)) a = («expr ^[ ]» f n) a ↔ («expr ^[ ]» f m) a = a :=\n  iff.trans (by rw [← iterate_add_apply, nat.add_comm]) (hf.iterate n).eq_iff\n#align iterate_add_eq_iterate iterate_add_eq_iterate\n\n",
 "iterate_add_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_add_apply (m n : ℕ) (x : α) : («expr ^[ ]» f (m + n)) x = («expr ^[ ]» f m) ((«expr ^[ ]» f n) x) := by\n  rw [iterate_add]\n#align iterate_add_apply iterate_add_apply\n\n",
 "iterate_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_add : ∀ m n : ℕ, «expr ^[ ]» f (m + n) = «expr ^[ ]» f m ∘ «expr ^[ ]» f n\n  | m, 0 => rfl\n  | m, nat.succ n => by rw [nat.add_succ, iterate_succ, iterate_succ, iterate_add]\n#align iterate_add iterate_add\n\n",
 "iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem right_inverse.iterate {g : α → α} (hg : right_inverse g f) (n : ℕ) :\n    right_inverse («expr ^[ ]» g n) («expr ^[ ]» f n) :=\n  hg.iterate n\n#align right_inverse.iterate right_inverse.iterate\n\n",
 "foldr_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem foldr_const (f : β → β) (b : β) : ∀ l : list α, l.foldr (fun _ => f) b = («expr ^[ ]» f l.length) b\n  | [] => rfl\n  | a :: l => by rw [length_cons, foldr, foldr_const l, iterate_succ_apply']\n#align foldr_const foldr_const\n\n",
 "foldl_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem foldl_const (f : α → α) (a : α) (l : list β) : l.foldl (fun b _ => f b) a = («expr ^[ ]» f l.length) a :=\n  by\n  induction' l with b l H generalizing a\n  · rfl\n  · rw [length_cons, foldl, iterate_succ_apply, H]\n#align foldl_const foldl_const\n\n",
 "comp_iterate_pred_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem comp_iterate_pred_of_pos {n : ℕ} (hn : 0 < n) : f ∘ «expr ^[ ]» f n.pred = «expr ^[ ]» f n := by\n  rw [← iterate_succ', nat.succ_pred_eq_of_pos hn]\n#align comp_iterate_pred_of_pos comp_iterate_pred_of_pos\n\n",
 "comp_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem comp_iterate (h : commute f g) (n : ℕ) : «expr ^[ ]» (f ∘ g) n = «expr ^[ ]» f n ∘ «expr ^[ ]» g n :=\n  by\n  induction' n with n ihn; · rfl\n  funext x\n  simp only [ihn, (h.iterate_right n).eq, iterate_succ, comp_app]\n#align comp_iterate comp_iterate\n\n"}