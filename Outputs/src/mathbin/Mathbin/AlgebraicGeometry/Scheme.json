{"Γ_obj_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem Γ_obj_op (X : Scheme) : Γ.obj (op X) = X.presheaf.obj (op («expr⊤»)) :=\n  rfl\n#align Γ_obj_op Γ_obj_op\n\n",
 "Γ_obj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem Γ_obj (X : «expr ᵒᵖ» Scheme) : Γ.obj X = (unop X).presheaf.obj (op («expr⊤»)) :=\n  rfl\n#align Γ_obj Γ_obj\n\n",
 "Γ_map_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem Γ_map_op {X Y : Scheme} (f : «expr ⟶ » X Y) : Γ.map f.op = f.1.c.app (op («expr⊤»)) :=\n  rfl\n#align Γ_map_op Γ_map_op\n\n",
 "Γ_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem Γ_map {X Y : «expr ᵒᵖ» Scheme} (f : «expr ⟶ » X Y) : Γ.map f = f.unop.1.c.app (op («expr⊤»)) :=\n  rfl\n#align Γ_map Γ_map\n\n",
 "Γ_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\ntheorem Γ_def : Γ = «expr ⋙ » (inducedFunctor Scheme.to_LocallyRingedSpace).op LocallyRingedSpace.Γ :=\n  rfl\n#align Γ_def Γ_def\n\n",
 "preimage_basic_open":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem preimage_basic_open {X Y : Scheme} (f : «expr ⟶ » X Y) {U : Opens Y.carrier} (r : Y.presheaf.obj <| op U) :\n    (Opens.map f.1.base).obj (Y.basic_open r) = @Scheme.basic_open X ((Opens.map f.1.base).obj U) (f.1.c.app _ r) :=\n  LocallyRingedSpace.preimage_basic_open f r\n#align preimage_basic_open preimage_basic_open\n\n",
 "mem_basic_open_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem mem_basic_open_top (f : X.presheaf.obj (op («expr⊤»))) (x : X.carrier) :\n    x ∈ X.basic_open f ↔ IsUnit (X.presheaf.germ (⟨x, trivial⟩ : («expr⊤» : Opens _)) f) :=\n  RingedSpace.mem_basic_open _ f ⟨x, trivial⟩\n#align mem_basic_open_top mem_basic_open_top\n\n",
 "mem_basic_open":
 "@[simp]\ntheorem mem_basic_open (x : U) : ↑x ∈ X.basic_open f ↔ IsUnit (X.presheaf.germ x f) :=\n  RingedSpace.mem_basic_open _ _ _\n#align mem_basic_open mem_basic_open\n\n",
 "inv_val_c_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem inv_val_c_app {X Y : Scheme} (f : «expr ⟶ » X Y) [IsIso f] (U : Opens X.carrier) :\n    (inv f).val.c.app (op U) =\n      «expr ≫ »\n        (X.presheaf.map\n          (eqToHom <| by\n                rw [is_iso.hom_inv_id]\n                ext1\n                rfl :\n              «expr ⟶ » ((Opens.map («expr ≫ » f (inv f)).1.base).obj U) U).op)\n        (inv (f.val.c.app (op <| (Opens.map _).obj U))) :=\n  by\n  rw [is_iso.eq_comp_inv]\n  erw [← Scheme.comp_val_c_app]\n  rw [Scheme.congr_app (is_iso.hom_inv_id f), Scheme.id_app, ← functor.map_comp, eq_to_hom_trans, eq_to_hom_op]\n  rfl\n#align inv_val_c_app inv_val_c_app\n\n",
 "id_val_base":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem id_val_base (X : Scheme) : ((«expr𝟙») X : _).1.base = («expr𝟙») _ :=\n  rfl\n#align id_val_base id_val_base\n\n",
 "id_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem id_app {X : Scheme} (U : «expr ᵒᵖ» (Opens X.carrier)) :\n    ((«expr𝟙») X : _).val.c.app U =\n      X.presheaf.map\n        (eqToHom\n          (by\n            induction U using Opposite.rec'\n            cases U\n            rfl)) :=\n  PresheafedSpace.id_c_app X.to_PresheafedSpace U\n#align id_app id_app\n\n",
 "forget_to_LocallyRingedSpace_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n-- There isn't nessecarily a morphism between two schemes.\n@[simp]\ntheorem forget_to_LocallyRingedSpace_preimage {X Y : Scheme} (f : «expr ⟶ » X Y) :\n    Scheme.forget_to_LocallyRingedSpace.preimage f = f :=\n  rfl\n#align forget_to_LocallyRingedSpace_preimage forget_to_LocallyRingedSpace_preimage\n\n",
 "congr_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem congr_app {X Y : Scheme} {f g : «expr ⟶ » X Y} (e : f = g) (U) :\n    f.val.c.app U = «expr ≫ » (g.val.c.app U) (X.presheaf.map (eqToHom (by subst e))) :=\n  by\n  subst e\n  dsimp\n  simp\n#align congr_app congr_app\n\n",
 "comp_val_c_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1, simp]\ntheorem comp_val_c_app {X Y Z : Scheme} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) (U) :\n    («expr ≫ » f g).val.c.app U = «expr ≫ » (g.val.c.app U) (f.val.c.app _) :=\n  rfl\n#align comp_val_c_app comp_val_c_app\n\n",
 "comp_val_base":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1, elementwise]\ntheorem comp_val_base {X Y Z : Scheme} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) :\n    («expr ≫ » f g).val.base = «expr ≫ » f.val.base g.val.base :=\n  rfl\n#align comp_val_base comp_val_base\n\n",
 "comp_val":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem comp_val {X Y Z : Scheme} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) :\n    («expr ≫ » f g).val = «expr ≫ » f.val g.val :=\n  rfl\n#align comp_val comp_val\n\n",
 "comp_coe_base":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1, simp]\ntheorem comp_coe_base {X Y Z : Scheme} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) :\n    («expr ≫ » f g).val.base = «expr ≫ » f.val.base g.val.base :=\n  rfl\n#align comp_coe_base comp_coe_base\n\n",
 "basic_open_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem basic_open_zero (U : Opens X.carrier) : X.basic_open (0 : X.presheaf.obj <| op U) = «expr⊥» :=\n  LocallyRingedSpace.basic_open_zero _ U\n#align basic_open_zero basic_open_zero\n\n",
 "basic_open_res_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n-- This should fire before `basic_open_res`.\n@[simp]\ntheorem basic_open_res_eq (i : «expr ⟶ » (op U) (op V)) [IsIso i] :\n    X.basic_open (X.presheaf.map i f) = X.basic_open f :=\n  RingedSpace.basic_open_res_eq _ i f\n#align basic_open_res_eq basic_open_res_eq\n\n",
 "basic_open_res":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem basic_open_res (i : «expr ⟶ » (op U) (op V)) :\n    X.basic_open (X.presheaf.map i f) = «expr ⊓ » V (X.basic_open f) :=\n  RingedSpace.basic_open_res _ i f\n#align basic_open_res basic_open_res\n\n",
 "basic_open_of_is_unit":
 "theorem basic_open_of_is_unit {f : X.presheaf.obj (op U)} (hf : IsUnit f) : X.basic_open f = U :=\n  RingedSpace.basic_open_of_is_unit _ hf\n#align basic_open_of_is_unit basic_open_of_is_unit\n\n",
 "basic_open_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem basic_open_mul : X.basic_open (f * g) = «expr ⊓ » (X.basic_open f) (X.basic_open g) :=\n  RingedSpace.basic_open_mul _ _ _\n#align basic_open_mul basic_open_mul\n\n",
 "basic_open_le":
 "@[sheaf_restrict]\ntheorem basic_open_le : X.basic_open f ≤ U :=\n  RingedSpace.basic_open_le _ _\n#align basic_open_le basic_open_le\n\n",
 "basic_open_eq_of_affine'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem basic_open_eq_of_affine' {R : CommRing} (f : (Spec.to_SheafedSpace.obj (op R)).presheaf.obj (op («expr⊤»))) :\n    (Scheme.Spec.obj <| op R).basic_open f = prime_spectrum.basic_open ((Spec_Γ_identity.app R).hom f) :=\n  by\n  convert basic_open_eq_of_affine ((Spec_Γ_identity.app R).hom f)\n  exact (iso.hom_inv_id_apply _ _).symm\n#align basic_open_eq_of_affine' basic_open_eq_of_affine'\n\n",
 "basic_open_eq_of_affine":
 "theorem basic_open_eq_of_affine {R : CommRing} (f : R) :\n    (Scheme.Spec.obj <| op R).basic_open ((Spec_Γ_identity.app R).inv f) = prime_spectrum.basic_open f :=\n  by\n  ext\n  erw [Scheme.mem_basic_open_top]\n  suffices IsUnit (structure_sheaf.to_stalk R x f) ↔ f ∉ prime_spectrum.as_ideal x by exact this\n  erw [← is_unit_map_iff (structure_sheaf.stalk_to_fiber_ring_hom R x),\n    structure_sheaf.stalk_to_fiber_ring_hom_to_stalk]\n  exact\n    (is_localization.at_prime.is_unit_to_map_iff (localization.at_prime (prime_spectrum.as_ideal x))\n        (prime_spectrum.as_ideal x) f :\n      _)\n#align basic_open_eq_of_affine basic_open_eq_of_affine\n\n",
 "app_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem app_eq {X Y : Scheme} (f : «expr ⟶ » X Y) {U V : Opens Y.carrier} (e : U = V) :\n    f.val.c.app (op U) =\n      «expr ≫ » (Y.presheaf.map (eqToHom e.symm).op)\n        («expr ≫ » (f.val.c.app (op V)) (X.presheaf.map (eqToHom (congr_arg (Opens.map f.val.base).obj e)).op)) :=\n  by\n  rw [← is_iso.inv_comp_eq, ← functor.map_inv, f.val.c.naturality, presheaf.pushforward_obj_map]\n  congr\n#align app_eq app_eq\n\n",
 "Spec_obj_to_LocallyRingedSpace":
 "@[simp]\ntheorem Spec_obj_to_LocallyRingedSpace (R : CommRing) :\n    (Spec_obj R).to_LocallyRingedSpace = Spec.LocallyRingedSpace_obj R :=\n  rfl\n#align Spec_obj_to_LocallyRingedSpace Spec_obj_to_LocallyRingedSpace\n\n",
 "Spec_map_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem Spec_map_id (R : CommRing) : Spec_map ((«expr𝟙») R) = («expr𝟙») (Spec_obj R) :=\n  Spec.LocallyRingedSpace_map_id R\n#align Spec_map_id Spec_map_id\n\n",
 "Spec_map_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem Spec_map_comp {R S T : CommRing} (f : «expr ⟶ » R S) (g : «expr ⟶ » S T) :\n    Spec_map («expr ≫ » f g) = «expr ≫ » (Spec_map g) (Spec_map f) :=\n  Spec.LocallyRingedSpace_map_comp f g\n#align Spec_map_comp Spec_map_comp\n\n"}