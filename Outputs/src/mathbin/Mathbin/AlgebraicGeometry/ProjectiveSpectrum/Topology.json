{"zero_locus_vanishing_ideal_eq_closure":
 "theorem zero_locus_vanishing_ideal_eq_closure (t : Set (projective_spectrum 𝒜)) :\n    zero_locus 𝒜 (vanishing_ideal t : Set A) = closure t :=\n  by\n  apply Set.Subset.antisymm\n  · rintro x hx t' ⟨ht', ht⟩\n    obtain ⟨fs, rfl⟩ : ∃ s, t' = zero_locus 𝒜 s := by rwa [is_closed_iff_zero_locus] at ht'\n    rw [subset_zero_locus_iff_subset_vanishing_ideal] at ht\n    exact Set.Subset.trans ht hx\n  · rw [(is_closed_zero_locus _ _).closure_subset_iff]\n    exact subset_zero_locus_vanishing_ideal 𝒜 t\n#align zero_locus_vanishing_ideal_eq_closure zero_locus_vanishing_ideal_eq_closure\n\n",
 "zero_locus_univ":
 "@[simp]\ntheorem zero_locus_univ : zero_locus 𝒜 (Set.univ : Set A) = ∅ :=\n  zero_locus_empty_of_one_mem _ (Set.mem_univ 1)\n#align zero_locus_univ zero_locus_univ\n\n",
 "zero_locus_union":
 "theorem zero_locus_union (s s' : Set A) : zero_locus 𝒜 (s ∪ s') = zero_locus _ s ∩ zero_locus _ s' :=\n  (gc_set 𝒜).l_sup\n#align zero_locus_union zero_locus_union\n\n",
 "zero_locus_supr_ideal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem zero_locus_supr_ideal {γ : Sort _} (I : γ → Ideal A) :\n    zero_locus _\n        ((«expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (I i) :\n            Ideal A) :\n          Set A) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (zero_locus 𝒜 (I i)) :=\n  (gc_ideal 𝒜).l_supr\n#align zero_locus_supr_ideal zero_locus_supr_ideal\n\n",
 "zero_locus_supr_homogeneous_ideal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem zero_locus_supr_homogeneous_ideal {γ : Sort _} (I : γ → homogeneous_ideal 𝒜) :\n    zero_locus _\n        ((«expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (I i) :\n            homogeneous_ideal 𝒜) :\n          Set A) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (zero_locus 𝒜 (I i)) :=\n  (gc_homogeneous_ideal 𝒜).l_supr\n#align zero_locus_supr_homogeneous_ideal zero_locus_supr_homogeneous_ideal\n\n",
 "zero_locus_sup_ideal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem zero_locus_sup_ideal (I J : Ideal A) :\n    zero_locus 𝒜 ((«expr ⊔ » I J : Ideal A) : Set A) = zero_locus _ I ∩ zero_locus _ J :=\n  (gc_ideal 𝒜).l_sup\n#align zero_locus_sup_ideal zero_locus_sup_ideal\n\n",
 "zero_locus_sup_homogeneous_ideal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem zero_locus_sup_homogeneous_ideal (I J : homogeneous_ideal 𝒜) :\n    zero_locus 𝒜 ((«expr ⊔ » I J : homogeneous_ideal 𝒜) : Set A) = zero_locus _ I ∩ zero_locus _ J :=\n  (gc_homogeneous_ideal 𝒜).l_sup\n#align zero_locus_sup_homogeneous_ideal zero_locus_sup_homogeneous_ideal\n\n",
 "zero_locus_span":
 "@[simp]\ntheorem zero_locus_span (s : Set A) : zero_locus 𝒜 (Ideal.span s) = zero_locus 𝒜 s :=\n  by\n  ext x\n  exact (Submodule.gi _ _).gc s x.as_homogeneous_ideal.to_ideal\n#align zero_locus_span zero_locus_span\n\n",
 "zero_locus_singleton_zero":
 "@[simp]\ntheorem zero_locus_singleton_zero : zero_locus 𝒜 ({0} : Set A) = Set.univ :=\n  zero_locus_bot _\n#align zero_locus_singleton_zero zero_locus_singleton_zero\n\n",
 "zero_locus_singleton_pow":
 "@[simp]\ntheorem zero_locus_singleton_pow (f : A) (n : ℕ) (hn : 0 < n) : zero_locus 𝒜 ({f ^ n} : Set A) = zero_locus 𝒜 {f} :=\n  Set.ext fun x => by simpa using x.is_prime.pow_mem_iff_mem n hn\n#align zero_locus_singleton_pow zero_locus_singleton_pow\n\n",
 "zero_locus_singleton_one":
 "@[simp]\ntheorem zero_locus_singleton_one : zero_locus 𝒜 ({1} : Set A) = ∅ :=\n  zero_locus_empty_of_one_mem 𝒜 (Set.mem_singleton (1 : A))\n#align zero_locus_singleton_one zero_locus_singleton_one\n\n",
 "zero_locus_singleton_mul":
 "theorem zero_locus_singleton_mul (f g : A) : zero_locus 𝒜 ({f * g} : Set A) = zero_locus 𝒜 {f} ∪ zero_locus 𝒜 {g} :=\n  Set.ext fun x => by simpa using x.is_prime.mul_mem_iff_mem_or_mem\n#align zero_locus_singleton_mul zero_locus_singleton_mul\n\n",
 "zero_locus_mul_ideal":
 "theorem zero_locus_mul_ideal (I J : Ideal A) :\n    zero_locus 𝒜 ((I * J : Ideal A) : Set A) = zero_locus 𝒜 I ∪ zero_locus 𝒜 J :=\n  Set.ext fun x => x.is_prime.mul_le\n#align zero_locus_mul_ideal zero_locus_mul_ideal\n\n",
 "zero_locus_mul_homogeneous_ideal":
 "theorem zero_locus_mul_homogeneous_ideal (I J : homogeneous_ideal 𝒜) :\n    zero_locus 𝒜 ((I * J : homogeneous_ideal 𝒜) : Set A) = zero_locus 𝒜 I ∪ zero_locus 𝒜 J :=\n  Set.ext fun x => x.is_prime.mul_le\n#align zero_locus_mul_homogeneous_ideal zero_locus_mul_homogeneous_ideal\n\n",
 "zero_locus_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem zero_locus_inf (I J : Ideal A) :\n    zero_locus 𝒜 ((«expr ⊓ » I J : Ideal A) : Set A) = zero_locus 𝒜 I ∪ zero_locus 𝒜 J :=\n  Set.ext fun x => x.is_prime.inf_le\n#align zero_locus_inf zero_locus_inf\n\n",
 "zero_locus_empty_of_one_mem":
 "theorem zero_locus_empty_of_one_mem {s : Set A} (h : (1 : A) ∈ s) : zero_locus 𝒜 s = ∅ :=\n  Set.eq_empty_iff_forall_not_mem.mpr fun x hx =>\n    (inferInstance : x.as_homogeneous_ideal.to_ideal.is_prime).ne_top <|\n      x.as_homogeneous_ideal.to_ideal.eq_top_iff_one.mpr <| hx h\n#align zero_locus_empty_of_one_mem zero_locus_empty_of_one_mem\n\n",
 "zero_locus_empty":
 "@[simp]\ntheorem zero_locus_empty : zero_locus 𝒜 (∅ : Set A) = Set.univ :=\n  (gc_set 𝒜).l_bot\n#align zero_locus_empty zero_locus_empty\n\n",
 "zero_locus_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem zero_locus_bot : zero_locus 𝒜 ((«expr⊥» : Ideal A) : Set A) = Set.univ :=\n  (gc_ideal 𝒜).l_bot\n#align zero_locus_bot zero_locus_bot\n\n",
 "zero_locus_bUnion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem zero_locus_bUnion (s : Set (Set A)) :\n    zero_locus 𝒜\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" s' : Set A) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (zero_locus 𝒜 s') :=\n  by simp only [zero_locus_Union]\n#align zero_locus_bUnion zero_locus_bUnion\n\n",
 "zero_locus_anti_mono_ideal":
 "theorem zero_locus_anti_mono_ideal {s t : Ideal A} (h : s ≤ t) : zero_locus 𝒜 (t : Set A) ⊆ zero_locus 𝒜 (s : Set A) :=\n  (gc_ideal _).monotone_l h\n#align zero_locus_anti_mono_ideal zero_locus_anti_mono_ideal\n\n",
 "zero_locus_anti_mono_homogeneous_ideal":
 "theorem zero_locus_anti_mono_homogeneous_ideal {s t : homogeneous_ideal 𝒜} (h : s ≤ t) :\n    zero_locus 𝒜 (t : Set A) ⊆ zero_locus 𝒜 (s : Set A) :=\n  (gc_homogeneous_ideal _).monotone_l h\n#align zero_locus_anti_mono_homogeneous_ideal zero_locus_anti_mono_homogeneous_ideal\n\n",
 "zero_locus_anti_mono":
 "theorem zero_locus_anti_mono {s t : Set A} (h : s ⊆ t) : zero_locus 𝒜 t ⊆ zero_locus 𝒜 s :=\n  (gc_set _).monotone_l h\n#align zero_locus_anti_mono zero_locus_anti_mono\n\n",
 "zero_locus_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem zero_locus_Union {γ : Sort _} (s : γ → Set A) :\n    zero_locus 𝒜\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s i)) =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (zero_locus 𝒜 (s i)) :=\n  (gc_set 𝒜).l_supr\n#align zero_locus_Union zero_locus_Union\n\n",
 "vanishing_ideal_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem vanishing_ideal_univ : vanishing_ideal (∅ : Set (projective_spectrum 𝒜)) = «expr⊤» := by\n  simpa using (gc_ideal _).u_top\n#align vanishing_ideal_univ vanishing_ideal_univ\n\n",
 "vanishing_ideal_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem vanishing_ideal_union (t t' : Set (projective_spectrum 𝒜)) :\n    vanishing_ideal (t ∪ t') = «expr ⊓ » (vanishing_ideal t) (vanishing_ideal t') := by\n  ext1 <;> convert(gc_ideal 𝒜).u_inf\n#align vanishing_ideal_union vanishing_ideal_union\n\n",
 "vanishing_ideal_singleton":
 "@[simp]\ntheorem vanishing_ideal_singleton (x : projective_spectrum 𝒜) :\n    vanishing_ideal ({x} : Set (projective_spectrum 𝒜)) = x.as_homogeneous_ideal := by simp [vanishing_ideal]\n#align vanishing_ideal_singleton vanishing_ideal_singleton\n\n",
 "vanishing_ideal_closure":
 "theorem vanishing_ideal_closure (t : Set (projective_spectrum 𝒜)) : vanishing_ideal (closure t) = vanishing_ideal t :=\n  by\n  have := (gc_ideal 𝒜).u_l_u_eq_u t\n  dsimp only at this\n  ext1\n  erw [zero_locus_vanishing_ideal_eq_closure 𝒜 t] at this\n  exact this\n#align vanishing_ideal_closure vanishing_ideal_closure\n\n",
 "vanishing_ideal_anti_mono":
 "theorem vanishing_ideal_anti_mono {s t : Set (projective_spectrum 𝒜)} (h : s ⊆ t) :\n    vanishing_ideal t ≤ vanishing_ideal s :=\n  (gc_ideal _).monotone_u h\n#align vanishing_ideal_anti_mono vanishing_ideal_anti_mono\n\n",
 "vanishing_ideal_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem vanishing_ideal_Union {γ : Sort _} (t : γ → Set (projective_spectrum 𝒜)) :\n    vanishing_ideal\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (t i)) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (vanishing_ideal (t i)) :=\n  homogeneous_ideal.to_ideal_injective <| by convert(gc_ideal 𝒜).u_infi <;> exact homogeneous_ideal.to_ideal_infi _\n#align vanishing_ideal_Union vanishing_ideal_Union\n\n",
 "union_zero_locus":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem union_zero_locus (s s' : Set A) :\n    zero_locus 𝒜 s ∪ zero_locus 𝒜 s' = zero_locus 𝒜 («expr ⊓ » (Ideal.span s) (Ideal.span s') : Ideal A) :=\n  by\n  rw [zero_locus_inf]\n  simp\n#align union_zero_locus union_zero_locus\n\n",
 "sup_vanishing_ideal_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem sup_vanishing_ideal_le (t t' : Set (projective_spectrum 𝒜)) :\n    «expr ⊔ » (vanishing_ideal t) (vanishing_ideal t') ≤ vanishing_ideal (t ∩ t') :=\n  by\n  intro r\n  rw [← homogeneous_ideal.mem_iff, homogeneous_ideal.to_ideal_sup, mem_vanishing_ideal, Submodule.mem_sup]\n  rintro ⟨f, hf, g, hg, rfl⟩ x ⟨hxt, hxt'⟩\n  erw [mem_vanishing_ideal] at hf hg\n  apply Submodule.add_mem <;> solve_by_elim\n#align sup_vanishing_ideal_le sup_vanishing_ideal_le\n\n",
 "subset_zero_locus_vanishing_ideal":
 "theorem subset_zero_locus_vanishing_ideal (t : Set (projective_spectrum 𝒜)) : t ⊆ zero_locus 𝒜 (vanishing_ideal t) :=\n  (gc_ideal _).l_u_le t\n#align subset_zero_locus_vanishing_ideal subset_zero_locus_vanishing_ideal\n\n",
 "subset_zero_locus_iff_subset_vanishing_ideal":
 "theorem subset_zero_locus_iff_subset_vanishing_ideal (t : Set (projective_spectrum 𝒜)) (s : Set A) :\n    t ⊆ zero_locus 𝒜 s ↔ s ⊆ vanishing_ideal t :=\n  (gc_set _) s t\n#align subset_zero_locus_iff_subset_vanishing_ideal subset_zero_locus_iff_subset_vanishing_ideal\n\n",
 "subset_zero_locus_iff_le_vanishing_ideal":
 "theorem subset_zero_locus_iff_le_vanishing_ideal (t : Set (projective_spectrum 𝒜)) (I : Ideal A) :\n    t ⊆ zero_locus 𝒜 I ↔ I ≤ (vanishing_ideal t).to_ideal :=\n  ⟨fun h f k => (mem_vanishing_ideal _ _).mpr fun x j => (mem_zero_locus _ _ _).mpr (h j) k, fun h => fun x j =>\n    (mem_zero_locus _ _ _).mpr (le_trans h fun f h => ((mem_vanishing_ideal _ _).mp h) x j)⟩\n#align subset_zero_locus_iff_le_vanishing_ideal subset_zero_locus_iff_le_vanishing_ideal\n\n",
 "subset_vanishing_ideal_zero_locus":
 "theorem subset_vanishing_ideal_zero_locus (s : Set A) : s ⊆ vanishing_ideal (zero_locus 𝒜 s) :=\n  (gc_set _).le_u_l s\n#align subset_vanishing_ideal_zero_locus subset_vanishing_ideal_zero_locus\n\n",
 "mem_zero_locus":
 "/-\nCopyright (c) 2020 Jujian Zhang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jujian Zhang, Johan Commelin\n-/\n@[simp]\ntheorem mem_zero_locus (x : projective_spectrum 𝒜) (s : Set A) : x ∈ zero_locus 𝒜 s ↔ s ⊆ x.as_homogeneous_ideal :=\n  iff.rfl\n#align mem_zero_locus mem_zero_locus\n\n",
 "mem_vanishing_ideal":
 "theorem mem_vanishing_ideal (t : Set (projective_spectrum 𝒜)) (f : A) :\n    f ∈ vanishing_ideal t ↔ ∀ x : projective_spectrum 𝒜, x ∈ t → f ∈ x.as_homogeneous_ideal := by\n  rw [← SetLike.mem_coe, coe_vanishing_ideal, Set.mem_setOf_eq]\n#align mem_vanishing_ideal mem_vanishing_ideal\n\n",
 "mem_compl_zero_locus_iff_not_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem mem_compl_zero_locus_iff_not_mem {f : A} {I : projective_spectrum 𝒜} :\n    I ∈ «expr ᶜ» (zero_locus 𝒜 {f} : Set (projective_spectrum 𝒜)) ↔ f ∉ I.as_homogeneous_ideal := by\n  rw [Set.mem_compl_iff, mem_zero_locus, Set.singleton_subset_iff] <;> rfl\n#align mem_compl_zero_locus_iff_not_mem mem_compl_zero_locus_iff_not_mem\n\n",
 "mem_coe_basic_open":
 "theorem mem_coe_basic_open (f : A) (x : projective_spectrum 𝒜) :\n    x ∈ (↑(basic_open 𝒜 f) : Set (projective_spectrum 𝒜)) ↔ f ∉ x.as_homogeneous_ideal :=\n  iff.rfl\n#align mem_coe_basic_open mem_coe_basic_open\n\n",
 "mem_basic_open":
 "@[simp]\ntheorem mem_basic_open (f : A) (x : projective_spectrum 𝒜) : x ∈ basic_open 𝒜 f ↔ f ∉ x.as_homogeneous_ideal :=\n  iff.rfl\n#align mem_basic_open mem_basic_open\n\n",
 "le_iff_mem_closure":
 "theorem le_iff_mem_closure (x y : projective_spectrum 𝒜) : x ≤ y ↔ y ∈ closure ({x} : Set (projective_spectrum 𝒜)) :=\n  by\n  rw [← as_ideal_le_as_ideal, ← zero_locus_vanishing_ideal_eq_closure, mem_zero_locus, vanishing_ideal_singleton]\n  simp only [coe_subset_coe, Subtype.coe_le_coe, coe_coe]\n#align le_iff_mem_closure le_iff_mem_closure\n\n",
 "is_topological_basis_basic_opens":
 "theorem is_topological_basis_basic_opens :\n    TopologicalSpace.IsTopologicalBasis (Set.range fun r : A => (basic_open 𝒜 r : Set (projective_spectrum 𝒜))) :=\n  by\n  apply TopologicalSpace.isTopologicalBasis_of_open_of_nhds\n  · rintro _ ⟨r, rfl⟩\n    exact is_open_basic_open 𝒜\n  · rintro p U hp ⟨s, hs⟩\n    rw [← compl_compl U, Set.mem_compl_iff, ← hs, mem_zero_locus, Set.not_subset] at hp\n    obtain ⟨f, hfs, hfp⟩ := hp\n    refine' ⟨basic_open 𝒜 f, ⟨f, rfl⟩, hfp, _⟩\n    rw [← Set.compl_subset_compl, ← hs, basic_open_eq_zero_locus_compl, compl_compl]\n    exact zero_locus_anti_mono 𝒜 (set.singleton_subset_iff.mpr hfs)\n#align is_topological_basis_basic_opens is_topological_basis_basic_opens\n\n",
 "is_open_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem is_open_iff (U : Set (projective_spectrum 𝒜)) : IsOpen U ↔ ∃ s, «expr ᶜ» U = zero_locus 𝒜 s := by\n  simp only [@eq_comm _ («expr ᶜ» U)] <;> rfl\n#align is_open_iff is_open_iff\n\n",
 "is_open_basic_open":
 "theorem is_open_basic_open {a : A} : IsOpen (basic_open 𝒜 a : Set (projective_spectrum 𝒜)) :=\n  (basic_open 𝒜 a).is_open\n#align is_open_basic_open is_open_basic_open\n\n",
 "is_closed_zero_locus":
 "theorem is_closed_zero_locus (s : Set A) : IsClosed (zero_locus 𝒜 s) :=\n  by\n  rw [is_closed_iff_zero_locus]\n  exact ⟨s, rfl⟩\n#align is_closed_zero_locus is_closed_zero_locus\n\n",
 "is_closed_iff_zero_locus":
 "theorem is_closed_iff_zero_locus (Z : Set (projective_spectrum 𝒜)) : IsClosed Z ↔ ∃ s, Z = zero_locus 𝒜 s := by\n  rw [← isOpen_compl_iff, is_open_iff, compl_compl]\n#align is_closed_iff_zero_locus is_closed_iff_zero_locus\n\n",
 "ideal_le_vanishing_ideal_zero_locus":
 "theorem ideal_le_vanishing_ideal_zero_locus (I : Ideal A) : I ≤ (vanishing_ideal (zero_locus 𝒜 I)).to_ideal :=\n  (gc_ideal _).le_u_l I\n#align ideal_le_vanishing_ideal_zero_locus ideal_le_vanishing_ideal_zero_locus\n\n",
 "homogeneous_ideal_le_vanishing_ideal_zero_locus":
 "theorem homogeneous_ideal_le_vanishing_ideal_zero_locus (I : homogeneous_ideal 𝒜) :\n    I ≤ vanishing_ideal (zero_locus 𝒜 I) :=\n  (gc_homogeneous_ideal _).le_u_l I\n#align homogeneous_ideal_le_vanishing_ideal_zero_locus homogeneous_ideal_le_vanishing_ideal_zero_locus\n\n",
 "gc_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/-- `zero_locus` and `vanishing_ideal` form a galois connection. -/\ntheorem gc_set :\n    @GaloisConnection (Set A) («expr ᵒᵈ» (Set (projective_spectrum 𝒜))) _ _ (fun s => zero_locus 𝒜 s) fun t =>\n      vanishing_ideal t :=\n  by\n  have ideal_gc : GaloisConnection Ideal.span coe := (Submodule.gi A _).gc\n  simpa [zero_locus_span, Function.comp] using GaloisConnection.compose ideal_gc (gc_ideal 𝒜)\n#align gc_set gc_set\n\n",
 "gc_ideal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/-- `zero_locus` and `vanishing_ideal` form a galois connection. -/\ntheorem gc_ideal :\n    @GaloisConnection (Ideal A) («expr ᵒᵈ» (Set (projective_spectrum 𝒜))) _ _ (fun I => zero_locus 𝒜 I) fun t =>\n      (vanishing_ideal t).to_ideal :=\n  fun I t => subset_zero_locus_iff_le_vanishing_ideal t I\n#align gc_ideal gc_ideal\n\n",
 "gc_homogeneous_ideal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\ntheorem gc_homogeneous_ideal :\n    @GaloisConnection (homogeneous_ideal 𝒜) («expr ᵒᵈ» (Set (projective_spectrum 𝒜))) _ _ (fun I => zero_locus 𝒜 I)\n      fun t => vanishing_ideal t :=\n  fun I t => by\n  simpa [show I.to_ideal ≤ (vanishing_ideal t).to_ideal ↔ I ≤ vanishing_ideal t from iff.rfl] using\n    subset_zero_locus_iff_le_vanishing_ideal t I.to_ideal\n#align gc_homogeneous_ideal gc_homogeneous_ideal\n\n",
 "coe_vanishing_ideal":
 "theorem coe_vanishing_ideal (t : Set (projective_spectrum 𝒜)) :\n    (vanishing_ideal t : Set A) = { f | ∀ x : projective_spectrum 𝒜, x ∈ t → f ∈ x.as_homogeneous_ideal } :=\n  by\n  ext f\n  rw [vanishing_ideal, SetLike.mem_coe, ← homogeneous_ideal.mem_iff, homogeneous_ideal.to_ideal_infi,\n    Submodule.mem_infᵢ]\n  apply forall_congr' fun x => _\n  rw [homogeneous_ideal.to_ideal_infi, Submodule.mem_infᵢ, homogeneous_ideal.mem_iff]\n#align coe_vanishing_ideal coe_vanishing_ideal\n\n",
 "basic_open_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem basic_open_zero : basic_open 𝒜 (0 : A) = «expr⊥» :=\n  TopologicalSpace.Opens.ext <| by simp\n#align basic_open_zero basic_open_zero\n\n",
 "basic_open_pow":
 "@[simp]\ntheorem basic_open_pow (f : A) (n : ℕ) (hn : 0 < n) : basic_open 𝒜 (f ^ n) = basic_open 𝒜 f :=\n  TopologicalSpace.Opens.ext <| by simpa using zero_locus_singleton_pow 𝒜 f n hn\n#align basic_open_pow basic_open_pow\n\n",
 "basic_open_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem basic_open_one : basic_open 𝒜 (1 : A) = «expr⊤» :=\n  TopologicalSpace.Opens.ext <| by simp\n#align basic_open_one basic_open_one\n\n",
 "basic_open_mul_le_right":
 "theorem basic_open_mul_le_right (f g : A) : basic_open 𝒜 (f * g) ≤ basic_open 𝒜 g :=\n  by\n  rw [basic_open_mul 𝒜 f g]\n  exact inf_le_right\n#align basic_open_mul_le_right basic_open_mul_le_right\n\n",
 "basic_open_mul_le_left":
 "theorem basic_open_mul_le_left (f g : A) : basic_open 𝒜 (f * g) ≤ basic_open 𝒜 f :=\n  by\n  rw [basic_open_mul 𝒜 f g]\n  exact inf_le_left\n#align basic_open_mul_le_left basic_open_mul_le_left\n\n",
 "basic_open_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\ntheorem basic_open_mul (f g : A) : basic_open 𝒜 (f * g) = «expr ⊓ » (basic_open 𝒜 f) (basic_open 𝒜 g) :=\n  TopologicalSpace.Opens.ext <| by simp [zero_locus_singleton_mul]\n#align basic_open_mul basic_open_mul\n\n",
 "basic_open_eq_zero_locus_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem basic_open_eq_zero_locus_compl (r : A) :\n    (basic_open 𝒜 r : Set (projective_spectrum 𝒜)) = «expr ᶜ» (zero_locus 𝒜 {r}) :=\n  Set.ext fun x => by simpa only [Set.mem_compl_iff, mem_zero_locus, Set.singleton_subset_iff]\n#align basic_open_eq_zero_locus_compl basic_open_eq_zero_locus_compl\n\n",
 "basic_open_eq_union_of_projection":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem basic_open_eq_union_of_projection (f : A) :\n    basic_open 𝒜 f =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (basic_open 𝒜 (graded_algebra.proj 𝒜 i f)) :=\n  TopologicalSpace.Opens.ext <|\n    Set.ext fun z => by\n      erw [mem_coe_basic_open, TopologicalSpace.Opens.mem_supₛ]\n      constructor <;> intro hz\n      · rcases show ∃ i, graded_algebra.proj 𝒜 i f ∉ z.as_homogeneous_ideal\n            by\n            contrapose! hz with H\n            classical\n              rw [← direct_sum.sum_support_decompose 𝒜 f]\n              apply Ideal.sum_mem _ fun i hi => H i with\n          ⟨i, hi⟩\n        exact ⟨basic_open 𝒜 (graded_algebra.proj 𝒜 i f), ⟨i, rfl⟩, by rwa [mem_basic_open]⟩\n      · obtain ⟨_, ⟨i, rfl⟩, hz⟩ := hz\n        exact fun rid => hz (z.1.2 i rid)\n#align basic_open_eq_union_of_projection basic_open_eq_union_of_projection\n\n",
 "as_ideal_lt_as_ideal":
 "@[simp]\ntheorem as_ideal_lt_as_ideal (x y : projective_spectrum 𝒜) : x.as_homogeneous_ideal < y.as_homogeneous_ideal ↔ x < y :=\n  iff.rfl\n#align as_ideal_lt_as_ideal as_ideal_lt_as_ideal\n\n",
 "as_ideal_le_as_ideal":
 "@[simp]\ntheorem as_ideal_le_as_ideal (x y : projective_spectrum 𝒜) : x.as_homogeneous_ideal ≤ y.as_homogeneous_ideal ↔ x ≤ y :=\n  iff.rfl\n#align as_ideal_le_as_ideal as_ideal_le_as_ideal\n\n"}