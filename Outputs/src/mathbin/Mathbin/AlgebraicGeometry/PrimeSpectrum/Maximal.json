{"to_prime_spectrum_range":
 "theorem to_prime_spectrum_range :\n    Set.range (@to_prime_spectrum R _) = { x | IsClosed ({x} : Set <| prime_spectrum R) } :=\n  by\n  simp only [is_closed_singleton_iff_is_maximal]\n  ext ⟨x, _⟩\n  exact ⟨fun ⟨y, hy⟩ => hy ▸ y.is_maximal, fun hx => ⟨⟨x, hx⟩, rfl⟩⟩\n#align to_prime_spectrum_range to_prime_spectrum_range\n\n",
 "to_prime_spectrum_injective":
 "/-\nCopyright (c) 2022 David Kurniadi Angdinata. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: David Kurniadi Angdinata\n-/\ntheorem to_prime_spectrum_injective : (@to_prime_spectrum R _).injective := fun ⟨_, _⟩ ⟨_, _⟩ h => by\n  simpa only [mk.inj_eq] using (prime_spectrum.ext_iff _ _).mp h\n#align to_prime_spectrum_injective to_prime_spectrum_injective\n\n",
 "to_prime_spectrum_continuous":
 "theorem to_prime_spectrum_continuous : Continuous <| @to_prime_spectrum R _ :=\n  continuous_induced_dom\n#align to_prime_spectrum_continuous to_prime_spectrum_continuous\n\n",
 "infi_localization_eq_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/-- An integral domain is equal to the intersection of its localizations at all its prime ideals\nviewed as subalgebras of its field of fractions. -/\ntheorem infi_localization_eq_bot :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (localization.subalgebra.of_field K _ <| v.as_ideal.prime_compl_le_non_zero_divisors) =\n      «expr⊥» :=\n  by\n  ext x\n  rw [Algebra.mem_infᵢ]\n  constructor\n  · rw [← maximal_spectrum.infi_localization_eq_bot, Algebra.mem_infᵢ]\n    exact fun hx ⟨v, hv⟩ => hx ⟨v, hv.is_prime⟩\n  · rw [Algebra.mem_bot]\n    rintro ⟨y, rfl⟩ ⟨v, hv⟩\n    exact ⟨y, 1, v.ne_top_iff_one.mp hv.ne_top, by rw [map_one, inv_one, mul_one]⟩\n#align infi_localization_eq_bot infi_localization_eq_bot\n\n"}