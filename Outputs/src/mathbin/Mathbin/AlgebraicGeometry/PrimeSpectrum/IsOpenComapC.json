{"is_open_map_comap_C":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-- The morphism `C⁺ : Spec R[x] → Spec R` is open.\nStacks Project \"Lemma 00FB\", first part.\n\nhttps://stacks.math.columbia.edu/tag/00FB\n-/\ntheorem is_open_map_comap_C : is_open_map (prime_spectrum.comap (C : «expr →+* » R (polynomial R))) :=\n  by\n  rintro U ⟨s, z⟩\n  rw [← compl_compl U, ← z, ← Union_of_singleton_coe s, zero_locus_Union, compl_Inter, image_Union]\n  simp_rw [← image_of_Df_eq_comap_C_compl_zero_locus]\n  exact is_open_Union fun f => is_open_image_of_Df\n#align is_open_map_comap_C is_open_map_comap_C\n\n",
 "is_open_image_of_Df":
 "/-\nCopyright (c) 2021 Damiano Testa. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Damiano Testa\n-/\ntheorem is_open_image_of_Df : is_open (image_of_Df f) :=\n  by\n  rw [image_of_Df, set_of_exists fun i (x : prime_spectrum R) => coeff f i ∉ x.as_ideal]\n  exact is_open_Union fun i => is_open_basic_open\n#align is_open_image_of_Df is_open_image_of_Df\n\n",
 "image_of_Df_eq_comap_C_compl_zero_locus":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/-- The open set `image_of_Df f` coincides with the image of `basic_open f` under the\nmorphism `C⁺ : Spec R[x] → Spec R`. -/\ntheorem image_of_Df_eq_comap_C_compl_zero_locus :\n    image_of_Df f = «expr '' » (prime_spectrum.comap (C : «expr →+* » R (polynomial R))) («expr ᶜ» (zero_locus {f})) :=\n  by\n  ext x\n  refine' ⟨fun hx => ⟨⟨map C x.as_ideal, is_prime_map_C_of_is_prime x.is_prime⟩, ⟨_, _⟩⟩, _⟩\n  · rw [mem_compl_iff, mem_zero_locus, singleton_subset_iff]\n    cases' hx with i hi\n    exact fun a => hi (mem_map_C_iff.mp a i)\n  · ext x\n    refine' ⟨fun h => _, fun h => subset_span (mem_image_of_mem C.1 h)⟩\n    rw [← @coeff_C_zero R x _]\n    exact mem_map_C_iff.mp h 0\n  · rintro ⟨xli, complement, rfl⟩\n    exact comap_C_mem_image_of_Df complement\n#align image_of_Df_eq_comap_C_compl_zero_locus image_of_Df_eq_comap_C_compl_zero_locus\n\n",
 "comap_C_mem_image_of_Df":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-- If a point of `Spec R[x]` is not contained in the vanishing set of `f`, then its image in\n`Spec R` is contained in the open set where at least one of the coefficients of `f` is non-zero.\nThis lemma is a reformulation of `exists_C_coeff_not_mem`. -/\ntheorem comap_C_mem_image_of_Df {I : prime_spectrum (polynomial R)}\n    (H : I ∈ «expr ᶜ» (zero_locus {f} : set (prime_spectrum (polynomial R)))) :\n    prime_spectrum.comap (polynomial.C : «expr →+* » R (polynomial R)) I ∈ image_of_Df f :=\n  exists_C_coeff_not_mem (mem_compl_zero_locus_iff_not_mem.mp H)\n#align comap_C_mem_image_of_Df comap_C_mem_image_of_Df\n\n"}