{"t_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem t_snd (i j : 𝒰.J) : «expr ≫ » (t 𝒰 f g i j) pullback.snd = «expr ≫ » pullback.fst pullback.fst :=\n  by\n  delta t\n  simp only [pullback_symmetry_hom_comp_snd_assoc, category.assoc, id.def, pullback_symmetry_hom_comp_snd,\n    pullback_assoc_hom_fst, pullback.lift_fst_assoc, pullback_symmetry_hom_comp_fst, pullback_assoc_inv_fst_snd]\n#align t_snd t_snd\n\n",
 "t_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem t_id (i : 𝒰.J) : t 𝒰 f g i i = («expr𝟙») _ :=\n  by\n  apply pullback.hom_ext <;> rw [category.id_comp]\n  apply pullback.hom_ext\n  · rw [← cancel_mono (𝒰.map i)]\n    simp only [pullback.condition, category.assoc, t_fst_fst]\n  · simp only [category.assoc, t_fst_snd]\n  · rw [← cancel_mono (𝒰.map i)]\n    simp only [pullback.condition, t_snd, category.assoc]\n#align t_id t_id\n\n",
 "t_fst_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem t_fst_snd (i j : 𝒰.J) :\n    «expr ≫ » (t 𝒰 f g i j) («expr ≫ » pullback.fst pullback.snd) = «expr ≫ » pullback.fst pullback.snd :=\n  by\n  delta t\n  simp only [pullback_symmetry_hom_comp_snd_assoc, category.comp_id, category.assoc, id.def,\n    pullback_symmetry_hom_comp_fst_assoc, pullback_assoc_hom_snd_snd, pullback.lift_snd, pullback_assoc_inv_snd]\n#align t_fst_snd t_fst_snd\n\n",
 "t_fst_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2022 Andrew Yang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Andrew Yang\n-/\n@[simp, reassoc.1]\ntheorem t_fst_fst (i j : 𝒰.J) : «expr ≫ » (t 𝒰 f g i j) («expr ≫ » pullback.fst pullback.fst) = pullback.snd :=\n  by\n  delta t\n  simp only [category.assoc, id.def, pullback_symmetry_hom_comp_fst_assoc, pullback_assoc_hom_snd_fst,\n    pullback.lift_fst_assoc, pullback_symmetry_hom_comp_snd, pullback_assoc_inv_fst_fst, pullback_symmetry_hom_comp_fst]\n#align t_fst_fst t_fst_fst\n\n",
 "t'_snd_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem t'_snd_snd (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k) («expr ≫ » pullback.snd pullback.snd) =\n      «expr ≫ » pullback.fst («expr ≫ » pullback.fst pullback.fst) :=\n  by\n  delta t'\n  simp only [category.assoc, pullback_symmetry_hom_comp_snd_assoc, pullback_right_pullback_fst_iso_inv_fst_assoc,\n    pullback.lift_fst_assoc, t_snd, pullback_right_pullback_fst_iso_hom_fst_assoc]\n#align t'_snd_snd t'_snd_snd\n\n",
 "t'_snd_fst_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem t'_snd_fst_snd (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k) («expr ≫ » pullback.snd («expr ≫ » pullback.fst pullback.snd)) =\n      «expr ≫ » pullback.fst («expr ≫ » pullback.fst pullback.snd) :=\n  by\n  delta t'\n  simp only [category.assoc, pullback_symmetry_hom_comp_snd_assoc, pullback_right_pullback_fst_iso_inv_fst_assoc,\n    pullback.lift_fst_assoc, t_fst_snd, pullback_right_pullback_fst_iso_hom_fst_assoc]\n#align t'_snd_fst_snd t'_snd_fst_snd\n\n",
 "t'_snd_fst_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem t'_snd_fst_fst (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k) («expr ≫ » pullback.snd («expr ≫ » pullback.fst pullback.fst)) =\n      «expr ≫ » pullback.fst pullback.snd :=\n  by\n  delta t'\n  simp only [category.assoc, pullback_symmetry_hom_comp_snd_assoc, pullback_right_pullback_fst_iso_inv_fst_assoc,\n    pullback.lift_fst_assoc, t_fst_fst, pullback_right_pullback_fst_iso_hom_fst_assoc]\n#align t'_snd_fst_fst t'_snd_fst_fst\n\n",
 "t'_fst_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem t'_fst_snd (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k) («expr ≫ » pullback.fst pullback.snd) = «expr ≫ » pullback.snd pullback.snd :=\n  by\n  delta t'\n  simp only [category.comp_id, category.assoc, pullback_symmetry_hom_comp_fst_assoc,\n    pullback_right_pullback_fst_iso_inv_snd_snd, pullback.lift_snd, pullback_right_pullback_fst_iso_hom_snd]\n#align t'_fst_snd t'_fst_snd\n\n",
 "t'_fst_fst_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem t'_fst_fst_snd (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k) («expr ≫ » pullback.fst («expr ≫ » pullback.fst pullback.snd)) =\n      «expr ≫ » pullback.fst («expr ≫ » pullback.fst pullback.snd) :=\n  by\n  delta t'\n  simp only [category.assoc, pullback_symmetry_hom_comp_fst_assoc, pullback_right_pullback_fst_iso_inv_snd_fst_assoc,\n    pullback.lift_fst_assoc, t_fst_snd, pullback_right_pullback_fst_iso_hom_fst_assoc]\n#align t'_fst_fst_snd t'_fst_fst_snd\n\n",
 "t'_fst_fst_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem t'_fst_fst_fst (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k) («expr ≫ » pullback.fst («expr ≫ » pullback.fst pullback.fst)) =\n      «expr ≫ » pullback.fst pullback.snd :=\n  by\n  delta t'\n  simp only [category.assoc, pullback_symmetry_hom_comp_fst_assoc, pullback_right_pullback_fst_iso_inv_snd_fst_assoc,\n    pullback.lift_fst_assoc, t_fst_fst, pullback_right_pullback_fst_iso_hom_fst_assoc]\n#align t'_fst_fst_fst t'_fst_fst_fst\n\n",
 "pullback_p1_iso_inv_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pullback_p1_iso_inv_snd (i : 𝒰.J) : «expr ≫ » (pullback_p1_iso 𝒰 f g i).inv pullback.snd = pullback.fst :=\n  by\n  delta pullback_p1_iso\n  simp only [pullback.lift_snd]\n#align pullback_p1_iso_inv_snd pullback_p1_iso_inv_snd\n\n",
 "pullback_p1_iso_inv_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pullback_p1_iso_inv_fst (i : 𝒰.J) : «expr ≫ » (pullback_p1_iso 𝒰 f g i).inv pullback.fst = (gluing 𝒰 f g).ι i :=\n  by\n  delta pullback_p1_iso\n  simp only [pullback.lift_fst]\n#align pullback_p1_iso_inv_fst pullback_p1_iso_inv_fst\n\n",
 "pullback_p1_iso_hom_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pullback_p1_iso_hom_ι (i : 𝒰.J) : «expr ≫ » (pullback_p1_iso 𝒰 f g i).hom ((gluing 𝒰 f g).ι i) = pullback.fst :=\n  by rw [← pullback_p1_iso_inv_fst, iso.hom_inv_id_assoc]\n#align pullback_p1_iso_hom_ι pullback_p1_iso_hom_ι\n\n",
 "pullback_p1_iso_hom_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pullback_p1_iso_hom_snd (i : 𝒰.J) :\n    «expr ≫ » (pullback_p1_iso 𝒰 f g i).hom pullback.snd = «expr ≫ » pullback.fst (p2 𝒰 f g) :=\n  by\n  delta pullback_p1_iso\n  simp only [pullback.lift_snd]\n#align pullback_p1_iso_hom_snd pullback_p1_iso_hom_snd\n\n",
 "pullback_p1_iso_hom_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pullback_p1_iso_hom_fst (i : 𝒰.J) : «expr ≫ » (pullback_p1_iso 𝒰 f g i).hom pullback.fst = pullback.snd :=\n  by\n  delta pullback_p1_iso\n  simp only [pullback.lift_fst]\n#align pullback_p1_iso_hom_fst pullback_p1_iso_hom_fst\n\n",
 "pullback_fst_ι_to_V_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pullback_fst_ι_to_V_snd (i j : 𝒰.J) :\n    «expr ≫ » (pullback_fst_ι_to_V 𝒰 f g i j) pullback.snd = «expr ≫ » pullback.fst pullback.snd :=\n  by\n  delta pullback_fst_ι_to_V\n  simp only [iso.trans_hom, pullback.congr_hom_hom, category.assoc, pullback.lift_snd, category.comp_id,\n    pullback_right_pullback_fst_iso_hom_snd, pullback_symmetry_hom_comp_snd_assoc]\n#align pullback_fst_ι_to_V_snd pullback_fst_ι_to_V_snd\n\n",
 "pullback_fst_ι_to_V_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pullback_fst_ι_to_V_fst (i j : 𝒰.J) : «expr ≫ » (pullback_fst_ι_to_V 𝒰 f g i j) pullback.fst = pullback.snd :=\n  by\n  delta pullback_fst_ι_to_V\n  simp only [iso.trans_hom, pullback.congr_hom_hom, category.assoc, pullback.lift_fst, category.comp_id,\n    pullback_right_pullback_fst_iso_hom_fst, pullback_symmetry_hom_comp_fst]\n#align pullback_fst_ι_to_V_fst pullback_fst_ι_to_V_fst\n\n",
 "p_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- `p⁻¹(Uᵢ ∩ Uⱼ)` where `p : Uᵢ ×[Z] Y ⟶ Uᵢ ⟶ X`.\ntheorem p_comm : «expr ≫ » (p1 𝒰 f g) f = «expr ≫ » (p2 𝒰 f g) g :=\n  by\n  apply multicoequalizer.hom_ext\n  intro i\n  erw [multicoequalizer.π_desc_assoc, multicoequalizer.π_desc_assoc]\n  rw [category.assoc, pullback.condition]\n#align p_comm p_comm\n\n",
 "lift_comp_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-- We show that the map `W ×[X] Uᵢ ⟶ Uᵢ ×[Z] Y ⟶ W` is the first projection, where the\nfirst map is given by the lift of `W ×[X] Uᵢ ⟶ Uᵢ` and `W ×[X] Uᵢ ⟶ W ⟶ Y`.\n\nIt suffices to show that the two map agrees when restricted onto `Uⱼ ×[Z] Y`. In this case,\nboth maps factor through `V j i` via `pullback_fst_ι_to_V` -/\ntheorem lift_comp_ι (i : 𝒰.J) :\n    «expr ≫ »\n        (pullback.lift pullback.snd («expr ≫ » pullback.fst (p2 𝒰 f g))\n          (by rw [← pullback.condition_assoc, category.assoc, p_comm]))\n        ((gluing 𝒰 f g).ι i) =\n      (pullback.fst : «expr ⟶ » (pullback (p1 𝒰 f g) (𝒰.map i)) _) :=\n  by\n  apply ((gluing 𝒰 f g).open_cover.pullback_cover pullback.fst).hom_ext\n  intro j\n  dsimp only [open_cover.pullback_cover]\n  trans «expr ≫ » (pullback_fst_ι_to_V 𝒰 f g i j) («expr ≫ » (fV 𝒰 f g j i) ((gluing 𝒰 f g).ι _))\n  · rw [← show _ = «expr ≫ » (fV 𝒰 f g j i) _ from (gluing 𝒰 f g).glue_condition j i]\n    simp_rw [← category.assoc]\n    congr 1\n    rw [gluing_to_glue_data_f, gluing_to_glue_data_t]\n    apply pullback.hom_ext <;> simp_rw [category.assoc]\n    · rw [t_fst_fst, pullback.lift_fst, pullback_fst_ι_to_V_snd]\n    · rw [t_fst_snd, pullback.lift_snd, pullback_fst_ι_to_V_fst_assoc, pullback.condition_assoc]\n      erw [multicoequalizer.π_desc]\n  · rw [pullback.condition, ← category.assoc]\n    congr 1\n    apply pullback.hom_ext\n    · simp only [pullback_fst_ι_to_V_fst]\n    · simp only [pullback_fst_ι_to_V_fst]\n#align lift_comp_ι lift_comp_ι\n\n",
 "has_pullback_of_cover":
 "theorem has_pullback_of_cover : HasPullback f g :=\n  ⟨⟨⟨_, glued_is_limit 𝒰 f g⟩⟩⟩\n#align has_pullback_of_cover has_pullback_of_cover\n\n",
 "glued_lift_pullback_map_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem glued_lift_pullback_map_snd (i j : 𝒰.J) :\n    «expr ≫ » (glued_lift_pullback_map 𝒰 f g s i j) pullback.snd = «expr ≫ » pullback.snd pullback.snd :=\n  by\n  delta glued_lift_pullback_map\n  simp only [category.assoc, category.comp_id, id.def, pullback.lift_snd, pullback_right_pullback_fst_iso_hom_snd]\n#align glued_lift_pullback_map_snd glued_lift_pullback_map_snd\n\n",
 "glued_lift_pullback_map_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[reassoc.1]\ntheorem glued_lift_pullback_map_fst (i j : 𝒰.J) :\n    «expr ≫ » (glued_lift_pullback_map 𝒰 f g s i j) pullback.fst =\n      «expr ≫ » pullback.fst\n        («expr ≫ » (pullbackSymmetry _ _).hom\n          (pullback.map _ _ _ _ ((«expr𝟙») _) s.snd f (Category.id_comp _).symm s.condition)) :=\n  by\n  delta glued_lift_pullback_map\n  simp only [category.assoc, id.def, pullback.lift_fst, pullback_right_pullback_fst_iso_hom_fst_assoc]\n#align glued_lift_pullback_map_fst glued_lift_pullback_map_fst\n\n",
 "glued_lift_p2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem glued_lift_p2 : «expr ≫ » (glued_lift 𝒰 f g s) (p2 𝒰 f g) = s.snd :=\n  by\n  rw [← cancel_epi (𝒰.pullback_cover s.fst).from_glued]\n  apply multicoequalizer.hom_ext\n  intro b\n  erw [multicoequalizer.π_desc_assoc, multicoequalizer.π_desc_assoc]\n  delta glued_lift\n  simp_rw [← category.assoc]\n  rw [(𝒰.pullback_cover s.fst).ι_glue_morphisms]\n  simp_rw [category.assoc]\n  erw [multicoequalizer.π_desc, pullback.lift_snd]\n  rw [pullback_symmetry_hom_comp_snd_assoc]\n  rfl\n#align glued_lift_p2 glued_lift_p2\n\n",
 "glued_lift_p1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem glued_lift_p1 : «expr ≫ » (glued_lift 𝒰 f g s) (p1 𝒰 f g) = s.fst :=\n  by\n  rw [← cancel_epi (𝒰.pullback_cover s.fst).from_glued]\n  apply multicoequalizer.hom_ext\n  intro b\n  erw [multicoequalizer.π_desc_assoc, multicoequalizer.π_desc_assoc]\n  delta glued_lift\n  simp_rw [← category.assoc]\n  rw [(𝒰.pullback_cover s.fst).ι_glue_morphisms]\n  simp_rw [category.assoc]\n  erw [multicoequalizer.π_desc, pullback.lift_fst_assoc, pullback.condition, category.comp_id]\n  rw [pullback_symmetry_hom_comp_fst_assoc]\n#align glued_lift_p1 glued_lift_p1\n\n",
 "cocycle_snd_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem cocycle_snd_snd (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k)\n        («expr ≫ » (t' 𝒰 f g j k i) («expr ≫ » (t' 𝒰 f g k i j) («expr ≫ » pullback.snd pullback.snd))) =\n      «expr ≫ » pullback.snd pullback.snd :=\n  by simp only [t'_snd_snd, t'_fst_fst_fst, t'_fst_snd]\n#align cocycle_snd_snd cocycle_snd_snd\n\n",
 "cocycle_snd_fst_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem cocycle_snd_fst_snd (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k)\n        («expr ≫ » (t' 𝒰 f g j k i)\n          («expr ≫ » (t' 𝒰 f g k i j) («expr ≫ » pullback.snd («expr ≫ » pullback.fst pullback.snd)))) =\n      «expr ≫ » pullback.snd («expr ≫ » pullback.fst pullback.snd) :=\n  by simp only [pullback.condition_assoc, t'_snd_fst_snd]\n#align cocycle_snd_fst_snd cocycle_snd_fst_snd\n\n",
 "cocycle_snd_fst_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem cocycle_snd_fst_fst (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k)\n        («expr ≫ » (t' 𝒰 f g j k i)\n          («expr ≫ » (t' 𝒰 f g k i j) («expr ≫ » pullback.snd («expr ≫ » pullback.fst pullback.fst)))) =\n      «expr ≫ » pullback.snd («expr ≫ » pullback.fst pullback.fst) :=\n  by\n  rw [← cancel_mono (𝒰.map i)]\n  simp only [pullback.condition_assoc, t'_snd_fst_fst, t'_fst_snd, t'_snd_snd]\n#align cocycle_snd_fst_fst cocycle_snd_fst_fst\n\n",
 "cocycle_fst_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem cocycle_fst_snd (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k)\n        («expr ≫ » (t' 𝒰 f g j k i) («expr ≫ » (t' 𝒰 f g k i j) («expr ≫ » pullback.fst pullback.snd))) =\n      «expr ≫ » pullback.fst pullback.snd :=\n  by simp only [t'_fst_snd, t'_snd_snd, t'_fst_fst_fst]\n#align cocycle_fst_snd cocycle_fst_snd\n\n",
 "cocycle_fst_fst_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem cocycle_fst_fst_snd (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k)\n        («expr ≫ » (t' 𝒰 f g j k i)\n          («expr ≫ » (t' 𝒰 f g k i j) («expr ≫ » pullback.fst («expr ≫ » pullback.fst pullback.snd)))) =\n      «expr ≫ » pullback.fst («expr ≫ » pullback.fst pullback.snd) :=\n  by simp only [t'_fst_fst_snd]\n#align cocycle_fst_fst_snd cocycle_fst_fst_snd\n\n",
 "cocycle_fst_fst_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem cocycle_fst_fst_fst (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k)\n        («expr ≫ » (t' 𝒰 f g j k i)\n          («expr ≫ » (t' 𝒰 f g k i j) («expr ≫ » pullback.fst («expr ≫ » pullback.fst pullback.fst)))) =\n      «expr ≫ » pullback.fst («expr ≫ » pullback.fst pullback.fst) :=\n  by simp only [t'_fst_fst_fst, t'_fst_snd, t'_snd_snd]\n#align cocycle_fst_fst_fst cocycle_fst_fst_fst\n\n",
 "cocycle":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n-- `by tidy` should solve it, but it times out.\ntheorem cocycle (i j k : 𝒰.J) :\n    «expr ≫ » (t' 𝒰 f g i j k) («expr ≫ » (t' 𝒰 f g j k i) (t' 𝒰 f g k i j)) = («expr𝟙») _ :=\n  by\n  apply pullback.hom_ext <;> rw [category.id_comp]\n  · apply pullback.hom_ext\n    · apply pullback.hom_ext\n      · simp_rw [category.assoc]\n        exact cocycle_fst_fst_fst 𝒰 f g i j k\n      · simp_rw [category.assoc]\n        exact cocycle_fst_fst_snd 𝒰 f g i j k\n    · simp_rw [category.assoc]\n      exact cocycle_fst_snd 𝒰 f g i j k\n  · apply pullback.hom_ext\n    · apply pullback.hom_ext\n      · simp_rw [category.assoc]\n        exact cocycle_snd_fst_fst 𝒰 f g i j k\n      · simp_rw [category.assoc]\n        exact cocycle_snd_fst_snd 𝒰 f g i j k\n    · simp_rw [category.assoc]\n      exact cocycle_snd_snd 𝒰 f g i j k\n#align cocycle cocycle\n\n",
 "affine_affine_has_pullback":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem affine_affine_has_pullback {B C : CommRing} {X : Scheme} (f : «expr ⟶ » X (Spec.obj (Opposite.op C)))\n    (g : «expr ⟶ » (Spec.obj (Opposite.op B)) (Spec.obj (Opposite.op C))) : HasPullback f g :=\n  has_pullback_of_cover X.affine_cover f g\n#align affine_affine_has_pullback affine_affine_has_pullback\n\n"}