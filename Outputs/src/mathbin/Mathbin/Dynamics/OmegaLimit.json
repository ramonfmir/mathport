{"omega_limit_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_union : (omega_limit) f ϕ (s₁ ∪ s₂) = (omega_limit) f ϕ s₁ ∪ (omega_limit) f ϕ s₂ :=\n  by\n  ext y; constructor\n  · simp only [mem_union, mem_omega_limit_iff_frequently, union_inter_distrib_right, union_nonempty,\n      frequently_or_distrib]\n    contrapose!\n    simp only [not_frequently, not_nonempty_iff_eq_empty, ← subset_empty_iff]\n    rintro ⟨⟨n₁, hn₁, h₁⟩, ⟨n₂, hn₂, h₂⟩⟩\n    refine' ⟨n₁ ∩ n₂, inter_mem hn₁ hn₂, h₁.mono fun t => _, h₂.mono fun t => _⟩\n    exacts[subset.trans <| inter_subset_inter_right _ <| preimage_mono <| inter_subset_left _ _,\n      subset.trans <| inter_subset_inter_right _ <| preimage_mono <| inter_subset_right _ _]\n  · rintro (hy | hy)\n    exacts[omega_limit_mono_right _ _ (subset_union_left _ _) hy,\n      omega_limit_mono_right _ _ (subset_union_right _ _) hy]\n#align omega_limit_union omega_limit_union\n\n",
 "omega_limit_subset_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_subset_of_tendsto {m : τ → τ} {f₁ f₂ : filter τ} (hf : tendsto m f₁ f₂) :\n    (omega_limit) f₁ (fun t x => ϕ (m t) x) s ⊆ (omega_limit) f₂ ϕ s :=\n  by\n  refine' Inter₂_mono' fun u hu => ⟨«expr ⁻¹' » m u, tendsto_def.mp hf _ hu, _⟩\n  rw [← image2_image_left]\n  exact closure_mono (image2_subset (image_preimage_subset _ _) subset.rfl)\n#align omega_limit_subset_of_tendsto omega_limit_subset_of_tendsto\n\n",
 "omega_limit_subset_closure_fw_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_subset_closure_fw_image {u : set τ} (hu : u ∈ f) : (omega_limit) f ϕ s ⊆ closure (image2 ϕ u s) :=\n  by\n  rw [omega_limit_eq_Inter]\n  intro _ hx\n  rw [mem_Inter] at hx\n  exact hx ⟨u, hu⟩\n#align omega_limit_subset_closure_fw_image omega_limit_subset_closure_fw_image\n\n",
 "omega_limit_preimage_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_preimage_subset {α' : Type _} (ϕ : τ → α' → β) (s : set α') (f : filter τ) (g : α → α') :\n    (omega_limit) f (fun t x => ϕ t (g x)) («expr ⁻¹' » g s) ⊆ (omega_limit) f ϕ s :=\n  maps_to_omega_limit _ (mapsTo_preimage _ _) (fun t x => rfl) continuous_id\n#align omega_limit_preimage_subset omega_limit_preimage_subset\n\n",
 "omega_limit_omega_limit":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_omega_limit (hf : ∀ t, tendsto ((· + ·) t) f f) :\n    (omega_limit) f ϕ ((omega_limit) f ϕ s) ⊆ (omega_limit) f ϕ s :=\n  by\n  simp only [subset_def, mem_omega_limit_iff_frequently₂, frequently_iff]\n  intro _ h\n  rintro n hn u hu\n  rcases mem_nhds_iff.mp hn with ⟨o, ho₁, ho₂, ho₃⟩\n  rcases h o (is_open.mem_nhds ho₂ ho₃) hu with ⟨t, ht₁, ht₂⟩\n  have l₁ : ((omega_limit) f ϕ s ∩ o).nonempty :=\n    ht₂.mono (inter_subset_inter_left _ ((is_invariant_iff_image _ _).mp (is_invariant_omega_limit _ _ _ hf) _))\n  have l₂ : (closure (image2 ϕ u s) ∩ o).nonempty :=\n    l₁.mono fun b hb => ⟨omega_limit_subset_closure_fw_image _ _ _ hu hb.1, hb.2⟩\n  have l₃ : (o ∩ image2 ϕ u s).nonempty := by\n    rcases l₂ with ⟨b, hb₁, hb₂⟩\n    exact mem_closure_iff_nhds.mp hb₁ o (is_open.mem_nhds ho₂ hb₂)\n  rcases l₃ with ⟨ϕra, ho, ⟨_, _, hr, ha, hϕra⟩⟩\n  exact ⟨_, hr, ϕra, ⟨_, ha, hϕra⟩, ho₁ ho⟩\n#align omega_limit_omega_limit omega_limit_omega_limit\n\n",
 "omega_limit_mono_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_mono_right {s₁ s₂ : set α} (hs : s₁ ⊆ s₂) : (omega_limit) f ϕ s₁ ⊆ (omega_limit) f ϕ s₂ :=\n  Inter₂_mono fun u hu => closure_mono (image2_subset Subset.rfl hs)\n#align omega_limit_mono_right omega_limit_mono_right\n\n",
 "omega_limit_mono_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_mono_left {f₁ f₂ : filter τ} (hf : f₁ ≤ f₂) : (omega_limit) f₁ ϕ s ⊆ (omega_limit) f₂ ϕ s :=\n  omega_limit_subset_of_tendsto ϕ s (tendsto_id'.2 hf)\n#align omega_limit_mono_left omega_limit_mono_left\n\n",
 "omega_limit_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_inter : (omega_limit) f ϕ (s₁ ∩ s₂) ⊆ (omega_limit) f ϕ s₁ ∩ (omega_limit) f ϕ s₂ :=\n  subset_inter (omega_limit_mono_right _ _ (inter_subset_left _ _))\n    (omega_limit_mono_right _ _ (inter_subset_right _ _))\n#align omega_limit_inter omega_limit_inter\n\n",
 "omega_limit_image_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_image_subset (t : τ) (ht : tendsto (· + t) f f) :\n    (omega_limit) f ϕ («expr '' » (ϕ t) s) ⊆ (omega_limit) f ϕ s :=\n  by\n  simp only [omega_limit_image_eq, ← map_add]\n  exact omega_limit_subset_of_tendsto ϕ s ht\n#align omega_limit_image_subset omega_limit_image_subset\n\n",
 "omega_limit_image_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/-- the ω-limit of a forward image of `s` is the same as the ω-limit of `s`. -/\n@[simp]\ntheorem omega_limit_image_eq (hf : ∀ t, tendsto (· + t) f f) (t : τ) :\n    (omega_limit) f ϕ («expr '' » (ϕ t) s) = (omega_limit) f ϕ s :=\n  Subset.antisymm (omega_limit_image_subset _ _ _ _ (hf t)) <|\n    calc\n      (omega_limit) f ϕ s = (omega_limit) f ϕ («expr '' » (ϕ (-t)) («expr '' » (ϕ t) s)) := by\n        simp [image_image, ← map_add]\n      _ ⊆ (omega_limit) f ϕ («expr '' » (ϕ t) s) := omega_limit_image_subset _ _ _ _ (hf _)\n      \n#align omega_limit_image_eq omega_limit_image_eq\n\n",
 "omega_limit_eq_bInter_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem omega_limit_eq_bInter_inter {v : set τ} (hv : v ∈ f) :\n    (omega_limit) f ϕ s =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (closure (image2 ϕ (u ∩ v) s)) :=\n  Subset.antisymm (Inter₂_mono' fun u hu => ⟨u ∩ v, inter_mem hu hv, Subset.rfl⟩)\n    (Inter₂_mono fun u hu => closure_mono <| image2_subset (inter_subset_left _ _) Subset.rfl)\n#align omega_limit_eq_bInter_inter omega_limit_eq_bInter_inter\n\n",
 "omega_limit_eq_Inter_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem omega_limit_eq_Inter_inter {v : set τ} (hv : v ∈ f) :\n    (omega_limit) f ϕ s =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (closure (image2 ϕ (u ∩ v) s)) :=\n  by\n  rw [omega_limit_eq_bInter_inter _ _ _ hv]\n  apply bInter_eq_Inter\n#align omega_limit_eq_Inter_inter omega_limit_eq_Inter_inter\n\n",
 "omega_limit_eq_Inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\ntheorem omega_limit_eq_Inter :\n    (omega_limit) f ϕ s =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (closure (image2 ϕ u s)) :=\n  binterᵢ_eq_interᵢ _ _\n#align omega_limit_eq_Inter omega_limit_eq_Inter\n\n",
 "omega_limit_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/-\nCopyright (c) 2020 Jean Lo. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jean Lo\n-/\ntheorem omega_limit_def :\n    (omega_limit) f ϕ s =\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        (closure (image2 ϕ u s)) :=\n  rfl\n#align omega_limit_def omega_limit_def\n\n",
 "omega_limit_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem omega_limit_Union (p : ι → set α) :\n    «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n        ((omega_limit) f ϕ (p i)) ⊆\n      (omega_limit) f ϕ\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (p i)) :=\n  by\n  rw [Union_subset_iff]\n  exact fun i => omega_limit_mono_right _ _ (subset_Union _ _)\n#align omega_limit_Union omega_limit_Union\n\n",
 "omega_limit_Inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem omega_limit_Inter (p : ι → set α) :\n    (omega_limit) f ϕ\n        («expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" (p i)) ⊆\n      «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\"\n        ((omega_limit) f ϕ (p i)) :=\n  subset_Inter fun i => omega_limit_mono_right _ _ (interᵢ_subset _ _)\n#align omega_limit_Inter omega_limit_Inter\n\n",
 "nonempty_omega_limit_of_is_compact_absorbing":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/-- The ω-limit of a nonempty set w.r.t. a nontrivial filter is nonempty. -/\ntheorem nonempty_omega_limit_of_is_compact_absorbing [ne_bot f] {c : set β} (hc₁ : is_compact c)\n    (hc₂ : ∃ v ∈ f, closure (image2 ϕ v s) ⊆ c) (hs : s.nonempty) : ((omega_limit) f ϕ s).nonempty :=\n  by\n  rcases hc₂ with ⟨v, hv₁, hv₂⟩\n  rw [omega_limit_eq_Inter_inter _ _ _ hv₁]\n  apply is_compact.nonempty_Inter_of_directed_nonempty_compact_closed\n  · rintro ⟨u₁, hu₁⟩ ⟨u₂, hu₂⟩\n    use ⟨u₁ ∩ u₂, inter_mem hu₁ hu₂⟩\n    constructor\n    all_goals exact closure_mono (image2_subset (inter_subset_inter_left _ (by simp)) subset.rfl)\n  · intro u\n    have hn : (image2 ϕ (u ∩ v) s).nonempty := nonempty.image2 (nonempty_of_mem (inter_mem u.prop hv₁)) hs\n    exact hn.mono subset_closure\n  · intro\n    apply is_compact_of_is_closed_subset hc₁ is_closed_closure\n    calc\n      _ ⊆ closure (image2 ϕ v s) := closure_mono (image2_subset (inter_subset_right _ _) subset.rfl)\n      _ ⊆ c := hv₂\n      \n  · exact fun _ => is_closed_closure\n#align nonempty_omega_limit_of_is_compact_absorbing nonempty_omega_limit_of_is_compact_absorbing\n\n",
 "nonempty_omega_limit":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem nonempty_omega_limit [compact_space β] [ne_bot f] (hs : s.nonempty) : ((omega_limit) f ϕ s).nonempty :=\n  nonempty_omega_limit_of_is_compact_absorbing _ _ _ is_compact_univ ⟨univ, univ_mem, subset_univ _⟩ hs\n#align nonempty_omega_limit nonempty_omega_limit\n\n",
 "mem_omega_limit_singleton_iff_map_cluster_point":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/-- An element `y` is in the ω-limit of `x` w.r.t. `f` if the forward\n    images of `x` frequently (w.r.t. `f`) falls within an arbitrary\n    neighbourhood of `y`. -/\ntheorem mem_omega_limit_singleton_iff_map_cluster_point (x : α) (y : β) :\n    y ∈ (omega_limit) f ϕ {x} ↔ map_cluster_pt y f fun t => ϕ t x := by\n  simp_rw [mem_omega_limit_iff_frequently, map_cluster_pt_iff, singleton_inter_nonempty, mem_preimage]\n#align mem_omega_limit_singleton_iff_map_cluster_point mem_omega_limit_singleton_iff_map_cluster_point\n\n",
 "mem_omega_limit_iff_frequently₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/-- An element `y` is in the ω-limit set of `s` w.r.t. `f` if the\n    forward images of `s` frequently (w.r.t. `f`) intersect arbitrary\n    neighbourhoods of `y`. -/\ntheorem mem_omega_limit_iff_frequently₂ (y : β) :\n    y ∈ (omega_limit) f ϕ s ↔\n      ∀ n ∈ (nhds) y,\n        «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\" f\n          («expr '' » (ϕ t) s ∩ n).nonempty :=\n  by simp_rw [mem_omega_limit_iff_frequently, image_inter_nonempty_iff]\n#align mem_omega_limit_iff_frequently₂ mem_omega_limit_iff_frequently₂\n\n",
 "mem_omega_limit_iff_frequently":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- An element `y` is in the ω-limit set of `s` w.r.t. `f` if the\n    preimages of an arbitrary neighbourhood of `y` frequently\n    (w.r.t. `f`) intersects of `s`. -/\ntheorem mem_omega_limit_iff_frequently (y : β) :\n    y ∈ (omega_limit) f ϕ s ↔\n      ∀ n ∈ (nhds) y,\n        «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\" f\n          (s ∩ «expr ⁻¹' » (ϕ t) n).nonempty :=\n  by\n  simp_rw [frequently_iff, omega_limit_def, mem_Inter, mem_closure_iff_nhds]\n  constructor\n  · intro h _ hn _ hu\n    rcases h _ hu _ hn with ⟨_, _, _, _, ht, hx, hϕtx⟩\n    exact ⟨_, ht, _, hx, by rwa [mem_preimage, hϕtx]⟩\n  · intro h _ hu _ hn\n    rcases h _ hn hu with ⟨_, ht, _, hx, hϕtx⟩\n    exact ⟨_, hϕtx, _, _, ht, hx, rfl⟩\n#align mem_omega_limit_iff_frequently mem_omega_limit_iff_frequently\n\n",
 "maps_to_omega_limit'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem maps_to_omega_limit' {α' β' : Type _} [topological_space β'] {f : filter τ} {ϕ : τ → α → β} {ϕ' : τ → α' → β'}\n    {ga : α → α'} {s' : set α'} (hs : MapsTo ga s s') {gb : β → β'}\n    (hg :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n        (EqOn (gb ∘ ϕ t) (ϕ' t ∘ ga) s))\n    (hgc : continuous gb) : MapsTo gb ((omega_limit) f ϕ s) ((omega_limit) f ϕ' s') :=\n  by\n  simp only [omega_limit_def, mem_Inter, maps_to]\n  intro y hy u hu\n  refine' map_mem_closure hgc (hy _ (inter_mem hu hg)) (forall_image2_iff.2 fun t ht x hx => _)\n  calc\n    gb (ϕ t x) = ϕ' t (ga x) := ht.2 hx\n    _ ∈ image2 ϕ' u s' := mem_image2_of_mem ht.1 (hs hx)\n    \n#align maps_to_omega_limit' maps_to_omega_limit'\n\n",
 "maps_to_omega_limit":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem maps_to_omega_limit {α' β' : Type _} [topological_space β'] {f : filter τ} {ϕ : τ → α → β} {ϕ' : τ → α' → β'}\n    {ga : α → α'} {s' : set α'} (hs : MapsTo ga s s') {gb : β → β'} (hg : ∀ t x, gb (ϕ t x) = ϕ' t (ga x))\n    (hgc : continuous gb) : MapsTo gb ((omega_limit) f ϕ s) ((omega_limit) f ϕ' s') :=\n  maps_to_omega_limit' _ hs (eventually_of_forall fun t x hx => hg t x) hgc\n#align maps_to_omega_limit maps_to_omega_limit\n\n",
 "is_invariant_omega_limit":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem is_invariant_omega_limit (hf : ∀ t, tendsto ((· + ·) t) f f) : is_invariant ϕ ((omega_limit) f ϕ s) :=\n  by\n  refine' fun t => maps_to.mono_right _ (omega_limit_subset_of_tendsto ϕ s (hf t))\n  exact\n    maps_to_omega_limit _ (maps_to_id _) (fun t' x => (ϕ.map_add _ _ _).symm) (continuous_const.flow ϕ continuous_id)\n#align is_invariant_omega_limit is_invariant_omega_limit\n\n",
 "is_closed_omega_limit":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem is_closed_omega_limit : is_closed ((omega_limit) f ϕ s) :=\n  is_closed_Inter fun u => is_closed_Inter fun hu => is_closed_closure\n#align is_closed_omega_limit is_closed_omega_limit\n\n",
 "eventually_maps_to_of_is_open_of_omega_limit_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\ntheorem eventually_maps_to_of_is_open_of_omega_limit_subset [compact_space β] {v : set β} (hv₁ : is_open v)\n    (hv₂ : (omega_limit) f ϕ s ⊆ v) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n      (MapsTo (ϕ t) s v) :=\n  by\n  rcases eventually_closure_subset_of_is_open_of_omega_limit_subset f ϕ s hv₁ hv₂ with ⟨u, hu_mem, hu⟩\n  refine' mem_of_superset hu_mem fun t ht x hx => _\n  exact hu (subset_closure <| mem_image2_of_mem ht hx)\n#align eventually_maps_to_of_is_open_of_omega_limit_subset eventually_maps_to_of_is_open_of_omega_limit_subset\n\n",
 "eventually_maps_to_of_is_compact_absorbing_of_is_open_of_omega_limit_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\ntheorem eventually_maps_to_of_is_compact_absorbing_of_is_open_of_omega_limit_subset [t2_space β] {c : set β}\n    (hc₁ : is_compact c)\n    (hc₂ :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n        (MapsTo (ϕ t) s c))\n    {n : set β} (hn₁ : is_open n) (hn₂ : (omega_limit) f ϕ s ⊆ n) :\n    «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n      (MapsTo (ϕ t) s n) :=\n  by\n  rcases eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset f ϕ s hc₁ hc₂ hn₁ hn₂ with\n    ⟨u, hu_mem, hu⟩\n  refine' mem_of_superset hu_mem fun t ht x hx => _\n  exact hu (subset_closure <| mem_image2_of_mem ht hx)\n#align\n  eventually_maps_to_of_is_compact_absorbing_of_is_open_of_omega_limit_subset eventually_maps_to_of_is_compact_absorbing_of_is_open_of_omega_limit_subset\n\n",
 "eventually_closure_subset_of_is_open_of_omega_limit_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\ntheorem eventually_closure_subset_of_is_open_of_omega_limit_subset [compact_space β] {v : set β} (hv₁ : is_open v)\n    (hv₂ : (omega_limit) f ϕ s ⊆ v) : ∃ u ∈ f, closure (image2 ϕ u s) ⊆ v :=\n  eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset' _ _ _ is_compact_univ\n    ⟨univ, univ_mem, subset_univ _⟩ hv₁ hv₂\n#align\n  eventually_closure_subset_of_is_open_of_omega_limit_subset eventually_closure_subset_of_is_open_of_omega_limit_subset\n\n",
 "eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/-- A set is eventually carried into any open neighbourhood of its ω-limit:\nif `c` is a compact set such that `closure {ϕ t x | t ∈ v, x ∈ s} ⊆ c` for some `v ∈ f`\nand `n` is an open neighbourhood of `ω f ϕ s`, then for some `u ∈ f` we have\n`closure {ϕ t x | t ∈ u, x ∈ s} ⊆ n`. -/\ntheorem eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset' {c : set β}\n    (hc₁ : is_compact c) (hc₂ : ∃ v ∈ f, closure (image2 ϕ v s) ⊆ c) {n : set β} (hn₁ : is_open n)\n    (hn₂ : (omega_limit) f ϕ s ⊆ n) : ∃ u ∈ f, closure (image2 ϕ u s) ⊆ n :=\n  by\n  rcases hc₂ with ⟨v, hv₁, hv₂⟩\n  let k := closure (image2 ϕ v s)\n  have hk : is_compact (k \\ n) := is_compact.diff (is_compact_of_is_closed_subset hc₁ is_closed_closure hv₂) hn₁\n  let j u := «expr ᶜ» (closure (image2 ϕ (u ∩ v) s))\n  have hj₁ : ∀ u ∈ f, is_open (j u) := fun _ _ => is_open_compl_iff.mpr is_closed_closure\n  have hj₂ :\n    k \\ n ⊆ «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (j u) :=\n    by\n    have :\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (j u) =\n        «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (j u) :=\n      bUnion_eq_Union _ _\n    rw [this, diff_subset_comm, diff_Union]\n    rw [omega_limit_eq_Inter_inter _ _ _ hv₁] at hn₂\n    simp_rw [diff_compl]\n    rw [← inter_Inter]\n    exact subset.trans (inter_subset_right _ _) hn₂\n  rcases hk.elim_finite_subcover_image hj₁ hj₂ with ⟨g, hg₁ : ∀ u ∈ g, u ∈ f, hg₂, hg₃⟩\n  let w := «expr⋂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋂ , »\" u ∩ v\n  have hw₂ : w ∈ f := by simpa [*]\n  have hw₃ : k \\ n ⊆ «expr ᶜ» (closure (image2 ϕ w s)) :=\n    calc\n      k \\ n ⊆ «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (j u) :=\n        hg₃\n      _ ⊆ «expr ᶜ» (closure (image2 ϕ w s)) :=\n        by\n        simp only [Union_subset_iff, compl_subset_compl]\n        intro u hu\n        mono* using w\n        exact Inter_subset_of_subset u (Inter_subset_of_subset hu subset.rfl)\n      \n  have hw₄ : «expr ᶜ» k ⊆ «expr ᶜ» (closure (image2 ϕ w s)) :=\n    by\n    rw [compl_subset_compl]\n    calc\n      closure (image2 ϕ w s) ⊆ _ := closure_mono (image2_subset (inter_subset_right _ _) subset.rfl)\n      \n  have hnc : «expr ᶜ» n ⊆ k \\ n ∪ «expr ᶜ» k := by rw [union_comm, ← inter_subset, diff_eq, inter_comm]\n  have hw : closure (image2 ϕ w s) ⊆ n := compl_subset_compl.mp (subset.trans hnc (union_subset hw₃ hw₄))\n  exact ⟨_, hw₂, hw⟩\n#align\n  eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset' eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset'\n\n",
 "eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `omega_limit -/\n/-- A set is eventually carried into any open neighbourhood of its ω-limit:\nif `c` is a compact set such that `closure {ϕ t x | t ∈ v, x ∈ s} ⊆ c` for some `v ∈ f`\nand `n` is an open neighbourhood of `ω f ϕ s`, then for some `u ∈ f` we have\n`closure {ϕ t x | t ∈ u, x ∈ s} ⊆ n`. -/\ntheorem eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset [t2_space β] {c : set β}\n    (hc₁ : is_compact c)\n    (hc₂ :\n      «expr∀ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᶠ in , »\" f\n        (MapsTo (ϕ t) s c))\n    {n : set β} (hn₁ : is_open n) (hn₂ : (omega_limit) f ϕ s ⊆ n) : ∃ u ∈ f, closure (image2 ϕ u s) ⊆ n :=\n  eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset' f ϕ _ hc₁\n    ⟨_, hc₂, closure_minimal (image2_subset_iff.2 fun t => id) hc₁.is_closed⟩ hn₁ hn₂\n#align\n  eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset eventually_closure_subset_of_is_compact_absorbing_of_is_open_of_omega_limit_subset\n\n"}