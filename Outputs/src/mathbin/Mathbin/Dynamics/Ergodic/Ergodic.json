{"quasi_ergodic":
 "/-- An ergodic map is quasi ergodic. -/\ntheorem quasi_ergodic (hf : ergodic f μ) : quasi_ergodic f μ :=\n  { hf.to_pre_ergodic, hf.to_measure_preserving.quasi_measure_preserving with }\n#align quasi_ergodic quasi_ergodic\n\n",
 "prob_eq_zero_or_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-- On a probability space, the (pre)ergodicity condition is a zero one law. -/\ntheorem prob_eq_zero_or_one [is_probability_measure μ] (hf : pre_ergodic f μ) (hs : measurable_set s)\n    (hs' : «expr ⁻¹' » f s = s) : μ s = 0 ∨ μ s = 1 := by simpa [hs] using hf.measure_self_or_compl_eq_zero hs hs'\n#align prob_eq_zero_or_one prob_eq_zero_or_one\n\n",
 "pre_ergodic_of_pre_ergodic_conjugate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem pre_ergodic_of_pre_ergodic_conjugate (hg : measure_preserving g μ μ') (hf : pre_ergodic f μ) {f' : β → β}\n    (h_comm : g ∘ f = f' ∘ g) : pre_ergodic f' μ' :=\n  ⟨by\n    intro s hs₀ hs₁\n    replace hs₁ : «expr ⁻¹' » f («expr ⁻¹' » g s) = «expr ⁻¹' » g s; · rw [← preimage_comp, h_comm, preimage_comp, hs₁]\n    cases' hf.ae_empty_or_univ (hg.measurable hs₀) hs₁ with hs₂ hs₂ <;> [left, right]\n    · simpa only [ae_eq_empty, hg.measure_preimage hs₀] using hs₂\n    · simpa only [ae_eq_univ, ← preimage_compl, hg.measure_preimage hs₀.compl] using hs₂⟩\n#align pre_ergodic_of_pre_ergodic_conjugate pre_ergodic_of_pre_ergodic_conjugate\n\n",
 "pre_ergodic_conjugate_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ᵐ » -/\ntheorem pre_ergodic_conjugate_iff {e : «expr ≃ᵐ » α β} (h : measure_preserving e μ μ') :\n    pre_ergodic (e ∘ f ∘ e.symm) μ' ↔ pre_ergodic f μ :=\n  by\n  refine'\n    ⟨fun hf => pre_ergodic_of_pre_ergodic_conjugate (h.symm e) hf _, fun hf =>\n      pre_ergodic_of_pre_ergodic_conjugate h hf _⟩\n  · change (e.symm ∘ e) ∘ f ∘ e.symm = f ∘ e.symm\n    rw [measurable_equiv.symm_comp_self, comp.left_id]\n  · change e ∘ f = e ∘ f ∘ e.symm ∘ e\n    rw [measurable_equiv.symm_comp_self, comp.right_id]\n#align pre_ergodic_conjugate_iff pre_ergodic_conjugate_iff\n\n",
 "of_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem of_iterate (n : ℕ) (hf : pre_ergodic («expr ^[ ]» f n) μ) : pre_ergodic f μ :=\n  ⟨fun s hs hs' => hf.ae_empty_or_univ hs <| IsFixedPt.preimage_iterate hs' n⟩\n#align of_iterate of_iterate\n\n",
 "measure_self_or_compl_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/-\nCopyright (c) 2022 Oliver Nash. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Oliver Nash\n-/\ntheorem measure_self_or_compl_eq_zero (hf : pre_ergodic f μ) (hs : measurable_set s) (hs' : «expr ⁻¹' » f s = s) :\n    μ s = 0 ∨ μ («expr ᶜ» s) = 0 := by simpa using hf.ae_empty_or_univ hs hs'\n#align measure_self_or_compl_eq_zero measure_self_or_compl_eq_zero\n\n",
 "ergodic_conjugate_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ᵐ » -/\ntheorem ergodic_conjugate_iff {e : «expr ≃ᵐ » α β} (h : measure_preserving e μ μ') :\n    ergodic (e ∘ f ∘ e.symm) μ' ↔ ergodic f μ :=\n  by\n  have : measure_preserving (e ∘ f ∘ e.symm) μ' μ' ↔ measure_preserving f μ μ := by\n    rw [h.comp_left_iff, (measure_preserving.symm e h).comp_right_iff]\n  replace h : pre_ergodic (e ∘ f ∘ e.symm) μ' ↔ pre_ergodic f μ := h.pre_ergodic_conjugate_iff\n  exact\n    ⟨fun hf => { this.mp hf.to_measure_preserving, h.mp hf.to_pre_ergodic with }, fun hf =>\n      { this.mpr hf.to_measure_preserving, h.mpr hf.to_pre_ergodic with }⟩\n#align ergodic_conjugate_iff ergodic_conjugate_iff\n\n",
 "ae_empty_or_univ_of_preimage_ae_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- See also `ergodic.ae_empty_or_univ_of_preimage_ae_le`. -/\ntheorem ae_empty_or_univ_of_preimage_ae_le' (hf : ergodic f μ) (hs : measurable_set s)\n    (hs' : «expr ≤ᵐ[ ] » («expr ⁻¹' » f s) μ s) (h_fin : μ s ≠ ennreal.top) :\n    «expr =ᵐ[ ] » s μ (∅ : set α) ∨ «expr =ᵐ[ ] » s μ univ :=\n  by\n  refine' hf.quasi_ergodic.ae_empty_or_univ' hs _\n  refine' ae_eq_of_ae_subset_of_measure_ge hs' (hf.measure_preimage hs).symm.le _ h_fin\n  exact measurable_set_preimage hf.measurable hs\n#align ae_empty_or_univ_of_preimage_ae_le' ae_empty_or_univ_of_preimage_ae_le'\n\n",
 "ae_empty_or_univ_of_preimage_ae_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_empty_or_univ_of_preimage_ae_le (hf : ergodic f μ) (hs : measurable_set s)\n    (hs' : «expr ≤ᵐ[ ] » («expr ⁻¹' » f s) μ s) : «expr =ᵐ[ ] » s μ (∅ : set α) ∨ «expr =ᵐ[ ] » s μ univ :=\n  ae_empty_or_univ_of_preimage_ae_le' hf hs hs' <| measure_ne_top μ s\n#align ae_empty_or_univ_of_preimage_ae_le ae_empty_or_univ_of_preimage_ae_le\n\n",
 "ae_empty_or_univ_of_image_ae_le'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- See also `ergodic.ae_empty_or_univ_of_image_ae_le`. -/\ntheorem ae_empty_or_univ_of_image_ae_le' (hf : ergodic f μ) (hs : measurable_set s)\n    (hs' : «expr ≤ᵐ[ ] » («expr '' » f s) μ s) (h_fin : μ s ≠ ennreal.top) :\n    «expr =ᵐ[ ] » s μ (∅ : set α) ∨ «expr =ᵐ[ ] » s μ univ :=\n  by\n  replace hs' : «expr ≤ᵐ[ ] » s μ («expr ⁻¹' » f s) :=\n    (has_subset.subset.eventually_le (subset_preimage_image f s)).trans\n      (hf.quasi_measure_preserving.preimage_mono_ae hs')\n  exact ae_empty_or_univ_of_ae_le_preimage' hf hs hs' h_fin\n#align ae_empty_or_univ_of_image_ae_le' ae_empty_or_univ_of_image_ae_le'\n\n",
 "ae_empty_or_univ_of_image_ae_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_empty_or_univ_of_image_ae_le (hf : ergodic f μ) (hs : measurable_set s)\n    (hs' : «expr ≤ᵐ[ ] » («expr '' » f s) μ s) : «expr =ᵐ[ ] » s μ (∅ : set α) ∨ «expr =ᵐ[ ] » s μ univ :=\n  ae_empty_or_univ_of_image_ae_le' hf hs hs' <| measure_ne_top μ s\n#align ae_empty_or_univ_of_image_ae_le ae_empty_or_univ_of_image_ae_le\n\n",
 "ae_empty_or_univ_of_ae_le_preimage'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- See also `ergodic.ae_empty_or_univ_of_ae_le_preimage`. -/\ntheorem ae_empty_or_univ_of_ae_le_preimage' (hf : ergodic f μ) (hs : measurable_set s)\n    (hs' : «expr ≤ᵐ[ ] » s μ («expr ⁻¹' » f s)) (h_fin : μ s ≠ ennreal.top) :\n    «expr =ᵐ[ ] » s μ (∅ : set α) ∨ «expr =ᵐ[ ] » s μ univ :=\n  by\n  replace h_fin : μ («expr ⁻¹' » f s) ≠ ennreal.top; · rwa [hf.measure_preimage hs]\n  refine' hf.quasi_ergodic.ae_empty_or_univ' hs _\n  exact (ae_eq_of_ae_subset_of_measure_ge hs' (hf.measure_preimage hs).le hs h_fin).symm\n#align ae_empty_or_univ_of_ae_le_preimage' ae_empty_or_univ_of_ae_le_preimage'\n\n",
 "ae_empty_or_univ_of_ae_le_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≤ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\ntheorem ae_empty_or_univ_of_ae_le_preimage (hf : ergodic f μ) (hs : measurable_set s)\n    (hs' : «expr ≤ᵐ[ ] » s μ («expr ⁻¹' » f s)) : «expr =ᵐ[ ] » s μ (∅ : set α) ∨ «expr =ᵐ[ ] » s μ univ :=\n  ae_empty_or_univ_of_ae_le_preimage' hf hs hs' <| measure_ne_top μ s\n#align ae_empty_or_univ_of_ae_le_preimage ae_empty_or_univ_of_ae_le_preimage\n\n",
 "ae_empty_or_univ'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/-- For a quasi ergodic map, sets that are almost invariant (rather than strictly invariant) are\nstill either almost empty or full. -/\ntheorem ae_empty_or_univ' (hf : quasi_ergodic f μ) (hs : measurable_set s) (hs' : «expr =ᵐ[ ] » («expr ⁻¹' » f s) μ s) :\n    «expr =ᵐ[ ] » s μ (∅ : set α) ∨ «expr =ᵐ[ ] » s μ univ :=\n  by\n  obtain ⟨t, h₀, h₁, h₂⟩ := hf.to_quasi_measure_preserving.exists_preimage_eq_of_preimage_ae hs hs'\n  rcases hf.ae_empty_or_univ h₀ h₂ with (h₃ | h₃) <;> [left, right] <;> exact ae_eq_trans h₁.symm h₃\n#align ae_empty_or_univ' ae_empty_or_univ'\n\n"}