{"upper_crossing_time_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem upper_crossing_time_zero' : upper_crossing_time a b f («expr⊥») n ω = «expr⊥» :=\n  eq_bot_iff.2 upper_crossing_time_le\n#align upper_crossing_time_zero' upper_crossing_time_zero'\n\n",
 "upper_crossing_time_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/-\nCopyright (c) 2022 Kexing Ying. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kexing Ying\n-/\n@[simp]\ntheorem upper_crossing_time_zero : upper_crossing_time a b f N 0 = «expr⊥» :=\n  rfl\n#align upper_crossing_time_zero upper_crossing_time_zero\n\n",
 "upper_crossing_time_succ_eq":
 "theorem upper_crossing_time_succ_eq (ω : Ω) :\n    upper_crossing_time a b f N (n + 1) ω = hitting f (Set.Ici b) (lower_crossing_time a b f N n ω) N ω :=\n  by\n  simp only [upper_crossing_time_succ]\n  rfl\n#align upper_crossing_time_succ_eq upper_crossing_time_succ_eq\n\n",
 "upper_crossing_time_succ":
 "theorem upper_crossing_time_succ :\n    upper_crossing_time a b f N (n + 1) ω =\n      hitting f (Set.Ici b) (lower_crossing_time_aux a f (upper_crossing_time a b f N n ω) N ω) N ω :=\n  by rw [upper_crossing_time]\n#align upper_crossing_time_succ upper_crossing_time_succ\n\n",
 "upper_crossing_time_stabilize'":
 "theorem upper_crossing_time_stabilize' (hnm : n ≤ m) (hn : N ≤ upper_crossing_time a b f N n ω) :\n    upper_crossing_time a b f N m ω = N :=\n  upper_crossing_time_stabilize hnm (le_antisymm upper_crossing_time_le hn)\n#align upper_crossing_time_stabilize' upper_crossing_time_stabilize'\n\n",
 "upper_crossing_time_stabilize":
 "theorem upper_crossing_time_stabilize (hnm : n ≤ m) (hn : upper_crossing_time a b f N n ω = N) :\n    upper_crossing_time a b f N m ω = N :=\n  le_antisymm upper_crossing_time_le (le_trans (le_of_eq hn.symm) (upper_crossing_time_mono hnm))\n#align upper_crossing_time_stabilize upper_crossing_time_stabilize\n\n",
 "upper_crossing_time_mono":
 "theorem upper_crossing_time_mono (hnm : n ≤ m) : upper_crossing_time a b f N n ω ≤ upper_crossing_time a b f N m ω :=\n  by\n  suffices monotone fun n => upper_crossing_time a b f N n ω by exact this hnm\n  exact\n    monotone_nat_of_le_succ fun n =>\n      le_trans upper_crossing_time_le_lower_crossing_time lower_crossing_time_le_upper_crossing_time_succ\n#align upper_crossing_time_mono upper_crossing_time_mono\n\n",
 "upper_crossing_time_lt_succ":
 "theorem upper_crossing_time_lt_succ (hab : a < b) (hn : upper_crossing_time a b f N (n + 1) ω ≠ N) :\n    upper_crossing_time a b f N n ω < upper_crossing_time a b f N (n + 1) ω :=\n  lt_of_le_of_lt upper_crossing_time_le_lower_crossing_time (lower_crossing_time_lt_upper_crossing_time hab hn)\n#align upper_crossing_time_lt_succ upper_crossing_time_lt_succ\n\n",
 "upper_crossing_time_lt_of_le_upcrossings_before":
 "theorem upper_crossing_time_lt_of_le_upcrossings_before (hN : 0 < N) (hab : a < b)\n    (hn : n ≤ upcrossings_before a b f N ω) : upper_crossing_time a b f N n ω < N :=\n  haveI : upper_crossing_time a b f N (upcrossings_before a b f N ω) ω < N :=\n    (upper_crossing_time_lt_nonempty hN).cSup_mem\n      ((OrderBot.bddBelow _).finite_of_bdd_above (upper_crossing_time_lt_bdd_above hab))\n  lt_of_le_of_lt (upper_crossing_time_mono hn) this\n#align upper_crossing_time_lt_of_le_upcrossings_before upper_crossing_time_lt_of_le_upcrossings_before\n\n",
 "upper_crossing_time_lt_nonempty":
 "theorem upper_crossing_time_lt_nonempty (hN : 0 < N) : { n | upper_crossing_time a b f N n ω < N }.nonempty :=\n  ⟨0, hN⟩\n#align upper_crossing_time_lt_nonempty upper_crossing_time_lt_nonempty\n\n",
 "upper_crossing_time_lt_lower_crossing_time":
 "theorem upper_crossing_time_lt_lower_crossing_time (hab : a < b) (hn : lower_crossing_time a b f N (n + 1) ω ≠ N) :\n    upper_crossing_time a b f N (n + 1) ω < lower_crossing_time a b f N (n + 1) ω :=\n  by\n  refine'\n    lt_of_le_of_ne upper_crossing_time_le_lower_crossing_time fun h =>\n      not_le.2 hab <| le_trans _ (stopped_value_lower_crossing_time hn)\n  simp only [stopped_value]\n  rw [← h]\n  exact stopped_value_upper_crossing_time (h.symm ▸ hn)\n#align upper_crossing_time_lt_lower_crossing_time upper_crossing_time_lt_lower_crossing_time\n\n",
 "upper_crossing_time_lt_bdd_above":
 "theorem upper_crossing_time_lt_bdd_above (hab : a < b) : BddAbove { n | upper_crossing_time a b f N n ω < N } :=\n  by\n  obtain ⟨k, hk⟩ := exists_upper_crossing_time_eq f N ω hab\n  refine' ⟨k, fun n (hn : upper_crossing_time a b f N n ω < N) => _⟩\n  by_contra hn'\n  exact hn.ne (upper_crossing_time_stabilize (not_le.1 hn').le hk)\n#align upper_crossing_time_lt_bdd_above upper_crossing_time_lt_bdd_above\n\n",
 "upper_crossing_time_le_lower_crossing_time":
 "theorem upper_crossing_time_le_lower_crossing_time :\n    upper_crossing_time a b f N n ω ≤ lower_crossing_time a b f N n ω := by\n  simp only [lower_crossing_time, le_hitting upper_crossing_time_le ω]\n#align upper_crossing_time_le_lower_crossing_time upper_crossing_time_le_lower_crossing_time\n\n",
 "upper_crossing_time_le":
 "theorem upper_crossing_time_le : upper_crossing_time a b f N n ω ≤ N :=\n  by\n  cases n\n  · simp only [upper_crossing_time_zero, Pi.bot_apply, bot_le]\n  · simp only [upper_crossing_time_succ, hitting_le]\n#align upper_crossing_time_le upper_crossing_time_le\n\n",
 "upper_crossing_time_eq_upper_crossing_time_of_lt":
 "theorem upper_crossing_time_eq_upper_crossing_time_of_lt {M : ℕ} (hNM : N ≤ M)\n    (h : upper_crossing_time a b f N n ω < N) : upper_crossing_time a b f M n ω = upper_crossing_time a b f N n ω :=\n  by\n  cases n\n  · simp\n  · exact (crossing_eq_crossing_of_upper_crossing_time_lt hNM h).1\n#align upper_crossing_time_eq_upper_crossing_time_of_lt upper_crossing_time_eq_upper_crossing_time_of_lt\n\n",
 "upper_crossing_time_eq_of_upcrossings_before_lt":
 "theorem upper_crossing_time_eq_of_upcrossings_before_lt (hab : a < b) (hn : upcrossings_before a b f N ω < n) :\n    upper_crossing_time a b f N n ω = N :=\n  by\n  refine' le_antisymm upper_crossing_time_le (not_lt.1 _)\n  convert not_mem_of_csupₛ_lt hn (upper_crossing_time_lt_bdd_above hab)\n#align upper_crossing_time_eq_of_upcrossings_before_lt upper_crossing_time_eq_of_upcrossings_before_lt\n\n",
 "upper_crossing_time_eq_of_bound_le":
 "theorem upper_crossing_time_eq_of_bound_le (hab : a < b) (hn : N ≤ n) : upper_crossing_time a b f N n ω = N :=\n  le_antisymm upper_crossing_time_le\n    (le_trans (upper_crossing_time_bound_eq f N ω hab).symm.le (upper_crossing_time_mono hn))\n#align upper_crossing_time_eq_of_bound_le upper_crossing_time_eq_of_bound_le\n\n",
 "upper_crossing_time_bound_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem upper_crossing_time_bound_eq (f : ℕ → Ω → exprℝ) (N : ℕ) (ω : Ω) (hab : a < b) :\n    upper_crossing_time a b f N N ω = N :=\n  by\n  by_cases hN' : N < nat.find (exists_upper_crossing_time_eq f N ω hab)\n  · refine' le_antisymm upper_crossing_time_le _\n    have hmono :\n      strict_mono_on (fun n => upper_crossing_time a b f N n ω)\n        (Set.Iic (nat.find (exists_upper_crossing_time_eq f N ω hab)).pred) :=\n      by\n      refine' strictMonoOn_Iic_of_lt_succ fun m hm => upper_crossing_time_lt_succ hab _\n      rw [Nat.lt_pred_iff] at hm\n      convert nat.find_min _ hm\n    convert StrictMonoOn.Iic_id_le hmono N (Nat.le_pred_of_lt hN')\n  · rw [not_lt] at hN'\n    exact upper_crossing_time_stabilize hN' (nat.find_spec (exists_upper_crossing_time_eq f N ω hab))\n#align upper_crossing_time_bound_eq upper_crossing_time_bound_eq\n\n",
 "upcrossings_lt_top_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem upcrossings_lt_top_iff : upcrossings a b f ω < ennreal.top ↔ ∃ k, ∀ N, upcrossings_before a b f N ω ≤ k :=\n  by\n  have : upcrossings a b f ω < ennreal.top ↔ ∃ k : nnreal, upcrossings a b f ω ≤ k :=\n    by\n    constructor\n    · intro h\n      lift upcrossings a b f ω to nnreal using h.ne with r hr\n      exact ⟨r, le_rfl⟩\n    · rintro ⟨k, hk⟩\n      exact lt_of_le_of_lt hk ennreal.coe_lt_top\n  simp_rw [this, upcrossings, supᵢ_le_iff]\n  constructor <;> rintro ⟨k, hk⟩\n  · obtain ⟨m, hm⟩ := exists_nat_ge k\n    refine' ⟨m, fun N => ennreal.coe_nat_le_coe_nat.1 ((hk N).trans _)⟩\n    rwa [← ennreal.coe_nat, ennreal.coe_le_coe]\n  · refine' ⟨k, fun N => _⟩\n    simp only [ennreal.coe_nat, ennreal.coe_nat_le_coe_nat, hk N]\n#align upcrossings_lt_top_iff upcrossings_lt_top_iff\n\n",
 "upcrossings_before_zero'":
 "@[simp]\ntheorem upcrossings_before_zero' : upcrossings_before a b f 0 = 0 :=\n  by\n  ext ω\n  exact upcrossings_before_zero\n#align upcrossings_before_zero' upcrossings_before_zero'\n\n",
 "upcrossings_before_zero":
 "theorem upcrossings_before_zero : upcrossings_before a b f 0 ω = 0 := by simp [upcrossings_before]\n#align upcrossings_before_zero upcrossings_before_zero\n\n",
 "upcrossings_before_pos_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\ntheorem upcrossings_before_pos_eq (hab : a < b) :\n    upcrossings_before 0 (b - a) (fun n ω => «expr ⁺» (f n ω - a)) N ω = upcrossings_before a b f N ω := by\n  simp_rw [upcrossings_before, (crossing_pos_eq hab).1]\n#align upcrossings_before_pos_eq upcrossings_before_pos_eq\n\n",
 "upcrossings_before_mono":
 "theorem upcrossings_before_mono (hab : a < b) : monotone fun N ω => upcrossings_before a b f N ω :=\n  by\n  intro N M hNM ω\n  simp only [upcrossings_before]\n  by_cases hemp : { n : ℕ | upper_crossing_time a b f N n ω < N }.nonempty\n  · refine' csupₛ_le_csupₛ (upper_crossing_time_lt_bdd_above hab) hemp fun n hn => _\n    rw [Set.mem_setOf_eq, upper_crossing_time_eq_upper_crossing_time_of_lt hNM hn]\n    exact lt_of_lt_of_le hn hNM\n  · rw [Set.not_nonempty_iff_eq_empty] at hemp\n    simp [hemp, csupₛ_empty, bot_eq_zero', zero_le']\n#align upcrossings_before_mono upcrossings_before_mono\n\n",
 "upcrossings_before_lt_of_exists_upcrossing":
 "theorem upcrossings_before_lt_of_exists_upcrossing (hab : a < b) {N₁ N₂ : ℕ} (hN₁ : N ≤ N₁) (hN₁' : f N₁ ω < a)\n    (hN₂ : N₁ ≤ N₂) (hN₂' : b < f N₂ ω) : upcrossings_before a b f N ω < upcrossings_before a b f (N₂ + 1) ω :=\n  by\n  refine' lt_of_lt_of_le (nat.lt_succ_self _) (le_csupₛ (upper_crossing_time_lt_bdd_above hab) _)\n  rw [Set.mem_setOf_eq, upper_crossing_time_succ_eq, hitting_lt_iff _ le_rfl]\n  swap\n  · infer_instance\n  · refine' ⟨N₂, ⟨_, nat.lt_succ_self _⟩, hN₂'.le⟩\n    rw [lower_crossing_time, hitting_le_iff_of_lt _ (nat.lt_succ_self _)]\n    refine' ⟨N₁, ⟨le_trans _ hN₁, hN₂⟩, hN₁'.le⟩\n    by_cases hN : 0 < N\n    · have : upper_crossing_time a b f N (upcrossings_before a b f N ω) ω < N :=\n        nat.Sup_mem (upper_crossing_time_lt_nonempty hN) (upper_crossing_time_lt_bdd_above hab)\n      rw [upper_crossing_time_eq_upper_crossing_time_of_lt (hN₁.trans (hN₂.trans <| nat.le_succ _)) this]\n      exact this.le\n    · rw [not_lt, le_zero_iff] at hN\n      rw [hN, upcrossings_before_zero, upper_crossing_time_zero]\n      rfl\n#align upcrossings_before_lt_of_exists_upcrossing upcrossings_before_lt_of_exists_upcrossing\n\n",
 "upcrossings_before_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem upcrossings_before_le (f : ℕ → Ω → exprℝ) (ω : Ω) (hab : a < b) : upcrossings_before a b f N ω ≤ N :=\n  by\n  by_cases hN : N = 0\n  · subst hN\n    rw [upcrossings_before_zero]\n  · refine' csupₛ_le ⟨0, zero_lt_iff.2 hN⟩ fun n (hn : _ < _) => _\n    by_contra hnN\n    exact hn.ne (upper_crossing_time_eq_of_bound_le hab (not_le.1 hnN).le)\n#align upcrossings_before_le upcrossings_before_le\n\n",
 "upcrossings_before_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem upcrossings_before_eq_sum (hab : a < b) :\n    upcrossings_before a b f N ω =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (finset.Ico 1 (N + 1)) ({ n | upper_crossing_time a b f N n ω < N }.indicator 1 i) :=\n  by\n  by_cases hN : N = 0\n  · simp [hN]\n  rw [← finset.sum_Ico_consecutive _ (nat.succ_le_succ zero_le') (nat.succ_le_succ (upcrossings_before_le f ω hab))]\n  have h₁ :\n    ∀ k ∈ finset.Ico 1 (upcrossings_before a b f N ω + 1),\n      { n : ℕ | upper_crossing_time a b f N n ω < N }.indicator 1 k = 1 :=\n    by\n    rintro k hk\n    rw [finset.mem_Ico] at hk\n    rw [set.indicator_of_mem]\n    · rfl\n    · exact upper_crossing_time_lt_of_le_upcrossings_before (zero_lt_iff.2 hN) hab (Nat.lt_succ_iff.1 hk.2)\n  have h₂ :\n    ∀ k ∈ finset.Ico (upcrossings_before a b f N ω + 1) (N + 1),\n      { n : ℕ | upper_crossing_time a b f N n ω < N }.indicator 1 k = 0 :=\n    by\n    rintro k hk\n    rw [finset.mem_Ico, Nat.succ_le_iff] at hk\n    rw [set.indicator_of_not_mem]\n    simp only [Set.mem_setOf_eq, not_lt]\n    exact (upper_crossing_time_eq_of_upcrossings_before_lt hab hk.1).symm.le\n  rw [finset.sum_congr rfl h₁, finset.sum_congr rfl h₂, finset.sum_const, finset.sum_const, smul_eq_mul, mul_one,\n    smul_eq_mul, mul_zero, nat.card_Ico, Nat.add_succ_sub_one, add_zero, add_zero]\n#align upcrossings_before_eq_sum upcrossings_before_eq_sum\n\n",
 "upcrossings_before_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem upcrossings_before_bot [preorder ι] [OrderBot ι] [InfSet ι] {a b : exprℝ} {f : ι → Ω → exprℝ} {ω : Ω} :\n    upcrossings_before a b f («expr⊥») ω = «expr⊥» := by simp [upcrossings_before]\n#align upcrossings_before_bot upcrossings_before_bot\n\n",
 "upcrossing_strat_nonneg":
 "theorem upcrossing_strat_nonneg : 0 ≤ upcrossing_strat a b f N n ω :=\n  finset.sum_nonneg fun i hi => set.indicator_nonneg (fun ω hω => zero_le_one) _\n#align upcrossing_strat_nonneg upcrossing_strat_nonneg\n\n",
 "upcrossing_strat_le_one":
 "theorem upcrossing_strat_le_one : upcrossing_strat a b f N n ω ≤ 1 :=\n  by\n  rw [upcrossing_strat, ← set.indicator_finset_bUnion_apply]\n  · exact set.indicator_le_self' (fun _ _ => zero_le_one) _\n  · intro i hi j hj hij\n    rw [Set.Ico_disjoint_Ico]\n    obtain hij' | hij' := lt_or_gt_of_ne hij\n    · rw [min_eq_left\n          (upper_crossing_time_mono (nat.succ_le_succ hij'.le) :\n            upper_crossing_time a b f N _ ω ≤ upper_crossing_time a b f N _ ω),\n        max_eq_right\n          (lower_crossing_time_mono hij'.le : lower_crossing_time a b f N _ _ ≤ lower_crossing_time _ _ _ _ _ _)]\n      refine' le_trans upper_crossing_time_le_lower_crossing_time (lower_crossing_time_mono (nat.succ_le_of_lt hij'))\n    · rw [gt_iff_lt] at hij'\n      rw [min_eq_right\n          (upper_crossing_time_mono (nat.succ_le_succ hij'.le) :\n            upper_crossing_time a b f N _ ω ≤ upper_crossing_time a b f N _ ω),\n        max_eq_left\n          (lower_crossing_time_mono hij'.le : lower_crossing_time a b f N _ _ ≤ lower_crossing_time _ _ _ _ _ _)]\n      refine' le_trans upper_crossing_time_le_lower_crossing_time (lower_crossing_time_mono (nat.succ_le_of_lt hij'))\n#align upcrossing_strat_le_one upcrossing_strat_le_one\n\n",
 "upcrossing_strat_adapted":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem adapted.upcrossing_strat_adapted (hf : adapted ℱ f) : adapted ℱ (upcrossing_strat a b f N) :=\n  by\n  intro n\n  change\n    (strongly_measurable_of (ℱ n)) fun ω =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range N)\n        (({ n | lower_crossing_time a b f N k ω ≤ n } ∩ { n | n < upper_crossing_time a b f N (k + 1) ω }).indicator 1\n          n)\n  refine'\n    finset.strongly_measurable_sum _ fun i hi =>\n      strongly_measurable_const.indicator ((hf.is_stopping_time_lower_crossing_time n).inter _)\n  simp_rw [← not_le]\n  exact (hf.is_stopping_time_upper_crossing_time n).compl\n#align adapted.upcrossing_strat_adapted adapted.upcrossing_strat_adapted\n\n",
 "sum_upcrossing_strat_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem submartingale.sum_upcrossing_strat_mul [is_finite_measure μ] (hf : submartingale f ℱ μ) (a b : exprℝ) (N : ℕ) :\n    submartingale\n      (fun n : ℕ =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          (upcrossing_strat a b f N k * (f (k + 1) - f k)))\n      ℱ μ :=\n  hf.sum_mul_sub hf.adapted.upcrossing_strat_adapted (fun _ _ => upcrossing_strat_le_one) fun _ _ =>\n    upcrossing_strat_nonneg\n#align submartingale.sum_upcrossing_strat_mul submartingale.sum_upcrossing_strat_mul\n\n",
 "sum_sub_upcrossing_strat_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem submartingale.sum_sub_upcrossing_strat_mul [is_finite_measure μ] (hf : submartingale f ℱ μ) (a b : exprℝ)\n    (N : ℕ) :\n    submartingale\n      (fun n : ℕ =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          ((1 - upcrossing_strat a b f N k) * (f (k + 1) - f k)))\n      ℱ μ :=\n  by\n  refine'\n    hf.sum_mul_sub (fun n => (adapted_const ℱ 1 n).sub (hf.adapted.upcrossing_strat_adapted n))\n      (_ : ∀ n ω, (1 - upcrossing_strat a b f N n) ω ≤ 1) _\n  · exact fun n ω => sub_le_self _ upcrossing_strat_nonneg\n  · intro n ω\n    simp [upcrossing_strat_le_one]\n#align submartingale.sum_sub_upcrossing_strat_mul submartingale.sum_sub_upcrossing_strat_mul\n\n",
 "sum_mul_upcrossing_strat_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\ntheorem submartingale.sum_mul_upcrossing_strat_le [is_finite_measure μ] (hf : submartingale f ℱ μ) :\n    condexp.probability μ\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range n) (upcrossing_strat a b f N k * (f (k + 1) - f k))) ≤\n      condexp.probability μ (f n) - condexp.probability μ (f 0) :=\n  by\n  have h₁ :\n    (0 : exprℝ) ≤\n      condexp.probability μ\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range n) ((1 - upcrossing_strat a b f N k) * (f (k + 1) - f k))) :=\n    by\n    have := (hf.sum_sub_upcrossing_strat_mul a b N).set_integral_le (zero_le n) measurable_set.univ\n    rw [integral_univ, integral_univ] at this\n    refine' le_trans _ this\n    simp only [Finset.range_zero, finset.sum_empty, integral_zero']\n  have h₂ :\n    condexp.probability μ\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range n) ((1 - upcrossing_strat a b f N k) * (f (k + 1) - f k))) =\n      condexp.probability μ\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range n) (f (k + 1) - f k)) -\n        condexp.probability μ\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range n) (upcrossing_strat a b f N k * (f (k + 1) - f k))) :=\n    by\n    simp only [sub_mul, one_mul, finset.sum_sub_distrib, pi.sub_apply, finset.sum_apply, pi.mul_apply]\n    refine'\n      integral_sub\n        (integrable.sub (integrable_finset_sum _ fun i hi => hf.integrable _)\n          (integrable_finset_sum _ fun i hi => hf.integrable _))\n        _\n    convert (hf.sum_upcrossing_strat_mul a b N).integrable n\n    ext\n    simp\n  rw [h₂, sub_nonneg] at h₁\n  refine' le_trans h₁ _\n  simp_rw [finset.sum_range_sub, integral_sub' (hf.integrable _) (hf.integrable _)]\n#align submartingale.sum_mul_upcrossing_strat_le submartingale.sum_mul_upcrossing_strat_le\n\n",
 "sub_eq_zero_of_upcrossings_before_lt":
 "theorem sub_eq_zero_of_upcrossings_before_lt (hab : a < b) (hn : upcrossings_before a b f N ω < n) :\n    stopped_value f (upper_crossing_time a b f N (n + 1)) ω - stopped_value f (lower_crossing_time a b f N n) ω = 0 :=\n  by\n  have : N ≤ upper_crossing_time a b f N n ω :=\n    by\n    rw [upcrossings_before] at hn\n    rw [← not_lt]\n    exact fun h => not_le.2 hn (le_csupₛ (upper_crossing_time_lt_bdd_above hab) h)\n  simp [stopped_value, upper_crossing_time_stabilize' (nat.le_succ n) this,\n    lower_crossing_time_stabilize' le_rfl (le_trans this upper_crossing_time_le_lower_crossing_time)]\n#align sub_eq_zero_of_upcrossings_before_lt sub_eq_zero_of_upcrossings_before_lt\n\n",
 "stopped_value_upper_crossing_time":
 "theorem stopped_value_upper_crossing_time (h : upper_crossing_time a b f N (n + 1) ω ≠ N) :\n    b ≤ stopped_value f (upper_crossing_time a b f N (n + 1)) ω :=\n  by\n  obtain ⟨j, hj₁, hj₂⟩ := (hitting_le_iff_of_lt _ (lt_of_le_of_ne upper_crossing_time_le h)).1 le_rfl\n  exact stopped_value_hitting_mem ⟨j, ⟨hj₁.1, le_trans hj₁.2 (hitting_le _)⟩, hj₂⟩\n#align stopped_value_upper_crossing_time stopped_value_upper_crossing_time\n\n",
 "stopped_value_lower_crossing_time":
 "theorem stopped_value_lower_crossing_time (h : lower_crossing_time a b f N n ω ≠ N) :\n    stopped_value f (lower_crossing_time a b f N n) ω ≤ a :=\n  by\n  obtain ⟨j, hj₁, hj₂⟩ := (hitting_le_iff_of_lt _ (lt_of_le_of_ne lower_crossing_time_le h)).1 le_rfl\n  exact stopped_value_hitting_mem ⟨j, ⟨hj₁.1, le_trans hj₁.2 lower_crossing_time_le⟩, hj₂⟩\n#align stopped_value_lower_crossing_time stopped_value_lower_crossing_time\n\n",
 "mul_upcrossings_before_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem mul_upcrossings_before_le (hf : a ≤ f N ω) (hab : a < b) :\n    (b - a) * upcrossings_before a b f N ω ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range N)\n        (upcrossing_strat a b f N k ω * (f (k + 1) - f k) ω) :=\n  by\n  classical\n    by_cases hN : N = 0\n    · simp [hN]\n    simp_rw [upcrossing_strat, finset.sum_mul, ← set.indicator_mul_left, pi.one_apply, pi.sub_apply, one_mul]\n    rw [finset.sum_comm]\n    have h₁ :\n      ∀ k,\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range N)\n            ((Set.Ico (lower_crossing_time a b f N k ω) (upper_crossing_time a b f N (k + 1) ω)).indicator\n              (fun m => f (m + 1) ω - f m ω) n) =\n          stopped_value f (upper_crossing_time a b f N (k + 1)) ω - stopped_value f (lower_crossing_time a b f N k) ω :=\n      by\n      intro k\n      rw [finset.sum_indicator_eq_sum_filter,\n        (_ :\n          Finset.filter (fun i => i ∈ Set.Ico (lower_crossing_time a b f N k ω) (upper_crossing_time a b f N (k + 1) ω))\n              (Finset.range N) =\n            finset.Ico (lower_crossing_time a b f N k ω) (upper_crossing_time a b f N (k + 1) ω)),\n        finset.sum_Ico_eq_add_neg _ lower_crossing_time_le_upper_crossing_time_succ,\n        finset.sum_range_sub fun n => f n ω, finset.sum_range_sub fun n => f n ω, neg_sub, sub_add_sub_cancel]\n      · rfl\n      · ext i\n        simp only [Set.mem_Ico, Finset.mem_filter, Finset.mem_range, finset.mem_Ico, and_iff_right_iff_imp, and_imp]\n        exact fun _ h => lt_of_lt_of_le h upper_crossing_time_le\n    simp_rw [h₁]\n    have h₂ :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (Finset.range (upcrossings_before a b f N ω)) (b - a) ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range N)\n          (stopped_value f (upper_crossing_time a b f N (k + 1)) ω -\n            stopped_value f (lower_crossing_time a b f N k) ω) :=\n      by\n      calc\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range (upcrossings_before a b f N ω)) (b - a) ≤\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range (upcrossings_before a b f N ω))\n              (stopped_value f (upper_crossing_time a b f N (k + 1)) ω -\n                stopped_value f (lower_crossing_time a b f N k) ω) :=\n          by\n          refine' finset.sum_le_sum fun i hi => le_sub_of_le_upcrossings_before (zero_lt_iff.2 hN) hab _\n          rwa [Finset.mem_range] at hi\n        _ ≤\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (Finset.range N)\n              (stopped_value f (upper_crossing_time a b f N (k + 1)) ω -\n                stopped_value f (lower_crossing_time a b f N k) ω) :=\n          by\n          refine'\n            finset.sum_le_sum_of_subset_of_nonneg (Finset.range_subset.2 (upcrossings_before_le f ω hab)) fun i _ hi =>\n              _\n          by_cases hi' : i = upcrossings_before a b f N ω\n          · subst hi'\n            simp only [stopped_value]\n            rw [upper_crossing_time_eq_of_upcrossings_before_lt hab (nat.lt_succ_self _)]\n            by_cases heq : lower_crossing_time a b f N (upcrossings_before a b f N ω) ω = N\n            · rw [HEq, sub_self]\n            · rw [sub_nonneg]\n              exact le_trans (stopped_value_lower_crossing_time HEq) hf\n          · rw [sub_eq_zero_of_upcrossings_before_lt hab]\n            rw [Finset.mem_range, not_lt] at hi\n            exact lt_of_le_of_ne hi (ne.symm hi')\n        \n    refine' le_trans _ h₂\n    rw [finset.sum_const, finset.card_range, nsmul_eq_mul, mul_comm]\n#align mul_upcrossings_before_le mul_upcrossings_before_le\n\n",
 "mul_lintegral_upcrossings_le_lintegral_pos_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\n/-- A variant of Doob's upcrossing estimate obtained by taking the supremum on both sides. -/\ntheorem submartingale.mul_lintegral_upcrossings_le_lintegral_pos_part [is_finite_measure μ] (a b : exprℝ)\n    (hf : submartingale f ℱ μ) :\n    ennreal.of_real (b - a) *\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          (upcrossings a b f ω) μ ≤\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          (ennreal.of_real («expr ⁺» (f N ω - a))) μ) :=\n  by\n  by_cases hab : a < b\n  · simp_rw [upcrossings]\n    have :\n      ∀ N,\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (ennreal.of_real («expr ⁺» (f N ω - a))) μ =\n          ennreal.of_real\n            («expr∫ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫ , ∂ »\"\n              («expr ⁺» (f N ω - a)) μ) :=\n      by\n      intro N\n      rw [of_real_integral_eq_lintegral_of_real]\n      · exact (hf.sub_martingale (martingale_const _ _ _)).pos.integrable _\n      · exact eventually_of_forall fun ω => lattice_ordered_comm_group.pos_nonneg _\n    rw [lintegral_supr']\n    · simp_rw [this, ennreal.mul_supr, supᵢ_le_iff]\n      intro N\n      rw [(by simp :\n          «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n              (upcrossings_before a b f N ω) μ =\n            «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n              (↑(upcrossings_before a b f N ω : nnreal)) μ),\n        lintegral_coe_eq_integral, ← ennreal.of_real_mul (sub_pos.2 hab).le]\n      · simp_rw [nnreal.coe_nat_cast]\n        exact\n          (ennreal.of_real_le_of_real (hf.mul_integral_upcrossings_before_le_integral_pos_part a b N)).trans\n            (le_supᵢ _ N)\n      · simp only [nnreal.coe_nat_cast, hf.adapted.integrable_upcrossings_before hab]\n    · exact fun n => measurable_from_top.comp_ae_measurable (hf.adapted.measurable_upcrossings_before hab).ae_measurable\n    · refine' eventually_of_forall fun ω N M hNM => _\n      rw [ennreal.coe_nat_le_coe_nat]\n      exact upcrossings_before_mono hab hNM ω\n  · rw [not_lt, ← sub_nonpos] at hab\n    rw [ennreal.of_real_of_nonpos hab, zero_mul]\n    exact zero_le _\n#align\n  submartingale.mul_lintegral_upcrossings_le_lintegral_pos_part submartingale.mul_lintegral_upcrossings_le_lintegral_pos_part\n\n",
 "mul_integral_upcrossings_before_le_integral_pos_part_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\ntheorem mul_integral_upcrossings_before_le_integral_pos_part_aux [is_finite_measure μ] (hf : submartingale f ℱ μ)\n    (hab : a < b) :\n    (b - a) * condexp.probability μ (upcrossings_before a b f N) ≤\n      condexp.probability μ fun ω => «expr ⁺» (f N ω - a) :=\n  by\n  refine'\n    le_trans (le_of_eq _)\n      (integral_mul_upcrossings_before_le_integral (hf.sub_martingale (martingale_const _ _ _)).pos\n        (fun ω => lattice_ordered_comm_group.pos_nonneg _) (fun ω => lattice_ordered_comm_group.pos_nonneg _)\n        (sub_pos.2 hab))\n  simp_rw [sub_zero, ← upcrossings_before_pos_eq hab]\n  rfl\n#align mul_integral_upcrossings_before_le_integral_pos_part_aux mul_integral_upcrossings_before_le_integral_pos_part_aux\n\n",
 "mul_integral_upcrossings_before_le_integral_pos_part":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\n/-- **Doob's upcrossing estimate**: given a real valued discrete submartingale `f` and real\nvalues `a` and `b`, we have `(b - a) * 𝔼[upcrossings_before a b f N] ≤ 𝔼[(f N - a)⁺]` where\n`upcrossings_before a b f N` is the number of times the process `f` crossed from below `a` to above\n`b` before the time `N`. -/\ntheorem submartingale.mul_integral_upcrossings_before_le_integral_pos_part [is_finite_measure μ] (a b : exprℝ)\n    (hf : submartingale f ℱ μ) (N : ℕ) :\n    (b - a) * condexp.probability μ (upcrossings_before a b f N) ≤\n      condexp.probability μ fun ω => «expr ⁺» (f N ω - a) :=\n  by\n  by_cases hab : a < b\n  · exact mul_integral_upcrossings_before_le_integral_pos_part_aux hf hab\n  · rw [not_lt, ← sub_nonpos] at hab\n    exact\n      le_trans (mul_nonpos_of_nonpos_of_nonneg hab (integral_nonneg fun ω => nat.cast_nonneg _))\n        (integral_nonneg fun ω => lattice_ordered_comm_group.pos_nonneg _)\n#align\n  submartingale.mul_integral_upcrossings_before_le_integral_pos_part submartingale.mul_integral_upcrossings_before_le_integral_pos_part\n\n",
 "measurable_upcrossings_before":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem adapted.measurable_upcrossings_before (hf : adapted ℱ f) (hab : a < b) :\n    measurable (upcrossings_before a b f N) :=\n  by\n  have :\n    upcrossings_before a b f N = fun ω =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (finset.Ico 1 (N + 1)) ({ n | upper_crossing_time a b f N n ω < N }.indicator 1 i) :=\n    by\n    ext ω\n    exact upcrossings_before_eq_sum hab\n  rw [this]\n  exact\n    finset.measurable_sum _ fun i hi =>\n      measurable.indicator measurable_const <|\n        ℱ.le N _ (hf.is_stopping_time_upper_crossing_time.measurable_set_lt_of_pred N)\n#align adapted.measurable_upcrossings_before adapted.measurable_upcrossings_before\n\n",
 "measurable_upcrossings":
 "theorem adapted.measurable_upcrossings (hf : adapted ℱ f) (hab : a < b) : measurable (upcrossings a b f) :=\n  measurable_supr fun N => measurable_from_top.comp (hf.measurable_upcrossings_before hab)\n#align adapted.measurable_upcrossings adapted.measurable_upcrossings\n\n",
 "lower_crossing_time_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem lower_crossing_time_zero : lower_crossing_time a b f N 0 = hitting f (Set.Iic a) («expr⊥») N :=\n  rfl\n#align lower_crossing_time_zero lower_crossing_time_zero\n\n",
 "lower_crossing_time_stabilize'":
 "theorem lower_crossing_time_stabilize' (hnm : n ≤ m) (hn : N ≤ lower_crossing_time a b f N n ω) :\n    lower_crossing_time a b f N m ω = N :=\n  lower_crossing_time_stabilize hnm (le_antisymm lower_crossing_time_le hn)\n#align lower_crossing_time_stabilize' lower_crossing_time_stabilize'\n\n",
 "lower_crossing_time_stabilize":
 "theorem lower_crossing_time_stabilize (hnm : n ≤ m) (hn : lower_crossing_time a b f N n ω = N) :\n    lower_crossing_time a b f N m ω = N :=\n  le_antisymm lower_crossing_time_le (le_trans (le_of_eq hn.symm) (lower_crossing_time_mono hnm))\n#align lower_crossing_time_stabilize lower_crossing_time_stabilize\n\n",
 "lower_crossing_time_mono":
 "theorem lower_crossing_time_mono (hnm : n ≤ m) : lower_crossing_time a b f N n ω ≤ lower_crossing_time a b f N m ω :=\n  by\n  suffices monotone fun n => lower_crossing_time a b f N n ω by exact this hnm\n  exact\n    monotone_nat_of_le_succ fun n =>\n      le_trans lower_crossing_time_le_upper_crossing_time_succ upper_crossing_time_le_lower_crossing_time\n#align lower_crossing_time_mono lower_crossing_time_mono\n\n",
 "lower_crossing_time_lt_upper_crossing_time":
 "theorem lower_crossing_time_lt_upper_crossing_time (hab : a < b) (hn : upper_crossing_time a b f N (n + 1) ω ≠ N) :\n    lower_crossing_time a b f N n ω < upper_crossing_time a b f N (n + 1) ω :=\n  by\n  refine'\n    lt_of_le_of_ne lower_crossing_time_le_upper_crossing_time_succ fun h =>\n      not_le.2 hab <| le_trans (stopped_value_upper_crossing_time hn) _\n  simp only [stopped_value]\n  rw [← h]\n  exact stopped_value_lower_crossing_time (h.symm ▸ hn)\n#align lower_crossing_time_lt_upper_crossing_time lower_crossing_time_lt_upper_crossing_time\n\n",
 "lower_crossing_time_lt_of_lt_upcrossings_before":
 "theorem lower_crossing_time_lt_of_lt_upcrossings_before (hN : 0 < N) (hab : a < b)\n    (hn : n < upcrossings_before a b f N ω) : lower_crossing_time a b f N n ω < N :=\n  lt_of_le_of_lt lower_crossing_time_le_upper_crossing_time_succ\n    (upper_crossing_time_lt_of_le_upcrossings_before hN hab hn)\n#align lower_crossing_time_lt_of_lt_upcrossings_before lower_crossing_time_lt_of_lt_upcrossings_before\n\n",
 "lower_crossing_time_le_upper_crossing_time_succ":
 "theorem lower_crossing_time_le_upper_crossing_time_succ :\n    lower_crossing_time a b f N n ω ≤ upper_crossing_time a b f N (n + 1) ω :=\n  by\n  rw [upper_crossing_time_succ]\n  exact le_hitting lower_crossing_time_le ω\n#align lower_crossing_time_le_upper_crossing_time_succ lower_crossing_time_le_upper_crossing_time_succ\n\n",
 "lower_crossing_time_le":
 "theorem lower_crossing_time_le : lower_crossing_time a b f N n ω ≤ N := by simp only [lower_crossing_time, hitting_le ω]\n#align lower_crossing_time_le lower_crossing_time_le\n\n",
 "le_sub_of_le_upcrossings_before":
 "theorem le_sub_of_le_upcrossings_before (hN : 0 < N) (hab : a < b) (hn : n < upcrossings_before a b f N ω) :\n    b - a ≤\n      stopped_value f (upper_crossing_time a b f N (n + 1)) ω - stopped_value f (lower_crossing_time a b f N n) ω :=\n  sub_le_sub (stopped_value_upper_crossing_time (upper_crossing_time_lt_of_le_upcrossings_before hN hab hn).ne)\n    (stopped_value_lower_crossing_time (lower_crossing_time_lt_of_lt_upcrossings_before hN hab hn).ne)\n#align le_sub_of_le_upcrossings_before le_sub_of_le_upcrossings_before\n\n",
 "is_stopping_time_upper_crossing_time":
 "theorem adapted.is_stopping_time_upper_crossing_time (hf : adapted ℱ f) :\n    is_stopping_time ℱ (upper_crossing_time a b f N n) :=\n  hf.is_stopping_time_crossing.1\n#align adapted.is_stopping_time_upper_crossing_time adapted.is_stopping_time_upper_crossing_time\n\n",
 "is_stopping_time_lower_crossing_time":
 "theorem adapted.is_stopping_time_lower_crossing_time (hf : adapted ℱ f) :\n    is_stopping_time ℱ (lower_crossing_time a b f N n) :=\n  hf.is_stopping_time_crossing.2\n#align adapted.is_stopping_time_lower_crossing_time adapted.is_stopping_time_lower_crossing_time\n\n",
 "is_stopping_time_crossing":
 "theorem adapted.is_stopping_time_crossing (hf : adapted ℱ f) :\n    is_stopping_time ℱ (upper_crossing_time a b f N n) ∧ is_stopping_time ℱ (lower_crossing_time a b f N n) :=\n  by\n  induction' n with k ih\n  · refine' ⟨is_stopping_time_const _ 0, _⟩\n    simp [hitting_is_stopping_time hf measurable_set_Iic]\n  · obtain ⟨ih₁, ih₂⟩ := ih\n    have : is_stopping_time ℱ (upper_crossing_time a b f N (k + 1)) :=\n      by\n      intro n\n      simp_rw [upper_crossing_time_succ_eq]\n      exact is_stopping_time_hitting_is_stopping_time ih₂ (fun _ => lower_crossing_time_le) measurable_set_Ici hf _\n    refine' ⟨this, _⟩\n    · intro n\n      exact is_stopping_time_hitting_is_stopping_time this (fun _ => upper_crossing_time_le) measurable_set_Iic hf _\n#align adapted.is_stopping_time_crossing adapted.is_stopping_time_crossing\n\n",
 "integral_mul_upcrossings_before_le_integral":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `condexp.probability -/\ntheorem integral_mul_upcrossings_before_le_integral [is_finite_measure μ] (hf : submartingale f ℱ μ)\n    (hfN : ∀ ω, a ≤ f N ω) (hfzero : 0 ≤ f 0) (hab : a < b) :\n    (b - a) * condexp.probability μ (upcrossings_before a b f N) ≤ condexp.probability μ (f N) :=\n  calc\n    (b - a) * condexp.probability μ (upcrossings_before a b f N) ≤\n        condexp.probability μ\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (Finset.range N) (upcrossing_strat a b f N k * (f (k + 1) - f k))) :=\n      by\n      rw [← integral_mul_left]\n      refine' integral_mono_of_nonneg _ ((hf.sum_upcrossing_strat_mul a b N).integrable N) _\n      · exact eventually_of_forall fun ω => mul_nonneg (sub_nonneg.2 hab.le) (nat.cast_nonneg _)\n      · refine' eventually_of_forall fun ω => _\n        simpa using mul_upcrossings_before_le (hfN ω) hab\n    _ ≤ condexp.probability μ (f N) - condexp.probability μ (f 0) := hf.sum_mul_upcrossing_strat_le\n    _ ≤ condexp.probability μ (f N) := (sub_le_self_iff _).2 (integral_nonneg hfzero)\n    \n#align integral_mul_upcrossings_before_le_integral integral_mul_upcrossings_before_le_integral\n\n",
 "integrable_upcrossings_before":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem adapted.integrable_upcrossings_before [is_finite_measure μ] (hf : adapted ℱ f) (hab : a < b) :\n    integrable (fun ω => (upcrossings_before a b f N ω : exprℝ)) μ :=\n  haveI :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      («expr‖ ‖» (upcrossings_before a b f N ω : exprℝ) ≤ N) :=\n    by\n    refine' eventually_of_forall fun ω => _\n    rw [real.norm_eq_abs, nat.abs_cast, nat.cast_le]\n    refine' upcrossings_before_le _ _ hab\n  ⟨measurable.ae_strongly_measurable (measurable_from_top.comp (hf.measurable_upcrossings_before hab)),\n    has_finite_integral_of_bounded this⟩\n#align adapted.integrable_upcrossings_before adapted.integrable_upcrossings_before\n\n",
 "exists_upper_crossing_time_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n-- `upper_crossing_time_bound_eq` provides an explicit bound\ntheorem exists_upper_crossing_time_eq (f : ℕ → Ω → exprℝ) (N : ℕ) (ω : Ω) (hab : a < b) :\n    ∃ n, upper_crossing_time a b f N n ω = N := by\n  by_contra h; push_neg  at h\n  have : strict_mono fun n => upper_crossing_time a b f N n ω :=\n    strictMono_nat_of_lt_succ fun n => upper_crossing_time_lt_succ hab (h _)\n  obtain ⟨_, ⟨k, rfl⟩, hk⟩ : ∃ (m : _)(hm : m ∈ Set.range fun n => upper_crossing_time a b f N n ω), N < m :=\n    ⟨upper_crossing_time a b f N (N + 1) ω, ⟨N + 1, rfl⟩,\n      lt_of_lt_of_le N.lt_succ_self (strict_mono.id_le this (N + 1))⟩\n  exact not_le.2 hk upper_crossing_time_le\n#align exists_upper_crossing_time_eq exists_upper_crossing_time_eq\n\n",
 "crossing_pos_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁺» -/\ntheorem crossing_pos_eq (hab : a < b) :\n    upper_crossing_time 0 (b - a) (fun n ω => «expr ⁺» (f n ω - a)) N n = upper_crossing_time a b f N n ∧\n      lower_crossing_time 0 (b - a) (fun n ω => «expr ⁺» (f n ω - a)) N n = lower_crossing_time a b f N n :=\n  by\n  have hab' : 0 < b - a := sub_pos.2 hab\n  have hf : ∀ ω i, b - a ≤ «expr ⁺» (f i ω - a) ↔ b ≤ f i ω :=\n    by\n    intro i ω\n    refine' ⟨fun h => _, fun h => _⟩\n    · rwa [← sub_le_sub_iff_right a, ← lattice_ordered_comm_group.pos_eq_self_of_pos_pos (lt_of_lt_of_le hab' h)]\n    · rw [← sub_le_sub_iff_right a] at h\n      rwa [lattice_ordered_comm_group.pos_of_nonneg _ (le_trans hab'.le h)]\n  have hf' : ∀ ω i, «expr ⁺» (f i ω - a) ≤ 0 ↔ f i ω ≤ a :=\n    by\n    intro ω i\n    rw [lattice_ordered_comm_group.pos_nonpos_iff, sub_nonpos]\n  induction' n with k ih\n  · refine' ⟨rfl, _⟩\n    simp only [lower_crossing_time_zero, hitting, Set.mem_Icc, Set.mem_Iic]\n    ext ω\n    split_ifs with h₁ h₂ h₂\n    · simp_rw [hf']\n    · simp_rw [Set.mem_Iic, ← hf' _ _] at h₂\n      exact false.elim (h₂ h₁)\n    · simp_rw [Set.mem_Iic, hf' _ _] at h₁\n      exact false.elim (h₁ h₂)\n    · rfl\n  · have :\n      upper_crossing_time 0 (b - a) (fun n ω => «expr ⁺» (f n ω - a)) N (k + 1) = upper_crossing_time a b f N (k + 1) :=\n      by\n      ext ω\n      simp only [upper_crossing_time_succ_eq, ← ih.2, hitting, Set.mem_Ici, tsub_le_iff_right]\n      split_ifs with h₁ h₂ h₂\n      · simp_rw [← sub_le_iff_le_add, hf ω]\n      · simp_rw [Set.mem_Ici, ← hf _ _] at h₂\n        exact false.elim (h₂ h₁)\n      · simp_rw [Set.mem_Ici, hf _ _] at h₁\n        exact false.elim (h₁ h₂)\n      · rfl\n    refine' ⟨this, _⟩\n    ext ω\n    simp only [lower_crossing_time, this, hitting, Set.mem_Iic]\n    split_ifs with h₁ h₂ h₂\n    · simp_rw [hf' ω]\n    · simp_rw [Set.mem_Iic, ← hf' _ _] at h₂\n      exact false.elim (h₂ h₁)\n    · simp_rw [Set.mem_Iic, hf' _ _] at h₁\n      exact false.elim (h₁ h₂)\n    · rfl\n#align crossing_pos_eq crossing_pos_eq\n\n",
 "crossing_eq_crossing_of_upper_crossing_time_lt":
 "theorem crossing_eq_crossing_of_upper_crossing_time_lt {M : ℕ} (hNM : N ≤ M)\n    (h : upper_crossing_time a b f N (n + 1) ω < N) :\n    upper_crossing_time a b f M (n + 1) ω = upper_crossing_time a b f N (n + 1) ω ∧\n      lower_crossing_time a b f M n ω = lower_crossing_time a b f N n ω :=\n  by\n  have :=\n    (crossing_eq_crossing_of_lower_crossing_time_lt hNM\n        (lt_of_le_of_lt lower_crossing_time_le_upper_crossing_time_succ h)).2\n  refine' ⟨_, this⟩\n  rw [upper_crossing_time_succ_eq, upper_crossing_time_succ_eq, eq_comm, this]\n  refine' hitting_eq_hitting_of_exists hNM _\n  simp only [upper_crossing_time_succ_eq, hitting_lt_iff] at h\n  obtain ⟨j, hj₁, hj₂⟩ := h\n  exact ⟨j, ⟨hj₁.1, hj₁.2.le⟩, hj₂⟩\n#align crossing_eq_crossing_of_upper_crossing_time_lt crossing_eq_crossing_of_upper_crossing_time_lt\n\n",
 "crossing_eq_crossing_of_lower_crossing_time_lt":
 "theorem crossing_eq_crossing_of_lower_crossing_time_lt {M : ℕ} (hNM : N ≤ M) (h : lower_crossing_time a b f N n ω < N) :\n    upper_crossing_time a b f M n ω = upper_crossing_time a b f N n ω ∧\n      lower_crossing_time a b f M n ω = lower_crossing_time a b f N n ω :=\n  by\n  have h' : upper_crossing_time a b f N n ω < N := lt_of_le_of_lt upper_crossing_time_le_lower_crossing_time h\n  induction' n with k ih\n  · simp only [Nat.zero_eq, upper_crossing_time_zero, bot_eq_zero', eq_self_iff_true, lower_crossing_time_zero,\n      true_and_iff, eq_comm]\n    refine' hitting_eq_hitting_of_exists hNM _\n    simp only [lower_crossing_time, hitting_lt_iff] at h\n    obtain ⟨j, hj₁, hj₂⟩ := h\n    exact ⟨j, ⟨hj₁.1, hj₁.2.le⟩, hj₂⟩\n  · specialize\n      ih (lt_of_le_of_lt (lower_crossing_time_mono (nat.le_succ _)) h)\n        (lt_of_le_of_lt (upper_crossing_time_mono (nat.le_succ _)) h')\n    have : upper_crossing_time a b f M k.succ ω = upper_crossing_time a b f N k.succ ω :=\n      by\n      simp only [upper_crossing_time_succ_eq, hitting_lt_iff] at h'⊢\n      obtain ⟨j, hj₁, hj₂⟩ := h'\n      rw [eq_comm, ih.2]\n      exact hitting_eq_hitting_of_exists hNM ⟨j, ⟨hj₁.1, hj₁.2.le⟩, hj₂⟩\n    refine' ⟨this, _⟩\n    simp only [lower_crossing_time, eq_comm, this]\n    refine' hitting_eq_hitting_of_exists hNM _\n    rw [lower_crossing_time, hitting_lt_iff _ le_rfl] at h\n    swap\n    · infer_instance\n    obtain ⟨j, hj₁, hj₂⟩ := h\n    exact ⟨j, ⟨hj₁.1, hj₁.2.le⟩, hj₂⟩\n#align crossing_eq_crossing_of_lower_crossing_time_lt crossing_eq_crossing_of_lower_crossing_time_lt\n\n"}