{"upcrossings_eq_top_of_frequently_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/-- A stochastic process that frequently visits below `a` and above `b` have infinite\nupcrossings. -/\ntheorem upcrossings_eq_top_of_frequently_lt (hab : a < b)\n    (h₁ :\n      «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\" at_top\n        (f n ω < a))\n    (h₂ :\n      «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\" at_top\n        (b < f n ω)) :\n    upcrossings a b f ω = ennreal.top :=\n  by_contradiction fun h => not_frequently_of_upcrossings_lt_top hab h ⟨h₁, h₂⟩\n#align upcrossings_eq_top_of_frequently_lt upcrossings_eq_top_of_frequently_lt\n\n",
 "upcrossings_ae_lt_top'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/-- An L¹-bounded submartingale has bounded upcrossings almost everywhere. -/\ntheorem submartingale.upcrossings_ae_lt_top' [is_finite_measure μ] (hf : submartingale f ℱ μ)\n    (hbdd : ∀ n, snorm (f n) 1 μ ≤ R) (hab : a < b) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (upcrossings a b f ω < ennreal.top) :=\n  by\n  refine' ae_lt_top (hf.adapted.measurable_upcrossings hab) _\n  have := hf.mul_lintegral_upcrossings_le_lintegral_pos_part a b\n  rw [mul_comm, ← ennreal.le_div_iff_mul_le] at this\n  · refine' (lt_of_le_of_lt this (ennreal.div_lt_top _ _)).ne\n    · have hR' :\n        ∀ n,\n          «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n              («expr‖ ‖₊» (f n ω - a)) μ ≤\n            R + «expr‖ ‖₊» a * μ Set.univ :=\n        by\n        simp_rw [snorm_one_eq_lintegral_nnnorm] at hbdd\n        intro n\n        refine'\n          (lintegral_mono _ :\n                «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n                    («expr‖ ‖₊» (f n ω - a)) μ ≤\n                  «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n                    («expr‖ ‖₊» (f n ω) + «expr‖ ‖₊» a) μ).trans\n            _\n        · intro ω\n          simp_rw [sub_eq_add_neg, ← nnnorm_neg a, ← ennreal.coe_add, ennreal.coe_le_coe]\n          exact nnnorm_add_le _ _\n        · simp_rw [lintegral_add_right _ measurable_const, lintegral_const]\n          exact add_le_add (hbdd _) le_rfl\n      refine'\n        ne_of_lt\n          (supᵢ_lt_iff.2\n            ⟨R + «expr‖ ‖₊» a * μ Set.univ,\n              ennreal.add_lt_top.2 ⟨ennreal.coe_lt_top, ennreal.mul_lt_top ennreal.coe_lt_top.ne (measure_ne_top _ _)⟩,\n              fun n => le_trans _ (hR' n)⟩)\n      refine' lintegral_mono fun ω => _\n      rw [ennreal.of_real_le_iff_le_to_real, ennreal.coe_to_real, coe_nnnorm]\n      by_cases hnonneg : 0 ≤ f n ω - a\n      · rw [lattice_ordered_comm_group.pos_of_nonneg _ hnonneg, real.norm_eq_abs, abs_of_nonneg hnonneg]\n      · rw [lattice_ordered_comm_group.pos_of_nonpos _ (not_le.1 hnonneg).le]\n        exact norm_nonneg _\n      · simp only [ne.def, ennreal.coe_ne_top, not_false_iff]\n    · simp only [hab, ne.def, ennreal.of_real_eq_zero, sub_nonpos, not_le]\n  · simp only [hab, ne.def, ennreal.of_real_eq_zero, sub_nonpos, not_le, true_or_iff]\n  · simp only [ne.def, ennreal.of_real_ne_top, not_false_iff, true_or_iff]\n#align submartingale.upcrossings_ae_lt_top' submartingale.upcrossings_ae_lt_top'\n\n",
 "upcrossings_ae_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\ntheorem submartingale.upcrossings_ae_lt_top [is_finite_measure μ] (hf : submartingale f ℱ μ)\n    (hbdd : ∀ n, snorm (f n) 1 μ ≤ R) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (∀ a b : exprℚ, a < b → upcrossings a b f ω < ennreal.top) :=\n  by\n  simp only [ae_all_iff, eventually_imp_distrib_left]\n  rintro a b hab\n  exact hf.upcrossings_ae_lt_top' hbdd (Rat.cast_lt.2 hab)\n#align submartingale.upcrossings_ae_lt_top submartingale.upcrossings_ae_lt_top\n\n",
 "tendsto_snorm_one_limit_process":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- Part a of the **L¹ martingale convergence theorem**: a uniformly integrable submartingale\nadapted to the filtration `ℱ` converges a.e. and in L¹ to an integrable function which is\nmeasurable with respect to the σ-algebra `⨆ n, ℱ n`. -/\ntheorem submartingale.tendsto_snorm_one_limit_process (hf : submartingale f ℱ μ) (hunif : uniform_integrable f 1 μ) :\n    tendsto (fun n => snorm (f n - ℱ.limit_process f μ) 1 μ) at_top ((nhds) 0) :=\n  by\n  obtain ⟨R, hR⟩ := hunif.2.2\n  have hmeas : ∀ n, ae_strongly_measurable (f n) μ := fun n =>\n    ((hf.strongly_measurable n).mono (ℱ.le _)).ae_strongly_measurable\n  exact\n    tendsto_Lp_of_tendsto_in_measure _ le_rfl ennreal.one_ne_top hmeas (mem_ℒp_limit_process_of_snorm_bdd hmeas hR)\n      hunif.2.1 (tendsto_in_measure_of_tendsto_ae hmeas <| hf.ae_tendsto_limit_process hR)\n#align submartingale.tendsto_snorm_one_limit_process submartingale.tendsto_snorm_one_limit_process\n\n",
 "tendsto_snorm_condexp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- **Lévy's upward theorem**, L¹ version: given a function `g` and a filtration `ℱ`, the\nsequence defined by `𝔼[g | ℱ n]` converges in L¹ to `𝔼[g | ⨆ n, ℱ n]`. -/\ntheorem tendsto_snorm_condexp (g : Ω → exprℝ) :\n    tendsto\n      (fun n =>\n        snorm\n          (measure_theory.condexp μ g (ℱ n) -\n            measure_theory.condexp μ g\n              («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n          1 μ)\n      at_top ((nhds) 0) :=\n  by\n  have ht :\n    tendsto\n      (fun n =>\n        snorm\n          (measure_theory.condexp μ\n              (measure_theory.condexp μ g\n                («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n              (ℱ n) -\n            measure_theory.condexp μ g\n              («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n          1 μ)\n      at_top ((nhds) 0) :=\n    integrable_condexp.tendsto_snorm_condexp strongly_measurable_condexp\n  have heq :\n    ∀ n,\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        ((measure_theory.condexp μ\n              (measure_theory.condexp μ g\n                («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n              (ℱ n))\n            x =\n          (measure_theory.condexp μ g (ℱ n)) x) :=\n    fun n => condexp_condexp_of_le (le_supᵢ _ n) (supᵢ_le fun n => ℱ.le n)\n  refine' ht.congr fun n => snorm_congr_ae _\n  filter_upwards [HEq n] with x hxeq\n  simp only [hxeq, pi.sub_apply]\n#align tendsto_snorm_condexp tendsto_snorm_condexp\n\n",
 "tendsto_of_uncrossing_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖₊» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- A realization of a stochastic process with bounded upcrossings and bounded liminfs is\nconvergent.\n\nWe use the spelling `< ∞` instead of the standard `≠ ∞` in the assumptions since it is not as easy\nto change `<` to `≠` under binders. -/\ntheorem tendsto_of_uncrossing_lt_top (hf₁ : liminf (fun n => («expr‖ ‖₊» (f n ω) : ennreal)) at_top < ennreal.top)\n    (hf₂ : ∀ a b : exprℚ, a < b → upcrossings a b f ω < ennreal.top) :\n    ∃ c, tendsto (fun n => f n ω) at_top ((nhds) c) :=\n  by\n  by_cases h : is_bounded_under (· ≤ ·) at_top fun n => |f n ω|\n  · rw [is_bounded_under_le_abs] at h\n    refine' tendsto_of_no_upcrossings rat.dense_range_cast _ h.1 h.2\n    · intro a ha b hb hab\n      obtain ⟨⟨a, rfl⟩, ⟨b, rfl⟩⟩ := ha, hb\n      exact not_frequently_of_upcrossings_lt_top hab (hf₂ a b (Rat.cast_lt.1 hab)).ne\n  · obtain ⟨a, b, hab, h₁, h₂⟩ := ennreal.exists_upcrossings_of_not_bounded_under hf₁.ne h\n    exact false.elim ((hf₂ a b hab).ne (upcrossings_eq_top_of_frequently_lt (Rat.cast_lt.2 hab) h₁ h₂))\n#align tendsto_of_uncrossing_lt_top tendsto_of_uncrossing_lt_top\n\n",
 "tendsto_ae_condexp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/-- **Lévy's upward theorem**, almost everywhere version: given a function `g` and a filtration\n`ℱ`, the sequence defined by `𝔼[g | ℱ n]` converges almost everywhere to `𝔼[g | ⨆ n, ℱ n]`. -/\ntheorem tendsto_ae_condexp (g : Ω → exprℝ) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (tendsto (fun n => (measure_theory.condexp μ g (ℱ n)) x) at_top\n        ((nhds)\n          ((measure_theory.condexp μ g\n              («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n            x))) :=\n  by\n  have ht :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (tendsto\n        (fun n =>\n          (measure_theory.condexp μ\n              (measure_theory.condexp μ g\n                («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n              (ℱ n))\n            x)\n        at_top\n        ((nhds)\n          ((measure_theory.condexp μ g\n              («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n            x))) :=\n    integrable_condexp.tendsto_ae_condexp strongly_measurable_condexp\n  have heq :\n    ∀ n,\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n        ((measure_theory.condexp μ\n              (measure_theory.condexp μ g\n                («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n              (ℱ n))\n            x =\n          (measure_theory.condexp μ g (ℱ n)) x) :=\n    fun n => condexp_condexp_of_le (le_supᵢ _ n) (supᵢ_le fun n => ℱ.le n)\n  rw [← ae_all_iff] at heq\n  filter_upwards [HEq, ht] with x hxeq hxt\n  exact hxt.congr hxeq\n#align tendsto_ae_condexp tendsto_ae_condexp\n\n",
 "not_frequently_of_upcrossings_lt_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∃ᶠ in , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , » -/\n/-\nCopyright (c) 2022 Kexing Ying. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kexing Ying\n-/\n/-- If a stochastic process has bounded upcrossing from below `a` to above `b`,\nthen it does not frequently visit both below `a` and above `b`. -/\ntheorem not_frequently_of_upcrossings_lt_top (hab : a < b) (hω : upcrossings a b f ω ≠ ennreal.top) :\n    ¬(«expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\" at_top\n          (f n ω < a) ∧\n        «expr∃ᶠ in , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∃ᶠ in , »\" at_top\n          (b < f n ω)) :=\n  by\n  rw [← lt_top_iff_ne_top, upcrossings_lt_top_iff] at hω\n  replace hω : ∃ k, ∀ N, upcrossings_before a b f N ω < k\n  · obtain ⟨k, hk⟩ := hω\n    exact ⟨k + 1, fun N => lt_of_le_of_lt (hk N) k.lt_succ_self⟩\n  rintro ⟨h₁, h₂⟩\n  rw [frequently_at_top] at h₁ h₂\n  refine' not_not.2 hω _\n  push_neg\n  intro k\n  induction' k with k ih\n  · simp only [zero_le', exists_const]\n  · obtain ⟨N, hN⟩ := ih\n    obtain ⟨N₁, hN₁, hN₁'⟩ := h₁ N\n    obtain ⟨N₂, hN₂, hN₂'⟩ := h₂ N₁\n    exact\n      ⟨N₂ + 1,\n        nat.succ_le_of_lt <| lt_of_le_of_lt hN (upcrossings_before_lt_of_exists_upcrossing hab hN₁ hN₁' hN₂ hN₂')⟩\n#align not_frequently_of_upcrossings_lt_top not_frequently_of_upcrossings_lt_top\n\n",
 "mem_ℒp_limit_process":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/-- The limiting process of an Lᵖ-bounded submartingale is Lᵖ. -/\ntheorem submartingale.mem_ℒp_limit_process {p : ennreal} (hf : submartingale f ℱ μ) (hbdd : ∀ n, snorm (f n) p μ ≤ R) :\n    mem_ℒp (ℱ.limit_process f μ) p μ :=\n  mem_ℒp_limit_process_of_snorm_bdd (fun n => ((hf.strongly_measurable n).mono (ℱ.le n)).ae_strongly_measurable) hbdd\n#align submartingale.mem_ℒp_limit_process submartingale.mem_ℒp_limit_process\n\n",
 "exists_ae_trim_tendsto_of_bdd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem submartingale.exists_ae_trim_tendsto_of_bdd [is_finite_measure μ] (hf : submartingale f ℱ μ)\n    (hbdd : ∀ n, snorm (f n) 1 μ ≤ R) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\"\n      (μ.trim\n        (supₛ_le fun m ⟨n, hn⟩ => hn ▸ ℱ.le _ :\n          «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n) ≤ m0))\n      (∃ c, tendsto (fun n => f n ω) at_top ((nhds) c)) :=\n  by\n  rw [ae_iff, trim_measurable_set_eq]\n  · exact hf.exists_ae_tendsto_of_bdd hbdd\n  ·\n    exact\n      measurable_set.compl\n        (@measurable_set_exists_tendsto _ _ _ _ _ _\n          («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)) _ _ _\n          _ _ fun n => (hf.strongly_measurable n).measurable.mono (le_supₛ ⟨n, rfl⟩) le_rfl)\n#align submartingale.exists_ae_trim_tendsto_of_bdd submartingale.exists_ae_trim_tendsto_of_bdd\n\n",
 "exists_ae_tendsto_of_bdd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- An L¹-bounded submartingale converges almost everywhere. -/\ntheorem submartingale.exists_ae_tendsto_of_bdd [is_finite_measure μ] (hf : submartingale f ℱ μ)\n    (hbdd : ∀ n, snorm (f n) 1 μ ≤ R) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (∃ c, tendsto (fun n => f n ω) at_top ((nhds) c)) :=\n  by\n  filter_upwards [hf.upcrossings_ae_lt_top hbdd,\n    ae_bdd_liminf_at_top_of_snorm_bdd one_ne_zero (fun n => (hf.strongly_measurable n).measurable.mono (ℱ.le n) le_rfl)\n      hbdd] with ω h₁ h₂\n  exact tendsto_of_uncrossing_lt_top h₂ h₁\n#align submartingale.exists_ae_tendsto_of_bdd submartingale.exists_ae_tendsto_of_bdd\n\n",
 "eq_condexp_of_tendsto_snorm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/-- If a martingale `f` adapted to `ℱ` converges in L¹ to `g`, then for all `n`, `f n` is almost\neverywhere equal to `𝔼[g | ℱ n]`. -/\ntheorem martingale.eq_condexp_of_tendsto_snorm {μ : measure Ω} (hf : martingale f ℱ μ) (hg : integrable g μ)\n    (hgtends : tendsto (fun n => snorm (f n - g) 1 μ) at_top ((nhds) 0)) (n : ℕ) :\n    «expr =ᵐ[ ] » (f n) μ (measure_theory.condexp μ g (ℱ n)) :=\n  by\n  rw [← sub_ae_eq_zero, ←\n    snorm_eq_zero_iff\n      (((hf.strongly_measurable n).mono (ℱ.le _)).sub\n          (strongly_measurable_condexp.mono (ℱ.le _))).ae_strongly_measurable\n      one_ne_zero]\n  have ht : tendsto (fun m => snorm (measure_theory.condexp μ (f m - g) (ℱ n)) 1 μ) at_top ((nhds) 0) :=\n    haveI hint : ∀ m, integrable (f m - g) μ := fun m => (hf.integrable m).sub hg\n    tendsto_of_tendsto_of_tendsto_of_le_of_le tendsto_const_nhds hgtends (fun m => zero_le _) fun m =>\n      snorm_one_condexp_le_snorm _\n  have hev :\n    ∀ m ≥ n,\n      snorm (measure_theory.condexp μ (f m - g) (ℱ n)) 1 μ = snorm (f n - measure_theory.condexp μ g (ℱ n)) 1 μ :=\n    by\n    refine' fun m hm => snorm_congr_ae ((condexp_sub (hf.integrable m) hg).trans _)\n    filter_upwards [hf.2 n m hm] with x hx\n    simp only [hx, pi.sub_apply]\n  exact tendsto_nhds_unique (tendsto_at_top_of_eventually_const hev) ht\n#align martingale.eq_condexp_of_tendsto_snorm martingale.eq_condexp_of_tendsto_snorm\n\n",
 "ae_tendsto_limit_process_of_uniform_integrable":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem submartingale.ae_tendsto_limit_process_of_uniform_integrable (hf : submartingale f ℱ μ)\n    (hunif : uniform_integrable f 1 μ) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (tendsto (fun n => f n ω) at_top ((nhds) (ℱ.limit_process f μ ω))) :=\n  let ⟨R, hR⟩ := hunif.2.2\n  hf.ae_tendsto_limit_process hR\n#align\n  submartingale.ae_tendsto_limit_process_of_uniform_integrable submartingale.ae_tendsto_limit_process_of_uniform_integrable\n\n",
 "ae_tendsto_limit_process":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/-- **Almost everywhere martingale convergence theorem**: An L¹-bounded submartingale converges\nalmost everywhere to a `⨆ n, ℱ n`-measurable function. -/\ntheorem submartingale.ae_tendsto_limit_process [is_finite_measure μ] (hf : submartingale f ℱ μ)\n    (hbdd : ∀ n, snorm (f n) 1 μ ≤ R) :\n    «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n      (tendsto (fun n => f n ω) at_top ((nhds) (ℱ.limit_process f μ ω))) :=\n  by\n  classical\n    suffices\n      ∃ g,\n        (strongly_measurable_of\n              («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n            g ∧\n          «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" μ\n            (tendsto (fun n => f n ω) at_top ((nhds) (g ω)))\n      by\n      rw [limit_process, dif_pos this]\n      exact (Classical.choose_spec this).2\n    set g' : Ω → exprℝ := fun ω => if h : ∃ c, tendsto (fun n => f n ω) at_top ((nhds) c) then h.some else 0\n    have hle :\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n) ≤ m0 :=\n      supₛ_le fun m ⟨n, hn⟩ => hn ▸ ℱ.le _\n    have hg' :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" (μ.trim hle)\n        (tendsto (fun n => f n ω) at_top ((nhds) (g' ω))) :=\n      by\n      filter_upwards [hf.exists_ae_trim_tendsto_of_bdd hbdd] with ω hω\n      simp_rw [g', dif_pos hω]\n      exact hω.some_spec\n    have hg'm :\n      @ae_strongly_measurable _ _ _\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)) g'\n        (μ.trim hle) :=\n      (@ae_measurable_of_tendsto_metrizable_ae' _ _\n          («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)) _ _ _\n          _ _ _ _\n          (fun n =>\n            ((hf.strongly_measurable n).measurable.mono\n                (le_supₛ ⟨n, rfl⟩ :\n                  ℱ n ≤\n                    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n                      (ℱ n))\n                le_rfl).ae_measurable)\n          hg').ae_strongly_measurable\n    obtain ⟨g, hgm, hae⟩ := hg'm\n    have hg :\n      «expr∀ᵐ ∂ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∀ᵐ ∂ , »\" (μ.trim hle)\n        (tendsto (fun n => f n ω) at_top ((nhds) (g ω))) :=\n      by\n      filter_upwards [hae, hg'] with ω hω hg'ω\n      exact hω ▸ hg'ω\n    exact ⟨g, hgm, measure_eq_zero_of_trim_eq_zero hle hg⟩\n#align submartingale.ae_tendsto_limit_process submartingale.ae_tendsto_limit_process\n\n",
 "ae_eq_condexp_limit_process":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =ᵐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n/-- Part b of the **L¹ martingale convergence theorem**: if `f` is a uniformly integrable martingale\nadapted to the filtration `ℱ`, then for all `n`, `f n` is almost everywhere equal to the conditional\nexpectation of its limiting process wrt. `ℱ n`. -/\ntheorem martingale.ae_eq_condexp_limit_process (hf : martingale f ℱ μ) (hbdd : uniform_integrable f 1 μ) (n : ℕ) :\n    «expr =ᵐ[ ] » (f n) μ (measure_theory.condexp μ (ℱ.limit_process f μ) (ℱ n)) :=\n  let ⟨R, hR⟩ := hbdd.2.2\n  hf.eq_condexp_of_tendsto_snorm ((mem_ℒp_limit_process_of_snorm_bdd hbdd.1 hR).integrable le_rfl)\n    (hf.submartingale.tendsto_snorm_one_limit_process hbdd) n\n#align martingale.ae_eq_condexp_limit_process martingale.ae_eq_condexp_limit_process\n\n"}