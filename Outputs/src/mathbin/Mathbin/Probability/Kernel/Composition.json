{"swap_right_apply'":
 "theorem swap_right_apply' (κ : kernel α (β × γ)) (a : α) {s : Set (γ × β)} (hs : MeasurableSet s) :\n    swap_right κ a s = κ a { p | p.swap ∈ s } :=\n  by\n  rw [swap_right_apply, measure.map_apply measurable_swap hs]\n  rfl\n#align swap_right_apply' swap_right_apply'\n\n",
 "swap_right_apply":
 "theorem swap_right_apply (κ : kernel α (β × γ)) (a : α) : swap_right κ a = (κ a).map Prod.swap :=\n  rfl\n#align swap_right_apply swap_right_apply\n\n",
 "swap_left_apply'":
 "theorem swap_left_apply' (κ : kernel (α × β) γ) (a : β × α) (s : Set γ) : swap_left κ a s = κ a.swap s :=\n  rfl\n#align swap_left_apply' swap_left_apply'\n\n",
 "swap_left_apply":
 "theorem swap_left_apply (κ : kernel (α × β) γ) (a : β × α) : swap_left κ a = κ a.swap :=\n  rfl\n#align swap_left_apply swap_left_apply\n\n",
 "sum_map_seq":
 "theorem sum_map_seq (κ : kernel α β) [is_s_finite_kernel κ] (hf : Measurable f) :\n    (kernel.sum fun n => map (seq κ n) f hf) = map κ f hf :=\n  by\n  ext (a s hs) : 2\n  rw [kernel.sum_apply, map_apply' κ hf a hs, measure.sum_apply _ hs, ← measure_sum_seq κ, measure.sum_apply _ (hf hs)]\n  simp_rw [map_apply' _ hf _ hs]\n#align sum_map_seq sum_map_seq\n\n",
 "sum_comap_seq":
 "theorem sum_comap_seq (κ : kernel α β) [is_s_finite_kernel κ] (hg : Measurable g) :\n    (kernel.sum fun n => comap (seq κ n) g hg) = comap κ g hg :=\n  by\n  ext (a s hs) : 2\n  rw [kernel.sum_apply, comap_apply' κ hg a s, measure.sum_apply _ hs, ← measure_sum_seq κ, measure.sum_apply _ hs]\n  simp_rw [comap_apply' _ hg _ s]\n#align sum_comap_seq sum_comap_seq\n\n",
 "snd_apply'":
 "theorem snd_apply' (κ : kernel α (β × γ)) (a : α) {s : Set γ} (hs : MeasurableSet s) :\n    snd κ a s = κ a { p | p.2 ∈ s } :=\n  by\n  rw [snd_apply, measure.map_apply measurable_snd hs]\n  rfl\n#align snd_apply' snd_apply'\n\n",
 "snd_apply":
 "theorem snd_apply (κ : kernel α (β × γ)) (a : α) : snd κ a = (κ a).map Prod.snd :=\n  rfl\n#align snd_apply snd_apply\n\n",
 "prod_mk_left_apply'":
 "theorem prod_mk_left_apply' (κ : kernel α β) (ca : γ × α) (s : Set β) : prod_mk_left γ κ ca s = κ ca.snd s :=\n  rfl\n#align prod_mk_left_apply' prod_mk_left_apply'\n\n",
 "prod_mk_left_apply":
 "theorem prod_mk_left_apply (κ : kernel α β) (ca : γ × α) : prod_mk_left γ κ ca = κ ca.snd :=\n  rfl\n#align prod_mk_left_apply prod_mk_left_apply\n\n",
 "prod_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem prod_apply (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel α γ) [is_s_finite_kernel η] (a : α)\n    {s : Set (β × γ)} (hs : MeasurableSet s) :\n    (kernel.prod κ η) a s =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        ((η a) { c : γ | (b, c) ∈ s }) (κ a) :=\n  by simp_rw [Prod, comp_prod_apply _ _ _ hs, swap_left_apply _ _, prod_mk_left_apply, Prod.swap_prod_mk]\n#align prod_apply prod_apply\n\n",
 "measurable_comp_prod_fun_of_finite":
 "/-- Auxiliary lemma for `measurable_comp_prod_fun`. -/\ntheorem measurable_comp_prod_fun_of_finite (κ : kernel α β) [is_finite_kernel κ] (η : kernel (α × β) γ)\n    [is_finite_kernel η] (hs : MeasurableSet s) : Measurable fun a => comp_prod_fun κ η a s :=\n  by\n  simp only [comp_prod_fun]\n  have h_meas : Measurable (function.uncurry fun a b => η (a, b) { c : γ | (b, c) ∈ s }) :=\n    by\n    have : (function.uncurry fun a b => η (a, b) { c : γ | (b, c) ∈ s }) = fun p => η p { c : γ | (p.2, c) ∈ s } :=\n      by\n      ext1 p\n      have hp_eq_mk : p = (p.fst, p.snd) := prod.mk.eta.symm\n      rw [hp_eq_mk, Function.uncurry_apply_pair]\n    rw [this]\n    exact measurable_prod_mk_mem η (measurable_fst.snd.prod_mk measurable_snd hs)\n  exact measurable_lintegral κ h_meas\n#align measurable_comp_prod_fun_of_finite measurable_comp_prod_fun_of_finite\n\n",
 "measurable_comp_prod_fun":
 "theorem measurable_comp_prod_fun (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ) [is_s_finite_kernel η]\n    (hs : MeasurableSet s) : Measurable fun a => comp_prod_fun κ η a s :=\n  by\n  simp_rw [comp_prod_fun_tsum_right κ η _ hs]\n  refine' measurable.ennreal_tsum fun n => _\n  simp only [comp_prod_fun]\n  have h_meas : Measurable (function.uncurry fun a b => seq η n (a, b) { c : γ | (b, c) ∈ s }) :=\n    by\n    have :\n      (function.uncurry fun a b => seq η n (a, b) { c : γ | (b, c) ∈ s }) = fun p =>\n        seq η n p { c : γ | (p.2, c) ∈ s } :=\n      by\n      ext1 p\n      have hp_eq_mk : p = (p.fst, p.snd) := prod.mk.eta.symm\n      rw [hp_eq_mk, Function.uncurry_apply_pair]\n    rw [this]\n    exact measurable_prod_mk_mem (seq η n) (measurable_fst.snd.prod_mk measurable_snd hs)\n  exact measurable_lintegral κ h_meas\n#align measurable_comp_prod_fun measurable_comp_prod_fun\n\n",
 "map_apply'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem map_apply' (κ : kernel α β) (hf : Measurable f) (a : α) {s : Set γ} (hs : MeasurableSet s) :\n    map κ f hf a s = κ a («expr ⁻¹' » f s) := by rw [map_apply, measure.map_apply hf hs]\n#align map_apply' map_apply'\n\n",
 "map_apply":
 "theorem map_apply (κ : kernel α β) (hf : Measurable f) (a : α) : map κ f hf a = (κ a).map f :=\n  rfl\n#align map_apply map_apply\n\n",
 "lintegral_swap_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_swap_right (κ : kernel α (β × γ)) (a : α) {g : γ × β → ennreal} (hg : Measurable g) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g c)\n        (swap_right κ a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g bc.swap)\n        (κ a) :=\n  by rw [swap_right, lintegral_map _ measurable_swap a hg]\n#align lintegral_swap_right lintegral_swap_right\n\n",
 "lintegral_swap_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_swap_left (κ : kernel (α × β) γ) (a : β × α) (g : γ → ennreal) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g c)\n        (swap_left κ a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g c)\n        (κ a.swap) :=\n  by rw [swap_left, lintegral_comap _ measurable_swap a]\n#align lintegral_swap_left lintegral_swap_left\n\n",
 "lintegral_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_snd (κ : kernel α (β × γ)) (a : α) {g : γ → ennreal} (hg : Measurable g) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g c)\n        (snd κ a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g bc.snd)\n        (κ a) :=\n  by rw [snd, lintegral_map _ measurable_snd a hg]\n#align lintegral_snd lintegral_snd\n\n",
 "lintegral_prod_mk_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_prod_mk_left (κ : kernel α β) (ca : γ × α) (g : β → ennreal) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g b)\n        (prod_mk_left γ κ ca) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g b)\n        (κ ca.snd) :=\n  rfl\n#align lintegral_prod_mk_left lintegral_prod_mk_left\n\n",
 "lintegral_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_prod (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel α γ) [is_s_finite_kernel η] (a : α)\n    {g : β × γ → ennreal} (hg : Measurable g) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g c)\n        ((kernel.prod κ η) a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          (g (b, c)) (η a))\n        (κ a) :=\n  by simp_rw [Prod, lintegral_comp_prod _ _ _ hg, swap_left_apply, prod_mk_left_apply, Prod.swap_prod_mk]\n#align lintegral_prod lintegral_prod\n\n",
 "lintegral_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_map (κ : kernel α β) (hf : Measurable f) (a : α) {g' : γ → ennreal} (hg : Measurable g') :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g' b)\n        (map κ f hf a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g' (f a))\n        (κ a) :=\n  by rw [map_apply _ hf, lintegral_map hg hf]\n#align lintegral_map lintegral_map\n\n",
 "lintegral_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_fst (κ : kernel α (β × γ)) (a : α) {g : β → ennreal} (hg : Measurable g) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g c)\n        (fst κ a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g bc.fst)\n        (κ a) :=\n  by rw [fst, lintegral_map _ measurable_fst a hg]\n#align lintegral_fst lintegral_fst\n\n",
 "lintegral_comp_prod'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/-- Lebesgue integral against the composition-product of two kernels. -/\ntheorem lintegral_comp_prod' (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ) [is_s_finite_kernel η]\n    (a : α) {f : β → γ → ennreal} (hf : Measurable (function.uncurry f)) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f bc.1 bc.2)\n        ((kernel.comp_prod κ η) a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f b c)\n          (η (a, b)))\n        (κ a) :=\n  by\n  let F : ℕ → simple_func (β × γ) (ennreal) := simple_func.eapprox (function.uncurry f)\n  have h :\n    ∀ a,\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (F n a) =\n        function.uncurry f a :=\n    simple_func.supr_eapprox_apply (function.uncurry f) hf\n  simp only [Prod.forall, Function.uncurry_apply_pair] at h\n  simp_rw [← h, prod.mk.eta]\n  have h_mono : Monotone F := fun i j hij b => simple_func.monotone_eapprox (function.uncurry f) hij _\n  rw [lintegral_supr (fun n => (F n).measurable) h_mono]\n  have :\n    ∀ b,\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (F n (b, c)))\n          (η (a, b)) =\n        «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n          («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (F n (b, c)) (η (a, b))) :=\n    by\n    intro a\n    rw [lintegral_supr]\n    · exact fun n => (F n).measurable.comp measurable_prod_mk_left\n    · exact fun i j hij b => h_mono hij _\n  simp_rw [this]\n  have h_some_meas_integral :\n    ∀ f' : simple_func (β × γ) (ennreal),\n      Measurable fun b =>\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          (f' (b, c)) (η (a, b)) :=\n    by\n    intro f'\n    have :\n      (fun b =>\n          «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (f' (b, c)) (η (a, b))) =\n        (fun ab =>\n            «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n              (f' (ab.2, c)) (η ab)) ∘\n          fun b => (a, b) :=\n      by\n      ext1 ab\n      rfl\n    rw [this]\n    refine' Measurable.comp _ measurable_prod_mk_left\n    exact measurable_lintegral η ((simple_func.measurable _).comp (measurable_fst.snd.prod_mk measurable_snd))\n  rw [lintegral_supr]\n  rotate_left\n  · exact fun n => h_some_meas_integral (F n)\n  · exact fun i j hij b => lintegral_mono fun c => h_mono hij _\n  congr\n  ext1 n\n  refine' simple_func.induction _ _ (F n)\n  · intro c s hs\n    simp only [simple_func.const_zero, simple_func.coe_piecewise, simple_func.coe_const, simple_func.coe_zero,\n      Set.piecewise_eq_indicator, lintegral_indicator_const hs]\n    rw [comp_prod_apply κ η _ hs, ← lintegral_const_mul c _]\n    swap\n    · exact (measurable_prod_mk_mem η ((measurable_fst.snd.prod_mk measurable_snd) hs)).comp measurable_prod_mk_left\n    congr\n    ext1 b\n    rw [lintegral_indicator_const_comp measurable_prod_mk_left hs]\n    rfl\n  · intro f f' h_disj hf_eq hf'_eq\n    simp_rw [simple_func.coe_add, Pi.add_apply]\n    change\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          ((f : β × γ → ennreal) x + f' x) ((kernel.comp_prod κ η) a) =\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n            (f (b, c) + f' (b, c)) (η (a, b)))\n          (κ a)\n    rw [lintegral_add_left (simple_func.measurable _), hf_eq, hf'_eq, ← lintegral_add_left]\n    swap\n    · exact h_some_meas_integral f\n    congr with b\n    rw [← lintegral_add_left ((simple_func.measurable _).comp measurable_prod_mk_left)]\n#align lintegral_comp_prod' lintegral_comp_prod'\n\n",
 "lintegral_comp_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/-- Lebesgue integral against the composition-product of two kernels. -/\ntheorem lintegral_comp_prod (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ) [is_s_finite_kernel η]\n    (a : α) {f : β × γ → ennreal} (hf : Measurable f) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f bc)\n        ((kernel.comp_prod κ η) a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          (f (b, c)) (η (a, b)))\n        (κ a) :=\n  by\n  let g := function.curry f\n  change\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (f bc)\n        ((kernel.comp_prod κ η) a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g b c)\n          (η (a, b)))\n        (κ a)\n  rw [← lintegral_comp_prod']\n  · simp_rw [g, Function.curry_apply, prod.mk.eta]\n  · simp_rw [g, function.uncurry_curry]\n    exact hf\n#align lintegral_comp_prod lintegral_comp_prod\n\n",
 "lintegral_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_comp (η : kernel β γ) [is_s_finite_kernel η] (κ : kernel α β) [is_s_finite_kernel κ] (a : α)\n    {g : γ → ennreal} (hg : Measurable g) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g c)\n        ((kernel.comp η κ) a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g c)\n          (η b))\n        (κ a) :=\n  by\n  rw [comp, lintegral_snd _ _ hg]\n  change\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        ((fun a b => g b) bc.fst bc.snd) ((kernel.comp_prod κ (prod_mk_left α η)) a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g c)\n          (η b))\n        (κ a)\n  exact lintegral_comp_prod _ _ _ (hg.comp measurable_snd)\n#align lintegral_comp lintegral_comp\n\n",
 "lintegral_comap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem lintegral_comap (κ : kernel α β) (hg : Measurable g) (c : γ) (g' : β → ennreal) :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g' b)\n        (comap κ g hg c) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (g' b)\n        (κ (g c)) :=\n  rfl\n#align lintegral_comap lintegral_comap\n\n",
 "fst_apply'":
 "theorem fst_apply' (κ : kernel α (β × γ)) (a : α) {s : Set β} (hs : MeasurableSet s) :\n    fst κ a s = κ a { p | p.1 ∈ s } :=\n  by\n  rw [fst_apply, measure.map_apply measurable_fst hs]\n  rfl\n#align fst_apply' fst_apply'\n\n",
 "fst_apply":
 "theorem fst_apply (κ : kernel α (β × γ)) (a : α) : fst κ a = (κ a).map Prod.fst :=\n  rfl\n#align fst_apply fst_apply\n\n",
 "deterministic_comp_eq_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp -/\ntheorem deterministic_comp_eq_map (hf : Measurable f) (κ : kernel α β) [is_s_finite_kernel κ] :\n    kernel.comp (deterministic f hf) κ = map κ f hf :=\n  by\n  ext (a s hs) : 2\n  simp_rw [map_apply' _ _ _ hs, comp_apply _ _ _ hs, deterministic_apply' hf _ hs, lintegral_indicator_const_comp hf hs,\n    one_mul]\n#align deterministic_comp_eq_map deterministic_comp_eq_map\n\n",
 "comp_prod_fun_tsum_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem comp_prod_fun_tsum_right (κ : kernel α β) (η : kernel (α × β) γ) [is_s_finite_kernel η] (a : α)\n    (hs : MeasurableSet s) :\n    comp_prod_fun κ η a s =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (comp_prod_fun κ (seq η n) a s) :=\n  by\n  simp_rw [comp_prod_fun, (measure_sum_seq η _).symm]\n  have :\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (measure.sum (fun n => seq η n (a, b)) { c : γ | (b, c) ∈ s }) (κ a) =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (seq η n (a, b) { c : γ | (b, c) ∈ s }))\n        (κ a) :=\n    by\n    congr\n    ext1 b\n    rw [measure.sum_apply]\n    exact measurable_prod_mk_left hs\n  rw [this, lintegral_tsum fun n : ℕ => _]\n  exact\n    ((measurable_prod_mk_mem (seq η n) ((measurable_fst.snd.prod_mk measurable_snd) hs)).comp\n        measurable_prod_mk_left).ae_measurable\n#align comp_prod_fun_tsum_right comp_prod_fun_tsum_right\n\n",
 "comp_prod_fun_tsum_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem comp_prod_fun_tsum_left (κ : kernel α β) (η : kernel (α × β) γ) [is_s_finite_kernel κ] (a : α)\n    (s : Set (β × γ)) :\n    comp_prod_fun κ η a s =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (comp_prod_fun (seq κ n) η a s) :=\n  by simp_rw [comp_prod_fun, (measure_sum_seq κ _).symm, lintegral_sum_measure]\n#align comp_prod_fun_tsum_left comp_prod_fun_tsum_left\n\n",
 "comp_prod_fun_eq_tsum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem comp_prod_fun_eq_tsum (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ) [is_s_finite_kernel η]\n    (a : α) (hs : MeasurableSet s) :\n    comp_prod_fun κ η a s =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (comp_prod_fun (seq κ n) (seq η m) a s) :=\n  by simp_rw [comp_prod_fun_tsum_left κ η a s, comp_prod_fun_tsum_right _ η a hs]\n#align comp_prod_fun_eq_tsum comp_prod_fun_eq_tsum\n\n",
 "comp_prod_fun_empty":
 "/-\nCopyright (c) 2023 Rémy Degenne. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Rémy Degenne\n-/\ntheorem comp_prod_fun_empty (κ : kernel α β) (η : kernel (α × β) γ) (a : α) : comp_prod_fun κ η a ∅ = 0 := by\n  simp only [comp_prod_fun, Set.mem_empty_iff_false, Set.setOf_false, measure_empty, lintegral_const,\n    MulZeroClass.zero_mul]\n#align comp_prod_fun_empty comp_prod_fun_empty\n\n",
 "comp_prod_fun_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr on » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\ntheorem comp_prod_fun_Union (κ : kernel α β) (η : kernel (α × β) γ) [is_s_finite_kernel η] (a : α) (f : ℕ → Set (β × γ))\n    (hf_meas : ∀ i, MeasurableSet (f i)) (hf_disj : Pairwise («expr on » Disjoint f)) :\n    comp_prod_fun κ η a\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i)) =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (comp_prod_fun κ η a (f i)) :=\n  by\n  have h_Union :\n    (fun b =>\n        η (a, b)\n          { c : γ |\n            (b, c) ∈\n              «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (f i) }) =\n      fun b =>\n      η (a, b)\n        («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n          { c : γ | (b, c) ∈ f i }) :=\n    by\n    ext1 b\n    congr with c\n    simp only [Set.mem_unionᵢ, Set.supᵢ_eq_unionᵢ, Set.mem_setOf_eq]\n    rfl\n  rw [comp_prod_fun, h_Union]\n  have h_tsum :\n    (fun b =>\n        η (a, b)\n          («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n            { c : γ | (b, c) ∈ f i })) =\n      fun b =>\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (η (a, b) { c : γ | (b, c) ∈ f i }) :=\n    by\n    ext1 b\n    rw [measure_Union]\n    · intro i j hij s hsi hsj c hcs\n      have hbci : {(b, c)} ⊆ f i := by\n        rw [Set.singleton_subset_iff]\n        exact hsi hcs\n      have hbcj : {(b, c)} ⊆ f j := by\n        rw [Set.singleton_subset_iff]\n        exact hsj hcs\n      simpa only [Set.bot_eq_empty, Set.le_eq_subset, Set.singleton_subset_iff, Set.mem_empty_iff_false] using\n        hf_disj hij hbci hbcj\n    · exact fun i => (@measurable_prod_mk_left β γ _ _ b) _ (hf_meas i)\n  rw [h_tsum, lintegral_tsum]\n  · rfl\n  · intro i\n    have hm : MeasurableSet { p : (α × β) × γ | (p.1.2, p.2) ∈ f i } :=\n      measurable_fst.snd.prod_mk measurable_snd (hf_meas i)\n    exact ((measurable_prod_mk_mem η hm).comp measurable_prod_mk_left).ae_measurable\n#align comp_prod_fun_Union comp_prod_fun_Union\n\n",
 "comp_prod_eq_tsum_comp_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\ntheorem comp_prod_eq_tsum_comp_prod (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ)\n    [is_s_finite_kernel η] (a : α) (hs : MeasurableSet s) :\n    (kernel.comp_prod κ η) a s =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        ((kernel.comp_prod (seq κ n) (seq η m)) a s) :=\n  by\n  simp_rw [comp_prod_apply_eq_comp_prod_fun _ _ _ hs]\n  exact comp_prod_fun_eq_tsum κ η a hs\n#align comp_prod_eq_tsum_comp_prod comp_prod_eq_tsum_comp_prod\n\n",
 "comp_prod_eq_sum_comp_prod_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\ntheorem comp_prod_eq_sum_comp_prod_right (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ)\n    [is_s_finite_kernel η] : kernel.comp_prod κ η = kernel.sum fun n => kernel.comp_prod κ (seq η n) :=\n  by\n  rw [comp_prod_eq_sum_comp_prod]\n  simp_rw [comp_prod_eq_sum_comp_prod_left κ _]\n  rw [kernel.sum_comm]\n#align comp_prod_eq_sum_comp_prod_right comp_prod_eq_sum_comp_prod_right\n\n",
 "comp_prod_eq_sum_comp_prod_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\ntheorem comp_prod_eq_sum_comp_prod_left (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ)\n    [is_s_finite_kernel η] : kernel.comp_prod κ η = kernel.sum fun n => kernel.comp_prod (seq κ n) η :=\n  by\n  rw [comp_prod_eq_sum_comp_prod]\n  congr with (n a s hs)\n  simp_rw [kernel.sum_apply' _ _ hs, comp_prod_apply_eq_comp_prod_fun _ _ _ hs, comp_prod_fun_tsum_right _ η a hs]\n#align comp_prod_eq_sum_comp_prod_left comp_prod_eq_sum_comp_prod_left\n\n",
 "comp_prod_eq_sum_comp_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\ntheorem comp_prod_eq_sum_comp_prod (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ)\n    [is_s_finite_kernel η] :\n    kernel.comp_prod κ η = kernel.sum fun n => kernel.sum fun m => kernel.comp_prod (seq κ n) (seq η m) :=\n  by\n  ext (a s hs) : 2\n  simp_rw [kernel.sum_apply' _ a hs]\n  rw [comp_prod_eq_tsum_comp_prod κ η a hs]\n#align comp_prod_eq_sum_comp_prod comp_prod_eq_sum_comp_prod\n\n",
 "comp_prod_apply_univ_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\ntheorem comp_prod_apply_univ_le (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ) [is_finite_kernel η]\n    (a : α) : (kernel.comp_prod κ η) a Set.univ ≤ κ a Set.univ * is_finite_kernel.bound η :=\n  by\n  rw [comp_prod_apply κ η a MeasurableSet.univ]\n  simp only [Set.mem_univ, Set.setOf_true]\n  let Cη := is_finite_kernel.bound η\n  calc\n    «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n          (η (a, b) Set.univ) (κ a) ≤\n        «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" Cη\n          (κ a) :=\n      lintegral_mono fun b => measure_le_bound η (a, b) Set.univ\n    _ = Cη * κ a Set.univ := (lintegral_const Cη)\n    _ = κ a Set.univ * Cη := mul_comm _ _\n    \n#align comp_prod_apply_univ_le comp_prod_apply_univ_le\n\n",
 "comp_prod_apply_eq_comp_prod_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\ntheorem comp_prod_apply_eq_comp_prod_fun (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ)\n    [is_s_finite_kernel η] (a : α) (hs : MeasurableSet s) : (kernel.comp_prod κ η) a s = comp_prod_fun κ η a s :=\n  by\n  rw [comp_prod]\n  change\n    measure.of_measurable (fun s hs => comp_prod_fun κ η a s) (comp_prod_fun_empty κ η a) (comp_prod_fun_Union κ η a)\n        s =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (η (a, b) { c | (b, c) ∈ s }) (κ a)\n  rw [measure.of_measurable_apply _ hs]\n  rfl\n#align comp_prod_apply_eq_comp_prod_fun comp_prod_apply_eq_comp_prod_fun\n\n",
 "comp_prod_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp_prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem comp_prod_apply (κ : kernel α β) [is_s_finite_kernel κ] (η : kernel (α × β) γ) [is_s_finite_kernel η] (a : α)\n    (hs : MeasurableSet s) :\n    (kernel.comp_prod κ η) a s =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\"\n        (η (a, b) { c | (b, c) ∈ s }) (κ a) :=\n  comp_prod_apply_eq_comp_prod_fun κ η a hs\n#align comp_prod_apply comp_prod_apply\n\n",
 "comp_deterministic_eq_comap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp -/\ntheorem comp_deterministic_eq_comap (κ : kernel α β) [is_s_finite_kernel κ] (hg : Measurable g) :\n    kernel.comp κ (deterministic g hg) = comap κ g hg :=\n  by\n  ext (a s hs) : 2\n  simp_rw [comap_apply' _ _ _ s, comp_apply _ _ _ hs, deterministic_apply hg a,\n    lintegral_dirac' _ (kernel.measurable_coe κ hs)]\n#align comp_deterministic_eq_comap comp_deterministic_eq_comap\n\n",
 "comp_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp -/\n/-- Composition of kernels is associative. -/\ntheorem comp_assoc {δ : Type _} {mδ : MeasurableSpace δ} (ξ : kernel γ δ) [is_s_finite_kernel ξ] (η : kernel β γ)\n    [is_s_finite_kernel η] (κ : kernel α β) [is_s_finite_kernel κ] :\n    kernel.comp (kernel.comp ξ η) κ = kernel.comp ξ (kernel.comp η κ) :=\n  by\n  refine' ext_fun fun a f hf => _\n  simp_rw [lintegral_comp _ _ _ hf, lintegral_comp _ _ _ (measurable_lintegral' ξ hf)]\n#align comp_assoc comp_assoc\n\n",
 "comp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `kernel.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∫⁻ , ∂ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ » -/\ntheorem comp_apply (η : kernel β γ) [is_s_finite_kernel η] (κ : kernel α β) [is_s_finite_kernel κ] (a : α) {s : Set γ}\n    (hs : MeasurableSet s) :\n    (kernel.comp η κ) a s =\n      «expr∫⁻ , ∂ » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∫⁻ , ∂ »\" (η b s)\n        (κ a) :=\n  by\n  rw [comp, snd_apply' _ _ hs, comp_prod_apply]\n  swap; · exact measurable_snd hs\n  simp only [Set.mem_setOf_eq, Set.setOf_mem_eq, prod_mk_left_apply' _ _ s]\n#align comp_apply comp_apply\n\n",
 "comap_apply'":
 "theorem comap_apply' (κ : kernel α β) (hg : Measurable g) (c : γ) (s : Set β) : comap κ g hg c s = κ (g c) s :=\n  rfl\n#align comap_apply' comap_apply'\n\n",
 "comap_apply":
 "theorem comap_apply (κ : kernel α β) (hg : Measurable g) (c : γ) : comap κ g hg c = κ (g c) :=\n  rfl\n#align comap_apply comap_apply\n\n"}