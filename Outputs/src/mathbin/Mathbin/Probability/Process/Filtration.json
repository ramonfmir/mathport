{"uniform_integrable_condexp_filtration":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measure_theory.condexp -/\n-- can't exact here\n/-- Given a integrable function `g`, the conditional expectations of `g` with respect to a\nfiltration is uniformly integrable. -/\ntheorem integrable.uniform_integrable_condexp_filtration [preorder ι] {μ : Measure Ω} [FiniteMeasure μ]\n    {f : filtration ι m} {g : Ω → exprℝ} (hg : integrable g μ) :\n    uniform_integrable (fun i => measure_theory.condexp μ g (f i)) 1 μ :=\n  hg.uniform_integrable_condexp f.le\n#align integrable.uniform_integrable_condexp_filtration integrable.uniform_integrable_condexp_filtration\n\n",
 "strongly_measurable_limit_process'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\ntheorem strongly_measurable_limit_process' : (strongly_measurable_of m) (limit_process f ℱ μ) :=\n  strongly_measurable_limit_process.mono (supₛ_le fun m ⟨n, hn⟩ => hn ▸ ℱ.le _)\n#align strongly_measurable_limit_process' strongly_measurable_limit_process'\n\n",
 "strongly_measurable_limit_process":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `strongly_measurable_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\ntheorem strongly_measurable_limit_process :\n    (strongly_measurable_of\n        («expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (ℱ n)))\n      (limit_process f ℱ μ) :=\n  by\n  rw [limit_process]\n  split_ifs with h h\n  exacts[(Classical.choose_spec h).1, strongly_measurable_zero]\n#align strongly_measurable_limit_process strongly_measurable_limit_process\n\n",
 "mono":
 "/-\nCopyright (c) 2021 Kexing Ying. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kexing Ying, Rémy Degenne\n-/\nprotected theorem mono {i j : ι} (f : filtration ι m) (hij : i ≤ j) : f i ≤ f j :=\n  f.mono' hij\n#align mono mono\n\n",
 "mem_ℒp_limit_process_of_snorm_bdd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nnreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\ntheorem mem_ℒp_limit_process_of_snorm_bdd {R : nnreal} {p : ennreal} {F : Type _} [NormedAddCommGroup F]\n    {ℱ : filtration ℕ m} {f : ℕ → Ω → F} (hfm : ∀ n, ae_strongly_measurable (f n) μ) (hbdd : ∀ n, snorm (f n) p μ ≤ R) :\n    mem_ℒp (limit_process f ℱ μ) p μ := by\n  rw [limit_process]\n  split_ifs with h\n  · refine'\n      ⟨strongly_measurable.ae_strongly_measurable\n          ((Classical.choose_spec h).1.mono (supₛ_le fun m ⟨n, hn⟩ => hn ▸ ℱ.le _)),\n        lt_of_le_of_lt (Lp.snorm_lim_le_liminf_snorm hfm _ (Classical.choose_spec h).2)\n          (lt_of_le_of_lt _ (ENNReal.coe_lt_top : ↑R < ennreal.top))⟩\n    simp_rw [liminf_eq, eventually_at_top]\n    exact supₛ_le fun b ⟨a, ha⟩ => (ha a le_rfl).trans (hbdd _)\n  · exact zero_mem_ℒp\n#align mem_ℒp_limit_process_of_snorm_bdd mem_ℒp_limit_process_of_snorm_bdd\n\n",
 "measurable_set_of_filtration":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\ntheorem measurable_set_of_filtration [preorder ι] {f : filtration ι m} {s : Set Ω} {i : ι}\n    (hs : (measurable_set_of (f i)) s) : (measurable_set_of m) s :=\n  f.le i s hs\n#align measurable_set_of_filtration measurable_set_of_filtration\n\n",
 "measurable_set_filtration_of_set'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\ntheorem measurable_set_filtration_of_set' {s : ι → Set Ω} (hsm : ∀ n, (measurable_set_of m) (s n)) (i : ι) :\n    (measurable_set_of (filtration_of_set hsm i)) (s i) :=\n  measurable_set_filtration_of_set hsm i le_rfl\n#align measurable_set_filtration_of_set' measurable_set_filtration_of_set'\n\n",
 "measurable_set_filtration_of_set":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\ntheorem measurable_set_filtration_of_set {s : ι → Set Ω} (hsm : ∀ i, (measurable_set_of m) (s i)) (i : ι) {j : ι}\n    (hj : j ≤ i) : (measurable_set_of (filtration_of_set hsm i)) (s j) :=\n  MeasurableSpace.measurableSet_generateFrom ⟨j, hj, rfl⟩\n#align measurable_set_filtration_of_set measurable_set_filtration_of_set\n\n",
 "le":
 "protected theorem le (f : filtration ι m) (i : ι) : f i ≤ m :=\n  f.le' i\n#align le le\n\n",
 "filtration_of_set_eq_natural":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `measurable_set_of -/\ntheorem filtration_of_set_eq_natural [MulZeroOneClass β] [Nontrivial β] {s : ι → Set Ω}\n    (hsm : ∀ i, (measurable_set_of m) (s i)) :\n    filtration_of_set hsm =\n      natural (fun i => (s i).indicator (fun ω => 1 : Ω → β)) fun i => strongly_measurable_one.indicator (hsm i) :=\n  by\n  simp only [natural, filtration_of_set, measurable_space_supr_eq]\n  ext1 i\n  refine' le_antisymm (generate_from_le _) (generate_from_le _)\n  · rintro _ ⟨j, hij, rfl⟩\n    refine' measurable_set_generate_from ⟨j, measurable_set_generate_from ⟨hij, _⟩⟩\n    rw [comap_eq_generate_from]\n    refine' measurable_set_generate_from ⟨{1}, measurable_set_singleton 1, _⟩\n    ext x\n    simp [Set.indicator_const_preimage_eq_union]\n  · rintro t ⟨n, ht⟩\n    suffices\n      MeasurableSpace.generateFrom\n          { t | ∃ H : n ≤ i, (measurable_set_of (MeasurableSpace.comap ((s n).indicator (fun ω => 1 : Ω → β)) mβ)) t } ≤\n        generate_from { t | ∃ (j : ι)(H : j ≤ i), s j = t }\n      by exact this _ ht\n    refine' generate_from_le _\n    rintro t ⟨hn, u, hu, hu'⟩\n    obtain heq | heq | heq | heq := Set.indicator_const_preimage (s n) u (1 : β)\n    pick_goal 4\n    rw [Set.mem_singleton_iff] at heq\n    all_goals rw [HEq] at hu'; rw [← hu']\n    exacts[measurable_set_empty _, MeasurableSet.univ, measurable_set_generate_from ⟨n, hn, rfl⟩,\n      MeasurableSet.compl (measurable_set_generate_from ⟨n, hn, rfl⟩)]\n#align filtration_of_set_eq_natural filtration_of_set_eq_natural\n\n",
 "ext":
 "@[ext]\nprotected theorem ext {f g : filtration ι m} (h : (f : ι → MeasurableSpace Ω) = g) : f = g :=\n  by\n  cases f\n  cases g\n  simp only\n  exact h\n#align ext ext\n\n",
 "const_apply":
 "@[simp]\ntheorem const_apply {m' : MeasurableSpace Ω} {hm' : m' ≤ m} (i : ι) : const ι m' hm' i = m' :=\n  rfl\n#align const_apply const_apply\n\n",
 "coe_fn_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[norm_cast]\ntheorem coe_fn_sup {f g : filtration ι m} : «expr⇑ » («expr ⊔ » f g) = «expr ⊔ » f g :=\n  rfl\n#align coe_fn_sup coe_fn_sup\n\n",
 "coe_fn_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[norm_cast]\ntheorem coe_fn_inf {f g : filtration ι m} : «expr⇑ » («expr ⊓ » f g) = «expr ⊓ » f g :=\n  rfl\n#align coe_fn_inf coe_fn_inf\n\n",
 "Sup_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem Sup_def (s : Set (filtration ι m)) (i : ι) : supₛ s i = supₛ («expr '' » (fun f : filtration ι m => f i) s) :=\n  rfl\n#align Sup_def Sup_def\n\n",
 "Inf_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem Inf_def (s : Set (filtration ι m)) (i : ι) :\n    infₛ s i = if Set.Nonempty s then infₛ («expr '' » (fun f : filtration ι m => f i) s) else m :=\n  rfl\n#align Inf_def Inf_def\n\n"}