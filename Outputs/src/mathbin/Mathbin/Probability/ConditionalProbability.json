{"inter_pos_of_cond_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\ntheorem inter_pos_of_cond_ne_zero (hms : measurable_set s) (hcst : probability_theory.cond μ t s ≠ 0) : 0 < μ (s ∩ t) :=\n  by\n  refine' pos_iff_ne_zero.mpr (right_ne_zero_of_mul _)\n  · exact (μ s)⁻¹\n  convert hcst\n  simp [hms, Set.inter_comm]\n#align inter_pos_of_cond_ne_zero inter_pos_of_cond_ne_zero\n\n",
 "cond_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\n@[simp]\ntheorem cond_univ [is_probability_measure μ] : probability_theory.cond_fn μ Set.univ = μ := by\n  simp [cond, measure_univ, measure.restrict_univ]\n#align cond_univ cond_univ\n\n",
 "cond_pos_of_inter_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\ntheorem cond_pos_of_inter_ne_zero [is_finite_measure μ] (hms : measurable_set s) (hci : μ (s ∩ t) ≠ 0) :\n    0 < (probability_theory.cond_fn μ s) t := by\n  rw [cond_apply _ hms]\n  refine' ennreal.mul_pos _ hci\n  exact ennreal.inv_ne_zero.mpr (measure_ne_top _ _)\n#align cond_pos_of_inter_ne_zero cond_pos_of_inter_ne_zero\n\n",
 "cond_mul_eq_inter'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\ntheorem cond_mul_eq_inter' (hms : measurable_set s) (hcs : μ s ≠ 0) (hcs' : μ s ≠ ennreal.top) (t : set Ω) :\n    probability_theory.cond μ t s * μ s = μ (s ∩ t) := by\n  rw [cond_apply μ hms t, mul_comm, ← mul_assoc, ennreal.mul_inv_cancel hcs hcs', one_mul]\n#align cond_mul_eq_inter' cond_mul_eq_inter'\n\n",
 "cond_mul_eq_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\ntheorem cond_mul_eq_inter [is_finite_measure μ] (hms : measurable_set s) (hcs : μ s ≠ 0) (t : set Ω) :\n    probability_theory.cond μ t s * μ s = μ (s ∩ t) :=\n  cond_mul_eq_inter' μ hms hcs (measure_ne_top _ s) t\n#align cond_mul_eq_inter cond_mul_eq_inter\n\n",
 "cond_is_probability_measure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\n/-\nCopyright (c) 2022 Rishikesh Vaishnav. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Rishikesh Vaishnav\n-/\n/-- The conditional probability measure of any finite measure on any set of positive measure\nis a probability measure. -/\ntheorem cond_is_probability_measure [is_finite_measure μ] (hcs : μ s ≠ 0) :\n    is_probability_measure <| probability_theory.cond_fn μ s :=\n  ⟨by\n    rw [cond, measure.smul_apply, measure.restrict_apply measurable_set.univ, Set.univ_inter]\n    exact ennreal.inv_mul_cancel hcs (measure_ne_top _ s)⟩\n#align cond_is_probability_measure cond_is_probability_measure\n\n",
 "cond_inter_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\ntheorem cond_inter_self (hms : measurable_set s) (t : set Ω) :\n    probability_theory.cond μ (s ∩ t) s = probability_theory.cond μ t s := by\n  rw [cond_apply _ hms, ← Set.inter_assoc, Set.inter_self, ← cond_apply _ hms]\n#align cond_inter_self cond_inter_self\n\n",
 "cond_eq_inv_mul_cond_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\n/-- **Bayes' Theorem** -/\ntheorem cond_eq_inv_mul_cond_mul [is_finite_measure μ] (hms : measurable_set s) (hmt : measurable_set t) :\n    probability_theory.cond μ t s = (μ s)⁻¹ * probability_theory.cond μ s t * μ t :=\n  by\n  by_cases ht : μ t = 0\n  · simp [cond, ht, measure.restrict_apply hmt, or.inr (measure_inter_null_of_null_left s ht)]\n  · rw [mul_assoc, cond_mul_eq_inter μ hmt ht s, Set.inter_comm, cond_apply _ hms]\n#align cond_eq_inv_mul_cond_mul cond_eq_inv_mul_cond_mul\n\n",
 "cond_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\n@[simp]\ntheorem cond_empty : probability_theory.cond_fn μ ∅ = 0 := by simp [cond]\n#align cond_empty cond_empty\n\n",
 "cond_cond_eq_cond_inter'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal.top -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\ntheorem cond_cond_eq_cond_inter' (hms : measurable_set s) (hmt : measurable_set t) (hcs : μ s ≠ ennreal.top)\n    (hci : μ (s ∩ t) ≠ 0) :\n    probability_theory.cond_fn (probability_theory.cond_fn μ s) t = probability_theory.cond_fn μ (s ∩ t) :=\n  by\n  have hcs : μ s ≠ 0 := (μ.to_outer_measure.pos_of_subset_ne_zero (Set.inter_subset_left _ _) hci).ne'\n  ext u\n  simp [*, hms.inter hmt, cond_apply, ← mul_assoc, ← Set.inter_assoc, ennreal.mul_inv, mul_comm, ← mul_assoc,\n    ennreal.inv_mul_cancel]\n#align cond_cond_eq_cond_inter' cond_cond_eq_cond_inter'\n\n",
 "cond_cond_eq_cond_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond_fn -/\n/-- Conditioning first on `s` and then on `t` results in the same measure as conditioning\non `s ∩ t`. -/\ntheorem cond_cond_eq_cond_inter [is_finite_measure μ] (hms : measurable_set s) (hmt : measurable_set t)\n    (hci : μ (s ∩ t) ≠ 0) :\n    probability_theory.cond_fn (probability_theory.cond_fn μ s) t = probability_theory.cond_fn μ (s ∩ t) :=\n  cond_cond_eq_cond_inter' μ hms hmt (measure_ne_top μ s) hci\n#align cond_cond_eq_cond_inter cond_cond_eq_cond_inter\n\n",
 "cond_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\n/-- The axiomatic definition of conditional probability derived from a measure-theoretic one. -/\ntheorem cond_apply (hms : measurable_set s) (t : set Ω) : probability_theory.cond μ t s = (μ s)⁻¹ * μ (s ∩ t) :=\n  by\n  rw [cond, measure.smul_apply, measure.restrict_apply' hms, Set.inter_comm]\n  rfl\n#align cond_apply cond_apply\n\n",
 "cond_add_cond_compl_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `probability_theory.cond -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/-- A version of the law of total probability. -/\ntheorem cond_add_cond_compl_eq [is_finite_measure μ] (hms : measurable_set s) (hcs : μ s ≠ 0)\n    (hcs' : μ («expr ᶜ» s) ≠ 0) :\n    probability_theory.cond μ t s * μ s + probability_theory.cond μ t («expr ᶜ» s) * μ («expr ᶜ» s) = μ t :=\n  by\n  rw [cond_mul_eq_inter μ hms hcs, cond_mul_eq_inter μ hms.compl hcs', Set.inter_comm _ t, Set.inter_comm _ t]\n  exact measure_inter_add_diff t hms\n#align cond_add_cond_compl_eq cond_add_cond_compl_eq\n\n"}