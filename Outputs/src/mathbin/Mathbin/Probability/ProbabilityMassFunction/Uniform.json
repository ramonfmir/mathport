{"uniform_of_fintype_apply":
 "@[simp]\ntheorem uniform_of_fintype_apply (a : α) : uniform_of_fintype α a = (Fintype.card α)⁻¹ := by\n  simpa only [uniform_of_fintype, Finset.mem_univ, if_true, uniform_of_finset_apply]\n#align uniform_of_fintype_apply uniform_of_fintype_apply\n\n",
 "uniform_of_finset_apply_of_not_mem":
 "theorem uniform_of_finset_apply_of_not_mem (ha : a ∉ s) : uniform_of_finset s hs a = 0 := by simp [ha]\n#align uniform_of_finset_apply_of_not_mem uniform_of_finset_apply_of_not_mem\n\n",
 "uniform_of_finset_apply_of_mem":
 "theorem uniform_of_finset_apply_of_mem (ha : a ∈ s) : uniform_of_finset s hs a = s.card⁻¹ := by simp [ha]\n#align uniform_of_finset_apply_of_mem uniform_of_finset_apply_of_mem\n\n",
 "uniform_of_finset_apply":
 "/-\nCopyright (c) 2022 Devon Tuma. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Devon Tuma\n-/\n@[simp]\ntheorem uniform_of_finset_apply (a : α) : uniform_of_finset s hs a = if a ∈ s then s.card⁻¹ else 0 :=\n  rfl\n#align uniform_of_finset_apply uniform_of_finset_apply\n\n",
 "to_outer_measure_uniform_of_fintype_apply":
 "theorem to_outer_measure_uniform_of_fintype_apply :\n    (uniform_of_fintype α).to_outer_measure s = Fintype.card s / Fintype.card α := by simpa [uniform_of_fintype]\n#align to_outer_measure_uniform_of_fintype_apply to_outer_measure_uniform_of_fintype_apply\n\n",
 "to_outer_measure_uniform_of_finset_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ennreal -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem to_outer_measure_uniform_of_finset_apply :\n    (uniform_of_finset s hs).to_outer_measure t = (s.filter (· ∈ t)).card / s.card :=\n  calc\n    (uniform_of_finset s hs).to_outer_measure t =\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (if x ∈ t then uniform_of_finset s hs x else 0) :=\n      toOuterMeasure_apply (uniform_of_finset s hs) t\n    _ =\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          (if x ∈ s ∧ x ∈ t then (s.card : ennreal)⁻¹ else 0) :=\n      (tsum_congr fun x => by simp only [uniform_of_finset_apply, and_comm' (x ∈ s), ite_and, ENNReal.coe_nat])\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter (· ∈ t)) (if x ∈ s ∧ x ∈ t then (s.card : ennreal)⁻¹ else 0) :=\n      (tsum_eq_sum fun x hx => if_neg fun h => hx (Finset.mem_filter.2 h))\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (s.filter (· ∈ t)) (s.card : ennreal)⁻¹ :=\n      (Finset.sum_congr rfl fun x hx => by\n        let this : x ∈ s ∧ x ∈ t := by simpa using hx\n        simp only [this, and_self_iff, if_true])\n    _ = (s.filter (· ∈ t)).card / s.card :=\n      by\n      have : (s.card : ennreal) ≠ 0 := Nat.cast_ne_zero.2 (hs.rec_on fun _ => Finset.card_ne_zero_of_mem)\n      simp only [div_eq_mul_inv, Finset.sum_const, nsmul_eq_mul]\n    \n#align to_outer_measure_uniform_of_finset_apply to_outer_measure_uniform_of_finset_apply\n\n",
 "to_outer_measure_of_multiset_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem to_outer_measure_of_multiset_apply :\n    (of_multiset s hs).to_outer_measure t =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          ((s.filter (· ∈ t)).count x) /\n        s.card :=\n  by\n  rw [div_eq_mul_inv, ← ENNReal.tsum_mul_right, to_outer_measure_apply]\n  refine' tsum_congr fun x => _\n  by_cases hx : x ∈ t <;> simp [Set.indicator, hx, div_eq_mul_inv]\n#align to_outer_measure_of_multiset_apply to_outer_measure_of_multiset_apply\n\n",
 "to_measure_uniform_of_fintype_apply":
 "theorem to_measure_uniform_of_fintype_apply [MeasurableSpace α] (hs : MeasurableSet s) :\n    (uniform_of_fintype α).to_measure s = Fintype.card s / Fintype.card α := by simpa [uniform_of_fintype, hs]\n#align to_measure_uniform_of_fintype_apply to_measure_uniform_of_fintype_apply\n\n",
 "to_measure_uniform_of_finset_apply":
 "@[simp]\ntheorem to_measure_uniform_of_finset_apply [MeasurableSpace α] (ht : MeasurableSet t) :\n    (uniform_of_finset s hs).to_measure t = (s.filter (· ∈ t)).card / s.card :=\n  (toMeasure_apply_eq_toOuterMeasure_apply _ t ht).trans (to_outer_measure_uniform_of_finset_apply hs t)\n#align to_measure_uniform_of_finset_apply to_measure_uniform_of_finset_apply\n\n",
 "to_measure_of_multiset_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem to_measure_of_multiset_apply [MeasurableSpace α] (ht : MeasurableSet t) :\n    (of_multiset s hs).to_measure t =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          ((s.filter (· ∈ t)).count x) /\n        s.card :=\n  (toMeasure_apply_eq_toOuterMeasure_apply _ t ht).trans (to_outer_measure_of_multiset_apply hs t)\n#align to_measure_of_multiset_apply to_measure_of_multiset_apply\n\n",
 "support_uniform_of_fintype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem support_uniform_of_fintype (α : Type _) [Fintype α] [Nonempty α] : (uniform_of_fintype α).support = «expr⊤» :=\n  Set.ext fun x => by simp [mem_support_iff]\n#align support_uniform_of_fintype support_uniform_of_fintype\n\n",
 "support_uniform_of_finset":
 "@[simp]\ntheorem support_uniform_of_finset : (uniform_of_finset s hs).support = s :=\n  Set.ext\n    (by\n      let ⟨a, ha⟩ := hs\n      simp [mem_support_iff, Finset.ne_empty_of_mem ha])\n#align support_uniform_of_finset support_uniform_of_finset\n\n",
 "support_of_multiset":
 "@[simp]\ntheorem support_of_multiset : (of_multiset s hs).support = s.to_finset :=\n  Set.ext (by simp [mem_support_iff, hs])\n#align support_of_multiset support_of_multiset\n\n",
 "of_multiset_apply_of_not_mem":
 "theorem of_multiset_apply_of_not_mem {a : α} (ha : a ∉ s) : of_multiset s hs a = 0 := by\n  simpa only [of_multiset_apply, ENNReal.div_eq_zero_iff, Nat.cast_eq_zero, Multiset.count_eq_zero, ENNReal.nat_ne_top,\n    or_false_iff] using ha\n#align of_multiset_apply_of_not_mem of_multiset_apply_of_not_mem\n\n",
 "of_multiset_apply":
 "@[simp]\ntheorem of_multiset_apply (a : α) : of_multiset s hs a = s.count a / s.card :=\n  rfl\n#align of_multiset_apply of_multiset_apply\n\n",
 "mem_support_uniform_of_fintype":
 "theorem mem_support_uniform_of_fintype (a : α) : a ∈ (uniform_of_fintype α).support := by simp\n#align mem_support_uniform_of_fintype mem_support_uniform_of_fintype\n\n",
 "mem_support_uniform_of_finset_iff":
 "theorem mem_support_uniform_of_finset_iff (a : α) : a ∈ (uniform_of_finset s hs).support ↔ a ∈ s := by simp\n#align mem_support_uniform_of_finset_iff mem_support_uniform_of_finset_iff\n\n",
 "mem_support_of_multiset_iff":
 "theorem mem_support_of_multiset_iff (a : α) : a ∈ (of_multiset s hs).support ↔ a ∈ s.to_finset := by simp\n#align mem_support_of_multiset_iff mem_support_of_multiset_iff\n\n"}