{"to_outer_measure_of_fintype_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem to_outer_measure_of_fintype_apply :\n    (of_fintype f h).to_outer_measure s =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (s.indicator f x) :=\n  to_outer_measure_apply (of_fintype f h) s\n#align to_outer_measure_of_fintype_apply to_outer_measure_of_fintype_apply\n\n",
 "to_outer_measure_of_finset_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem to_outer_measure_of_finset_apply :\n    (of_finset f s h h').to_outer_measure t =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (t.indicator f x) :=\n  to_outer_measure_apply (of_finset f s h h') t\n#align to_outer_measure_of_finset_apply to_outer_measure_of_finset_apply\n\n",
 "to_outer_measure_map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem to_outer_measure_map_apply : (p.map f).to_outer_measure s = p.to_outer_measure («expr ⁻¹' » f s) := by\n  simp [map, set.indicator, to_outer_measure_apply p («expr ⁻¹' » f s)]\n#align to_outer_measure_map_apply to_outer_measure_map_apply\n\n",
 "to_measure_of_fintype_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem to_measure_of_fintype_apply [measurable_space α] (hs : measurable_set s) :\n    (of_fintype f h).to_measure s =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (s.indicator f x) :=\n  (to_measure_apply_eq_to_outer_measure_apply _ s hs).trans (to_outer_measure_of_fintype_apply h s)\n#align to_measure_of_fintype_apply to_measure_of_fintype_apply\n\n",
 "to_measure_of_finset_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem to_measure_of_finset_apply [measurable_space α] (ht : measurable_set t) :\n    (of_finset f s h h').to_measure t =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (t.indicator f x) :=\n  (to_measure_apply_eq_to_outer_measure_apply _ t ht).trans (to_outer_measure_of_finset_apply h h' t)\n#align to_measure_of_finset_apply to_measure_of_finset_apply\n\n",
 "to_measure_map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem to_measure_map_apply [measurable_space α] [measurable_space β] (hf : measurable f) (hs : measurable_set s) :\n    (p.map f).to_measure s = p.to_measure («expr ⁻¹' » f s) :=\n  by\n  rw [to_measure_apply_eq_to_outer_measure_apply _ s hs,\n    to_measure_apply_eq_to_outer_measure_apply _ («expr ⁻¹' » f s) (measurable_set_preimage hf hs)]\n  exact to_outer_measure_map_apply f p s\n#align to_measure_map_apply to_measure_map_apply\n\n",
 "support_seq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem support_seq :\n    (seq q p).support =\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n        («expr '' » f p.support) :=\n  Set.ext fun b => by simp [-mem_support_iff, seq, @eq_comm β b]\n#align support_seq support_seq\n\n",
 "support_of_fintype":
 "@[simp]\ntheorem support_of_fintype : (of_fintype f h).support = function.support f :=\n  rfl\n#align support_of_fintype support_of_fintype\n\n",
 "support_of_finset":
 "@[simp]\ntheorem support_of_finset : (of_finset f s h h').support = s ∩ function.support f :=\n  Set.ext fun a => by simpa [mem_support_iff] using mt (h' a)\n#align support_of_finset support_of_finset\n\n",
 "support_normalize":
 "@[simp]\ntheorem support_normalize : (normalize f hf0 hf).support = function.support f :=\n  Set.ext fun a => by simp [hf, mem_support_iff]\n#align support_normalize support_normalize\n\n",
 "support_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem support_map : (map f p).support = «expr '' » f p.support :=\n  Set.ext fun b => by simp [map, @eq_comm β b]\n#align support_map support_map\n\n",
 "support_filter":
 "@[simp]\ntheorem support_filter : (p.filter s h).support = s ∩ p.support :=\n  Set.ext fun x => mem_support_filter_iff _\n#align support_filter support_filter\n\n",
 "support_bernoulli":
 "@[simp]\ntheorem support_bernoulli : (bernoulli p h).support = { b | cond b (p ≠ 0) (p ≠ 1) } :=\n  by\n  refine' Set.ext fun b => _\n  induction b\n  · simp_rw [mem_support_iff, bernoulli_apply, Bool.cond_false, ne.def, tsub_eq_zero_iff_le, not_le]\n    exact ⟨ne_of_lt, lt_of_le_of_ne h⟩\n  · simp only [mem_support_iff, bernoulli_apply, Bool.cond_true, Set.mem_setOf_eq]\n#align support_bernoulli support_bernoulli\n\n",
 "seq_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem seq_apply :\n    (seq q p) b =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (if b = f a then q f * p a else 0) :=\n  by\n  simp only [seq, mul_boole, bind_apply, pure_apply]\n  refine' tsum_congr fun f => ennreal.tsum_mul_left.symm.trans (tsum_congr fun a => _)\n  simpa only [mul_zero] using mul_ite (b = f a) (q f) (p a) 0\n#align seq_apply seq_apply\n\n",
 "pure_map":
 "theorem pure_map (a : α) : (pure a).map f = pure (f a) := by simp [map]\n#align pure_map pure_map\n\n",
 "of_fintype_apply":
 "@[simp]\ntheorem of_fintype_apply (a : α) : of_fintype f h a = f a :=\n  rfl\n#align of_fintype_apply of_fintype_apply\n\n",
 "of_finset_apply_of_not_mem":
 "theorem of_finset_apply_of_not_mem {a : α} (ha : a ∉ s) : of_finset f s h h' a = 0 :=\n  h' a ha\n#align of_finset_apply_of_not_mem of_finset_apply_of_not_mem\n\n",
 "of_finset_apply":
 "@[simp]\ntheorem of_finset_apply (a : α) : of_finset f s h h' a = f a :=\n  rfl\n#align of_finset_apply of_finset_apply\n\n",
 "normalize_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n#print normalize_apply /-\n@[simp]\ntheorem normalize_apply (a : α) :\n    (normalize f hf0 hf) a =\n      f a *\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\" (f x))⁻¹ :=\n  rfl\n#align normalize_apply normalize_apply\n-/\n\n",
 "monad_seq_eq_seq":
 "theorem monad_seq_eq_seq {α β : Type _} (q : pmf (α → β)) (p : pmf α) : q <*> p = q.seq p :=\n  rfl\n#align monad_seq_eq_seq monad_seq_eq_seq\n\n",
 "monad_map_eq_map":
 "/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Devon Tuma\n-/\ntheorem monad_map_eq_map {α β : Type _} (f : α → β) (p : pmf α) : f <$> p = p.map f :=\n  rfl\n#align monad_map_eq_map monad_map_eq_map\n\n",
 "mem_support_seq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem mem_support_seq_iff : b ∈ (seq q p).support ↔ ∃ f ∈ q.support, b ∈ «expr '' » f p.support := by simp\n#align mem_support_seq_iff mem_support_seq_iff\n\n",
 "mem_support_of_fintype_iff":
 "theorem mem_support_of_fintype_iff (a : α) : a ∈ (of_fintype f h).support ↔ f a ≠ 0 :=\n  iff.rfl\n#align mem_support_of_fintype_iff mem_support_of_fintype_iff\n\n",
 "mem_support_of_finset_iff":
 "theorem mem_support_of_finset_iff (a : α) : a ∈ (of_finset f s h h').support ↔ a ∈ s ∧ f a ≠ 0 := by simp\n#align mem_support_of_finset_iff mem_support_of_finset_iff\n\n",
 "mem_support_normalize_iff":
 "theorem mem_support_normalize_iff (a : α) : a ∈ (normalize f hf0 hf).support ↔ f a ≠ 0 := by simp\n#align mem_support_normalize_iff mem_support_normalize_iff\n\n",
 "mem_support_map_iff":
 "theorem mem_support_map_iff : b ∈ (map f p).support ↔ ∃ a ∈ p.support, f a = b := by simp\n#align mem_support_map_iff mem_support_map_iff\n\n",
 "mem_support_filter_iff":
 "theorem mem_support_filter_iff {a : α} : a ∈ (p.filter s h).support ↔ a ∈ s ∧ a ∈ p.support :=\n  (mem_support_normalize_iff _ _ _).trans set.indicator_apply_ne_zero\n#align mem_support_filter_iff mem_support_filter_iff\n\n",
 "mem_support_bernoulli_iff":
 "theorem mem_support_bernoulli_iff : b ∈ (bernoulli p h).support ↔ cond b (p ≠ 0) (p ≠ 1) := by simp\n#align mem_support_bernoulli_iff mem_support_bernoulli_iff\n\n",
 "map_id":
 "theorem map_id : map id p = p := by simp [map]\n#align map_id map_id\n\n",
 "map_comp":
 "theorem map_comp (g : β → γ) : (p.map f).map g = p.map (g ∘ f) := by simp [map]\n#align map_comp map_comp\n\n",
 "map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem map_apply :\n    (map f p) b =\n      «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n        (if b = f a then p a else 0) :=\n  by simp [map]\n#align map_apply map_apply\n\n",
 "filter_apply_ne_zero_iff":
 "theorem filter_apply_ne_zero_iff (a : α) : (p.filter s h) a ≠ 0 ↔ a ∈ s ∧ a ∈ p.support := by\n  rw [ne.def, filter_apply_eq_zero_iff, not_or, not_not, not_not]\n#align filter_apply_ne_zero_iff filter_apply_ne_zero_iff\n\n",
 "filter_apply_eq_zero_of_not_mem":
 "theorem filter_apply_eq_zero_of_not_mem {a : α} (ha : a ∉ s) : (p.filter s h) a = 0 := by\n  rw [filter_apply, set.indicator_apply_eq_zero.mpr fun ha' => absurd ha' ha, zero_mul]\n#align filter_apply_eq_zero_of_not_mem filter_apply_eq_zero_of_not_mem\n\n",
 "filter_apply_eq_zero_iff":
 "theorem filter_apply_eq_zero_iff (a : α) : (p.filter s h) a = 0 ↔ a ∉ s ∨ a ∉ p.support := by\n  erw [apply_eq_zero_iff, support_filter, Set.mem_inter_iff, not_and_or]\n#align filter_apply_eq_zero_iff filter_apply_eq_zero_iff\n\n",
 "filter_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n@[simp]\ntheorem filter_apply (a : α) :\n    (p.filter s h) a =\n      s.indicator p a *\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n            ((s.indicator p) a'))⁻¹ :=\n  by rw [filter, normalize_apply]\n#align filter_apply filter_apply\n\n",
 "bind_pure_comp":
 "theorem bind_pure_comp : bind p (pure ∘ f) = map f p :=\n  rfl\n#align bind_pure_comp bind_pure_comp\n\n",
 "bernoulli_apply":
 "@[simp]\ntheorem bernoulli_apply : bernoulli p h b = cond b p (1 - p) :=\n  rfl\n#align bernoulli_apply bernoulli_apply\n\n"}