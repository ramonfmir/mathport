{"zero":
 "@[simp]\ntheorem zero : IsSymmetric (0 : MvPolynomial σ R) :=\n  (symmetricSubalgebra σ R).zero_mem\n#align zero zero\n\n",
 "support_esymm''":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem support_esymm'' (n : ℕ) [DecidableEq σ] [Nontrivial R] :\n    (esymm σ R n).support =\n      (powersetLen n (univ : Finset σ)).bUnion fun t =>\n        (Finsupp.single\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t\n              (Finsupp.single i 1))\n            (1 : R)).support :=\n  by\n  rw [esymm_eq_sum_monomial]\n  simp only [← single_eq_monomial]\n  convert Finsupp.support_sum_eq_bunionᵢ (powerset_len n (univ : Finset σ)) _\n  intro s t hst\n  rw [Finset.disjoint_left]\n  simp only [Finsupp.support_single_ne_zero _ one_ne_zero, mem_singleton]\n  rintro a h rfl\n  have := congr_arg Finsupp.support h\n  rw [Finsupp.support_sum_eq_bunionᵢ, Finsupp.support_sum_eq_bunionᵢ] at this\n  · simp only [Finsupp.support_single_ne_zero _ one_ne_zero, bUnion_singleton_eq_self] at this\n    exact absurd this hst.symm\n  all_goals intro x y; simp [Finsupp.support_single_disjoint]\n#align support_esymm'' support_esymm''\n\n",
 "support_esymm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem support_esymm' (n : ℕ) [DecidableEq σ] [Nontrivial R] :\n    (esymm σ R n).support =\n      (powersetLen n (univ : Finset σ)).bUnion fun t =>\n        {finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t\n            (Finsupp.single i 1)} :=\n  by\n  rw [support_esymm'']\n  congr\n  funext\n  exact Finsupp.support_single_ne_zero _ one_ne_zero\n#align support_esymm' support_esymm'\n\n",
 "support_esymm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem support_esymm (n : ℕ) [DecidableEq σ] [Nontrivial R] :\n    (esymm σ R n).support =\n      (powersetLen n (univ : Finset σ)).image fun t =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t\n          (Finsupp.single i 1) :=\n  by\n  rw [support_esymm']\n  exact bUnion_singleton\n#align support_esymm support_esymm\n\n",
 "sub":
 "theorem sub (hφ : IsSymmetric φ) (hψ : IsSymmetric ψ) : IsSymmetric (φ - ψ) :=\n  (symmetricSubalgebra σ R).sub_mem hφ hψ\n#align sub sub\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul (r : R) (hφ : IsSymmetric φ) : IsSymmetric («expr • » r φ) :=\n  (symmetricSubalgebra σ R).smul_mem hφ r\n#align smul smul\n\n",
 "rename_esymm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\ntheorem rename_esymm (n : ℕ) (e : «expr ≃ » σ τ) : rename e (esymm σ R n) = esymm τ R n :=\n  calc\n    rename e (esymm σ R n) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (powersetLen n univ)\n          (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" x\n            (X (e i))) :=\n      by simp_rw [esymm, map_sum, map_prod, rename_X]\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (powersetLen n (univ.map e.to_embedding))\n          (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" t (X i)) :=\n      by simp [Finset.powersetLen_map, -Finset.map_univ_equiv]\n    _ =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (powersetLen n univ)\n          (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" t (X i)) :=\n      by rw [Finset.map_univ_equiv]\n    \n#align rename_esymm rename_esymm\n\n",
 "one":
 "@[simp]\ntheorem one : IsSymmetric (1 : MvPolynomial σ R) :=\n  (symmetricSubalgebra σ R).one_mem\n#align one one\n\n",
 "neg":
 "theorem neg (hφ : IsSymmetric φ) : IsSymmetric (-φ) :=\n  (symmetricSubalgebra σ R).neg_mem hφ\n#align neg neg\n\n",
 "mul":
 "theorem mul (hφ : IsSymmetric φ) (hψ : IsSymmetric ψ) : IsSymmetric (φ * ψ) :=\n  (symmetricSubalgebra σ R).mul_mem hφ hψ\n#align mul mul\n\n",
 "mem_symmetric_subalgebra":
 "@[simp]\ntheorem mem_symmetric_subalgebra [CommSemiring R] (p : MvPolynomial σ R) :\n    p ∈ symmetricSubalgebra σ R ↔ p.is_symmetric :=\n  iff.rfl\n#align mem_symmetric_subalgebra mem_symmetric_subalgebra\n\n",
 "map_esymm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\ntheorem map_esymm (n : ℕ) (f : «expr →+* » R S) : map f (esymm σ R n) = esymm σ S n := by\n  simp_rw [esymm, map_sum, map_prod, map_X]\n#align map_esymm map_esymm\n\n",
 "map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n@[simp]\ntheorem map (hφ : IsSymmetric φ) (f : «expr →+* » R S) : IsSymmetric (map f φ) := fun e => by rw [← map_rename, hφ]\n#align map map\n\n",
 "esymm_zero":
 "@[simp]\ntheorem esymm_zero : esymm σ R 0 = 1 := by simp only [esymm, powerset_len_zero, sum_singleton, prod_empty]\n#align esymm_zero esymm_zero\n\n",
 "esymm_map_val":
 "#print Finset.esymm_map_val /-\n/-\nCopyright (c) 2020 Hanting Zhang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Hanting Zhang, Johan Commelin\n-/\ntheorem Finset.esymm_map_val {σ} (f : σ → R) (s : Finset σ) (n : ℕ) :\n    (s.val.map f).esymm n = (s.powerset_len n).sum fun t => t.prod f := by\n  simpa only [esymm, powerset_len_map, ← Finset.map_val_val_powersetLen, map_map]\n#align finset.esymm_map_val Finset.esymm_map_val\n-/\n\n",
 "esymm_is_symmetric":
 "theorem esymm_is_symmetric (n : ℕ) : IsSymmetric (esymm σ R n) :=\n  by\n  intro\n  rw [rename_esymm]\n#align esymm_is_symmetric esymm_is_symmetric\n\n",
 "esymm_eq_sum_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/-- We can define `esymm σ R n` by summing over a subtype instead of over `powerset_len`. -/\ntheorem esymm_eq_sum_subtype (n : ℕ) :\n    esymm σ R n =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n          (t : Finset σ) (X i)) :=\n  sum_subtype _ (fun _ => mem_powerset_len_univ_iff) _\n#align esymm_eq_sum_subtype esymm_eq_sum_subtype\n\n",
 "esymm_eq_sum_monomial":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- We can define `esymm σ R n` as a sum over explicit monomials -/\ntheorem esymm_eq_sum_monomial (n : ℕ) :\n    esymm σ R n =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (powersetLen n univ)\n        (monomial\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t\n            (Finsupp.single i 1))\n          1) :=\n  by\n  simp_rw [monomial_sum_one]\n  rfl\n#align esymm_eq_sum_monomial esymm_eq_sum_monomial\n\n",
 "esymm_eq_multiset_esymm":
 "/-- The `n`th elementary symmetric `mv_polynomial σ R` is obtained by evaluating the\n`n`th elementary symmetric at the `multiset` of the monomials -/\ntheorem esymm_eq_multiset_esymm : esymm σ R = (Finset.univ.val.map X).esymm :=\n  funext fun n => (Finset.univ.esymm_map_val X n).symm\n#align esymm_eq_multiset_esymm esymm_eq_multiset_esymm\n\n",
 "degrees_esymm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem degrees_esymm [Nontrivial R] (n : ℕ) (hpos : 0 < n) (hn : n ≤ Fintype.card σ) :\n    (esymm σ R n).degrees = (univ : Finset σ).val := by\n  classical\n    have :\n      (Finsupp.toMultiset ∘ fun t : Finset σ =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" t\n            (Finsupp.single i 1)) =\n        finset.val :=\n      by\n      funext\n      simp [Finsupp.toMultiset_sum_single]\n    rw [degrees, support_esymm, sup_image, this, ← comp_sup_eq_sup_comp]\n    · obtain ⟨k, rfl⟩ := nat.exists_eq_succ_of_ne_zero hpos.ne'\n      simpa using powerset_len_sup _ _ (nat.lt_of_succ_le hn)\n    · intros\n      simp only [union_val, sup_eq_union]\n      congr\n    · rfl\n#align degrees_esymm degrees_esymm\n\n",
 "aeval_esymm_eq_multiset_esymm":
 "theorem aeval_esymm_eq_multiset_esymm [Algebra R S] (f : σ → S) (n : ℕ) :\n    aeval f (esymm σ R n) = (Finset.univ.val.map f).esymm n := by\n  simp_rw [esymm, aeval_sum, aeval_prod, aeval_X, esymm_map_val]\n#align aeval_esymm_eq_multiset_esymm aeval_esymm_eq_multiset_esymm\n\n",
 "add":
 "theorem add (hφ : IsSymmetric φ) (hψ : IsSymmetric ψ) : IsSymmetric (φ + ψ) :=\n  (symmetricSubalgebra σ R).add_mem hφ hψ\n#align add add\n\n",
 "C":
 "@[simp]\ntheorem C (r : R) : IsSymmetric (C r : MvPolynomial σ R) :=\n  (symmetricSubalgebra σ R).algebra_map_mem r\n#align C C\n\n"}