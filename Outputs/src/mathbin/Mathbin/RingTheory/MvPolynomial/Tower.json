{"mv_polynomial_aeval_coe":
 "@[simp]\ntheorem mv_polynomial_aeval_coe (S : subalgebra R A) (x : σ → S) (p : mv_polynomial σ R) :\n    aeval (fun i => (x i : A)) p = aeval x p := by convert aeval_algebra_map_apply A x p\n#align mv_polynomial_aeval_coe mv_polynomial_aeval_coe\n\n",
 "aeval_map_algebra_map":
 "/-\nCopyright (c) 2022 Yuyang Zhao. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yuyang Zhao\n-/\ntheorem aeval_map_algebra_map (x : σ → B) (p : mv_polynomial σ R) : aeval x (map (algebra_map R A) p) = aeval x p := by\n  rw [aeval_def, aeval_def, eval₂_map, is_scalar_tower.algebra_map_eq R A B]\n#align aeval_map_algebra_map aeval_map_algebra_map\n\n",
 "aeval_algebra_map_eq_zero_iff_of_injective":
 "theorem aeval_algebra_map_eq_zero_iff_of_injective {x : σ → A} {p : mv_polynomial σ R}\n    (h : function.injective (algebra_map A B)) : aeval (algebra_map A B ∘ x) p = 0 ↔ aeval x p = 0 := by\n  rw [aeval_algebra_map_apply, ← (algebra_map A B).map_zero, h.eq_iff]\n#align aeval_algebra_map_eq_zero_iff_of_injective aeval_algebra_map_eq_zero_iff_of_injective\n\n",
 "aeval_algebra_map_eq_zero_iff":
 "theorem aeval_algebra_map_eq_zero_iff [NoZeroSMulDivisors A B] [nontrivial B] (x : σ → A) (p : mv_polynomial σ R) :\n    aeval (algebra_map A B ∘ x) p = 0 ↔ aeval x p = 0 := by\n  rw [aeval_algebra_map_apply, algebra.algebra_map_eq_smul_one, smul_eq_zero, iff_false_intro (one_ne_zero' B),\n    or_false_iff]\n#align aeval_algebra_map_eq_zero_iff aeval_algebra_map_eq_zero_iff\n\n",
 "aeval_algebra_map_apply":
 "theorem aeval_algebra_map_apply (x : σ → A) (p : mv_polynomial σ R) :\n    aeval (algebra_map A B ∘ x) p = algebra_map A B (mv_polynomial.aeval x p) := by\n  rw [aeval_def, aeval_def, ← coe_eval₂_hom, ← coe_eval₂_hom, map_eval₂_hom, ← is_scalar_tower.algebra_map_eq]\n#align aeval_algebra_map_apply aeval_algebra_map_apply\n\n"}