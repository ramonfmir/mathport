{"map_sin":
 "@[simp]\ntheorem map_sin : map f (sin A) = sin A' := by\n  ext\n  simp [sin, apply_ite f]\n#align map_sin map_sin\n\n",
 "map_inv_units_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\ntheorem map_inv_units_sub (f : «expr →+* » R S) (u : «expr ˣ» R) :\n    map f (inv_units_sub u) = inv_units_sub (Units.map (f : «expr →* » R S) u) :=\n  by\n  ext\n  simp [← map_pow]\n#align map_inv_units_sub map_inv_units_sub\n\n",
 "map_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n@[simp]\ntheorem map_exp : map (f : «expr →+* » A A') (exp A) = exp A' :=\n  by\n  ext\n  simp\n#align map_exp map_exp\n\n",
 "map_cos":
 "@[simp]\ntheorem map_cos : map f (cos A) = cos A' := by\n  ext\n  simp [cos, apply_ite f]\n#align map_cos map_cos\n\n",
 "inv_units_sub_mul_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n@[simp]\ntheorem inv_units_sub_mul_sub (u : «expr ˣ» R) : inv_units_sub u * (C R u - X) = 1 := by simp [mul_sub, sub_sub_cancel]\n#align inv_units_sub_mul_sub inv_units_sub_mul_sub\n\n",
 "inv_units_sub_mul_X":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n@[simp]\ntheorem inv_units_sub_mul_X (u : «expr ˣ» R) : inv_units_sub u * X = inv_units_sub u * C R u - 1 :=\n  by\n  ext (_ | n)\n  · simp\n  · simp [n.succ_ne_zero, pow_succ]\n#align inv_units_sub_mul_X inv_units_sub_mul_X\n\n",
 "exp_pow_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/-- Shows that\n$\\sum_{k = 0}^{n - 1} (e^{X})^k = \\sum_{p = 0}^{\\infty} \\sum_{k = 0}^{n - 1} \\frac{k^p}{p!}X^p$. -/\ntheorem exp_pow_sum [algebra (exprℚ) A] (n : ℕ) :\n    ((Finset.range n).sum fun k => exp A ^ k) =\n      power_series.mk fun p => (Finset.range n).sum fun k => k ^ p * algebra_map (exprℚ) A p.factorial⁻¹ :=\n  by\n  simp only [exp_pow_eq_rescale_exp, rescale]\n  ext\n  simp only [one_div, coeff_mk, coe_mk, coeff_exp, factorial, linear_map.map_sum]\n#align exp_pow_sum exp_pow_sum\n\n",
 "exp_pow_eq_rescale_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/-- Shows that $(e^{X})^k = e^{kX}$. -/\ntheorem exp_pow_eq_rescale_exp [algebra (exprℚ) A] (k : ℕ) : exp A ^ k = rescale (k : A) (exp A) :=\n  by\n  induction' k with k h\n  · simp only [rescale_zero, constant_coeff_exp, Function.comp_apply, map_one, cast_zero, pow_zero, coe_comp]\n  simpa only [succ_eq_add_one, cast_add, ← exp_mul_exp_eq_exp_add (k : A), ← h, cast_one, id_apply, rescale_one] using\n    pow_succ' (exp A) k\n#align exp_pow_eq_rescale_exp exp_pow_eq_rescale_exp\n\n",
 "exp_mul_exp_neg_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/-- Shows that $e^{x} * e^{-x} = 1$ -/\ntheorem exp_mul_exp_neg_eq_one [algebra (exprℚ) A] : exp A * eval_neg_hom (exp A) = 1 := by\n  convert exp_mul_exp_eq_exp_add (1 : A) (-1) <;> simp\n#align exp_mul_exp_neg_eq_one exp_mul_exp_neg_eq_one\n\n",
 "exp_mul_exp_eq_exp_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/-- Shows that $e^{aX} * e^{bX} = e^{(a + b)X}$ -/\ntheorem exp_mul_exp_eq_exp_add [algebra (exprℚ) A] (a b : A) :\n    rescale a (exp A) * rescale b (exp A) = rescale (a + b) (exp A) :=\n  by\n  ext\n  simp only [coeff_mul, exp, rescale, coeff_mk, coe_mk, factorial, nat.sum_antidiagonal_eq_sum_range_succ_mk, add_pow,\n    sum_mul]\n  apply sum_congr rfl\n  rintro x hx\n  suffices\n    a ^ x * b ^ (n - x) * (algebra_map (exprℚ) A (1 / ↑x.factorial) * algebra_map (exprℚ) A (1 / ↑(n - x).factorial)) =\n      a ^ x * b ^ (n - x) * (↑(n.choose x) * (algebra_map (exprℚ) A) (1 / ↑n.factorial))\n    by convert this using 1 <;> ring\n  congr 1\n  rw [← map_nat_cast (algebra_map (exprℚ) A) (n.choose x), ← map_mul, ← map_mul]\n  refine' RingHom.congr_arg _ _\n  rw [mul_one_div ↑(n.choose x) _, one_div_mul_one_div]\n  symm\n  rw [div_eq_iff, div_mul_eq_mul_div, one_mul, choose_eq_factorial_div_factorial]\n  norm_cast\n  rw [cast_div_char_zero]\n  · apply factorial_mul_factorial_dvd_factorial (mem_range_succ_iff.1 hx)\n  · apply mem_range_succ_iff.1 hx\n  · rintro h\n    apply factorial_ne_zero n\n    rw [cast_eq_zero.1 h]\n#align exp_mul_exp_eq_exp_add exp_mul_exp_eq_exp_add\n\n",
 "constant_coeff_inv_units_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n@[simp]\ntheorem constant_coeff_inv_units_sub (u : «expr ˣ» R) : constant_coeff R (inv_units_sub u) = «expr /ₚ » 1 u := by\n  rw [← coeff_zero_eq_constant_coeff_apply, coeff_inv_units_sub, zero_add, pow_one]\n#align constant_coeff_inv_units_sub constant_coeff_inv_units_sub\n\n",
 "constant_coeff_exp":
 "@[simp]\ntheorem constant_coeff_exp : constant_coeff A (exp A) = 1 :=\n  by\n  rw [← coeff_zero_eq_constant_coeff_apply, coeff_exp]\n  simp\n#align constant_coeff_exp constant_coeff_exp\n\n",
 "coeff_sin_bit1":
 "@[simp]\ntheorem coeff_sin_bit1 : coeff A (bit1 n) (sin A) = (-1) ^ n * coeff A (bit1 n) (exp A) := by\n  rw [sin, coeff_mk, if_neg n.not_even_bit1, nat.bit1_div_two, ← mul_one_div, map_mul, map_pow, map_neg, map_one,\n    coeff_exp]\n#align coeff_sin_bit1 coeff_sin_bit1\n\n",
 "coeff_sin_bit0":
 "@[simp]\ntheorem coeff_sin_bit0 : coeff A (bit0 n) (sin A) = 0 := by rw [sin, coeff_mk, if_pos (even_bit0 n)]\n#align coeff_sin_bit0 coeff_sin_bit0\n\n",
 "coeff_inv_units_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr /ₚ » -/\n/-\nCopyright (c) 2020 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov\n-/\n@[simp]\ntheorem coeff_inv_units_sub (u : «expr ˣ» R) (n : ℕ) : coeff R n (inv_units_sub u) = «expr /ₚ » 1 (u ^ (n + 1)) :=\n  coeff_mk _ _\n#align coeff_inv_units_sub coeff_inv_units_sub\n\n",
 "coeff_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n@[simp]\ntheorem coeff_exp : coeff A n (exp A) = algebra_map (exprℚ) A (1 / nat.factorial n) :=\n  coeff_mk _ _\n#align coeff_exp coeff_exp\n\n",
 "coeff_cos_bit1":
 "@[simp]\ntheorem coeff_cos_bit1 : coeff A (bit1 n) (cos A) = 0 := by rw [cos, coeff_mk, if_neg n.not_even_bit1]\n#align coeff_cos_bit1 coeff_cos_bit1\n\n",
 "coeff_cos_bit0":
 "@[simp]\ntheorem coeff_cos_bit0 : coeff A (bit0 n) (cos A) = (-1) ^ n * coeff A (bit0 n) (exp A) := by\n  rw [cos, coeff_mk, if_pos (even_bit0 n), nat.bit0_div_two, ← mul_one_div, map_mul, map_pow, map_neg, map_one,\n    coeff_exp]\n#align coeff_cos_bit0 coeff_cos_bit0\n\n"}