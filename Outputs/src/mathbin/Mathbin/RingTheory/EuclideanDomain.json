{"span_gcd":
 "#print span_gcd /-\ntheorem span_gcd {α} [EuclideanDomain α] (x y : α) : span ({gcd x y} : Set α) = span ({x, y} : Set α) :=\n  letI := EuclideanDomain.gcdMonoid α\n  span_gcd x y\n#align span_gcd span_gcd\n-/\n\n",
 "right_div_gcd_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Tactic/Lean3.lean:132:4: warning: unsupported: rw with cfg: { occs := occurrences.pos[occurrences.pos] «expr[ ,]»([1]) } -/\n#print right_div_gcd_ne_zero /-\ntheorem right_div_gcd_ne_zero {p q : R} (hq : q ≠ 0) : q / gcd_monoid.gcd p q ≠ 0 :=\n  by\n  obtain ⟨r, hr⟩ := gcd_monoid.gcd_dvd_right p q\n  obtain ⟨pq0, r0⟩ : gcd_monoid.gcd p q ≠ 0 ∧ r ≠ 0 := mul_ne_zero_iff.mp (hr ▸ hq)\n  rw [hr, mul_comm, mul_div_cancel _ pq0]\n  exact r0\n#align right_div_gcd_ne_zero right_div_gcd_ne_zero\n-/\n\n",
 "left_div_gcd_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Tactic/Lean3.lean:132:4: warning: unsupported: rw with cfg: { occs := occurrences.pos[occurrences.pos] «expr[ ,]»([1]) } -/\n#print left_div_gcd_ne_zero /-\ntheorem left_div_gcd_ne_zero {p q : R} (hp : p ≠ 0) : p / gcd_monoid.gcd p q ≠ 0 :=\n  by\n  obtain ⟨r, hr⟩ := gcd_monoid.gcd_dvd_left p q\n  obtain ⟨pq0, r0⟩ : gcd_monoid.gcd p q ≠ 0 ∧ r ≠ 0 := mul_ne_zero_iff.mp (hr ▸ hp)\n  rw [hr, mul_comm, mul_div_cancel _ pq0]\n  exact r0\n#align left_div_gcd_ne_zero left_div_gcd_ne_zero\n-/\n\n",
 "isCoprime_of_dvd":
 "#print isCoprime_of_dvd /-\n-- this should be proved for UFDs surely?\ntheorem isCoprime_of_dvd {α} [EuclideanDomain α] {x y : α} (nonzero : ¬(x = 0 ∧ y = 0))\n    (H : ∀ z ∈ nonunits α, z ≠ 0 → z ∣ x → ¬z ∣ y) : IsCoprime x y :=\n  letI := EuclideanDomain.gcdMonoid α\n  isCoprime_of_dvd x y nonzero H\n#align is_coprime_of_dvd isCoprime_of_dvd\n-/\n\n",
 "gcd_ne_zero_of_right":
 "#print gcd_ne_zero_of_right /-\ntheorem gcd_ne_zero_of_right (p q : R) (hp : q ≠ 0) : gcd_monoid.gcd p q ≠ 0 := fun h =>\n  hp <| eq_zero_of_zero_dvd (h ▸ gcd_dvd_right p q)\n#align gcd_ne_zero_of_right gcd_ne_zero_of_right\n-/\n\n",
 "gcd_ne_zero_of_left":
 "#print gcd_ne_zero_of_left /-\n/-\nCopyright (c) 2018 Mario Carneiro. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Mario Carneiro, Chris Hughes\n-/\ntheorem gcd_ne_zero_of_left (p q : R) (hp : p ≠ 0) : gcd_monoid.gcd p q ≠ 0 := fun h =>\n  hp <| eq_zero_of_zero_dvd (h ▸ gcd_dvd_left p q)\n#align gcd_ne_zero_of_left gcd_ne_zero_of_left\n-/\n\n",
 "gcd_isUnit_iff":
 "#print gcd_isUnit_iff /-\ntheorem gcd_isUnit_iff {α} [EuclideanDomain α] {x y : α} : IsUnit (gcd x y) ↔ IsCoprime x y :=\n  letI := EuclideanDomain.gcdMonoid α\n  gcd_isUnit_iff x y\n#align gcd_is_unit_iff gcd_isUnit_iff\n-/\n\n",
 "dvd_or_coprime":
 "#print dvd_or_coprime /-\n-- this should be proved for UFDs surely?\ntheorem dvd_or_coprime {α} [EuclideanDomain α] (x y : α) (h : Irreducible x) : x ∣ y ∨ IsCoprime x y :=\n  letI := EuclideanDomain.gcdMonoid α\n  dvd_or_coprime x y h\n#align dvd_or_coprime dvd_or_coprime\n-/\n\n"}