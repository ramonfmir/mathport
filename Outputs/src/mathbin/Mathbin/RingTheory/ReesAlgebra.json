{"monomial_mem_adjoin_monomial":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n#print monomial_mem_adjoin_monomial /-\ntheorem monomial_mem_adjoin_monomial {I : Ideal R} {n : ℕ} {r : R} (hr : r ∈ I ^ n) :\n    monomial n r ∈\n      Algebra.adjoin R (Submodule.map (monomial 1 : «expr →ₗ[ ] » R R (polynomial R)) I : Set (polynomial R)) :=\n  by\n  induction' n with n hn generalizing r\n  · exact Subalgebra.algebraMap_mem _ _\n  · rw [pow_succ] at hr\n    apply Submodule.smul_induction_on hr\n    · intro r hr s hs\n      rw [Nat.succ_eq_one_add, smul_eq_mul, ← monomial_mul_monomial]\n      exact Subalgebra.mul_mem _ (Algebra.subset_adjoin (Set.mem_image_of_mem _ hr)) (hn hs)\n    · intro x y hx hy\n      rw [monomial_add]\n      exact Subalgebra.add_mem _ hx hy\n#align monomial_mem_adjoin_monomial monomial_mem_adjoin_monomial\n-/\n\n",
 "monomial_mem":
 "#print reesAlgebra.monomial_mem /-\ntheorem reesAlgebra.monomial_mem {I : Ideal R} {i : ℕ} {r : R} : monomial i r ∈ reesAlgebra I ↔ r ∈ I ^ i := by\n  simp (config := { contextual := true }) [mem_reesAlgebra_iff_support, coeff_monomial, ← imp_iff_not_or]\n#align rees_algebra.monomial_mem reesAlgebra.monomial_mem\n-/\n\n",
 "mem_reesAlgebra_iff_support":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n#print mem_reesAlgebra_iff_support /-\ntheorem mem_reesAlgebra_iff_support (f : polynomial R) : f ∈ reesAlgebra I ↔ ∀ i ∈ f.support, f.coeff i ∈ I ^ i :=\n  by\n  apply forall_congr'\n  intro a\n  rw [mem_support_iff, iff.comm, imp_iff_right_iff, ne.def, ← imp_iff_not_or]\n  exact fun e => e.symm ▸ (I ^ a).zero_mem\n#align mem_rees_algebra_iff_support mem_reesAlgebra_iff_support\n-/\n\n",
 "mem_reesAlgebra_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n#print mem_reesAlgebra_iff /-\n/-\nCopyright (c) 2022 Andrew Yang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Andrew Yang\n-/\ntheorem mem_reesAlgebra_iff (f : polynomial R) : f ∈ reesAlgebra I ↔ ∀ i, f.coeff i ∈ I ^ i :=\n  iff.rfl\n#align mem_rees_algebra_iff mem_reesAlgebra_iff\n-/\n\n",
 "fg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n#print reesAlgebra.fg /-\ntheorem reesAlgebra.fg (hI : I.fg) : (reesAlgebra I).fg := by\n  classical\n    obtain ⟨s, hs⟩ := hI\n    rw [← adjoin_monomial_eq_reesAlgebra, ← hs]\n    use s.image (monomial 1)\n    rw [Finset.coe_image]\n    change\n      _ =\n        Algebra.adjoin R\n          (Submodule.map (monomial 1 : «expr →ₗ[ ] » R R (polynomial R)) (Submodule.span R ↑s) : Set (polynomial R))\n    rw [Submodule.map_span, Algebra.adjoin_span]\n#align rees_algebra.fg reesAlgebra.fg\n-/\n\n",
 "adjoin_monomial_eq_reesAlgebra":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n#print adjoin_monomial_eq_reesAlgebra /-\ntheorem adjoin_monomial_eq_reesAlgebra :\n    Algebra.adjoin R (Submodule.map (monomial 1 : «expr →ₗ[ ] » R R (polynomial R)) I : Set (polynomial R)) =\n      reesAlgebra I :=\n  by\n  apply le_antisymm\n  · apply Algebra.adjoin_le _\n    rintro _ ⟨r, hr, rfl⟩\n    exact rees_algebra.monomial_mem.mpr (by rwa [pow_one])\n  · intro p hp\n    rw [p.as_sum_support]\n    apply Subalgebra.sum_mem _ _\n    rintro i -\n    exact monomial_mem_adjoin_monomial (hp i)\n#align adjoin_monomial_eq_rees_algebra adjoin_monomial_eq_reesAlgebra\n-/\n\n"}