{"monomial_mem_adjoin_monomial":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem monomial_mem_adjoin_monomial {I : ideal R} {n : ℕ} {r : R} (hr : r ∈ I ^ n) :\n    monomial n r ∈\n      algebra.adjoin R (submodule.map (monomial 1 : «expr →ₗ[ ] » R R (polynomial R)) I : set (polynomial R)) :=\n  by\n  induction' n with n hn generalizing r\n  · exact subalgebra.algebra_map_mem _ _\n  · rw [pow_succ] at hr\n    apply submodule.smul_induction_on hr\n    · intro r hr s hs\n      rw [Nat.succ_eq_one_add, smul_eq_mul, ← monomial_mul_monomial]\n      exact subalgebra.mul_mem _ (algebra.subset_adjoin (Set.mem_image_of_mem _ hr)) (hn hs)\n    · intro x y hx hy\n      rw [monomial_add]\n      exact subalgebra.add_mem _ hx hy\n#align monomial_mem_adjoin_monomial monomial_mem_adjoin_monomial\n\n",
 "monomial_mem":
 "theorem rees_algebra.monomial_mem {I : ideal R} {i : ℕ} {r : R} : monomial i r ∈ rees_algebra I ↔ r ∈ I ^ i := by\n  simp (config := { contextual := true }) [mem_rees_algebra_iff_support, coeff_monomial, ← imp_iff_not_or]\n#align rees_algebra.monomial_mem rees_algebra.monomial_mem\n\n",
 "mem_rees_algebra_iff_support":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem mem_rees_algebra_iff_support (f : polynomial R) : f ∈ rees_algebra I ↔ ∀ i ∈ f.support, f.coeff i ∈ I ^ i :=\n  by\n  apply forall_congr'\n  intro a\n  rw [mem_support_iff, iff.comm, imp_iff_right_iff, ne.def, ← imp_iff_not_or]\n  exact fun e => e.symm ▸ (I ^ a).zero_mem\n#align mem_rees_algebra_iff_support mem_rees_algebra_iff_support\n\n",
 "mem_rees_algebra_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-\nCopyright (c) 2022 Andrew Yang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Andrew Yang\n-/\ntheorem mem_rees_algebra_iff (f : polynomial R) : f ∈ rees_algebra I ↔ ∀ i, f.coeff i ∈ I ^ i :=\n  iff.rfl\n#align mem_rees_algebra_iff mem_rees_algebra_iff\n\n",
 "fg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem rees_algebra.fg (hI : I.fg) : (rees_algebra I).fg := by\n  classical\n    obtain ⟨s, hs⟩ := hI\n    rw [← adjoin_monomial_eq_rees_algebra, ← hs]\n    use s.image (monomial 1)\n    rw [Finset.coe_image]\n    change\n      _ =\n        algebra.adjoin R\n          (submodule.map (monomial 1 : «expr →ₗ[ ] » R R (polynomial R)) (submodule.span R ↑s) : set (polynomial R))\n    rw [submodule.map_span, algebra.adjoin_span]\n#align rees_algebra.fg rees_algebra.fg\n\n",
 "adjoin_monomial_eq_rees_algebra":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem adjoin_monomial_eq_rees_algebra :\n    algebra.adjoin R (submodule.map (monomial 1 : «expr →ₗ[ ] » R R (polynomial R)) I : set (polynomial R)) =\n      rees_algebra I :=\n  by\n  apply le_antisymm\n  · apply algebra.adjoin_le _\n    rintro _ ⟨r, hr, rfl⟩\n    exact rees_algebra.monomial_mem.mpr (by rwa [pow_one])\n  · intro p hp\n    rw [p.as_sum_support]\n    apply subalgebra.sum_mem _ _\n    rintro i -\n    exact monomial_mem_adjoin_monomial (hp i)\n#align adjoin_monomial_eq_rees_algebra adjoin_monomial_eq_rees_algebra\n\n"}