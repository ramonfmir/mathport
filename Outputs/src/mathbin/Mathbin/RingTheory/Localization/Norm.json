{"norm_localization":
 "/-\nCopyright (c) 2023 Anne Baanen. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Anne Baanen\n-/\n/-- Let `S` be an extension of `R` and `Rₘ Sₘ` be localizations at `M` of `R S` respectively.\nThen the norm of `a : Sₘ` over `Rₘ` is the norm of `a : S` over `R` if `S` is free as `R`-module.\n-/\ntheorem algebra.norm_localization [Module.Free R S] [Module.Finite R S] (a : S) :\n    algebra.norm Rₘ (algebraMap S Sₘ a) = algebraMap R Rₘ (algebra.norm R a) :=\n  by\n  cases subsingleton_or_nontrivial R\n  · haveI : subsingleton Rₘ := Module.subsingleton R Rₘ\n    simp\n  let b := Module.Free.chooseBasis R S\n  letI := Classical.decEq (Module.Free.ChooseBasisIndex R S)\n  rw [algebra.norm_eq_matrix_det (b.localization_localization Rₘ M Sₘ), algebra.norm_eq_matrix_det b, RingHom.map_det]\n  congr\n  ext (i j)\n  simp only [Matrix.map_apply, ring_hom.map_matrix_apply, Algebra.leftMulMatrix_eq_repr_mul,\n    Basis.localizationLocalization_apply, ← _root_.map_mul]\n  apply Basis.localizationLocalization_repr_algebraMap\n#align algebra.norm_localization algebra.norm_localization\n\n"}