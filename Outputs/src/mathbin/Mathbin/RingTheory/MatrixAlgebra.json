{"to_fun_bilinear_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Eric Wieser\n-/\n@[simp]\ntheorem to_fun_bilinear_apply (a : A) (m : Matrix n n R) :\n    to_fun_bilinear R A n a m = «expr • » a (m.map (algebraMap R A)) :=\n  rfl\n#align to_fun_bilinear_apply to_fun_bilinear_apply\n\n",
 "to_fun_alg_hom_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem to_fun_alg_hom_apply (a : A) (m : Matrix n n R) :\n    to_fun_alg_hom R A n («expr ⊗ₜ » a m) = «expr • » a (m.map (algebraMap R A)) := by\n  simp [to_fun_alg_hom, alg_hom_of_linear_map_tensor_product, to_fun_linear]\n#align to_fun_alg_hom_apply to_fun_alg_hom_apply\n\n",
 "right_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\ntheorem right_inv (M : Matrix n n A) : (to_fun_alg_hom R A n) (inv_fun R A n M) = M :=\n  by\n  simp only [inv_fun, AlgHom.map_sum, std_basis_matrix, apply_ite («expr⇑ » (algebraMap R A)), smul_eq_mul, mul_boole,\n    to_fun_alg_hom_apply, RingHom.map_zero, RingHom.map_one, Matrix.map_apply, Pi.smul_def]\n  convert Finset.sum_product; apply matrix_eq_sum_std_basis\n#align right_inv right_inv\n\n",
 "matrix_equiv_tensor_apply_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem matrix_equiv_tensor_apply_symm (a : A) (M : Matrix n n R) :\n    (matrix_equiv_tensor R A n).symm («expr ⊗ₜ » a M) = M.map fun x => a * algebraMap R A x :=\n  by\n  simp [matrix_equiv_tensor, to_fun_alg_hom, alg_hom_of_linear_map_tensor_product, to_fun_linear]\n  rfl\n#align matrix_equiv_tensor_apply_symm matrix_equiv_tensor_apply_symm\n\n",
 "matrix_equiv_tensor_apply_std_basis":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem matrix_equiv_tensor_apply_std_basis (i j : n) (x : A) :\n    matrix_equiv_tensor R A n (stdBasisMatrix i j x) = «expr ⊗ₜ » x (stdBasisMatrix i j 1) :=\n  by\n  have t : ∀ p : n × n, i = p.1 ∧ j = p.2 ↔ p = (i, j) := by tidy\n  simp [ite_tmul, t, std_basis_matrix]\n#align matrix_equiv_tensor_apply_std_basis matrix_equiv_tensor_apply_std_basis\n\n",
 "matrix_equiv_tensor_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem matrix_equiv_tensor_apply (M : Matrix n n A) :\n    matrix_equiv_tensor R A n M =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        («expr ⊗ₜ » (M p.1 p.2) (stdBasisMatrix p.1 p.2 1)) :=\n  rfl\n#align matrix_equiv_tensor_apply matrix_equiv_tensor_apply\n\n",
 "left_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\ntheorem left_inv (M : tensor_product A R (Matrix n n R)) : inv_fun R A n (to_fun_alg_hom R A n M) = M :=\n  by\n  induction' M using TensorProduct.induction_on with a m x y hx hy\n  · simp\n  · simp\n  · simp [AlgHom.map_sum, hx, hy]\n#align left_inv left_inv\n\n",
 "inv_fun_zero":
 "@[simp]\ntheorem inv_fun_zero : inv_fun R A n 0 = 0 := by simp [inv_fun]\n#align inv_fun_zero inv_fun_zero\n\n",
 "inv_fun_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem inv_fun_smul (a : A) (M : Matrix n n A) : inv_fun R A n («expr • » a M) = «expr ⊗ₜ » a 1 * inv_fun R A n M := by\n  simp [inv_fun, Finset.mul_sum]\n#align inv_fun_smul inv_fun_smul\n\n",
 "inv_fun_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem inv_fun_algebra_map (M : Matrix n n R) : inv_fun R A n (M.map (algebraMap R A)) = «expr ⊗ₜ » 1 M :=\n  by\n  dsimp [inv_fun]\n  simp only [Algebra.algebraMap_eq_smul_one, smul_tmul, ← tmul_sum, mul_boole]\n  congr\n  conv_rhs => rw [matrix_eq_sum_std_basis M]\n  convert Finset.sum_product; simp\n#align inv_fun_algebra_map inv_fun_algebra_map\n\n",
 "inv_fun_add":
 "@[simp]\ntheorem inv_fun_add (M N : Matrix n n A) : inv_fun R A n (M + N) = inv_fun R A n M + inv_fun R A n N := by\n  simp [inv_fun, add_tmul, Finset.sum_add_distrib]\n#align inv_fun_add inv_fun_add\n\n"}