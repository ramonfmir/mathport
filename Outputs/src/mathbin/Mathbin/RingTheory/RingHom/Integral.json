{"is_integral_stable_under_composition":
 "/-\nCopyright (c) 2021 Andrew Yang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Andrew Yang\n-/\ntheorem is_integral_stable_under_composition : stable_under_composition fun R S _ _ f => f.is_integral :=\n  by\n  introv R hf hg\n  exact ring_hom.is_integral_trans _ _ hf hg\n#align is_integral_stable_under_composition is_integral_stable_under_composition\n\n",
 "is_integral_stable_under_base_change":
 "theorem is_integral_stable_under_base_change : stable_under_base_change fun R S _ _ f => f.is_integral :=\n  by\n  refine' stable_under_base_change.mk _ is_integral_respects_iso _\n  introv h x\n  skip\n  apply tensor_product.induction_on x\n  · apply is_integral_zero\n  · intro x y\n    exact is_integral.tmul x (h y)\n  · intro x y hx hy\n    exact is_integral_add _ hx hy\n#align is_integral_stable_under_base_change is_integral_stable_under_base_change\n\n",
 "is_integral_respects_iso":
 "theorem is_integral_respects_iso : respects_iso fun R S _ _ f => f.is_integral :=\n  by\n  apply is_integral_stable_under_composition.respects_iso\n  introv x\n  skip\n  rw [← e.apply_symm_apply x]\n  apply ring_hom.is_integral_map\n#align is_integral_respects_iso is_integral_respects_iso\n\n"}