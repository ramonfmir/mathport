{"prod_zero_iff_exists_zero":
 "#print prod_zero_iff_exists_zero /-\ntheorem prod_zero_iff_exists_zero [NoZeroDivisors M₁] [Nontrivial M₁] {s : Multiset M₁} :\n    s.prod = 0 ↔ ∃ (r : M₁)(hr : r ∈ s), r = 0 := by\n  constructor; swap\n  · rintro ⟨r, hrs, rfl⟩\n    exact Multiset.prod_eq_zero hrs\n  refine' Multiset.induction _ (fun a s ih => _) s\n  · intro habs\n    simpa using habs\n  · rw [Multiset.prod_cons]\n    intro hprod\n    replace hprod := eq_zero_or_eq_zero_of_mul_eq_zero hprod\n    cases' hprod with ha\n    · exact ⟨a, Multiset.mem_cons_self a s, ha⟩\n    · apply (ih hprod).imp _\n      rintro b ⟨hb₁, hb₂⟩\n      exact ⟨Multiset.mem_cons_of_mem hb₁, hb₂⟩\n#align prod_zero_iff_exists_zero prod_zero_iff_exists_zero\n-/\n\n",
 "powers_le_nonZeroDivisors_of_noZeroDivisors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print powers_le_nonZeroDivisors_of_noZeroDivisors /-\ntheorem powers_le_nonZeroDivisors_of_noZeroDivisors [NoZeroDivisors M] {a : M} (ha : a ≠ 0) :\n    Submonoid.powers a ≤ non_zero_divisors M :=\n  le_nonZeroDivisors_of_noZeroDivisors fun h => absurd (h.rec_on fun _ hn => pow_eq_zero hn) ha\n#align powers_le_non_zero_divisors_of_no_zero_divisors powers_le_nonZeroDivisors_of_noZeroDivisors\n-/\n\n",
 "nonZeroDivisors_le_comap_nonZeroDivisors_of_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print nonZeroDivisors_le_comap_nonZeroDivisors_of_injective /-\ntheorem nonZeroDivisors_le_comap_nonZeroDivisors_of_injective [NoZeroDivisors M'] [MonoidWithZeroHomClass F M M']\n    (f : F) (hf : function.injective f) : non_zero_divisors M ≤ (non_zero_divisors M').comap f :=\n  Submonoid.le_comap_of_map_le _ (map_le_nonZeroDivisors_of_injective _ hf le_rfl)\n#align non_zero_divisors_le_comap_non_zero_divisors_of_injective nonZeroDivisors_le_comap_nonZeroDivisors_of_injective\n-/\n\n",
 "ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print nonZeroDivisors.ne_zero /-\ntheorem nonZeroDivisors.ne_zero [Nontrivial M] {x} (hx : x ∈ non_zero_divisors M) : x ≠ 0 := fun h =>\n  one_ne_zero (hx _ <| (one_mul _).trans h)\n#align non_zero_divisors.ne_zero nonZeroDivisors.ne_zero\n-/\n\n",
 "mul_right_mem_nonZeroDivisors_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mul_right_mem_nonZeroDivisors_eq_zero_iff /-\ntheorem mul_right_mem_nonZeroDivisors_eq_zero_iff {x r : M} (hr : r ∈ non_zero_divisors M) : x * r = 0 ↔ x = 0 :=\n  ⟨hr _, by simp (config := { contextual := true })⟩\n#align mul_right_mem_non_zero_divisors_eq_zero_iff mul_right_mem_nonZeroDivisors_eq_zero_iff\n-/\n\n",
 "mul_right_coe_nonZeroDivisors_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mul_right_coe_nonZeroDivisors_eq_zero_iff /-\n@[simp]\ntheorem mul_right_coe_nonZeroDivisors_eq_zero_iff {x : M} {c : non_zero_divisors M} : x * c = 0 ↔ x = 0 :=\n  mul_right_mem_nonZeroDivisors_eq_zero_iff c.prop\n#align mul_right_coe_non_zero_divisors_eq_zero_iff mul_right_coe_nonZeroDivisors_eq_zero_iff\n-/\n\n",
 "mul_mem_nonZeroDivisors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mul_mem_nonZeroDivisors /-\ntheorem mul_mem_nonZeroDivisors {a b : M₁} :\n    a * b ∈ non_zero_divisors M₁ ↔ a ∈ non_zero_divisors M₁ ∧ b ∈ non_zero_divisors M₁ :=\n  by\n  constructor\n  · intro h\n    constructor <;> intro x h' <;> apply h\n    · rw [← mul_assoc, h', MulZeroClass.zero_mul]\n    · rw [mul_comm a b, ← mul_assoc, h', MulZeroClass.zero_mul]\n  · rintro ⟨ha, hb⟩ x hx\n    apply ha\n    apply hb\n    rw [mul_assoc, hx]\n#align mul_mem_non_zero_divisors mul_mem_nonZeroDivisors\n-/\n\n",
 "mul_left_mem_nonZeroDivisors_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mul_left_mem_nonZeroDivisors_eq_zero_iff /-\ntheorem mul_left_mem_nonZeroDivisors_eq_zero_iff {r x : M₁} (hr : r ∈ non_zero_divisors M₁) : r * x = 0 ↔ x = 0 := by\n  rw [mul_comm, mul_right_mem_nonZeroDivisors_eq_zero_iff hr]\n#align mul_left_mem_non_zero_divisors_eq_zero_iff mul_left_mem_nonZeroDivisors_eq_zero_iff\n-/\n\n",
 "mul_left_coe_nonZeroDivisors_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mul_left_coe_nonZeroDivisors_eq_zero_iff /-\n@[simp]\ntheorem mul_left_coe_nonZeroDivisors_eq_zero_iff {c : non_zero_divisors M₁} {x : M₁} : (c : M₁) * x = 0 ↔ x = 0 :=\n  mul_left_mem_nonZeroDivisors_eq_zero_iff c.prop\n#align mul_left_coe_non_zero_divisors_eq_zero_iff mul_left_coe_nonZeroDivisors_eq_zero_iff\n-/\n\n",
 "mul_cancel_right_mem_nonZeroDivisors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mul_cancel_right_mem_nonZeroDivisors /-\ntheorem mul_cancel_right_mem_nonZeroDivisors {x y r : R} (hr : r ∈ non_zero_divisors R) : x * r = y * r ↔ x = y :=\n  by\n  refine' ⟨fun h => _, congr_arg _⟩\n  rw [← sub_eq_zero, ← mul_right_mem_nonZeroDivisors_eq_zero_iff hr, sub_mul, h, sub_self]\n#align mul_cancel_right_mem_non_zero_divisor mul_cancel_right_mem_nonZeroDivisors\n-/\n\n",
 "mul_cancel_right_coe_nonZeroDivisors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mul_cancel_right_coe_nonZeroDivisors /-\ntheorem mul_cancel_right_coe_nonZeroDivisors {x y : R} {c : non_zero_divisors R} : x * c = y * c ↔ x = y :=\n  mul_cancel_right_mem_nonZeroDivisors c.prop\n#align mul_cancel_right_coe_non_zero_divisor mul_cancel_right_coe_nonZeroDivisors\n-/\n\n",
 "mul_cancel_left_mem_nonZeroDivisors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mul_cancel_left_mem_nonZeroDivisors /-\n@[simp]\ntheorem mul_cancel_left_mem_nonZeroDivisors {x y r : R'} (hr : r ∈ non_zero_divisors R') : r * x = r * y ↔ x = y := by\n  simp_rw [mul_comm r, mul_cancel_right_mem_nonZeroDivisors hr]\n#align mul_cancel_left_mem_non_zero_divisor mul_cancel_left_mem_nonZeroDivisors\n-/\n\n",
 "mul_cancel_left_coe_nonZeroDivisors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mul_cancel_left_coe_nonZeroDivisors /-\ntheorem mul_cancel_left_coe_nonZeroDivisors {x y : R'} {c : non_zero_divisors R'} : (c : R') * x = c * y ↔ x = y :=\n  mul_cancel_left_mem_nonZeroDivisors c.prop\n#align mul_cancel_left_coe_non_zero_divisor mul_cancel_left_coe_nonZeroDivisors\n-/\n\n",
 "mem_nonZeroDivisors_of_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mem_nonZeroDivisors_of_ne_zero /-\ntheorem mem_nonZeroDivisors_of_ne_zero [NoZeroDivisors M] {x : M} (hx : x ≠ 0) : x ∈ non_zero_divisors M := fun _ =>\n  eq_zero_of_ne_zero_of_mul_right_eq_zero hx\n#align mem_non_zero_divisors_of_ne_zero mem_nonZeroDivisors_of_ne_zero\n-/\n\n",
 "mem_nonZeroDivisors_iff_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mem_nonZeroDivisors_iff_ne_zero /-\ntheorem mem_nonZeroDivisors_iff_ne_zero [NoZeroDivisors M] [Nontrivial M] {x : M} : x ∈ non_zero_divisors M ↔ x ≠ 0 :=\n  ⟨nonZeroDivisors.ne_zero, mem_nonZeroDivisors_of_ne_zero⟩\n#align mem_non_zero_divisors_iff_ne_zero mem_nonZeroDivisors_iff_ne_zero\n-/\n\n",
 "mem_nonZeroDivisors_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print mem_nonZeroDivisors_iff /-\n/-\nCopyright (c) 2020 Kenny Lau. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kenny Lau, Devon Tuma\n-/\ntheorem mem_nonZeroDivisors_iff {r : M} : r ∈ non_zero_divisors M ↔ ∀ x, x * r = 0 → x = 0 :=\n  iff.rfl\n#align mem_non_zero_divisors_iff mem_nonZeroDivisors_iff\n-/\n\n",
 "map_ne_zero_of_mem_nonZeroDivisors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print map_ne_zero_of_mem_nonZeroDivisors /-\ntheorem map_ne_zero_of_mem_nonZeroDivisors [Nontrivial M] [ZeroHomClass F M M'] (g : F)\n    (hg : function.injective (g : M → M')) {x : M} (h : x ∈ non_zero_divisors M) : g x ≠ 0 := fun h0 =>\n  one_ne_zero (h 1 ((one_mul x).symm ▸ hg (trans h0 (map_zero g).symm)))\n#align map_ne_zero_of_mem_non_zero_divisors map_ne_zero_of_mem_nonZeroDivisors\n-/\n\n",
 "map_mem_nonZeroDivisors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print map_mem_nonZeroDivisors /-\ntheorem map_mem_nonZeroDivisors [Nontrivial M] [NoZeroDivisors M'] [ZeroHomClass F M M'] (g : F)\n    (hg : function.injective g) {x : M} (h : x ∈ non_zero_divisors M) : g x ∈ non_zero_divisors M' := fun z hz =>\n  eq_zero_of_ne_zero_of_mul_right_eq_zero (map_ne_zero_of_mem_nonZeroDivisors g hg h) hz\n#align map_mem_non_zero_divisors map_mem_nonZeroDivisors\n-/\n\n",
 "map_le_nonZeroDivisors_of_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print map_le_nonZeroDivisors_of_injective /-\ntheorem map_le_nonZeroDivisors_of_injective [NoZeroDivisors M'] [MonoidWithZeroHomClass F M M'] (f : F)\n    (hf : function.injective f) {S : Submonoid M} (hS : S ≤ non_zero_divisors M) : S.map f ≤ non_zero_divisors M' :=\n  by\n  cases subsingleton_or_nontrivial M\n  · simp [subsingleton.elim S («expr⊥»)]\n  ·\n    exact\n      le_nonZeroDivisors_of_noZeroDivisors fun h =>\n        let ⟨x, hx, hx0⟩ := h\n        zero_ne_one (hS (hf (trans hx0 (map_zero f).symm) ▸ hx : 0 ∈ S) 1 (MulZeroClass.mul_zero 1)).symm\n#align map_le_non_zero_divisors_of_injective map_le_nonZeroDivisors_of_injective\n-/\n\n",
 "le_nonZeroDivisors_of_noZeroDivisors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print le_nonZeroDivisors_of_noZeroDivisors /-\ntheorem le_nonZeroDivisors_of_noZeroDivisors [NoZeroDivisors M] {S : Submonoid M} (hS : (0 : M) ∉ S) :\n    S ≤ non_zero_divisors M := fun x hx y hy =>\n  or.rec_on (eq_zero_or_eq_zero_of_mul_eq_zero hy) (fun h => h) fun h => absurd (h ▸ hx : (0 : M) ∈ S) hS\n#align le_non_zero_divisors_of_no_zero_divisors le_nonZeroDivisors_of_noZeroDivisors\n-/\n\n",
 "isUnit_of_mem_nonZeroDivisors":
 "#print isUnit_of_mem_nonZeroDivisors /-\ntheorem isUnit_of_mem_nonZeroDivisors {G₀ : Type _} [GroupWithZero G₀] {x : G₀} (hx : x ∈ nonZeroDivisors G₀) :\n    IsUnit x :=\n  ⟨⟨x, x⁻¹, mul_inv_cancel (nonZeroDivisors.ne_zero hx), inv_mul_cancel (nonZeroDivisors.ne_zero hx)⟩, rfl⟩\n#align is_unit_of_mem_non_zero_divisors isUnit_of_mem_nonZeroDivisors\n-/\n\n",
 "eq_zero_of_ne_zero_of_mul_right_eq_zero":
 "#print eq_zero_of_ne_zero_of_mul_right_eq_zero /-\ntheorem eq_zero_of_ne_zero_of_mul_right_eq_zero [NoZeroDivisors M] {x y : M} (hnx : x ≠ 0) (hxy : y * x = 0) : y = 0 :=\n  or.resolve_right (eq_zero_or_eq_zero_of_mul_eq_zero hxy) hnx\n#align eq_zero_of_ne_zero_of_mul_right_eq_zero eq_zero_of_ne_zero_of_mul_right_eq_zero\n-/\n\n",
 "eq_zero_of_ne_zero_of_mul_left_eq_zero":
 "#print eq_zero_of_ne_zero_of_mul_left_eq_zero /-\ntheorem eq_zero_of_ne_zero_of_mul_left_eq_zero [NoZeroDivisors M] {x y : M} (hnx : x ≠ 0) (hxy : x * y = 0) : y = 0 :=\n  or.resolve_left (eq_zero_or_eq_zero_of_mul_eq_zero hxy) hnx\n#align eq_zero_of_ne_zero_of_mul_left_eq_zero eq_zero_of_ne_zero_of_mul_left_eq_zero\n-/\n\n",
 "coe_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `non_zero_divisors -/\n#print nonZeroDivisors.coe_ne_zero /-\ntheorem nonZeroDivisors.coe_ne_zero [Nontrivial M] (x : non_zero_divisors M) : (x : M) ≠ 0 :=\n  nonZeroDivisors.ne_zero x.2\n#align non_zero_divisors.coe_ne_zero nonZeroDivisors.coe_ne_zero\n-/\n\n"}