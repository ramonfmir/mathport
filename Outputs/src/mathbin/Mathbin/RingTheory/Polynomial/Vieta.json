{"prod_X_sub_C_eq_sum_esymm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem prod_X_sub_C_eq_sum_esymm (s : Multiset R) :\n    (s.map fun t => X - C t).prod =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (Finset.range (s.card + 1)) ((-1) ^ j * (C (s.esymm j) * X ^ (s.card - j))) :=\n  by\n  conv_lhs =>\n    congr\n    congr\n    ext\n    rw [sub_eq_add_neg]\n    rw [← map_neg C _]\n  convert prod_X_add_C_eq_sum_esymm (map (fun t => -t) s) using 1\n  · rwa [map_map]\n  · simp only [esymm_neg, card_map, mul_assoc, map_mul, map_pow, map_neg, map_one]\n#align prod_X_sub_C_eq_sum_esymm prod_X_sub_C_eq_sum_esymm\n\n",
 "prod_X_sub_C_coeff":
 "theorem prod_X_sub_C_coeff (s : Multiset R) {k : ℕ} (h : k ≤ s.card) :\n    (s.map fun t => X - C t).prod.coeff k = (-1) ^ (s.card - k) * s.esymm (s.card - k) :=\n  by\n  conv_lhs =>\n    congr\n    congr\n    congr\n    ext\n    rw [sub_eq_add_neg]\n    rw [← map_neg C _]\n  convert prod_X_add_C_coeff (map (fun t => -t) s) _ using 1\n  · rwa [map_map]\n  · rwa [esymm_neg, card_map]\n  · rwa [card_map]\n#align prod_X_sub_C_coeff prod_X_sub_C_coeff\n\n",
 "prod_X_add_C_eq_sum_esymm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-\nCopyright (c) 2020 Hanting Zhang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Hanting Zhang\n-/\n/-- A sum version of Vieta's formula for `multiset`: the product of the linear terms `X + λ` where\n`λ` runs through a multiset `s` is equal to a linear combination of the symmetric functions\n`esymm s` of the `λ`'s .-/\ntheorem prod_X_add_C_eq_sum_esymm (s : Multiset R) :\n    (s.map fun r => X + C r).prod =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (Finset.range (s.card + 1)) (C (s.esymm j) * X ^ (s.card - j)) :=\n  by\n  classical\n    rw [prod_map_add, antidiagonal_eq_map_powerset, map_map, ← bind_powerset_len, function.comp, map_bind, sum_bind,\n      finset.sum_eq_multiset_sum, Finset.range_val, map_congr (eq.refl _)]\n    intro _ _\n    rw [esymm, ← sum_hom', ← sum_map_mul_right, map_congr (eq.refl _)]\n    intro _ ht\n    rw [mem_powerset_len] at ht\n    simp [ht, map_const, prod_replicate, prod_hom', map_id', card_sub]\n#align prod_X_add_C_eq_sum_esymm prod_X_add_C_eq_sum_esymm\n\n",
 "prod_X_add_C_coeff'":
 "theorem prod_X_add_C_coeff' {σ} (s : Multiset σ) (r : σ → R) {k : ℕ} (h : k ≤ s.card) :\n    (s.map fun i => X + C (r i)).prod.coeff k = (s.map r).esymm (s.card - k) := by\n  rw [← map_map (fun r => X + C r) r, prod_X_add_C_coeff] <;> rwa [s.card_map r]\n#align prod_X_add_C_coeff' prod_X_add_C_coeff'\n\n",
 "prod_X_add_C_coeff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\ntheorem mv_polynomial.prod_X_add_C_coeff (k : ℕ) (h : k ≤ card σ) :\n    (finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n            (X + C (mv_polynomial.X i))).coeff\n        k =\n      mv_polynomial.esymm σ R (card σ - k) :=\n  by\n  let s := finset.univ.val.map fun i => (mv_polynomial.X i : mv_polynomial σ R)\n  rw [(_ : card σ = s.card)] at h⊢\n  · rw [mv_polynomial.esymm_eq_multiset_esymm σ R, finset.prod_eq_multiset_prod]\n    convert multiset.prod_X_add_C_coeff s h\n    rwa [Multiset.map_map]\n  repeat' rw [Multiset.card_map]; rfl\n#align mv_polynomial.prod_X_add_C_coeff mv_polynomial.prod_X_add_C_coeff\n\n",
 "prod_C_add_X_eq_sum_esymm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- A sum version of Vieta's formula for `mv_polynomial`: viewing `X i` as variables,\nthe product of linear terms `λ + X i` is equal to a linear combination of\nthe symmetric polynomials `esymm σ R j`. -/\ntheorem mv_polynomial.prod_C_add_X_eq_sum_esymm :\n    finset.prod_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod_univ\"\n        (X + C (mv_polynomial.X i)) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (range (card σ + 1)) (C (mv_polynomial.esymm σ R j) * X ^ (card σ - j)) :=\n  by\n  let s := finset.univ.val.map fun i : σ => mv_polynomial.X i\n  rw [(_ : card σ = s.card)]\n  · simp_rw [mv_polynomial.esymm_eq_multiset_esymm σ R, finset.prod_eq_multiset_prod]\n    convert multiset.prod_X_add_C_eq_sum_esymm s\n    rwa [Multiset.map_map]\n  · rw [Multiset.card_map]\n    rfl\n#align mv_polynomial.prod_C_add_X_eq_sum_esymm mv_polynomial.prod_C_add_X_eq_sum_esymm\n\n",
 "esymm_neg":
 "theorem esymm_neg (s : Multiset R) (k : ℕ) : (map has_neg.neg s).esymm k = (-1) ^ k * esymm s k :=\n  by\n  rw [esymm, esymm, ← Multiset.sum_map_mul_left, Multiset.powersetLen_map, Multiset.map_map, map_congr (eq.refl _)]\n  intro x hx\n  rw [(mem_powerset_len.mp hx).right.symm, ← prod_replicate, ← Multiset.map_const]\n  nth_rw 3 [← map_id' x]\n  rw [← prod_map_mul, map_congr (eq.refl _)]\n  exact fun z _ => neg_one_mul z\n#align esymm_neg esymm_neg\n\n",
 "coeff_eq_esymm_roots_of_splits":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-- Vieta's formula for split polynomials over a field. -/\ntheorem _root_.polynomial.coeff_eq_esymm_roots_of_splits {F} [Field F] {p : polynomial F}\n    (hsplit : p.splits (RingHom.id F)) {k : ℕ} (h : k ≤ p.nat_degree) :\n    p.coeff k = p.leading_coeff * (-1) ^ (p.nat_degree - k) * p.roots.esymm (p.nat_degree - k) :=\n  polynomial.coeff_eq_esymm_roots_of_card (splits_iff_card_roots.1 hsplit) h\n#align polynomial.coeff_eq_esymm_roots_of_splits polynomial.coeff_eq_esymm_roots_of_splits\n\n",
 "coeff_eq_esymm_roots_of_card":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-- Vieta's formula for the coefficients and the roots of a polynomial over an integral domain\n  with as many roots as its degree. -/\ntheorem _root_.polynomial.coeff_eq_esymm_roots_of_card [IsDomain R] {p : polynomial R}\n    (hroots : p.roots.card = p.nat_degree) {k : ℕ} (h : k ≤ p.nat_degree) :\n    p.coeff k = p.leading_coeff * (-1) ^ (p.nat_degree - k) * p.roots.esymm (p.nat_degree - k) :=\n  by\n  conv_lhs => rw [← C_leading_coeff_mul_prod_multiset_X_sub_C hroots]\n  rw [coeff_C_mul, mul_assoc]; congr\n  convert p.roots.prod_X_sub_C_coeff _ using 3 <;> rw [hroots]; exact h\n#align polynomial.coeff_eq_esymm_roots_of_card polynomial.coeff_eq_esymm_roots_of_card\n\n"}