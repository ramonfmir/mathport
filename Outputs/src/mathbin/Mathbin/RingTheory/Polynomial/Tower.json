{"aeval_map_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-\nCopyright (c) 2020 Kenny Lau. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kenny Lau, Yuyang Zhao\n-/\n@[simp]\ntheorem aeval_map_algebra_map (x : B) (p : polynomial R) : aeval x (map (algebra_map R A) p) = aeval x p := by\n  rw [aeval_def, aeval_def, eval₂_map, is_scalar_tower.algebra_map_eq R A B]\n#align aeval_map_algebra_map aeval_map_algebra_map\n\n",
 "aeval_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_coe (S : subalgebra R A) (x : S) (p : polynomial R) : aeval (x : A) p = aeval x p :=\n  aeval_algebra_map_apply A x p\n#align aeval_coe aeval_coe\n\n",
 "aeval_algebra_map_eq_zero_iff_of_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem aeval_algebra_map_eq_zero_iff_of_injective {x : A} {p : polynomial R}\n    (h : function.injective (algebra_map A B)) : aeval (algebra_map A B x) p = 0 ↔ aeval x p = 0 := by\n  rw [aeval_algebra_map_apply, ← (algebra_map A B).map_zero, h.eq_iff]\n#align aeval_algebra_map_eq_zero_iff_of_injective aeval_algebra_map_eq_zero_iff_of_injective\n\n",
 "aeval_algebra_map_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_algebra_map_eq_zero_iff [NoZeroSMulDivisors A B] [nontrivial B] (x : A) (p : polynomial R) :\n    aeval (algebra_map A B x) p = 0 ↔ aeval x p = 0 := by\n  rw [aeval_algebra_map_apply, algebra.algebra_map_eq_smul_one, smul_eq_zero, iff_false_intro (one_ne_zero' B),\n    or_false_iff]\n#align aeval_algebra_map_eq_zero_iff aeval_algebra_map_eq_zero_iff\n\n",
 "aeval_algebra_map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem aeval_algebra_map_apply (x : A) (p : polynomial R) :\n    aeval (algebra_map A B x) p = algebra_map A B (aeval x p) := by\n  rw [aeval_def, aeval_def, hom_eval₂, ← is_scalar_tower.algebra_map_eq]\n#align aeval_algebra_map_apply aeval_algebra_map_apply\n\n"}