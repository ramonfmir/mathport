{"mem_of_integral":
 "/-\nCopyright (c) 2020 Kenny Lau. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kenny Lau\n-/\ntheorem mem_of_integral {x : R} (hx : is_integral O x) : x ∈ v.integer :=\n  let ⟨p, hpm, hpx⟩ := hx\n  le_of_not_lt fun hvx : 1 < v x =>\n    by\n    rw [hpm.as_sum, eval₂_add, eval₂_pow, eval₂_X, eval₂_finset_sum, add_eq_zero_iff_eq_neg] at hpx\n    replace hpx := congr_arg v hpx; refine' ne_of_gt _ hpx\n    rw [v.map_neg, v.map_pow]\n    refine' v.map_sum_lt' (zero_lt_one.trans_le (one_le_pow_of_one_le' hvx.le _)) fun i hi => _\n    rw [eval₂_mul, eval₂_pow, eval₂_C, eval₂_X, v.map_mul, v.map_pow, ← one_mul (v x ^ p.nat_degree)]\n    cases' (hv.2 <| p.coeff i).lt_or_eq with hvpi hvpi\n    · exact mul_lt_mul₀ hvpi (pow_lt_pow₀ hvx <| Finset.mem_range.1 hi)\n    · erw [hvpi]\n      rw [one_mul, one_mul]\n      exact pow_lt_pow₀ hvx (Finset.mem_range.1 hi)\n#align mem_of_integral mem_of_integral\n\n",
 "integrally_closed":
 "theorem integrally_closed : is_integrally_closed O :=\n  (is_integrally_closed.integral_closure_eq_bot_iff K).mp (valuation.integers.integral_closure hv)\n#align integrally_closed integrally_closed\n\n",
 "integral_closure":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\nprotected theorem integral_closure : integral_closure O R = «expr⊥» :=\n  bot_unique fun r hr =>\n    let ⟨x, hx⟩ := hv.3 (hv.mem_of_integral hr)\n    algebra.mem_bot.2 ⟨x, hx⟩\n#align integral_closure integral_closure\n\n"}