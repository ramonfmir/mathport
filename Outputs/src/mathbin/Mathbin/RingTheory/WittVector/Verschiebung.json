{"verschiebung_poly_zero":
 "@[simp]\ntheorem verschiebung_poly_zero : verschiebung_poly 0 = 0 :=\n  rfl\n#align verschiebung_poly_zero verschiebung_poly_zero\n\n",
 "verschiebung_is_poly":
 "/-- `witt_vector.verschiebung` is a polynomial function. -/\n@[is_poly]\ntheorem verschiebung_is_poly : is_poly p fun R _Rcr => @verschiebung p R hp _Rcr :=\n  verschiebung_fun_is_poly p\n#align verschiebung_is_poly verschiebung_is_poly\n\n",
 "verschiebung_fun_is_poly":
 "/-- `witt_vector.verschiebung` has polynomial structure given by `witt_vector.verschiebung_poly`.\n-/\n@[is_poly]\ntheorem verschiebung_fun_is_poly : is_poly p fun R _Rcr => @verschiebung_fun p R _Rcr :=\n  by\n  use verschiebung_poly\n  simp only [aeval_verschiebung_poly', eq_self_iff_true, forall₃_true_iff]\n#align verschiebung_fun_is_poly verschiebung_fun_is_poly\n\n",
 "verschiebung_fun_coeff_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem verschiebung_fun_coeff_zero (x : (expr𝕎) R) : (verschiebung_fun x).coeff 0 = 0 := by\n  rw [verschiebung_fun_coeff, if_pos rfl]\n#align verschiebung_fun_coeff_zero verschiebung_fun_coeff_zero\n\n",
 "verschiebung_fun_coeff_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n@[simp]\ntheorem verschiebung_fun_coeff_succ (x : (expr𝕎) R) (n : ℕ) : (verschiebung_fun x).coeff n.succ = x.coeff n :=\n  rfl\n#align verschiebung_fun_coeff_succ verschiebung_fun_coeff_succ\n\n",
 "verschiebung_fun_coeff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/-\nCopyright (c) 2020 Johan Commelin. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johan Commelin\n-/\n-- type as `\\bbW`\ntheorem verschiebung_fun_coeff (x : (expr𝕎) R) (n : ℕ) :\n    (verschiebung_fun x).coeff n = if n = 0 then 0 else x.coeff (n - 1) := by rw [verschiebung_fun, coeff_mk]\n#align verschiebung_fun_coeff verschiebung_fun_coeff\n\n",
 "verschiebung_coeff_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n@[simp]\ntheorem verschiebung_coeff_zero (x : (expr𝕎) R) : (verschiebung x).coeff 0 = 0 :=\n  rfl\n#align verschiebung_coeff_zero verschiebung_coeff_zero\n\n",
 "verschiebung_coeff_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n@[simp]\ntheorem verschiebung_coeff_succ (x : (expr𝕎) R) (n : ℕ) : (verschiebung x).coeff n.succ = x.coeff n :=\n  rfl\n#align verschiebung_coeff_succ verschiebung_coeff_succ\n\n",
 "verschiebung_coeff_add_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n-- simp_nf complains if this is simp\ntheorem verschiebung_coeff_add_one (x : (expr𝕎) R) (n : ℕ) : (verschiebung x).coeff (n + 1) = x.coeff n :=\n  rfl\n#align verschiebung_coeff_add_one verschiebung_coeff_add_one\n\n",
 "map_verschiebung":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/-- verschiebung is a natural transformation -/\n@[simp]\ntheorem map_verschiebung (f : «expr →+* » R S) (x : (expr𝕎) R) : map f (verschiebung x) = verschiebung (map f x) :=\n  by\n  ext ⟨-, -⟩\n  exact f.map_zero\n  rfl\n#align map_verschiebung map_verschiebung\n\n",
 "ghost_component_zero_verschiebung_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n@[ghost_simps]\ntheorem ghost_component_zero_verschiebung_fun (x : (expr𝕎) R) : ghost_component 0 (verschiebung_fun x) = 0 := by\n  rw [ghost_component_apply, aeval_witt_polynomial, Finset.range_one, Finset.sum_singleton, verschiebung_fun_coeff_zero,\n    pow_zero, pow_zero, pow_one, one_mul]\n#align ghost_component_zero_verschiebung_fun ghost_component_zero_verschiebung_fun\n\n",
 "ghost_component_zero_verschiebung":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n@[ghost_simps]\ntheorem ghost_component_zero_verschiebung (x : (expr𝕎) R) : ghost_component 0 (verschiebung x) = 0 :=\n  ghost_component_zero_verschiebung_fun _\n#align ghost_component_zero_verschiebung ghost_component_zero_verschiebung\n\n",
 "ghost_component_verschiebung_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n@[ghost_simps]\ntheorem ghost_component_verschiebung_fun (x : (expr𝕎) R) (n : ℕ) :\n    ghost_component (n + 1) (verschiebung_fun x) = p * ghost_component n x :=\n  by\n  simp only [ghost_component_apply, aeval_witt_polynomial]\n  rw [Finset.sum_range_succ', verschiebung_fun_coeff, if_pos rfl, zero_pow (pow_pos hp.1.pos _), MulZeroClass.mul_zero,\n    add_zero, Finset.mul_sum, Finset.sum_congr rfl]\n  rintro i -\n  simp only [pow_succ, mul_assoc, verschiebung_fun_coeff, if_neg (nat.succ_ne_zero i), nat.succ_sub_succ, tsub_zero]\n#align ghost_component_verschiebung_fun ghost_component_verschiebung_fun\n\n",
 "ghost_component_verschiebung":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n@[ghost_simps]\ntheorem ghost_component_verschiebung (x : (expr𝕎) R) (n : ℕ) :\n    ghost_component (n + 1) (verschiebung x) = p * ghost_component n x :=\n  ghost_component_verschiebung_fun _ _\n#align ghost_component_verschiebung ghost_component_verschiebung\n\n",
 "bind₁_verschiebung_poly_witt_polynomial":
 "@[simp]\ntheorem bind₁_verschiebung_poly_witt_polynomial (n : ℕ) :\n    bind₁ verschiebung_poly (witt_polynomial p ℤ n) = if n = 0 then 0 else p * witt_polynomial p ℤ (n - 1) :=\n  by\n  apply MvPolynomial.funext\n  intro x\n  split_ifs with hn\n  · simp only [hn, verschiebung_poly_zero, witt_polynomial_zero, bind₁_X_right]\n  · obtain ⟨n, rfl⟩ := nat.exists_eq_succ_of_ne_zero hn\n    rw [nat.succ_eq_add_one, add_tsub_cancel_right, RingHom.map_mul, map_natCast, hom_bind₁]\n    calc\n      _ = ghost_component (n + 1) (verschiebung <| mk p x) := _\n      _ = _ := _\n      \n    · apply eval₂_hom_congr (RingHom.ext_int _ _) _ rfl\n      simp only [← aeval_verschiebung_poly, coeff_mk]\n      funext k\n      exact eval₂_hom_congr (RingHom.ext_int _ _) rfl rfl\n    · rw [ghost_component_verschiebung]\n      rfl\n#align bind₁_verschiebung_poly_witt_polynomial bind₁_verschiebung_poly_witt_polynomial\n\n",
 "aeval_verschiebung_poly'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem aeval_verschiebung_poly' (x : (expr𝕎) R) (n : ℕ) :\n    aeval x.coeff (verschiebung_poly n) = (verschiebung_fun x).coeff n :=\n  by\n  cases n\n  · simp only [verschiebung_poly, verschiebung_fun_coeff_zero, if_pos rfl, AlgHom.map_zero]\n  ·\n    rw [verschiebung_poly, verschiebung_fun_coeff_succ, if_neg n.succ_ne_zero, aeval_X, nat.succ_eq_add_one,\n      add_tsub_cancel_right]\n#align aeval_verschiebung_poly' aeval_verschiebung_poly'\n\n",
 "aeval_verschiebung_poly":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem aeval_verschiebung_poly (x : (expr𝕎) R) (n : ℕ) :\n    aeval x.coeff (verschiebung_poly n) = (verschiebung x).coeff n :=\n  aeval_verschiebung_poly' x n\n#align aeval_verschiebung_poly aeval_verschiebung_poly\n\n"}