{"verschiebung_zmod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/-- Verschiebung is the same as multiplication by `p` on the ring of Witt vectors of `zmod p`. -/\ntheorem verschiebung_zmod (x : (expr𝕎) (ZMod p)) : verschiebung x = x * p := by\n  rw [← frobenius_verschiebung, frobenius_zmodp]\n#align verschiebung_zmod verschiebung_zmod\n\n",
 "verschiebung_mul_frobenius":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/-- The “projection formula” for Frobenius and Verschiebung. -/\ntheorem verschiebung_mul_frobenius (x y : (expr𝕎) R) : verschiebung (x * frobenius y) = verschiebung x * y :=\n  by\n  ghost_calc x y\n  rintro ⟨⟩ <;> ghost_simp [mul_assoc]\n#align verschiebung_mul_frobenius verschiebung_mul_frobenius\n\n",
 "verschiebung_frobenius_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem verschiebung_frobenius_comm [CharP R p] : Function.Commute (verschiebung : (expr𝕎) R → (expr𝕎) R) frobenius :=\n  fun x => by rw [verschiebung_frobenius, frobenius_verschiebung]\n#align verschiebung_frobenius_comm verschiebung_frobenius_comm\n\n",
 "verschiebung_frobenius":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem verschiebung_frobenius [CharP R p] (x : (expr𝕎) R) : verschiebung (frobenius x) = x * p :=\n  by\n  ext ⟨i⟩\n  · rw [mul_char_p_coeff_zero, verschiebung_coeff_zero]\n  · rw [mul_char_p_coeff_succ, verschiebung_coeff_succ, coeff_frobenius_char_p]\n#align verschiebung_frobenius verschiebung_frobenius\n\n",
 "p_nonzero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem fraction_ring.p_nonzero [Nontrivial R] [CharP R p] : (p : FractionRing ((expr𝕎) R)) ≠ 0 := by\n  simpa using (IsFractionRing.injective ((expr𝕎) R) (FractionRing ((expr𝕎) R))).ne (p_nonzero _ _)\n#align fraction_ring.p_nonzero fraction_ring.p_nonzero\n\n",
 "mul_char_p_coeff_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem mul_char_p_coeff_zero [CharP R p] (x : (expr𝕎) R) : (x * p).coeff 0 = 0 :=\n  by\n  rw [← frobenius_verschiebung, coeff_frobenius_char_p, verschiebung_coeff_zero, zero_pow]\n  exact Nat.Prime.pos hp.out\n#align mul_char_p_coeff_zero mul_char_p_coeff_zero\n\n",
 "mul_char_p_coeff_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem mul_char_p_coeff_succ [CharP R p] (x : (expr𝕎) R) (i : ℕ) : (x * p).coeff (i + 1) = x.coeff i ^ p := by\n  rw [← frobenius_verschiebung, coeff_frobenius_char_p, verschiebung_coeff_succ]\n#align mul_char_p_coeff_succ mul_char_p_coeff_succ\n\n",
 "iterate_verschiebung_mul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_verschiebung_mul_left (x y : (expr𝕎) R) (i : ℕ) :\n    («expr ^[ ]» verschiebung i) x * y = («expr ^[ ]» verschiebung i) (x * («expr ^[ ]» frobenius i) y) :=\n  by\n  induction' i with i ih generalizing y\n  · simp\n  · rw [iterate_succ_apply', ← verschiebung_mul_frobenius, ih, iterate_succ_apply']\n    rfl\n#align iterate_verschiebung_mul_left iterate_verschiebung_mul_left\n\n",
 "iterate_verschiebung_mul_coeff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/-- This is a slightly specialized form of [Hazewinkel, *Witt Vectors*][Haze09] 6.2 equation 5. -/\ntheorem iterate_verschiebung_mul_coeff (x y : (expr𝕎) R) (i j : ℕ) :\n    ((«expr ^[ ]» verschiebung i) x * («expr ^[ ]» verschiebung j) y).coeff (i + j) =\n      x.coeff 0 ^ p ^ j * y.coeff 0 ^ p ^ i :=\n  by\n  calc\n    _ =\n        ((«expr ^[ ]» verschiebung (i + j)) ((«expr ^[ ]» frobenius j) x * («expr ^[ ]» frobenius i) y)).coeff\n          (i + j) :=\n      _\n    _ = ((«expr ^[ ]» frobenius j) x * («expr ^[ ]» frobenius i) y).coeff 0 := _\n    _ = ((«expr ^[ ]» frobenius j) x).coeff 0 * ((«expr ^[ ]» frobenius i) y).coeff 0 := _\n    _ = _ := _\n    \n  · rw [iterate_verschiebung_mul]\n  · convert iterate_verschiebung_coeff _ _ _ using 2\n    rw [zero_add]\n  · apply mul_coeff_zero\n  · simp only [iterate_frobenius_coeff]\n#align iterate_verschiebung_mul_coeff iterate_verschiebung_mul_coeff\n\n",
 "iterate_verschiebung_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_verschiebung_mul (x y : (expr𝕎) R) (i j : ℕ) :\n    («expr ^[ ]» verschiebung i) x * («expr ^[ ]» verschiebung j) y =\n      («expr ^[ ]» verschiebung (i + j)) ((«expr ^[ ]» frobenius j) x * («expr ^[ ]» frobenius i) y) :=\n  by\n  calc\n    _ = («expr ^[ ]» verschiebung i) (x * («expr ^[ ]» frobenius i) ((«expr ^[ ]» verschiebung j) y)) := _\n    _ = («expr ^[ ]» verschiebung i) (x * («expr ^[ ]» verschiebung j) ((«expr ^[ ]» frobenius i) y)) := _\n    _ = («expr ^[ ]» verschiebung i) ((«expr ^[ ]» verschiebung j) ((«expr ^[ ]» frobenius i) y) * x) := _\n    _ =\n        («expr ^[ ]» verschiebung i)\n          ((«expr ^[ ]» verschiebung j) ((«expr ^[ ]» frobenius i) y * («expr ^[ ]» frobenius j) x)) :=\n      _\n    _ = («expr ^[ ]» verschiebung (i + j)) ((«expr ^[ ]» frobenius i) y * («expr ^[ ]» frobenius j) x) := _\n    _ = _ := _\n    \n  · apply iterate_verschiebung_mul_left\n  · rw [verschiebung_frobenius_comm.iterate_iterate] <;> infer_instance\n  · rw [mul_comm]\n  · rw [iterate_verschiebung_mul_left]\n  · rw [iterate_add_apply]\n  · rw [mul_comm]\n#align iterate_verschiebung_mul iterate_verschiebung_mul\n\n",
 "iterate_verschiebung_coeff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_verschiebung_coeff (x : (expr𝕎) R) (n k : ℕ) :\n    ((«expr ^[ ]» verschiebung n) x).coeff (k + n) = x.coeff k :=\n  by\n  induction' n with k ih\n  · simp\n  · rw [iterate_succ_apply', nat.add_succ, verschiebung_coeff_succ]\n    exact ih\n#align iterate_verschiebung_coeff iterate_verschiebung_coeff\n\n",
 "iterate_frobenius_coeff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem iterate_frobenius_coeff (x : (expr𝕎) R) (i k : ℕ) : ((«expr ^[ ]» frobenius i) x).coeff k = x.coeff k ^ p ^ i :=\n  by\n  induction' i with i ih\n  · simp\n  · rw [iterate_succ_apply', coeff_frobenius_char_p, ih]\n    ring\n#align iterate_frobenius_coeff iterate_frobenius_coeff\n\n",
 "frobenius_verschiebung":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n/-\nCopyright (c) 2020 Johan Commelin. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johan Commelin\n-/\n-- type as `\\bbW`\n/-- The composition of Frobenius and Verschiebung is multiplication by `p`. -/\ntheorem frobenius_verschiebung (x : (expr𝕎) R) : frobenius (verschiebung x) = x * p :=\n  by\n  ghost_calc x\n  ghost_simp [mul_comm]\n#align frobenius_verschiebung frobenius_verschiebung\n\n",
 "coeff_p_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n@[simp]\ntheorem coeff_p_zero [CharP R p] : (p : (expr𝕎) R).coeff 0 = 0 :=\n  by\n  rw [coeff_p, if_neg]\n  exact zero_ne_one\n#align coeff_p_zero coeff_p_zero\n\n",
 "coeff_p_pow_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem coeff_p_pow_eq_zero [CharP R p] {i j : ℕ} (hj : j ≠ i) : (p ^ i : (expr𝕎) R).coeff j = 0 :=\n  by\n  induction' i with i hi generalizing j\n  · rw [pow_zero, one_coeff_eq_of_pos]\n    exact nat.pos_of_ne_zero hj\n  · rw [pow_succ', ← frobenius_verschiebung, coeff_frobenius_char_p]\n    cases j\n    · rw [verschiebung_coeff_zero, zero_pow]\n      exact Nat.Prime.pos hp.out\n    · rw [verschiebung_coeff_succ, hi, zero_pow]\n      · exact Nat.Prime.pos hp.out\n      · exact ne_of_apply_ne (fun j : ℕ => j.succ) hj\n#align coeff_p_pow_eq_zero coeff_p_pow_eq_zero\n\n",
 "coeff_p_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem coeff_p_pow [CharP R p] (i : ℕ) : (p ^ i : (expr𝕎) R).coeff i = 1 :=\n  by\n  induction' i with i h\n  · simp only [one_coeff_zero, ne.def, pow_zero]\n  · rw [pow_succ', ← frobenius_verschiebung, coeff_frobenius_char_p, verschiebung_coeff_succ, h, one_pow]\n#align coeff_p_pow coeff_p_pow\n\n",
 "coeff_p_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\n@[simp]\ntheorem coeff_p_one [CharP R p] : (p : (expr𝕎) R).coeff 1 = 1 := by rw [coeff_p, if_pos rfl]\n#align coeff_p_one coeff_p_one\n\n",
 "coeff_p":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr𝕎 -/\ntheorem coeff_p [CharP R p] (i : ℕ) : (p : (expr𝕎) R).coeff i = if i = 1 then 1 else 0 :=\n  by\n  split_ifs with hi\n  · simpa only [hi, pow_one] using coeff_p_pow p R 1\n  · simpa only [pow_one] using coeff_p_pow_eq_zero p R hi\n#align coeff_p coeff_p\n\n"}