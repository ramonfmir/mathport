{"zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprK_hat -/\n/-- The tuple `(0)_v` is a finite adèle. -/\ntheorem zero : (0 : (exprK_hat) R K).is_finite_adele :=\n  by\n  rw [is_finite_adele, Filter.eventually_cofinite]\n  have h_empty : { v : height_one_spectrum R | ¬(0 : v.adic_completion K) ∈ v.adic_completion_integers K } = ∅ :=\n    by\n    ext v\n    rw [mem_empty_iff_false, iff_false_iff]\n    intro hv\n    rw [mem_set_of_eq] at hv\n    apply hv\n    rw [mem_adic_completion_integers]\n    have h_zero : (valued.v (0 : v.adic_completion K) : WithZero (Multiplicative ℤ)) = 0 := valued.v.map_zero'\n    rw [h_zero]\n    exact zero_le_one' _\n  simp_rw [Pi.zero_apply, h_empty]\n  exact finite_empty\n#align zero zero\n\n",
 "one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprK_hat -/\n/-- The tuple `(1)_v` is a finite adèle. -/\ntheorem one : (1 : (exprK_hat) R K).is_finite_adele :=\n  by\n  rw [is_finite_adele, Filter.eventually_cofinite]\n  have h_empty : { v : height_one_spectrum R | ¬(1 : v.adic_completion K) ∈ v.adic_completion_integers K } = ∅ :=\n    by\n    ext v\n    rw [mem_empty_iff_false, iff_false_iff]\n    intro hv\n    rw [mem_set_of_eq] at hv\n    apply hv\n    rw [mem_adic_completion_integers]\n    exact le_of_eq valued.v.map_one'\n  simp_rw [Pi.one_apply, h_empty]\n  exact finite_empty\n#align one one\n\n",
 "neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprK_hat -/\n/-- The negative of a finite adèle is a finite adèle. -/\ntheorem neg {x : (exprK_hat) R K} (hx : x.is_finite_adele) : (-x).is_finite_adele :=\n  by\n  rw [is_finite_adele] at hx⊢\n  have h : ∀ v : height_one_spectrum R, -x v ∈ v.adic_completion_integers K ↔ x v ∈ v.adic_completion_integers K :=\n    by\n    intro v\n    rw [mem_adic_completion_integers, mem_adic_completion_integers, Valuation.map_neg]\n  simpa only [Pi.neg_apply, h] using hx\n#align neg neg\n\n",
 "mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprK_hat -/\n/-- The product of two finite adèles is a finite adèle. -/\ntheorem mul {x y : (exprK_hat) R K} (hx : x.is_finite_adele) (hy : y.is_finite_adele) : (x * y).is_finite_adele :=\n  by\n  rw [is_finite_adele, Filter.eventually_cofinite] at hx hy⊢\n  have h_subset :\n    { v : height_one_spectrum R | ¬(x * y) v ∈ v.adic_completion_integers K } ⊆\n      { v : height_one_spectrum R | ¬x v ∈ v.adic_completion_integers K } ∪\n        { v : height_one_spectrum R | ¬y v ∈ v.adic_completion_integers K } :=\n    by\n    intro v hv\n    rw [mem_union, mem_set_of_eq, mem_set_of_eq]\n    rw [mem_set_of_eq] at hv\n    contrapose! hv\n    rw [mem_adic_completion_integers, mem_adic_completion_integers] at hv\n    have h_mul : valued.v (x v * y v) = valued.v (x v) * valued.v (y v) := valued.v.map_mul' (x v) (y v)\n    rw [mem_adic_completion_integers, Pi.mul_apply, h_mul]\n    exact\n      @mul_le_one' (WithZero (Multiplicative ℤ)) _ _ (OrderedCommMonoid.to_covariantClass_left _) _ _ hv.left hv.right\n  exact (hx.union hy).subset h_subset\n#align mul mul\n\n",
 "mem_finite_adele_ring_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprK_hat -/\n@[simp]\ntheorem mem_finite_adele_ring_iff (x : (exprK_hat) R K) : x ∈ finite_adele_ring R K ↔ x.is_finite_adele :=\n  iff.rfl\n#align mem_finite_adele_ring_iff mem_finite_adele_ring_iff\n\n",
 "coe_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprR_hat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprK_hat -/\n/-\nCopyright (c) 2023 María Inés de Frutos-Fernández. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: María Inés de Frutos-Fernández\n-/\ntheorem coe_apply (x : (exprR_hat) R K) (v : height_one_spectrum R) : (x : (exprK_hat) R K) v = ↑(x v) :=\n  rfl\n#align coe_apply coe_apply\n\n",
 "alg_hom_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprR_hat -/\ntheorem coe.alg_hom_apply (x : (exprR_hat) R K) (v : height_one_spectrum R) : (coe.alg_hom R K) x v = x v :=\n  rfl\n#align coe.alg_hom_apply coe.alg_hom_apply\n\n",
 "add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprK_hat -/\n/-- The sum of two finite adèles is a finite adèle. -/\ntheorem add {x y : (exprK_hat) R K} (hx : x.is_finite_adele) (hy : y.is_finite_adele) : (x + y).is_finite_adele :=\n  by\n  rw [is_finite_adele, Filter.eventually_cofinite] at hx hy⊢\n  have h_subset :\n    { v : height_one_spectrum R | ¬(x + y) v ∈ v.adic_completion_integers K } ⊆\n      { v : height_one_spectrum R | ¬x v ∈ v.adic_completion_integers K } ∪\n        { v : height_one_spectrum R | ¬y v ∈ v.adic_completion_integers K } :=\n    by\n    intro v hv\n    rw [mem_union, mem_set_of_eq, mem_set_of_eq]\n    rw [mem_set_of_eq] at hv\n    contrapose! hv\n    rw [mem_adic_completion_integers, mem_adic_completion_integers, ← max_le_iff] at hv\n    rw [mem_adic_completion_integers, Pi.add_apply]\n    exact le_trans (valued.v.map_add_le_max' (x v) (y v)) hv\n  exact (hx.union hy).subset h_subset\n#align add add\n\n"}