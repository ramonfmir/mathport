{"zero_apply":
 "theorem zero_apply (a : A) : (0 : derivation R A M) a = 0 :=\n  rfl\n#align zero_apply zero_apply\n\n",
 "to_linear_map_eq_coe":
 "@[simp]\ntheorem to_linear_map_eq_coe : D.to_linear_map = D :=\n  rfl\n#align to_linear_map_eq_coe to_linear_map_eq_coe\n\n",
 "to_fun_eq_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/-\nCopyright © 2020 Nicolò Cavalleri. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Nicolò Cavalleri, Andrew Yang\n-/\n-- Not a simp lemma because it can be proved via `coe_fn_coe` + `to_linear_map_eq_coe`\ntheorem to_fun_eq_coe : D.to_fun = «expr⇑ » D :=\n  rfl\n#align to_fun_eq_coe to_fun_eq_coe\n\n",
 "sub_apply":
 "theorem sub_apply : (D1 - D2) a = D1 a - D2 a :=\n  rfl\n#align sub_apply sub_apply\n\n",
 "smul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_apply (r : S) (D : derivation R A M) : («expr • » r D) a = «expr • » r (D a) :=\n  rfl\n#align smul_apply smul_apply\n\n",
 "neg_apply":
 "theorem neg_apply : (-D) a = -D a :=\n  rfl\n#align neg_apply neg_apply\n\n",
 "mk_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem mk_coe (f : «expr →ₗ[ ] » A R M) (h₁ h₂) : ((⟨f, h₁, h₂⟩ : derivation R A M) : A → M) = f :=\n  rfl\n#align mk_coe mk_coe\n\n",
 "map_zero":
 "#print map_zero /-\nprotected theorem map_zero : D 0 = 0 :=\n  map_zero D\n#align map_zero map_zero\n-/\n\n",
 "map_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n#print map_sum /-\ntheorem map_sum {ι : Type _} (s : Finset ι) (f : ι → A) :\n    D (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (D (f i)) :=\n  D.to_linear_map.map_sum\n#align map_sum map_sum\n-/\n\n",
 "map_sub":
 "#print map_sub /-\nprotected theorem map_sub : D (a - b) = D a - D b :=\n  map_sub D a b\n#align map_sub map_sub\n-/\n\n",
 "map_smul_of_tower":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem map_smul_of_tower {S : Type _} [SMul S A] [SMul S M] [LinearMap.CompatibleSMul A M S R] (D : derivation R A M)\n    (r : S) (a : A) : D («expr • » r a) = «expr • » r (D a) :=\n  D.to_linear_map.map_smul_of_tower r a\n#align map_smul_of_tower map_smul_of_tower\n\n",
 "map_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem map_smul : D («expr • » r a) = «expr • » r (D a) :=\n  D.to_linear_map.map_smul r a\n#align map_smul map_smul\n\n",
 "map_one_eq_zero":
 "@[simp]\ntheorem map_one_eq_zero : D 1 = 0 :=\n  D.map_one_eq_zero'\n#align map_one_eq_zero map_one_eq_zero\n\n",
 "map_neg":
 "#print map_neg /-\nprotected theorem map_neg : D (-a) = -D a :=\n  map_neg D a\n#align map_neg map_neg\n-/\n\n",
 "map_coe_nat":
 "@[simp]\ntheorem map_coe_nat (n : ℕ) : D (n : A) = 0 := by rw [← nsmul_one, D.map_smul_of_tower n, map_one_eq_zero, smul_zero]\n#align map_coe_nat map_coe_nat\n\n",
 "map_coe_int":
 "@[simp]\ntheorem map_coe_int (n : ℤ) : D (n : A) = 0 := by rw [← zsmul_one, D.map_smul_of_tower n, map_one_eq_zero, smul_zero]\n#align map_coe_int map_coe_int\n\n",
 "map_algebra_map":
 "@[simp]\ntheorem map_algebra_map : D (algebraMap R A r) = 0 := by\n  rw [← mul_one r, RingHom.map_mul, RingHom.map_one, ← smul_def, map_smul, map_one_eq_zero, smul_zero]\n#align map_algebra_map map_algebra_map\n\n",
 "map_add":
 "#print map_add /-\nprotected theorem map_add : D (a + b) = D a + D b :=\n  map_add D a b\n#align map_add map_add\n-/\n\n",
 "lift_of_derivation_to_square_zero_mk_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n@[simp]\ntheorem lift_of_derivation_to_square_zero_mk_apply (d : derivation R A I) (x : A) :\n    Ideal.Quotient.mk I (lift_of_derivation_to_square_zero I hI d x) = algebraMap A («expr ⧸ » B I) x :=\n  by\n  rw [lift_of_derivation_to_square_zero_apply, map_add, ideal.quotient.eq_zero_iff_mem.mpr (d x).prop, zero_add]\n  rfl\n#align lift_of_derivation_to_square_zero_mk_apply lift_of_derivation_to_square_zero_mk_apply\n\n",
 "leibniz_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem leibniz_pow (n : ℕ) : D (a ^ n) = «expr • » n («expr • » (a ^ (n - 1)) (D a)) :=\n  by\n  induction' n with n ihn\n  · rw [pow_zero, map_one_eq_zero, zero_smul]\n  · rcases(zero_le n).eq_or_lt with (rfl | hpos)\n    · rw [pow_one, one_smul, pow_zero, one_smul]\n    · have : a * a ^ (n - 1) = a ^ n := by rw [← pow_succ, nat.sub_add_cancel hpos]\n      simp only [pow_succ, leibniz, ihn, smul_comm a n, smul_smul a, add_smul, this, nat.succ_eq_add_one,\n        Nat.add_succ_sub_one, add_zero, one_nsmul]\n#align leibniz_pow leibniz_pow\n\n",
 "leibniz_of_mul_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem leibniz_of_mul_eq_one {a b : A} (h : a * b = 1) : D a = «expr • » (-a ^ 2) (D b) :=\n  by\n  rw [neg_smul]\n  refine' eq_neg_of_add_eq_zero_left _\n  calc\n    D a + «expr • » (a ^ 2) (D b) = «expr • » a («expr • » b (D a)) + «expr • » a («expr • » a (D b)) := by\n      simp only [smul_smul, h, one_smul, sq]\n    _ = «expr • » a (D (a * b)) := by rw [leibniz, smul_add, add_comm]\n    _ = 0 := by rw [h, map_one_eq_zero, smul_zero]\n    \n#align leibniz_of_mul_eq_one leibniz_of_mul_eq_one\n\n",
 "leibniz_inv_of":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⅟» -/\ntheorem leibniz_inv_of [Invertible a] : D ((«expr⅟») a) = «expr • » (-(«expr⅟») a ^ 2) (D a) :=\n  D.leibniz_of_mul_eq_one <| invOf_mul_self a\n#align leibniz_inv_of leibniz_inv_of\n\n",
 "leibniz_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem leibniz_inv {K : Type _} [Field K] [Module K M] [Algebra R K] (D : derivation R K M) (a : K) :\n    D a⁻¹ = «expr • » (-a⁻¹ ^ 2) (D a) := by\n  rcases eq_or_ne a 0 with (rfl | ha)\n  · simp\n  · exact D.leibniz_of_mul_eq_one (inv_mul_cancel ha)\n#align leibniz_inv leibniz_inv\n\n",
 "leibniz":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem leibniz : D (a * b) = «expr • » a (D b) + «expr • » b (D a) :=\n  D.leibniz' _ _\n#align leibniz leibniz\n\n",
 "ext_of_adjoin_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- If adjoin of a set is the whole algebra, then any two derivations equal on this set are equal\non the whole algebra. -/\ntheorem ext_of_adjoin_eq_top (s : Set A) (hs : adjoin R s = «expr⊤») (h : Set.EqOn D1 D2 s) : D1 = D2 :=\n  ext fun a => eq_on_adjoin h <| hs.symm ▸ trivial\n#align ext_of_adjoin_eq_top ext_of_adjoin_eq_top\n\n",
 "ext":
 "@[ext]\ntheorem ext (H : ∀ a, D1 a = D2 a) : D1 = D2 :=\n  FunLike.ext _ _ H\n#align ext ext\n\n",
 "eq_on_adjoin":
 "theorem eq_on_adjoin {s : Set A} (h : Set.EqOn D1 D2 s) : Set.EqOn D1 D2 (adjoin R s) := fun x hx =>\n  Algebra.adjoin_induction hx h (fun r => (D1.map_algebra_map r).trans (D2.map_algebra_map r).symm)\n    (fun x y hx hy => by simp only [map_add, *]) fun x y hx hy => by simp only [leibniz, *]\n#align eq_on_adjoin eq_on_adjoin\n\n",
 "diff_to_ideal_of_quotient_comp_eq_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem diff_to_ideal_of_quotient_comp_eq_apply (f₁ f₂ : «expr →ₐ[ ] » A R B)\n    (e : (Ideal.Quotient.mkₐ R I).comp f₁ = (Ideal.Quotient.mkₐ R I).comp f₂) (x : A) :\n    ((diff_to_ideal_of_quotient_comp_eq I f₁ f₂ e) x : B) = f₁ x - f₂ x :=\n  rfl\n#align diff_to_ideal_of_quotient_comp_eq_apply diff_to_ideal_of_quotient_comp_eq_apply\n\n",
 "derivation_to_square_zero_of_lift_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\ntheorem derivation_to_square_zero_of_lift_apply (f : «expr →ₐ[ ] » A R B)\n    (e : (Ideal.Quotient.mkₐ R I).comp f = IsScalarTower.toAlgHom R A («expr ⧸ » B I)) (x : A) :\n    (derivation_to_square_zero_of_lift I hI f e x : B) = f x - algebraMap A B x :=\n  rfl\n#align derivation_to_square_zero_of_lift_apply derivation_to_square_zero_of_lift_apply\n\n",
 "congr_fun":
 "#print congr_fun /-\ntheorem congr_fun (h : D1 = D2) (a : A) : D1 a = D2 a :=\n  FunLike.congr_fun h a\n#align congr_fun congr_fun\n-/\n\n",
 "commutator_coe_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\n@[simp]\ntheorem commutator_coe_linear_map : ↑(«expr⁅ , ⁆» D1 D2) = «expr⁅ , ⁆» (D1 : Module.End R A) (D2 : Module.End R A) :=\n  rfl\n#align commutator_coe_linear_map commutator_coe_linear_map\n\n",
 "commutator_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⁅ , ⁆» -/\ntheorem commutator_apply : («expr⁅ , ⁆» D1 D2) a = D1 (D2 a) - D2 (D1 a) :=\n  rfl\n#align commutator_apply commutator_apply\n\n",
 "coe_zero_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_zero_linear_map : ↑(0 : derivation R A M) = (0 : «expr →ₗ[ ] » A R M) :=\n  rfl\n#align coe_zero_linear_map coe_zero_linear_map\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n-- Data typeclasses\n@[simp]\ntheorem coe_zero : «expr⇑ » (0 : derivation R A M) = 0 :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_to_linear_map_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_to_linear_map_comp :\n    (f.comp_der D : «expr →ₗ[ ] » A R N) = (f : «expr →ₗ[ ] » M R N).comp (D : «expr →ₗ[ ] » A R M) :=\n  rfl\n#align coe_to_linear_map_comp coe_to_linear_map_comp\n\n",
 "coe_sub_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_sub_linear_map (D1 D2 : derivation R A M) : ↑(D1 - D2) = (D1 - D2 : «expr →ₗ[ ] » A R M) :=\n  rfl\n#align coe_sub_linear_map coe_sub_linear_map\n\n",
 "coe_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_sub (D1 D2 : derivation R A M) : «expr⇑ » (D1 - D2) = D1 - D2 :=\n  rfl\n#align coe_sub coe_sub\n\n",
 "coe_smul_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_smul_linear_map (r : S) (D : derivation R A M) : ↑(«expr • » r D) = («expr • » r D : «expr →ₗ[ ] » A R M) :=\n  rfl\n#align coe_smul_linear_map coe_smul_linear_map\n\n",
 "coe_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem coe_smul (r : S) (D : derivation R A M) : «expr⇑ » («expr • » r D) = «expr • » r D :=\n  rfl\n#align coe_smul coe_smul\n\n",
 "coe_neg_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_neg_linear_map (D : derivation R A M) : ↑(-D) = (-D : «expr →ₗ[ ] » A R M) :=\n  rfl\n#align coe_neg_linear_map coe_neg_linear_map\n\n",
 "coe_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_neg (D : derivation R A M) : «expr⇑ » (-D) = -D :=\n  rfl\n#align coe_neg coe_neg\n\n",
 "coe_mk'_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_mk'_linear_map (D : «expr →ₗ[ ] » A R M) (h) : (mk' D h : «expr →ₗ[ ] » A R M) = D :=\n  rfl\n#align coe_mk'_linear_map coe_mk'_linear_map\n\n",
 "coe_mk'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_mk' (D : «expr →ₗ[ ] » A R M) (h) : «expr⇑ » (mk' D h) = D :=\n  rfl\n#align coe_mk' coe_mk'\n\n",
 "coe_injective":
 "theorem coe_injective : @function.injective (derivation R A M) (A → M) coe_fn :=\n  FunLike.coe_injective\n#align coe_injective coe_injective\n\n",
 "coe_fn_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp, norm_cast]\ntheorem coe_fn_coe (f : derivation R A M) : «expr⇑ » (f : «expr →ₗ[ ] » A R M) = f :=\n  rfl\n#align coe_fn_coe coe_fn_coe\n\n",
 "coe_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_comp : (f.comp_der D : A → N) = (f : «expr →ₗ[ ] » M R N).comp (D : «expr →ₗ[ ] » A R M) :=\n  rfl\n#align coe_comp coe_comp\n\n",
 "coe_add_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_add_linear_map (D1 D2 : derivation R A M) : ↑(D1 + D2) = (D1 + D2 : «expr →ₗ[ ] » A R M) :=\n  rfl\n#align coe_add_linear_map coe_add_linear_map\n\n",
 "coe_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_add (D1 D2 : derivation R A M) : «expr⇑ » (D1 + D2) = D1 + D2 :=\n  rfl\n#align coe_add coe_add\n\n",
 "add_apply":
 "theorem add_apply : (D1 + D2) a = D1 a + D2 a :=\n  rfl\n#align add_apply add_apply\n\n"}