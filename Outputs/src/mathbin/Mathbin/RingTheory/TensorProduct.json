{"tmul_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem tmul_pow (a : A) (b : B) (k : ℕ) : «expr ⊗ₜ[ ] » a R b ^ k = «expr ⊗ₜ[ ] » (a ^ k) R (b ^ k) :=\n  by\n  induction' k with k ih\n  · simp [one_def]\n  · simp [pow_succ, ih]\n#align tmul_pow tmul_pow\n\n",
 "tmul_mul_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem tmul_mul_tmul (a₁ a₂ : A) (b₁ b₂ : B) :\n    «expr ⊗ₜ[ ] » a₁ R b₁ * «expr ⊗ₜ[ ] » a₂ R b₂ = «expr ⊗ₜ[ ] » (a₁ * a₂) R (b₁ * b₂) :=\n  rfl\n#align tmul_mul_tmul tmul_mul_tmul\n\n",
 "smul_eq_lsmul_rtensor":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Johan Commelin\n-/\ntheorem smul_eq_lsmul_rtensor (a : A) (x : tensor_product M R N) : «expr • » a x = (lsmul R M a).rtensor N x :=\n  rfl\n#align smul_eq_lsmul_rtensor smul_eq_lsmul_rtensor\n\n",
 "smul_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_def (a : A) (b : B) (m : M) : «expr • » («expr ⊗ₜ[ ] » a R b) m = «expr • » a («expr • » b m) :=\n  rfl\n#align smul_def smul_def\n\n",
 "rid_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem rid_tmul (r : R) (a : A) :\n    (tensor_product.rid R A : tensor_product.infer A R → A) («expr ⊗ₜ » a r) = «expr • » r a := by\n  simp [tensor_product.rid]\n#align rid_tmul rid_tmul\n\n",
 "restrict_scalars_curry":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\ntheorem restrict_scalars_curry (f : «expr →ₗ[ ] » (tensor_product M R N) A P) :\n    restrict_scalars R (curry f) = curry (f.restrict_scalars R) :=\n  rfl\n#align restrict_scalars_curry restrict_scalars_curry\n\n",
 "product_map_right_apply":
 "theorem product_map_right_apply (b : B) : product_map f g (include_right b) = g b := by simp\n#align product_map_right_apply product_map_right_apply\n\n",
 "product_map_right":
 "@[simp]\ntheorem product_map_right : (product_map f g).comp include_right = g :=\n  alg_hom.ext <| by simp\n#align product_map_right product_map_right\n\n",
 "product_map_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem product_map_range : (product_map f g).range = «expr ⊔ » f.range g.range := by\n  rw [product_map, alg_hom.range_comp, map_range, map_sup, ← alg_hom.range_comp, ← alg_hom.range_comp, ←\n    alg_hom.comp_assoc, ← alg_hom.comp_assoc, lmul'_comp_include_left, lmul'_comp_include_right, alg_hom.id_comp,\n    alg_hom.id_comp]\n#align product_map_range product_map_range\n\n",
 "product_map_left_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\ntheorem product_map_left_apply (a : A) :\n    product_map f g ((include_left : «expr →ₐ[ ] » A R (tensor_product.infer A B)) a) = f a := by simp\n#align product_map_left_apply product_map_left_apply\n\n",
 "product_map_left":
 "@[simp]\ntheorem product_map_left : (product_map f g).comp include_left = f :=\n  alg_hom.ext <| by simp\n#align product_map_left product_map_left\n\n",
 "product_map_apply_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem product_map_apply_tmul (a : A) (b : B) : product_map f g («expr ⊗ₜ » a b) = f a * g b :=\n  by\n  unfold product_map lmul'\n  simp\n#align product_map_apply_tmul product_map_apply_tmul\n\n",
 "one_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n#print one_mul /-\ntheorem one_mul (x : tensor_product A R B) : mul («expr ⊗ₜ » 1 1) x = x := by\n  apply tensor_product.induction_on x <;> simp (config := { contextual := true })\n#align one_mul one_mul\n-/\n\n",
 "one_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\ntheorem one_def : (1 : tensor_product A R B) = «expr ⊗ₜ » (1 : A) (1 : B) :=\n  rfl\n#align one_def one_def\n\n",
 "mul_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n#print mul_one /-\ntheorem mul_one (x : tensor_product A R B) : mul x («expr ⊗ₜ » 1 1) = x := by\n  apply tensor_product.induction_on x <;> simp (config := { contextual := true })\n#align mul_one mul_one\n-/\n\n",
 "mul_aux_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem mul_aux_apply (a₁ a₂ : A) (b₁ b₂ : B) :\n    (mul_aux a₁ b₁) («expr ⊗ₜ[ ] » a₂ R b₂) = «expr ⊗ₜ[ ] » (a₁ * a₂) R (b₁ * b₂) :=\n  rfl\n#align mul_aux_apply mul_aux_apply\n\n",
 "mul_assoc'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\ntheorem mul_assoc'\n    (mul : «expr →ₗ[ ] » (tensor_product A R B) R («expr →ₗ[ ] » (tensor_product A R B) R (tensor_product A R B)))\n    (h :\n      ∀ (a₁ a₂ a₃ : A) (b₁ b₂ b₃ : B),\n        mul (mul («expr ⊗ₜ[ ] » a₁ R b₁) («expr ⊗ₜ[ ] » a₂ R b₂)) («expr ⊗ₜ[ ] » a₃ R b₃) =\n          mul («expr ⊗ₜ[ ] » a₁ R b₁) (mul («expr ⊗ₜ[ ] » a₂ R b₂) («expr ⊗ₜ[ ] » a₃ R b₃))) :\n    ∀ x y z : tensor_product A R B, mul (mul x y) z = mul x (mul y z) :=\n  by\n  intros\n  apply tensor_product.induction_on x\n  · simp only [linear_map.map_zero, linear_map.zero_apply]\n  apply tensor_product.induction_on y\n  · simp only [linear_map.map_zero, forall_const, linear_map.zero_apply]\n  apply tensor_product.induction_on z\n  · simp only [linear_map.map_zero, forall_const]\n  · intros\n    simp only [h]\n  · intros\n    simp only [linear_map.map_add, *]\n  · intros\n    simp only [linear_map.map_add, *, linear_map.add_apply]\n  · intros\n    simp only [linear_map.map_add, *, linear_map.add_apply]\n#align mul_assoc' mul_assoc'\n\n",
 "mul_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n#print mul_assoc /-\ntheorem mul_assoc (x y z : tensor_product A R B) : mul (mul x y) z = mul x (mul y z) :=\n  mul_assoc' mul\n    (by\n      intros\n      simp only [mul_apply, mul_assoc])\n    x y z\n#align mul_assoc mul_assoc\n-/\n\n",
 "mul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem mul_apply (a₁ a₂ : A) (b₁ b₂ : B) :\n    mul («expr ⊗ₜ[ ] » a₁ R b₁) («expr ⊗ₜ[ ] » a₂ R b₂) = «expr ⊗ₜ[ ] » (a₁ * a₂) R (b₁ * b₂) :=\n  rfl\n#align mul_apply mul_apply\n\n",
 "module_aux_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem module_aux_apply (a : A) (b : B) (m : M) : module_aux («expr ⊗ₜ[ ] » a R b) m = «expr • » a («expr • » b m) :=\n  rfl\n#align module_aux_apply module_aux_apply\n\n",
 "map_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem map_tmul (f : «expr →ₐ[ ] » A R B) (g : «expr →ₐ[ ] » C R D) (a : A) (c : C) :\n    map f g («expr ⊗ₜ » a c) = «expr ⊗ₜ » (f a) (g c) :=\n  rfl\n#align map_tmul map_tmul\n\n",
 "map_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem map_range (f : «expr →ₐ[ ] » A R B) (g : «expr →ₐ[ ] » C R D) :\n    (map f g).range = «expr ⊔ » (include_left.comp f).range (include_right.comp g).range :=\n  by\n  apply le_antisymm\n  · rw [← map_top, ← adjoin_tmul_eq_top, ← adjoin_image, adjoin_le_iff]\n    rintro _ ⟨_, ⟨a, b, rfl⟩, rfl⟩\n    rw [map_tmul, ← _root_.mul_one (f a), ← _root_.one_mul (g b), ← tmul_mul_tmul]\n    exact mul_mem_sup (alg_hom.mem_range_self _ a) (alg_hom.mem_range_self _ b)\n  · rw [← map_comp_include_left f g, ← map_comp_include_right f g]\n    exact sup_le (alg_hom.range_comp_le_range _ _) (alg_hom.range_comp_le_range _ _)\n#align map_range map_range\n\n",
 "map_comp_include_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem map_comp_include_right (f : «expr →ₐ[ ] » A R B) (g : «expr →ₐ[ ] » C R D) :\n    (map f g).comp include_right = include_right.comp g :=\n  alg_hom.ext <| by simp\n#align map_comp_include_right map_comp_include_right\n\n",
 "map_comp_include_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem map_comp_include_left (f : «expr →ₐ[ ] » A R B) (g : «expr →ₐ[ ] » C R D) :\n    (map f g).comp include_left = include_left.comp f :=\n  alg_hom.ext <| by simp\n#align map_comp_include_left map_comp_include_left\n\n",
 "lmul'_to_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\ntheorem lmul'_to_linear_map : (lmul' R : «expr →ₐ[ ] » _ R S).to_linear_map = linear_map.mul' R S :=\n  rfl\n#align lmul'_to_linear_map lmul'_to_linear_map\n\n",
 "lmul'_comp_include_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem lmul'_comp_include_right : (lmul' R : «expr →ₐ[ ] » _ R S).comp include_right = alg_hom.id R S :=\n  alg_hom.ext <| _root_.one_mul\n#align lmul'_comp_include_right lmul'_comp_include_right\n\n",
 "lmul'_comp_include_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem lmul'_comp_include_left : (lmul' R : «expr →ₐ[ ] » _ R S).comp include_left = alg_hom.id R S :=\n  alg_hom.ext <| _root_.mul_one\n#align lmul'_comp_include_left lmul'_comp_include_left\n\n",
 "lmul'_apply_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem lmul'_apply_tmul (a b : S) : lmul' R («expr ⊗ₜ[ ] » a R b) = a * b :=\n  rfl\n#align lmul'_apply_tmul lmul'_apply_tmul\n\n",
 "lift_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem lift_tmul (f : «expr →ₗ[ ] » M A («expr →ₗ[ ] » N R P)) (x : M) (y : N) : lift f («expr ⊗ₜ » x y) = f x y :=\n  rfl\n#align lift_tmul lift_tmul\n\n",
 "lid_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem lid_tmul (r : R) (a : A) :\n    (tensor_product.lid R A : tensor_product.infer R A → A) («expr ⊗ₜ » r a) = «expr • » r a := by\n  simp [tensor_product.lid]\n#align lid_tmul lid_tmul\n\n",
 "include_right_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem include_right_apply (b : B) : (include_right : «expr →ₐ[ ] » B R (tensor_product A R B)) b = «expr ⊗ₜ » 1 b :=\n  rfl\n#align include_right_apply include_right_apply\n\n",
 "include_left_comp_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\ntheorem include_left_comp_algebra_map {R S T : Type _} [CommRing R] [CommRing S] [CommRing T] [algebra R S]\n    [algebra R T] :\n    (include_left.to_ring_hom.comp (algebra_map R S) : «expr →+* » R (tensor_product S R T)) =\n      include_right.to_ring_hom.comp (algebra_map R T) :=\n  by\n  ext\n  simp\n#align include_left_comp_algebra_map include_left_comp_algebra_map\n\n",
 "include_left_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem include_left_apply (a : A) : (include_left : «expr →ₐ[ ] » A R (tensor_product A R B)) a = «expr ⊗ₜ » a 1 :=\n  rfl\n#align include_left_apply include_left_apply\n\n",
 "finite_dimensional_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem subalgebra.finite_dimensional_sup {K L : Type _} [Field K] [CommRing L] [algebra K L] (E1 E2 : subalgebra K L)\n    [finite_dimensional K E1] [finite_dimensional K E2] : finite_dimensional K («expr↥ » («expr ⊔ » E1 E2)) :=\n  by\n  rw [← E1.range_val, ← E2.range_val, ← algebra.tensor_product.product_map_range]\n  exact (algebra.tensor_product.product_map E1.val E2.val).to_linear_map.finite_dimensional_range\n#align subalgebra.finite_dimensional_sup subalgebra.finite_dimensional_sup\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[ext]\ntheorem ext {g h : «expr →ₐ[ ] » (tensor_product A R B) R C} (H : ∀ a b, g («expr ⊗ₜ » a b) = h («expr ⊗ₜ » a b)) :\n    g = h := by\n  apply @alg_hom.to_linear_map_injective R (tensor_product A R B) C _ _ _ _ _ _ _ _\n  ext\n  simp [H]\n#align ext ext\n\n",
 "curry_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/-- Just as `tensor_product.ext` is marked `ext` instead of `tensor_product.ext'`, this is\na better `ext` lemma than `tensor_product.algebra_tensor_module.ext` below.\n\nSee note [partially-applied ext lemmas]. -/\n@[ext]\ntheorem curry_injective :\n    function.injective\n      (curry : «expr →ₗ[ ] » (tensor_product.infer M N) A P → «expr →ₗ[ ] » M A («expr →ₗ[ ] » N R P)) :=\n  fun x y h =>\n  linear_map.restrict_scalars_injective R <| curry_injective <| (congr_arg (linear_map.restrict_scalars R) h : _)\n#align curry_injective curry_injective\n\n",
 "congr_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem congr_symm_apply (f : «expr ≃ₐ[ ] » A R B) (g : «expr ≃ₐ[ ] » C R D) (x) :\n    (congr f g).symm x = (map (f.symm : «expr →ₐ[ ] » B R A) (g.symm : «expr →ₐ[ ] » D R C)) x :=\n  rfl\n#align congr_symm_apply congr_symm_apply\n\n",
 "congr_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem congr_apply (f : «expr ≃ₐ[ ] » A R B) (g : «expr ≃ₐ[ ] » C R D) (x) :\n    congr f g x = (map (f : «expr →ₐ[ ] » A R B) (g : «expr →ₐ[ ] » C R D)) x :=\n  rfl\n#align congr_apply congr_apply\n\n",
 "comm_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem comm_tmul (a : A) (b : B) :\n    (tensor_product.comm R A B : tensor_product A R B → tensor_product B R A) («expr ⊗ₜ » a b) = «expr ⊗ₜ » b a := by\n  simp [tensor_product.comm]\n#align comm_tmul comm_tmul\n\n",
 "basis_repr_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem basis_repr_tmul (r : R) (m : M) :\n    (basis R b).repr («expr ⊗ₜ » r m) = «expr • » r (finsupp.map_range (algebra_map k R) (map_zero _) (b.repr m)) :=\n  basis_aux_tmul _ _ _\n#align basis_repr_tmul basis_repr_tmul\n\n",
 "basis_repr_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem basis_repr_symm_apply (r : R) (i : ι) :\n    (basis R b).repr.symm (finsupp.single i r) = «expr ⊗ₜ » r (b.repr.symm (finsupp.single i 1)) := by\n  simp [basis, Equiv.uniqueProd_symm_apply, basis_aux]\n#align basis_repr_symm_apply basis_repr_symm_apply\n\n",
 "basis_aux_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem basis_aux_tmul (r : R) (m : M) :\n    basis_aux R b («expr ⊗ₜ » r m) = «expr • » r (finsupp.map_range (algebra_map k R) (map_zero _) (b.repr m)) :=\n  by\n  ext\n  simp [basis_aux, ← algebra.commutes, algebra.smul_def]\n#align basis_aux_tmul basis_aux_tmul\n\n",
 "basis_aux_map_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem basis_aux_map_smul (r : R) (x : tensor_product R k M) :\n    basis_aux R b («expr • » r x) = «expr • » r (basis_aux R b x) :=\n  tensor_product.induction_on x (by simp)\n    (fun x y => by simp only [tensor_product.smul_tmul', basis_aux_tmul, smul_assoc]) fun x y hx hy => by simp [hx, hy]\n#align basis_aux_map_smul basis_aux_map_smul\n\n",
 "base_change_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem base_change_zero : base_change A (0 : «expr →ₗ[ ] » M R N) = 0 :=\n  by\n  ext\n  simp [base_change_eq_ltensor]\n#align base_change_zero base_change_zero\n\n",
 "base_change_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem base_change_tmul (a : A) (x : M) : f.base_change A («expr ⊗ₜ » a x) = «expr ⊗ₜ » a (f x) :=\n  rfl\n#align base_change_tmul base_change_tmul\n\n",
 "base_change_sub":
 "@[simp]\ntheorem base_change_sub : (f - g).base_change A = f.base_change A - g.base_change A :=\n  by\n  ext\n  simp [base_change_eq_ltensor]\n#align base_change_sub base_change_sub\n\n",
 "base_change_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem base_change_smul : («expr • » r f).base_change A = «expr • » r (f.base_change A) :=\n  by\n  ext\n  simp [base_change_tmul]\n#align base_change_smul base_change_smul\n\n",
 "base_change_neg":
 "@[simp]\ntheorem base_change_neg : (-f).base_change A = -f.base_change A :=\n  by\n  ext\n  simp [base_change_eq_ltensor]\n#align base_change_neg base_change_neg\n\n",
 "base_change_eq_ltensor":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\ntheorem base_change_eq_ltensor :\n    (f.base_change A : tensor_product.infer A M → tensor_product.infer A N) = f.ltensor A :=\n  rfl\n#align base_change_eq_ltensor base_change_eq_ltensor\n\n",
 "base_change_add":
 "@[simp]\ntheorem base_change_add : (f + g).base_change A = f.base_change A + g.base_change A :=\n  by\n  ext\n  simp [base_change_eq_ltensor]\n#align base_change_add base_change_add\n\n",
 "assoc_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem assoc_tmul (a : A) (b : B) (c : C) :\n    (tensor_product.assoc R A B C :\n          tensor_product (tensor_product A R B) R C → tensor_product A R (tensor_product B R C))\n        («expr ⊗ₜ » («expr ⊗ₜ » a b) c) =\n      «expr ⊗ₜ » a («expr ⊗ₜ » b c) :=\n  rfl\n#align assoc_tmul assoc_tmul\n\n",
 "assoc_aux_2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\ntheorem assoc_aux_2 (r : R) :\n    (tensor_product.assoc R A B C) («expr ⊗ₜ[ ] » («expr ⊗ₜ[ ] » ((algebra_map R A) r) R 1) R 1) =\n      (algebra_map R (tensor_product.infer A (tensor_product.infer B C))) r :=\n  rfl\n#align assoc_aux_2 assoc_aux_2\n\n",
 "assoc_aux_1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem assoc_aux_1 (a₁ a₂ : A) (b₁ b₂ : B) (c₁ c₂ : C) :\n    (tensor_product.assoc R A B C) («expr ⊗ₜ[ ] » («expr ⊗ₜ[ ] » (a₁ * a₂) R (b₁ * b₂)) R (c₁ * c₂)) =\n      (tensor_product.assoc R A B C) («expr ⊗ₜ[ ] » («expr ⊗ₜ[ ] » a₁ R b₁) R c₁) *\n        (tensor_product.assoc R A B C) («expr ⊗ₜ[ ] » («expr ⊗ₜ[ ] » a₂ R b₂) R c₂) :=\n  rfl\n#align assoc_aux_1 assoc_aux_1\n\n",
 "algebra_map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n-- This is for the `undergrad.yaml` list.\n@[simp]\ntheorem algebra_map_apply (r : S) : (algebra_map S (tensor_product A R B)) r = «expr ⊗ₜ » ((algebra_map S A) r) 1 :=\n  rfl\n#align algebra_map_apply algebra_map_apply\n\n",
 "alg_hom_of_linear_map_tensor_product_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n@[simp]\ntheorem alg_hom_of_linear_map_tensor_product_apply (f w₁ w₂ x) :\n    (alg_hom_of_linear_map_tensor_product f w₁ w₂ : «expr →ₐ[ ] » (tensor_product A R B) R C) x = f x :=\n  rfl\n#align alg_hom_of_linear_map_tensor_product_apply alg_hom_of_linear_map_tensor_product_apply\n\n",
 "alg_equiv_of_linear_equiv_triple_tensor_product_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n@[simp]\ntheorem alg_equiv_of_linear_equiv_triple_tensor_product_apply (f w₁ w₂ x) :\n    (alg_equiv_of_linear_equiv_triple_tensor_product f w₁ w₂ :\n          «expr ≃ₐ[ ] » (tensor_product (tensor_product A R B) R C) R D)\n        x =\n      f x :=\n  rfl\n#align alg_equiv_of_linear_equiv_triple_tensor_product_apply alg_equiv_of_linear_equiv_triple_tensor_product_apply\n\n",
 "alg_equiv_of_linear_equiv_tensor_product_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n@[simp]\ntheorem alg_equiv_of_linear_equiv_tensor_product_apply (f w₁ w₂ x) :\n    (alg_equiv_of_linear_equiv_tensor_product f w₁ w₂ : «expr ≃ₐ[ ] » (tensor_product A R B) R C) x = f x :=\n  rfl\n#align alg_equiv_of_linear_equiv_tensor_product_apply alg_equiv_of_linear_equiv_tensor_product_apply\n\n",
 "adjoin_tmul_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem adjoin_tmul_eq_top : adjoin R { t : tensor_product A R B | ∃ a b, «expr ⊗ₜ[ ] » a R b = t } = «expr⊤» :=\n  top_le_iff.mp <| (top_le_iff.mpr <| span_tmul_eq_top R A B).trans (span_le_adjoin R _)\n#align adjoin_tmul_eq_top adjoin_tmul_eq_top\n\n",
 "End_tensor_End_alg_hom_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem End_tensor_End_alg_hom_apply (f : End R M) (g : End R N) :\n    End_tensor_End_alg_hom («expr ⊗ₜ[ ] » f R g) = tensor_product.map f g := by\n  simp only [End_tensor_End_alg_hom, algebra.tensor_product.alg_hom_of_linear_map_tensor_product_apply,\n    hom_tensor_hom_map_apply]\n#align End_tensor_End_alg_hom_apply End_tensor_End_alg_hom_apply\n\n"}