{"smul_sup_le_of_le_smul_of_le_jacobson_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- *Nakayama's Lemma** - Statement (4) in\n[Stacks 00DV](https://stacks.math.columbia.edu/tag/00DV).\nSee also `smul_sup_eq_smul_sup_of_le_smul_of_le_jacobson` for a generalisation\nto the `jacobson` of any ideal -/\ntheorem smul_sup_le_of_le_smul_of_le_jacobson_bot {I : ideal R} {N N' : submodule R M} (hN' : N'.fg)\n    (hIJ : I ≤ jacobson («expr⊥»)) (hNN : «expr ⊔ » N N' ≤ «expr ⊔ » N («expr • » I N')) : «expr • » I N' ≤ N := by\n  rw [← sup_eq_left, smul_sup_eq_smul_sup_of_le_smul_of_le_jacobson hN' hIJ hNN, bot_smul, sup_bot_eq]\n#align smul_sup_le_of_le_smul_of_le_jacobson_bot smul_sup_le_of_le_smul_of_le_jacobson_bot\n\n",
 "smul_sup_eq_smul_sup_of_le_smul_of_le_jacobson":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- *Nakayama's Lemma** - A slightly more general version of (4) in\n[Stacks 00DV](https://stacks.math.columbia.edu/tag/00DV).\nSee also `smul_sup_eq_of_le_smul_of_le_jacobson_bot` for the special case when `J = ⊥`.  -/\ntheorem smul_sup_eq_smul_sup_of_le_smul_of_le_jacobson {I J : ideal R} {N N' : submodule R M} (hN' : N'.fg)\n    (hIJ : I ≤ jacobson J) (hNN : «expr ⊔ » N N' ≤ «expr ⊔ » N («expr • » I N')) :\n    «expr ⊔ » N («expr • » I N') = «expr ⊔ » N («expr • » J N') :=\n  by\n  have hNN' : «expr ⊔ » N N' = «expr ⊔ » N («expr • » I N') :=\n    le_antisymm hNN (sup_le_sup_left (submodule.smul_le.2 fun _ _ _ => submodule.smul_mem _ _) _)\n  have h_comap := submodule.comap_injective_of_surjective (linear_map.range_eq_top.1 N.range_mkq)\n  have : («expr • » I N').map N.mkq = N'.map N.mkq :=\n    by\n    rw [← h_comap.eq_iff]\n    simpa [comap_map_eq, sup_comm, eq_comm] using hNN'\n  have :=\n    @submodule.eq_smul_of_le_smul_of_le_jacobson _ _ _ _ _ I J (N'.map N.mkq) (hN'.map _)\n      (by rw [← map_smul'', this] <;> exact le_rfl) hIJ\n  rw [← map_smul'', ← h_comap.eq_iff, comap_map_eq, comap_map_eq, submodule.ker_mkq, sup_comm, hNN'] at this\n  rw [this, sup_comm]\n#align smul_sup_eq_smul_sup_of_le_smul_of_le_jacobson smul_sup_eq_smul_sup_of_le_smul_of_le_jacobson\n\n",
 "eq_smul_of_le_smul_of_le_jacobson":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-\nCopyright (c) 2021 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes\n-/\n/-- *Nakayama's Lemma** - A slightly more general version of (2) in\n[Stacks 00DV](https://stacks.math.columbia.edu/tag/00DV).\nSee also `eq_bot_of_le_smul_of_le_jacobson_bot` for the special case when `J = ⊥`.  -/\ntheorem eq_smul_of_le_smul_of_le_jacobson {I J : ideal R} {N : submodule R M} (hN : N.fg) (hIN : N ≤ «expr • » I N)\n    (hIjac : I ≤ jacobson J) : N = «expr • » J N :=\n  by\n  refine' le_antisymm _ (submodule.smul_le.2 fun _ _ _ => submodule.smul_mem _ _)\n  intro n hn\n  cases' submodule.exists_sub_one_mem_and_smul_eq_zero_of_fg_of_le_smul I N hN hIN with r hr\n  cases' exists_mul_sub_mem_of_sub_one_mem_jacobson r (hIjac hr.1) with s hs\n  have : n = «expr • » (-(s * r - 1)) n := by rw [neg_sub, sub_smul, mul_smul, hr.2 n hn, one_smul, smul_zero, sub_zero]\n  rw [this]\n  exact submodule.smul_mem_smul (submodule.neg_mem _ hs) hn\n#align eq_smul_of_le_smul_of_le_jacobson eq_smul_of_le_smul_of_le_jacobson\n\n",
 "eq_bot_of_le_smul_of_le_jacobson_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/-- *Nakayama's Lemma** - Statement (2) in\n[Stacks 00DV](https://stacks.math.columbia.edu/tag/00DV).\nSee also `eq_smul_of_le_smul_of_le_jacobson` for a generalisation\nto the `jacobson` of any ideal -/\ntheorem eq_bot_of_le_smul_of_le_jacobson_bot (I : ideal R) (N : submodule R M) (hN : N.fg) (hIN : N ≤ «expr • » I N)\n    (hIjac : I ≤ jacobson («expr⊥»)) : N = «expr⊥» := by\n  rw [eq_smul_of_le_smul_of_le_jacobson hN hIN hIjac, submodule.bot_smul]\n#align eq_bot_of_le_smul_of_le_jacobson_bot eq_bot_of_le_smul_of_le_jacobson_bot\n\n"}