{"subset_of_mem":
 "theorem is_transitive.subset_of_mem (h : x.is_transitive) : y ∈ x → y ⊆ x :=\n  h y\n#align is_transitive.subset_of_mem is_transitive.subset_of_mem\n\n",
 "sUnion'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `Class.sUnion -/\ntheorem is_transitive.sUnion' (H : ∀ y ∈ x, is_transitive y) : (Class.sUnion x).is_transitive := fun y hy z hz =>\n  by\n  rcases mem_sUnion.1 hy with ⟨w, hw, hw'⟩\n  exact mem_sUnion_of_mem ((H w hw).mem_trans hz hw') hw\n#align is_transitive.sUnion' is_transitive.sUnion'\n\n",
 "sUnion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `Class.sUnion -/\nprotected theorem is_transitive.sUnion (h : x.is_transitive) : (Class.sUnion x).is_transitive := fun y hy z hz =>\n  by\n  rcases mem_sUnion.1 hy with ⟨w, hw, hw'⟩\n  exact mem_sUnion_of_mem hz (h.mem_trans hw' hw)\n#align is_transitive.sUnion is_transitive.sUnion\n\n",
 "is_transitive_iff_subset_powerset":
 "theorem is_transitive_iff_subset_powerset : x.is_transitive ↔ x ⊆ powerset x :=\n  ⟨fun h y hy => mem_powerset.2 <| h.subset_of_mem hy, fun H y hy z hz => mem_powerset.1 (H hy) hz⟩\n#align is_transitive_iff_subset_powerset is_transitive_iff_subset_powerset\n\n",
 "is_transitive_iff_sUnion_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `Class.sUnion -/\ntheorem is_transitive_iff_sUnion_subset : x.is_transitive ↔ Class.sUnion x ⊆ x :=\n  ⟨fun h y hy => by\n    rcases mem_sUnion.1 hy with ⟨z, hz, hz'⟩\n    exact h.mem_trans hz' hz, fun H y hy z hz => H <| mem_sUnion_of_mem hz hy⟩\n#align is_transitive_iff_sUnion_subset is_transitive_iff_sUnion_subset\n\n",
 "is_transitive_iff_mem_trans":
 "theorem is_transitive_iff_mem_trans : z.is_transitive ↔ ∀ {x y : Set}, x ∈ y → y ∈ z → x ∈ z :=\n  ⟨fun h x y hx hy => h.subset_of_mem hy hx, fun H x hx y hy => H hy hx⟩\n#align is_transitive_iff_mem_trans is_transitive_iff_mem_trans\n\n",
 "inter":
 "protected theorem is_transitive.inter (hx : x.is_transitive) (hy : y.is_transitive) : (x ∩ y).is_transitive :=\n  fun z hz w hw => by\n  rw [mem_inter] at hz⊢\n  exact ⟨hx.mem_trans hw hz.1, hy.mem_trans hw hz.2⟩\n#align is_transitive.inter is_transitive.inter\n\n",
 "empty_is_transitive":
 "/-\nCopyright (c) 2022 Violeta Hernández Palacios. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Violeta Hernández Palacios\n-/\n@[simp]\ntheorem empty_is_transitive : is_transitive ∅ := fun y hy => (mem_empty y hy).elim\n#align empty_is_transitive empty_is_transitive\n\n"}