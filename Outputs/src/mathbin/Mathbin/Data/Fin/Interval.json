{"map_subtype_embedding_Ioo":
 "@[simp]\ntheorem map_subtype_embedding_Ioo : (Ioo a b).map Fin.valEmbedding = Ioo a b := by\n  simp [Ioo_eq_finset_subtype, Finset.fin, Finset.map_map]\n#align map_subtype_embedding_Ioo map_subtype_embedding_Ioo\n\n",
 "map_subtype_embedding_Ioi":
 "@[simp]\ntheorem map_subtype_embedding_Ioi : (Ioi a).map Fin.valEmbedding = Ioc a (n - 1) :=\n  by\n  ext x\n  simp only [exists_prop, embedding.coe_subtype, mem_Ioi, mem_map, mem_Ioc]\n  constructor\n  · rintro ⟨x, hx, rfl⟩\n    exact ⟨hx, le_tsub_of_add_le_right <| x.2⟩\n  cases n\n  · exact Fin.elim0 a\n  · exact fun hx => ⟨⟨x, Nat.lt_succ_iff.2 hx.2⟩, hx.1, rfl⟩\n#align map_subtype_embedding_Ioi map_subtype_embedding_Ioi\n\n",
 "map_subtype_embedding_Ioc":
 "@[simp]\ntheorem map_subtype_embedding_Ioc : (Ioc a b).map Fin.valEmbedding = Ioc a b := by\n  simp [Ioc_eq_finset_subtype, Finset.fin, Finset.map_map, Ioc_filter_lt_of_lt_right]\n#align map_subtype_embedding_Ioc map_subtype_embedding_Ioc\n\n",
 "map_subtype_embedding_Iio":
 "@[simp]\ntheorem map_subtype_embedding_Iio : (Iio b).map Fin.valEmbedding = Iio b := by\n  simp [Iio_eq_finset_subtype, Finset.fin, Finset.map_map]\n#align map_subtype_embedding_Iio map_subtype_embedding_Iio\n\n",
 "map_subtype_embedding_Iic":
 "@[simp]\ntheorem map_subtype_embedding_Iic : (Iic b).map Fin.valEmbedding = Iic b := by\n  simp [Iic_eq_finset_subtype, Finset.fin, Finset.map_map, Iic_filter_lt_of_lt_right]\n#align map_subtype_embedding_Iic map_subtype_embedding_Iic\n\n",
 "map_subtype_embedding_Ico":
 "@[simp]\ntheorem map_subtype_embedding_Ico : (Ico a b).map Fin.valEmbedding = Ico a b := by\n  simp [Ico_eq_finset_subtype, Finset.fin, Finset.map_map]\n#align map_subtype_embedding_Ico map_subtype_embedding_Ico\n\n",
 "map_subtype_embedding_Ici":
 "@[simp]\ntheorem map_subtype_embedding_Ici : (Ici a).map Fin.valEmbedding = Icc a (n - 1) :=\n  by\n  ext x\n  simp only [exists_prop, embedding.coe_subtype, mem_Ici, mem_map, mem_Icc]\n  constructor\n  · rintro ⟨x, hx, rfl⟩\n    exact ⟨hx, le_tsub_of_add_le_right <| x.2⟩\n  cases n\n  · exact Fin.elim0 a\n  · exact fun hx => ⟨⟨x, Nat.lt_succ_iff.2 hx.2⟩, hx.1, rfl⟩\n#align map_subtype_embedding_Ici map_subtype_embedding_Ici\n\n",
 "map_subtype_embedding_Icc":
 "@[simp]\ntheorem map_subtype_embedding_Icc : (Icc a b).map Fin.valEmbedding = Icc a b := by\n  simp [Icc_eq_finset_subtype, Finset.fin, Finset.map_map, Icc_filter_lt_of_lt_right]\n#align map_subtype_embedding_Icc map_subtype_embedding_Icc\n\n",
 "card_fintype_Ioo":
 "@[simp]\ntheorem card_fintype_Ioo : Fintype.card (Set.Ioo a b) = b - a - 1 := by rw [← card_Ioo, Fintype.card_ofFinset]\n#align card_fintype_Ioo card_fintype_Ioo\n\n",
 "card_fintype_Ioi":
 "@[simp]\ntheorem card_fintype_Ioi : Fintype.card (Set.Ioi a) = n - 1 - a := by rw [Fintype.card_ofFinset, card_Ioi]\n#align card_fintype_Ioi card_fintype_Ioi\n\n",
 "card_fintype_Ioc":
 "@[simp]\ntheorem card_fintype_Ioc : Fintype.card (Set.Ioc a b) = b - a := by rw [← card_Ioc, Fintype.card_ofFinset]\n#align card_fintype_Ioc card_fintype_Ioc\n\n",
 "card_fintype_Iio":
 "@[simp]\ntheorem card_fintype_Iio : Fintype.card (Set.Iio b) = b := by rw [Fintype.card_ofFinset, card_Iio]\n#align card_fintype_Iio card_fintype_Iio\n\n",
 "card_fintype_Iic":
 "@[simp]\ntheorem card_fintype_Iic : Fintype.card (Set.Iic b) = b + 1 := by rw [Fintype.card_ofFinset, card_Iic]\n#align card_fintype_Iic card_fintype_Iic\n\n",
 "card_fintype_Ico":
 "@[simp]\ntheorem card_fintype_Ico : Fintype.card (Set.Ico a b) = b - a := by rw [← card_Ico, Fintype.card_ofFinset]\n#align card_fintype_Ico card_fintype_Ico\n\n",
 "card_fintype_Ici":
 "@[simp]\ntheorem card_fintype_Ici : Fintype.card (Set.Ici a) = n - a := by rw [Fintype.card_ofFinset, card_Ici]\n#align card_fintype_Ici card_fintype_Ici\n\n",
 "card_fintype_Icc":
 "@[simp]\ntheorem card_fintype_Icc : Fintype.card (Set.Icc a b) = b + 1 - a := by rw [← card_Icc, Fintype.card_ofFinset]\n#align card_fintype_Icc card_fintype_Icc\n\n",
 "card_Ioo":
 "@[simp]\ntheorem card_Ioo : (Ioo a b).card = b - a - 1 := by rw [← Nat.card_Ioo, ← map_subtype_embedding_Ioo, card_map]\n#align card_Ioo card_Ioo\n\n",
 "card_Ioi":
 "@[simp]\ntheorem card_Ioi : (Ioi a).card = n - 1 - a := by rw [← card_map, map_subtype_embedding_Ioi, Nat.card_Ioc]\n#align card_Ioi card_Ioi\n\n",
 "card_Ioc":
 "@[simp]\ntheorem card_Ioc : (Ioc a b).card = b - a := by rw [← Nat.card_Ioc, ← map_subtype_embedding_Ioc, card_map]\n#align card_Ioc card_Ioc\n\n",
 "card_Iio":
 "@[simp]\ntheorem card_Iio : (Iio b).card = b := by rw [← Nat.card_Iio b, ← map_subtype_embedding_Iio, card_map]\n#align card_Iio card_Iio\n\n",
 "card_Iic":
 "@[simp]\ntheorem card_Iic : (Iic b).card = b + 1 := by rw [← Nat.card_Iic b, ← map_subtype_embedding_Iic, card_map]\n#align card_Iic card_Iic\n\n",
 "card_Ico":
 "@[simp]\ntheorem card_Ico : (Ico a b).card = b - a := by rw [← Nat.card_Ico, ← map_subtype_embedding_Ico, card_map]\n#align card_Ico card_Ico\n\n",
 "card_Ici":
 "@[simp]\ntheorem card_Ici : (Ici a).card = n - a := by\n  cases n\n  · exact Fin.elim0 a\n  rw [← card_map, map_subtype_embedding_Ici, Nat.card_Icc]\n  rfl\n#align card_Ici card_Ici\n\n",
 "card_Icc":
 "@[simp]\ntheorem card_Icc : (Icc a b).card = b + 1 - a := by rw [← Nat.card_Icc, ← map_subtype_embedding_Icc, card_map]\n#align card_Icc card_Icc\n\n",
 "Ioo_eq_finset_subtype":
 "theorem Ioo_eq_finset_subtype : Ioo a b = (Ioo (a : ℕ) b).fin n :=\n  rfl\n#align Ioo_eq_finset_subtype Ioo_eq_finset_subtype\n\n",
 "Ioi_eq_finset_subtype":
 "theorem Ioi_eq_finset_subtype : Ioi a = (Ioc (a : ℕ) n).fin n :=\n  by\n  ext\n  simp\n#align Ioi_eq_finset_subtype Ioi_eq_finset_subtype\n\n",
 "Ioc_eq_finset_subtype":
 "theorem Ioc_eq_finset_subtype : Ioc a b = (Ioc (a : ℕ) b).fin n :=\n  rfl\n#align Ioc_eq_finset_subtype Ioc_eq_finset_subtype\n\n",
 "Iio_eq_finset_subtype":
 "theorem Iio_eq_finset_subtype : Iio b = (Iio (b : ℕ)).fin n :=\n  rfl\n#align Iio_eq_finset_subtype Iio_eq_finset_subtype\n\n",
 "Iic_eq_finset_subtype":
 "theorem Iic_eq_finset_subtype : Iic b = (Iic (b : ℕ)).fin n :=\n  rfl\n#align Iic_eq_finset_subtype Iic_eq_finset_subtype\n\n",
 "Ico_eq_finset_subtype":
 "theorem Ico_eq_finset_subtype : Ico a b = (Ico (a : ℕ) b).fin n :=\n  rfl\n#align Ico_eq_finset_subtype Ico_eq_finset_subtype\n\n",
 "Ici_eq_finset_subtype":
 "theorem Ici_eq_finset_subtype : Ici a = (Icc (a : ℕ) n).fin n :=\n  by\n  ext\n  simp\n#align Ici_eq_finset_subtype Ici_eq_finset_subtype\n\n",
 "Icc_eq_finset_subtype":
 "/-\nCopyright (c) 2021 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\ntheorem Icc_eq_finset_subtype : Icc a b = (Icc (a : ℕ) b).fin n :=\n  rfl\n#align Icc_eq_finset_subtype Icc_eq_finset_subtype\n\n"}