{"zero_of_infinitesimal_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem zero_of_infinitesimal_real {r : exprℝ} : infinitesimal r → r = 0 :=\n  eq_of_is_st_real\n#align zero_of_infinitesimal_real zero_of_infinitesimal_real\n\n",
 "zero_iff_infinitesimal_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem zero_iff_infinitesimal_real {r : exprℝ} : infinitesimal r ↔ r = 0 :=\n  ⟨zero_of_infinitesimal_real, fun hr => by rw [hr] <;> exact infinitesimal_zero⟩\n#align zero_iff_infinitesimal_real zero_iff_infinitesimal_real\n\n",
 "st_of_is_st":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem st_of_is_st {x : «exprℝ*»} {r : exprℝ} (hxr : is_st x r) : st x = r :=\n  by\n  unfold st; split_ifs\n  · exact is_st_unique (Classical.choose_spec h) hxr\n  · exact false.elim (h ⟨r, hxr⟩)\n#align st_of_is_st st_of_is_st\n\n",
 "st_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem st_neg (x : «exprℝ*») : st (-x) = -st x :=\n  if h : infinite x then by rw [st_infinite h, st_infinite (infinite_iff_infinite_neg.mp h), neg_zero]\n  else is_st_unique (is_st_st' (not_infinite_neg h)) (is_st_neg (is_st_st' h))\n#align st_neg st_neg\n\n",
 "st_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem st_mul {x y : «exprℝ*»} (hx : ¬infinite x) (hy : ¬infinite y) : st (x * y) = st x * st y :=\n  have hx' := is_st_st' hx\n  have hy' := is_st_st' hy\n  have hxy := is_st_st' (not_infinite_mul hx hy)\n  have hxy' := is_st_mul hx' hy'\n  is_st_unique hxy hxy'\n#align st_mul st_mul\n\n",
 "st_le_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem st_le_of_le {x y : «exprℝ*»} (hix : ¬infinite x) (hiy : ¬infinite y) : x ≤ y → st x ≤ st y :=\n  have hx' := is_st_st' hix\n  have hy' := is_st_st' hiy\n  is_st_le_of_le hx' hy'\n#align st_le_of_le st_le_of_le\n\n",
 "st_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem st_inv (x : «exprℝ*») : st x⁻¹ = (st x)⁻¹ :=\n  by\n  by_cases h0 : x = 0\n  rw [h0, inv_zero, ← coe_zero, st_id_real, inv_zero]\n  by_cases h1 : infinitesimal x\n  rw [st_infinite ((infinitesimal_iff_infinite_inv h0).mp h1), st_of_is_st h1, inv_zero]\n  by_cases h2 : Infinite x\n  rw [st_of_is_st (infinitesimal_inv_of_infinite h2), st_infinite h2, inv_zero]\n  exact st_of_is_st (is_st_inv h1 (is_st_st' h2))\n#align st_inv st_inv\n\n",
 "st_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem st_infinite {x : «exprℝ*»} (hi : infinite x) : st x = 0 :=\n  by\n  unfold st; split_ifs\n  · exact false.elim ((infinite_iff_not_exists_st.mp hi) h)\n  · rfl\n#align st_infinite st_infinite\n\n",
 "st_id_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem st_id_real (r : exprℝ) : st r = r :=\n  st_of_is_st (is_st_refl_real r)\n#align st_id_real st_id_real\n\n",
 "st_eq_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem st_eq_Sup {x : «exprℝ*»} : st x = supₛ { y : exprℝ | (y : «exprℝ*») < x } :=\n  by\n  unfold st; split_ifs\n  · exact is_st_unique (Classical.choose_spec h) (is_st_Sup (not_infinite_of_exists_st h))\n  · cases' not_imp_comm.mp exists_st_of_not_infinite h with H H\n    · rw [(Set.ext fun i => ⟨fun hi => Set.mem_univ i, fun hi => H i⟩ : { y : exprℝ | (y : «exprℝ*») < x } = Set.univ)]\n      exact real.Sup_univ.symm\n    · rw [(Set.ext fun i =>\n            ⟨fun hi => false.elim (not_lt_of_lt (H i) hi), fun hi => false.elim (Set.not_mem_empty i hi)⟩ :\n          { y : exprℝ | (y : «exprℝ*») < x } = ∅)]\n      exact real.Sup_empty.symm\n#align st_eq_Sup st_eq_Sup\n\n",
 "st_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n---\ntheorem st_add {x y : «exprℝ*»} (hx : ¬infinite x) (hy : ¬infinite y) : st (x + y) = st x + st y :=\n  have hx' := is_st_st' hx\n  have hy' := is_st_st' hy\n  have hxy := is_st_st' (not_infinite_add hx hy)\n  have hxy' := is_st_add hx' hy'\n  is_st_unique hxy hxy'\n#align st_add st_add\n\n",
 "pos_of_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem pos_of_infinite_pos {x : «exprℝ*»} : infinite_pos x → 0 < x := fun hip => hip 0\n#align pos_of_infinite_pos pos_of_infinite_pos\n\n",
 "omega_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.omega -/\ntheorem omega_pos : 0 < hyperreal.omega :=\n  germ.coe_pos.2 <|\n    mem_hyperfilter_of_finite_compl <| by\n      convert set.finite_singleton 0\n      simp [Set.eq_singleton_iff_unique_mem]\n#align omega_pos omega_pos\n\n",
 "omega_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.omega -/\ntheorem omega_ne_zero : hyperreal.omega ≠ 0 :=\n  omega_pos.ne'\n#align omega_ne_zero omega_ne_zero\n\n",
 "not_real_of_infinitesimal_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem not_real_of_infinitesimal_ne_zero (x : «exprℝ*») : infinitesimal x → x ≠ 0 → ∀ r : exprℝ, x ≠ r :=\n  fun hi hx r hr => hx <| hr.trans <| coe_eq_zero.2 <| is_st_unique (hr.symm ▸ is_st_refl_real r : is_st x r) hi\n#align not_real_of_infinitesimal_ne_zero not_real_of_infinitesimal_ne_zero\n\n",
 "not_real_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem not_real_of_infinite {x : «exprℝ*»} : infinite x → ∀ r : exprℝ, x ≠ r := fun hi r hr =>\n  not_infinite_real r <| @eq.subst _ infinite _ _ hr hi\n#align not_real_of_infinite not_real_of_infinite\n\n",
 "not_infinitesimal_of_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinitesimal_of_infinite_pos {x : «exprℝ*»} : infinite_pos x → ¬infinitesimal x := fun hp =>\n  not_infinitesimal_of_infinite (or.inl hp)\n#align not_infinitesimal_of_infinite_pos not_infinitesimal_of_infinite_pos\n\n",
 "not_infinitesimal_of_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinitesimal_of_infinite_neg {x : «exprℝ*»} : infinite_neg x → ¬infinitesimal x := fun hn =>\n  not_infinitesimal_of_infinite (or.inr hn)\n#align not_infinitesimal_of_infinite_neg not_infinitesimal_of_infinite_neg\n\n",
 "not_infinitesimal_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinitesimal_of_infinite {x : «exprℝ*»} : infinite x → ¬infinitesimal x :=\n  imp_not_comm.mp not_infinite_of_infinitesimal\n#align not_infinitesimal_of_infinite not_infinitesimal_of_infinite\n\n",
 "not_infinite_zero":
 "theorem not_infinite_zero : ¬infinite 0 := fun hI => ne_zero_of_infinite hI rfl\n#align not_infinite_zero not_infinite_zero\n\n",
 "not_infinite_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem not_infinite_real (r : exprℝ) : ¬infinite r := by\n  rw [not_infinite_iff_exist_lt_gt] <;> exact ⟨r - 1, r + 1, coe_lt_coe.2 <| sub_one_lt r, coe_lt_coe.2 <| lt_add_one r⟩\n#align not_infinite_real not_infinite_real\n\n",
 "not_infinite_pos_of_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinite_pos_of_infinite_neg {x : «exprℝ*»} : infinite_neg x → ¬infinite_pos x := fun hn hp =>\n  not_lt_of_lt (hn 1) (hp 1)\n#align not_infinite_pos_of_infinite_neg not_infinite_pos_of_infinite_neg\n\n",
 "not_infinite_pos_add_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinite_pos_add_infinite_neg {x y : «exprℝ*»} : ¬infinite_pos x → infinite_neg y → infinite_neg (x + y) :=\n  fun hx hy => by rw [add_comm] <;> exact infinite_neg_add_not_infinite_pos hy hx\n#align not_infinite_pos_add_infinite_neg not_infinite_pos_add_infinite_neg\n\n",
 "not_infinite_of_infinitesimal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinite_of_infinitesimal {x : «exprℝ*»} : infinitesimal x → ¬infinite x := fun hi hI =>\n  have hi' := hi 2 zero_lt_two\n  or.dcases_on hI\n    (fun hip =>\n      have hip' := hip 2\n      not_lt_of_lt hip' (by convert hi'.2 <;> exact (zero_add 2).symm))\n    fun hin =>\n    have hin' := hin (-2)\n    not_lt_of_lt hin' (by convert hi'.1 <;> exact (zero_sub 2).symm)\n#align not_infinite_of_infinitesimal not_infinite_of_infinitesimal\n\n",
 "not_infinite_of_exists_st":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem not_infinite_of_exists_st {x : «exprℝ*»} : (∃ r : exprℝ, is_st x r) → ¬infinite x := fun he hi =>\n  Exists.dcases_on he fun r hr =>\n    hi.elim (fun hip => not_lt_of_lt (hr 2 zero_lt_two).2 (hip <| r + 2)) fun hin =>\n      not_lt_of_lt (hr 2 zero_lt_two).1 (hin <| r - 2)\n#align not_infinite_of_exists_st not_infinite_of_exists_st\n\n",
 "not_infinite_neg_of_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinite_neg_of_infinite_pos {x : «exprℝ*»} : infinite_pos x → ¬infinite_neg x :=\n  imp_not_comm.mp not_infinite_pos_of_infinite_neg\n#align not_infinite_neg_of_infinite_pos not_infinite_neg_of_infinite_pos\n\n",
 "not_infinite_neg_add_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinite_neg_add_infinite_pos {x y : «exprℝ*»} : ¬infinite_neg x → infinite_pos y → infinite_pos (x + y) :=\n  fun hx hy => by rw [add_comm] <;> exact infinite_pos_add_not_infinite_neg hy hx\n#align not_infinite_neg_add_infinite_pos not_infinite_neg_add_infinite_pos\n\n",
 "not_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinite_neg {x : «exprℝ*»} : ¬infinite x → ¬infinite (-x) :=\n  not_imp_not.mpr infinite_iff_infinite_neg.mpr\n#align not_infinite_neg not_infinite_neg\n\n",
 "not_infinite_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n--AN INFINITE LEMMA THAT REQUIRES SOME MORE ST MACHINERY\ntheorem not_infinite_mul {x y : «exprℝ*»} (hx : ¬infinite x) (hy : ¬infinite y) : ¬infinite (x * y) :=\n  have hx' := exists_st_of_not_infinite hx\n  have hy' := exists_st_of_not_infinite hy\n  Exists.cases_on hx' <| Exists.cases_on hy' fun r hr s hs => not_infinite_of_exists_st <| ⟨s * r, is_st_mul hs hr⟩\n#align not_infinite_mul not_infinite_mul\n\n",
 "not_infinite_iff_exist_lt_gt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinite_iff_exist_lt_gt {x : «exprℝ*»} : ¬infinite x ↔ ∃ r s : exprℝ, (r : «exprℝ*») < x ∧ x < s :=\n  ⟨fun hni =>\n    Exists.dcases_on (not_forall.mp (not_or.mp hni).1) <|\n      Exists.dcases_on (not_forall.mp (not_or.mp hni).2) fun r hr s hs => by\n        rw [not_lt] at hr hs <;>\n          exact\n            ⟨r - 1, s + 1, ⟨lt_of_lt_of_le (by rw [sub_eq_add_neg] <;> norm_num) hr, lt_of_le_of_lt hs (by norm_num)⟩⟩,\n    fun hrs =>\n    Exists.dcases_on hrs fun r hr =>\n      Exists.dcases_on hr fun s hs => not_or.mpr ⟨not_forall.mpr ⟨s, lt_asymm hs.2⟩, not_forall.mpr ⟨r, lt_asymm hs.1⟩⟩⟩\n#align not_infinite_iff_exist_lt_gt not_infinite_iff_exist_lt_gt\n\n",
 "not_infinite_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem not_infinite_add {x y : «exprℝ*»} (hx : ¬infinite x) (hy : ¬infinite y) : ¬infinite (x + y) :=\n  have hx' := exists_st_of_not_infinite hx\n  have hy' := exists_st_of_not_infinite hy\n  Exists.cases_on hx' <| Exists.cases_on hy' fun r hr s hs => not_infinite_of_exists_st <| ⟨s + r, is_st_add hs hr⟩\n#align not_infinite_add not_infinite_add\n\n",
 "neg_of_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem neg_of_infinite_neg {x : «exprℝ*»} : infinite_neg x → x < 0 := fun hin => hin 0\n#align neg_of_infinite_neg neg_of_infinite_neg\n\n",
 "neg_lt_of_tendsto_zero_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem neg_lt_of_tendsto_zero_of_pos {f : ℕ → exprℝ} (hf : tendsto f at_top ((nhds) 0)) :\n    ∀ {r : exprℝ}, 0 < r → (-r : «exprℝ*») < of_seq f := fun r hr =>\n  have hg := hf.neg\n  neg_lt_of_neg_lt (by rw [neg_zero] at hg <;> exact lt_of_tendsto_zero_of_pos hg hr)\n#align neg_lt_of_tendsto_zero_of_pos neg_lt_of_tendsto_zero_of_pos\n\n",
 "ne_zero_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem ne_zero_of_infinite {x : «exprℝ*»} : infinite x → x ≠ 0 := fun hI h0 =>\n  or.cases_on hI (fun hip => lt_irrefl (0 : «exprℝ*») ((by rwa [← h0] : infinite_pos 0) 0)) fun hin =>\n    lt_irrefl (0 : «exprℝ*») ((by rwa [← h0] : infinite_neg 0) 0)\n#align ne_zero_of_infinite ne_zero_of_infinite\n\n",
 "mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite.mul {x y : «exprℝ*»} : infinite x → infinite y → infinite (x * y) := fun hx hy =>\n  infinite_mul_of_infinite_not_infinitesimal hx (not_infinitesimal_of_infinite hy)\n#align infinite.mul infinite.mul\n\n",
 "lt_of_tendsto_zero_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem lt_of_tendsto_zero_of_pos {f : ℕ → exprℝ} (hf : tendsto f at_top ((nhds) 0)) :\n    ∀ {r : exprℝ}, 0 < r → of_seq f < (r : «exprℝ*») :=\n  by\n  simp only [metric.tendsto_at_top, real.dist_eq, sub_zero, lt_def] at hf⊢\n  intro r hr; cases' hf r hr with N hf'\n  have hs : «expr ᶜ» { i : ℕ | f i < r } ⊆ { i : ℕ | i ≤ N } := fun i hi1 =>\n    le_of_lt\n      (by simp only [lt_iff_not_ge] <;> exact fun hi2 => hi1 (lt_of_le_of_lt (le_abs_self _) (hf' i hi2)) : i < N)\n  exact mem_hyperfilter_of_finite_compl ((set.finite_le_nat N).subset hs)\n#align lt_of_tendsto_zero_of_pos lt_of_tendsto_zero_of_pos\n\n",
 "lt_of_st_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem lt_of_st_lt {x y : «exprℝ*»} (hix : ¬infinite x) (hiy : ¬infinite y) : st x < st y → x < y :=\n  have hx' := is_st_st' hix\n  have hy' := is_st_st' hiy\n  lt_of_is_st_lt hx' hy'\n#align lt_of_st_lt lt_of_st_lt\n\n",
 "lt_of_pos_of_infinitesimal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem lt_of_pos_of_infinitesimal {x : «exprℝ*»} : infinitesimal x → ∀ r : exprℝ, 0 < r → x < r := fun hi r hr =>\n  ((infinitesimal_def.mp hi) r hr).2\n#align lt_of_pos_of_infinitesimal lt_of_pos_of_infinitesimal\n\n",
 "lt_of_is_st_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n-- (st x < st y) → (x < y) → (x ≤ y) → (st x ≤ st y)\ntheorem lt_of_is_st_lt {x y : «exprℝ*»} {r s : exprℝ} (hxr : is_st x r) (hys : is_st y s) : r < s → x < y := fun hrs =>\n  by\n  have hrs' : 0 < (s - r) / 2 := half_pos (sub_pos.mpr hrs)\n  have hxr' := (hxr _ hrs').2\n  have hys' := (hys _ hrs').1\n  have H1 : r + (s - r) / 2 = (r + s) / 2 := by linarith\n  have H2 : s - (s - r) / 2 = (r + s) / 2 := by linarith\n  norm_cast  at *\n  rw [H1] at hxr'\n  rw [H2] at hys'\n  exact lt_trans hxr' hys'\n#align lt_of_is_st_lt lt_of_is_st_lt\n\n",
 "lt_neg_of_pos_of_infinitesimal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem lt_neg_of_pos_of_infinitesimal {x : «exprℝ*»} : infinitesimal x → ∀ r : exprℝ, 0 < r → -↑r < x := fun hi r hr =>\n  ((infinitesimal_def.mp hi) r hr).1\n#align lt_neg_of_pos_of_infinitesimal lt_neg_of_pos_of_infinitesimal\n\n",
 "is_st_unique'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\nprivate theorem is_st_unique' (x : «exprℝ*») (r s : exprℝ) (hr : is_st x r) (hs : is_st x s) (hrs : r < s) : false :=\n  by\n  have hrs' := half_pos <| sub_pos_of_lt hrs\n  have hr' := (hr _ hrs').2\n  have hs' := (hs _ hrs').1\n  have h : s - (s - r) / 2 = r + (s - r) / 2 := by linarith\n  norm_cast  at *\n  rw [h] at hs'\n  exact not_lt_of_lt hs' hr'\n#align is_st_unique' is_st_unique'\n\n",
 "is_st_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_unique {x : «exprℝ*»} {r s : exprℝ} (hr : is_st x r) (hs : is_st x s) : r = s :=\n  by\n  rcases lt_trichotomy r s with (h | h | h)\n  · exact false.elim (is_st_unique' x r s hr hs h)\n  · exact h\n  · exact false.elim (is_st_unique' x s r hs hr h)\n#align is_st_unique is_st_unique\n\n",
 "is_st_trans_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_trans_real {r s t : exprℝ} : is_st r s → is_st s t → is_st r t := by\n  rw [is_st_real_iff_eq, is_st_real_iff_eq, is_st_real_iff_eq] <;> exact eq.trans\n#align is_st_trans_real is_st_trans_real\n\n",
 "is_st_symm_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_symm_real {r s : exprℝ} : is_st r s ↔ is_st s r := by rw [is_st_real_iff_eq, is_st_real_iff_eq, eq_comm]\n#align is_st_symm_real is_st_symm_real\n\n",
 "is_st_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_sub {x y : «exprℝ*»} {r s : exprℝ} : is_st x r → is_st y s → is_st (x - y) (r - s) := fun hxr hys => by\n  rw [sub_eq_add_neg, sub_eq_add_neg] <;> exact is_st_add hxr (is_st_neg hys)\n#align is_st_sub is_st_sub\n\n",
 "is_st_st_of_is_st":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_st_of_is_st {x : «exprℝ*»} {r : exprℝ} (hxr : is_st x r) : is_st x (st x) := by rwa [st_of_is_st hxr]\n#align is_st_st_of_is_st is_st_st_of_is_st\n\n",
 "is_st_st_of_exists_st":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_st_of_exists_st {x : «exprℝ*»} (hx : ∃ r : exprℝ, is_st x r) : is_st x (st x) :=\n  Exists.dcases_on hx fun r => is_st_st_of_is_st\n#align is_st_st_of_exists_st is_st_st_of_exists_st\n\n",
 "is_st_st'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem is_st_st' {x : «exprℝ*»} (hx : ¬infinite x) : is_st x (st x) :=\n  is_st_st_of_exists_st <| exists_st_of_not_infinite hx\n#align is_st_st' is_st_st'\n\n",
 "is_st_st":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem is_st_st {x : «exprℝ*»} (hx : st x ≠ 0) : is_st x (st x) :=\n  by\n  unfold st; split_ifs\n  · exact Classical.choose_spec h\n  · exact false.elim (hx (by unfold st <;> split_ifs <;> rfl))\n#align is_st_st is_st_st\n\n",
 "is_st_refl_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_refl_real (r : exprℝ) : is_st r r := fun δ hδ =>\n  ⟨sub_lt_self _ (coe_lt_coe.2 hδ), lt_add_of_pos_right _ (coe_lt_coe.2 hδ)⟩\n#align is_st_refl_real is_st_refl_real\n\n",
 "is_st_real_iff_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_real_iff_eq {r s : exprℝ} : is_st r s ↔ r = s :=\n  ⟨eq_of_is_st_real, fun hrs => by rw [hrs] <;> exact is_st_refl_real s⟩\n#align is_st_real_iff_eq is_st_real_iff_eq\n\n",
 "is_st_of_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem is_st_of_tendsto {f : ℕ → exprℝ} {r : exprℝ} (hf : tendsto f at_top ((nhds) r)) : is_st (of_seq f) r :=\n  by\n  have hg : tendsto (fun n => f n - r) at_top ((nhds) 0) := sub_self r ▸ hf.sub tendsto_const_nhds\n  rw [← zero_add r, ← sub_add_cancel f fun n => r] <;>\n    exact is_st_add (infinitesimal_of_tendsto_zero hg) (is_st_refl_real r)\n#align is_st_of_tendsto is_st_of_tendsto\n\n",
 "is_st_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_neg {x : «exprℝ*»} {r : exprℝ} (hxr : is_st x r) : is_st (-x) (-r) := fun d hd =>\n  show -(r : «exprℝ*») - d < -x ∧ -x < -r + d by cases hxr d hd <;> constructor <;> linarith\n#align is_st_neg is_st_neg\n\n",
 "is_st_mul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\nprivate theorem is_st_mul' {x y : «exprℝ*»} {r s : exprℝ} (hxr : is_st x r) (hys : is_st y s) (hs : s ≠ 0) :\n    is_st (x * y) (r * s) :=\n  have hxr' := is_st_iff_abs_sub_lt_delta.mp hxr\n  have hys' := is_st_iff_abs_sub_lt_delta.mp hys\n  have h :=\n    not_infinite_iff_exist_lt_gt.mp <|\n      not_imp_not.mpr infinite_iff_infinite_abs.mpr <| not_infinite_of_exists_st ⟨r, hxr⟩\n  Exists.cases_on h fun u h' =>\n    Exists.cases_on h' fun t ⟨hu, ht⟩ =>\n      is_st_iff_abs_sub_lt_delta.mpr fun d hd =>\n        calc\n          |x * y - r * s| = |x * (y - s) + (x - r) * s| := by rw [mul_sub, sub_mul, add_sub, sub_add_cancel]\n          _ ≤ |x * (y - s)| + |(x - r) * s| := abs_add _ _\n          _ ≤ |x| * |y - s| + |x - r| * |s| := by simp only [abs_mul]\n          _ ≤ |x| * (d / t / 2 : exprℝ) + (d / |s| / 2 : exprℝ) * |s| :=\n            add_le_add\n              (mul_le_mul_of_nonneg_left\n                  (le_of_lt <| hys' _ <| half_pos <| div_pos hd <| coe_pos.1 <| lt_of_le_of_lt (abs_nonneg x) ht) <|\n                abs_nonneg _)\n              (mul_le_mul_of_nonneg_right (le_of_lt <| hxr' _ <| half_pos <| div_pos hd <| abs_pos.2 hs) <|\n                abs_nonneg _)\n          _ = (d / 2 * (|x| / t) + d / 2 : «exprℝ*») :=\n            by\n            push_cast [-filter.germ.const_div]\n            -- TODO: Why wasn't `hyperreal.coe_div` used?\n            have : (|s| : «exprℝ*») ≠ 0 := by simpa\n            have : (2 : «exprℝ*») ≠ 0 := two_ne_zero\n            field_simp [*, add_mul, mul_add, mul_assoc, mul_comm, mul_left_comm]\n          _ < (d / 2 * 1 + d / 2 : «exprℝ*») :=\n            add_lt_add_right\n              (mul_lt_mul_of_pos_left ((div_lt_one <| lt_of_le_of_lt (abs_nonneg x) ht).mpr ht) <|\n                half_pos <| coe_pos.2 hd)\n              _\n          _ = (d : «exprℝ*») := by rw [mul_one, add_halves]\n          \n#align is_st_mul' is_st_mul'\n\n",
 "is_st_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_mul {x y : «exprℝ*»} {r s : exprℝ} (hxr : is_st x r) (hys : is_st y s) : is_st (x * y) (r * s) :=\n  have h :=\n    not_infinite_iff_exist_lt_gt.mp <|\n      not_imp_not.mpr infinite_iff_infinite_abs.mpr <| not_infinite_of_exists_st ⟨r, hxr⟩\n  Exists.cases_on h fun u h' =>\n    Exists.cases_on h' fun t ⟨hu, ht⟩ => by\n      by_cases hs : s = 0\n      · apply is_st_iff_abs_sub_lt_delta.mpr\n        intro d hd\n        have hys' : _ :=\n          is_st_iff_abs_sub_lt_delta.mp hys (d / t) (div_pos hd (coe_pos.1 (lt_of_le_of_lt (abs_nonneg x) ht)))\n        rw [hs, coe_zero, sub_zero] at hys'\n        rw [hs, mul_zero, coe_zero, sub_zero, abs_mul, mul_comm, ←\n          div_mul_cancel (d : «exprℝ*») (ne_of_gt (lt_of_le_of_lt (abs_nonneg x) ht)), ← coe_div]\n        exact mul_lt_mul'' hys' ht (abs_nonneg _) (abs_nonneg _)\n      exact is_st_mul' hxr hys hs\n#align is_st_mul is_st_mul\n\n",
 "is_st_le_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_le_of_le {x y : «exprℝ*»} {r s : exprℝ} (hrx : is_st x r) (hsy : is_st y s) : x ≤ y → r ≤ s := by\n  rw [← not_lt, ← not_lt, not_imp_not] <;> exact lt_of_is_st_lt hsy hrx\n#align is_st_le_of_le is_st_le_of_le\n\n",
 "is_st_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_inv {x : «exprℝ*»} {r : exprℝ} (hi : ¬infinitesimal x) : is_st x r → is_st x⁻¹ r⁻¹ := fun hxr =>\n  have h : x ≠ 0 := fun h => hi (h.symm ▸ infinitesimal_zero)\n  have H := exists_st_of_not_infinite <| not_imp_not.mpr (infinitesimal_iff_infinite_inv h).mpr hi\n  Exists.cases_on H fun s hs =>\n    have H' : is_st 1 (r * s) := mul_inv_cancel h ▸ is_st_mul hxr hs\n    have H'' : s = r⁻¹ := one_div r ▸ eq_one_div_of_mul_eq_one_right (eq_of_is_st_real H').symm\n    H'' ▸ hs\n#align is_st_inv is_st_inv\n\n",
 "is_st_inj_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_inj_real {r₁ r₂ s : exprℝ} (h1 : is_st r₁ s) (h2 : is_st r₂ s) : r₁ = r₂ :=\n  eq.trans (eq_of_is_st_real h1) (eq_of_is_st_real h2).symm\n#align is_st_inj_real is_st_inj_real\n\n",
 "is_st_iff_abs_sub_lt_delta":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_iff_abs_sub_lt_delta {x : «exprℝ*»} {r : exprℝ} : is_st x r ↔ ∀ δ : exprℝ, 0 < δ → |x - r| < δ := by\n  simp only [abs_sub_lt_iff, sub_lt_iff_lt_add, is_st, and_comm', add_comm]\n#align is_st_iff_abs_sub_lt_delta is_st_iff_abs_sub_lt_delta\n\n",
 "is_st_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem is_st_add {x y : «exprℝ*»} {r s : exprℝ} : is_st x r → is_st y s → is_st (x + y) (r + s) := fun hxr hys d hd =>\n  have hxr' := hxr (d / 2) (half_pos hd)\n  have hys' := hys (d / 2) (half_pos hd)\n  ⟨by convert add_lt_add hxr'.1 hys'.1 using 1 <;> norm_cast <;> linarith, by\n    convert add_lt_add hxr'.2 hys'.2 using 1 <;> norm_cast <;> linarith⟩\n#align is_st_add is_st_add\n\n",
 "is_st_Sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem is_st_Sup {x : «exprℝ*»} (hni : ¬infinite x) : is_st x (supₛ { y : exprℝ | (y : «exprℝ*») < x }) :=\n  let S : set (exprℝ) := { y : exprℝ | (y : «exprℝ*») < x }\n  let R : _ := supₛ S\n  have hnile := not_forall.mp (not_or.mp hni).1\n  have hnige := not_forall.mp (not_or.mp hni).2\n  Exists.dcases_on hnile <|\n    Exists.dcases_on hnige fun r₁ hr₁ r₂ hr₂ =>\n      have HR₁ : S.nonempty := ⟨r₁ - 1, lt_of_lt_of_le (coe_lt_coe.2 <| sub_one_lt _) (not_lt.mp hr₁)⟩\n      have HR₂ : BddAbove S := ⟨r₂, fun y hy => le_of_lt (coe_lt_coe.1 (lt_of_lt_of_le hy (not_lt.mp hr₂)))⟩\n      fun δ hδ =>\n      ⟨lt_of_not_le fun c =>\n          have hc : ∀ y ∈ S, y ≤ R - δ := fun y hy => coe_le_coe.1 <| le_of_lt <| lt_of_lt_of_le hy c\n          not_lt_of_le (csupₛ_le HR₁ hc) <| sub_lt_self R hδ,\n        lt_of_not_le fun c =>\n          have hc : ↑(R + δ / 2) < x := lt_of_lt_of_le (add_lt_add_left (coe_lt_coe.2 (half_lt_self hδ)) R) c\n          not_lt_of_le (le_csupₛ HR₂ hc) <| (lt_add_iff_pos_right _).mpr <| half_pos hδ⟩\n#align is_st_Sup is_st_Sup\n\n",
 "inv_omega":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.omega -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.epsilon -/\n@[simp]\ntheorem inv_omega : (hyperreal.omega)⁻¹ = hyperreal.epsilon :=\n  rfl\n#align inv_omega inv_omega\n\n",
 "inv_epsilon":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.omega -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.epsilon -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.omega -/\n@[simp]\ntheorem inv_epsilon : (hyperreal.epsilon)⁻¹ = hyperreal.omega :=\n  @inv_inv _ _ (hyperreal.omega)\n#align inv_epsilon inv_epsilon\n\n",
 "infinitesimal_zero":
 "theorem infinitesimal_zero : infinitesimal 0 :=\n  is_st_refl_real 0\n#align infinitesimal_zero infinitesimal_zero\n\n",
 "infinitesimal_sub_st":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_sub_st {x : «exprℝ*»} (hx : ¬infinite x) : infinitesimal (x - st x) :=\n  infinitesimal_sub_is_st <| is_st_st' hx\n#align infinitesimal_sub_st infinitesimal_sub_st\n\n",
 "infinitesimal_sub_is_st":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem infinitesimal_sub_is_st {x : «exprℝ*»} {r : exprℝ} (hxr : is_st x r) : infinitesimal (x - r) :=\n  show is_st (x - r) 0 by\n    rw [sub_eq_add_neg, ← add_neg_self r]\n    exact is_st_add hxr (is_st_refl_real (-r))\n#align infinitesimal_sub_is_st infinitesimal_sub_is_st\n\n",
 "infinitesimal_pos_iff_infinite_pos_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_pos_iff_infinite_pos_inv {x : «exprℝ*»} : infinite_pos x⁻¹ ↔ infinitesimal x ∧ 0 < x := by\n  convert infinite_pos_iff_infinitesimal_inv_pos <;> simp only [inv_inv]\n#align infinitesimal_pos_iff_infinite_pos_inv infinitesimal_pos_iff_infinite_pos_inv\n\n",
 "infinitesimal_of_tendsto_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\ntheorem infinitesimal_of_tendsto_zero {f : ℕ → exprℝ} : tendsto f at_top ((nhds) 0) → infinitesimal (of_seq f) :=\n  fun hf d hd => by\n  rw [sub_eq_add_neg, ← coe_neg, ← coe_add, ← coe_add, zero_add, zero_add] <;>\n    exact ⟨neg_lt_of_tendsto_zero_of_pos hf hd, lt_of_tendsto_zero_of_pos hf hd⟩\n#align infinitesimal_of_tendsto_zero infinitesimal_of_tendsto_zero\n\n",
 "infinitesimal_neg_iff_infinite_neg_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_neg_iff_infinite_neg_inv {x : «exprℝ*»} : infinite_neg x⁻¹ ↔ infinitesimal x ∧ x < 0 := by\n  convert infinite_neg_iff_infinitesimal_inv_neg <;> simp only [inv_inv]\n#align infinitesimal_neg_iff_infinite_neg_inv infinitesimal_neg_iff_infinite_neg_inv\n\n",
 "infinitesimal_neg_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_neg_iff {x : «exprℝ*»} : infinitesimal x ↔ infinitesimal (-x) :=\n  ⟨infinitesimal_neg, fun h => neg_neg x ▸ @infinitesimal_neg (-x) h⟩\n#align infinitesimal_neg_iff infinitesimal_neg_iff\n\n",
 "infinitesimal_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_neg {x : «exprℝ*»} (hx : infinitesimal x) : infinitesimal (-x) := by\n  simpa only [neg_zero] using is_st_neg hx\n#align infinitesimal_neg infinitesimal_neg\n\n",
 "infinitesimal_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_mul {x y : «exprℝ*»} (hx : infinitesimal x) (hy : infinitesimal y) : infinitesimal (x * y) := by\n  simpa only [mul_zero] using is_st_mul hx hy\n#align infinitesimal_mul infinitesimal_mul\n\n",
 "infinitesimal_inv_of_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_inv_of_infinite {x : «exprℝ*»} : infinite x → infinitesimal x⁻¹ := fun hi =>\n  or.cases_on hi (fun hip => (infinite_pos_iff_infinitesimal_inv_pos.mp hip).1) fun hin =>\n    (infinite_neg_iff_infinitesimal_inv_neg.mp hin).1\n#align infinitesimal_inv_of_infinite infinitesimal_inv_of_infinite\n\n",
 "infinitesimal_iff_infinite_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_iff_infinite_inv {x : «exprℝ*»} (h : x ≠ 0) : infinitesimal x ↔ infinite x⁻¹ := by\n  convert (infinite_iff_infinitesimal_inv (inv_ne_zero h)).symm <;> simp only [inv_inv]\n#align infinitesimal_iff_infinite_inv infinitesimal_iff_infinite_inv\n\n",
 "infinitesimal_epsilon":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.epsilon -/\ntheorem infinitesimal_epsilon : infinitesimal (hyperreal.epsilon) :=\n  infinitesimal_of_tendsto_zero tendsto_inverse_at_top_nhds_0_nat\n#align infinitesimal_epsilon infinitesimal_epsilon\n\n",
 "infinitesimal_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_def {x : «exprℝ*»} : infinitesimal x ↔ ∀ r : exprℝ, 0 < r → -(r : «exprℝ*») < x ∧ x < r :=\n  ⟨fun hi r hr => by convert hi r hr <;> simp, fun hi d hd => by convert hi d hd <;> simp⟩\n#align infinitesimal_def infinitesimal_def\n\n",
 "infinitesimal_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinitesimal_add {x y : «exprℝ*»} (hx : infinitesimal x) (hy : infinitesimal y) : infinitesimal (x + y) := by\n  simpa only [add_zero] using is_st_add hx hy\n#align infinitesimal_add infinitesimal_add\n\n",
 "infinite_pos_omega":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.omega -/\ntheorem infinite_pos_omega : infinite_pos (hyperreal.omega) :=\n  infinite_pos_iff_infinitesimal_inv_pos.mpr ⟨infinitesimal_epsilon, epsilon_pos⟩\n#align infinite_pos_omega infinite_pos_omega\n\n",
 "infinite_pos_of_tendsto_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem infinite_pos_of_tendsto_top {f : ℕ → exprℝ} (hf : tendsto f at_top at_top) : infinite_pos (of_seq f) := fun r =>\n  have hf' := tendsto_at_top_at_top.mp hf\n  Exists.cases_on (hf' (r + 1)) fun i hi =>\n    have hi' : ∀ a : ℕ, f a < r + 1 → a < i := fun a => by rw [← not_le, ← not_le] <;> exact not_imp_not.mpr (hi a)\n    have hS : «expr ᶜ» { a : ℕ | r < f a } ⊆ { a : ℕ | a ≤ i } := by\n      simp only [Set.compl_setOf, not_lt] <;> exact fun a har => le_of_lt (hi' a (lt_of_le_of_lt har (lt_add_one _)))\n    germ.coe_lt.2 <| mem_hyperfilter_of_finite_compl <| (set.finite_le_nat _).subset hS\n#align infinite_pos_of_tendsto_top infinite_pos_of_tendsto_top\n\n",
 "infinite_pos_neg_of_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_neg_of_infinite_neg {x : «exprℝ*»} : infinite_neg x → infinite_pos (-x) := fun hp r =>\n  lt_neg.mp (hp (-r))\n#align infinite_pos_neg_of_infinite_neg infinite_pos_neg_of_infinite_neg\n\n",
 "infinite_pos_mul_of_not_infinitesimal_pos_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_mul_of_not_infinitesimal_pos_infinite_pos {x y : «exprℝ*»} :\n    ¬infinitesimal x → 0 < x → infinite_pos y → infinite_pos (x * y) := fun hx hp hy => by\n  rw [mul_comm] <;> exact infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos hy hx hp\n#align infinite_pos_mul_of_not_infinitesimal_pos_infinite_pos infinite_pos_mul_of_not_infinitesimal_pos_infinite_pos\n\n",
 "infinite_pos_mul_of_not_infinitesimal_neg_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_mul_of_not_infinitesimal_neg_infinite_neg {x y : «exprℝ*»} :\n    ¬infinitesimal x → x < 0 → infinite_neg y → infinite_pos (x * y) := fun hx hp hy => by\n  rw [mul_comm] <;> exact infinite_pos_mul_of_infinite_neg_not_infinitesimal_neg hy hx hp\n#align infinite_pos_mul_of_not_infinitesimal_neg_infinite_neg infinite_pos_mul_of_not_infinitesimal_neg_infinite_neg\n\n",
 "infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos {x y : «exprℝ*»} :\n    infinite_pos x → ¬infinitesimal y → 0 < y → infinite_pos (x * y) := fun hx hy₁ hy₂ r =>\n  have hy₁' := not_forall.mp (by rw [infinitesimal_def] at hy₁ <;> exact hy₁)\n  Exists.dcases_on hy₁' fun r₁ hy₁'' =>\n    by\n    have hyr := by rw [not_imp, ← abs_lt, not_lt, abs_of_pos hy₂] at hy₁'' <;> exact hy₁''\n    rw [← div_mul_cancel r (ne_of_gt hyr.1), coe_mul] <;>\n      exact mul_lt_mul (hx (r / r₁)) hyr.2 (coe_lt_coe.2 hyr.1) (le_of_lt (hx 0))\n#align infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos\n\n",
 "infinite_pos_mul_of_infinite_neg_not_infinitesimal_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_mul_of_infinite_neg_not_infinitesimal_neg {x y : «exprℝ*»} :\n    infinite_neg x → ¬infinitesimal y → y < 0 → infinite_pos (x * y) := by\n  rw [infinite_neg_iff_infinite_pos_neg, ← neg_pos, ← neg_mul_neg, infinitesimal_neg_iff] <;>\n    exact infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos\n#align infinite_pos_mul_of_infinite_neg_not_infinitesimal_neg infinite_pos_mul_of_infinite_neg_not_infinitesimal_neg\n\n",
 "infinite_pos_mul_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_mul_infinite_pos {x y : «exprℝ*»} : infinite_pos x → infinite_pos y → infinite_pos (x * y) :=\n  fun hx hy => infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos hx (not_infinitesimal_of_infinite_pos hy) (hy 0)\n#align infinite_pos_mul_infinite_pos infinite_pos_mul_infinite_pos\n\n",
 "infinite_pos_mul_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_mul_infinite_neg {x y : «exprℝ*»} : infinite_pos x → infinite_neg y → infinite_neg (x * y) :=\n  fun hx hy => infinite_neg_mul_of_infinite_pos_not_infinitesimal_neg hx (not_infinitesimal_of_infinite_neg hy) (hy 0)\n#align infinite_pos_mul_infinite_neg infinite_pos_mul_infinite_neg\n\n",
 "infinite_pos_iff_infinitesimal_inv_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_iff_infinitesimal_inv_pos {x : «exprℝ*»} : infinite_pos x ↔ infinitesimal x⁻¹ ∧ 0 < x⁻¹ :=\n  ⟨fun hip =>\n    ⟨infinitesimal_def.mpr fun r hr =>\n        ⟨lt_trans (coe_lt_coe.2 (neg_neg_of_pos hr)) (inv_pos.2 (hip 0)),\n          (inv_lt (coe_lt_coe.2 hr) (hip 0)).mp (by convert hip r⁻¹)⟩,\n      inv_pos.2 <| hip 0⟩,\n    fun ⟨hi, hp⟩ r =>\n    @by_cases (r = 0) (↑r < x) (fun h => eq.substr h (inv_pos.mp hp)) fun h =>\n      lt_of_le_of_lt (coe_le_coe.2 (le_abs_self r))\n        ((inv_lt_inv (inv_pos.mp hp) (coe_lt_coe.2 (abs_pos.2 h))).mp\n          ((infinitesimal_def.mp hi) (|r|)⁻¹ (inv_pos.2 (abs_pos.2 h))).2)⟩\n#align infinite_pos_iff_infinitesimal_inv_pos infinite_pos_iff_infinitesimal_inv_pos\n\n",
 "infinite_pos_iff_infinite_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_iff_infinite_of_pos {x : «exprℝ*»} (hp : 0 < x) : infinite_pos x ↔ infinite x := by\n  rw [infinite_pos_iff_infinite_and_pos] <;> exact ⟨fun hI => hI.1, fun hI => ⟨hI, hp⟩⟩\n#align infinite_pos_iff_infinite_of_pos infinite_pos_iff_infinite_of_pos\n\n",
 "infinite_pos_iff_infinite_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_iff_infinite_of_nonneg {x : «exprℝ*»} (hp : 0 ≤ x) : infinite_pos x ↔ infinite x :=\n  or.cases_on (lt_or_eq_of_le hp) infinite_pos_iff_infinite_of_pos fun h => by\n    rw [h.symm] <;>\n      exact ⟨fun hIP => false.elim (not_infinite_zero (or.inl hIP)), fun hI => false.elim (not_infinite_zero hI)⟩\n#align infinite_pos_iff_infinite_of_nonneg infinite_pos_iff_infinite_of_nonneg\n\n",
 "infinite_pos_iff_infinite_neg_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_iff_infinite_neg_neg {x : «exprℝ*»} : infinite_pos x ↔ infinite_neg (-x) :=\n  ⟨infinite_neg_neg_of_infinite_pos, fun hin => neg_neg x ▸ infinite_pos_neg_of_infinite_neg hin⟩\n#align infinite_pos_iff_infinite_neg_neg infinite_pos_iff_infinite_neg_neg\n\n",
 "infinite_pos_iff_infinite_and_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_iff_infinite_and_pos {x : «exprℝ*»} : infinite_pos x ↔ infinite x ∧ 0 < x :=\n  ⟨fun hip => ⟨or.inl hip, hip 0⟩, fun ⟨hi, hp⟩ =>\n    hi.cases_on (fun hip => hip) fun hin => false.elim (not_lt_of_lt hp (hin 0))⟩\n#align infinite_pos_iff_infinite_and_pos infinite_pos_iff_infinite_and_pos\n\n",
 "infinite_pos_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem infinite_pos_def {x : «exprℝ*»} : infinite_pos x ↔ ∀ r : exprℝ, ↑r < x := by rw [iff_eq_eq] <;> rfl\n#align infinite_pos_def infinite_pos_def\n\n",
 "infinite_pos_add_not_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_add_not_infinite_neg {x y : «exprℝ*»} : infinite_pos x → ¬infinite_neg y → infinite_pos (x + y) :=\n  by\n  intro hip hnin r\n  cases' not_forall.mp hnin with r₂ hr₂\n  convert add_lt_add_of_lt_of_le (hip (r + -r₂)) (not_lt.mp hr₂) using 1\n  simp\n#align infinite_pos_add_not_infinite_neg infinite_pos_add_not_infinite_neg\n\n",
 "infinite_pos_add_not_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_add_not_infinite {x y : «exprℝ*»} : infinite_pos x → ¬infinite y → infinite_pos (x + y) :=\n  fun hx hy => infinite_pos_add_not_infinite_neg hx (not_or.mp hy).2\n#align infinite_pos_add_not_infinite infinite_pos_add_not_infinite\n\n",
 "infinite_pos_add_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_add_infinite_pos {x y : «exprℝ*»} : infinite_pos x → infinite_pos y → infinite_pos (x + y) :=\n  fun hx hy => infinite_pos_add_not_infinite_neg hx (not_infinite_neg_of_infinite_pos hy)\n#align infinite_pos_add_infinite_pos infinite_pos_add_infinite_pos\n\n",
 "infinite_pos_abs_iff_infinite_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_pos_abs_iff_infinite_abs {x : «exprℝ*»} : infinite_pos (|x|) ↔ infinite (|x|) :=\n  infinite_pos_iff_infinite_of_nonneg (abs_nonneg _)\n#align infinite_pos_abs_iff_infinite_abs infinite_pos_abs_iff_infinite_abs\n\n",
 "infinite_omega":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.omega -/\ntheorem infinite_omega : infinite (hyperreal.omega) :=\n  (infinite_iff_infinitesimal_inv omega_ne_zero).mpr infinitesimal_epsilon\n#align infinite_omega infinite_omega\n\n",
 "infinite_of_infinitesimal_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_of_infinitesimal_inv {x : «exprℝ*»} (h0 : x ≠ 0) (hi : infinitesimal x⁻¹) : infinite x :=\n  by\n  cases' lt_or_gt_of_ne h0 with hn hp\n  · exact or.inr (infinite_neg_iff_infinitesimal_inv_neg.mpr ⟨hi, inv_lt_zero.mpr hn⟩)\n  · exact or.inl (infinite_pos_iff_infinitesimal_inv_pos.mpr ⟨hi, inv_pos.mpr hp⟩)\n#align infinite_of_infinitesimal_inv infinite_of_infinitesimal_inv\n\n",
 "infinite_neg_of_tendsto_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem infinite_neg_of_tendsto_bot {f : ℕ → exprℝ} (hf : tendsto f at_top at_bot) : infinite_neg (of_seq f) := fun r =>\n  have hf' := tendsto_at_top_at_bot.mp hf\n  Exists.cases_on (hf' (r - 1)) fun i hi =>\n    have hi' : ∀ a : ℕ, r - 1 < f a → a < i := fun a => by rw [← not_le, ← not_le] <;> exact not_imp_not.mpr (hi a)\n    have hS : «expr ᶜ» { a : ℕ | f a < r } ⊆ { a : ℕ | a ≤ i } := by\n      simp only [Set.compl_setOf, not_lt] <;> exact fun a har => le_of_lt (hi' a (lt_of_lt_of_le (sub_one_lt _) har))\n    germ.coe_lt.2 <| mem_hyperfilter_of_finite_compl <| (set.finite_le_nat _).subset hS\n#align infinite_neg_of_tendsto_bot infinite_neg_of_tendsto_bot\n\n",
 "infinite_neg_neg_of_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_neg_of_infinite_pos {x : «exprℝ*»} : infinite_pos x → infinite_neg (-x) := fun hp r =>\n  neg_lt.mp (hp (-r))\n#align infinite_neg_neg_of_infinite_pos infinite_neg_neg_of_infinite_pos\n\n",
 "infinite_neg_mul_of_not_infinitesimal_pos_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_mul_of_not_infinitesimal_pos_infinite_neg {x y : «exprℝ*»} :\n    ¬infinitesimal x → 0 < x → infinite_neg y → infinite_neg (x * y) := fun hx hp hy => by\n  rw [mul_comm] <;> exact infinite_neg_mul_of_infinite_neg_not_infinitesimal_pos hy hx hp\n#align infinite_neg_mul_of_not_infinitesimal_pos_infinite_neg infinite_neg_mul_of_not_infinitesimal_pos_infinite_neg\n\n",
 "infinite_neg_mul_of_not_infinitesimal_neg_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_mul_of_not_infinitesimal_neg_infinite_pos {x y : «exprℝ*»} :\n    ¬infinitesimal x → x < 0 → infinite_pos y → infinite_neg (x * y) := fun hx hp hy => by\n  rw [mul_comm] <;> exact infinite_neg_mul_of_infinite_pos_not_infinitesimal_neg hy hx hp\n#align infinite_neg_mul_of_not_infinitesimal_neg_infinite_pos infinite_neg_mul_of_not_infinitesimal_neg_infinite_pos\n\n",
 "infinite_neg_mul_of_infinite_pos_not_infinitesimal_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_mul_of_infinite_pos_not_infinitesimal_neg {x y : «exprℝ*»} :\n    infinite_pos x → ¬infinitesimal y → y < 0 → infinite_neg (x * y) := by\n  rw [infinite_neg_iff_infinite_pos_neg, ← neg_pos, neg_mul_eq_mul_neg, infinitesimal_neg_iff] <;>\n    exact infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos\n#align infinite_neg_mul_of_infinite_pos_not_infinitesimal_neg infinite_neg_mul_of_infinite_pos_not_infinitesimal_neg\n\n",
 "infinite_neg_mul_of_infinite_neg_not_infinitesimal_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_mul_of_infinite_neg_not_infinitesimal_pos {x y : «exprℝ*»} :\n    infinite_neg x → ¬infinitesimal y → 0 < y → infinite_neg (x * y) := by\n  rw [infinite_neg_iff_infinite_pos_neg, infinite_neg_iff_infinite_pos_neg, neg_mul_eq_neg_mul] <;>\n    exact infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos\n#align infinite_neg_mul_of_infinite_neg_not_infinitesimal_pos infinite_neg_mul_of_infinite_neg_not_infinitesimal_pos\n\n",
 "infinite_neg_mul_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_mul_infinite_pos {x y : «exprℝ*»} : infinite_neg x → infinite_pos y → infinite_neg (x * y) :=\n  fun hx hy => infinite_neg_mul_of_infinite_neg_not_infinitesimal_pos hx (not_infinitesimal_of_infinite_pos hy) (hy 0)\n#align infinite_neg_mul_infinite_pos infinite_neg_mul_infinite_pos\n\n",
 "infinite_neg_mul_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_mul_infinite_neg {x y : «exprℝ*»} : infinite_neg x → infinite_neg y → infinite_pos (x * y) :=\n  fun hx hy => infinite_pos_mul_of_infinite_neg_not_infinitesimal_neg hx (not_infinitesimal_of_infinite_neg hy) (hy 0)\n#align infinite_neg_mul_infinite_neg infinite_neg_mul_infinite_neg\n\n",
 "infinite_neg_iff_infinitesimal_inv_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_iff_infinitesimal_inv_neg {x : «exprℝ*»} : infinite_neg x ↔ infinitesimal x⁻¹ ∧ x⁻¹ < 0 :=\n  ⟨fun hin => by\n    have hin' := infinite_pos_iff_infinitesimal_inv_pos.mp (infinite_pos_neg_of_infinite_neg hin)\n    rwa [infinitesimal_neg_iff, ← neg_pos, neg_inv], fun hin => by\n    rwa [← neg_pos, infinitesimal_neg_iff, neg_inv, ← infinite_pos_iff_infinitesimal_inv_pos, ←\n      infinite_neg_iff_infinite_pos_neg] at hin⟩\n#align infinite_neg_iff_infinitesimal_inv_neg infinite_neg_iff_infinitesimal_inv_neg\n\n",
 "infinite_neg_iff_infinite_pos_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_iff_infinite_pos_neg {x : «exprℝ*»} : infinite_neg x ↔ infinite_pos (-x) :=\n  ⟨infinite_pos_neg_of_infinite_neg, fun hin => neg_neg x ▸ infinite_neg_neg_of_infinite_pos hin⟩\n#align infinite_neg_iff_infinite_pos_neg infinite_neg_iff_infinite_pos_neg\n\n",
 "infinite_neg_iff_infinite_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_iff_infinite_of_neg {x : «exprℝ*»} (hn : x < 0) : infinite_neg x ↔ infinite x := by\n  rw [infinite_neg_iff_infinite_and_neg] <;> exact ⟨fun hI => hI.1, fun hI => ⟨hI, hn⟩⟩\n#align infinite_neg_iff_infinite_of_neg infinite_neg_iff_infinite_of_neg\n\n",
 "infinite_neg_iff_infinite_and_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_iff_infinite_and_neg {x : «exprℝ*»} : infinite_neg x ↔ infinite x ∧ x < 0 :=\n  ⟨fun hip => ⟨or.inr hip, hip 0⟩, fun ⟨hi, hp⟩ =>\n    hi.cases_on (fun hin => false.elim (not_lt_of_lt hp (hin 0))) fun hip => hip⟩\n#align infinite_neg_iff_infinite_and_neg infinite_neg_iff_infinite_and_neg\n\n",
 "infinite_neg_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem infinite_neg_def {x : «exprℝ*»} : infinite_neg x ↔ ∀ r : exprℝ, x < r := by rw [iff_eq_eq] <;> rfl\n#align infinite_neg_def infinite_neg_def\n\n",
 "infinite_neg_add_not_infinite_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_add_not_infinite_pos {x y : «exprℝ*»} : infinite_neg x → ¬infinite_pos y → infinite_neg (x + y) :=\n  by\n  rw [@infinite_neg_iff_infinite_pos_neg x, @infinite_pos_iff_infinite_neg_neg y,\n      @infinite_neg_iff_infinite_pos_neg (x + y), neg_add] <;>\n    exact infinite_pos_add_not_infinite_neg\n#align infinite_neg_add_not_infinite_pos infinite_neg_add_not_infinite_pos\n\n",
 "infinite_neg_add_not_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_add_not_infinite {x y : «exprℝ*»} : infinite_neg x → ¬infinite y → infinite_neg (x + y) :=\n  fun hx hy => infinite_neg_add_not_infinite_pos hx (not_or.mp hy).1\n#align infinite_neg_add_not_infinite infinite_neg_add_not_infinite\n\n",
 "infinite_neg_add_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_neg_add_infinite_neg {x y : «exprℝ*»} : infinite_neg x → infinite_neg y → infinite_neg (x + y) :=\n  fun hx hy => infinite_neg_add_not_infinite_pos hx (not_infinite_pos_of_infinite_neg hy)\n#align infinite_neg_add_infinite_neg infinite_neg_add_infinite_neg\n\n",
 "infinite_mul_of_not_infinitesimal_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_mul_of_not_infinitesimal_infinite {x y : «exprℝ*»} :\n    ¬infinitesimal x → infinite y → infinite (x * y) := fun hx hy => by\n  rw [mul_comm] <;> exact infinite_mul_of_infinite_not_infinitesimal hy hx\n#align infinite_mul_of_not_infinitesimal_infinite infinite_mul_of_not_infinitesimal_infinite\n\n",
 "infinite_mul_of_infinite_not_infinitesimal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_mul_of_infinite_not_infinitesimal {x y : «exprℝ*»} :\n    infinite x → ¬infinitesimal y → infinite (x * y) := fun hx hy =>\n  have h0 : y < 0 ∨ 0 < y := lt_or_gt_of_ne fun H0 => hy (eq.substr H0 (is_st_refl_real 0))\n  or.dcases_on hx\n    (or.dcases_on h0 (fun H0 Hx => or.inr (infinite_neg_mul_of_infinite_pos_not_infinitesimal_neg Hx hy H0))\n      fun H0 Hx => or.inl (infinite_pos_mul_of_infinite_pos_not_infinitesimal_pos Hx hy H0))\n    (or.dcases_on h0 (fun H0 Hx => or.inl (infinite_pos_mul_of_infinite_neg_not_infinitesimal_neg Hx hy H0))\n      fun H0 Hx => or.inr (infinite_neg_mul_of_infinite_neg_not_infinitesimal_pos Hx hy H0))\n#align infinite_mul_of_infinite_not_infinitesimal infinite_mul_of_infinite_not_infinitesimal\n\n",
 "infinite_iff_not_exists_st":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem infinite_iff_not_exists_st {x : «exprℝ*»} : infinite x ↔ ¬∃ r : exprℝ, is_st x r :=\n  iff_not_comm.mp exists_st_iff_not_infinite\n#align infinite_iff_not_exists_st infinite_iff_not_exists_st\n\n",
 "infinite_iff_infinitesimal_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_iff_infinitesimal_inv {x : «exprℝ*»} (h0 : x ≠ 0) : infinite x ↔ infinitesimal x⁻¹ :=\n  ⟨infinitesimal_inv_of_infinite, infinite_of_infinitesimal_inv h0⟩\n#align infinite_iff_infinitesimal_inv infinite_iff_infinitesimal_inv\n\n",
 "infinite_iff_infinite_pos_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_iff_infinite_pos_abs {x : «exprℝ*»} : infinite x ↔ infinite_pos (|x|) :=\n  ⟨fun hi d =>\n    or.cases_on hi (fun hip => by rw [abs_of_pos (hip 0)] <;> exact hip d) fun hin => by\n      rw [abs_of_neg (hin 0)] <;> exact lt_neg.mp (hin (-d)),\n    fun hipa => by\n    rcases lt_trichotomy x 0 with (h | h | h)\n    · exact or.inr (infinite_neg_iff_infinite_pos_neg.mpr (by rwa [abs_of_neg h] at hipa))\n    · exact false.elim (ne_zero_of_infinite (or.inl (by rw [h] <;> rwa [h, abs_zero] at hipa)) h)\n    · exact or.inl (by rwa [abs_of_pos h] at hipa)⟩\n#align infinite_iff_infinite_pos_abs infinite_iff_infinite_pos_abs\n\n",
 "infinite_iff_infinite_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_iff_infinite_neg {x : «exprℝ*»} : infinite x ↔ infinite (-x) :=\n  ⟨fun hi =>\n    or.cases_on hi (fun hip => or.inr (infinite_neg_neg_of_infinite_pos hip)) fun hin =>\n      or.inl (infinite_pos_neg_of_infinite_neg hin),\n    fun hi =>\n    or.cases_on hi (fun hipn => or.inr (infinite_neg_iff_infinite_pos_neg.mpr hipn)) fun hinp =>\n      or.inl (infinite_pos_iff_infinite_neg_neg.mpr hinp)⟩\n#align infinite_iff_infinite_neg infinite_iff_infinite_neg\n\n",
 "infinite_iff_infinite_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_iff_infinite_abs {x : «exprℝ*»} : infinite x ↔ infinite (|x|) := by\n  rw [← infinite_pos_iff_infinite_of_nonneg (abs_nonneg _), infinite_iff_infinite_pos_abs]\n#align infinite_iff_infinite_abs infinite_iff_infinite_abs\n\n",
 "infinite_iff_abs_lt_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem infinite_iff_abs_lt_abs {x : «exprℝ*»} : infinite x ↔ ∀ r : exprℝ, (|r| : «exprℝ*») < |x| :=\n  ⟨fun hI r => coe_abs r ▸ infinite_iff_infinite_pos_abs.mp hI (|r|), fun hR =>\n    or.cases_on (max_choice x (-x)) (fun h => or.inl fun r => lt_of_le_of_lt (le_abs_self _) (h ▸ hR r)) fun h =>\n      or.inr fun r => neg_lt_neg_iff.mp <| lt_of_le_of_lt (neg_le_abs_self _) (h ▸ hR r)⟩\n#align infinite_iff_abs_lt_abs infinite_iff_abs_lt_abs\n\n",
 "hyperreal_coe_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\nprivate theorem hyperreal_coe_pos {r : exprℝ} : 0 < r → 0 < (r : «exprℝ*») :=\n  hyperreal.coe_pos.2\n#align hyperreal_coe_pos hyperreal_coe_pos\n\n",
 "hyperreal_coe_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\nprivate theorem hyperreal_coe_nonneg {r : exprℝ} : 0 ≤ r → 0 ≤ (r : «exprℝ*») :=\n  hyperreal.coe_nonneg.2\n#align hyperreal_coe_nonneg hyperreal_coe_nonneg\n\n",
 "hyperreal_coe_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\nprivate theorem hyperreal_coe_ne_zero {r : exprℝ} : r ≠ 0 → (r : «exprℝ*») ≠ 0 :=\n  hyperreal.coe_ne_zero.2\n#align hyperreal_coe_ne_zero hyperreal_coe_ne_zero\n\n",
 "gt_of_tendsto_zero_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem gt_of_tendsto_zero_of_neg {f : ℕ → exprℝ} (hf : tendsto f at_top ((nhds) 0)) :\n    ∀ {r : exprℝ}, r < 0 → (r : «exprℝ*») < of_seq f := fun r hr => by\n  rw [← neg_neg r, coe_neg] <;> exact neg_lt_of_tendsto_zero_of_pos hf (neg_pos.mpr hr)\n#align gt_of_tendsto_zero_of_neg gt_of_tendsto_zero_of_neg\n\n",
 "gt_of_neg_of_infinitesimal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem gt_of_neg_of_infinitesimal {x : «exprℝ*»} : infinitesimal x → ∀ r : exprℝ, r < 0 → ↑r < x := fun hi r hr => by\n  convert ((infinitesimal_def.mp hi) (-r) (neg_pos.mpr hr)).1 <;> exact (neg_neg ↑r).symm\n#align gt_of_neg_of_infinitesimal gt_of_neg_of_infinitesimal\n\n",
 "exists_st_of_not_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem exists_st_of_not_infinite {x : «exprℝ*»} (hni : ¬infinite x) : ∃ r : exprℝ, is_st x r :=\n  ⟨supₛ { y : exprℝ | (y : «exprℝ*») < x }, is_st_Sup hni⟩\n#align exists_st_of_not_infinite exists_st_of_not_infinite\n\n",
 "exists_st_iff_not_infinite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem exists_st_iff_not_infinite {x : «exprℝ*»} : (∃ r : exprℝ, is_st x r) ↔ ¬infinite x :=\n  ⟨not_infinite_of_exists_st, exists_st_of_not_infinite⟩\n#align exists_st_iff_not_infinite exists_st_iff_not_infinite\n\n",
 "eq_of_is_st_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem eq_of_is_st_real {r s : exprℝ} : is_st r s → r = s :=\n  is_st_unique (is_st_refl_real r)\n#align eq_of_is_st_real eq_of_is_st_real\n\n",
 "epsilon_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.epsilon -/\ntheorem epsilon_pos : 0 < hyperreal.epsilon :=\n  inv_pos_of_pos omega_pos\n#align epsilon_pos epsilon_pos\n\n",
 "epsilon_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.epsilon -/\ntheorem epsilon_ne_zero : hyperreal.epsilon ≠ 0 :=\n  epsilon_pos.ne'\n#align epsilon_ne_zero epsilon_ne_zero\n\n",
 "epsilon_mul_omega":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.omega -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.epsilon -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.omega -/\ntheorem epsilon_mul_omega : hyperreal.epsilon * hyperreal.omega = 1 :=\n  @inv_mul_cancel _ _ (hyperreal.omega) omega_ne_zero\n#align epsilon_mul_omega epsilon_mul_omega\n\n",
 "epsilon_lt_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `hyperreal.epsilon -/\ntheorem epsilon_lt_pos (x : exprℝ) : 0 < x → hyperreal.epsilon < x :=\n  lt_of_tendsto_zero_of_pos tendsto_inverse_at_top_nhds_0_nat\n#align epsilon_lt_pos epsilon_lt_pos\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_zero : ↑(0 : exprℝ) = (0 : «exprℝ*») :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_sub (x y : exprℝ) : ↑(x - y) = (x - y : «exprℝ*») :=\n  rfl\n#align coe_sub coe_sub\n\n",
 "coe_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_pos {x : exprℝ} : 0 < (x : «exprℝ*») ↔ 0 < x :=\n  coe_lt_coe\n#align coe_pos coe_pos\n\n",
 "coe_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_one : ↑(1 : exprℝ) = (1 : «exprℝ*») :=\n  rfl\n#align coe_one coe_one\n\n",
 "coe_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_nonneg {x : exprℝ} : 0 ≤ (x : «exprℝ*») ↔ 0 ≤ x :=\n  coe_le_coe\n#align coe_nonneg coe_nonneg\n\n",
 "coe_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_neg (x : exprℝ) : ↑(-x) = (-x : «exprℝ*») :=\n  rfl\n#align coe_neg coe_neg\n\n",
 "coe_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[norm_cast]\ntheorem coe_ne_zero {x : exprℝ} : (x : «exprℝ*») ≠ 0 ↔ x ≠ 0 :=\n  coe_ne_coe\n#align coe_ne_zero coe_ne_zero\n\n",
 "coe_ne_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[norm_cast]\ntheorem coe_ne_one {x : exprℝ} : (x : «exprℝ*») ≠ 1 ↔ x ≠ 1 :=\n  coe_ne_coe\n#align coe_ne_one coe_ne_one\n\n",
 "coe_ne_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\ntheorem coe_ne_coe {x y : exprℝ} : (x : «exprℝ*») ≠ y ↔ x ≠ y :=\n  coe_eq_coe.not\n#align coe_ne_coe coe_ne_coe\n\n",
 "coe_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_mul (x y : exprℝ) : ↑(x * y) = (x * y : «exprℝ*») :=\n  rfl\n#align coe_mul coe_mul\n\n",
 "coe_min":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_min (x y : exprℝ) : ((min x y : exprℝ) : «exprℝ*») = min x y :=\n  germ.const_min _ _\n#align coe_min coe_min\n\n",
 "coe_max":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_max (x y : exprℝ) : ((max x y : exprℝ) : «exprℝ*») = max x y :=\n  germ.const_max _ _\n#align coe_max coe_max\n\n",
 "coe_lt_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_lt_coe {x y : exprℝ} : (x : «exprℝ*») < y ↔ x < y :=\n  germ.const_lt_iff\n#align coe_lt_coe coe_lt_coe\n\n",
 "coe_le_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_le_coe {x y : exprℝ} : (x : «exprℝ*») ≤ y ↔ x ≤ y :=\n  germ.const_le_iff\n#align coe_le_coe coe_le_coe\n\n",
 "coe_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_inv (x : exprℝ) : ↑x⁻¹ = (x⁻¹ : «exprℝ*») :=\n  rfl\n#align coe_inv coe_inv\n\n",
 "coe_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_eq_zero {x : exprℝ} : (x : «exprℝ*») = 0 ↔ x = 0 :=\n  coe_eq_coe\n#align coe_eq_zero coe_eq_zero\n\n",
 "coe_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_eq_one {x : exprℝ} : (x : «exprℝ*») = 1 ↔ x = 1 :=\n  coe_eq_coe\n#align coe_eq_one coe_eq_one\n\n",
 "coe_eq_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/-\nCopyright (c) 2019 Abhimanyu Pallavi Sudhir. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Abhimanyu Pallavi Sudhir\n-/\n@[simp, norm_cast]\ntheorem coe_eq_coe {x y : exprℝ} : (x : «exprℝ*») = y ↔ x = y :=\n  germ.const_inj\n#align coe_eq_coe coe_eq_coe\n\n",
 "coe_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_div (x y : exprℝ) : ↑(x / y) = (x / y : «exprℝ*») :=\n  rfl\n#align coe_div coe_div\n\n",
 "coe_bit1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_bit1 (x : exprℝ) : ↑(bit1 x) = (bit1 x : «exprℝ*») :=\n  rfl\n#align coe_bit1 coe_bit1\n\n",
 "coe_bit0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_bit0 (x : exprℝ) : ↑(bit0 x) = (bit0 x : «exprℝ*») :=\n  rfl\n#align coe_bit0 coe_bit0\n\n",
 "coe_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_add (x y : exprℝ) : ↑(x + y) = (x + y : «exprℝ*») :=\n  rfl\n#align coe_add coe_add\n\n",
 "coe_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n@[simp, norm_cast]\ntheorem coe_abs (x : exprℝ) : ((|x| : exprℝ) : «exprℝ*») = |x| :=\n  const_abs x\n#align coe_abs coe_abs\n\n",
 "abs_lt_real_iff_infinitesimal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℝ*» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem abs_lt_real_iff_infinitesimal {x : «exprℝ*»} : infinitesimal x ↔ ∀ r : exprℝ, r ≠ 0 → |x| < |r| :=\n  ⟨fun hi r hr => abs_lt.mpr (by rw [← coe_abs] <;> exact infinitesimal_def.mp hi (|r|) (abs_pos.2 hr)), fun hR =>\n    infinitesimal_def.mpr fun r hr => abs_lt.mp <| (abs_of_pos <| coe_pos.2 hr) ▸ hR r <| ne_of_gt hr⟩\n#align abs_lt_real_iff_infinitesimal abs_lt_real_iff_infinitesimal\n\n"}