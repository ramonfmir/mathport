{"one_sub_gold_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\ntheorem one_sub_gold_conj : 1 - golden_ratio = golden_conj := by linarith [gold_add_gold_conj]\n#align one_sub_gold_conj one_sub_gold_conj\n\n",
 "one_sub_gold":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\ntheorem one_sub_gold : 1 - golden_conj = golden_ratio := by linarith [gold_add_gold_conj]\n#align one_sub_gold one_sub_gold\n\n",
 "one_lt_gold":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\ntheorem one_lt_gold : 1 < golden_ratio :=\n  by\n  refine' lt_of_mul_lt_mul_left _ (le_of_lt gold_pos)\n  simp [← sq, gold_pos, zero_lt_one]\n#align one_lt_gold one_lt_gold\n\n",
 "neg_one_lt_gold_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\ntheorem neg_one_lt_gold_conj : -1 < golden_conj :=\n  by\n  rw [neg_lt, ← inv_gold]\n  exact inv_lt_one one_lt_gold\n#align neg_one_lt_gold_conj neg_one_lt_gold_conj\n\n",
 "inv_gold_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/-- The opposite of the golden ratio is the inverse of its conjugate. -/\ntheorem inv_gold_conj : (golden_conj)⁻¹ = -golden_ratio :=\n  by\n  rw [inv_eq_iff_eq_inv, ← neg_inv, ← neg_eq_iff_eq_neg]\n  exact inv_gold.symm\n#align inv_gold_conj inv_gold_conj\n\n",
 "inv_gold":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n/-\nCopyright (c) 2020 Anatole Dedecker. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Anatole Dedecker, Alexey Soloyev, Junyan Xu\n-/\n/-- The inverse of the golden ratio is the opposite of its conjugate. -/\ntheorem inv_gold : (golden_ratio)⁻¹ = -golden_conj :=\n  by\n  have : 1 + Real.sqrt 5 ≠ 0 := ne_of_gt (add_pos (by norm_num) <| real.sqrt_pos.mpr (by norm_num))\n  field_simp [sub_mul, mul_add]\n  norm_num\n#align inv_gold inv_gold\n\n",
 "gold_sub_gold_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n@[simp]\ntheorem gold_sub_gold_conj : golden_ratio - golden_conj = Real.sqrt 5 :=\n  by\n  rw [golden_ratio, golden_conj]\n  ring\n#align gold_sub_gold_conj gold_sub_gold_conj\n\n",
 "gold_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n@[simp]\ntheorem gold_sq : golden_ratio ^ 2 = golden_ratio + 1 :=\n  by\n  rw [golden_ratio, ← sub_eq_zero]\n  ring\n  rw [Real.sq_sqrt] <;> norm_num\n#align gold_sq gold_sq\n\n",
 "gold_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\ntheorem gold_pos : 0 < golden_ratio :=\n  mul_pos (by apply add_pos <;> norm_num) <| inv_pos.2 zero_lt_two\n#align gold_pos gold_pos\n\n",
 "gold_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\ntheorem gold_ne_zero : golden_ratio ≠ 0 :=\n  ne_of_gt gold_pos\n#align gold_ne_zero gold_ne_zero\n\n",
 "gold_mul_gold_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n@[simp]\ntheorem gold_mul_gold_conj : golden_ratio * golden_conj = -1 :=\n  by\n  field_simp\n  rw [← sq_sub_sq]\n  norm_num\n#align gold_mul_gold_conj gold_mul_gold_conj\n\n",
 "gold_irrational":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/-- The golden ratio is irrational. -/\ntheorem gold_irrational : irrational (golden_ratio) :=\n  by\n  have := nat.prime.irrational_sqrt (show Nat.Prime 5 by norm_num)\n  have := this.rat_add 1\n  have := this.rat_mul (show (0.5 : exprℚ) ≠ 0 by norm_num)\n  convert this\n  field_simp\n#align gold_irrational gold_irrational\n\n",
 "gold_conj_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n@[simp]\ntheorem gold_conj_sq : golden_conj ^ 2 = golden_conj + 1 :=\n  by\n  rw [golden_conj, ← sub_eq_zero]\n  ring\n  rw [Real.sq_sqrt] <;> norm_num\n#align gold_conj_sq gold_conj_sq\n\n",
 "gold_conj_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\ntheorem gold_conj_neg : golden_conj < 0 := by linarith [one_sub_gold_conj, one_lt_gold]\n#align gold_conj_neg gold_conj_neg\n\n",
 "gold_conj_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\ntheorem gold_conj_ne_zero : golden_conj ≠ 0 :=\n  ne_of_lt gold_conj_neg\n#align gold_conj_ne_zero gold_conj_ne_zero\n\n",
 "gold_conj_mul_gold":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n@[simp]\ntheorem gold_conj_mul_gold : golden_conj * golden_ratio = -1 :=\n  by\n  rw [mul_comm]\n  exact gold_mul_gold_conj\n#align gold_conj_mul_gold gold_conj_mul_gold\n\n",
 "gold_conj_irrational":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n/-- The conjugate of the golden ratio is irrational. -/\ntheorem gold_conj_irrational : irrational (golden_conj) :=\n  by\n  have := nat.prime.irrational_sqrt (show Nat.Prime 5 by norm_num)\n  have := this.rat_sub 1\n  have := this.rat_mul (show (0.5 : exprℚ) ≠ 0 by norm_num)\n  convert this\n  field_simp\n#align gold_conj_irrational gold_conj_irrational\n\n",
 "gold_add_gold_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n@[simp]\ntheorem gold_add_gold_conj : golden_ratio + golden_conj = 1 :=\n  by\n  rw [golden_ratio, golden_conj]\n  ring\n#align gold_add_gold_conj gold_add_gold_conj\n\n",
 "geom_gold_is_sol_fib_rec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/-- The geometric sequence `λ n, φ^n` is a solution of `fib_rec`. -/\ntheorem geom_gold_is_sol_fib_rec : fib_rec.is_solution (pow (golden_ratio)) :=\n  by\n  rw [fib_rec.geom_sol_iff_root_char_poly, fib_rec_char_poly_eq]\n  simp [sub_eq_zero]\n#align geom_gold_is_sol_fib_rec geom_gold_is_sol_fib_rec\n\n",
 "geom_gold_conj_is_sol_fib_rec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n/-- The geometric sequence `λ n, ψ^n` is a solution of `fib_rec`. -/\ntheorem geom_gold_conj_is_sol_fib_rec : fib_rec.is_solution (pow (golden_conj)) :=\n  by\n  rw [fib_rec.geom_sol_iff_root_char_poly, fib_rec_char_poly_eq]\n  simp [sub_eq_zero]\n#align geom_gold_conj_is_sol_fib_rec geom_gold_conj_is_sol_fib_rec\n\n",
 "fib_rec_char_poly_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-- The characteristic polynomial of `fib_rec` is `X² - (X + 1)`. -/\ntheorem fib_rec_char_poly_eq {β : Type _} [CommRing β] : fib_rec.char_poly = X ^ 2 - (X + (1 : polynomial β)) :=\n  by\n  rw [fib_rec, LinearRecurrence.charPoly]\n  simp [Finset.sum_fin_eq_sum_range, Finset.sum_range_succ', ← smul_X_eq_monomial]\n#align fib_rec_char_poly_eq fib_rec_char_poly_eq\n\n",
 "fib_is_sol_fib_rec":
 "/-- As expected, the Fibonacci sequence is a solution of `fib_rec`. -/\ntheorem fib_is_sol_fib_rec : fib_rec.is_solution (fun x => x.fib : ℕ → α) :=\n  by\n  rw [fib_rec]\n  intro n\n  simp only\n  rw [Nat.fib_add_two, add_comm]\n  simp [Finset.sum_fin_eq_sum_range, Finset.sum_range_succ']\n#align fib_is_sol_fib_rec fib_is_sol_fib_rec\n\n",
 "coe_fib_eq'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n/-- Binet's formula as a function equality. -/\ntheorem real.coe_fib_eq' :\n    (fun n => Nat.fib n : ℕ → exprℝ) = fun n => (golden_ratio ^ n - golden_conj ^ n) / Real.sqrt 5 :=\n  by\n  rw [fib_rec.sol_eq_of_eq_init]\n  · intro i hi\n    fin_cases hi\n    · simp\n    · simp only [golden_ratio, golden_conj]\n      ring\n      rw [mul_inv_cancel] <;> norm_num\n  · exact fib_is_sol_fib_rec\n  · ring_nf\n    exact\n      (@fib_rec (exprℝ) _).sol_space.sub_mem\n        (Submodule.smul_mem fib_rec.sol_space (Real.sqrt 5)⁻¹ geom_gold_is_sol_fib_rec)\n        (Submodule.smul_mem fib_rec.sol_space (Real.sqrt 5)⁻¹ geom_gold_conj_is_sol_fib_rec)\n#align real.coe_fib_eq' real.coe_fib_eq'\n\n",
 "coe_fib_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_ratio -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `golden_conj -/\n/-- Binet's formula as a dependent equality. -/\ntheorem real.coe_fib_eq : ∀ n, (Nat.fib n : exprℝ) = (golden_ratio ^ n - golden_conj ^ n) / Real.sqrt 5 := by\n  rw [← Function.funext_iff, real.coe_fib_eq']\n#align real.coe_fib_eq real.coe_fib_eq\n\n"}