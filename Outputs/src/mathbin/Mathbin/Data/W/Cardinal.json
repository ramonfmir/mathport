{"cardinal_mk_le_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/-- `#(W_type β)` is the least cardinal `κ` such that `sum (λ a : α, κ ^ #(β a)) ≤ κ` -/\ntheorem cardinal_mk_le_of_le {κ : Cardinal.{u}} (hκ : (Sum fun a : α => κ ^ cardinal.mk (β a)) ≤ κ) :\n    cardinal.mk (WType β) ≤ κ := by\n  induction' κ using Cardinal.inductionOn with γ\n  simp only [Cardinal.power_def, ← Cardinal.mk_sigma, Cardinal.le_def] at hκ\n  cases hκ\n  exact Cardinal.mk_le_of_injective (elim_injective _ hκ.1 hκ.2)\n#align cardinal_mk_le_of_le cardinal_mk_le_of_le\n\n",
 "cardinal_mk_le_max_aleph_0_of_finite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.aleph_0 -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.aleph_0 -/\n/-- If, for any `a : α`, `β a` is finite, then the cardinality of `W_type β`\n  is at most the maximum of the cardinality of `α` and `ℵ₀`  -/\ntheorem cardinal_mk_le_max_aleph_0_of_finite [∀ a, Finite (β a)] :\n    cardinal.mk (WType β) ≤ max (cardinal.mk α) (cardinal.aleph_0) :=\n  (isEmpty_or_nonempty α).elim\n    (by\n      intro h\n      rw [Cardinal.mk_eq_zero (WType β)]\n      exact zero_le _)\n    fun hn =>\n    let m := max (cardinal.mk α) (cardinal.aleph_0)\n    cardinal_mk_le_of_le <|\n      calc\n        (Cardinal.sum fun a => m ^ cardinal.mk (β a)) ≤\n            cardinal.mk α *\n              «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n                (m ^ cardinal.mk (β a)) :=\n          Cardinal.sum_le_supᵢ _\n        _ ≤\n            m *\n              «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n                (m ^ cardinal.mk (β a)) :=\n          (mul_le_mul' (le_max_left _ _) le_rfl)\n        _ = m :=\n          mul_eq_left.{u} (le_max_right _ _) (csupᵢ_le' fun i => pow_le (le_max_right _ _) (lt_aleph0_of_finite _)) <|\n            pos_iff_ne_zero.1 <|\n              Order.succ_le_iff.1\n                (by\n                  rw [succ_zero]\n                  obtain ⟨a⟩ : Nonempty α; exact hn\n                  refine' le_trans _ (le_csupᵢ (bddAbove_range.{u, u} _) a)\n                  rw [← power_zero]\n                  exact power_le_power_left (pos_iff_ne_zero.1 (aleph_0_pos.trans_le (le_max_right _ _))) (zero_le _))\n        \n#align cardinal_mk_le_max_aleph_0_of_finite cardinal_mk_le_max_aleph_0_of_finite\n\n",
 "cardinal_mk_eq_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.mk -/\n/-\nCopyright (c) 2021 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes\n-/\ntheorem cardinal_mk_eq_sum : cardinal.mk (WType β) = Sum fun a : α => cardinal.mk (WType β) ^ cardinal.mk (β a) :=\n  by\n  simp only [Cardinal.power_def, ← Cardinal.mk_sigma]\n  exact mk_congr (equiv_sigma β)\n#align cardinal_mk_eq_sum cardinal_mk_eq_sum\n\n"}