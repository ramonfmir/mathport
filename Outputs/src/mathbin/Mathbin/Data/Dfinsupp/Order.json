{"tsub_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\ntheorem tsub_apply\n    (f g : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i))\n    (i : ι) : (f - g) i = f i - g i :=\n  zipWith_apply _ _ _ _ _\n#align tsub_apply tsub_apply\n\n",
 "support_tsub":
 "theorem support_tsub : (f - g).support ⊆ f.support := by\n  simp (config := { contextual := true }) only [subset_iff, tsub_eq_zero_iff_le, mem_support_iff, ne.def, coe_tsub,\n    Pi.sub_apply, not_imp_not, zero_le, imp_true_iff]\n#align support_tsub support_tsub\n\n",
 "support_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem support_sup : («expr ⊔ » f g).support = f.support ∪ g.support :=\n  by\n  ext\n  simp only [Finset.mem_union, mem_support_iff, sup_apply, ne.def, ← bot_eq_zero]\n  rw [_root_.sup_eq_bot_iff, not_and_or]\n#align support_sup support_sup\n\n",
 "support_inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem support_inf : («expr ⊓ » f g).support = f.support ∩ g.support :=\n  by\n  ext\n  simp only [inf_apply, mem_support_iff, ne.def, Finset.mem_union, Finset.mem_filter, Finset.mem_inter]\n  simp only [inf_eq_min, ← nonpos_iff_eq_zero, min_le_iff, not_or]\n#align support_inf support_inf\n\n",
 "sup_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem sup_apply [∀ i, SemilatticeSup (α i)]\n    (f g : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i))\n    (i : ι) : («expr ⊔ » f g) i = «expr ⊔ » (f i) (g i) :=\n  zipWith_apply _ _ _ _ _\n#align sup_apply sup_apply\n\n",
 "subset_support_tsub":
 "theorem subset_support_tsub : f.support \\ g.support ⊆ (f - g).support := by\n  simp (config := { contextual := true }) [subset_iff]\n#align subset_support_tsub subset_support_tsub\n\n",
 "single_tsub":
 "@[simp]\ntheorem single_tsub : single i (a - b) = single i a - single i b :=\n  by\n  ext j\n  obtain rfl | h := eq_or_ne i j\n  · rw [tsub_apply, single_eq_same, single_eq_same, single_eq_same]\n  · rw [tsub_apply, single_eq_of_ne h, single_eq_of_ne h, single_eq_of_ne h, tsub_self]\n#align single_tsub single_tsub\n\n",
 "single_le_iff":
 "@[simp]\ntheorem single_le_iff {i : ι} {a : α i} : single i a ≤ f ↔ a ≤ f i :=\n  (le_iff' support_single_subset).trans <| by simp\n#align single_le_iff single_le_iff\n\n",
 "order_embedding_to_fun_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n@[simp]\ntheorem order_embedding_to_fun_apply\n    {f : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i)}\n    {i : ι} : orderEmbeddingToFun f i = f i :=\n  rfl\n#align order_embedding_to_fun_apply order_embedding_to_fun_apply\n\n",
 "le_iff'":
 "theorem le_iff' (hf : f.support ⊆ s) : f ≤ g ↔ ∀ i ∈ s, f i ≤ g i :=\n  ⟨fun h s hs => h s, fun h s =>\n    if H : s ∈ f.support then h s (hf H) else (not_mem_support_iff.1 H).symm ▸ zero_le (g s)⟩\n#align le_iff' le_iff'\n\n",
 "le_iff":
 "theorem le_iff : f ≤ g ↔ ∀ i ∈ f.support, f i ≤ g i :=\n  le_iff' <| Subset.refl _\n#align le_iff le_iff\n\n",
 "le_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n/-\nCopyright (c) 2021 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\ntheorem le_def\n    {f g : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i)} :\n    f ≤ g ↔ ∀ i, f i ≤ g i :=\n  iff.rfl\n#align le_def le_def\n\n",
 "inf_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊓ » -/\n@[simp]\ntheorem inf_apply [∀ i, SemilatticeInf (α i)]\n    (f g : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i))\n    (i : ι) : («expr ⊓ » f g) i = «expr ⊓ » (f i) (g i) :=\n  zipWith_apply _ _ _ _ _\n#align inf_apply inf_apply\n\n",
 "disjoint_iff":
 "#print disjoint_iff /-\ntheorem disjoint_iff : Disjoint f g ↔ Disjoint f.support g.support :=\n  by\n  rw [disjoint_iff, disjoint_iff, Dfinsupp.bot_eq_zero, ← Dfinsupp.support_eq_empty, Dfinsupp.support_inf]\n  rfl\n#align disjoint_iff disjoint_iff\n-/\n\n",
 "coe_tsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_tsub\n    (f g : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i)) :\n    «expr⇑ » (f - g) = f - g := by\n  ext i\n  exact tsub_apply f g i\n#align coe_tsub coe_tsub\n\n",
 "coe_fn_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\ntheorem coe_fn_mono :\n    Monotone\n      (coe_fn :\n        «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i) →\n          ∀ i, α i) :=\n  fun f g => le_def.1\n#align coe_fn_mono coe_fn_mono\n\n",
 "bot_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n#print bot_eq_zero /-\nprotected theorem bot_eq_zero :\n    («expr⊥» :\n        «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i)) =\n      0 :=\n  rfl\n#align bot_eq_zero bot_eq_zero\n-/\n\n",
 "add_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprΠ₀ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , » -/\n#print add_eq_zero_iff /-\n@[simp]\ntheorem add_eq_zero_iff\n    (f g : «exprΠ₀ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«exprΠ₀ , »\" (α i)) :\n    f + g = 0 ↔ f = 0 ∧ g = 0 := by simp [ext_iff, forall_and]\n#align add_eq_zero_iff add_eq_zero_iff\n-/\n\n"}