{"to_nat_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem to_nat_top : toNat («expr⊤») = 0 :=\n  rfl\n#align to_nat_top to_nat_top\n\n",
 "to_nat_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\ntheorem to_nat_sub {n : «exprℕ∞»} (hn : n ≠ «expr⊤») (m : «exprℕ∞») : toNat (m - n) = toNat m - toNat n :=\n  by\n  lift n to ℕ using hn\n  induction m using WithTop.recTopCoe\n  · rw [WithTop.top_sub_coe, to_nat_top, zero_tsub]\n  · rw [← coe_sub, to_nat_coe, to_nat_coe, to_nat_coe]\n#align to_nat_sub to_nat_sub\n\n",
 "to_nat_eq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\ntheorem to_nat_eq_iff {m : «exprℕ∞»} {n : ℕ} (hn : n ≠ 0) : m.to_nat = n ↔ m = n := by\n  induction m using WithTop.recTopCoe <;> simp [hn.symm]\n#align to_nat_eq_iff to_nat_eq_iff\n\n",
 "to_nat_coe":
 "@[simp]\ntheorem to_nat_coe (n : ℕ) : toNat n = n :=\n  rfl\n#align to_nat_coe to_nat_coe\n\n",
 "to_nat_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem to_nat_add {m n : «exprℕ∞»} (hm : m ≠ «expr⊤») (hn : n ≠ «expr⊤») : toNat (m + n) = toNat m + toNat n :=\n  by\n  lift m to ℕ using hm\n  lift n to ℕ using hn\n  rfl\n#align to_nat_add to_nat_add\n\n",
 "succ_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n@[simp]\ntheorem succ_def (m : «exprℕ∞») : Order.succ m = m + 1 := by cases m <;> rfl\n#align succ_def succ_def\n\n",
 "one_le_iff_pos":
 "theorem one_le_iff_pos : 1 ≤ n ↔ 0 < n :=\n  add_one_le_iff WithTop.zero_ne_top\n#align one_le_iff_pos one_le_iff_pos\n\n",
 "one_le_iff_ne_zero":
 "theorem one_le_iff_ne_zero : 1 ≤ n ↔ n ≠ 0 :=\n  one_le_iff_pos.trans pos_iff_ne_zero\n#align one_le_iff_ne_zero one_le_iff_ne_zero\n\n",
 "nat_induction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[elab_as_elim]\ntheorem nat_induction {P : «exprℕ∞» → Prop} (a : «exprℕ∞») (h0 : P 0) (hsuc : ∀ n : ℕ, P n → P n.succ)\n    (htop : (∀ n : ℕ, P n) → P («expr⊤»)) : P a :=\n  by\n  have A : ∀ n : ℕ, P n := fun n => nat.rec_on n h0 hsuc\n  cases a\n  exacts[htop A, A a]\n#align nat_induction nat_induction\n\n",
 "le_of_lt_add_one":
 "theorem le_of_lt_add_one (h : m < n + 1) : m ≤ n :=\n  Order.le_of_lt_succ <| n.succ_def.symm ▸ h\n#align le_of_lt_add_one le_of_lt_add_one\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n/-\nCopyright (c) 2022 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\n-- eligible for `dsimp`\n@[simp, nolint simp_nf, norm_cast]\ntheorem coe_zero : ((0 : ℕ) : «exprℕ∞») = 0 :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_to_nat_le_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\ntheorem coe_to_nat_le_self (n : «exprℕ∞») : ↑(toNat n) ≤ n :=\n  WithTop.recTopCoe le_top (fun k => le_rfl) n\n#align coe_to_nat_le_self coe_to_nat_le_self\n\n",
 "coe_to_nat_eq_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem coe_to_nat_eq_self : ↑n.to_nat = n ↔ n ≠ «expr⊤» :=\n  WithTop.recTopCoe (by simp) (by simp) n\n#align coe_to_nat_eq_self coe_to_nat_eq_self\n\n",
 "coe_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n@[simp, norm_cast]\ntheorem coe_sub (m n : ℕ) : ↑(m - n) = (m - n : «exprℕ∞») :=\n  rfl\n#align coe_sub coe_sub\n\n",
 "coe_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n@[simp, norm_cast]\ntheorem coe_one : ((1 : ℕ) : «exprℕ∞») = 1 :=\n  rfl\n#align coe_one coe_one\n\n",
 "coe_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n@[simp, norm_cast]\ntheorem coe_mul (m n : ℕ) : ↑(m * n) = (m * n : «exprℕ∞») :=\n  WithTop.coe_mul\n#align coe_mul coe_mul\n\n",
 "coe_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ∞» -/\n@[simp, norm_cast]\ntheorem coe_add (m n : ℕ) : ↑(m + n) = (m + n : «exprℕ∞») :=\n  rfl\n#align coe_add coe_add\n\n",
 "add_one_le_of_lt":
 "theorem add_one_le_of_lt (h : m < n) : m + 1 ≤ n :=\n  m.succ_def ▸ Order.succ_le_of_lt h\n#align add_one_le_of_lt add_one_le_of_lt\n\n",
 "add_one_le_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem add_one_le_iff (hm : m ≠ «expr⊤») : m + 1 ≤ n ↔ m < n :=\n  m.succ_def ▸ (Order.succ_le_iff_of_not_isMax <| by rwa [isMax_iff_eq_top])\n#align add_one_le_iff add_one_le_iff\n\n"}