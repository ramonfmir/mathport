{"swap_mem_antidiagonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem swap_mem_antidiagonal {n : «expr →₀ » α ℕ} {f : «expr →₀ » α ℕ × «expr →₀ » α ℕ} :\n    f.swap ∈ antidiagonal n ↔ f ∈ antidiagonal n := by simp only [mem_antidiagonal, add_comm, prod.swap]\n#align swap_mem_antidiagonal swap_mem_antidiagonal\n\n",
 "prod_antidiagonal_swap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n@[to_additive]\ntheorem prod_antidiagonal_swap {M : Type _} [comm_monoid M] (n : «expr →₀ » α ℕ)\n    (f : «expr →₀ » α ℕ → «expr →₀ » α ℕ → M) :\n    finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" (antidiagonal n)\n        (f p.1 p.2) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" (antidiagonal n)\n        (f p.2 p.1) :=\n  finset.prod_bij (fun p hp => p.swap) (fun p => swap_mem_antidiagonal.2) (fun p hp => rfl)\n    (fun p₁ p₂ _ _ h => prod.swap_injective h) fun p hp => ⟨p.swap, swap_mem_antidiagonal.2 hp, p.swap_swap.symm⟩\n#align prod_antidiagonal_swap prod_antidiagonal_swap\n\n",
 "mem_antidiagonal":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Yury Kudryashov\n-/\n@[simp]\ntheorem mem_antidiagonal {f : «expr →₀ » α ℕ} {p : «expr →₀ » α ℕ × «expr →₀ » α ℕ} :\n    p ∈ antidiagonal f ↔ p.1 + p.2 = f := by\n  rcases p with ⟨p₁, p₂⟩\n  simp [antidiagonal, antidiagonal', ← and_assoc, ← finsupp.to_multiset.apply_eq_iff_eq]\n#align mem_antidiagonal mem_antidiagonal\n\n",
 "antidiagonal_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n@[simp]\ntheorem antidiagonal_zero : antidiagonal (0 : «expr →₀ » α ℕ) = singleton (0, 0) := by\n  rw [antidiagonal, antidiagonal', multiset.to_finsupp_support] <;> rfl\n#align antidiagonal_zero antidiagonal_zero\n\n",
 "antidiagonal_filter_snd_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem antidiagonal_filter_snd_eq (f g : «expr →₀ » α ℕ)\n    [D : ∀ p : «expr →₀ » α ℕ × «expr →₀ » α ℕ, decidable (p.2 = g)] :\n    ((antidiagonal f).filter fun p => p.2 = g) = if g ≤ f then {(f - g, g)} else ∅ :=\n  by\n  ext ⟨a, b⟩\n  suffices b = g → (a + b = f ↔ g ≤ f ∧ a = f - g) by\n    simpa [apply_ite ((· ∈ ·) (a, b)), ← and_assoc, and_congr_left_iff]\n  rintro rfl\n  constructor\n  · rintro rfl\n    exact ⟨le_add_left le_rfl, (add_tsub_cancel_right _ _).symm⟩\n  · rintro ⟨h, rfl⟩\n    exact tsub_add_cancel_of_le h\n#align antidiagonal_filter_snd_eq antidiagonal_filter_snd_eq\n\n",
 "antidiagonal_filter_fst_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem antidiagonal_filter_fst_eq (f g : «expr →₀ » α ℕ)\n    [D : ∀ p : «expr →₀ » α ℕ × «expr →₀ » α ℕ, decidable (p.1 = g)] :\n    ((antidiagonal f).filter fun p => p.1 = g) = if g ≤ f then {(g, f - g)} else ∅ :=\n  by\n  ext ⟨a, b⟩\n  suffices a = g → (a + b = f ↔ g ≤ f ∧ b = f - g) by\n    simpa [apply_ite ((· ∈ ·) (a, b)), ← and_assoc, @and_right_comm _ (a = _), and_congr_left_iff]\n  rintro rfl\n  constructor\n  · rintro rfl\n    exact ⟨le_add_right le_rfl, (add_tsub_cancel_left _ _).symm⟩\n  · rintro ⟨h, rfl⟩\n    exact add_tsub_cancel_of_le h\n#align antidiagonal_filter_fst_eq antidiagonal_filter_fst_eq\n\n"}