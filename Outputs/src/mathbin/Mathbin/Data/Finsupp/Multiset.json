{"to_multiset_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/-\nCopyright (c) 2018 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl\n-/\ntheorem to_multiset_zero : (0 : «expr →₀ » α ℕ).to_multiset = 0 :=\n  rfl\n#align to_multiset_zero to_multiset_zero\n\n",
 "to_multiset_to_finsupp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n@[simp]\ntheorem finsupp.to_multiset_to_finsupp (f : «expr →₀ » α ℕ) : f.to_multiset.to_finsupp = f :=\n  finsupp.to_multiset.symm_apply_apply f\n#align finsupp.to_multiset_to_finsupp finsupp.to_multiset_to_finsupp\n\n",
 "to_multiset_symm_apply":
 "@[simp]\ntheorem to_multiset_symm_apply [decidable_eq α] (s : Multiset α) (x : α) : finsupp.to_multiset.symm s x = s.count x :=\n  by convert rfl\n#align to_multiset_symm_apply to_multiset_symm_apply\n\n",
 "to_multiset_sum_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem to_multiset_sum_single (s : Finset ι) (n : ℕ) :\n    finsupp.to_multiset\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n          (single i n)) =\n      «expr • » n s.val :=\n  by simp_rw [to_multiset_sum, finsupp.to_multiset_single, sum_nsmul, sum_multiset_singleton]\n#align to_multiset_sum_single to_multiset_sum_single\n\n",
 "to_multiset_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem to_multiset_sum {f : ι → «expr →₀ » α ℕ} (s : Finset ι) :\n    finsupp.to_multiset\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (finsupp.to_multiset (f i)) :=\n  add_equiv.map_sum _ _ _\n#align to_multiset_sum to_multiset_sum\n\n",
 "to_multiset_strict_mono":
 "theorem to_multiset_strict_mono : strict_mono (@to_multiset ι) :=\n  (@order_iso_multiset ι).strict_mono\n#align to_multiset_strict_mono to_multiset_strict_mono\n\n",
 "to_multiset_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem to_multiset_single (a : α) (n : ℕ) : to_multiset (single a n) = «expr • » n {a} := by\n  rw [to_multiset_apply, sum_single_index] <;> apply zero_nsmul\n#align to_multiset_single to_multiset_single\n\n",
 "to_multiset_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem to_multiset_map (f : «expr →₀ » α ℕ) (g : α → β) : f.to_multiset.map g = (f.map_domain g).to_multiset :=\n  by\n  refine' f.induction _ _\n  · rw [to_multiset_zero, Multiset.map_zero, map_domain_zero, to_multiset_zero]\n  · intro a n f _ _ ih\n    rw [to_multiset_add, Multiset.map_add, ih, map_domain_add, map_domain_single, to_multiset_single, to_multiset_add,\n      to_multiset_single, ← Multiset.coe_mapAddMonoidHom, (Multiset.mapAddMonoidHom g).map_nsmul]\n    rfl\n#align to_multiset_map to_multiset_map\n\n",
 "to_multiset_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem to_multiset_apply (f : «expr →₀ » α ℕ) : f.to_multiset = f.sum fun a n => «expr • » n {a} :=\n  rfl\n#align to_multiset_apply to_multiset_apply\n\n",
 "to_multiset_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem to_multiset_add (m n : «expr →₀ » α ℕ) : (m + n).to_multiset = m.to_multiset + n.to_multiset :=\n  to_multiset.map_add m n\n#align to_multiset_add to_multiset_add\n\n",
 "to_finsupp_zero":
 "theorem to_finsupp_zero : to_finsupp (0 : Multiset α) = 0 :=\n  AddEquiv.map_zero _\n#align to_finsupp_zero to_finsupp_zero\n\n",
 "to_finsupp_to_multiset":
 "@[simp]\ntheorem to_finsupp_to_multiset (s : Multiset α) : s.to_finsupp.to_multiset = s :=\n  finsupp.to_multiset.apply_symm_apply s\n#align to_finsupp_to_multiset to_finsupp_to_multiset\n\n",
 "to_finsupp_support":
 "@[simp]\ntheorem to_finsupp_support [decidable_eq α] (s : Multiset α) : s.to_finsupp.support = s.to_finset := by convert rfl\n#align to_finsupp_support to_finsupp_support\n\n",
 "to_finsupp_strict_mono":
 "theorem multiset.to_finsupp_strict_mono : strict_mono (@multiset.to_finsupp ι) :=\n  (@finsupp.order_iso_multiset ι).symm.strict_mono\n#align multiset.to_finsupp_strict_mono multiset.to_finsupp_strict_mono\n\n",
 "to_finsupp_singleton":
 "@[simp]\ntheorem to_finsupp_singleton (a : α) : to_finsupp ({a} : Multiset α) = finsupp.single a 1 :=\n  finsupp.to_multiset.symm_apply_eq.2 <| by simp\n#align to_finsupp_singleton to_finsupp_singleton\n\n",
 "to_finsupp_eq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem to_finsupp_eq_iff {s : Multiset α} {f : «expr →₀ » α ℕ} : s.to_finsupp = f ↔ s = f.to_multiset :=\n  finsupp.to_multiset.symm_apply_eq\n#align to_finsupp_eq_iff to_finsupp_eq_iff\n\n",
 "to_finsupp_apply":
 "@[simp]\ntheorem to_finsupp_apply [decidable_eq α] (s : Multiset α) (a : α) : to_finsupp s a = s.count a := by convert rfl\n#align to_finsupp_apply to_finsupp_apply\n\n",
 "to_finsupp_add":
 "theorem to_finsupp_add (s t : Multiset α) : to_finsupp (s + t) = to_finsupp s + to_finsupp t :=\n  to_finsupp.map_add s t\n#align to_finsupp_add to_finsupp_add\n\n",
 "to_finset_to_multiset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n@[simp]\ntheorem to_finset_to_multiset [decidable_eq α] (f : «expr →₀ » α ℕ) : f.to_multiset.to_finset = f.support :=\n  by\n  refine' f.induction _ _\n  · rw [to_multiset_zero, Multiset.toFinset_zero, support_zero]\n  · intro a n f ha hn ih\n    rw [to_multiset_add, Multiset.toFinset_add, ih, to_multiset_single, support_add_eq, support_single_ne_zero _ hn,\n      Multiset.toFinset_nsmul _ _ hn, Multiset.toFinset_singleton]\n    refine' Disjoint.mono_left support_single_subset _\n    rwa [Finset.disjoint_singleton_left]\n#align to_finset_to_multiset to_finset_to_multiset\n\n",
 "sum_id_lt_of_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem sum_id_lt_of_lt (m n : «expr →₀ » ι ℕ) (h : m < n) : (m.sum fun _ => id) < n.sum fun _ => id :=\n  by\n  rw [← card_to_multiset, ← card_to_multiset]\n  apply Multiset.card_lt_of_lt\n  exact to_multiset_strict_mono h\n#align sum_id_lt_of_lt sum_id_lt_of_lt\n\n",
 "prod_to_multiset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n@[simp]\ntheorem prod_to_multiset [comm_monoid α] (f : «expr →₀ » α ℕ) : f.to_multiset.prod = f.prod fun a n => a ^ n :=\n  by\n  refine' f.induction _ _\n  · rw [to_multiset_zero, Multiset.prod_zero, finsupp.prod_zero_index]\n  · intro a n f _ _ ih\n    rw [to_multiset_add, Multiset.prod_add, ih, to_multiset_single, Multiset.prod_nsmul,\n      finsupp.prod_add_index' pow_zero pow_add, finsupp.prod_single_index, Multiset.prod_singleton]\n    · exact pow_zero a\n#align prod_to_multiset prod_to_multiset\n\n",
 "mem_to_multiset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n@[simp]\ntheorem mem_to_multiset (f : «expr →₀ » α ℕ) (i : α) : i ∈ f.to_multiset ↔ i ∈ f.support := by\n  rw [← Multiset.count_ne_zero, finsupp.count_to_multiset, finsupp.mem_support_iff]\n#align mem_to_multiset mem_to_multiset\n\n",
 "lt_wf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/-- The order on `ι →₀ ℕ` is well-founded. -/\ntheorem lt_wf : well_founded (@LT.lt («expr →₀ » ι ℕ) _) :=\n  subrelation.wf sum_id_lt_of_lt <| inv_image.wf _ Nat.lt_wfRel\n#align lt_wf lt_wf\n\n",
 "count_to_multiset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n@[simp]\ntheorem count_to_multiset [decidable_eq α] (f : «expr →₀ » α ℕ) (a : α) : f.to_multiset.count a = f a :=\n  calc\n    f.to_multiset.count a = f.sum fun x n => («expr • » n {x} : Multiset α).count a :=\n      (Multiset.countAddMonoidHom a).map_sum _ f.support\n    _ = f.sum fun x n => n * ({x} : Multiset α).count a := by simp only [Multiset.count_nsmul]\n    _ = f a * ({a} : Multiset α).count a :=\n      sum_eq_single _ (fun a' _ H => by simp only [Multiset.count_singleton, if_false, H.symm, mul_zero]) fun H => by\n        simp only [not_mem_support_iff.1 H, zero_mul]\n    _ = f a := by rw [Multiset.count_singleton_self, mul_one]\n    \n#align count_to_multiset count_to_multiset\n\n",
 "coe_order_iso_multiset_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_order_iso_multiset_symm : «expr⇑ » (@order_iso_multiset ι).symm = multiset.to_finsupp :=\n  rfl\n#align coe_order_iso_multiset_symm coe_order_iso_multiset_symm\n\n",
 "coe_order_iso_multiset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_order_iso_multiset : «expr⇑ » (@order_iso_multiset ι) = to_multiset :=\n  rfl\n#align coe_order_iso_multiset coe_order_iso_multiset\n\n",
 "card_to_multiset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\ntheorem card_to_multiset (f : «expr →₀ » α ℕ) : f.to_multiset.card = f.sum fun a => id := by\n  simp [to_multiset_apply, add_monoid_hom.map_finsupp_sum, function.id_def]\n#align card_to_multiset card_to_multiset\n\n"}