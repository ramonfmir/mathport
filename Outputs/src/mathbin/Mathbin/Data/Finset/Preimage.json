{"subset_map_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪ » -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (u «expr ⊆ » t) -/\ntheorem subset_map_iff {f : «expr ↪ » α β} {s : Finset β} {t : Finset α} :\n    s ⊆ t.map f ↔ ∃ (u : _)(_ : u ⊆ t), s = u.map f := by\n  classical\n    refine' ⟨fun h => ⟨_, preimage_subset h, _⟩, _⟩\n    · rw [map_eq_image, image_preimage, filter_true_of_mem fun x hx => _]\n      exact coe_map_subset_range _ _ (h hx)\n    · rintro ⟨u, hut, rfl⟩\n      exact map_subset_map.2 hut\n#align subset_map_iff subset_map_iff\n\n",
 "sigma_preimage_mk_of_subset":
 "theorem sigma_preimage_mk_of_subset {β : α → Type _} [DecidableEq α] (s : Finset (Σa, β a)) {t : Finset α}\n    (ht : s.image Sigma.fst ⊆ t) : (t.sigma fun a => s.preimage (sigma.mk a) <| sigma_mk_injective.inj_on _) = s := by\n  rw [sigma_preimage_mk, filter_true_of_mem <| image_subset_iff.1 ht]\n#align sigma_preimage_mk_of_subset sigma_preimage_mk_of_subset\n\n",
 "sigma_preimage_mk":
 "theorem sigma_preimage_mk {β : α → Type _} [DecidableEq α] (s : Finset (Σa, β a)) (t : Finset α) :\n    (t.sigma fun a => s.preimage (sigma.mk a) <| sigma_mk_injective.inj_on _) = s.filter fun a => a.1 ∈ t :=\n  by\n  ext x\n  simp [and_comm']\n#align sigma_preimage_mk sigma_preimage_mk\n\n",
 "sigma_image_fst_preimage_mk":
 "theorem sigma_image_fst_preimage_mk {β : α → Type _} [DecidableEq α] (s : Finset (Σa, β a)) :\n    ((s.image Sigma.fst).sigma fun a => s.preimage (sigma.mk a) <| sigma_mk_injective.inj_on _) = s :=\n  s.sigma_preimage_mk_of_subset (Subset.refl _)\n#align sigma_image_fst_preimage_mk sigma_image_fst_preimage_mk\n\n",
 "prod_preimage_of_bij":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n@[to_additive]\ntheorem prod_preimage_of_bij [CommMonoid β] (f : α → γ) (s : Finset γ) (hf : Set.BijOn f («expr ⁻¹' » f ↑s) ↑s)\n    (g : γ → β) :\n    finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n        (s.preimage f hf.inj_on) (g (f x)) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (g x) :=\n  prod_preimage _ _ hf.inj_on g fun x hxs hxf => (hxf <| hf.subset_range hxs).elim\n#align prod_preimage_of_bij prod_preimage_of_bij\n\n",
 "prod_preimage'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n@[to_additive]\ntheorem prod_preimage' [CommMonoid β] (f : α → γ) [DecidablePred fun x => x ∈ Set.range f] (s : Finset γ)\n    (hf : Set.InjOn f («expr ⁻¹' » f ↑s)) (g : γ → β) :\n    finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" (s.preimage f hf)\n        (g (f x)) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n        (s.filter fun x => x ∈ Set.range f) (g x) :=\n  by\n  haveI := Classical.decEq γ <;>\n    calc\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n            (preimage s f hf) (g (f x)) =\n          finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n            (image f (preimage s f hf)) (g x) :=\n        Eq.symm <| prod_image <| by simpa only [mem_preimage, inj_on] using hf\n      _ =\n          finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\"\n            (s.filter fun x => x ∈ Set.range f) (g x) :=\n        by rw [image_preimage]\n      \n#align prod_preimage' prod_preimage'\n\n",
 "prod_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n@[to_additive]\ntheorem prod_preimage [CommMonoid β] (f : α → γ) (s : Finset γ) (hf : Set.InjOn f («expr ⁻¹' » f ↑s)) (g : γ → β)\n    (hg : ∀ x ∈ s, x ∉ Set.range f → g x = 1) :\n    finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" (s.preimage f hf)\n        (g (f x)) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (g x) :=\n  by\n  classical\n    rw [prod_preimage', prod_filter_of_ne]\n    exact fun x hx => Not.imp_symm (hg x hx)\n#align prod_preimage prod_preimage\n\n",
 "preimage_univ":
 "@[simp]\ntheorem preimage_univ {f : α → β} [Fintype α] [Fintype β] (hf) : preimage univ f hf = univ :=\n  Finset.coe_injective (by simp)\n#align preimage_univ preimage_univ\n\n",
 "preimage_union":
 "@[simp]\ntheorem preimage_union [DecidableEq α] [DecidableEq β] {f : α → β} {s t : Finset β} (hst) :\n    preimage (s ∪ t) f hst =\n      (preimage s f fun x₁ hx₁ x₂ hx₂ => hst (mem_union_left _ hx₁) (mem_union_left _ hx₂)) ∪\n        preimage t f fun x₁ hx₁ x₂ hx₂ => hst (mem_union_right _ hx₁) (mem_union_right _ hx₂) :=\n  Finset.coe_injective (by simp)\n#align preimage_union preimage_union\n\n",
 "preimage_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪ » -/\ntheorem preimage_subset {f : «expr ↪ » α β} {s : Finset β} {t : Finset α} (hs : s ⊆ t.map f) :\n    s.preimage f (f.injective.inj_on _) ⊆ t := fun x hx => (mem_map' f).1 (hs (mem_preimage.1 hx))\n#align preimage_subset preimage_subset\n\n",
 "preimage_inter":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_inter [DecidableEq α] [DecidableEq β] {f : α → β} {s t : Finset β}\n    (hs : Set.InjOn f («expr ⁻¹' » f ↑s)) (ht : Set.InjOn f («expr ⁻¹' » f ↑t)) :\n    (preimage (s ∩ t) f fun x₁ hx₁ x₂ hx₂ => hs (mem_of_mem_inter_left hx₁) (mem_of_mem_inter_left hx₂)) =\n      preimage s f hs ∩ preimage t f ht :=\n  Finset.coe_injective (by simp)\n#align preimage_inter preimage_inter\n\n",
 "preimage_empty":
 "@[simp]\ntheorem preimage_empty {f : α → β} : preimage ∅ f (by simp [inj_on]) = ∅ :=\n  Finset.coe_injective (by simp)\n#align preimage_empty preimage_empty\n\n",
 "preimage_compl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n@[simp]\ntheorem preimage_compl [DecidableEq α] [DecidableEq β] [Fintype α] [Fintype β] {f : α → β} (s : Finset β)\n    (hf : function.injective f) : preimage («expr ᶜ» s) f (hf.inj_on _) = «expr ᶜ» (preimage s f (hf.inj_on _)) :=\n  Finset.coe_injective (by simp)\n#align preimage_compl preimage_compl\n\n",
 "monotone_preimage":
 "theorem monotone_preimage {f : α → β} (h : injective f) : Monotone fun s => preimage s f (h.inj_on _) :=\n  fun s t hst x hx => mem_preimage.2 (hst <| mem_preimage.1 hx)\n#align monotone_preimage monotone_preimage\n\n",
 "mem_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Mario Carneiro\n-/\n@[simp]\ntheorem mem_preimage {f : α → β} {s : Finset β} {hf : Set.InjOn f («expr ⁻¹' » f ↑s)} {x : α} :\n    x ∈ preimage s f hf ↔ f x ∈ s :=\n  Set.Finite.mem_toFinset _\n#align mem_preimage mem_preimage\n\n",
 "map_subset_iff_subset_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪ » -/\ntheorem map_subset_iff_subset_preimage {f : «expr ↪ » α β} {s : Finset α} {t : Finset β} :\n    s.map f ⊆ t ↔ s ⊆ t.preimage f (f.injective.inj_on _) := by\n  classical rw [map_eq_image, image_subset_iff_subset_preimage]\n#align map_subset_iff_subset_preimage map_subset_iff_subset_preimage\n\n",
 "image_subset_iff_subset_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem image_subset_iff_subset_preimage [DecidableEq β] {f : α → β} {s : Finset α} {t : Finset β}\n    (hf : Set.InjOn f («expr ⁻¹' » f ↑t)) : s.image f ⊆ t ↔ s ⊆ t.preimage f hf :=\n  image_subset_iff.trans <| by simp only [subset_iff, mem_preimage]\n#align image_subset_iff_subset_preimage image_subset_iff_subset_preimage\n\n",
 "image_preimage_of_bij":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem image_preimage_of_bij [DecidableEq β] (f : α → β) (s : Finset β) (hf : Set.BijOn f («expr ⁻¹' » f ↑s) ↑s) :\n    image f (preimage s f hf.inj_on) = s :=\n  Finset.coe_inj.1 <| by simpa using hf.image_eq\n#align image_preimage_of_bij image_preimage_of_bij\n\n",
 "image_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem image_preimage [DecidableEq β] (f : α → β) (s : Finset β) [∀ x, Decidable (x ∈ Set.range f)]\n    (hf : Set.InjOn f («expr ⁻¹' » f ↑s)) : image f (preimage s f hf) = s.filter fun x => x ∈ Set.range f :=\n  Finset.coe_inj.1 <| by\n    simp only [coe_image, coe_preimage, coe_filter, Set.image_preimage_eq_inter_range, Set.sep_mem_eq]\n#align image_preimage image_preimage\n\n",
 "coe_preimage":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp, norm_cast]\ntheorem coe_preimage {f : α → β} (s : Finset β) (hf : Set.InjOn f («expr ⁻¹' » f ↑s)) :\n    (↑(preimage s f hf) : Set α) = «expr ⁻¹' » f ↑s :=\n  Set.Finite.coe_toFinset _\n#align coe_preimage coe_preimage\n\n"}