{"up_surjective":
 "theorem up_surjective : surjective (@up α) :=\n  equiv.ulift.symm.surjective\n#align up_surjective up_surjective\n\n",
 "up_injective":
 "theorem up_injective : injective (@up α) :=\n  equiv.ulift.symm.injective\n#align up_injective up_injective\n\n",
 "up_inj":
 "@[simp]\ntheorem up_inj {x y : α} : up x = up y ↔ x = y :=\n  up_injective.eq_iff\n#align up_inj up_inj\n\n",
 "up_bijective":
 "theorem up_bijective : bijective (@up α) :=\n  equiv.ulift.symm.bijective\n#align up_bijective up_bijective\n\n",
 "forall":
 "@[simp]\ntheorem forall {p : ULift α → Prop} : (∀ x, p x) ↔ ∀ x : α, p (ulift.up x) :=\n  up_surjective.forall\n#align forall forall\n\n",
 "exists":
 "@[simp]\ntheorem exists {p : ULift α → Prop} : (∃ x, p x) ↔ ∃ x : α, p (ulift.up x) :=\n  up_surjective.exists\n#align exists exists\n\n",
 "down_surjective":
 "theorem down_surjective : surjective (@down α) :=\n  equiv.ulift.surjective\n#align down_surjective down_surjective\n\n",
 "down_bijective":
 "theorem down_bijective : bijective (@down α) :=\n  equiv.ulift.bijective\n#align down_bijective down_bijective\n\n"}