{"card_Ioo":
 "theorem card_Ioo : (Ioo a b).card = if h : a.1 = b.1 then (Ioo (h.rec a.2) b.2).card else 0 :=\n  card_sigmaLift _ _ _\n#align card_Ioo card_Ioo\n\n",
 "card_Ioc":
 "theorem card_Ioc : (Ioc a b).card = if h : a.1 = b.1 then (Ioc (h.rec a.2) b.2).card else 0 :=\n  card_sigmaLift _ _ _\n#align card_Ioc card_Ioc\n\n",
 "card_Ico":
 "theorem card_Ico : (Ico a b).card = if h : a.1 = b.1 then (Ico (h.rec a.2) b.2).card else 0 :=\n  card_sigmaLift _ _ _\n#align card_Ico card_Ico\n\n",
 "card_Icc":
 "/-\nCopyright (c) 2022 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\ntheorem card_Icc : (Icc a b).card = if h : a.1 = b.1 then (Icc (h.rec a.2) b.2).card else 0 :=\n  card_sigmaLift _ _ _\n#align card_Icc card_Icc\n\n",
 "Ioo_mk_mk":
 "@[simp]\ntheorem Ioo_mk_mk : Ioo (⟨i, a⟩ : Sigma α) ⟨i, b⟩ = (Ioo a b).map (Embedding.sigmaMk i) :=\n  dif_pos rfl\n#align Ioo_mk_mk Ioo_mk_mk\n\n",
 "Ioc_mk_mk":
 "@[simp]\ntheorem Ioc_mk_mk : Ioc (⟨i, a⟩ : Sigma α) ⟨i, b⟩ = (Ioc a b).map (Embedding.sigmaMk i) :=\n  dif_pos rfl\n#align Ioc_mk_mk Ioc_mk_mk\n\n",
 "Ico_mk_mk":
 "@[simp]\ntheorem Ico_mk_mk : Ico (⟨i, a⟩ : Sigma α) ⟨i, b⟩ = (Ico a b).map (Embedding.sigmaMk i) :=\n  dif_pos rfl\n#align Ico_mk_mk Ico_mk_mk\n\n",
 "Icc_mk_mk":
 "@[simp]\ntheorem Icc_mk_mk : Icc (⟨i, a⟩ : Sigma α) ⟨i, b⟩ = (Icc a b).map (Embedding.sigmaMk i) :=\n  dif_pos rfl\n#align Icc_mk_mk Icc_mk_mk\n\n"}