{"fin_choice_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟦ ⟧» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟦ ⟧» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟦ ⟧» -/\ntheorem quotient.fin_choice_eq {ι : Type _} [DecidableEq ι] [Fintype ι] {α : ι → Type _} [∀ i, setoid (α i)]\n    (f : ∀ i, α i) : (quotient.fin_choice fun i => «expr⟦ ⟧» (f i)) = «expr⟦ ⟧» f :=\n  by\n  let q\n  swap\n  change quotient.lift_on q _ _ = _\n  have : q = «expr⟦ ⟧» fun i h => f i := by\n    dsimp only [q]\n    exact Quotient.inductionOn (@Finset.univ ι _).1 fun l => quotient.fin_choice_aux_eq _ _\n  simp [this]\n  exact setoid.refl _\n#align quotient.fin_choice_eq quotient.fin_choice_eq\n\n",
 "fin_choice_aux_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟦ ⟧» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟦ ⟧» -/\n/-\nCopyright (c) 2018 Mario Carneiro. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Mario Carneiro\n-/\ntheorem quotient.fin_choice_aux_eq {ι : Type _} [DecidableEq ι] {α : ι → Type _} [S : ∀ i, setoid (α i)] :\n    ∀ (l : List ι) (f : ∀ i ∈ l, α i), (quotient.fin_choice_aux l fun i h => «expr⟦ ⟧» (f i h)) = «expr⟦ ⟧» f\n  | [], f => quotient.sound fun i h => h.elim\n  | i :: l, f => by\n    simp [quotient.fin_choice_aux, quotient.fin_choice_aux_eq l]\n    refine' quotient.sound fun j h => _\n    by_cases e : j = i <;> simp [e]\n    subst j; rfl\n#align quotient.fin_choice_aux_eq quotient.fin_choice_aux_eq\n\n"}