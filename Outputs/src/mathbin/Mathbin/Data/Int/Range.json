{"mem_range_iff":
 "/-\nCopyright (c) 2018 Kenny Lau. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Mario Carneiro, Kenny Lau\n-/\ntheorem mem_range_iff {m n r : ℤ} : r ∈ range m n ↔ m ≤ r ∧ r < n :=\n  ⟨fun H =>\n    let ⟨s, h1, h2⟩ := List.mem_map'.1 H\n    h2 ▸\n      ⟨le_add_of_nonneg_right (ofNat_zero_le s),\n        add_lt_of_lt_sub_left <|\n          match n - m, h1 with\n          | (k : ℕ), h1 => by rwa [List.mem_range, to_nat_coe_nat, ← coe_nat_lt] at h1⟩,\n    fun ⟨h1, h2⟩ =>\n    List.mem_map'.2\n      ⟨to_nat (r - m),\n        List.mem_range.2 <| by\n          rw [← coe_nat_lt, to_nat_of_nonneg (sub_nonneg_of_le h1),\n              to_nat_of_nonneg (sub_nonneg_of_le (le_of_lt (lt_of_le_of_lt h1 h2)))] <;>\n            exact sub_lt_sub_right h2 _,\n        show m + _ = _ by rw [to_nat_of_nonneg (sub_nonneg_of_le h1), add_sub_cancel'_right]⟩⟩\n#align mem_range_iff mem_range_iff\n\n"}