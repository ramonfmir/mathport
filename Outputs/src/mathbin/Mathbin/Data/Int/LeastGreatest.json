{"exists_least_of_bdd":
 "/-\nCopyright (c) 2016 Jeremy Avigad. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jeremy Avigad, Mario Carneiro\n-/\n/-- If `P : ℤ → Prop` is a predicate such that the set `{m : P m}` is bounded below and nonempty,\nthen this set has the least element. This lemma uses classical logic to avoid assumption\n`[decidable_pred P]`. See `int.least_of_bdd` for a constructive counterpart. -/\ntheorem exists_least_of_bdd {P : ℤ → Prop} (Hbdd : ∃ b : ℤ, ∀ z : ℤ, P z → b ≤ z) (Hinh : ∃ z : ℤ, P z) :\n    ∃ lb : ℤ, P lb ∧ ∀ z : ℤ, P z → lb ≤ z := by\n  classical exact\n      let ⟨b, Hb⟩ := Hbdd\n      let ⟨lb, H⟩ := least_of_bdd b Hb Hinh\n      ⟨lb, H⟩\n#align exists_least_of_bdd exists_least_of_bdd\n\n",
 "exists_greatest_of_bdd":
 "/-- If `P : ℤ → Prop` is a predicate such that the set `{m : P m}` is bounded above and nonempty,\nthen this set has the greatest element. This lemma uses classical logic to avoid assumption\n`[decidable_pred P]`. See `int.greatest_of_bdd` for a constructive counterpart. -/\ntheorem exists_greatest_of_bdd {P : ℤ → Prop} (Hbdd : ∃ b : ℤ, ∀ z : ℤ, P z → z ≤ b) (Hinh : ∃ z : ℤ, P z) :\n    ∃ ub : ℤ, P ub ∧ ∀ z : ℤ, P z → z ≤ ub := by\n  classical exact\n      let ⟨b, Hb⟩ := Hbdd\n      let ⟨lb, H⟩ := greatest_of_bdd b Hb Hinh\n      ⟨lb, H⟩\n#align exists_greatest_of_bdd exists_greatest_of_bdd\n\n",
 "coe_least_of_bdd_eq":
 "theorem coe_least_of_bdd_eq {P : ℤ → Prop} [DecidablePred P] {b b' : ℤ} (Hb : ∀ z : ℤ, P z → b ≤ z)\n    (Hb' : ∀ z : ℤ, P z → b' ≤ z) (Hinh : ∃ z : ℤ, P z) : (leastOfBdd b Hb Hinh : ℤ) = leastOfBdd b' Hb' Hinh :=\n  by\n  rcases least_of_bdd b Hb Hinh with ⟨n, hn, h2n⟩\n  rcases least_of_bdd b' Hb' Hinh with ⟨n', hn', h2n'⟩\n  exact le_antisymm (h2n _ hn') (h2n' _ hn)\n#align coe_least_of_bdd_eq coe_least_of_bdd_eq\n\n",
 "coe_greatest_of_bdd_eq":
 "theorem coe_greatest_of_bdd_eq {P : ℤ → Prop} [DecidablePred P] {b b' : ℤ} (Hb : ∀ z : ℤ, P z → z ≤ b)\n    (Hb' : ∀ z : ℤ, P z → z ≤ b') (Hinh : ∃ z : ℤ, P z) : (greatestOfBdd b Hb Hinh : ℤ) = greatestOfBdd b' Hb' Hinh :=\n  by\n  rcases greatest_of_bdd b Hb Hinh with ⟨n, hn, h2n⟩\n  rcases greatest_of_bdd b' Hb' Hinh with ⟨n', hn', h2n'⟩\n  exact le_antisymm (h2n' _ hn) (h2n _ hn')\n#align coe_greatest_of_bdd_eq coe_greatest_of_bdd_eq\n\n"}