{"typevec_cases_nil₂_append_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\ntheorem typevec_cases_nil₂_append_fun {β : typevec.arrow Fin2.elim0 Fin2.elim0 → Sort _} (f : β nilFun) :\n    typevecCasesNil₂ f nilFun = f :=\n  rfl\n#align typevec_cases_nil₂_append_fun typevec_cases_nil₂_append_fun\n\n",
 "typevec_cases_cons₂_append_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\ntheorem typevec_cases_cons₂_append_fun (n : ℕ) (t t' : Type _) (v v' : TypeVec n)\n    {β : typevec.arrow (typevec.append_fun v t) (typevec.append_fun v' t') → Sort _}\n    (F : ∀ (f : t → t') (fs : typevec.arrow v v'), β (typevec.append_fun fs f)) (f fs) :\n    typevecCasesCons₂ n t t' v v' F (typevec.append_fun fs f) = F f fs :=\n  rfl\n#align typevec_cases_cons₂_append_fun typevec_cases_cons₂_append_fun\n\n",
 "to_subtype_of_subtype_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n@[simp]\ntheorem to_subtype_of_subtype_assoc {α β : TypeVec n} (p : typevec.arrow α (repeat n Prop))\n    (f : typevec.arrow β (Subtype_ p)) : typevec.comp (@toSubtype n _ p) (typevec.comp (ofSubtype _) f) = f := by\n  rw [← comp_assoc, to_subtype_of_subtype] <;> simp\n#align to_subtype_of_subtype_assoc to_subtype_of_subtype_assoc\n\n",
 "to_subtype_of_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n@[simp]\ntheorem to_subtype_of_subtype {α : TypeVec n} (p : typevec.arrow α (repeat n Prop)) :\n    typevec.comp (toSubtype p) (ofSubtype p) = id := by\n  ext (i x) <;> induction i <;> dsimp only [id, to_subtype, comp, of_subtype] at * <;> simp [*]\n#align to_subtype_of_subtype to_subtype_of_subtype\n\n",
 "to_subtype'_of_subtype'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n@[simp]\ntheorem to_subtype'_of_subtype' {α : TypeVec n} (r : typevec.arrow (typevec.prod α α) (repeat n Prop)) :\n    typevec.comp (toSubtype' r) (ofSubtype' r) = id := by\n  ext (i x) <;> induction i <;> dsimp only [id, to_subtype', comp, of_subtype'] at * <;> simp [Subtype.eta, *]\n#align to_subtype'_of_subtype' to_subtype'_of_subtype'\n\n",
 "subtype_val_to_subtype'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\ntheorem subtype_val_to_subtype' {α : TypeVec n} (r : typevec.arrow (typevec.prod α α) (repeat n Prop)) :\n    typevec.comp (subtypeVal r) (toSubtype' r) = fun i x => prod.mk i x.1.fst x.1.snd := by\n  ext (i x) <;> induction i <;> dsimp only [id, to_subtype', comp, subtype_val, prod.mk] at * <;> simp [*]\n#align subtype_val_to_subtype' subtype_val_to_subtype'\n\n",
 "subtype_val_to_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n@[simp]\ntheorem subtype_val_to_subtype {α : TypeVec n} (p : typevec.arrow α (repeat n Prop)) :\n    typevec.comp (subtypeVal p) (toSubtype p) = fun _ => Subtype.val := by\n  ext (i x) <;> induction i <;> dsimp only [to_subtype, comp, subtype_val] at * <;> simp [*]\n#align subtype_val_to_subtype subtype_val_to_subtype\n\n",
 "subtype_val_nil":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\ntheorem subtype_val_nil {α : TypeVec.{u} 0} (ps : typevec.arrow α (repeat 0 Prop)) : TypeVec.subtypeVal ps = nilFun :=\n  funext <| by rintro ⟨⟩ <;> rfl\n#align subtype_val_nil subtype_val_nil\n\n",
 "subtype_val_diag_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n@[simp]\ntheorem subtype_val_diag_sub {α : TypeVec n} : typevec.comp (subtypeVal (repeatEq α)) diagSub = prod.diag :=\n  by\n  clear * -\n  ext i\n  induction i <;> [rfl, apply i_ih]\n#align subtype_val_diag_sub subtype_val_diag_sub\n\n",
 "split_fun_inj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\ntheorem split_fun_inj {α α' : TypeVec (n + 1)} {f f' : typevec.arrow (drop α) (drop α')} {g g' : last α → last α'}\n    (H : splitFun f g = splitFun f' g') : f = f' ∧ g = g' := by\n  rw [← drop_fun_split_fun f g, H, ← last_fun_split_fun f g, H] <;> simp\n#align split_fun_inj split_fun_inj\n\n",
 "split_fun_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\ntheorem split_fun_comp {α₀ α₁ α₂ : TypeVec (n + 1)} (f₀ : typevec.arrow (drop α₀) (drop α₁))\n    (f₁ : typevec.arrow (drop α₁) (drop α₂)) (g₀ : last α₀ → last α₁) (g₁ : last α₁ → last α₂) :\n    splitFun (typevec.comp f₁ f₀) (g₁ ∘ g₀) = typevec.comp (splitFun f₁ g₁) (splitFun f₀ g₀) :=\n  eq_of_drop_last_eq rfl rfl\n#align split_fun_comp split_fun_comp\n\n",
 "split_drop_fun_last_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\ntheorem split_drop_fun_last_fun {α α' : TypeVec (n + 1)} (f : typevec.arrow α α') :\n    splitFun (dropFun f) (lastFun f) = f :=\n  eq_of_drop_last_eq rfl rfl\n#align split_drop_fun_last_fun split_drop_fun_last_fun\n\n",
 "snd_prod_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod.map -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\ntheorem snd_prod_mk {α α' β β' : TypeVec n} (f : typevec.arrow α β) (g : typevec.arrow α' β') :\n    typevec.comp TypeVec.prod.snd (typevec.prod.map f g) = typevec.comp g TypeVec.prod.snd := by\n  ext i <;> induction i <;> [rfl, apply i_ih]\n#align snd_prod_mk snd_prod_mk\n\n",
 "snd_diag":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\ntheorem snd_diag {α : TypeVec n} : typevec.comp TypeVec.prod.snd (prod.diag : typevec.arrow α _) = id := by\n  ext i <;> induction i <;> [rfl, apply i_ih]\n#align snd_diag snd_diag\n\n",
 "repeat_eq_nil":
 "@[typevec]\ntheorem repeat_eq_nil (α : TypeVec 0) : repeatEq α = nilFun := by ext i : 1 <;> cases i <;> rfl\n#align repeat_eq_nil repeat_eq_nil\n\n",
 "repeat_eq_iff_eq":
 "theorem repeat_eq_iff_eq {α : TypeVec n} {i x y} : ofRepeat (repeatEq α i (prod.mk _ x y)) ↔ x = y := by\n  induction i <;> [rfl, erw [repeat_eq, @i_ih (drop α) x y]]\n#align repeat_eq_iff_eq repeat_eq_iff_eq\n\n",
 "repeat_eq_append1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n@[typevec]\ntheorem repeat_eq_append1 {β} {n} (α : TypeVec n) :\n    repeatEq (typevec.append_fun α β) = splitFun (repeatEq α) (uncurry Eq) := by induction n <;> rfl\n#align repeat_eq_append1 repeat_eq_append1\n\n",
 "prod_snd_mk":
 "@[simp]\ntheorem prod_snd_mk {α β : TypeVec n} (i : Fin2 n) (a : α i) (b : β i) : TypeVec.prod.snd i (prod.mk i a b) = b := by\n  induction i <;> simp_all [Prod.snd, prod.mk]\n#align prod_snd_mk prod_snd_mk\n\n",
 "prod_map_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod.map -/\n@[simp]\ntheorem prod_map_id {α β : TypeVec n} : typevec.prod.map (@TypeVec.id _ α) (@TypeVec.id _ β) = id :=\n  by\n  ext i : 2\n  induction i <;> simp only [TypeVec.prod.map, *, drop_fun_id]\n  cases x\n  rfl\n  rfl\n#align prod_map_id prod_map_id\n\n",
 "prod_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod.map -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod -/\ntheorem prod_id : ∀ {n} {α β : TypeVec.{u} n}, typevec.prod.map id id = (id : typevec.arrow (typevec.prod α β) _) :=\n  by\n  intros ; ext (i a); induction i\n  · cases a\n    rfl\n  · apply i_ih\n#align prod_id prod_id\n\n",
 "prod_fst_mk":
 "-- variables  {F : typevec.{u} n → Type*} [mvfunctor F]\n@[simp]\ntheorem prod_fst_mk {α β : TypeVec n} (i : Fin2 n) (a : α i) (b : β i) : TypeVec.prod.fst i (prod.mk i a b) = a := by\n  induction i <;> simp_all [Prod.fst, prod.mk]\n#align prod_fst_mk prod_fst_mk\n\n",
 "nil_fun_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\ntheorem nil_fun_comp {α₀ : TypeVec 0} (f₀ : typevec.arrow α₀ Fin2.elim0) : typevec.comp nilFun f₀ = f₀ :=\n  funext fun x => Fin2.elim0 x\n#align nil_fun_comp nil_fun_comp\n\n",
 "last_fun_to_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n@[simp]\ntheorem last_fun_to_subtype {α} (p : typevec.arrow α (repeat (n + 1) Prop)) : lastFun (toSubtype p) = id :=\n  by\n  ext i : 2\n  induction i <;> simp [drop_fun, *] <;> rfl\n#align last_fun_to_subtype last_fun_to_subtype\n\n",
 "last_fun_subtype_val":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n@[simp]\ntheorem last_fun_subtype_val {α} (p : typevec.arrow α (repeat (n + 1) Prop)) : lastFun (subtypeVal p) = Subtype.val :=\n  rfl\n#align last_fun_subtype_val last_fun_subtype_val\n\n",
 "last_fun_split_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n@[simp]\ntheorem last_fun_split_fun {α α' : TypeVec (n + 1)} (f : typevec.arrow (drop α) (drop α')) (g : last α → last α') :\n    lastFun (splitFun f g) = g :=\n  rfl\n#align last_fun_split_fun last_fun_split_fun\n\n",
 "last_fun_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod.map -/\n@[simp]\ntheorem last_fun_prod {α α' β β' : TypeVec (n + 1)} (f : typevec.arrow α β) (f' : typevec.arrow α' β') :\n    lastFun (typevec.prod.map f f') = _root_.prod.map (lastFun f) (lastFun f') :=\n  by\n  ext i : 1\n  induction i <;> simp [last_fun, *] <;> rfl\n#align last_fun_prod last_fun_prod\n\n",
 "last_fun_of_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n@[simp]\ntheorem last_fun_of_subtype {α} (p : typevec.arrow α (repeat (n + 1) Prop)) : lastFun (ofSubtype p) = id :=\n  by\n  ext i : 2\n  induction i <;> simp [drop_fun, *] <;> rfl\n#align last_fun_of_subtype last_fun_of_subtype\n\n",
 "last_fun_from_append1_drop_last":
 "@[simp]\ntheorem last_fun_from_append1_drop_last {α : TypeVec (n + 1)} : lastFun (@fromAppend1DropLast _ α) = id :=\n  rfl\n#align last_fun_from_append1_drop_last last_fun_from_append1_drop_last\n\n",
 "last_fun_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n@[simp]\ntheorem last_fun_comp {α₀ α₁ α₂ : TypeVec (n + 1)} (f₀ : typevec.arrow α₀ α₁) (f₁ : typevec.arrow α₁ α₂) :\n    lastFun (typevec.comp f₁ f₀) = lastFun f₁ ∘ lastFun f₀ :=\n  rfl\n#align last_fun_comp last_fun_comp\n\n",
 "last_fun_append_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n@[simp]\ntheorem last_fun_append_fun {α α' : TypeVec n} {β β' : Type _} (f : typevec.arrow α α') (g : β → β') :\n    lastFun (typevec.append_fun f g) = g :=\n  rfl\n#align last_fun_append_fun last_fun_append_fun\n\n",
 "last_append1":
 "theorem last_append1 {α : TypeVec n} {β : Type _} : last (append1 α β) = β :=\n  rfl\n#align last_append1 last_append1\n\n",
 "id_eq_nil_fun":
 "theorem id_eq_nil_fun {α : TypeVec 0} : @id _ α = nilFun := by ext x <;> cases x\n#align id_eq_nil_fun id_eq_nil_fun\n\n",
 "id_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/-\nCopyright (c) 2018 Jeremy Avigad. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jeremy Avigad, Mario Carneiro, Simon Hudon\n-/\n-- type as \\oo\n@[simp]\ntheorem id_comp {α β : TypeVec n} (f : typevec.arrow α β) : typevec.comp id f = f :=\n  rfl\n#align id_comp id_comp\n\n",
 "fst_prod_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod.map -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\ntheorem fst_prod_mk {α α' β β' : TypeVec n} (f : typevec.arrow α β) (g : typevec.arrow α' β') :\n    typevec.comp TypeVec.prod.fst (typevec.prod.map f g) = typevec.comp f TypeVec.prod.fst := by\n  ext i <;> induction i <;> [rfl, apply i_ih]\n#align fst_prod_mk fst_prod_mk\n\n",
 "fst_diag":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\ntheorem fst_diag {α : TypeVec n} : typevec.comp TypeVec.prod.fst (prod.diag : typevec.arrow α _) = id := by\n  ext i <;> induction i <;> [rfl, apply i_ih]\n#align fst_diag fst_diag\n\n",
 "eq_of_drop_last_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\ntheorem eq_of_drop_last_eq {α β : TypeVec (n + 1)} {f g : typevec.arrow α β} (h₀ : dropFun f = dropFun g)\n    (h₁ : lastFun f = lastFun g) : f = g := by replace h₀ := congr_fun h₀ <;> ext1 ⟨⟩ <;> apply_assumption\n#align eq_of_drop_last_eq eq_of_drop_last_eq\n\n",
 "eq_nil_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\ntheorem eq_nil_fun {α β : TypeVec 0} (f : typevec.arrow α β) : f = nilFun := by ext x <;> cases x\n#align eq_nil_fun eq_nil_fun\n\n",
 "drop_fun_to_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n@[simp]\ntheorem drop_fun_to_subtype {α} (p : typevec.arrow α (repeat (n + 1) Prop)) : dropFun (toSubtype p) = toSubtype _ :=\n  by\n  ext i : 2\n  induction i <;> simp [drop_fun, *] <;> rfl\n#align drop_fun_to_subtype drop_fun_to_subtype\n\n",
 "drop_fun_subtype_val":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n@[simp]\ntheorem drop_fun_subtype_val {α} (p : typevec.arrow α (repeat (n + 1) Prop)) : dropFun (subtypeVal p) = subtypeVal _ :=\n  rfl\n#align drop_fun_subtype_val drop_fun_subtype_val\n\n",
 "drop_fun_split_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n@[simp]\ntheorem drop_fun_split_fun {α α' : TypeVec (n + 1)} (f : typevec.arrow (drop α) (drop α')) (g : last α → last α') :\n    dropFun (splitFun f g) = f :=\n  rfl\n#align drop_fun_split_fun drop_fun_split_fun\n\n",
 "drop_fun_rel_last":
 "@[simp]\ntheorem drop_fun_rel_last {α : TypeVec n} {β} (R : β → β → Prop) : dropFun (RelLast' α R) = repeatEq α :=\n  rfl\n#align drop_fun_rel_last drop_fun_rel_last\n\n",
 "drop_fun_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod.map -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod.map -/\n@[simp]\ntheorem drop_fun_prod {α α' β β' : TypeVec (n + 1)} (f : typevec.arrow α β) (f' : typevec.arrow α' β') :\n    dropFun (typevec.prod.map f f') = typevec.prod.map (dropFun f) (dropFun f') :=\n  by\n  ext i : 2\n  induction i <;> simp [drop_fun, *] <;> rfl\n#align drop_fun_prod drop_fun_prod\n\n",
 "drop_fun_of_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n@[simp]\ntheorem drop_fun_of_subtype {α} (p : typevec.arrow α (repeat (n + 1) Prop)) : dropFun (ofSubtype p) = ofSubtype _ :=\n  by\n  ext i : 2\n  induction i <;> simp [drop_fun, *] <;> rfl\n#align drop_fun_of_subtype drop_fun_of_subtype\n\n",
 "drop_fun_id":
 "@[simp]\ntheorem drop_fun_id {α : TypeVec (n + 1)} : dropFun (@TypeVec.id _ α) = id :=\n  rfl\n#align drop_fun_id drop_fun_id\n\n",
 "drop_fun_from_append1_drop_last":
 "@[simp]\ntheorem drop_fun_from_append1_drop_last {α : TypeVec (n + 1)} : dropFun (@fromAppend1DropLast _ α) = id :=\n  rfl\n#align drop_fun_from_append1_drop_last drop_fun_from_append1_drop_last\n\n",
 "drop_fun_diag":
 "@[simp]\ntheorem drop_fun_diag {α} : dropFun (@prod.diag (n + 1) α) = prod.diag :=\n  by\n  ext i : 2\n  induction i <;> simp [drop_fun, *] <;> rfl\n#align drop_fun_diag drop_fun_diag\n\n",
 "drop_fun_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n@[simp]\ntheorem drop_fun_comp {α₀ α₁ α₂ : TypeVec (n + 1)} (f₀ : typevec.arrow α₀ α₁) (f₁ : typevec.arrow α₁ α₂) :\n    dropFun (typevec.comp f₁ f₀) = typevec.comp (dropFun f₁) (dropFun f₀) :=\n  rfl\n#align drop_fun_comp drop_fun_comp\n\n",
 "drop_fun_append_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n@[simp]\ntheorem drop_fun_append_fun {α α' : TypeVec n} {β β' : Type _} (f : typevec.arrow α α') (g : β → β') :\n    dropFun (typevec.append_fun f g) = f :=\n  rfl\n#align drop_fun_append_fun drop_fun_append_fun\n\n",
 "drop_append1'":
 "theorem drop_append1' {α : TypeVec n} {β : Type _} : drop (append1 α β) = α := by ext <;> apply drop_append1\n#align drop_append1' drop_append1'\n\n",
 "drop_append1":
 "theorem drop_append1 {α : TypeVec n} {β : Type _} {i : Fin2 n} : drop (append1 α β) i = α i :=\n  rfl\n#align drop_append1 drop_append1\n\n",
 "diag_sub_val":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\ntheorem diag_sub_val {n} {α : TypeVec.{u} n} : typevec.comp (subtypeVal (repeatEq α)) diagSub = prod.diag := by\n  ext i <;> induction i <;> [rfl, apply i_ih]\n#align diag_sub_val diag_sub_val\n\n",
 "const_nil":
 "theorem const_nil {β} (x : β) (α : TypeVec 0) : TypeVec.const x α = nilFun := by ext i : 1 <;> cases i <;> rfl\n#align const_nil const_nil\n\n",
 "const_iff_true":
 "theorem const_iff_true {α : TypeVec n} {i x p} : ofRepeat (TypeVec.const p α i x) ↔ p := by\n  induction i <;> [rfl, erw [TypeVec.const, @i_ih (drop α) x]]\n#align const_iff_true const_iff_true\n\n",
 "const_append1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n-- for lifting predicates and relations\ntheorem const_append1 {β γ} (x : γ) {n} (α : TypeVec n) :\n    TypeVec.const x (typevec.append_fun α β) = appendFun (TypeVec.const x α) fun _ => x := by\n  ext i : 1 <;> cases i <;> rfl\n#align const_append1 const_append1\n\n",
 "comp_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n@[simp]\ntheorem comp_id {α β : TypeVec n} (f : typevec.arrow α β) : typevec.comp f id = f :=\n  rfl\n#align comp_id comp_id\n\n",
 "comp_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\ntheorem comp_assoc {α β γ δ : TypeVec n} (h : typevec.arrow γ δ) (g : typevec.arrow β γ) (f : typevec.arrow α β) :\n    typevec.comp (typevec.comp h g) f = typevec.comp h (typevec.comp g f) :=\n  rfl\n#align comp_assoc comp_assoc\n\n",
 "cases_nil_append1":
 "protected theorem cases_nil_append1 {β : TypeVec 0 → Sort _} (f : β Fin2.elim0) : TypeVec.casesNil f Fin2.elim0 = f :=\n  rfl\n#align cases_nil_append1 cases_nil_append1\n\n",
 "cases_cons_append1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\nprotected theorem cases_cons_append1 (n : ℕ) {β : TypeVec (n + 1) → Sort _}\n    (f : ∀ (t) (v : TypeVec n), β (typevec.append_fun v t)) (v : TypeVec n) (α) :\n    TypeVec.casesCons n f (typevec.append_fun v α) = f α v :=\n  rfl\n#align cases_cons_append1 cases_cons_append1\n\n",
 "append_prod_append_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod.map -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.prod.map -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\ntheorem append_prod_append_fun {n} {α α' β β' : TypeVec.{u} n} {φ φ' ψ ψ' : Type u} {f₀ : typevec.arrow α α'}\n    {g₀ : typevec.arrow β β'} {f₁ : φ → φ'} {g₁ : ψ → ψ'} :\n    typevec.append_fun (typevec.prod.map f₀ g₀) (_root_.prod.map f₁ g₁) =\n      typevec.prod.map (typevec.append_fun f₀ f₁) (typevec.append_fun g₀ g₁) :=\n  by ext (i a) <;> cases i <;> [cases a, skip] <;> rfl\n#align append_prod_append_fun append_prod_append_fun\n\n",
 "append_fun_inj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\ntheorem append_fun_inj {α α' : TypeVec n} {β β' : Type _} {f f' : typevec.arrow α α'} {g g' : β → β'} :\n    typevec.append_fun f g = typevec.append_fun f' g' → f = f' ∧ g = g' :=\n  splitFun_inj\n#align append_fun_inj append_fun_inj\n\n",
 "append_fun_id_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\ntheorem append_fun_id_id {α : TypeVec n} {β : Type _} : typevec.append_fun (@TypeVec.id n α) (@id β) = TypeVec.id :=\n  eq_of_drop_last_eq rfl rfl\n#align append_fun_id_id append_fun_id_id\n\n",
 "append_fun_comp_split_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\ntheorem append_fun_comp_split_fun {α γ : TypeVec n} {β δ : Type _} {ε : TypeVec (n + 1)} (f₀ : typevec.arrow (drop ε) α)\n    (f₁ : typevec.arrow α γ) (g₀ : last ε → β) (g₁ : β → δ) :\n    typevec.comp (appendFun f₁ g₁) (splitFun f₀ g₀) = splitFun (typevec.comp f₁ f₀) (g₁ ∘ g₀) :=\n  (splitFun_comp _ _ _ _).symm\n#align append_fun_comp_split_fun append_fun_comp_split_fun\n\n",
 "append_fun_comp_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\ntheorem append_fun_comp_id {α : TypeVec n} {β₀ β₁ β₂ : Type _} (g₀ : β₀ → β₁) (g₁ : β₁ → β₂) :\n    typevec.append_fun (@id _ α) (g₁ ∘ g₀) = typevec.comp (typevec.append_fun id g₁) (typevec.append_fun id g₀) :=\n  eq_of_drop_last_eq rfl rfl\n#align append_fun_comp_id append_fun_comp_id\n\n",
 "append_fun_comp'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\ntheorem append_fun_comp' {α₀ α₁ α₂ : TypeVec n} {β₀ β₁ β₂ : Type _} (f₀ : typevec.arrow α₀ α₁)\n    (f₁ : typevec.arrow α₁ α₂) (g₀ : β₀ → β₁) (g₁ : β₁ → β₂) :\n    typevec.comp (typevec.append_fun f₁ g₁) (typevec.append_fun f₀ g₀) =\n      typevec.append_fun (typevec.comp f₁ f₀) (g₁ ∘ g₀) :=\n  eq_of_drop_last_eq rfl rfl\n#align append_fun_comp' append_fun_comp'\n\n",
 "append_fun_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.comp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\ntheorem append_fun_comp {α₀ α₁ α₂ : TypeVec n} {β₀ β₁ β₂ : Type _} (f₀ : typevec.arrow α₀ α₁) (f₁ : typevec.arrow α₁ α₂)\n    (g₀ : β₀ → β₁) (g₁ : β₁ → β₂) :\n    typevec.append_fun (typevec.comp f₁ f₀) (g₁ ∘ g₀) =\n      typevec.comp (typevec.append_fun f₁ g₁) (typevec.append_fun f₀ g₀) :=\n  eq_of_drop_last_eq rfl rfl\n#align append_fun_comp append_fun_comp\n\n",
 "append_fun_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.arrow -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `typevec.append_fun -/\ntheorem append_fun_aux {α α' : TypeVec n} {β β' : Type _}\n    (f : typevec.arrow (typevec.append_fun α β) (typevec.append_fun α' β')) :\n    typevec.append_fun (dropFun f) (lastFun f) = f :=\n  eq_of_drop_last_eq rfl rfl\n#align append_fun_aux append_fun_aux\n\n",
 "append1_drop_last":
 "@[simp]\ntheorem append1_drop_last (α : TypeVec (n + 1)) : append1 (drop α) (last α) = α :=\n  funext fun i => by cases i <;> rfl\n#align append1_drop_last append1_drop_last\n\n",
 "append1_cases_append1":
 "@[simp]\ntheorem append1_cases_append1 {C : TypeVec (n + 1) → Sort u} (H : ∀ α β, C (append1 α β)) (α β) :\n    @append1Cases _ C H (append1 α β) = H α β :=\n  rfl\n#align append1_cases_append1 append1_cases_append1\n\n"}