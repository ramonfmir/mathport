{"to_finsupp_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_algebra_map (r : R) : (algebra_map R (polynomial A) r).to_finsupp = algebra_map R _ r :=\n  show to_finsupp (C (algebra_map _ _ r)) = _ by\n    rw [to_finsupp_C]\n    rfl\n#align to_finsupp_algebra_map to_finsupp_algebra_map\n\n",
 "ring_hom_eval₂_cast_int_ring_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n-- these used to be about `algebra_map ℤ R`, but now the simp-normal form is `int.cast_ring_hom R`.\n@[simp]\ntheorem ring_hom_eval₂_cast_int_ring_hom {R S : Type _} [Ring R] [Ring S] (p : polynomial ℤ) (f : «expr →+* » R S)\n    (r : R) : f (eval₂ (Int.castRingHom R) r p) = eval₂ (Int.castRingHom S) (f r) p :=\n  alg_hom_eval₂_algebra_map p f.to_int_alg_hom r\n#align ring_hom_eval₂_cast_int_ring_hom ring_hom_eval₂_cast_int_ring_hom\n\n",
 "of_finsupp_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem of_finsupp_algebra_map (r : R) : (⟨algebra_map R _ r⟩ : polynomial A) = algebra_map R (polynomial A) r :=\n  to_finsupp_injective (to_finsupp_algebra_map _).symm\n#align of_finsupp_algebra_map of_finsupp_algebra_map\n\n",
 "not_is_unit_X_sub_C":
 "theorem not_is_unit_X_sub_C [nontrivial R] (r : R) : ¬is_unit (X - C r) := fun ⟨⟨_, g, hfg, hgf⟩, rfl⟩ =>\n  zero_ne_one' R <| by erw [← eval_mul_X_sub_C, hgf, eval_one]\n#align not_is_unit_X_sub_C not_is_unit_X_sub_C\n\n",
 "map_aeval_eq_aeval_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem map_aeval_eq_aeval_map {S T U : Type _} [CommSemiring S] [CommSemiring T] [Semiring U] [algebra R S]\n    [algebra T U] {φ : «expr →+* » R T} {ψ : «expr →+* » S U} (h : (algebra_map T U).comp φ = ψ.comp (algebra_map R S))\n    (p : polynomial R) (a : S) : ψ (aeval a p) = aeval (ψ a) (p.map φ) :=\n  by\n  conv_rhs => rw [aeval_def, ← eval_map]\n  rw [map_map, h, ← map_map, eval_map, eval₂_at_apply, aeval_def, eval_map]\n#align map_aeval_eq_aeval_map map_aeval_eq_aeval_map\n\n",
 "is_root_of_eval₂_map_eq_zero":
 "theorem is_root_of_eval₂_map_eq_zero (hf : function.injective f) {r : R} : eval₂ f (f r) p = 0 → p.is_root r :=\n  by\n  intro h\n  apply hf\n  rw [← eval₂_hom, h, f.map_zero]\n#align is_root_of_eval₂_map_eq_zero is_root_of_eval₂_map_eq_zero\n\n",
 "is_root_of_aeval_algebra_map_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem is_root_of_aeval_algebra_map_eq_zero [algebra R S] {p : polynomial R}\n    (inj : function.injective (algebra_map R S)) {r : R} (hr : aeval (algebra_map R S r) p = 0) : p.is_root r :=\n  is_root_of_eval₂_map_eq_zero inj hr\n#align is_root_of_aeval_algebra_map_eq_zero is_root_of_aeval_algebra_map_eq_zero\n\n",
 "eval₂_int_cast_ring_hom_X":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem eval₂_int_cast_ring_hom_X {R : Type _} [Ring R] (p : polynomial ℤ) (f : «expr →+* » (polynomial ℤ) R) :\n    eval₂ (Int.castRingHom R) (f X) p = f p :=\n  eval₂_algebra_map_X p f.to_int_alg_hom\n#align eval₂_int_cast_ring_hom_X eval₂_int_cast_ring_hom_X\n\n",
 "eval₂_algebra_map_X":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem eval₂_algebra_map_X {R A : Type _} [CommSemiring R] [Semiring A] [algebra R A] (p : polynomial R)\n    (f : «expr →ₐ[ ] » (polynomial R) R A) : eval₂ (algebra_map R A) (f X) p = f p :=\n  by\n  conv_rhs => rw [← polynomial.sum_C_mul_X_pow_eq p]\n  dsimp [eval₂, sum]\n  simp only [f.map_sum, f.map_mul, f.map_pow, eq_intCast, map_intCast]\n  simp [polynomial.C_eq_algebra_map]\n#align eval₂_algebra_map_X eval₂_algebra_map_X\n\n",
 "eval_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem eval_unique (φ : «expr →ₐ[ ] » (polynomial R) R A) (p) : φ p = eval₂ (algebra_map R A) (φ X) p := by\n  rw [← aeval_def, aeval_alg_hom, aeval_X_left, alg_hom.comp_id]\n#align eval_unique eval_unique\n\n",
 "eval_mul_X_sub_C":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-- The evaluation map is not generally multiplicative when the coefficient ring is noncommutative,\nbut nevertheless any polynomial of the form `p * (X - monomial 0 r)` is sent to zero\nwhen evaluated at `r`.\n\nThis is the key step in our proof of the Cayley-Hamilton theorem.\n-/\ntheorem eval_mul_X_sub_C {p : polynomial R} (r : R) : (p * (X - C r)).eval r = 0 :=\n  by\n  simp only [eval, eval₂, RingHom.id_apply]\n  have bound :=\n    calc\n      (p * (X - C r)).nat_degree ≤ p.nat_degree + (X - C r).nat_degree := nat_degree_mul_le\n      _ ≤ p.nat_degree + 1 := add_le_add_left (nat_degree_X_sub_C_le _) _\n      _ < p.nat_degree + 2 := lt_add_one _\n      \n  rw [sum_over_range' _ _ (p.nat_degree + 2) bound]\n  swap\n  · simp\n  rw [sum_range_succ']\n  conv_lhs =>\n    congr\n    apply_congr\n    skip\n    rw [coeff_mul_X_sub_C, sub_mul, mul_assoc, ← pow_succ]\n  simp [sum_range_sub', coeff_monomial]\n#align eval_mul_X_sub_C eval_mul_X_sub_C\n\n",
 "dvd_term_of_is_root_of_dvd_terms":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (j «expr ≠ » i) -/\ntheorem dvd_term_of_is_root_of_dvd_terms {r p : S} {f : polynomial S} (i : ℕ) (hr : f.is_root r)\n    (h : ∀ (j) (_ : j ≠ i), p ∣ f.coeff j * r ^ j) : p ∣ f.coeff i * r ^ i :=\n  dvd_term_of_dvd_eval_of_dvd_terms i (eq.symm hr ▸ dvd_zero p) h\n#align dvd_term_of_is_root_of_dvd_terms dvd_term_of_is_root_of_dvd_terms\n\n",
 "dvd_term_of_dvd_eval_of_dvd_terms":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (j «expr ≠ » i) -/\ntheorem dvd_term_of_dvd_eval_of_dvd_terms {z p : S} {f : polynomial S} (i : ℕ) (dvd_eval : p ∣ f.eval z)\n    (dvd_terms : ∀ (j) (_ : j ≠ i), p ∣ f.coeff j * z ^ j) : p ∣ f.coeff i * z ^ i :=\n  by\n  by_cases hi : i ∈ f.support\n  · rw [eval, eval₂, sum] at dvd_eval\n    rw [← Finset.insert_erase hi, finset.sum_insert (Finset.not_mem_erase _ _)] at dvd_eval\n    refine' (dvd_add_left _).mp dvd_eval\n    apply finset.dvd_sum\n    intro j hj\n    exact dvd_terms j (Finset.ne_of_mem_erase hj)\n  · convert dvd_zero p\n    rw [not_mem_support_iff] at hi\n    simp [hi]\n#align dvd_term_of_dvd_eval_of_dvd_terms dvd_term_of_dvd_eval_of_dvd_terms\n\n",
 "coeff_zero_eq_aeval_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem coeff_zero_eq_aeval_zero' (p : polynomial R) : algebra_map R A (p.coeff 0) = aeval (0 : A) p := by\n  simp [aeval_def]\n#align coeff_zero_eq_aeval_zero' coeff_zero_eq_aeval_zero'\n\n",
 "coeff_zero_eq_aeval_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem coeff_zero_eq_aeval_zero (p : polynomial R) : p.coeff 0 = aeval 0 p := by simp [coeff_zero_eq_eval_zero]\n#align coeff_zero_eq_aeval_zero coeff_zero_eq_aeval_zero\n\n",
 "coe_aeval_eq_eval":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem coe_aeval_eq_eval (r : R) : (aeval r : polynomial R → R) = eval r :=\n  rfl\n#align coe_aeval_eq_eval coe_aeval_eq_eval\n\n",
 "algebra_map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Johannes Hölzl, Scott Morrison, Jens Wagemaker\n-/\ntheorem algebra_map_apply (r : R) : algebra_map R (polynomial A) r = C (algebra_map R A r) :=\n  rfl\n#align algebra_map_apply algebra_map_apply\n\n",
 "alg_hom_ext'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-- Extensionality lemma for algebra maps out of `A'[X]` over a smaller base ring than `A'`\n-/\n@[ext]\ntheorem alg_hom_ext' [algebra R A'] [algebra R B'] {f g : «expr →ₐ[ ] » (polynomial A') R B'}\n    (h₁ :\n      f.comp (is_scalar_tower.to_alg_hom R A' (polynomial A')) =\n        g.comp (is_scalar_tower.to_alg_hom R A' (polynomial A')))\n    (h₂ : f X = g X) : f = g :=\n  alg_hom.coe_ring_hom_injective (polynomial.ring_hom_ext' (congr_arg alg_hom.to_ring_hom h₁) h₂)\n#align alg_hom_ext' alg_hom_ext'\n\n",
 "alg_hom_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[ext]\ntheorem alg_hom_ext {f g : «expr →ₐ[ ] » (polynomial R) R A} (h : f X = g X) : f = g :=\n  alg_hom.ext_of_adjoin_eq_top adjoin_X fun p hp => (Set.mem_singleton_iff.1 hp).symm ▸ h\n#align alg_hom_ext alg_hom_ext\n\n",
 "alg_hom_eval₂_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem alg_hom_eval₂_algebra_map {R A B : Type _} [CommSemiring R] [Semiring A] [Semiring B] [algebra R A]\n    [algebra R B] (p : polynomial R) (f : «expr →ₐ[ ] » A R B) (a : A) :\n    f (eval₂ (algebra_map R A) a p) = eval₂ (algebra_map R B) (f a) p :=\n  by\n  dsimp [eval₂, sum]\n  simp only [f.map_sum, f.map_mul, f.map_pow, eq_intCast, map_intCast, alg_hom.commutes]\n#align alg_hom_eval₂_algebra_map alg_hom_eval₂_algebra_map\n\n",
 "aeval_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_zero : aeval x (0 : polynomial R) = 0 :=\n  alg_hom.map_zero (aeval x)\n#align aeval_zero aeval_zero\n\n",
 "aeval_tower_to_alg_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem aeval_tower_to_alg_hom (x : R) : aeval_tower g y (is_scalar_tower.to_alg_hom S R (polynomial R) x) = g x :=\n  aeval_tower_algebra_map _ _ _\n#align aeval_tower_to_alg_hom aeval_tower_to_alg_hom\n\n",
 "aeval_tower_of_id":
 "@[simp]\ntheorem aeval_tower_of_id : aeval_tower (algebra.of_id S A') = aeval :=\n  by\n  ext\n  simp only [aeval_X, aeval_tower_X]\n#align aeval_tower_of_id aeval_tower_of_id\n\n",
 "aeval_tower_id":
 "@[simp]\ntheorem aeval_tower_id : aeval_tower (alg_hom.id S S) = aeval :=\n  by\n  ext\n  simp only [eval_X, aeval_tower_X, coe_aeval_eq_eval]\n#align aeval_tower_id aeval_tower_id\n\n",
 "aeval_tower_comp_to_alg_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_tower_comp_to_alg_hom : (aeval_tower g y).comp (is_scalar_tower.to_alg_hom S R (polynomial R)) = g :=\n  alg_hom.coe_ring_hom_injective <| aeval_tower_comp_algebra_map _ _\n#align aeval_tower_comp_to_alg_hom aeval_tower_comp_to_alg_hom\n\n",
 "aeval_tower_comp_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_tower_comp_algebra_map :\n    (aeval_tower g y : «expr →+* » (polynomial R) A').comp (algebra_map R (polynomial R)) = g :=\n  aeval_tower_comp_C _ _\n#align aeval_tower_comp_algebra_map aeval_tower_comp_algebra_map\n\n",
 "aeval_tower_comp_C":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_tower_comp_C : (aeval_tower g y : «expr →+* » (polynomial R) A').comp C = g :=\n  RingHom.ext <| aeval_tower_C _ _\n#align aeval_tower_comp_C aeval_tower_comp_C\n\n",
 "aeval_tower_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_tower_algebra_map (x : R) : aeval_tower g y (algebra_map R (polynomial R) x) = g x :=\n  eval₂_C _ _\n#align aeval_tower_algebra_map aeval_tower_algebra_map\n\n",
 "aeval_tower_X":
 "@[simp]\ntheorem aeval_tower_X : aeval_tower g y X = y :=\n  eval₂_X _ _\n#align aeval_tower_X aeval_tower_X\n\n",
 "aeval_tower_C":
 "@[simp]\ntheorem aeval_tower_C (x : R) : aeval_tower g y (C x) = g x :=\n  eval₂_C _ _\n#align aeval_tower_C aeval_tower_C\n\n",
 "aeval_subalgebra_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[norm_cast]\ntheorem aeval_subalgebra_coe (g : polynomial R) {A : Type _} [Semiring A] [algebra R A] (s : subalgebra R A) (f : s) :\n    (aeval f g : A) = aeval (f : A) g :=\n  (aeval_alg_hom_apply s.val f g).symm\n#align aeval_subalgebra_coe aeval_subalgebra_coe\n\n",
 "aeval_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_one : aeval x (1 : polynomial R) = 1 :=\n  alg_hom.map_one _\n#align aeval_one aeval_one\n\n",
 "aeval_nat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_nat_cast (n : ℕ) : aeval x (n : polynomial R) = n :=\n  map_nat_cast _ _\n#align aeval_nat_cast aeval_nat_cast\n\n",
 "aeval_mul":
 "theorem aeval_mul : aeval x (p * q) = aeval x p * aeval x q :=\n  alg_hom.map_mul _ _ _\n#align aeval_mul aeval_mul\n\n",
 "aeval_monomial":
 "@[simp]\ntheorem aeval_monomial {n : ℕ} {r : R} : aeval x (monomial n r) = algebra_map _ _ r * x ^ n :=\n  eval₂_monomial _ _\n#align aeval_monomial aeval_monomial\n\n",
 "aeval_fn_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_fn_apply {X : Type _} (g : polynomial R) (f : X → R) (x : X) : ((aeval f) g) x = aeval (f x) g :=\n  (aeval_alg_hom_apply (pi.eval_alg_hom R (fun _ => R) x) f g).symm\n#align aeval_fn_apply aeval_fn_apply\n\n",
 "aeval_eq_zero_of_dvd_aeval_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem aeval_eq_zero_of_dvd_aeval_eq_zero [CommSemiring S] [CommSemiring T] [algebra S T] {p q : polynomial S}\n    (h₁ : p ∣ q) {a : T} (h₂ : aeval a p = 0) : aeval a q = 0 :=\n  by\n  rw [aeval_def, ← eval_map] at h₂⊢\n  exact eval_eq_zero_of_dvd_of_eval_eq_zero (polynomial.map_dvd (algebra_map S T) h₁) h₂\n#align aeval_eq_zero_of_dvd_aeval_eq_zero aeval_eq_zero_of_dvd_aeval_eq_zero\n\n",
 "aeval_eq_sum_range'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem aeval_eq_sum_range' [algebra R S] {p : polynomial R} {n : ℕ} (hn : p.nat_degree < n) (x : S) :\n    aeval x p =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n        («expr • » (p.coeff i) (x ^ i)) :=\n  by\n  simp_rw [algebra.smul_def]\n  exact eval₂_eq_sum_range' (algebra_map R S) hn x\n#align aeval_eq_sum_range' aeval_eq_sum_range'\n\n",
 "aeval_eq_sum_range":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem aeval_eq_sum_range [algebra R S] {p : polynomial R} (x : S) :\n    aeval x p =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (Finset.range (p.nat_degree + 1)) («expr • » (p.coeff i) (x ^ i)) :=\n  by\n  simp_rw [algebra.smul_def]\n  exact eval₂_eq_sum_range (algebra_map R S) x\n#align aeval_eq_sum_range aeval_eq_sum_range\n\n",
 "aeval_endomorphism":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem aeval_endomorphism {M : Type _} [CommRing R] [add_comm_group M] [Module R M] (f : «expr →ₗ[ ] » M R M) (v : M)\n    (p : polynomial R) : aeval f p v = p.sum fun n b => «expr • » b ((f ^ n) v) :=\n  by\n  rw [aeval_def, eval₂]\n  exact (linear_map.applyₗ v).map_sum\n#align aeval_endomorphism aeval_endomorphism\n\n",
 "aeval_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem aeval_def (p : polynomial R) : aeval x p = eval₂ (algebra_map R A) x p :=\n  rfl\n#align aeval_def aeval_def\n\n",
 "aeval_comp":
 "theorem aeval_comp {A : Type _} [CommSemiring A] [algebra R A] (x : A) : aeval x (p.comp q) = aeval (aeval x q) p :=\n  eval₂_comp (algebra_map R A)\n#align aeval_comp aeval_comp\n\n",
 "aeval_bit1":
 "@[simp]\ntheorem aeval_bit1 : aeval x (bit1 p) = bit1 (aeval x p) :=\n  alg_hom.map_bit1 _ _\n#align aeval_bit1 aeval_bit1\n\n",
 "aeval_bit0":
 "@[simp]\ntheorem aeval_bit0 : aeval x (bit0 p) = bit0 (aeval x p) :=\n  alg_hom.map_bit0 _ _\n#align aeval_bit0 aeval_bit0\n\n",
 "aeval_algebra_map_apply_eq_algebra_map_eval":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem aeval_algebra_map_apply_eq_algebra_map_eval (x : R) (p : polynomial R) :\n    aeval (algebra_map R A x) p = algebra_map R A (p.eval x) :=\n  aeval_alg_hom_apply (algebra.of_id R A) x p\n#align aeval_algebra_map_apply_eq_algebra_map_eval aeval_algebra_map_apply_eq_algebra_map_eval\n\n",
 "aeval_alg_hom_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem aeval_alg_hom_apply {F : Type _} [alg_hom_class F R A B] (f : F) (x : A) (p : polynomial R) :\n    aeval (f x) p = f (aeval x p) :=\n  by\n  refine' polynomial.induction_on p (by simp) (fun p q hp hq => _) (by simp)\n  rw [map_add, hp, hq, ← map_add, ← map_add]\n#align aeval_alg_hom_apply aeval_alg_hom_apply\n\n",
 "aeval_alg_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\ntheorem aeval_alg_hom (f : «expr →ₐ[ ] » A R B) (x : A) : aeval (f x) = f.comp (aeval x) :=\n  alg_hom_ext <| by simp only [aeval_X, alg_hom.comp_apply]\n#align aeval_alg_hom aeval_alg_hom\n\n",
 "aeval_alg_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₐ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\ntheorem aeval_alg_equiv (f : «expr ≃ₐ[ ] » A R B) (x : A) : aeval (f x) = (f : «expr →ₐ[ ] » A R B).comp (aeval x) :=\n  aeval_alg_hom (f : «expr →ₐ[ ] » A R B) x\n#align aeval_alg_equiv aeval_alg_equiv\n\n",
 "aeval_add":
 "@[simp]\ntheorem aeval_add : aeval x (p + q) = aeval x p + aeval x q :=\n  alg_hom.map_add _ _ _\n#align aeval_add aeval_add\n\n",
 "aeval_X_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_X_pow {n : ℕ} : aeval x ((X : polynomial R) ^ n) = x ^ n :=\n  eval₂_X_pow _ _\n#align aeval_X_pow aeval_X_pow\n\n",
 "aeval_X_left_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem aeval_X_left_apply (p : polynomial R) : aeval X p = p :=\n  alg_hom.congr_fun (@aeval_X_left R _) p\n#align aeval_X_left_apply aeval_X_left_apply\n\n",
 "aeval_X_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_X_left : aeval (X : polynomial R) = alg_hom.id R (polynomial R) :=\n  alg_hom_ext <| aeval_X X\n#align aeval_X_left aeval_X_left\n\n",
 "aeval_X":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem aeval_X : aeval x (X : polynomial R) = x :=\n  eval₂_X _ x\n#align aeval_X aeval_X\n\n",
 "aeval_C":
 "@[simp]\ntheorem aeval_C (r : R) : aeval x (C r) = algebra_map R A r :=\n  eval₂_C _ x\n#align aeval_C aeval_C\n\n",
 "adjoin_singleton_eq_range_aeval":
 "theorem _root_.algebra.adjoin_singleton_eq_range_aeval (x : A) : algebra.adjoin R {x} = (polynomial.aeval x).range := by\n  rw [← algebra.map_top, ← adjoin_X, alg_hom.map_adjoin, Set.image_singleton, aeval_X]\n#align algebra.adjoin_singleton_eq_range_aeval algebra.adjoin_singleton_eq_range_aeval\n\n",
 "adjoin_X":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem adjoin_X : algebra.adjoin R ({X} : set (polynomial R)) = «expr⊤» :=\n  by\n  refine' top_unique fun p hp => _\n  set S := algebra.adjoin R ({X} : set (polynomial R))\n  rw [← sum_monomial_eq p]; simp only [← smul_X_eq_monomial, sum]\n  exact S.sum_mem fun n hn => S.smul_mem (S.pow_mem (algebra.subset_adjoin rfl) _) _\n#align adjoin_X adjoin_X\n\n",
 "C_eq_algebra_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-- When we have `[comm_semiring R]`, the function `C` is the same as `algebra_map R R[X]`.\n\n(But note that `C` is defined when `R` is not necessarily commutative, in which case\n`algebra_map` is not available.)\n-/\ntheorem C_eq_algebra_map (r : R) : C r = algebra_map R (polynomial R) r :=\n  rfl\n#align C_eq_algebra_map C_eq_algebra_map\n\n"}