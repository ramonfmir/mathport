{"support_integral_normalization":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem support_integral_normalization {f : polynomial R} : (integral_normalization f).support = f.support :=\n  by\n  by_cases hf : f = 0; · simp [hf]\n  ext i\n  refine' ⟨fun h => integral_normalization_support h, _⟩\n  simp only [integral_normalization_coeff, mem_support_iff]\n  intro hfi\n  split_ifs with hi <;> simp [hfi, hi, pow_ne_zero _ (leading_coeff_ne_zero.mpr hf)]\n#align support_integral_normalization support_integral_normalization\n\n",
 "monic_integral_normalization":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem monic_integral_normalization {f : polynomial R} (hf : f ≠ 0) : monic (integral_normalization f) :=\n  monic_of_degree_le f.nat_degree\n    (finset.sup_le fun i h => WithBot.coe_le_coe.2 <| le_nat_degree_of_mem_supp i <| integral_normalization_support h)\n    (integral_normalization_coeff_nat_degree hf)\n#align monic_integral_normalization monic_integral_normalization\n\n",
 "integral_normalization_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Johannes Hölzl, Scott Morrison, Jens Wagemaker\n-/\n@[simp]\ntheorem integral_normalization_zero : integral_normalization (0 : polynomial R) = 0 := by simp [integral_normalization]\n#align integral_normalization_zero integral_normalization_zero\n\n",
 "integral_normalization_support":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem integral_normalization_support {f : polynomial R} : (integral_normalization f).support ⊆ f.support :=\n  by\n  intro\n  simp (config := { contextual := true }) [integral_normalization, coeff_monomial, mem_support_iff]\n#align integral_normalization_support integral_normalization_support\n\n",
 "integral_normalization_eval₂_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\ntheorem integral_normalization_eval₂_eq_zero {p : polynomial R} (f : «expr →+* » R S) {z : S} (hz : eval₂ f z p = 0)\n    (inj : ∀ x : R, f x = 0 → x = 0) : eval₂ f (z * f p.leading_coeff) (integral_normalization p) = 0 :=\n  calc\n    eval₂ f (z * f p.leading_coeff) (integral_normalization p) =\n        p.support.attach.sum fun i => f (coeff (integral_normalization p) i.1 * p.leading_coeff ^ i.1) * z ^ i.1 :=\n      by\n      rw [eval₂, sum_def, support_integral_normalization]\n      simp only [mul_comm z, mul_pow, mul_assoc, RingHom.map_pow, RingHom.map_mul]\n      exact finset.sum_attach.symm\n    _ = p.support.attach.sum fun i => f (coeff p i.1 * p.leading_coeff ^ (nat_degree p - 1)) * z ^ i.1 :=\n      by\n      by_cases hp : p = 0; · simp [hp]\n      have one_le_deg : 1 ≤ nat_degree p := nat.succ_le_of_lt (nat_degree_pos_of_eval₂_root hp f hz inj)\n      congr with i\n      congr 2\n      by_cases hi : i.1 = nat_degree p\n      · rw [hi, integral_normalization_coeff_degree, one_mul, leading_coeff, ← pow_succ,\n          tsub_add_cancel_of_le one_le_deg]\n        exact degree_eq_nat_degree hp\n      · have : i.1 ≤ p.nat_degree - 1 :=\n          Nat.le_pred_of_lt (lt_of_le_of_ne (le_nat_degree_of_ne_zero (mem_support_iff.mp i.2)) hi)\n        rw [integral_normalization_coeff_ne_nat_degree hi, mul_assoc, ← pow_add, tsub_add_cancel_of_le this]\n    _ = f p.leading_coeff ^ (nat_degree p - 1) * eval₂ f z p :=\n      by\n      simp_rw [eval₂, sum_def, fun i => mul_comm (coeff p i), RingHom.map_mul, RingHom.map_pow, mul_assoc, ←\n        finset.mul_sum]\n      congr 1\n      exact @finset.sum_attach _ _ p.support _ fun i => f (p.coeff i) * z ^ i\n    _ = 0 := by rw [hz, _root_.mul_zero]\n    \n#align integral_normalization_eval₂_eq_zero integral_normalization_eval₂_eq_zero\n\n",
 "integral_normalization_coeff_ne_nat_degree":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem integral_normalization_coeff_ne_nat_degree {f : polynomial R} {i : ℕ} (hi : i ≠ nat_degree f) :\n    coeff (integral_normalization f) i = coeff f i * f.leading_coeff ^ (f.nat_degree - 1 - i) :=\n  integral_normalization_coeff_ne_degree (degree_ne_of_nat_degree_ne hi.symm)\n#align integral_normalization_coeff_ne_nat_degree integral_normalization_coeff_ne_nat_degree\n\n",
 "integral_normalization_coeff_ne_degree":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem integral_normalization_coeff_ne_degree {f : polynomial R} {i : ℕ} (hi : f.degree ≠ i) :\n    coeff (integral_normalization f) i = coeff f i * f.leading_coeff ^ (f.nat_degree - 1 - i) := by\n  rw [integral_normalization_coeff, if_neg hi]\n#align integral_normalization_coeff_ne_degree integral_normalization_coeff_ne_degree\n\n",
 "integral_normalization_coeff_nat_degree":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem integral_normalization_coeff_nat_degree {f : polynomial R} (hf : f ≠ 0) :\n    (integral_normalization f).coeff (nat_degree f) = 1 :=\n  integral_normalization_coeff_degree (degree_eq_nat_degree hf)\n#align integral_normalization_coeff_nat_degree integral_normalization_coeff_nat_degree\n\n",
 "integral_normalization_coeff_degree":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem integral_normalization_coeff_degree {f : polynomial R} {i : ℕ} (hi : f.degree = i) :\n    (integral_normalization f).coeff i = 1 := by rw [integral_normalization_coeff, if_pos hi]\n#align integral_normalization_coeff_degree integral_normalization_coeff_degree\n\n",
 "integral_normalization_coeff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem integral_normalization_coeff {f : polynomial R} {i : ℕ} :\n    (integral_normalization f).coeff i =\n      if f.degree = i then 1 else coeff f i * f.leading_coeff ^ (f.nat_degree - 1 - i) :=\n  by\n  have : f.coeff i = 0 → f.degree ≠ i := fun hc hd => coeff_ne_zero_of_eq_degree hd hc\n  simp (config := { contextual := true }) [integral_normalization, coeff_monomial, this, mem_support_iff]\n#align integral_normalization_coeff integral_normalization_coeff\n\n",
 "integral_normalization_aeval_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem integral_normalization_aeval_eq_zero [algebra R S] {f : polynomial R} {z : S} (hz : aeval z f = 0)\n    (inj : ∀ x : R, algebra_map R S x = 0 → x = 0) :\n    aeval (z * algebra_map R S f.leading_coeff) (integral_normalization f) = 0 :=\n  integral_normalization_eval₂_eq_zero (algebra_map R S) hz inj\n#align integral_normalization_aeval_eq_zero integral_normalization_aeval_eq_zero\n\n"}