{"update_zero_eq_erase":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem update_zero_eq_erase (p : polynomial R) (n : ℕ) : p.update n 0 = p.erase n :=\n  by\n  ext\n  rw [coeff_update_apply, coeff_erase]\n#align update_zero_eq_erase update_zero_eq_erase\n\n",
 "to_finsupp_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_zero : (0 : polynomial R).to_finsupp = 0 :=\n  rfl\n#align to_finsupp_zero to_finsupp_zero\n\n",
 "to_finsupp_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem to_finsupp_sum {ι : Type _} (s : Finset ι) (f : ι → polynomial R) :\n    (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i) :\n          polynomial R).to_finsupp =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (f i).to_finsupp :=\n  map_sum (toFinsuppIso R) f s\n#align to_finsupp_sum to_finsupp_sum\n\n",
 "to_finsupp_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_sub {R : Type u} [Ring R] (a b : polynomial R) : (a - b).to_finsupp = a.to_finsupp - b.to_finsupp :=\n  by\n  rw [sub_eq_add_neg, ← to_finsupp_neg, ← to_finsupp_add]\n  rfl\n#align to_finsupp_sub to_finsupp_sub\n\n",
 "to_finsupp_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem to_finsupp_smul {S : Type _} [SMulZeroClass S R] (a : S) (b : polynomial R) :\n    («expr • » a b).to_finsupp = «expr • » a b.to_finsupp :=\n  rfl\n#align to_finsupp_smul to_finsupp_smul\n\n",
 "to_finsupp_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_pow (a : polynomial R) (n : ℕ) : (a ^ n).to_finsupp = a.to_finsupp ^ n :=\n  by\n  cases a\n  rw [← of_finsupp_pow]\n#align to_finsupp_pow to_finsupp_pow\n\n",
 "to_finsupp_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_one : (1 : polynomial R).to_finsupp = 1 :=\n  rfl\n#align to_finsupp_one to_finsupp_one\n\n",
 "to_finsupp_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_neg {R : Type u} [Ring R] (a : polynomial R) : (-a).to_finsupp = -a.to_finsupp :=\n  by\n  cases a\n  rw [← of_finsupp_neg]\n#align to_finsupp_neg to_finsupp_neg\n\n",
 "to_finsupp_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_mul (a b : polynomial R) : (a * b).to_finsupp = a.to_finsupp * b.to_finsupp :=\n  by\n  cases a\n  cases b\n  rw [← of_finsupp_mul]\n#align to_finsupp_mul to_finsupp_mul\n\n",
 "to_finsupp_monomial":
 "@[simp]\ntheorem to_finsupp_monomial (n : ℕ) (r : R) : (monomial n r).to_finsupp = Finsupp.single n r := by simp [monomial]\n#align to_finsupp_monomial to_finsupp_monomial\n\n",
 "to_finsupp_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem to_finsupp_injective : function.injective (toFinsupp : polynomial R → AddMonoidAlgebra _ _) := fun ⟨x⟩ ⟨y⟩ =>\n  congr_arg _\n#align to_finsupp_injective to_finsupp_injective\n\n",
 "to_finsupp_inj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_inj {a b : polynomial R} : a.to_finsupp = b.to_finsupp ↔ a = b :=\n  toFinsupp_injective.eq_iff\n#align to_finsupp_inj to_finsupp_inj\n\n",
 "to_finsupp_erase":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_erase (p : polynomial R) (n : ℕ) : toFinsupp (p.erase n) = p.to_finsupp.erase n :=\n  by\n  rcases p with ⟨⟩\n  simp only [erase]\n#align to_finsupp_erase to_finsupp_erase\n\n",
 "to_finsupp_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_eq_zero {a : polynomial R} : a.to_finsupp = 0 ↔ a = 0 := by rw [← to_finsupp_zero, to_finsupp_inj]\n#align to_finsupp_eq_zero to_finsupp_eq_zero\n\n",
 "to_finsupp_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_eq_one {a : polynomial R} : a.to_finsupp = 1 ↔ a = 1 := by rw [← to_finsupp_one, to_finsupp_inj]\n#align to_finsupp_eq_one to_finsupp_eq_one\n\n",
 "to_finsupp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem to_finsupp_apply (f : polynomial R) (i) : f.to_finsupp i = f.coeff i := by cases f <;> rfl\n#align to_finsupp_apply to_finsupp_apply\n\n",
 "to_finsupp_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem to_finsupp_add (a b : polynomial R) : (a + b).to_finsupp = a.to_finsupp + b.to_finsupp :=\n  by\n  cases a\n  cases b\n  rw [← of_finsupp_add]\n#align to_finsupp_add to_finsupp_add\n\n",
 "to_finsupp_X_pow":
 "@[simp]\ntheorem to_finsupp_X_pow (n : ℕ) : (X ^ n).to_finsupp = Finsupp.single n (1 : R) := by\n  rw [X_pow_eq_monomial, to_finsupp_monomial]\n#align to_finsupp_X_pow to_finsupp_X_pow\n\n",
 "to_finsupp_X":
 "@[simp]\ntheorem to_finsupp_X : X.to_finsupp = Finsupp.single 1 (1 : R) :=\n  rfl\n#align to_finsupp_X to_finsupp_X\n\n",
 "to_finsupp_C_mul_X_pow":
 "@[simp]\ntheorem to_finsupp_C_mul_X_pow (a : R) (n : ℕ) : (C a * X ^ n).to_finsupp = Finsupp.single n a := by\n  rw [C_mul_X_pow_eq_monomial, to_finsupp_monomial]\n#align to_finsupp_C_mul_X_pow to_finsupp_C_mul_X_pow\n\n",
 "to_finsupp_C_mul_X":
 "@[simp]\ntheorem to_finsupp_C_mul_X (a : R) : (C a * X).to_finsupp = Finsupp.single 1 a := by\n  rw [C_mul_X_eq_monomial, to_finsupp_monomial]\n#align to_finsupp_C_mul_X to_finsupp_C_mul_X\n\n",
 "to_finsupp_C":
 "@[simp]\ntheorem to_finsupp_C (a : R) : (C a).to_finsupp = single 0 a :=\n  rfl\n#align to_finsupp_C to_finsupp_C\n\n",
 "support_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem support_zero : (0 : polynomial R).support = ∅ :=\n  rfl\n#align support_zero support_zero\n\n",
 "support_update_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem support_update_zero (p : polynomial R) (n : ℕ) : support (p.update n 0) = p.support.erase n := by\n  rw [update_zero_eq_erase, support_erase]\n#align support_update_zero support_update_zero\n\n",
 "support_update_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem support_update_ne_zero (p : polynomial R) (n : ℕ) {a : R} (ha : a ≠ 0) :\n    support (p.update n a) = insert n p.support := by classical rw [support_update, if_neg ha]\n#align support_update_ne_zero support_update_ne_zero\n\n",
 "support_update":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem support_update (p : polynomial R) (n : ℕ) (a : R) [Decidable (a = 0)] :\n    support (p.update n a) = if a = 0 then p.support.erase n else insert n p.support := by\n  classical\n    cases p\n    simp only [support, update, support_update]\n    congr\n#align support_update support_update\n\n",
 "support_trinomial'":
 "theorem support_trinomial' (k m n : ℕ) (x y z : R) : (C x * X ^ k + C y * X ^ m + C z * X ^ n).support ⊆ {k, m, n} :=\n  support_add.trans\n    (union_subset\n      (support_add.trans\n        (union_subset ((support_C_mul_X_pow' k x).trans (singleton_subset_iff.mpr (mem_insert_self k {m, n})))\n          ((support_C_mul_X_pow' m y).trans (singleton_subset_iff.mpr (mem_insert_of_mem (mem_insert_self m {n}))))))\n      ((support_C_mul_X_pow' n z).trans\n        (singleton_subset_iff.mpr (mem_insert_of_mem (mem_insert_of_mem (mem_singleton_self n))))))\n#align support_trinomial' support_trinomial'\n\n",
 "support_of_finsupp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem support_of_finsupp (p) : support (⟨p⟩ : polynomial R) = p.support := by rw [support]\n#align support_of_finsupp support_of_finsupp\n\n",
 "support_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem support_neg {p : polynomial R} : (-p).support = p.support :=\n  by\n  rcases p with ⟨⟩\n  rw [← of_finsupp_neg, support, support, Finsupp.support_neg]\n#align support_neg support_neg\n\n",
 "support_monomial'":
 "theorem support_monomial' (n) (a : R) : (monomial n a).support ⊆ singleton n :=\n  by\n  rw [← of_finsupp_single, support]\n  exact Finsupp.support_single_subset\n#align support_monomial' support_monomial'\n\n",
 "support_monomial":
 "theorem support_monomial (n) {a : R} (H : a ≠ 0) : (monomial n a).support = singleton n := by\n  rw [← of_finsupp_single, support, Finsupp.support_single_ne_zero _ H]\n#align support_monomial support_monomial\n\n",
 "support_erase":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem support_erase (p : polynomial R) (n : ℕ) : support (p.erase n) = (support p).erase n :=\n  by\n  rcases p with ⟨⟩\n  simp only [support, erase, support_erase]\n#align support_erase support_erase\n\n",
 "support_eq_empty":
 "@[simp]\ntheorem support_eq_empty : p.support = ∅ ↔ p = 0 :=\n  by\n  rcases p with ⟨⟩\n  simp [support]\n#align support_eq_empty support_eq_empty\n\n",
 "support_binomial'":
 "theorem support_binomial' (k m : ℕ) (x y : R) : (C x * X ^ k + C y * X ^ m).support ⊆ {k, m} :=\n  support_add.trans\n    (union_subset ((support_C_mul_X_pow' k x).trans (singleton_subset_iff.mpr (mem_insert_self k {m})))\n      ((support_C_mul_X_pow' m y).trans (singleton_subset_iff.mpr (mem_insert_of_mem (mem_singleton_self m)))))\n#align support_binomial' support_binomial'\n\n",
 "support_add":
 "theorem support_add : (p + q).support ⊆ p.support ∪ q.support :=\n  by\n  rcases p with ⟨⟩; rcases q with ⟨⟩\n  simp only [← of_finsupp_add, support]\n  exact support_add\n#align support_add support_add\n\n",
 "support_X_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem support_X_pow (H : ¬(1 : R) = 0) (n : ℕ) : (X ^ n : polynomial R).support = singleton n :=\n  by\n  convert support_monomial n H\n  exact X_pow_eq_monomial n\n#align support_X_pow support_X_pow\n\n",
 "support_X_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem support_X_empty (H : (1 : R) = 0) : (X : polynomial R).support = ∅ := by\n  rw [X, H, monomial_zero_right, support_zero]\n#align support_X_empty support_X_empty\n\n",
 "support_X":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem support_X (H : ¬(1 : R) = 0) : (X : polynomial R).support = singleton 1 := by\n  rw [← pow_one X, support_X_pow H 1]\n#align support_X support_X\n\n",
 "support_C_mul_X_pow'":
 "theorem support_C_mul_X_pow' (n : ℕ) (c : R) : (C c * X ^ n).support ⊆ singleton n := by\n  simpa only [C_mul_X_pow_eq_monomial] using support_monomial' n c\n#align support_C_mul_X_pow' support_C_mul_X_pow'\n\n",
 "support_C_mul_X_pow":
 "theorem support_C_mul_X_pow (n : ℕ) {c : R} (h : c ≠ 0) : (C c * X ^ n).support = singleton n := by\n  rw [C_mul_X_pow_eq_monomial, support_monomial n h]\n#align support_C_mul_X_pow support_C_mul_X_pow\n\n",
 "support_C_mul_X'":
 "theorem support_C_mul_X' (c : R) : (C c * X).support ⊆ singleton 1 := by\n  simpa only [C_mul_X_eq_monomial] using support_monomial' 1 c\n#align support_C_mul_X' support_C_mul_X'\n\n",
 "support_C_mul_X":
 "theorem support_C_mul_X {c : R} (h : c ≠ 0) : (C c * X).support = singleton 1 := by\n  rw [C_mul_X_eq_monomial, support_monomial 1 h]\n#align support_C_mul_X support_C_mul_X\n\n",
 "sum_zero_index":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem sum_zero_index {S : Type _} [AddCommMonoid S] (f : ℕ → R → S) : (0 : polynomial R).sum f = 0 := by simp [Sum]\n#align sum_zero_index sum_zero_index\n\n",
 "sum_smul_index":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem sum_smul_index {S : Type _} [AddCommMonoid S] (p : polynomial R) (b : R) (f : ℕ → R → S) (hf : ∀ i, f i 0 = 0) :\n    («expr • » b p).sum f = p.sum fun n a => f n (b * a) :=\n  by\n  rcases p with ⟨⟩\n  simpa [Sum, support, coeff] using Finsupp.sum_smul_index hf\n#align sum_smul_index sum_smul_index\n\n",
 "sum_monomial_index":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem sum_monomial_index {S : Type _} [AddCommMonoid S] (n : ℕ) (a : R) (f : ℕ → R → S) (hf : f n 0 = 0) :\n    (monomial n a : polynomial R).sum f = f n a :=\n  by\n  by_cases h : a = 0\n  · simp [h, hf]\n  · simp [Sum, support_monomial, h, coeff_monomial]\n#align sum_monomial_index sum_monomial_index\n\n",
 "sum_monomial_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem sum_monomial_eq : ∀ p : polynomial R, (p.sum fun n a => monomial n a) = p\n  | ⟨p⟩ => (ofFinsupp_sum _ _).symm.trans (congr_arg _ <| Finsupp.sum_single _)\n#align sum_monomial_eq sum_monomial_eq\n\n",
 "sum_eq_of_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_eq_of_subset {S : Type _} [AddCommMonoid S] (p : polynomial R) (f : ℕ → R → S) (hf : ∀ i, f i 0 = 0)\n    (s : Finset ℕ) (hs : p.support ⊆ s) :\n    p.sum f =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (f n (p.coeff n)) :=\n  by\n  apply Finset.sum_subset hs fun n hn h'n => _\n  rw [not_mem_support_iff] at h'n\n  simp [h'n, hf]\n#align sum_eq_of_subset sum_eq_of_subset\n\n",
 "sum_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_def {S : Type _} [AddCommMonoid S] (p : polynomial R) (f : ℕ → R → S) :\n    p.sum f =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" p.support\n        (f n (p.coeff n)) :=\n  rfl\n#align sum_def sum_def\n\n",
 "sum_add_index":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem sum_add_index {S : Type _} [AddCommMonoid S] (p q : polynomial R) (f : ℕ → R → S) (hf : ∀ i, f i 0 = 0)\n    (h_add : ∀ a b₁ b₂, f a (b₁ + b₂) = f a b₁ + f a b₂) : (p + q).sum f = p.sum f + q.sum f :=\n  by\n  rcases p with ⟨⟩; rcases q with ⟨⟩\n  simp only [← of_finsupp_add, Sum, support, coeff, Pi.add_apply, coe_add]\n  exact Finsupp.sum_add_index' hf h_add\n#align sum_add_index sum_add_index\n\n",
 "sum_add'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem sum_add' {S : Type _} [AddCommMonoid S] (p : polynomial R) (f g : ℕ → R → S) :\n    p.sum (f + g) = p.sum f + p.sum g := by simp [sum_def, Finset.sum_add_distrib]\n#align sum_add' sum_add'\n\n",
 "sum_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem sum_add {S : Type _} [AddCommMonoid S] (p : polynomial R) (f g : ℕ → R → S) :\n    (p.sum fun n x => f n x + g n x) = p.sum f + p.sum g :=\n  sum_add' _ _ _\n#align sum_add sum_add\n\n",
 "sum_X_index":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n-- the assumption `hf` is only necessary when the ring is trivial\n@[simp]\ntheorem sum_X_index {S : Type _} [AddCommMonoid S] {f : ℕ → R → S} (hf : f 1 0 = 0) :\n    (X : polynomial R).sum f = f 1 1 :=\n  sum_monomial_index 1 1 f hf\n#align sum_X_index sum_X_index\n\n",
 "sum_C_mul_X_pow_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem sum_C_mul_X_pow_eq (p : polynomial R) : (p.sum fun n a => C a * X ^ n) = p := by\n  simp_rw [C_mul_X_pow_eq_monomial, sum_monomial_eq]\n#align sum_C_mul_X_pow_eq sum_C_mul_X_pow_eq\n\n",
 "sum_C_index":
 "@[simp]\ntheorem sum_C_index {a} {β} [AddCommMonoid β] {f : ℕ → R → β} (h : f 0 0 = 0) : (C a).sum f = f 0 a :=\n  sum_monomial_index 0 a f h\n#align sum_C_index sum_C_index\n\n",
 "subsingleton_iff_subsingleton":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem subsingleton_iff_subsingleton : subsingleton (polynomial R) ↔ subsingleton R :=\n  ⟨@Injective.subsingleton _ _ _ C_injective, by\n    intro\n    infer_instance⟩\n#align subsingleton_iff_subsingleton subsingleton_iff_subsingleton\n\n",
 "smul_monomial":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_monomial {S} [SMulZeroClass S R] (a : S) (n : ℕ) (b : R) :\n    «expr • » a (monomial n b) = monomial n («expr • » a b) :=\n  toFinsupp_injective <| by simp\n#align smul_monomial smul_monomial\n\n",
 "smul_X_eq_monomial":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_X_eq_monomial {n} : «expr • » a (X ^ n) = monomial n (a : R) := by\n  rw [X_pow_eq_monomial, smul_monomial, smul_eq_mul, mul_one]\n#align smul_X_eq_monomial smul_X_eq_monomial\n\n",
 "smul_C":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_C {S} [SMulZeroClass S R] (s : S) (r : R) : «expr • » s (C r) = C («expr • » s r) :=\n  smul_monomial _ _ r\n#align smul_C smul_C\n\n",
 "rat_smul_eq_C_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem rat_smul_eq_C_mul (a : exprℚ) (f : polynomial R) : «expr • » a f = Polynomial.C ↑a * f := by\n  rw [← Rat.smul_one_eq_coe, ← Polynomial.smul_C, C_1, smul_one_mul]\n#align rat_smul_eq_C_mul rat_smul_eq_C_mul\n\n",
 "polynomial":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n#print IsSMulRegular.polynomial /-\ntheorem IsSMulRegular.polynomial {S : Type _} [Monoid S] [DistribMulAction S R] {a : S} (ha : IsSMulRegular R a) :\n    IsSMulRegular (polynomial R) a\n  | ⟨x⟩, ⟨y⟩, h => congr_arg _ <| ha.finsupp (polynomial.of_finsupp.inj h)\n#align is_smul_regular.polynomial IsSMulRegular.polynomial\n-/\n\n",
 "of_polynomial_ne":
 "theorem nontrivial.of_polynomial_ne (h : p ≠ q) : Nontrivial R :=\n  (subsingleton_or_nontrivial R).resolve_left fun hI => h <| subsingleton.elim _ _\n#align nontrivial.of_polynomial_ne nontrivial.of_polynomial_ne\n\n",
 "of_finsupp_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n-- to avoid a bug in the `ring` tactic\n@[simp]\ntheorem of_finsupp_zero : (⟨0⟩ : polynomial R) = 0 :=\n  rfl\n#align of_finsupp_zero of_finsupp_zero\n\n",
 "of_finsupp_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem of_finsupp_sum {ι : Type _} (s : Finset ι) (f : ι → AddMonoidAlgebra R ℕ) :\n    (⟨finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)⟩ :\n        polynomial R) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s ⟨f i⟩ :=\n  map_sum (toFinsuppIso R).symm f s\n#align of_finsupp_sum of_finsupp_sum\n\n",
 "of_finsupp_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_sub {R : Type u} [Ring R] {a b} : (⟨a - b⟩ : polynomial R) = ⟨a⟩ - ⟨b⟩ :=\n  by\n  rw [sub_eq_add_neg, of_finsupp_add, of_finsupp_neg]\n  rfl\n#align of_finsupp_sub of_finsupp_sub\n\n",
 "of_finsupp_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_smul {S : Type _} [SMulZeroClass S R] (a : S) (b) :\n    (⟨«expr • » a b⟩ : polynomial R) = («expr • » a ⟨b⟩ : polynomial R) :=\n  rfl\n#align of_finsupp_smul of_finsupp_smul\n\n",
 "of_finsupp_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_single (n : ℕ) (r : R) : (⟨Finsupp.single n r⟩ : polynomial R) = monomial n r := by simp [monomial]\n#align of_finsupp_single of_finsupp_single\n\n",
 "of_finsupp_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_pow (a) (n : ℕ) : (⟨a ^ n⟩ : polynomial R) = ⟨a⟩ ^ n :=\n  by\n  change _ = npowRec n _\n  induction n\n  · simp [npowRec]\n  · simp [npowRec, n_ih, pow_succ]\n#align of_finsupp_pow of_finsupp_pow\n\n",
 "of_finsupp_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_one : (⟨1⟩ : polynomial R) = 1 :=\n  rfl\n#align of_finsupp_one of_finsupp_one\n\n",
 "of_finsupp_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_neg {R : Type u} [Ring R] {a} : (⟨-a⟩ : polynomial R) = -⟨a⟩ :=\n  show _ = neg _ by rw [neg]\n#align of_finsupp_neg of_finsupp_neg\n\n",
 "of_finsupp_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_mul (a b) : (⟨a * b⟩ : polynomial R) = ⟨a⟩ * ⟨b⟩ :=\n  show _ = mul _ _ by rw [mul]\n#align of_finsupp_mul of_finsupp_mul\n\n",
 "of_finsupp_inj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-- A more convenient spelling of `polynomial.of_finsupp.inj_eq` in terms of `iff`. -/\ntheorem of_finsupp_inj {a b} : (⟨a⟩ : polynomial R) = ⟨b⟩ ↔ a = b :=\n  iff_of_eq of_finsupp.inj_eq\n#align of_finsupp_inj of_finsupp_inj\n\n",
 "of_finsupp_erase":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_erase (p : AddMonoidAlgebra R ℕ) (n : ℕ) :\n    (⟨p.erase n⟩ : polynomial R) = (⟨p⟩ : polynomial R).erase n :=\n  by\n  rcases p with ⟨⟩\n  simp only [erase]\n#align of_finsupp_erase of_finsupp_erase\n\n",
 "of_finsupp_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_eq_zero {a} : (⟨a⟩ : polynomial R) = 0 ↔ a = 0 := by rw [← of_finsupp_zero, of_finsupp_inj]\n#align of_finsupp_eq_zero of_finsupp_eq_zero\n\n",
 "of_finsupp_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_eq_one {a} : (⟨a⟩ : polynomial R) = 1 ↔ a = 1 := by rw [← of_finsupp_one, of_finsupp_inj]\n#align of_finsupp_eq_one of_finsupp_eq_one\n\n",
 "of_finsupp_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem of_finsupp_add {a b} : (⟨a + b⟩ : polynomial R) = ⟨a⟩ + ⟨b⟩ :=\n  show _ = add _ _ by rw [add]\n#align of_finsupp_add of_finsupp_add\n\n",
 "not_mem_support_iff":
 "theorem not_mem_support_iff : n ∉ p.support ↔ p.coeff n = 0 := by simp\n#align not_mem_support_iff not_mem_support_iff\n\n",
 "nontrivial_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n#print nontrivial_iff /-\n@[simp]\ntheorem nontrivial_iff [Semiring R] : Nontrivial (polynomial R) ↔ Nontrivial R :=\n  ⟨fun h =>\n    let ⟨r, s, hrs⟩ := @exists_pair_ne _ h\n    Nontrivial.of_polynomial_ne hrs,\n    fun h => @Polynomial.nontrivial _ _ h⟩\n#align nontrivial_iff nontrivial_iff\n-/\n\n",
 "nat_cast_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem nat_cast_mul (n : ℕ) (p : polynomial R) : (n : polynomial R) * p = «expr • » n p :=\n  (nsmul_eq_mul _ _).symm\n#align nat_cast_mul nat_cast_mul\n\n",
 "mul_eq_sum_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- Expressing the product of two polynomials as a double sum. -/\ntheorem mul_eq_sum_sum :\n    p * q =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" p.support\n        (q.sum fun j a => (monomial (i + j)) (p.coeff i * a)) :=\n  by\n  apply to_finsupp_injective\n  rcases p with ⟨⟩; rcases q with ⟨⟩\n  simp [support, Sum, coeff, to_finsupp_sum]\n  rfl\n#align mul_eq_sum_sum mul_eq_sum_sum\n\n",
 "monomial_zero_right":
 "@[simp]\ntheorem monomial_zero_right (n : ℕ) : monomial n (0 : R) = 0 :=\n  (monomial n).map_zero\n#align monomial_zero_right monomial_zero_right\n\n",
 "monomial_zero_one":
 "-- This is not a `simp` lemma as `monomial_zero_left` is more general.\ntheorem monomial_zero_one : monomial 0 (1 : R) = 1 :=\n  rfl\n#align monomial_zero_one monomial_zero_one\n\n",
 "monomial_zero_left":
 "@[simp]\ntheorem monomial_zero_left (a : R) : monomial 0 a = C a :=\n  rfl\n#align monomial_zero_left monomial_zero_left\n\n",
 "monomial_pow":
 "@[simp]\ntheorem monomial_pow (n : ℕ) (r : R) (k : ℕ) : monomial n r ^ k = monomial (n * k) (r ^ k) :=\n  by\n  induction' k with k ih\n  · simp [pow_zero, monomial_zero_one]\n  · simp [pow_succ, ih, monomial_mul_monomial, nat.succ_eq_add_one, mul_add, add_comm]\n#align monomial_pow monomial_pow\n\n",
 "monomial_one_right_eq_X_pow":
 "theorem monomial_one_right_eq_X_pow (n : ℕ) : monomial n (1 : R) = X ^ n :=\n  by\n  induction' n with n ih\n  · simp [monomial_zero_one]\n  · rw [pow_succ, ← ih, ← monomial_one_one_eq_X, monomial_mul_monomial, add_comm, one_mul]\n#align monomial_one_right_eq_X_pow monomial_one_right_eq_X_pow\n\n",
 "monomial_one_one_eq_X":
 "theorem monomial_one_one_eq_X : monomial 1 (1 : R) = X :=\n  rfl\n#align monomial_one_one_eq_X monomial_one_one_eq_X\n\n",
 "monomial_neg":
 "@[simp]\ntheorem monomial_neg (n : ℕ) (a : R) : monomial n (-a) = -monomial n a := by\n  rw [eq_neg_iff_add_eq_zero, ← monomial_add, neg_add_self, monomial_zero_right]\n#align monomial_neg monomial_neg\n\n",
 "monomial_mul_monomial":
 "theorem monomial_mul_monomial (n m : ℕ) (r s : R) : monomial n r * monomial m s = monomial (n + m) (r * s) :=\n  toFinsupp_injective <| by simp only [to_finsupp_monomial, to_finsupp_mul, AddMonoidAlgebra.single_mul_single]\n#align monomial_mul_monomial monomial_mul_monomial\n\n",
 "monomial_mul_X_pow":
 "@[simp]\ntheorem monomial_mul_X_pow (n : ℕ) (r : R) (k : ℕ) : monomial n r * X ^ k = monomial (n + k) r :=\n  by\n  induction' k with k ih\n  · simp\n  · simp [ih, pow_succ', ← mul_assoc, add_assoc]\n#align monomial_mul_X_pow monomial_mul_X_pow\n\n",
 "monomial_mul_X":
 "@[simp]\ntheorem monomial_mul_X (n : ℕ) (r : R) : monomial n r * X = monomial (n + 1) r := by\n  erw [monomial_mul_monomial, mul_one]\n#align monomial_mul_X monomial_mul_X\n\n",
 "monomial_mul_C":
 "@[simp]\ntheorem monomial_mul_C : monomial n a * C b = monomial n (a * b) := by\n  simp only [← monomial_zero_left, monomial_mul_monomial, add_zero]\n#align monomial_mul_C monomial_mul_C\n\n",
 "monomial_left_inj":
 "theorem monomial_left_inj {a : R} (ha : a ≠ 0) {i j : ℕ} : monomial i a = monomial j a ↔ i = j := by\n  simp_rw [← of_finsupp_single, Finsupp.single_left_inj ha]\n#align monomial_left_inj monomial_left_inj\n\n",
 "monomial_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem monomial_injective (n : ℕ) : function.injective (monomial n : R → polynomial R) :=\n  (toFinsuppIso R).symm.injective.comp (single_injective n)\n#align monomial_injective monomial_injective\n\n",
 "monomial_eq_zero_iff":
 "@[simp]\ntheorem monomial_eq_zero_iff (t : R) (n : ℕ) : monomial n t = 0 ↔ t = 0 :=\n  LinearMap.map_eq_zero_iff _ (Polynomial.monomial_injective n)\n#align monomial_eq_zero_iff monomial_eq_zero_iff\n\n",
 "monomial_add_erase":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem monomial_add_erase (p : polynomial R) (n : ℕ) : monomial n (coeff p n) + p.erase n = p :=\n  toFinsupp_injective <| by\n    rcases p with ⟨⟩\n    rw [to_finsupp_add, to_finsupp_monomial, to_finsupp_erase, coeff]\n    exact Finsupp.single_add_erase _ _\n#align monomial_add_erase monomial_add_erase\n\n",
 "monomial_add":
 "-- TODO: can't we just delete this one?\ntheorem monomial_add (n : ℕ) (r s : R) : monomial n (r + s) = monomial n r + monomial n s :=\n  (monomial n).map_add _ _\n#align monomial_add monomial_add\n\n",
 "mem_support_iff":
 "@[simp]\ntheorem mem_support_iff : n ∈ p.support ↔ p.coeff n ≠ 0 :=\n  by\n  rcases p with ⟨⟩\n  simp\n#align mem_support_iff mem_support_iff\n\n",
 "lhom_ext'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[ext]\ntheorem lhom_ext' {M : Type _} [AddCommMonoid M] [Module R M] {f g : «expr →ₗ[ ] » (polynomial R) R M}\n    (h : ∀ n, f.comp (monomial n) = g.comp (monomial n)) : f = g :=\n  LinearMap.toAddMonoidHom_injective <| addHom_ext fun n => LinearMap.congr_fun (h n)\n#align lhom_ext' lhom_ext'\n\n",
 "forall_iff_forall_finsupp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Johannes Hölzl, Scott Morrison, Jens Wagemaker\n-/\ntheorem forall_iff_forall_finsupp (P : polynomial R → Prop) : (∀ p, P p) ↔ ∀ q : AddMonoidAlgebra R ℕ, P ⟨q⟩ :=\n  ⟨fun h q => h ⟨q⟩, fun h ⟨p⟩ => h p⟩\n#align forall_iff_forall_finsupp forall_iff_forall_finsupp\n\n",
 "forall_eq_iff_forall_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem forall_eq_iff_forall_eq : (∀ f g : polynomial R, f = g) ↔ ∀ a b : R, a = b := by\n  simpa only [← subsingleton_iff] using subsingleton_iff_subsingleton\n#align forall_eq_iff_forall_eq forall_eq_iff_forall_eq\n\n",
 "ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem ext_iff {p q : polynomial R} : p = q ↔ ∀ n, coeff p n = coeff q n :=\n  by\n  rcases p with ⟨⟩\n  rcases q with ⟨⟩\n  simp [coeff, Finsupp.ext_iff]\n#align ext_iff ext_iff\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[ext]\ntheorem ext {p q : polynomial R} : (∀ n, coeff p n = coeff q n) → p = q :=\n  ext_iff.2\n#align ext ext\n\n",
 "exists_iff_exists_finsupp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem exists_iff_exists_finsupp (P : polynomial R → Prop) : (∃ p, P p) ↔ ∃ q : AddMonoidAlgebra R ℕ, P ⟨q⟩ :=\n  ⟨fun ⟨⟨p⟩, hp⟩ => ⟨p, hp⟩, fun ⟨q, hq⟩ => ⟨⟨q⟩, hq⟩⟩\n#align exists_iff_exists_finsupp exists_iff_exists_finsupp\n\n",
 "eta":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem eta (f : polynomial R) : Polynomial.ofFinsupp f.to_finsupp = f := by cases f <;> rfl\n#align eta eta\n\n",
 "erase_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem erase_zero (n : ℕ) : (0 : polynomial R).erase n = 0 :=\n  toFinsupp_injective <| by simp\n#align erase_zero erase_zero\n\n",
 "erase_same":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem erase_same (p : polynomial R) (n : ℕ) : coeff (p.erase n) n = 0 := by simp [coeff_erase]\n#align erase_same erase_same\n\n",
 "erase_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem erase_ne (p : polynomial R) (n i : ℕ) (h : i ≠ n) : coeff (p.erase n) i = coeff p i := by simp [coeff_erase, h]\n#align erase_ne erase_ne\n\n",
 "erase_monomial":
 "@[simp]\ntheorem erase_monomial {n : ℕ} {a : R} : erase n (monomial n a) = 0 :=\n  toFinsupp_injective <| by simp\n#align erase_monomial erase_monomial\n\n",
 "eq_zero_of_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n-- this has the same content as the subsingleton\ntheorem eq_zero_of_eq_zero (h : (0 : R) = (1 : R)) (p : polynomial R) : p = 0 := by rw [← one_smul R p, ← h, zero_smul]\n#align eq_zero_of_eq_zero eq_zero_of_eq_zero\n\n",
 "commute_X_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem commute_X_pow (p : polynomial R) (n : ℕ) : Commute (X ^ n) p :=\n  X_pow_mul\n#align commute_X_pow commute_X_pow\n\n",
 "commute_X":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem commute_X (p : polynomial R) : Commute X p :=\n  X_mul\n#align commute_X commute_X\n\n",
 "coeff_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem coeff_zero (n : ℕ) : coeff (0 : polynomial R) n = 0 :=\n  rfl\n#align coeff_zero coeff_zero\n\n",
 "coeff_update_same":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem coeff_update_same (p : polynomial R) (n : ℕ) (a : R) : (p.update n a).coeff n = a := by\n  rw [p.coeff_update_apply, if_pos rfl]\n#align coeff_update_same coeff_update_same\n\n",
 "coeff_update_ne":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem coeff_update_ne (p : polynomial R) {n : ℕ} (a : R) {i : ℕ} (h : i ≠ n) : (p.update n a).coeff i = p.coeff i :=\n  by rw [p.coeff_update_apply, if_neg h]\n#align coeff_update_ne coeff_update_ne\n\n",
 "coeff_update_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem coeff_update_apply (p : polynomial R) (n : ℕ) (a : R) (i : ℕ) :\n    (p.update n a).coeff i = if i = n then a else p.coeff i := by rw [coeff_update, Function.update_apply]\n#align coeff_update_apply coeff_update_apply\n\n",
 "coeff_update":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem coeff_update (p : polynomial R) (n : ℕ) (a : R) : (p.update n a).coeff = Function.update p.coeff n a :=\n  by\n  ext\n  cases p\n  simp only [coeff, update, Function.update_apply, coe_update]\n#align coeff_update coeff_update\n\n",
 "coeff_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem coeff_sub (p q : polynomial R) (n : ℕ) : coeff (p - q) n = coeff p n - coeff q n :=\n  by\n  rcases p with ⟨⟩\n  rcases q with ⟨⟩\n  rw [← of_finsupp_sub, coeff, coeff, coeff, Finsupp.sub_apply]\n#align coeff_sub coeff_sub\n\n",
 "coeff_one_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem coeff_one_zero : coeff (1 : polynomial R) 0 = 1 :=\n  by\n  rw [← monomial_zero_one, coeff_monomial]\n  simp\n#align coeff_one_zero coeff_one_zero\n\n",
 "coeff_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem coeff_neg (p : polynomial R) (n : ℕ) : coeff (-p) n = -coeff p n :=\n  by\n  rcases p with ⟨⟩\n  rw [← of_finsupp_neg, coeff, coeff, Finsupp.neg_apply]\n#align coeff_neg coeff_neg\n\n",
 "coeff_monomial_succ":
 "@[simp]\ntheorem coeff_monomial_succ : coeff (monomial (n + 1) a) 0 = 0 := by simp [coeff_monomial]\n#align coeff_monomial_succ coeff_monomial_succ\n\n",
 "coeff_monomial":
 "theorem coeff_monomial : coeff (monomial n a) m = if n = m then a else 0 :=\n  by\n  simp only [← of_finsupp_single, coeff, LinearMap.coe_mk]\n  rw [Finsupp.single_apply]\n#align coeff_monomial coeff_monomial\n\n",
 "coeff_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem coeff_injective : injective (coeff : polynomial R → ℕ → R) :=\n  by\n  rintro ⟨p⟩ ⟨q⟩\n  simp only [coeff, FunLike.coe_fn_eq, imp_self]\n#align coeff_injective coeff_injective\n\n",
 "coeff_inj":
 "@[simp]\ntheorem coeff_inj : p.coeff = q.coeff ↔ p = q :=\n  coeff_injective.eq_iff\n#align coeff_inj coeff_inj\n\n",
 "coeff_erase":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem coeff_erase (p : polynomial R) (n i : ℕ) : (p.erase n).coeff i = if i = n then 0 else p.coeff i :=\n  by\n  rcases p with ⟨⟩\n  simp only [erase, coeff]\n  convert rfl\n#align coeff_erase coeff_erase\n\n",
 "coeff_X_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem coeff_X_zero : coeff (X : polynomial R) 0 = 0 :=\n  coeff_monomial\n#align coeff_X_zero coeff_X_zero\n\n",
 "coeff_X_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem coeff_X_one : coeff (X : polynomial R) 1 = 1 :=\n  coeff_monomial\n#align coeff_X_one coeff_X_one\n\n",
 "coeff_X_of_ne_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem coeff_X_of_ne_one {n : ℕ} (hn : n ≠ 1) : coeff (X : polynomial R) n = 0 := by rw [coeff_X, if_neg hn.symm]\n#align coeff_X_of_ne_one coeff_X_of_ne_one\n\n",
 "coeff_X":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem coeff_X : coeff (X : polynomial R) n = if 1 = n then 1 else 0 :=\n  coeff_monomial\n#align coeff_X coeff_X\n\n",
 "coeff_C_zero":
 "@[simp]\ntheorem coeff_C_zero : coeff (C a) 0 = a :=\n  coeff_monomial\n#align coeff_C_zero coeff_C_zero\n\n",
 "coeff_C_ne_zero":
 "theorem coeff_C_ne_zero (h : n ≠ 0) : (C a).coeff n = 0 := by rw [coeff_C, if_neg h]\n#align coeff_C_ne_zero coeff_C_ne_zero\n\n",
 "coeff_C":
 "theorem coeff_C : coeff (C a) n = ite (n = 0) a 0 :=\n  by\n  convert coeff_monomial using 2\n  simp [eq_comm]\n#align coeff_C coeff_C\n\n",
 "card_support_eq_zero":
 "theorem card_support_eq_zero : p.support.card = 0 ↔ p = 0 := by simp\n#align card_support_eq_zero card_support_eq_zero\n\n",
 "binomial_eq_binomial":
 "theorem binomial_eq_binomial {k l m n : ℕ} {u v : R} (hu : u ≠ 0) (hv : v ≠ 0) :\n    C u * X ^ k + C v * X ^ l = C u * X ^ m + C v * X ^ n ↔\n      k = m ∧ l = n ∨ u = v ∧ k = n ∧ l = m ∨ u + v = 0 ∧ k = l ∧ m = n :=\n  by\n  simp_rw [C_mul_X_pow_eq_monomial, ← to_finsupp_inj, to_finsupp_add, to_finsupp_monomial]\n  exact Finsupp.single_add_single_eq_single_add_single hu hv\n#align binomial_eq_binomial binomial_eq_binomial\n\n",
 "add_submonoid_closure_set_of_eq_monomial":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- Monomials generate the additive monoid of polynomials. -/\ntheorem add_submonoid_closure_set_of_eq_monomial :\n    AddSubmonoid.closure { p : polynomial R | ∃ n a, p = monomial n a } = «expr⊤» :=\n  by\n  apply top_unique\n  rw [← AddSubmonoid.map_equiv_top (to_finsupp_iso R).symm.to_add_equiv, ← Finsupp.add_closure_setOf_eq_single,\n    AddMonoidHom.map_mclosure]\n  refine' AddSubmonoid.closure_mono (Set.image_subset_iff.2 _)\n  rintro _ ⟨n, a, rfl⟩\n  exact ⟨n, a, Polynomial.ofFinsupp_single _ _⟩\n#align add_submonoid_closure_set_of_eq_monomial add_submonoid_closure_set_of_eq_monomial\n\n",
 "add_hom_ext'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[ext]\ntheorem add_hom_ext' {M : Type _} [AddMonoid M] {f g : «expr →+ » (polynomial R) M}\n    (h : ∀ n, f.comp (monomial n).to_add_monoid_hom = g.comp (monomial n).to_add_monoid_hom) : f = g :=\n  addHom_ext fun n => AddMonoidHom.congr_fun (h n)\n#align add_hom_ext' add_hom_ext'\n\n",
 "add_hom_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem add_hom_ext {M : Type _} [AddMonoid M] {f g : «expr →+ » (polynomial R) M}\n    (h : ∀ n a, f (monomial n a) = g (monomial n a)) : f = g :=\n  AddMonoidHom.eq_of_eqOn_denseM addSubmonoid_closure_setOf_eq_monomial <|\n    by\n    rintro p ⟨n, a, rfl⟩\n    exact h n a\n#align add_hom_ext add_hom_ext\n\n",
 "X_pow_mul_monomial":
 "@[simp]\ntheorem X_pow_mul_monomial (k n : ℕ) (r : R) : X ^ k * monomial n r = monomial (n + k) r := by\n  rw [X_pow_mul, monomial_mul_X_pow]\n#align X_pow_mul_monomial X_pow_mul_monomial\n\n",
 "X_pow_mul_assoc_C":
 "/-- Prefer putting constants to the left of `X ^ n`.\n\nThis lemma is the loop-avoiding `simp` version of `X_pow_mul_assoc`. -/\n@[simp]\ntheorem X_pow_mul_assoc_C {n : ℕ} (r : R) : p * X ^ n * C r = p * C r * X ^ n :=\n  X_pow_mul_assoc\n#align X_pow_mul_assoc_C X_pow_mul_assoc_C\n\n",
 "X_pow_mul_assoc":
 "theorem X_pow_mul_assoc {n : ℕ} : p * X ^ n * q = p * q * X ^ n := by rw [mul_assoc, X_pow_mul, ← mul_assoc]\n#align X_pow_mul_assoc X_pow_mul_assoc\n\n",
 "X_pow_mul_C":
 "/-- Prefer putting constants to the left of `X ^ n`.\n\nThis lemma is the loop-avoiding `simp` version of `X_pow_mul`. -/\n@[simp]\ntheorem X_pow_mul_C (r : R) (n : ℕ) : X ^ n * C r = C r * X ^ n :=\n  X_pow_mul\n#align X_pow_mul_C X_pow_mul_C\n\n",
 "X_pow_mul":
 "theorem X_pow_mul {n : ℕ} : X ^ n * p = p * X ^ n :=\n  by\n  induction' n with n ih\n  · simp\n  · conv_lhs => rw [pow_succ']\n    rw [mul_assoc, X_mul, ← mul_assoc, ih, mul_assoc, ← pow_succ']\n#align X_pow_mul X_pow_mul\n\n",
 "X_pow_eq_monomial":
 "theorem X_pow_eq_monomial (n) : X ^ n = monomial n (1 : R) :=\n  by\n  induction' n with n hn\n  · rw [pow_zero, monomial_zero_one]\n  · rw [pow_succ', hn, X, monomial_mul_monomial, one_mul]\n#align X_pow_eq_monomial X_pow_eq_monomial\n\n",
 "X_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem X_ne_zero : (X : polynomial R) ≠ 0 :=\n  mt (congr_arg fun p => coeff p 1) (by simp)\n#align X_ne_zero X_ne_zero\n\n",
 "X_mul_monomial":
 "@[simp]\ntheorem X_mul_monomial (n : ℕ) (r : R) : X * monomial n r = monomial (n + 1) r := by rw [X_mul, monomial_mul_X]\n#align X_mul_monomial X_mul_monomial\n\n",
 "X_mul_C":
 "/-- Prefer putting constants to the left of `X`.\n\nThis lemma is the loop-avoiding `simp` version of `polynomial.X_mul`. -/\n@[simp]\ntheorem X_mul_C (r : R) : X * C r = C r * X :=\n  X_mul\n#align X_mul_C X_mul_C\n\n",
 "X_mul":
 "/-- `X` commutes with everything, even when the coefficients are noncommutative. -/\ntheorem X_mul : X * p = p * X := by\n  rcases p with ⟨⟩\n  simp only [X, ← of_finsupp_single, ← of_finsupp_mul, LinearMap.coe_mk]\n  ext\n  simp [AddMonoidAlgebra.mul_apply, sum_single_index, add_comm]\n#align X_mul X_mul\n\n",
 "C_pow":
 "theorem C_pow : C (a ^ n) = C a ^ n :=\n  C.map_pow a n\n#align C_pow C_pow\n\n",
 "C_ne_zero":
 "theorem C_ne_zero : C a ≠ 0 ↔ a ≠ 0 :=\n  C_eq_zero.not\n#align C_ne_zero C_ne_zero\n\n",
 "C_mul_monomial":
 "@[simp]\ntheorem C_mul_monomial : C a * monomial n b = monomial n (a * b) := by\n  simp only [← monomial_zero_left, monomial_mul_monomial, zero_add]\n#align C_mul_monomial C_mul_monomial\n\n",
 "C_mul_X_pow_eq_monomial":
 "theorem C_mul_X_pow_eq_monomial : ∀ {n : ℕ}, C a * X ^ n = monomial n a\n  | 0 => mul_one _\n  | n + 1 => by rw [pow_succ', ← mul_assoc, C_mul_X_pow_eq_monomial, X, monomial_mul_monomial, mul_one]\n#align C_mul_X_pow_eq_monomial C_mul_X_pow_eq_monomial\n\n",
 "C_mul_X_eq_monomial":
 "theorem C_mul_X_eq_monomial : C a * X = monomial 1 a := by rw [← C_mul_X_pow_eq_monomial, pow_one]\n#align C_mul_X_eq_monomial C_mul_X_eq_monomial\n\n",
 "C_mul":
 "theorem C_mul : C (a * b) = C a * C b :=\n  C.map_mul a b\n#align C_mul C_mul\n\n",
 "C_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem C_injective : injective (C : R → polynomial R) :=\n  monomial_injective 0\n#align C_injective C_injective\n\n",
 "C_inj":
 "@[simp]\ntheorem C_inj : C a = C b ↔ a = b :=\n  C_injective.eq_iff\n#align C_inj C_inj\n\n",
 "C_eq_zero":
 "@[simp]\ntheorem C_eq_zero : C a = 0 ↔ a = 0 :=\n  C_injective.eq_iff' (map_zero C)\n#align C_eq_zero C_eq_zero\n\n",
 "C_eq_nat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem C_eq_nat_cast (n : ℕ) : C (n : R) = (n : polynomial R) :=\n  map_natCast C n\n#align C_eq_nat_cast C_eq_nat_cast\n\n",
 "C_eq_int_cast":
 "@[simp]\ntheorem C_eq_int_cast (n : ℤ) : C (n : R) = n :=\n  map_intCast C n\n#align C_eq_int_cast C_eq_int_cast\n\n",
 "C_bit1":
 "@[simp]\ntheorem C_bit1 : C (bit1 a) = bit1 (C a) := by simp [bit1, C_bit0]\n#align C_bit1 C_bit1\n\n",
 "C_bit0":
 "@[simp]\ntheorem C_bit0 : C (bit0 a) = bit0 (C a) :=\n  C_add\n#align C_bit0 C_bit0\n\n",
 "C_add":
 "theorem C_add : C (a + b) = C a + C b :=\n  C.map_add a b\n#align C_add C_add\n\n",
 "C_1": "theorem C_1 : C (1 : R) = 1 :=\n  rfl\n#align C_1 C_1\n\n",
 "C_0": "theorem C_0 : C (0 : R) = 0 := by simp\n#align C_0 C_0\n\n"}