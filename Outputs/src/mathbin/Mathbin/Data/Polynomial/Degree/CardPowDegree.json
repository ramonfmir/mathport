{"card_pow_degree_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem card_pow_degree_zero : card_pow_degree (0 : polynomial Fq) = 0 :=\n  if_pos rfl\n#align card_pow_degree_zero card_pow_degree_zero\n\n",
 "card_pow_degree_nonzero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n@[simp]\ntheorem card_pow_degree_nonzero (p : polynomial Fq) (hp : p ≠ 0) : card_pow_degree p = fintype.card Fq ^ p.nat_degree :=\n  if_neg hp\n#align card_pow_degree_nonzero card_pow_degree_nonzero\n\n",
 "card_pow_degree_is_euclidean":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\ntheorem card_pow_degree_is_euclidean : IsEuclidean (card_pow_degree : AbsoluteValue (polynomial Fq) ℤ) :=\n  have card_pos : 0 < fintype.card Fq := fintype.card_pos_iff.mpr infer_instance\n  have pow_pos : ∀ n, 0 < (fintype.card Fq : ℤ) ^ n := fun n => pow_pos (Int.coe_nat_pos.mpr card_pos) n\n  {\n    map_lt_map_iff' := fun p q => by\n      simp only [EuclideanDomain.r, card_pow_degree_apply]\n      split_ifs with hp hq hq\n      · simp only [hp, hq, lt_self_iff_false]\n      · simp only [hp, hq, degree_zero, ne.def, bot_lt_iff_ne_bot, degree_eq_bot, pow_pos, not_false_iff]\n      · simp only [hp, hq, degree_zero, not_lt_bot, (pow_pos _).not_lt]\n      · rw [degree_eq_nat_degree hp, degree_eq_nat_degree hq, WithBot.coe_lt_coe, pow_lt_pow_iff]\n        exact_mod_cast @fintype.one_lt_card Fq _ _ }\n#align card_pow_degree_is_euclidean card_pow_degree_is_euclidean\n\n",
 "card_pow_degree_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/-\nCopyright (c) 2021 Anne Baanen. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Anne Baanen\n-/\ntheorem card_pow_degree_apply (p : polynomial Fq) :\n    card_pow_degree p = if p = 0 then 0 else fintype.card Fq ^ nat_degree p :=\n  rfl\n#align card_pow_degree_apply card_pow_degree_apply\n\n"}