{"succ_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem succ_iterate (a : ℕ) : ∀ n, («expr ^[ ]» succ n) a = a + n\n  | 0 => rfl\n  | n + 1 => by\n    rw [Function.iterate_succ', add_succ]\n    exact congr_arg _ n.succ_iterate\n#align succ_iterate succ_iterate\n\n",
 "succ_eq_succ":
 "/-\nCopyright (c) 2021 Yaël Dillies. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yaël Dillies\n-/\n-- so that Lean reads `nat.succ` through `succ_order.succ`\n-- so that Lean reads `nat.pred` through `pred_order.pred`\n@[simp]\ntheorem succ_eq_succ : Order.succ = succ :=\n  rfl\n#align succ_eq_succ succ_eq_succ\n\n",
 "pred_iterate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\ntheorem pred_iterate (a : ℕ) : ∀ n, («expr ^[ ]» pred n) a = a - n\n  | 0 => rfl\n  | n + 1 => by\n    rw [Function.iterate_succ', sub_succ]\n    exact congr_arg _ n.pred_iterate\n#align pred_iterate pred_iterate\n\n",
 "pred_eq_pred":
 "@[simp]\ntheorem pred_eq_pred : Order.pred = pred :=\n  rfl\n#align pred_eq_pred pred_eq_pred\n\n",
 "covby_iff_succ_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\nprotected theorem covby_iff_succ_eq {m n : ℕ} : «expr ⋖ » m n ↔ m + 1 = n :=\n  succ_eq_iff_covby.symm\n#align covby_iff_succ_eq covby_iff_succ_eq\n\n",
 "coe_covby_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋖ » -/\n#print Fin.coe_covby_iff /-\n@[simp, norm_cast]\ntheorem Fin.coe_covby_iff {n : ℕ} {a b : Fin n} : «expr ⋖ » (a : ℕ) b ↔ «expr ⋖ » a b :=\n  and_congr_right' ⟨fun h c hc => h hc, fun h c ha hb => @h ⟨c, hb.trans b.prop⟩ ha hb⟩\n#align fin.coe_covby_iff Fin.coe_covby_iff\n-/\n\n"}