{"dvd_choose_self":
 "theorem dvd_choose_self {p k : ℕ} (hp : Prime p) (hk : k ≠ 0) (hkp : k < p) : p ∣ choose p k :=\n  hp.dvd_choose hkp (nat.sub_lt ((zero_le _).trans_lt hkp) hk.bot_lt) le_rfl\n#align dvd_choose_self dvd_choose_self\n\n",
 "dvd_choose_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Patrick Stevens\n-/\ntheorem dvd_choose_add {p a b : ℕ} (hp : Prime p) (hap : a < p) (hbp : b < p) (h : p ≤ a + b) : p ∣ choose (a + b) a :=\n  by\n  have h₁ : p ∣ nat.factorial (a + b) := hp.dvd_factorial.2 h\n  rw [← add_choose_mul_factorial_mul_factorial, ← choose_symm_add, hp.dvd_mul, hp.dvd_mul, hp.dvd_factorial,\n    hp.dvd_factorial] at h₁\n  exact (h₁.resolve_right hbp.not_le).resolve_right hap.not_le\n#align dvd_choose_add dvd_choose_add\n\n",
 "dvd_choose":
 "theorem dvd_choose {p a b : ℕ} (hp : Prime p) (ha : a < p) (hab : b - a < p) (h : p ≤ b) : p ∣ choose b a :=\n  have : a + (b - a) = b := nat.add_sub_of_le (ha.le.trans h)\n  this ▸ hp.dvd_choose_add ha hab (this.symm ▸ h)\n#align dvd_choose dvd_choose\n\n"}