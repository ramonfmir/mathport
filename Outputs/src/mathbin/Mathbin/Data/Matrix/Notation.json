{"vec_mul_vec_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem vec_mul_vec_empty (v : m' → α) (w : Fin 0 → α) :\n    vecMulVec v w = fun _ =>\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  funext fun i => empty_eq _\n#align vec_mul_vec_empty vec_mul_vec_empty\n\n",
 "vec_mul_vec_cons":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem vec_mul_vec_cons (v : m' → α) (x : α) (w : Fin n → α) :\n    vecMulVec v (vecCons x w) = fun i => «expr • » (v i) (vecCons x w) :=\n  by\n  ext (i j)\n  rw [vec_mul_vec_apply, Pi.smul_apply, smul_eq_mul]\n#align vec_mul_vec_cons vec_mul_vec_cons\n\n",
 "vec_mul_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem vec_mul_empty [Fintype n'] (v : n' → α) (B : Matrix n' (Fin 0) α) :\n    vecMul v B = «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  empty_eq _\n#align vec_mul_empty vec_mul_empty\n\n",
 "vec_mul_cons":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem vec_mul_cons (v : Fin n.succ → α) (w : o' → α) (B : Fin n → o' → α) :\n    vecMul v (of <| vecCons w B) = «expr • » (vecHead v) w + vecMul (vecTail v) (of B) :=\n  by\n  ext i\n  simp [vec_mul]\n#align vec_mul_cons vec_mul_cons\n\n",
 "vec3_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem vec3_eq {a₀ a₁ a₂ b₀ b₁ b₂ : α} (h₀ : a₀ = b₀) (h₁ : a₁ = b₁) (h₂ : a₂ = b₂) :\n    «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  by subst_vars\n#align vec3_eq vec3_eq\n\n",
 "vec3_dot_product'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem vec3_dot_product' {a₀ a₁ a₂ b₀ b₁ b₂ : α} :\n    matrix.dot_product\n        («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\")\n        («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\") =\n      a₀ * b₀ + a₁ * b₁ + a₂ * b₂ :=\n  by rw [cons_dot_product_cons, cons_dot_product_cons, cons_dot_product_cons, dot_product_empty, add_zero, add_assoc]\n#align vec3_dot_product' vec3_dot_product'\n\n",
 "vec3_dot_product":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n@[simp]\ntheorem vec3_dot_product (v w : Fin 3 → α) : matrix.dot_product v w = v 0 * w 0 + v 1 * w 1 + v 2 * w 2 :=\n  vec3_dot_product'\n#align vec3_dot_product vec3_dot_product\n\n",
 "vec3_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem vec3_add [Add α] (a₀ a₁ a₂ b₀ b₁ b₂ : α) :\n    «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" +\n        «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  by rw [cons_add_cons, cons_add_cons, cons_add_cons, empty_add_empty]\n#align vec3_add vec3_add\n\n",
 "vec2_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem vec2_eq {a₀ a₁ b₀ b₁ : α} (h₀ : a₀ = b₀) (h₁ : a₁ = b₁) :\n    «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  by subst_vars\n#align vec2_eq vec2_eq\n\n",
 "vec2_dot_product'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem vec2_dot_product' {a₀ a₁ b₀ b₁ : α} :\n    matrix.dot_product\n        («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\")\n        («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\") =\n      a₀ * b₀ + a₁ * b₁ :=\n  by rw [cons_dot_product_cons, cons_dot_product_cons, dot_product_empty, add_zero]\n#align vec2_dot_product' vec2_dot_product'\n\n",
 "vec2_dot_product":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n@[simp]\ntheorem vec2_dot_product (v w : Fin 2 → α) : matrix.dot_product v w = v 0 * w 0 + v 1 * w 1 :=\n  vec2_dot_product'\n#align vec2_dot_product vec2_dot_product\n\n",
 "vec2_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem vec2_add [Add α] (a₀ a₁ b₀ b₁ : α) :\n    «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" +\n        «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  by rw [cons_add_cons, cons_add_cons, empty_add_empty]\n#align vec2_add vec2_add\n\n",
 "transpose_empty_rows":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem transpose_empty_rows (A : Matrix m' (Fin 0) α) :\n    matrix.transpose A =\n      of («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\") :=\n  empty_eq _\n#align transpose_empty_rows transpose_empty_rows\n\n",
 "transpose_empty_cols":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem transpose_empty_cols (A : Matrix (Fin 0) m' α) :\n    matrix.transpose A =\n      of fun i => «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  funext fun i => empty_eq _\n#align transpose_empty_cols transpose_empty_cols\n\n",
 "tail_val'":
 "@[simp]\ntheorem tail_val' (B : Fin m.succ → n' → α) (j : n') : (vecTail fun i => B i j) = fun i => vecTail B i j :=\n  by\n  ext\n  simp [vec_tail]\n#align tail_val' tail_val'\n\n",
 "tail_transpose":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n@[simp]\ntheorem tail_transpose (A : Matrix m' (Fin n.succ) α) :\n    vecTail (of.symm (matrix.transpose A)) = matrix.transpose (vecTail ∘ A) :=\n  by\n  ext (i j)\n  rfl\n#align tail_transpose tail_transpose\n\n",
 "submatrix_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem submatrix_empty (A : Matrix m' n' α) (row : Fin 0 → m') (col : o' → n') :\n    submatrix A row col =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  empty_eq _\n#align submatrix_empty submatrix_empty\n\n",
 "submatrix_cons_row":
 "@[simp]\ntheorem submatrix_cons_row (A : Matrix m' n' α) (i : m') (row : Fin m → m') (col : o' → n') :\n    submatrix A (vecCons i row) col = vecCons (fun j => A i (col j)) (submatrix A row col) :=\n  by\n  ext (i j)\n  refine' Fin.cases _ _ i <;> simp [submatrix]\n#align submatrix_cons_row submatrix_cons_row\n\n",
 "smul_vec3":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem smul_vec3 {R : Type _} [SMul R α] (x : R) (a₀ a₁ a₂ : α) :\n    «expr • » x («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\") =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  by rw [smul_cons, smul_cons, smul_cons, smul_empty]\n#align smul_vec3 smul_vec3\n\n",
 "smul_vec2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem smul_vec2 {R : Type _} [SMul R α] (x : R) (a₀ a₁ : α) :\n    «expr • » x («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\") =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  by rw [smul_cons, smul_cons, smul_empty]\n#align smul_vec2 smul_vec2\n\n",
 "smul_mat_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem smul_mat_empty {m' : Type _} (x : α) (A : Fin 0 → m' → α) :\n    «expr • » x A = «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  empty_eq _\n#align smul_mat_empty smul_mat_empty\n\n",
 "smul_mat_cons":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_mat_cons (x : α) (v : n' → α) (A : Fin m → n' → α) :\n    «expr • » x (vecCons v A) = vecCons («expr • » x v) («expr • » x A) :=\n  by\n  ext i\n  refine' Fin.cases _ _ i <;> simp\n#align smul_mat_cons smul_mat_cons\n\n",
 "row_empty":
 "@[simp]\ntheorem row_empty : row (vecEmpty : Fin 0 → α) = fun _ => vecEmpty :=\n  by\n  ext\n  rfl\n#align row_empty row_empty\n\n",
 "row_cons":
 "@[simp]\ntheorem row_cons (x : α) (u : Fin m → α) : row (vecCons x u) = fun _ => vecCons x u :=\n  by\n  ext\n  rfl\n#align row_cons row_cons\n\n",
 "one_fin_two":
 "theorem one_fin_two : (1 : Matrix (Fin 2) (Fin 2) α) = !![1, 0; 0, 1] :=\n  by\n  ext (i j)\n  fin_cases i <;> fin_cases j <;> rfl\n#align one_fin_two one_fin_two\n\n",
 "one_fin_three":
 "theorem one_fin_three : (1 : Matrix (Fin 3) (Fin 3) α) = !![1, 0, 0; 0, 1, 0; 0, 0, 1] :=\n  by\n  ext (i j)\n  fin_cases i <;> fin_cases j <;> rfl\n#align one_fin_three one_fin_three\n\n",
 "mul_vec_empty":
 "@[simp]\ntheorem mul_vec_empty (A : Matrix m' (Fin 0) α) (v : Fin 0 → α) : mulVec A v = 0 :=\n  rfl\n#align mul_vec_empty mul_vec_empty\n\n",
 "mul_vec_cons":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem mul_vec_cons {α} [CommSemiring α] (A : m' → Fin n.succ → α) (x : α) (v : Fin n → α) :\n    mulVec (of A) (vecCons x v) = «expr • » x (vecHead ∘ A) + mulVec (of (vecTail ∘ A)) v :=\n  by\n  ext i\n  simp [mul_vec, mul_comm]\n#align mul_vec_cons mul_vec_cons\n\n",
 "mul_val_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem mul_val_succ [Fintype n'] (A : Matrix (Fin m.succ) n' α) (B : Matrix n' o' α) (i : Fin m) (j : o') :\n    (matrix.mul A B) i.succ j = (matrix.mul (of (vecTail (of.symm A))) B) i j :=\n  rfl\n#align mul_val_succ mul_val_succ\n\n",
 "mul_fin_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem mul_fin_two [AddCommMonoid α] [Mul α] (a₁₁ a₁₂ a₂₁ a₂₂ b₁₁ b₁₂ b₂₁ b₂₂ : α) :\n    matrix.mul !![a₁₁, a₁₂; a₂₁, a₂₂] !![b₁₁, b₁₂; b₂₁, b₂₂] =\n      !![a₁₁ * b₁₁ + a₁₂ * b₂₁, a₁₁ * b₁₂ + a₁₂ * b₂₂; a₂₁ * b₁₁ + a₂₂ * b₂₁, a₂₁ * b₁₂ + a₂₂ * b₂₂] :=\n  by\n  ext (i j)\n  fin_cases i <;> fin_cases j <;> simp [Matrix.mul, dot_product, Fin.sum_univ_succ]\n#align mul_fin_two mul_fin_two\n\n",
 "mul_fin_three":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem mul_fin_three [AddCommMonoid α] [Mul α]\n    (a₁₁ a₁₂ a₁₃ a₂₁ a₂₂ a₂₃ a₃₁ a₃₂ a₃₃ b₁₁ b₁₂ b₁₃ b₂₁ b₂₂ b₂₃ b₃₁ b₃₂ b₃₃ : α) :\n    matrix.mul !![a₁₁, a₁₂, a₁₃; a₂₁, a₂₂, a₂₃; a₃₁, a₃₂, a₃₃] !![b₁₁, b₁₂, b₁₃; b₂₁, b₂₂, b₂₃; b₃₁, b₃₂, b₃₃] =\n      !![a₁₁ * b₁₁ + a₁₂ * b₂₁ + a₁₃ * b₃₁, a₁₁ * b₁₂ + a₁₂ * b₂₂ + a₁₃ * b₃₂, a₁₁ * b₁₃ + a₁₂ * b₂₃ + a₁₃ * b₃₃;\n        a₂₁ * b₁₁ + a₂₂ * b₂₁ + a₂₃ * b₃₁, a₂₁ * b₁₂ + a₂₂ * b₂₂ + a₂₃ * b₃₂, a₂₁ * b₁₃ + a₂₂ * b₂₃ + a₂₃ * b₃₃;\n        a₃₁ * b₁₁ + a₃₂ * b₂₁ + a₃₃ * b₃₁, a₃₁ * b₁₂ + a₃₂ * b₂₂ + a₃₃ * b₃₂, a₃₁ * b₁₃ + a₃₂ * b₂₃ + a₃₃ * b₃₃] :=\n  by\n  ext (i j)\n  fin_cases i <;> fin_cases j <;> simp [Matrix.mul, dot_product, Fin.sum_univ_succ, ← add_assoc]\n#align mul_fin_three mul_fin_three\n\n",
 "mul_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem mul_empty [Fintype n'] (A : Matrix m' n' α) (B : Matrix n' (Fin 0) α) :\n    matrix.mul A B =\n      of fun _ => «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  funext fun _ => empty_eq _\n#align mul_empty mul_empty\n\n",
 "head_val'":
 "@[simp]\ntheorem head_val' (B : Fin m.succ → n' → α) (j : n') : (vecHead fun i => B i j) = vecHead B j :=\n  rfl\n#align head_val' head_val'\n\n",
 "head_transpose":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n@[simp]\ntheorem head_transpose (A : Matrix m' (Fin n.succ) α) : vecHead (of.symm (matrix.transpose A)) = vecHead ∘ of.symm A :=\n  rfl\n#align head_transpose head_transpose\n\n",
 "eta_fin_two":
 "theorem eta_fin_two (A : Matrix (Fin 2) (Fin 2) α) : A = !![A 0 0, A 0 1; A 1 0, A 1 1] :=\n  by\n  ext (i j)\n  fin_cases i <;> fin_cases j <;> rfl\n#align eta_fin_two eta_fin_two\n\n",
 "eta_fin_three":
 "theorem eta_fin_three (A : Matrix (Fin 3) (Fin 3) α) :\n    A = !![A 0 0, A 0 1, A 0 2; A 1 0, A 1 1, A 1 2; A 2 0, A 2 1, A 2 2] :=\n  by\n  ext (i j)\n  fin_cases i <;> fin_cases j <;> rfl\n#align eta_fin_three eta_fin_three\n\n",
 "empty_vec_mul_vec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem empty_vec_mul_vec (v : Fin 0 → α) (w : n' → α) :\n    vecMulVec v w = «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  empty_eq _\n#align empty_vec_mul_vec empty_vec_mul_vec\n\n",
 "empty_vec_mul":
 "@[simp]\ntheorem empty_vec_mul (v : Fin 0 → α) (B : Matrix (Fin 0) o' α) : vecMul v B = 0 :=\n  rfl\n#align empty_vec_mul empty_vec_mul\n\n",
 "empty_mul_vec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem empty_mul_vec [Fintype n'] (A : Matrix (Fin 0) n' α) (v : n' → α) :\n    mulVec A v = «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  empty_eq _\n#align empty_mul_vec empty_mul_vec\n\n",
 "empty_mul_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n@[simp]\ntheorem empty_mul_empty (A : Matrix m' (Fin 0) α) (B : Matrix (Fin 0) o' α) : matrix.mul A B = 0 :=\n  rfl\n#align empty_mul_empty empty_mul_empty\n\n",
 "empty_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem empty_mul [Fintype n'] (A : Matrix (Fin 0) n' α) (B : Matrix n' o' α) :\n    matrix.mul A B =\n      of («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\") :=\n  empty_eq _\n#align empty_mul empty_mul\n\n",
 "dot_product_empty":
 "@[simp]\ntheorem dot_product_empty (v w : Fin 0 → α) : dotProduct v w = 0 :=\n  Finset.sum_empty\n#align dot_product_empty dot_product_empty\n\n",
 "dot_product_cons":
 "@[simp]\ntheorem dot_product_cons (v : Fin n.succ → α) (x : α) (w : Fin n → α) :\n    dotProduct v (vecCons x w) = vecHead v * x + dotProduct (vecTail v) w := by\n  simp [dot_product, Fin.sum_univ_succ, vec_head, vec_tail]\n#align dot_product_cons dot_product_cons\n\n",
 "cons_vec_mul_vec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem cons_vec_mul_vec (x : α) (v : Fin m → α) (w : n' → α) :\n    vecMulVec (vecCons x v) w = vecCons («expr • » x w) (vecMulVec v w) :=\n  by\n  ext i\n  refine' Fin.cases _ _ i <;> simp [vec_mul_vec]\n#align cons_vec_mul_vec cons_vec_mul_vec\n\n",
 "cons_vec_mul_cons":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem cons_vec_mul_cons (x : α) (v : Fin n → α) (w : o' → α) (B : Fin n → o' → α) :\n    vecMul (vecCons x v) (of <| vecCons w B) = «expr • » x w + vecMul v (of B) := by simp\n#align cons_vec_mul_cons cons_vec_mul_cons\n\n",
 "cons_vec_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem cons_vec_mul (x : α) (v : Fin n → α) (B : Fin n.succ → o' → α) :\n    vecMul (vecCons x v) (of B) = «expr • » x (vecHead B) + vecMul v (of <| vecTail B) :=\n  by\n  ext i\n  simp [vec_mul]\n#align cons_vec_mul cons_vec_mul\n\n",
 "cons_val'":
 "/-\nCopyright (c) 2020 Anne Baanen. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Anne Baanen, Eric Wieser\n-/\n-- a list of lists if the matrix has at least one row, or the number of columns if the matrix has\n-- zero rows.\n-- empty rows\n-- empty columns\n-- Lean can't find this instance without some help. We only need it available in `Type 0`, and it is\n-- a massive amount of effort to make it universe-polymorphic.\n@[simp]\ntheorem cons_val' (v : n' → α) (B : Fin m → n' → α) (i j) : vecCons v B i j = vecCons (v j) (fun i => B i j) i := by\n  refine' Fin.cases _ _ i <;> simp\n#align cons_val' cons_val'\n\n",
 "cons_transpose":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n@[simp]\ntheorem cons_transpose (v : n' → α) (A : Matrix (Fin m) n' α) :\n    matrix.transpose (of (vecCons v A)) = of fun i => vecCons (v i) ((matrix.transpose A) i) :=\n  by\n  ext (i j)\n  refine' Fin.cases _ _ j <;> simp\n#align cons_transpose cons_transpose\n\n",
 "cons_mul_vec":
 "@[simp]\ntheorem cons_mul_vec [Fintype n'] (v : n' → α) (A : Fin m → n' → α) (w : n' → α) :\n    mulVec (of <| vecCons v A) w = vecCons (dotProduct v w) (mulVec (of A) w) :=\n  by\n  ext i\n  refine' Fin.cases _ _ i <;> simp [mul_vec]\n#align cons_mul_vec cons_mul_vec\n\n",
 "cons_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n@[simp]\ntheorem cons_mul [Fintype n'] (v : n' → α) (A : Fin m → n' → α) (B : Matrix n' o' α) :\n    matrix.mul (of (vecCons v A)) B = of (vecCons (vecMul v B) (of.symm (matrix.mul (of A) B))) :=\n  by\n  ext (i j)\n  refine' Fin.cases _ _ i\n  · rfl\n  simp [mul_val_succ]\n#align cons_mul cons_mul\n\n",
 "cons_dot_product_cons":
 "@[simp]\ntheorem cons_dot_product_cons (x : α) (v : Fin n → α) (y : α) (w : Fin n → α) :\n    dotProduct (vecCons x v) (vecCons y w) = x * y + dotProduct v w := by simp\n#align cons_dot_product_cons cons_dot_product_cons\n\n",
 "cons_dot_product":
 "@[simp]\ntheorem cons_dot_product (x : α) (v : Fin n → α) (w : Fin n.succ → α) :\n    dotProduct (vecCons x v) w = x * vecHead w + dotProduct v (vecTail w) := by\n  simp [dot_product, Fin.sum_univ_succ, vec_head, vec_tail]\n#align cons_dot_product cons_dot_product\n\n",
 "col_empty":
 "@[simp]\ntheorem col_empty (v : Fin 0 → α) : col v = vecEmpty :=\n  empty_eq _\n#align col_empty col_empty\n\n",
 "col_cons":
 "@[simp]\ntheorem col_cons (x : α) (u : Fin m → α) : col (vecCons x u) = vecCons (fun _ => x) (col u) :=\n  by\n  ext (i j)\n  refine' Fin.cases _ _ i <;> simp [vec_head, vec_tail]\n#align col_cons col_cons\n\n"}