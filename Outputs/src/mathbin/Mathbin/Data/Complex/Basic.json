{"zero_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem zero_re : (0 : exprℂ).re = 0 :=\n  rfl\n#align zero_re zero_re\n\n",
 "zero_lt_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem zero_lt_real {x : exprℝ} : (0 : exprℂ) < (x : exprℂ) ↔ 0 < x :=\n  real_lt_real\n#align zero_lt_real zero_lt_real\n\n",
 "zero_le_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem zero_le_real {x : exprℝ} : (0 : exprℂ) ≤ (x : exprℂ) ↔ 0 ≤ x :=\n  real_le_real\n#align zero_le_real zero_le_real\n\n",
 "zero_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem zero_im : (0 : exprℂ).im = 0 :=\n  rfl\n#align zero_im zero_im\n\n",
 "sub_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem sub_re (z w : exprℂ) : (z - w).re = z.re - w.re :=\n  rfl\n#align sub_re sub_re\n\n",
 "sub_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem sub_im (z w : exprℂ) : (z - w).im = z.im - w.im :=\n  rfl\n#align sub_im sub_im\n\n",
 "sub_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem sub_conj (z : exprℂ) : z - (star_ring_end) z = (2 * z.im : exprℝ) * I :=\n  ext_iff.2 <| by simp [two_mul, sub_eq_add_neg]\n#align sub_conj sub_conj\n\n",
 "star_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n-- `simp_nf` complains about this being provable by `is_R_or_C.star_def` even\n-- though it's not imported by this file.\n@[simp, nolint simp_nf]\ntheorem star_def : (has_star.star : exprℂ → exprℂ) = star_ring_end :=\n  rfl\n#align star_def star_def\n\n",
 "sq_abs_sub_sq_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem sq_abs_sub_sq_re (z : exprℂ) : abs z ^ 2 - z.re ^ 2 = z.im ^ 2 := by\n  rw [sq_abs, norm_sq_apply, ← sq, ← sq, add_sub_cancel']\n#align sq_abs_sub_sq_re sq_abs_sub_sq_re\n\n",
 "sq_abs_sub_sq_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem sq_abs_sub_sq_im (z : exprℂ) : abs z ^ 2 - z.im ^ 2 = z.re ^ 2 := by rw [← sq_abs_sub_sq_re, sub_sub_cancel]\n#align sq_abs_sub_sq_im sq_abs_sub_sq_im\n\n",
 "sq_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n#print sq_abs /-\ntheorem sq_abs (z : exprℂ) : abs z ^ 2 = norm_sq z :=\n  real.sq_sqrt (norm_sq_nonneg _)\n#align sq_abs sq_abs\n-/\n\n",
 "real_lt_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem real_lt_real {x y : exprℝ} : (x : exprℂ) < (y : exprℂ) ↔ x < y := by simp [lt_def]\n#align real_lt_real real_lt_real\n\n",
 "real_le_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem real_le_real {x y : exprℝ} : (x : exprℂ) ≤ (y : exprℂ) ↔ x ≤ y := by simp [le_def]\n#align real_le_real real_le_real\n\n",
 "re_surjective":
 "theorem re_surjective : surjective re := fun x => ⟨⟨x, 0⟩, rfl⟩\n#align re_surjective re_surjective\n\n",
 "re_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n@[simp]\ntheorem re_sum (f : α → exprℂ) :\n    (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)).re =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i).re :=\n  re_add_group_hom.map_sum f s\n#align re_sum re_sum\n\n",
 "re_sq_le_norm_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem re_sq_le_norm_sq (z : exprℂ) : z.re * z.re ≤ norm_sq z :=\n  le_add_of_nonneg_right (mul_self_nonneg _)\n#align re_sq_le_norm_sq re_sq_le_norm_sq\n\n",
 "re_le_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem re_le_abs (z : exprℂ) : z.re ≤ abs z :=\n  (abs_le.1 (abs_re_le_abs _)).2\n#align re_le_abs re_le_abs\n\n",
 "re_eq_add_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- A complex number `z` plus its conjugate `conj z` is `2` times its real part. -/\ntheorem re_eq_add_conj (z : exprℂ) : (z.re : exprℂ) = (z + (star_ring_end) z) / 2 := by\n  simp only [add_conj, of_real_mul, of_real_one, of_real_bit0, mul_div_cancel_left (z.re : exprℂ) two_ne_zero]\n#align re_eq_add_conj re_eq_add_conj\n\n",
 "re_add_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem re_add_im (z : exprℂ) : (z.re : exprℂ) + z.im * I = z :=\n  ext_iff.2 <| by simp\n#align re_add_im re_add_im\n\n",
 "rat_cast_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem rat_cast_re (q : exprℚ) : (q : exprℂ).re = q := by rw [← of_real_rat_cast, of_real_re]\n#align rat_cast_re rat_cast_re\n\n",
 "rat_cast_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem rat_cast_im (q : exprℚ) : (q : exprℂ).im = 0 := by rw [← of_real_rat_cast, of_real_im]\n#align rat_cast_im rat_cast_im\n\n",
 "range_re":
 "@[simp]\ntheorem range_re : range re = univ :=\n  re_surjective.range_eq\n#align range_re range_re\n\n",
 "range_norm_sq":
 "@[simp]\ntheorem range_norm_sq : range norm_sq = Ici 0 :=\n  Subset.antisymm (range_subset_iff.2 norm_sq_nonneg) fun x hx =>\n    ⟨real.sqrt x, by rw [norm_sq_of_real, real.mul_self_sqrt hx]⟩\n#align range_norm_sq range_norm_sq\n\n",
 "range_im":
 "@[simp]\ntheorem range_im : range im = univ :=\n  im_surjective.range_eq\n#align range_im range_im\n\n",
 "range_abs":
 "@[simp]\ntheorem range_abs : range abs = Ici 0 :=\n  Subset.antisymm (range_subset_iff.2 abs.nonneg) fun x hx => ⟨x, abs_of_nonneg hx⟩\n#align range_abs range_abs\n\n",
 "one_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem one_re : (1 : exprℂ).re = 1 :=\n  rfl\n#align one_re one_re\n\n",
 "one_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem one_im : (1 : exprℂ).im = 0 :=\n  rfl\n#align one_im one_im\n\n",
 "of_real_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_zpow (r : exprℝ) (n : ℤ) : ((r ^ n : exprℝ) : exprℂ) = (r : exprℂ) ^ n :=\n  map_zpow₀ of_real r n\n#align of_real_zpow of_real_zpow\n\n",
 "of_real_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_zero : ((0 : exprℝ) : exprℂ) = 0 :=\n  rfl\n#align of_real_zero of_real_zero\n\n",
 "of_real_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_sum (f : α → exprℝ) :\n    ((finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i) : exprℝ) :\n        exprℂ) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i : exprℂ) :=\n  ring_hom.map_sum of_real _ _\n#align of_real_sum of_real_sum\n\n",
 "of_real_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_sub (r s : exprℝ) : ((r - s : exprℝ) : exprℂ) = r - s :=\n  ext_iff.2 <| by simp\n#align of_real_sub of_real_sub\n\n",
 "of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_re (r : exprℝ) : (r : exprℂ).re = r :=\n  rfl\n#align of_real_re of_real_re\n\n",
 "of_real_rat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℚ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_rat_cast (n : exprℚ) : ((n : exprℝ) : exprℂ) = n :=\n  map_ratCast of_real n\n#align of_real_rat_cast of_real_rat_cast\n\n",
 "of_real_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_prod (f : α → exprℝ) :\n    ((finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (f i) :\n          exprℝ) :\n        exprℂ) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s\n        (f i : exprℂ) :=\n  ring_hom.map_prod of_real _ _\n#align of_real_prod of_real_prod\n\n",
 "of_real_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_pow (r : exprℝ) (n : ℕ) : ((r ^ n : exprℝ) : exprℂ) = r ^ n := by\n  induction n <;> simp [*, of_real_mul, pow_succ]\n#align of_real_pow of_real_pow\n\n",
 "of_real_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_one : ((1 : exprℝ) : exprℂ) = 1 :=\n  rfl\n#align of_real_one of_real_one\n\n",
 "of_real_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_neg (r : exprℝ) : ((-r : exprℝ) : exprℂ) = -r :=\n  ext_iff.2 <| by simp\n#align of_real_neg of_real_neg\n\n",
 "of_real_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem of_real_ne_zero {z : exprℝ} : (z : exprℂ) ≠ 0 ↔ z ≠ 0 :=\n  not_congr of_real_eq_zero\n#align of_real_ne_zero of_real_ne_zero\n\n",
 "of_real_ne_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem of_real_ne_one {z : exprℝ} : (z : exprℂ) ≠ 1 ↔ z ≠ 1 :=\n  not_congr of_real_eq_one\n#align of_real_ne_one of_real_ne_one\n\n",
 "of_real_nat_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_nat_cast (n : ℕ) : ((n : exprℝ) : exprℂ) = n :=\n  map_nat_cast of_real n\n#align of_real_nat_cast of_real_nat_cast\n\n",
 "of_real_mul_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem of_real_mul_re (r : exprℝ) (z : exprℂ) : (↑r * z).re = r * z.re := by simp\n#align of_real_mul_re of_real_mul_re\n\n",
 "of_real_mul_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem of_real_mul_im (r : exprℝ) (z : exprℂ) : (↑r * z).im = r * z.im := by simp\n#align of_real_mul_im of_real_mul_im\n\n",
 "of_real_mul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem of_real_mul' (r : exprℝ) (z : exprℂ) : ↑r * z = ⟨r * z.re, r * z.im⟩ :=\n  ext (of_real_mul_re _ _) (of_real_mul_im _ _)\n#align of_real_mul' of_real_mul'\n\n",
 "of_real_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_mul (r s : exprℝ) : ((r * s : exprℝ) : exprℂ) = r * s :=\n  ext_iff.2 <| by simp\n#align of_real_mul of_real_mul\n\n",
 "of_real_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_inv (r : exprℝ) : ((r⁻¹ : exprℝ) : exprℂ) = r⁻¹ :=\n  ext_iff.2 <| by simp\n#align of_real_inv of_real_inv\n\n",
 "of_real_int_cast":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_int_cast (n : ℤ) : ((n : exprℝ) : exprℂ) = n :=\n  map_intCast of_real n\n#align of_real_int_cast of_real_int_cast\n\n",
 "of_real_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem of_real_injective : function.injective (coe : exprℝ → exprℂ) := fun z w => congr_arg re\n#align of_real_injective of_real_injective\n\n",
 "of_real_inj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_inj {z w : exprℝ} : (z : exprℂ) = w ↔ z = w :=\n  ⟨congr_arg re, congr_arg _⟩\n#align of_real_inj of_real_inj\n\n",
 "of_real_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_im (r : exprℝ) : (r : exprℂ).im = 0 :=\n  rfl\n#align of_real_im of_real_im\n\n",
 "of_real_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem of_real_eq_zero {z : exprℝ} : (z : exprℂ) = 0 ↔ z = 0 :=\n  of_real_inj\n#align of_real_eq_zero of_real_eq_zero\n\n",
 "of_real_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem of_real_eq_one {z : exprℝ} : (z : exprℂ) = 1 ↔ z = 1 :=\n  of_real_inj\n#align of_real_eq_one of_real_eq_one\n\n",
 "of_real_eq_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem of_real_eq_coe (r : exprℝ) : of_real r = r :=\n  rfl\n#align of_real_eq_coe of_real_eq_coe\n\n",
 "of_real_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_div (r s : exprℝ) : ((r / s : exprℝ) : exprℂ) = r / s :=\n  map_div₀ of_real r s\n#align of_real_div of_real_div\n\n",
 "of_real_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem of_real_def (r : exprℝ) : (r : exprℂ) = ⟨r, 0⟩ :=\n  rfl\n#align of_real_def of_real_def\n\n",
 "of_real_bit1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_bit1 (r : exprℝ) : ((bit1 r : exprℝ) : exprℂ) = bit1 r :=\n  ext_iff.2 <| by simp [bit1]\n#align of_real_bit1 of_real_bit1\n\n",
 "of_real_bit0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_bit0 (r : exprℝ) : ((bit0 r : exprℝ) : exprℂ) = bit0 r :=\n  ext_iff.2 <| by simp [bit0]\n#align of_real_bit0 of_real_bit0\n\n",
 "of_real_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_add (r s : exprℝ) : ((r + s : exprℝ) : exprℂ) = r + s :=\n  ext_iff.2 <| by simp\n#align of_real_add of_real_add\n\n",
 "not_lt_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem not_lt_zero_iff {z : exprℂ} : ¬z < 0 ↔ 0 ≤ z.re ∨ z.im ≠ 0 :=\n  not_lt_iff\n#align not_lt_zero_iff not_lt_zero_iff\n\n",
 "not_lt_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem not_lt_iff {z w : exprℂ} : ¬z < w ↔ w.re ≤ z.re ∨ z.im ≠ w.im := by rw [lt_def, not_and_or, not_lt]\n#align not_lt_iff not_lt_iff\n\n",
 "not_le_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem not_le_zero_iff {z : exprℂ} : ¬z ≤ 0 ↔ 0 < z.re ∨ z.im ≠ 0 :=\n  not_le_iff\n#align not_le_zero_iff not_le_zero_iff\n\n",
 "not_le_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem not_le_iff {z w : exprℂ} : ¬z ≤ w ↔ w.re < z.re ∨ z.im ≠ w.im := by rw [le_def, not_and_or, not_le]\n#align not_le_iff not_le_iff\n\n",
 "norm_sq_zero":
 "@[simp]\ntheorem norm_sq_zero : norm_sq 0 = 0 :=\n  norm_sq.map_zero\n#align norm_sq_zero norm_sq_zero\n\n",
 "norm_sq_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem norm_sq_sub (z w : exprℂ) : norm_sq (z - w) = norm_sq z + norm_sq w - 2 * (z * (star_ring_end) w).re :=\n  by\n  rw [sub_eq_add_neg, norm_sq_add]\n  simp only [RingHom.map_neg, mul_neg, neg_re, tactic.ring.add_neg_eq_sub, norm_sq_neg]\n#align norm_sq_sub norm_sq_sub\n\n",
 "norm_sq_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem norm_sq_pos {z : exprℂ} : 0 < norm_sq z ↔ z ≠ 0 :=\n  (norm_sq_nonneg z).lt_iff_ne.trans <| not_congr (eq_comm.trans norm_sq_eq_zero)\n#align norm_sq_pos norm_sq_pos\n\n",
 "norm_sq_one":
 "@[simp]\ntheorem norm_sq_one : norm_sq 1 = 1 :=\n  norm_sq.map_one\n#align norm_sq_one norm_sq_one\n\n",
 "norm_sq_of_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem norm_sq_of_real (r : exprℝ) : norm_sq r = r * r := by simp [norm_sq]\n#align norm_sq_of_real norm_sq_of_real\n\n",
 "norm_sq_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem norm_sq_nonneg (z : exprℂ) : 0 ≤ norm_sq z :=\n  add_nonneg (mul_self_nonneg _) (mul_self_nonneg _)\n#align norm_sq_nonneg norm_sq_nonneg\n\n",
 "norm_sq_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem norm_sq_neg (z : exprℂ) : norm_sq (-z) = norm_sq z := by simp [norm_sq]\n#align norm_sq_neg norm_sq_neg\n\n",
 "norm_sq_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem norm_sq_mul (z w : exprℂ) : norm_sq (z * w) = norm_sq z * norm_sq w :=\n  norm_sq.map_mul z w\n#align norm_sq_mul norm_sq_mul\n\n",
 "norm_sq_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem norm_sq_mk (x y : exprℝ) : norm_sq ⟨x, y⟩ = x * x + y * y :=\n  rfl\n#align norm_sq_mk norm_sq_mk\n\n",
 "norm_sq_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem norm_sq_inv (z : exprℂ) : norm_sq z⁻¹ = (norm_sq z)⁻¹ :=\n  map_inv₀ norm_sq z\n#align norm_sq_inv norm_sq_inv\n\n",
 "norm_sq_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem norm_sq_eq_zero {z : exprℂ} : norm_sq z = 0 ↔ z = 0 :=\n  ⟨fun h =>\n    ext (eq_zero_of_mul_self_add_mul_self_eq_zero h)\n      (eq_zero_of_mul_self_add_mul_self_eq_zero <| (add_comm _ _).trans h),\n    fun h => h.symm ▸ norm_sq_zero⟩\n#align norm_sq_eq_zero norm_sq_eq_zero\n\n",
 "norm_sq_eq_conj_mul_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem norm_sq_eq_conj_mul_self {z : exprℂ} : (norm_sq z : exprℂ) = (star_ring_end) z * z := by\n  ext <;> simp [norm_sq, mul_comm]\n#align norm_sq_eq_conj_mul_self norm_sq_eq_conj_mul_self\n\n",
 "norm_sq_eq_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem norm_sq_eq_abs (x : exprℂ) : norm_sq x = abs x ^ 2 := by simp [abs, sq, real.mul_self_sqrt (norm_sq_nonneg _)]\n#align norm_sq_eq_abs norm_sq_eq_abs\n\n",
 "norm_sq_div":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem norm_sq_div (z w : exprℂ) : norm_sq (z / w) = norm_sq z / norm_sq w :=\n  map_div₀ norm_sq z w\n#align norm_sq_div norm_sq_div\n\n",
 "norm_sq_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem norm_sq_conj (z : exprℂ) : norm_sq ((star_ring_end) z) = norm_sq z := by simp [norm_sq]\n#align norm_sq_conj norm_sq_conj\n\n",
 "norm_sq_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem norm_sq_apply (z : exprℂ) : norm_sq z = z.re * z.re + z.im * z.im :=\n  rfl\n#align norm_sq_apply norm_sq_apply\n\n",
 "norm_sq_add_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem norm_sq_add_mul_I (x y : exprℝ) : norm_sq (x + y * I) = x ^ 2 + y ^ 2 := by\n  rw [← mk_eq_add_mul_I, norm_sq_mk, sq, sq]\n#align norm_sq_add_mul_I norm_sq_add_mul_I\n\n",
 "norm_sq_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem norm_sq_add (z w : exprℂ) : norm_sq (z + w) = norm_sq z + norm_sq w + 2 * (z * (star_ring_end) w).re := by\n  dsimp [norm_sq] <;> ring\n#align norm_sq_add norm_sq_add\n\n",
 "norm_sq_I":
 "@[simp]\ntheorem norm_sq_I : norm_sq I = 1 := by simp [norm_sq]\n#align norm_sq_I norm_sq_I\n\n",
 "neg_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem neg_re (z : exprℂ) : (-z).re = -z.re :=\n  rfl\n#align neg_re neg_re\n\n",
 "neg_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem neg_im (z : exprℂ) : (-z).im = -z.im :=\n  rfl\n#align neg_im neg_im\n\n",
 "nat_cast_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem nat_cast_re (n : ℕ) : (n : exprℂ).re = n := by rw [← of_real_nat_cast, of_real_re]\n#align nat_cast_re nat_cast_re\n\n",
 "nat_cast_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem nat_cast_im (n : ℕ) : (n : exprℂ).im = 0 := by rw [← of_real_nat_cast, of_real_im]\n#align nat_cast_im nat_cast_im\n\n",
 "mul_self_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem mul_self_abs (z : exprℂ) : abs z * abs z = norm_sq z :=\n  real.mul_self_sqrt (norm_sq_nonneg _)\n#align mul_self_abs mul_self_abs\n\n",
 "mul_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem mul_re (z w : exprℂ) : (z * w).re = z.re * w.re - z.im * w.im :=\n  rfl\n#align mul_re mul_re\n\n",
 "mul_inv_cancel":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n#print mul_inv_cancel /-\nprotected theorem mul_inv_cancel {z : exprℂ} (h : z ≠ 0) : z * z⁻¹ = 1 := by\n  rw [inv_def, ← mul_assoc, mul_conj, ← of_real_mul, mul_inv_cancel (mt norm_sq_eq_zero.1 h), of_real_one]\n#align mul_inv_cancel mul_inv_cancel\n-/\n\n",
 "mul_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem mul_im (z w : exprℂ) : (z * w).im = z.re * w.im + z.im * w.re :=\n  rfl\n#align mul_im mul_im\n\n",
 "mul_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem mul_conj (z : exprℂ) : z * (star_ring_end) z = norm_sq z :=\n  ext_iff.2 <| by simp [norm_sq, mul_comm, sub_eq_neg_add, add_comm]\n#align mul_conj mul_conj\n\n",
 "mul_I_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem mul_I_re (z : exprℂ) : (z * I).re = -z.im := by simp\n#align mul_I_re mul_I_re\n\n",
 "mul_I_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem mul_I_im (z : exprℂ) : (z * I).im = z.re := by simp\n#align mul_I_im mul_I_im\n\n",
 "mk_eq_add_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem mk_eq_add_mul_I (a b : exprℝ) : complex.mk a b = a + b * I :=\n  ext_iff.2 <| by simp\n#align mk_eq_add_mul_I mk_eq_add_mul_I\n\n",
 "mem_re_prod_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ×ℂ » -/\ntheorem mem_re_prod_im {z : exprℂ} {s t : set (exprℝ)} : z ∈ «expr ×ℂ » s t ↔ z.re ∈ s ∧ z.im ∈ t :=\n  iff.rfl\n#align mem_re_prod_im mem_re_prod_im\n\n",
 "lt_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem lt_def {z w : exprℂ} : z < w ↔ z.re < w.re ∧ z.im = w.im :=\n  iff.rfl\n#align lt_def lt_def\n\n",
 "lim_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem lim_re (f : CauSeq (exprℂ) abs) : lim (cau_seq_re f) = (lim f).re := by rw [lim_eq_lim_im_add_lim_re] <;> simp\n#align lim_re lim_re\n\n",
 "lim_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem lim_im (f : CauSeq (exprℂ) abs) : lim (cau_seq_im f) = (lim f).im := by rw [lim_eq_lim_im_add_lim_re] <;> simp\n#align lim_im lim_im\n\n",
 "lim_eq_lim_im_add_lim_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem lim_eq_lim_im_add_lim_re (f : CauSeq (exprℂ) abs) : lim f = ↑(lim (cau_seq_re f)) + ↑(lim (cau_seq_im f)) * I :=\n  lim_eq_of_equiv_const <|\n    calc\n      f ≈ _ := equiv_lim_aux f\n      _ = CauSeq.const abs (↑(lim (cau_seq_re f)) + ↑(lim (cau_seq_im f)) * I) :=\n        CauSeq.ext fun _ => complex.ext (by simp [lim_aux, cau_seq_re]) (by simp [lim_aux, cau_seq_im])\n      \n#align lim_eq_lim_im_add_lim_re lim_eq_lim_im_add_lim_re\n\n",
 "lim_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem lim_conj (f : CauSeq (exprℂ) abs) : lim (cau_seq_conj f) = (star_ring_end) (lim f) :=\n  complex.ext (by simp [cau_seq_conj, (lim_re _).symm, cau_seq_re])\n    (by simp [cau_seq_conj, (lim_im _).symm, cau_seq_im, (lim_neg _).symm] <;> rfl)\n#align lim_conj lim_conj\n\n",
 "lim_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem lim_abs (f : CauSeq (exprℂ) abs) : lim (cau_seq_abs f) = abs (lim f) :=\n  lim_eq_of_equiv_const fun ε ε0 =>\n    let ⟨i, hi⟩ := equiv_lim f ε ε0\n    ⟨i, fun j hj => lt_of_le_of_lt (abs.abs_abv_sub_le_abv_sub _ _) (hi j hj)⟩\n#align lim_abs lim_abs\n\n",
 "le_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem le_def {z w : exprℂ} : z ≤ w ↔ z.re ≤ w.re ∧ z.im = w.im :=\n  iff.rfl\n#align le_def le_def\n\n",
 "is_cau_seq_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabs' -/\ntheorem is_cau_seq_re (f : CauSeq (exprℂ) abs) : IsCauSeq (exprabs') fun n => (f n).re := fun ε ε0 =>\n  (f.cauchy ε0).imp fun i H j ij => lt_of_le_of_lt (by simpa using abs_re_le_abs (f j - f i)) (H _ ij)\n#align is_cau_seq_re is_cau_seq_re\n\n",
 "is_cau_seq_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabs' -/\ntheorem is_cau_seq_im (f : CauSeq (exprℂ) abs) : IsCauSeq (exprabs') fun n => (f n).im := fun ε ε0 =>\n  (f.cauchy ε0).imp fun i H j ij => lt_of_le_of_lt (by simpa using abs_im_le_abs (f j - f i)) (H _ ij)\n#align is_cau_seq_im is_cau_seq_im\n\n",
 "is_cau_seq_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem is_cau_seq_conj (f : CauSeq (exprℂ) abs) : IsCauSeq abs fun n => (star_ring_end) (f n) := fun ε ε0 =>\n  let ⟨i, hi⟩ := f.2 ε ε0\n  ⟨i, fun j hj => by rw [← RingHom.map_sub, abs_conj] <;> exact hi j hj⟩\n#align is_cau_seq_conj is_cau_seq_conj\n\n",
 "is_cau_seq_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprabs' -/\ntheorem is_cau_seq_abs {f : ℕ → exprℂ} (hf : IsCauSeq abs f) : IsCauSeq (exprabs') (abs ∘ f) := fun ε ε0 =>\n  let ⟨i, hi⟩ := hf ε ε0\n  ⟨i, fun j hj => lt_of_le_of_lt (abs.abs_abv_sub_le_abv_sub _ _) (hi j hj)⟩\n#align is_cau_seq_abs is_cau_seq_abs\n\n",
 "inv_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\nprotected theorem inv_zero : (0⁻¹ : exprℂ) = 0 := by rw [← of_real_zero, ← of_real_inv, inv_zero]\n#align inv_zero inv_zero\n\n",
 "inv_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem inv_re (z : exprℂ) : z⁻¹.re = z.re / norm_sq z := by simp [inv_def, division_def]\n#align inv_re inv_re\n\n",
 "inv_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem inv_im (z : exprℂ) : z⁻¹.im = -z.im / norm_sq z := by simp [inv_def, division_def]\n#align inv_im inv_im\n\n",
 "inv_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem inv_def (z : exprℂ) : z⁻¹ = (star_ring_end) z * ((norm_sq z)⁻¹ : exprℝ) :=\n  rfl\n#align inv_def inv_def\n\n",
 "inv_I":
 "@[simp]\ntheorem inv_I : I⁻¹ = -I := by simp [inv_eq_one_div]\n#align inv_I inv_I\n\n",
 "int_cast_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem int_cast_re (n : ℤ) : (n : exprℂ).re = n := by rw [← of_real_int_cast, of_real_re]\n#align int_cast_re int_cast_re\n\n",
 "int_cast_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem int_cast_im (n : ℤ) : (n : exprℂ).im = 0 := by rw [← of_real_int_cast, of_real_im]\n#align int_cast_im int_cast_im\n\n",
 "int_cast_abs":
 "@[simp, norm_cast]\ntheorem int_cast_abs (n : ℤ) : ↑(|n|) = abs n := by rw [← of_real_int_cast, abs_of_real, Int.cast_abs]\n#align int_cast_abs int_cast_abs\n\n",
 "im_surjective":
 "theorem im_surjective : surjective im := fun y => ⟨⟨0, y⟩, rfl⟩\n#align im_surjective im_surjective\n\n",
 "im_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n@[simp]\ntheorem im_sum (f : α → exprℂ) :\n    (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i)).im =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f i).im :=\n  im_add_group_hom.map_sum f s\n#align im_sum im_sum\n\n",
 "im_sq_le_norm_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem im_sq_le_norm_sq (z : exprℂ) : z.im * z.im ≤ norm_sq z :=\n  le_add_of_nonneg_left (mul_self_nonneg _)\n#align im_sq_le_norm_sq im_sq_le_norm_sq\n\n",
 "im_le_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem im_le_abs (z : exprℂ) : z.im ≤ abs z :=\n  (abs_le.1 (abs_im_le_abs _)).2\n#align im_le_abs im_le_abs\n\n",
 "im_eq_sub_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- A complex number `z` minus its conjugate `conj z` is `2i` times its imaginary part. -/\ntheorem im_eq_sub_conj (z : exprℂ) : (z.im : exprℂ) = (z - (star_ring_end) z) / (2 * I) := by\n  simp only [sub_conj, of_real_mul, of_real_one, of_real_bit0, mul_right_comm,\n    mul_div_cancel_left _ (mul_ne_zero two_ne_zero I_ne_zero : 2 * I ≠ 0)]\n#align im_eq_sub_conj im_eq_sub_conj\n\n",
 "ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem ext_iff {z w : exprℂ} : z = w ↔ z.re = w.re ∧ z.im = w.im :=\n  ⟨fun H => by simp [H], fun h => ext h.1 h.2⟩\n#align ext_iff ext_iff\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[ext]\ntheorem ext : ∀ {z w : exprℂ}, z.re = w.re → z.im = w.im → z = w\n  | ⟨zr, zi⟩, ⟨_, _⟩, rfl, rfl => rfl\n#align ext ext\n\n",
 "eta":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/-\nCopyright (c) 2017 Kevin Buzzard. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kevin Buzzard, Mario Carneiro\n-/\n@[simp]\ntheorem eta : ∀ z : exprℂ, complex.mk z.re z.im = z\n  | ⟨a, b⟩ => rfl\n#align eta eta\n\n",
 "equiv_real_prod_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem equiv_real_prod_symm_apply (p : exprℝ × exprℝ) : equiv_real_prod.symm p = p.1 + p.2 * I := by\n  ext <;> simp [equiv_real_prod]\n#align equiv_real_prod_symm_apply equiv_real_prod_symm_apply\n\n",
 "equiv_lim_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem equiv_lim_aux (f : CauSeq (exprℂ) abs) : f ≈ CauSeq.const abs (lim_aux f) := fun ε ε0 =>\n  (exists_forall_ge_and (CauSeq.equiv_lim ⟨_, is_cau_seq_re f⟩ _ (half_pos ε0))\n        (CauSeq.equiv_lim ⟨_, is_cau_seq_im f⟩ _ (half_pos ε0))).imp\n    fun i H j ij => by\n    cases' H _ ij with H₁ H₂\n    apply lt_of_le_of_lt (abs_le_abs_re_add_abs_im _)\n    dsimp [lim_aux] at *\n    have := add_lt_add H₁ H₂\n    rwa [add_halves] at this\n#align equiv_lim_aux equiv_lim_aux\n\n",
 "eq_re_of_real_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem eq_re_of_real_le {r : exprℝ} {z : exprℂ} (hz : (r : exprℂ) ≤ z) : z = z.re :=\n  by\n  ext\n  rfl\n  simp only [← (complex.le_def.1 hz).2, complex.zero_im, complex.of_real_im]\n#align eq_re_of_real_le eq_re_of_real_le\n\n",
 "eq_conj_iff_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem eq_conj_iff_real {z : exprℂ} : (star_ring_end) z = z ↔ ∃ r : exprℝ, z = r :=\n  ⟨fun h => ⟨z.re, ext rfl <| eq_zero_of_neg_eq (congr_arg im h)⟩, fun ⟨h, e⟩ => by rw [e, conj_of_real]⟩\n#align eq_conj_iff_real eq_conj_iff_real\n\n",
 "eq_conj_iff_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem eq_conj_iff_re {z : exprℂ} : (star_ring_end) z = z ↔ (z.re : exprℂ) = z :=\n  eq_conj_iff_real.trans ⟨by rintro ⟨r, rfl⟩ <;> simp, fun h => ⟨_, h.symm⟩⟩\n#align eq_conj_iff_re eq_conj_iff_re\n\n",
 "eq_conj_iff_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem eq_conj_iff_im {z : exprℂ} : (star_ring_end) z = z ↔ z.im = 0 :=\n  ⟨fun h => add_self_eq_zero.mp (neg_eq_iff_add_eq_zero.mp (congr_arg im h)), fun h =>\n    ext rfl (neg_eq_iff_add_eq_zero.mpr (add_self_eq_zero.mpr h))⟩\n#align eq_conj_iff_im eq_conj_iff_im\n\n",
 "div_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem div_re (z w : exprℂ) : (z / w).re = z.re * w.re / norm_sq w + z.im * w.im / norm_sq w := by\n  simp [div_eq_mul_inv, mul_assoc, sub_eq_add_neg]\n#align div_re div_re\n\n",
 "div_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem div_im (z w : exprℂ) : (z / w).im = z.im * w.re / norm_sq w - z.re * w.im / norm_sq w := by\n  simp [div_eq_mul_inv, mul_assoc, sub_eq_add_neg, add_comm]\n#align div_im div_im\n\n",
 "div_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem div_I (z : exprℂ) : z / I = -(z * I) :=\n  (div_eq_iff_mul_eq I_ne_zero).2 <| by simp [mul_assoc]\n#align div_I div_I\n\n",
 "conj_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem conj_re (z : exprℂ) : ((star_ring_end) z).re = z.re :=\n  rfl\n#align conj_re conj_re\n\n",
 "conj_of_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem conj_of_real (r : exprℝ) : (star_ring_end) (r : exprℂ) = r :=\n  ext_iff.2 <| by simp [star_ring_end]\n#align conj_of_real conj_of_real\n\n",
 "conj_neg_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem conj_neg_I : (star_ring_end) (-I) = I :=\n  ext_iff.2 <| by simp\n#align conj_neg_I conj_neg_I\n\n",
 "conj_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n#print conj_inv /-\ntheorem conj_inv (x : exprℂ) : (star_ring_end) x⁻¹ = ((star_ring_end) x)⁻¹ :=\n  star_inv' _\n#align conj_inv conj_inv\n-/\n\n",
 "conj_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem conj_im (z : exprℂ) : ((star_ring_end) z).im = -z.im :=\n  rfl\n#align conj_im conj_im\n\n",
 "conj_bit1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem conj_bit1 (z : exprℂ) : (star_ring_end) (bit1 z) = bit1 ((star_ring_end) z) :=\n  ext_iff.2 <| by simp [bit0]\n#align conj_bit1 conj_bit1\n\n",
 "conj_bit0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem conj_bit0 (z : exprℂ) : (star_ring_end) (bit0 z) = bit0 ((star_ring_end) z) :=\n  ext_iff.2 <| by simp [bit0]\n#align conj_bit0 conj_bit0\n\n",
 "conj_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem conj_I : (star_ring_end) I = -I :=\n  ext_iff.2 <| by simp\n#align conj_I conj_I\n\n",
 "coe_re_add_group_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- We use a nonstandard formula for the `ℕ` and `ℤ` actions to make sure there is no\ndiamond from the other actions they inherit through the `ℝ`-action on `ℂ` and action transitivity\ndefined in `data.complex.module.lean`. -/\n@[simp]\ntheorem coe_re_add_group_hom : (re_add_group_hom : exprℂ → exprℝ) = re :=\n  rfl\n#align coe_re_add_group_hom coe_re_add_group_hom\n\n",
 "coe_im_add_group_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem coe_im_add_group_hom : (im_add_group_hom : exprℂ → exprℝ) = im :=\n  rfl\n#align coe_im_add_group_hom coe_im_add_group_hom\n\n",
 "bit1_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem bit1_re (z : exprℂ) : (bit1 z).re = bit1 z.re :=\n  rfl\n#align bit1_re bit1_re\n\n",
 "bit1_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem bit1_im (z : exprℂ) : (bit1 z).im = bit0 z.im :=\n  add_zero _\n#align bit1_im bit1_im\n\n",
 "bit0_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem bit0_re (z : exprℂ) : (bit0 z).re = bit0 z.re :=\n  rfl\n#align bit0_re bit0_re\n\n",
 "bit0_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem bit0_im (z : exprℂ) : (bit0 z).im = bit0 z.im :=\n  eq.refl _\n#align bit0_im bit0_im\n\n",
 "add_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem add_re (z w : exprℂ) : (z + w).re = z.re + w.re :=\n  rfl\n#align add_re add_re\n\n",
 "add_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem add_im (z w : exprℂ) : (z + w).im = z.im + w.im :=\n  rfl\n#align add_im add_im\n\n",
 "add_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem add_conj (z : exprℂ) : z + (star_ring_end) z = (2 * z.re : exprℝ) :=\n  ext_iff.2 <| by simp [two_mul]\n#align add_conj add_conj\n\n",
 "abs_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem abs_zpow (z : exprℂ) (n : ℤ) : abs (z ^ n) = abs z ^ n :=\n  map_zpow₀ abs z n\n#align abs_zpow abs_zpow\n\n",
 "abs_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print abs_two /-\n@[simp]\ntheorem abs_two : abs 2 = 2 :=\n  calc\n    abs 2 = abs (2 : exprℝ) := by rw [of_real_bit0, of_real_one]\n    _ = (2 : exprℝ) := abs_of_nonneg (by norm_num)\n    \n#align abs_two abs_two\n-/\n\n",
 "abs_re_lt_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem abs_re_lt_abs {z : exprℂ} : |z.re| < abs z ↔ z.im ≠ 0 := by\n  rw [abs, AbsoluteValue.coe_mk, MulHom.coe_mk, real.lt_sqrt (abs_nonneg _), norm_sq_apply, _root_.sq_abs, ← sq,\n    lt_add_iff_pos_right, mul_self_pos]\n#align abs_re_lt_abs abs_re_lt_abs\n\n",
 "abs_re_le_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem abs_re_le_abs (z : exprℂ) : |z.re| ≤ abs z :=\n  real.abs_le_sqrt <| by\n    rw [norm_sq_apply, ← sq]\n    exact le_add_of_nonneg_right (mul_self_nonneg _)\n#align abs_re_le_abs abs_re_le_abs\n\n",
 "abs_re_div_abs_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem abs_re_div_abs_le_one (z : exprℂ) : |z.re / z.abs| ≤ 1 :=\n  if hz : z = 0 then by simp [hz, zero_le_one]\n  else by simp_rw [_root_.abs_div, abs_abs, div_le_iff (abs.pos hz), one_mul, abs_re_le_abs]\n#align abs_re_div_abs_le_one abs_re_div_abs_le_one\n\n",
 "abs_prod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem abs_prod {ι : Type _} (s : Finset ι) (f : ι → exprℂ) : abs (s.prod f) = s.prod fun i => abs (f i) :=\n  map_prod abs _ _\n#align abs_prod abs_prod\n\n",
 "abs_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n#print abs_pow /-\n@[simp]\ntheorem abs_pow (z : exprℂ) (n : ℕ) : abs (z ^ n) = abs z ^ n :=\n  map_pow abs z n\n#align abs_pow abs_pow\n-/\n\n",
 "abs_of_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp, norm_cast]\ntheorem abs_of_real (r : exprℝ) : abs r = |r| := by simp [abs, norm_sq_of_real, real.sqrt_mul_self_eq_abs]\n#align abs_of_real abs_of_real\n\n",
 "abs_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n#print abs_of_nonneg /-\ntheorem abs_of_nonneg {r : exprℝ} (h : 0 ≤ r) : abs r = r :=\n  (abs_of_real _).trans (abs_of_nonneg h)\n#align abs_of_nonneg abs_of_nonneg\n-/\n\n",
 "abs_of_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem abs_of_nat (n : ℕ) : complex.abs n = n :=\n  calc\n    complex.abs n = complex.abs (n : exprℝ) := by rw [of_real_nat_cast]\n    _ = _ := abs_of_nonneg (nat.cast_nonneg n)\n    \n#align abs_of_nat abs_of_nat\n\n",
 "abs_nonneg'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\nprivate theorem abs_nonneg' (z : exprℂ) : 0 ≤ abs z :=\n  real.sqrt_nonneg _\n#align abs_nonneg' abs_nonneg'\n\n",
 "abs_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n#print abs_mul /-\nprivate theorem abs_mul (z w : exprℂ) : abs (z * w) = abs z * abs w := by\n  rw [norm_sq_mul, real.sqrt_mul (norm_sq_nonneg _)]\n#align abs_mul abs_mul\n-/\n\n",
 "abs_le_sqrt_two_mul_max":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem abs_le_sqrt_two_mul_max (z : exprℂ) : abs z ≤ real.sqrt 2 * max (|z.re|) (|z.im|) :=\n  by\n  cases' z with x y\n  simp only [abs, norm_sq_mk, ← sq]\n  wlog (discharger := tactic.skip) hle : |x| ≤ |y| := le_total (|x|) (|y|) using x y, y x\n  · simp only [AbsoluteValue.coe_mk, MulHom.coe_mk, norm_sq_mk, ← sq]\n    calc\n      real.sqrt (x ^ 2 + y ^ 2) ≤ real.sqrt (y ^ 2 + y ^ 2) := real.sqrt_le_sqrt (add_le_add_right (sq_le_sq.2 hle) _)\n      _ = real.sqrt 2 * max (|x|) (|y|) := by\n        rw [max_eq_right hle, ← two_mul, real.sqrt_mul two_pos.le, real.sqrt_sq_eq_abs]\n      \n  · dsimp\n    rwa [add_comm, max_comm]\n#align abs_le_sqrt_two_mul_max abs_le_sqrt_two_mul_max\n\n",
 "abs_le_abs_re_add_abs_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem abs_le_abs_re_add_abs_im (z : exprℂ) : abs z ≤ |z.re| + |z.im| := by\n  simpa [re_add_im] using abs.add_le z.re (z.im * I)\n#align abs_le_abs_re_add_abs_im abs_le_abs_re_add_abs_im\n\n",
 "abs_im_lt_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem abs_im_lt_abs {z : exprℂ} : |z.im| < abs z ↔ z.re ≠ 0 := by simpa using @abs_re_lt_abs (z * I)\n#align abs_im_lt_abs abs_im_lt_abs\n\n",
 "abs_im_le_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem abs_im_le_abs (z : exprℂ) : |z.im| ≤ abs z :=\n  real.abs_le_sqrt <| by\n    rw [norm_sq_apply, ← sq, ← sq]\n    exact le_add_of_nonneg_left (sq_nonneg _)\n#align abs_im_le_abs abs_im_le_abs\n\n",
 "abs_im_div_abs_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem abs_im_div_abs_le_one (z : exprℂ) : |z.im / z.abs| ≤ 1 :=\n  if hz : z = 0 then by simp [hz, zero_le_one]\n  else by simp_rw [_root_.abs_div, abs_abs, div_le_iff (abs.pos hz), one_mul, abs_im_le_abs]\n#align abs_im_div_abs_le_one abs_im_div_abs_le_one\n\n",
 "abs_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem abs_def : (abs : exprℂ → exprℝ) = fun z => (norm_sq z).sqrt :=\n  rfl\n#align abs_def abs_def\n\n",
 "abs_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem abs_conj (z : exprℂ) : abs ((star_ring_end) z) = abs z :=\n  abs_theory.abs_conj z\n#align abs_conj abs_conj\n\n",
 "abs_cast_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem abs_cast_nat (n : ℕ) : abs (n : exprℂ) = n := by rw [← of_real_nat_cast, abs_of_nonneg (nat.cast_nonneg n)]\n#align abs_cast_nat abs_cast_nat\n\n",
 "abs_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem abs_apply {z : exprℂ} : abs z = (norm_sq z).sqrt :=\n  rfl\n#align abs_apply abs_apply\n\n",
 "abs_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `abs -/\n#print abs_add /-\nprivate theorem abs_add (z w : exprℂ) : abs (z + w) ≤ abs z + abs w :=\n  (mul_self_le_mul_self_iff (abs_nonneg' (z + w)) (add_nonneg (abs_nonneg' z) (abs_nonneg' w))).2 <|\n    by\n    rw [mul_self_abs, add_mul_self_eq, mul_self_abs, mul_self_abs, add_right_comm, norm_sq_add, add_le_add_iff_left,\n      mul_assoc, mul_le_mul_left (zero_lt_two' (exprℝ)), ← real.sqrt_mul <| norm_sq_nonneg z, ← norm_sq_conj w, ←\n      map_mul]\n    exact re_le_abs (z * (star_ring_end) w)\n#align abs_add abs_add\n-/\n\n",
 "abs_abs":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n#print abs_abs /-\n@[simp]\ntheorem abs_abs (z : exprℂ) : |abs z| = abs z :=\n  abs_of_nonneg (abs.nonneg _)\n#align abs_abs abs_abs\n-/\n\n",
 "abs_I":
 "@[simp]\ntheorem abs_I : abs I = 1 := by simp [abs]\n#align abs_I abs_I\n\n",
 "I_zpow_bit1":
 "@[simp]\ntheorem I_zpow_bit1 (n : ℤ) : I ^ bit1 n = (-1) ^ n * I := by rw [zpow_bit1', I_mul_I]\n#align I_zpow_bit1 I_zpow_bit1\n\n",
 "I_zpow_bit0":
 "@[simp]\ntheorem I_zpow_bit0 (n : ℤ) : I ^ bit0 n = (-1) ^ n := by rw [zpow_bit0', I_mul_I]\n#align I_zpow_bit0 I_zpow_bit0\n\n",
 "I_sq":
 "@[simp]\ntheorem I_sq : I ^ 2 = -1 := by rw [sq, I_mul_I]\n#align I_sq I_sq\n\n",
 "I_re": "@[simp]\ntheorem I_re : I.re = 0 :=\n  rfl\n#align I_re I_re\n\n",
 "I_pow_bit1":
 "@[simp]\ntheorem I_pow_bit1 (n : ℕ) : I ^ bit1 n = (-1) ^ n * I := by rw [pow_bit1', I_mul_I]\n#align I_pow_bit1 I_pow_bit1\n\n",
 "I_pow_bit0":
 "@[simp]\ntheorem I_pow_bit0 (n : ℕ) : I ^ bit0 n = (-1) ^ n := by rw [pow_bit0', I_mul_I]\n#align I_pow_bit0 I_pow_bit0\n\n",
 "I_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem I_ne_zero : (I : exprℂ) ≠ 0 :=\n  mt (congr_arg im) zero_ne_one.symm\n#align I_ne_zero I_ne_zero\n\n",
 "I_mul_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem I_mul_re (z : exprℂ) : (I * z).re = -z.im := by simp\n#align I_mul_re I_mul_re\n\n",
 "I_mul_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem I_mul_im (z : exprℂ) : (I * z).im = z.re := by simp\n#align I_mul_im I_mul_im\n\n",
 "I_mul_I":
 "@[simp]\ntheorem I_mul_I : I * I = -1 :=\n  ext_iff.2 <| by simp\n#align I_mul_I I_mul_I\n\n",
 "I_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem I_mul (z : exprℂ) : I * z = ⟨-z.im, z.re⟩ :=\n  ext_iff.2 <| by simp\n#align I_mul I_mul\n\n",
 "I_im": "@[simp]\ntheorem I_im : I.im = 1 :=\n  rfl\n#align I_im I_im\n\n"}