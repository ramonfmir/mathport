{"two_sinh":
 "theorem two_sinh : 2 * sinh x = exp x - exp (-x) :=\n  mul_div_cancel' _ two_ne_zero\n#align two_sinh two_sinh\n\n",
 "two_sin":
 "theorem two_sin : 2 * sin x = (exp (-x * I) - exp (x * I)) * I :=\n  mul_div_cancel' _ two_ne_zero\n#align two_sin two_sin\n\n",
 "two_cosh":
 "theorem two_cosh : 2 * cosh x = exp x + exp (-x) :=\n  mul_div_cancel' _ two_ne_zero\n#align two_cosh two_cosh\n\n",
 "two_cos":
 "theorem two_cos : 2 * cos x = exp (x * I) + exp (-x * I) :=\n  mul_div_cancel' _ two_ne_zero\n#align two_cos two_cos\n\n",
 "tanh_zero":
 "@[simp]\ntheorem tanh_zero : tanh 0 = 0 := by simp [tanh]\n#align tanh_zero tanh_zero\n\n",
 "tanh_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem tanh_of_real_re (x : exprℝ) : (tanh x).re = real.tanh x :=\n  rfl\n#align tanh_of_real_re tanh_of_real_re\n\n",
 "tanh_of_real_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem tanh_of_real_im (x : exprℝ) : (tanh x).im = 0 := by rw [← of_real_tanh_of_real_re, of_real_im]\n#align tanh_of_real_im tanh_of_real_im\n\n",
 "tanh_neg":
 "@[simp]\ntheorem tanh_neg : tanh (-x) = -tanh x := by simp [tanh, neg_div]\n#align tanh_neg tanh_neg\n\n",
 "tanh_mul_I":
 "theorem tanh_mul_I : tanh (x * I) = tan x * I := by\n  rw [tanh_eq_sinh_div_cosh, cosh_mul_I, sinh_mul_I, mul_div_right_comm, tan]\n#align tanh_mul_I tanh_mul_I\n\n",
 "tanh_eq_sinh_div_cosh":
 "theorem tanh_eq_sinh_div_cosh : tanh x = sinh x / cosh x :=\n  of_real_inj.1 <| by simp [tanh_eq_sinh_div_cosh]\n#align tanh_eq_sinh_div_cosh tanh_eq_sinh_div_cosh\n\n",
 "tanh_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem tanh_conj : tanh ((star_ring_end) x) = (star_ring_end) (tanh x) := by\n  rw [tanh, sinh_conj, cosh_conj, ← map_div₀, tanh]\n#align tanh_conj tanh_conj\n\n",
 "tan_zero":
 "@[simp]\ntheorem tan_zero : tan 0 = 0 := by simp [tan]\n#align tan_zero tan_zero\n\n",
 "tan_sq_div_one_add_tan_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem tan_sq_div_one_add_tan_sq {x : exprℝ} (hx : cos x ≠ 0) : tan x ^ 2 / (1 + tan x ^ 2) = sin x ^ 2 := by\n  simp only [← tan_mul_cos hx, mul_pow, ← inv_one_add_tan_sq hx, div_eq_mul_inv, one_mul]\n#align tan_sq_div_one_add_tan_sq tan_sq_div_one_add_tan_sq\n\n",
 "tan_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem tan_of_real_re (x : exprℝ) : (tan x).re = real.tan x :=\n  rfl\n#align tan_of_real_re tan_of_real_re\n\n",
 "tan_of_real_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem tan_of_real_im (x : exprℝ) : (tan x).im = 0 := by rw [← of_real_tan_of_real_re, of_real_im]\n#align tan_of_real_im tan_of_real_im\n\n",
 "tan_neg":
 "@[simp]\ntheorem tan_neg : tan (-x) = -tan x := by simp [tan, neg_div]\n#align tan_neg tan_neg\n\n",
 "tan_mul_cos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem tan_mul_cos {x : exprℝ} (hx : cos x ≠ 0) : tan x * cos x = sin x := by\n  rw [tan_eq_sin_div_cos, div_mul_cancel _ hx]\n#align tan_mul_cos tan_mul_cos\n\n",
 "tan_mul_I":
 "theorem tan_mul_I : tan (x * I) = tanh x * I := by\n  rw [tan, sin_mul_I, cos_mul_I, mul_div_right_comm, tanh_eq_sinh_div_cosh]\n#align tan_mul_I tan_mul_I\n\n",
 "tan_eq_sin_div_cos":
 "theorem tan_eq_sin_div_cos : tan x = sin x / cos x := by\n  rw [← of_real_inj, of_real_tan, tan_eq_sin_div_cos, of_real_div, of_real_sin, of_real_cos]\n#align tan_eq_sin_div_cos tan_eq_sin_div_cos\n\n",
 "tan_div_sqrt_one_add_tan_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem tan_div_sqrt_one_add_tan_sq {x : exprℝ} (hx : 0 < cos x) : tan x / sqrt (1 + tan x ^ 2) = sin x := by\n  rw [← tan_mul_cos hx.ne', ← inv_sqrt_one_add_tan_sq hx, div_eq_mul_inv]\n#align tan_div_sqrt_one_add_tan_sq tan_div_sqrt_one_add_tan_sq\n\n",
 "tan_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem tan_conj : tan ((star_ring_end) x) = (star_ring_end) (tan x) := by rw [tan, sin_conj, cos_conj, ← map_div₀, tan]\n#align tan_conj tan_conj\n\n",
 "sum_range_diag_flip":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem sum_range_diag_flip {α : Type _} [add_comm_monoid α] (n : ℕ) (f : ℕ → ℕ → α) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (m + 1))\n          (f k (m - k))) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (n - m))\n          (f m k)) :=\n  by\n  rw [sum_sigma', sum_sigma'] <;>\n    exact\n      sum_bij (fun a _ => ⟨a.2, a.1 - a.2⟩)\n        (fun a ha =>\n          have h₁ : a.1 < n := mem_range.1 (mem_sigma.1 ha).1\n          have h₂ : a.2 < nat.succ a.1 := mem_range.1 (mem_sigma.1 ha).2\n          mem_sigma.2\n            ⟨mem_range.2 (lt_of_lt_of_le h₂ h₁), mem_range.2 ((tsub_lt_tsub_iff_right (nat.le_of_lt_succ h₂)).2 h₁)⟩)\n        (fun _ _ => rfl)\n        (fun ⟨a₁, a₂⟩ ⟨b₁, b₂⟩ ha hb h =>\n          have ha : a₁ < n ∧ a₂ ≤ a₁ :=\n            ⟨mem_range.1 (mem_sigma.1 ha).1, nat.le_of_lt_succ (mem_range.1 (mem_sigma.1 ha).2)⟩\n          have hb : b₁ < n ∧ b₂ ≤ b₁ :=\n            ⟨mem_range.1 (mem_sigma.1 hb).1, nat.le_of_lt_succ (mem_range.1 (mem_sigma.1 hb).2)⟩\n          have h : a₂ = b₂ ∧ _ := sigma.mk.inj h\n          have h' : a₁ = b₁ - b₂ + a₂ := (tsub_eq_iff_eq_add_of_le ha.2).1 (eq_of_heq h.2)\n          sigma.mk.inj_iff.2 ⟨tsub_add_cancel_of_le hb.2 ▸ h'.symm ▸ h.1 ▸ rfl, heq_of_eq h.1⟩)\n        fun ⟨a₁, a₂⟩ ha =>\n        have ha : a₁ < n ∧ a₂ < n - a₁ := ⟨mem_range.1 (mem_sigma.1 ha).1, mem_range.1 (mem_sigma.1 ha).2⟩\n        ⟨⟨a₂ + a₁, a₁⟩,\n          ⟨mem_sigma.2 ⟨mem_range.2 (lt_tsub_iff_right.1 ha.2), mem_range.2 (nat.lt_succ_of_le (nat.le_add_left _ _))⟩,\n            sigma.mk.inj_iff.2 ⟨rfl, heq_of_eq (add_tsub_cancel_right _ _).symm⟩⟩⟩\n#align sum_range_diag_flip sum_range_diag_flip\n\n",
 "sum_div_factorial_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem sum_div_factorial_le {α : Type _} [LinearOrderedField α] (n j : ℕ) (hn : 0 < n) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n        (filter (fun k => n ≤ k) (range j)) (1 / nat.factorial m : α) ≤\n      n.succ / (nat.factorial n * n) :=\n  calc\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (filter (fun k => n ≤ k) (range j)) (1 / nat.factorial m : α) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (j - n))\n          (1 / nat.factorial (m + n)) :=\n      sum_bij (fun m _ => m - n)\n        (fun m hm => mem_range.2 <| (tsub_lt_tsub_iff_right (by simp at hm <;> tauto)).2 (by simp at hm <;> tauto))\n        (fun m hm => by rw [tsub_add_cancel_of_le] <;> simp at * <;> tauto)\n        (fun a₁ a₂ ha₁ ha₂ h => by\n          rwa [tsub_eq_iff_eq_add_of_le, tsub_add_eq_add_tsub, eq_comm, tsub_eq_iff_eq_add_of_le, add_left_inj,\n                eq_comm] at h <;>\n              simp at * <;>\n            tauto)\n        fun b hb =>\n        ⟨b + n, mem_filter.2 ⟨mem_range.2 <| lt_tsub_iff_right.mp (mem_range.1 hb), nat.le_add_left _ _⟩, by\n          rw [add_tsub_cancel_right]⟩\n    _ ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (j - n))\n          (nat.factorial n * n.succ ^ m)⁻¹ :=\n      by\n      refine' sum_le_sum fun m n => _\n      rw [one_div, inv_le_inv]\n      · rw [← Nat.cast_pow, ← nat.cast_mul, nat.cast_le, add_comm]\n        exact Nat.factorial_mul_pow_le_factorial\n      · exact nat.cast_pos.2 (Nat.factorial_pos _)\n      · exact mul_pos (nat.cast_pos.2 (Nat.factorial_pos _)) (pow_pos (nat.cast_pos.2 (nat.succ_pos _)) _)\n    _ =\n        (nat.factorial n)⁻¹ *\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (range (j - n)) (n.succ⁻¹ ^ m) :=\n      by simp [mul_inv, mul_sum.symm, sum_mul.symm, -Nat.factorial_succ, mul_comm, inv_pow]\n    _ = (n.succ - n.succ * n.succ⁻¹ ^ (j - n)) / (nat.factorial n * n) :=\n      by\n      have h₁ : (n.succ : α) ≠ 1 := @Nat.cast_one α _ ▸ mt Nat.cast_inj.1 (mt nat.succ.inj (pos_iff_ne_zero.1 hn))\n      have h₂ : (n.succ : α) ≠ 0 := Nat.cast_ne_zero.2 (nat.succ_ne_zero _)\n      have h₃ : (nat.factorial n * n : α) ≠ 0 :=\n        mul_ne_zero (Nat.cast_ne_zero.2 (pos_iff_ne_zero.1 (Nat.factorial_pos _)))\n          (Nat.cast_ne_zero.2 (pos_iff_ne_zero.1 hn))\n      have h₄ : (n.succ - 1 : α) = n := by simp\n      rw [geom_sum_inv h₁ h₂, eq_div_iff_mul_eq h₃, mul_comm _ (nat.factorial n * n : α), ←\n          mul_assoc ((nat.factorial n)⁻¹ : α), ← mul_inv_rev, h₄, ← mul_assoc (nat.factorial n * n : α),\n          mul_comm (n : α) (nat.factorial n), mul_inv_cancel h₃] <;>\n        simp [mul_add, add_mul, mul_assoc, mul_comm]\n    _ ≤ n.succ / (nat.factorial n * n) :=\n      by\n      refine' Iff.mpr (div_le_div_right (mul_pos _ _)) _\n      exact nat.cast_pos.2 (Nat.factorial_pos _)\n      exact nat.cast_pos.2 hn\n      exact sub_le_self _ (mul_nonneg (nat.cast_nonneg _) (pow_nonneg (inv_nonneg.2 (nat.cast_nonneg _)) _))\n    \n#align sum_div_factorial_le sum_div_factorial_le\n\n",
 "sinh_zero":
 "@[simp]\ntheorem sinh_zero : sinh 0 = 0 := by simp [sinh]\n#align sinh_zero sinh_zero\n\n",
 "sinh_two_mul":
 "theorem sinh_two_mul : sinh (2 * x) = 2 * sinh x * cosh x := by rw [← of_real_inj] <;> simp [sinh_two_mul]\n#align sinh_two_mul sinh_two_mul\n\n",
 "sinh_three_mul":
 "theorem sinh_three_mul : sinh (3 * x) = 4 * sinh x ^ 3 + 3 * sinh x := by rw [← of_real_inj] <;> simp [sinh_three_mul]\n#align sinh_three_mul sinh_three_mul\n\n",
 "sinh_sub_cosh":
 "@[simp]\ntheorem sinh_sub_cosh : sinh x - cosh x = -exp (-x) := by rw [← neg_sub, cosh_sub_sinh]\n#align sinh_sub_cosh sinh_sub_cosh\n\n",
 "sinh_sub":
 "theorem sinh_sub : sinh (x - y) = sinh x * cosh y - cosh x * sinh y := by\n  simp [sub_eq_add_neg, sinh_add, sinh_neg, cosh_neg]\n#align sinh_sub sinh_sub\n\n",
 "sinh_sq":
 "theorem sinh_sq : sinh x ^ 2 = cosh x ^ 2 - 1 := by rw [← of_real_inj] <;> simp [sinh_sq]\n#align sinh_sq sinh_sq\n\n",
 "sinh_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem sinh_of_real_re (x : exprℝ) : (sinh x).re = real.sinh x :=\n  rfl\n#align sinh_of_real_re sinh_of_real_re\n\n",
 "sinh_of_real_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem sinh_of_real_im (x : exprℝ) : (sinh x).im = 0 := by rw [← of_real_sinh_of_real_re, of_real_im]\n#align sinh_of_real_im sinh_of_real_im\n\n",
 "sinh_neg":
 "@[simp]\ntheorem sinh_neg : sinh (-x) = -sinh x := by simp [sinh, exp_neg, (neg_div _ _).symm, add_mul]\n#align sinh_neg sinh_neg\n\n",
 "sinh_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem sinh_mul_I : sinh (x * I) = sin x * I := by\n  rw [← mul_right_inj' (two_ne_zero' (exprℂ)), two_sinh, ← mul_assoc, two_sin, mul_assoc, I_mul_I, mul_neg_one, neg_sub,\n    neg_mul_eq_neg_mul]\n#align sinh_mul_I sinh_mul_I\n\n",
 "sinh_lt_cosh":
 "theorem sinh_lt_cosh : sinh x < cosh x :=\n  lt_of_pow_lt_pow 2 (cosh_pos _).le <| (cosh_sq x).symm ▸ lt_add_one _\n#align sinh_lt_cosh sinh_lt_cosh\n\n",
 "sinh_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The definition of `sinh` in terms of `exp`. -/\ntheorem sinh_eq (x : exprℝ) : sinh x = (exp x - exp (-x)) / 2 :=\n  eq_div_of_mul_eq two_ne_zero <| by\n    rw [sinh, exp, exp, complex.of_real_neg, complex.sinh, mul_two, ← complex.add_re, ← mul_two,\n      div_mul_cancel _ (two_ne_zero' (exprℂ)), complex.sub_re]\n#align sinh_eq sinh_eq\n\n",
 "sinh_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem sinh_conj : sinh ((star_ring_end) x) = (star_ring_end) (sinh x) := by\n  rw [sinh, ← RingHom.map_neg, exp_conj, exp_conj, ← RingHom.map_sub, sinh, map_div₀, conj_bit0, RingHom.map_one]\n#align sinh_conj sinh_conj\n\n",
 "sinh_add_cosh":
 "@[simp]\ntheorem sinh_add_cosh : sinh x + cosh x = exp x := by rw [add_comm, cosh_add_sinh]\n#align sinh_add_cosh sinh_add_cosh\n\n",
 "sinh_add_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\nprivate theorem sinh_add_aux {a b c d : exprℂ} : (a - b) * (c + d) + (a + b) * (c - d) = 2 * (a * c - b * d) := by ring\n#align sinh_add_aux sinh_add_aux\n\n",
 "sinh_add":
 "theorem sinh_add : sinh (x + y) = sinh x * cosh y + cosh x * sinh y := by rw [← of_real_inj] <;> simp [sinh_add]\n#align sinh_add sinh_add\n\n",
 "sin_zero":
 "@[simp]\ntheorem sin_zero : sin 0 = 0 := by simp [sin]\n#align sin_zero sin_zero\n\n",
 "sin_two_mul":
 "theorem sin_two_mul : sin (2 * x) = 2 * sin x * cos x := by rw [← of_real_inj] <;> simp [sin_two_mul]\n#align sin_two_mul sin_two_mul\n\n",
 "sin_three_mul":
 "theorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by rw [← of_real_inj] <;> simp [sin_three_mul]\n#align sin_three_mul sin_three_mul\n\n",
 "sin_sub_sin":
 "theorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) :=\n  by\n  rw [← of_real_inj]\n  simp only [sin, cos, of_real_sin_of_real_re, of_real_sub, of_real_add, of_real_div, of_real_mul, of_real_one,\n    of_real_bit0]\n  convert sin_sub_sin _ _ <;> norm_cast\n#align sin_sub_sin sin_sub_sin\n\n",
 "sin_sub":
 "theorem sin_sub : sin (x - y) = sin x * cos y - cos x * sin y := by simp [sub_eq_add_neg, sin_add, sin_neg, cos_neg]\n#align sin_sub sin_sub\n\n",
 "sin_sq_le_one":
 "theorem sin_sq_le_one : sin x ^ 2 ≤ 1 := by rw [← sin_sq_add_cos_sq x] <;> exact le_add_of_nonneg_right (sq_nonneg _)\n#align sin_sq_le_one sin_sq_le_one\n\n",
 "sin_sq_add_cos_sq":
 "@[simp]\ntheorem sin_sq_add_cos_sq : sin x ^ 2 + cos x ^ 2 = 1 :=\n  of_real_inj.1 <| by simp\n#align sin_sq_add_cos_sq sin_sq_add_cos_sq\n\n",
 "sin_sq":
 "theorem sin_sq : sin x ^ 2 = 1 - cos x ^ 2 :=\n  eq_sub_iff_add_eq.2 <| sin_sq_add_cos_sq _\n#align sin_sq sin_sq\n\n",
 "sin_pos_of_pos_of_le_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem sin_pos_of_pos_of_le_two {x : exprℝ} (hx0 : 0 < x) (hx : x ≤ 2) : 0 < sin x :=\n  have : x / 2 ≤ 1 := (div_le_iff (by norm_num)).mpr (by simpa)\n  calc\n    0 < 2 * sin (x / 2) * cos (x / 2) :=\n      mul_pos (mul_pos (by norm_num) (sin_pos_of_pos_of_le_one (half_pos hx0) this))\n        (cos_pos_of_le_one (by rwa [_root_.abs_of_nonneg (le_of_lt (half_pos hx0))]))\n    _ = sin x := by rw [← sin_two_mul, two_mul, add_halves]\n    \n#align sin_pos_of_pos_of_le_two sin_pos_of_pos_of_le_two\n\n",
 "sin_pos_of_pos_of_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem sin_pos_of_pos_of_le_one {x : exprℝ} (hx0 : 0 < x) (hx : x ≤ 1) : 0 < sin x :=\n  calc\n    0 < x - x ^ 3 / 6 - |x| ^ 4 * (5 / 96) :=\n      sub_pos.2 <|\n        lt_sub_iff_add_lt.2\n          (calc\n            |x| ^ 4 * (5 / 96) + x ^ 3 / 6 ≤ x * (5 / 96) + x / 6 :=\n              add_le_add\n                (mul_le_mul_of_nonneg_right\n                  (calc\n                    |x| ^ 4 ≤ |x| ^ 1 :=\n                      pow_le_pow_of_le_one (abs_nonneg _) (by rwa [_root_.abs_of_nonneg (le_of_lt hx0)]) (by decide)\n                    _ = x := by simp [_root_.abs_of_nonneg (le_of_lt hx0)]\n                    )\n                  (by norm_num))\n                ((div_le_div_right (by norm_num)).2\n                  (calc\n                    x ^ 3 ≤ x ^ 1 := pow_le_pow_of_le_one (le_of_lt hx0) hx (by decide)\n                    _ = x := pow_one _\n                    ))\n            _ < x := by linarith\n            )\n    _ ≤ sin x := sub_le_comm.1 (abs_sub_le_iff.1 (sin_bound (by rwa [_root_.abs_of_nonneg (le_of_lt hx0)]))).2\n    \n#align sin_pos_of_pos_of_le_one sin_pos_of_pos_of_le_one\n\n",
 "sin_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem sin_of_real_re (x : exprℝ) : (sin x).re = real.sin x :=\n  rfl\n#align sin_of_real_re sin_of_real_re\n\n",
 "sin_of_real_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem sin_of_real_im (x : exprℝ) : (sin x).im = 0 := by rw [← of_real_sin_of_real_re, of_real_im]\n#align sin_of_real_im sin_of_real_im\n\n",
 "sin_neg":
 "@[simp]\ntheorem sin_neg : sin (-x) = -sin x := by simp [sin, exp_neg, (neg_div _ _).symm, add_mul]\n#align sin_neg sin_neg\n\n",
 "sin_mul_I":
 "theorem sin_mul_I : sin (x * I) = sinh x * I :=\n  by\n  have h : I * sin (x * I) = -sinh x := by\n    rw [mul_comm, ← sinh_mul_I]\n    ring_nf\n    simp\n  simpa only [neg_mul, div_I, neg_neg] using cancel_factors.cancel_factors_eq_div h I_ne_zero\n#align sin_mul_I sin_mul_I\n\n",
 "sin_le_one":
 "theorem sin_le_one : sin x ≤ 1 :=\n  (abs_le.1 (abs_sin_le_one _)).2\n#align sin_le_one sin_le_one\n\n",
 "sin_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem sin_eq (z : exprℂ) : sin z = sin z.re * cosh z.im + cos z.re * sinh z.im * I := by\n  convert sin_add_mul_I z.re z.im <;> exact (re_add_im z).symm\n#align sin_eq sin_eq\n\n",
 "sin_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem sin_conj : sin ((star_ring_end) x) = (star_ring_end) (sin x) := by\n  rw [← mul_left_inj' I_ne_zero, ← sinh_mul_I, ← conj_neg_I, ← RingHom.map_mul, ← RingHom.map_mul, sinh_conj, mul_neg,\n    sinh_neg, sinh_mul_I, mul_neg]\n#align sin_conj sin_conj\n\n",
 "sin_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem sin_bound {x : exprℝ} (hx : |x| ≤ 1) : |sin x - (x - x ^ 3 / 6)| ≤ |x| ^ 4 * (5 / 96) :=\n  calc\n    |sin x - (x - x ^ 3 / 6)| = abs (complex.sin x - (x - x ^ 3 / 6)) := by\n      rw [← abs_of_real] <;> simp [of_real_bit0, of_real_one, of_real_inv]\n    _ = abs (((complex.exp (-x * I) - complex.exp (x * I)) * I - (2 * x - x ^ 3 / 3)) / 2) := by\n      simp [complex.sin, sub_div, add_div, neg_div, mul_div_cancel_left _ (two_ne_zero' (exprℂ)), div_div,\n        show (3 : exprℂ) * 2 = 6 by norm_num]\n    _ =\n        abs\n          ((complex.exp (-x * I) -\n                  finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                    (range 4) ((-x * I) ^ m / nat.factorial m) -\n                (complex.exp (x * I) -\n                  finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                    (range 4) ((x * I) ^ m / nat.factorial m))) *\n              I /\n            2) :=\n      congr_arg abs\n        (congr_arg (fun x : exprℂ => x / 2)\n          (by\n            simp only [sum_range_succ]\n            simp [pow_succ]\n            apply complex.ext <;> simp [div_eq_mul_inv, norm_sq] <;> ring))\n    _ ≤\n        abs\n            ((complex.exp (-x * I) -\n                  finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                    (range 4) ((-x * I) ^ m / nat.factorial m)) *\n                I /\n              2) +\n          abs\n            (-((complex.exp (x * I) -\n                    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                      (range 4) ((x * I) ^ m / nat.factorial m)) *\n                  I) /\n              2) :=\n      by rw [sub_mul, sub_eq_add_neg, add_div] <;> exact complex.abs.add_le _ _\n    _ =\n        abs\n              (complex.exp (x * I) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range 4) ((x * I) ^ m / nat.factorial m)) /\n            2 +\n          abs\n              (complex.exp (-x * I) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range 4) ((-x * I) ^ m / nat.factorial m)) /\n            2 :=\n      by simp [add_comm, map_div₀]\n    _ ≤\n        complex.abs (x * I) ^ 4 * (nat.succ 4 * (nat.factorial 4 * (4 : ℕ))⁻¹) / 2 +\n          complex.abs (-x * I) ^ 4 * (nat.succ 4 * (nat.factorial 4 * (4 : ℕ))⁻¹) / 2 :=\n      add_le_add ((div_le_div_right (by norm_num)).2 (complex.exp_bound (by simpa) (by decide)))\n        ((div_le_div_right (by norm_num)).2 (complex.exp_bound (by simpa) (by decide)))\n    _ ≤ |x| ^ 4 * (5 / 96) := by norm_num <;> simp [mul_assoc, mul_comm, mul_left_comm, mul_div_assoc]\n    \n#align sin_bound sin_bound\n\n",
 "sin_add_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem sin_add_mul_I (x y : exprℂ) : sin (x + y * I) = sin x * cosh y + cos x * sinh y * I := by\n  rw [sin_add, cos_mul_I, sin_mul_I, mul_assoc]\n#align sin_add_mul_I sin_add_mul_I\n\n",
 "sin_add":
 "theorem sin_add : sin (x + y) = sin x * cos y + cos x * sin y := by rw [← of_real_inj] <;> simp [sin, sin_add]\n#align sin_add sin_add\n\n",
 "series_ratio_test":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem series_ratio_test {f : ℕ → β} (n : ℕ) (r : α) (hr0 : 0 ≤ r) (hr1 : r < 1)\n    (h : ∀ m, n ≤ m → abv (f m.succ) ≤ r * abv (f m)) :\n    IsCauSeq abv fun m =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range m) (f n) :=\n  by\n  have har1 : |r| < 1 := by rwa [abs_of_nonneg hr0]\n  refine' is_cau_series_of_abv_le_cau n.succ _ (is_cau_geo_series_const (abv (f n.succ) * r⁻¹ ^ n.succ) har1)\n  intro m hmn\n  cases' classical.em (r = 0) with r_zero r_ne_zero\n  · have m_pos := lt_of_lt_of_le (nat.succ_pos n) hmn\n    have := h m.pred (nat.le_of_succ_le_succ (by rwa [nat.succ_pred_eq_of_pos m_pos]))\n    simpa [r_zero, nat.succ_pred_eq_of_pos m_pos, pow_succ]\n  generalize hk : m - n.succ = k\n  have r_pos : 0 < r := lt_of_le_of_ne hr0 (ne.symm r_ne_zero)\n  replace hk : m = k + n.succ := (tsub_eq_iff_eq_add_of_le hmn).1 hk\n  induction' k with k ih generalizing m n\n  · rw [hk, zero_add, mul_right_comm, inv_pow _ _, ← div_eq_mul_inv, mul_div_cancel]\n    exact (ne_of_lt (pow_pos r_pos _)).symm\n  · have kn : k + n.succ ≥ n.succ := by rw [← zero_add n.succ] <;> exact add_le_add (zero_le _) (by simp)\n    rw [hk, nat.succ_add, pow_succ' r, ← mul_assoc]\n    exact\n      le_trans (by rw [mul_comm] <;> exact h _ (nat.le_of_succ_le kn))\n        (mul_le_mul_of_nonneg_right (ih (k + n.succ) n h kn rfl) hr0)\n#align series_ratio_test series_ratio_test\n\n",
 "one_sub_le_exp_minus_of_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem one_sub_le_exp_minus_of_pos {y : exprℝ} (h : 0 ≤ y) : 1 - y ≤ real.exp (-y) :=\n  by\n  rw [real.exp_neg]\n  have r1 : (1 - y) * real.exp y ≤ 1 := by\n    cases le_or_lt (1 - y) 0\n    · have h'' : (1 - y) * y.exp ≤ 0 := by\n        rw [mul_nonpos_iff]\n        right\n        exact ⟨h_1, y.exp_pos.le⟩\n      linarith\n    have hy1 : y < 1 := by linarith\n    rw [← le_div_iff' h_1]\n    exact exp_bound_div_one_sub_of_interval h hy1\n  rw [inv_eq_one_div]\n  rw [le_div_iff' y.exp_pos]\n  rwa [mul_comm] at r1\n#align one_sub_le_exp_minus_of_pos one_sub_le_exp_minus_of_pos\n\n",
 "one_lt_exp_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem one_lt_exp_iff {x : exprℝ} : 1 < exp x ↔ 0 < x := by rw [← exp_zero, exp_lt_exp]\n#align one_lt_exp_iff one_lt_exp_iff\n\n",
 "one_le_exp_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem one_le_exp_iff {x : exprℝ} : 1 ≤ exp x ↔ 0 ≤ x :=\n  exp_zero ▸ exp_le_exp\n#align one_le_exp_iff one_le_exp_iff\n\n",
 "one_le_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem one_le_exp {x : exprℝ} (hx : 0 ≤ x) : 1 ≤ exp x := by linarith [add_one_le_exp_of_nonneg hx]\n#align one_le_exp one_le_exp\n\n",
 "of_real_tanh_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem of_real_tanh_of_real_re (x : exprℝ) : ((tanh x).re : exprℂ) = tanh x :=\n  eq_conj_iff_re.1 <| by rw [← tanh_conj, conj_of_real]\n#align of_real_tanh_of_real_re of_real_tanh_of_real_re\n\n",
 "of_real_tanh":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_tanh (x : exprℝ) : (real.tanh x : exprℂ) = tanh x :=\n  of_real_tanh_of_real_re _\n#align of_real_tanh of_real_tanh\n\n",
 "of_real_tan_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem of_real_tan_of_real_re (x : exprℝ) : ((tan x).re : exprℂ) = tan x :=\n  eq_conj_iff_re.1 <| by rw [← tan_conj, conj_of_real]\n#align of_real_tan_of_real_re of_real_tan_of_real_re\n\n",
 "of_real_tan":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_tan (x : exprℝ) : (real.tan x : exprℂ) = tan x :=\n  of_real_tan_of_real_re _\n#align of_real_tan of_real_tan\n\n",
 "of_real_sinh_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem of_real_sinh_of_real_re (x : exprℝ) : ((sinh x).re : exprℂ) = sinh x :=\n  eq_conj_iff_re.1 <| by rw [← sinh_conj, conj_of_real]\n#align of_real_sinh_of_real_re of_real_sinh_of_real_re\n\n",
 "of_real_sinh":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_sinh (x : exprℝ) : (real.sinh x : exprℂ) = sinh x :=\n  of_real_sinh_of_real_re _\n#align of_real_sinh of_real_sinh\n\n",
 "of_real_sin_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem of_real_sin_of_real_re (x : exprℝ) : ((sin x).re : exprℂ) = sin x :=\n  eq_conj_iff_re.1 <| by rw [← sin_conj, conj_of_real]\n#align of_real_sin_of_real_re of_real_sin_of_real_re\n\n",
 "of_real_sin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_sin (x : exprℝ) : (real.sin x : exprℂ) = sin x :=\n  of_real_sin_of_real_re _\n#align of_real_sin of_real_sin\n\n",
 "of_real_exp_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem of_real_exp_of_real_re (x : exprℝ) : ((exp x).re : exprℂ) = exp x :=\n  eq_conj_iff_re.1 <| by rw [← exp_conj, conj_of_real]\n#align of_real_exp_of_real_re of_real_exp_of_real_re\n\n",
 "of_real_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_exp (x : exprℝ) : (real.exp x : exprℂ) = exp x :=\n  of_real_exp_of_real_re _\n#align of_real_exp of_real_exp\n\n",
 "of_real_cosh_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem of_real_cosh_of_real_re (x : exprℝ) : ((cosh x).re : exprℂ) = cosh x :=\n  eq_conj_iff_re.1 <| by rw [← cosh_conj, conj_of_real]\n#align of_real_cosh_of_real_re of_real_cosh_of_real_re\n\n",
 "of_real_cosh":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_cosh (x : exprℝ) : (real.cosh x : exprℂ) = cosh x :=\n  of_real_cosh_of_real_re _\n#align of_real_cosh of_real_cosh\n\n",
 "of_real_cos_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem of_real_cos_of_real_re (x : exprℝ) : ((cos x).re : exprℂ) = cos x :=\n  eq_conj_iff_re.1 <| by rw [← cos_conj, conj_of_real]\n#align of_real_cos_of_real_re of_real_cos_of_real_re\n\n",
 "of_real_cos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp, norm_cast]\ntheorem of_real_cos (x : exprℝ) : (real.cos x : exprℂ) = cos x :=\n  of_real_cos_of_real_re _\n#align of_real_cos of_real_cos\n\n",
 "neg_one_le_sin":
 "theorem neg_one_le_sin : -1 ≤ sin x :=\n  (abs_le.1 (abs_sin_le_one _)).1\n#align neg_one_le_sin neg_one_le_sin\n\n",
 "neg_one_le_cos":
 "theorem neg_one_le_cos : -1 ≤ cos x :=\n  (abs_le.1 (abs_cos_le_one _)).1\n#align neg_one_le_cos neg_one_le_cos\n\n",
 "is_cau_series_of_abv_le_cau":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem is_cau_series_of_abv_le_cau {f : ℕ → β} {g : ℕ → α} (n : ℕ) :\n    (∀ m, n ≤ m → abv (f m) ≤ g m) →\n      (IsCauSeq abs fun n =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n            (g i)) →\n        IsCauSeq abv fun n =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n            (f i) :=\n  by\n  intro hm hg ε ε0\n  cases' hg (ε / 2) (div_pos ε0 (by norm_num)) with i hi\n  exists max n i\n  intro j ji\n  have hi₁ := hi j (le_trans (le_max_right n i) ji)\n  have hi₂ := hi (max n i) (le_max_right n i)\n  have sub_le :=\n    abs_sub_le\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range j) (g k))\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range i) (g k))\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (max n i))\n        (g k))\n  have := add_lt_add hi₁ hi₂\n  rw [abs_sub_comm\n      (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range (max n i))\n        (g k)),\n    add_halves ε] at this\n  refine' lt_of_le_of_lt (le_trans (le_trans _ (le_abs_self _)) sub_le) this\n  generalize hk : j - max n i = k\n  clear this hi₂ hi₁ hi ε0 ε hg sub_le\n  rw [tsub_eq_iff_eq_add_of_le ji] at hk\n  rw [hk]\n  clear hk ji j\n  induction' k with k' hi\n  · simp [abv_zero abv]\n  · simp only [nat.succ_add, sum_range_succ_comm, sub_eq_add_neg, add_assoc]\n    refine' le_trans (abv_add _ _ _) _\n    simp only [sub_eq_add_neg] at hi\n    exact add_le_add (hm _ (le_add_of_nonneg_of_le (nat.zero_le _) (le_max_left _ _))) hi\n#align is_cau_series_of_abv_le_cau is_cau_series_of_abv_le_cau\n\n",
 "is_cau_series_of_abv_cau":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem is_cau_series_of_abv_cau {f : ℕ → β} :\n    (IsCauSeq abs fun m =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range m)\n          (abv (f n))) →\n      IsCauSeq abv fun m =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range m)\n          (f n) :=\n  is_cau_series_of_abv_le_cau 0 fun n h => le_rfl\n#align is_cau_series_of_abv_cau is_cau_series_of_abv_cau\n\n",
 "is_cau_of_mono_bounded":
 "theorem is_cau_of_mono_bounded (f : ℕ → α) {a : α} {m : ℕ} (ham : ∀ n ≥ m, |f n| ≤ a) (hnm : ∀ n ≥ m, f n ≤ f n.succ) :\n    IsCauSeq abs f :=\n  by\n  refine'\n    @eq.rec_on (ℕ → α) _ (IsCauSeq abs) _ _\n      (-⟨_, @is_cau_of_decreasing_bounded _ _ _ (fun n => -f n) a m (by simpa) (by simpa)⟩ : CauSeq α abs).2\n  ext\n  exact neg_neg _\n#align is_cau_of_mono_bounded is_cau_of_mono_bounded\n\n",
 "is_cau_of_decreasing_bounded":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-\nCopyright (c) 2018 Chris Hughes. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Chris Hughes, Abhimanyu Pallavi Sudhir\n-/\ntheorem is_cau_of_decreasing_bounded (f : ℕ → α) {a : α} {m : ℕ} (ham : ∀ n ≥ m, |f n| ≤ a)\n    (hnm : ∀ n ≥ m, f n.succ ≤ f n) : IsCauSeq abs f := fun ε ε0 =>\n  by\n  let ⟨k, hk⟩ := archimedean.arch a ε0\n  have h : ∃ l, ∀ n ≥ m, a - «expr • » l ε < f n :=\n    ⟨k + k + 1, fun n hnm =>\n      lt_of_lt_of_le\n        (show a - «expr • » (k + (k + 1)) ε < -|f n| from\n          lt_neg.1 <|\n            lt_of_le_of_lt (ham n hnm)\n              (by\n                rw [neg_sub, lt_sub_iff_add_lt, add_nsmul, add_nsmul, one_nsmul]\n                exact add_lt_add_of_le_of_lt hk (lt_of_le_of_lt hk (lt_add_of_pos_right _ ε0))))\n        (neg_le.2 <| abs_neg (f n) ▸ le_abs_self _)⟩\n  let l := nat.find h\n  have hl : ∀ n : ℕ, n ≥ m → f n > a - «expr • » l ε := nat.find_spec h\n  have hl0 : l ≠ 0 := fun hl0 =>\n    not_lt_of_ge (ham m le_rfl)\n      (lt_of_lt_of_le (by have := hl m (le_refl m) <;> simpa [hl0] using this) (le_abs_self (f m)))\n  cases' not_forall.1 (nat.find_min h (nat.pred_lt hl0)) with i hi\n  rw [not_imp, not_lt] at hi\n  exists i\n  intro j hj\n  have hfij : f j ≤ f i := (Nat.rel_of_forall_rel_succ_of_le_of_le (· ≥ ·) hnm hi.1 hj).le\n  rw [abs_of_nonpos (sub_nonpos.2 hfij), neg_sub, sub_lt_iff_lt_add']\n  calc\n    f i ≤ a - «expr • » (nat.pred l) ε := hi.2\n    _ = a - «expr • » l ε + ε := by\n      conv =>\n        rhs\n        rw [← nat.succ_pred_eq_of_pos (nat.pos_of_ne_zero hl0), succ_nsmul', sub_add, add_sub_cancel]\n    _ < f j + ε := add_lt_add_right (hl j (le_trans hi.1 hj)) _\n    \n#align is_cau_of_decreasing_bounded is_cau_of_decreasing_bounded\n\n",
 "is_cau_geo_series_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem is_cau_geo_series_const (a : α) {x : α} (hx1 : |x| < 1) :\n    IsCauSeq abs fun m =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range m)\n        (a * x ^ n) :=\n  by\n  have :\n    IsCauSeq abs fun m =>\n      a *\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range m)\n          (x ^ n) :=\n    (CauSeq.const abs a * ⟨_, is_cau_geo_series x hx1⟩).2\n  simpa only [mul_sum]\n#align is_cau_geo_series_const is_cau_geo_series_const\n\n",
 "is_cau_geo_series":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem is_cau_geo_series {β : Type _} [Ring β] [nontrivial β] {abv : β → α} [IsAbsoluteValue abv] (x : β)\n    (hx1 : abv x < 1) :\n    IsCauSeq abv fun n =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n        (x ^ m) :=\n  have hx1' : abv x ≠ 1 := fun h => by simpa [h, lt_irrefl] using hx1\n  is_cau_series_of_abv_cau\n    (by\n      simp only [abv_pow abv, geom_sum_eq hx1']\n      conv in _ / _ => rw [← neg_div_neg_eq, neg_sub, neg_sub]\n      refine' @is_cau_of_mono_bounded _ _ _ _ ((1 : α) / (1 - abv x)) 0 _ _\n      · intro n hn\n        rw [abs_of_nonneg]\n        refine' div_le_div_of_le (le_of_lt <| sub_pos.2 hx1) (sub_le_self _ (abv_pow abv x n ▸ abv_nonneg _ _))\n        refine' div_nonneg (sub_nonneg.2 _) (sub_nonneg.2 <| le_of_lt hx1)\n        clear hn\n        induction' n with n ih\n        · simp\n        · rw [pow_succ, ← one_mul (1 : α)]\n          refine' mul_le_mul (le_of_lt hx1) ih (abv_pow abv x n ▸ abv_nonneg _ _) (by norm_num)\n      · intro n hn\n        refine' div_le_div_of_le (le_of_lt <| sub_pos.2 hx1) (sub_le_sub_left _ _)\n        rw [← one_mul (_ ^ n), pow_succ]\n        exact mul_le_mul_of_nonneg_right (le_of_lt hx1) (pow_nonneg (abv_nonneg _ _) _))\n#align is_cau_geo_series is_cau_geo_series\n\n",
 "is_cau_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem is_cau_exp (z : exprℂ) :\n    IsCauSeq abs fun n =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n        (z ^ m / nat.factorial m) :=\n  is_cau_series_of_abv_cau (is_cau_abs_exp z)\n#align is_cau_exp is_cau_exp\n\n",
 "is_cau_abs_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem is_cau_abs_exp (z : exprℂ) :\n    IsCauSeq has_abs.abs fun n =>\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n        (abs (z ^ m / nat.factorial m)) :=\n  let ⟨n, hn⟩ := exists_nat_gt (abs z)\n  have hn0 : (0 : exprℝ) < n := lt_of_le_of_lt (abs.nonneg _) hn\n  series_ratio_test n (complex.abs z / n) (div_nonneg (abs.nonneg _) (le_of_lt hn0)) (by rwa [div_lt_iff hn0, one_mul])\n    fun m hm => by\n    rw [abs_abs, abs_abs, Nat.factorial_succ, pow_succ, mul_comm m.succ, nat.cast_mul, ← div_div, mul_div_assoc,\n        mul_div_right_comm, abs.map_mul, map_div₀, abs_cast_nat] <;>\n      exact\n        mul_le_mul_of_nonneg_right\n          (div_le_div_of_le_left (abs.nonneg _) hn0 (nat.cast_le.2 (le_trans hm (nat.le_succ _)))) (abs.nonneg _)\n#align is_cau_abs_exp is_cau_abs_exp\n\n",
 "inv_sqrt_one_add_tan_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem inv_sqrt_one_add_tan_sq {x : exprℝ} (hx : 0 < cos x) : (sqrt (1 + tan x ^ 2))⁻¹ = cos x := by\n  rw [← sqrt_sq hx.le, ← sqrt_inv, inv_one_add_tan_sq hx.ne']\n#align inv_sqrt_one_add_tan_sq inv_sqrt_one_add_tan_sq\n\n",
 "inv_one_add_tan_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem inv_one_add_tan_sq {x : exprℝ} (hx : cos x ≠ 0) : (1 + tan x ^ 2)⁻¹ = cos x ^ 2 :=\n  have : complex.cos x ≠ 0 := mt (congr_arg re) hx\n  of_real_inj.1 <| by simpa using complex.inv_one_add_tan_sq this\n#align inv_one_add_tan_sq inv_one_add_tan_sq\n\n",
 "exp_zero":
 "@[simp]\ntheorem exp_zero : exp 0 = 1 := by simp [real.exp]\n#align exp_zero exp_zero\n\n",
 "exp_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.prod -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod -/\ntheorem exp_sum {α : Type _} (s : Finset α) (f : α → exprℝ) :\n    exp (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f x)) =\n      finset.prod \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.prod\" s (exp (f x)) :=\n  @monoid_hom.map_prod (Multiplicative (exprℝ)) α (exprℝ) _ _ ⟨exp, exp_zero, exp_add⟩ f s\n#align exp_sum exp_sum\n\n",
 "exp_sub_sinh":
 "@[simp]\ntheorem exp_sub_sinh : exp x - sinh x = cosh x :=\n  sub_eq_iff_eq_add.2 (cosh_add_sinh x).symm\n#align exp_sub_sinh exp_sub_sinh\n\n",
 "exp_sub_cosh":
 "@[simp]\ntheorem exp_sub_cosh : exp x - cosh x = sinh x :=\n  sub_eq_iff_eq_add.2 (sinh_add_cosh x).symm\n#align exp_sub_cosh exp_sub_cosh\n\n",
 "exp_sub":
 "theorem exp_sub : exp (x - y) = exp x / exp y := by simp [sub_eq_add_neg, exp_add, exp_neg, div_eq_mul_inv]\n#align exp_sub exp_sub\n\n",
 "exp_strict_mono":
 "@[mono]\ntheorem exp_strict_mono : strict_mono exp := fun x y h => by\n  rw [← sub_add_cancel y x, real.exp_add] <;>\n    exact (lt_mul_iff_one_lt_left (exp_pos _)).2 (lt_of_lt_of_le (by linarith) (add_one_le_exp_of_nonneg (by linarith)))\n#align exp_strict_mono exp_strict_mono\n\n",
 "exp_re":
 "theorem exp_re : (exp x).re = real.exp x.re * real.cos x.im :=\n  by\n  rw [exp_eq_exp_re_mul_sin_add_cos]\n  simp [exp_of_real_re, cos_of_real_re]\n#align exp_re exp_re\n\n",
 "exp_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem exp_pos (x : exprℝ) : 0 < exp x :=\n  (le_total 0 x).elim (lt_of_lt_of_le zero_lt_one ∘ one_le_exp) fun h => by\n    rw [← neg_neg x, real.exp_neg] <;> exact inv_pos.2 (lt_of_lt_of_le zero_lt_one (one_le_exp (neg_nonneg.2 h)))\n#align exp_pos exp_pos\n\n",
 "exp_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem exp_of_real_re (x : exprℝ) : (exp x).re = real.exp x :=\n  rfl\n#align exp_of_real_re exp_of_real_re\n\n",
 "exp_of_real_mul_I_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_of_real_mul_I_re (x : exprℝ) : (exp (x * I)).re = real.cos x := by simp [exp_mul_I, cos_of_real_re]\n#align exp_of_real_mul_I_re exp_of_real_mul_I_re\n\n",
 "exp_of_real_mul_I_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_of_real_mul_I_im (x : exprℝ) : (exp (x * I)).im = real.sin x := by simp [exp_mul_I, sin_of_real_re]\n#align exp_of_real_mul_I_im exp_of_real_mul_I_im\n\n",
 "exp_of_real_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_of_real_im (x : exprℝ) : (exp x).im = 0 := by rw [← of_real_exp_of_real_re, of_real_im]\n#align exp_of_real_im exp_of_real_im\n\n",
 "exp_neg":
 "theorem exp_neg : exp (-x) = (exp x)⁻¹ := by\n  rw [← of_real_inj, exp, of_real_exp_of_real_re, of_real_neg, exp_neg, of_real_inv, of_real_exp]\n#align exp_neg exp_neg\n\n",
 "exp_near_zero":
 "@[simp]\ntheorem exp_near_zero (x r) : exp_near 0 x r = r := by simp [exp_near]\n#align exp_near_zero exp_near_zero\n\n",
 "exp_near_succ":
 "@[simp]\ntheorem exp_near_succ (n x r) : exp_near (n + 1) x r = exp_near n x (1 + x / (n + 1) * r) := by\n  simp [exp_near, range_succ, mul_add, add_left_comm, add_assoc, pow_succ, div_eq_mul_inv, mul_inv] <;> ac_rfl\n#align exp_near_succ exp_near_succ\n\n",
 "exp_near_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem exp_near_sub (n x r₁ r₂) : exp_near n x r₁ - exp_near n x r₂ = x ^ n / nat.factorial n * (r₁ - r₂) := by\n  simp [exp_near, mul_sub]\n#align exp_near_sub exp_near_sub\n\n",
 "exp_ne_zero":
 "theorem exp_ne_zero : exp x ≠ 0 := fun h => exp_ne_zero x <| by rw [exp, ← of_real_inj] at h <;> simp_all\n#align exp_ne_zero exp_ne_zero\n\n",
 "exp_nat_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem exp_nat_mul (x : exprℝ) : ∀ n : ℕ, exp (n * x) = exp x ^ n\n  | 0 => by rw [Nat.cast_zero, zero_mul, exp_zero, pow_zero]\n  | nat.succ n => by rw [pow_succ', Nat.cast_add_one, add_mul, exp_add, ← exp_nat_mul, one_mul]\n#align exp_nat_mul exp_nat_mul\n\n",
 "exp_multiset_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem exp_multiset_sum (s : Multiset (exprℝ)) : exp s.sum = (s.map exp).prod :=\n  @MonoidHom.map_multiset_prod (Multiplicative (exprℝ)) (exprℝ) _ _ ⟨exp, exp_zero, exp_add⟩ s\n#align exp_multiset_sum exp_multiset_sum\n\n",
 "exp_mul_I":
 "theorem exp_mul_I : exp (x * I) = cos x + sin x * I :=\n  (cos_add_sin_I _).symm\n#align exp_mul_I exp_mul_I\n\n",
 "exp_monotone":
 "@[mono]\ntheorem exp_monotone : monotone exp :=\n  exp_strict_mono.monotone\n#align exp_monotone exp_monotone\n\n",
 "exp_lt_one_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_lt_one_iff {x : exprℝ} : exp x < 1 ↔ x < 0 := by rw [← exp_zero, exp_lt_exp]\n#align exp_lt_one_iff exp_lt_one_iff\n\n",
 "exp_lt_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_lt_exp {x y : exprℝ} : exp x < exp y ↔ x < y :=\n  exp_strict_mono.lt_iff_lt\n#align exp_lt_exp exp_lt_exp\n\n",
 "exp_list_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem exp_list_sum (l : list (exprℝ)) : exp l.sum = (l.map exp).prod :=\n  @MonoidHom.map_list_prod (Multiplicative (exprℝ)) (exprℝ) _ _ ⟨exp, exp_zero, exp_add⟩ l\n#align exp_list_sum exp_list_sum\n\n",
 "exp_le_one_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_le_one_iff {x : exprℝ} : exp x ≤ 1 ↔ x ≤ 0 :=\n  exp_zero ▸ exp_le_exp\n#align exp_le_one_iff exp_le_one_iff\n\n",
 "exp_le_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_le_exp {x y : exprℝ} : exp x ≤ exp y ↔ x ≤ y :=\n  exp_strict_mono.le_iff_le\n#align exp_le_exp exp_le_exp\n\n",
 "exp_int_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem exp_int_mul (z : exprℂ) (n : ℤ) : complex.exp (n * z) = complex.exp z ^ n :=\n  by\n  cases n\n  · apply complex.exp_nat_mul\n  · simpa [complex.exp_neg, add_comm, ← neg_mul] using complex.exp_nat_mul (-z) (1 + n)\n#align exp_int_mul exp_int_mul\n\n",
 "exp_injective":
 "theorem exp_injective : function.injective exp :=\n  exp_strict_mono.injective\n#align exp_injective exp_injective\n\n",
 "exp_im":
 "theorem exp_im : (exp x).im = real.exp x.re * real.sin x.im :=\n  by\n  rw [exp_eq_exp_re_mul_sin_add_cos]\n  simp [exp_of_real_re, sin_of_real_re]\n#align exp_im exp_im\n\n",
 "exp_eq_one_iff":
 "@[simp]\ntheorem exp_eq_one_iff : exp x = 1 ↔ x = 0 :=\n  exp_injective.eq_iff' exp_zero\n#align exp_eq_one_iff exp_eq_one_iff\n\n",
 "exp_eq_exp_re_mul_sin_add_cos":
 "theorem exp_eq_exp_re_mul_sin_add_cos : exp x = exp x.re * (cos x.im + sin x.im * I) := by\n  rw [← exp_add_mul_I, re_add_im]\n#align exp_eq_exp_re_mul_sin_add_cos exp_eq_exp_re_mul_sin_add_cos\n\n",
 "exp_eq_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem exp_eq_exp {x y : exprℝ} : exp x = exp y ↔ x = y :=\n  exp_injective.eq_iff\n#align exp_eq_exp exp_eq_exp\n\n",
 "exp_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n@[simp]\ntheorem exp_conj : exp ((star_ring_end) x) = (star_ring_end) (exp x) :=\n  by\n  dsimp [exp]\n  rw [← lim_conj]\n  refine' congr_arg lim (CauSeq.ext fun _ => _)\n  dsimp [exp', function.comp, cau_seq_conj]\n  rw [(starRingEnd _).map_sum]\n  refine' sum_congr rfl fun n hn => _\n  rw [map_div₀, map_pow, ← of_real_nat_cast, conj_of_real]\n#align exp_conj exp_conj\n\n",
 "exp_bound_div_one_sub_of_interval_approx":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem exp_bound_div_one_sub_of_interval_approx {x : exprℝ} (h1 : 0 ≤ x) (h2 : x ≤ 1) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range 3)\n          (x ^ j / j.factorial) +\n        x ^ 3 * ((3 : ℕ) + 1) / ((3 : ℕ).factorial * (3 : ℕ)) ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range 3)\n        (x ^ j) :=\n  by\n  norm_num [finset.sum]\n  rw [add_assoc, add_comm (x + 1) (x ^ 3 * 4 / 18), ← add_assoc, add_le_add_iff_right, ←\n    add_le_add_iff_left (-(x ^ 2 / 2)), ← add_assoc, comm_ring.add_left_neg (x ^ 2 / 2), zero_add, neg_add_eq_sub,\n    sub_half, sq, pow_succ, sq]\n  have i1 : x * 4 / 18 ≤ 1 / 2 := by linarith\n  have i2 : 0 ≤ x * 4 / 18 := by linarith\n  have i3 := mul_le_mul h1 h1 le_rfl h1\n  rw [zero_mul] at i3\n  have t := mul_le_mul le_rfl i1 i2 i3\n  rw [← mul_assoc]\n  rwa [mul_one_div, ← mul_div_assoc, ← mul_assoc] at t\n#align exp_bound_div_one_sub_of_interval_approx exp_bound_div_one_sub_of_interval_approx\n\n",
 "exp_bound_div_one_sub_of_interval":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem exp_bound_div_one_sub_of_interval {x : exprℝ} (h1 : 0 ≤ x) (h2 : x < 1) : real.exp x ≤ 1 / (1 - x) :=\n  haveI h :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range 3)\n        (x ^ j) ≤\n      1 / (1 - x) :=\n    by\n    norm_num [finset.sum]\n    have h1x : 0 < 1 - x := by simpa\n    rw [le_div_iff h1x]\n    norm_num [← add_assoc, mul_sub_left_distrib, mul_one, add_mul, sub_add_eq_sub_sub, pow_succ' x 2]\n    have hx3 : 0 ≤ x ^ 3 := by\n      norm_num\n      exact h1\n    linarith\n  (exp_bound' h1 h2.le <| by linarith).trans ((exp_bound_div_one_sub_of_interval_approx h1 h2.le).trans h)\n#align exp_bound_div_one_sub_of_interval exp_bound_div_one_sub_of_interval\n\n",
 "exp_bound'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem exp_bound' {x : exprℝ} (h1 : 0 ≤ x) (h2 : x ≤ 1) {n : ℕ} (hn : 0 < n) :\n    real.exp x ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (Finset.range n)\n          (x ^ m / nat.factorial m) +\n        x ^ n * (n + 1) / (nat.factorial n * n) :=\n  by\n  have h3 : |x| = x := by simpa\n  have h4 : |x| ≤ 1 := by rwa [h3]\n  have h' := real.exp_bound h4 hn\n  rw [h3] at h'\n  have h'' := (abs_sub_le_iff.1 h').1\n  have t := sub_le_iff_le_add'.1 h''\n  simpa [mul_div_assoc] using t\n#align exp_bound' exp_bound'\n\n",
 "exp_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem exp_bound {x : exprℝ} (hx : |x| ≤ 1) {n : ℕ} (hn : 0 < n) :\n    |exp x -\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range n)\n            (x ^ m / nat.factorial m)| ≤\n      |x| ^ n * (n.succ / (nat.factorial n * n)) :=\n  by\n  have hxc : complex.abs x ≤ 1 := by exact_mod_cast hx\n  convert exp_bound hxc hn <;> norm_cast\n#align exp_bound exp_bound\n\n",
 "exp_approx_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem exp_approx_succ {n} {x a₁ b₁ : exprℝ} (m : ℕ) (e₁ : n + 1 = m) (a₂ b₂ : exprℝ)\n    (e : |1 + x / m * a₂ - a₁| ≤ b₁ - |x| / m * b₂) (h : |exp x - exp_near m x a₂| ≤ |x| ^ m / nat.factorial m * b₂) :\n    |exp x - exp_near n x a₁| ≤ |x| ^ n / nat.factorial n * b₁ :=\n  by\n  refine' (_root_.abs_sub_le _ _ _).trans ((add_le_add_right h _).trans _)\n  subst e₁; rw [exp_near_succ, exp_near_sub, _root_.abs_mul]\n  convert mul_le_mul_of_nonneg_left (le_sub_iff_add_le'.1 e) _\n  · simp [mul_add, pow_succ', div_eq_mul_inv, _root_.abs_mul, _root_.abs_inv, ← pow_abs, mul_inv]\n    ac_rfl\n  · simp [_root_.div_nonneg, _root_.abs_nonneg]\n#align exp_approx_succ exp_approx_succ\n\n",
 "exp_approx_start":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem exp_approx_start (x a b : exprℝ) (h : |exp x - exp_near 0 x a| ≤ |x| ^ 0 / nat.factorial 0 * b) :\n    |exp x - a| ≤ b := by simpa using h\n#align exp_approx_start exp_approx_start\n\n",
 "exp_approx_end'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem exp_approx_end' {n} {x a b : exprℝ} (m : ℕ) (e₁ : n + 1 = m) (rm : exprℝ) (er : ↑m = rm) (h : |x| ≤ 1)\n    (e : |1 - a| ≤ b - |x| / rm * ((rm + 1) / rm)) : |exp x - exp_near n x a| ≤ |x| ^ n / nat.factorial n * b := by\n  subst er <;> exact exp_approx_succ _ e₁ _ _ (by simpa using e) (exp_approx_end _ _ _ e₁ h)\n#align exp_approx_end' exp_approx_end'\n\n",
 "exp_approx_end":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem exp_approx_end (n m : ℕ) (x : exprℝ) (e₁ : n + 1 = m) (h : |x| ≤ 1) :\n    |exp x - exp_near m x 0| ≤ |x| ^ m / nat.factorial m * ((m + 1) / m) :=\n  by\n  simp [exp_near]\n  convert exp_bound h _ using 1\n  field_simp [mul_comm]\n  linarith\n#align exp_approx_end exp_approx_end\n\n",
 "exp_add_mul_I":
 "theorem exp_add_mul_I : exp (x + y * I) = exp x * (cos y + sin y * I) := by rw [exp_add, exp_mul_I]\n#align exp_add_mul_I exp_add_mul_I\n\n",
 "exp_add":
 "theorem exp_add : exp (x + y) = exp x * exp y := by simp [exp_add, exp]\n#align exp_add exp_add\n\n",
 "exp_1_approx_succ_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem exp_1_approx_succ_eq {n} {a₁ b₁ : exprℝ} {m : ℕ} (en : n + 1 = m) {rm : exprℝ} (er : ↑m = rm)\n    (h : |exp 1 - exp_near m 1 ((a₁ - 1) * rm)| ≤ |1| ^ m / nat.factorial m * (b₁ * rm)) :\n    |exp 1 - exp_near n 1 a₁| ≤ |1| ^ n / nat.factorial n * b₁ :=\n  by\n  subst er\n  refine' exp_approx_succ _ en _ _ _ h\n  field_simp [show (m : exprℝ) ≠ 0 by norm_cast <;> linarith]\n#align exp_1_approx_succ_eq exp_1_approx_succ_eq\n\n",
 "cosh_zero":
 "@[simp]\ntheorem cosh_zero : cosh 0 = 1 := by simp [cosh]\n#align cosh_zero cosh_zero\n\n",
 "cosh_two_mul":
 "theorem cosh_two_mul : cosh (2 * x) = cosh x ^ 2 + sinh x ^ 2 := by rw [← of_real_inj] <;> simp [cosh_two_mul]\n#align cosh_two_mul cosh_two_mul\n\n",
 "cosh_three_mul":
 "theorem cosh_three_mul : cosh (3 * x) = 4 * cosh x ^ 3 - 3 * cosh x := by rw [← of_real_inj] <;> simp [cosh_three_mul]\n#align cosh_three_mul cosh_three_mul\n\n",
 "cosh_sub_sinh":
 "@[simp]\ntheorem cosh_sub_sinh : cosh x - sinh x = exp (-x) :=\n  by\n  rw [← of_real_inj]\n  simp\n#align cosh_sub_sinh cosh_sub_sinh\n\n",
 "cosh_sub":
 "theorem cosh_sub : cosh (x - y) = cosh x * cosh y - sinh x * sinh y := by\n  simp [sub_eq_add_neg, cosh_add, sinh_neg, cosh_neg]\n#align cosh_sub cosh_sub\n\n",
 "cosh_sq_sub_sinh_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem cosh_sq_sub_sinh_sq (x : exprℝ) : cosh x ^ 2 - sinh x ^ 2 = 1 := by rw [← of_real_inj] <;> simp\n#align cosh_sq_sub_sinh_sq cosh_sq_sub_sinh_sq\n\n",
 "cosh_sq'":
 "theorem cosh_sq' : cosh x ^ 2 = 1 + sinh x ^ 2 :=\n  (cosh_sq x).trans (add_comm _ _)\n#align cosh_sq' cosh_sq'\n\n",
 "cosh_sq":
 "theorem cosh_sq : cosh x ^ 2 = sinh x ^ 2 + 1 := by rw [← of_real_inj] <;> simp [cosh_sq]\n#align cosh_sq cosh_sq\n\n",
 "cosh_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- `real.cosh` is always positive -/\ntheorem cosh_pos (x : exprℝ) : 0 < real.cosh x :=\n  (cosh_eq x).symm ▸ half_pos (add_pos (exp_pos x) (exp_pos (-x)))\n#align cosh_pos cosh_pos\n\n",
 "cosh_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem cosh_of_real_re (x : exprℝ) : (cosh x).re = real.cosh x :=\n  rfl\n#align cosh_of_real_re cosh_of_real_re\n\n",
 "cosh_of_real_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem cosh_of_real_im (x : exprℝ) : (cosh x).im = 0 := by rw [← of_real_cosh_of_real_re, of_real_im]\n#align cosh_of_real_im cosh_of_real_im\n\n",
 "cosh_neg":
 "@[simp]\ntheorem cosh_neg : cosh (-x) = cosh x :=\n  of_real_inj.1 <| by simp\n#align cosh_neg cosh_neg\n\n",
 "cosh_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem cosh_mul_I : cosh (x * I) = cos x := by\n  rw [← mul_right_inj' (two_ne_zero' (exprℂ)), two_cosh, two_cos, neg_mul_eq_neg_mul]\n#align cosh_mul_I cosh_mul_I\n\n",
 "cosh_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- The definition of `cosh` in terms of `exp`. -/\ntheorem cosh_eq (x : exprℝ) : cosh x = (exp x + exp (-x)) / 2 :=\n  eq_div_of_mul_eq two_ne_zero <| by\n    rw [cosh, exp, exp, complex.of_real_neg, complex.cosh, mul_two, ← complex.add_re, ← mul_two,\n      div_mul_cancel _ (two_ne_zero' (exprℂ)), complex.add_re]\n#align cosh_eq cosh_eq\n\n",
 "cosh_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem cosh_conj : cosh ((star_ring_end) x) = (star_ring_end) (cosh x) := by\n  rw [cosh, ← RingHom.map_neg, exp_conj, exp_conj, ← RingHom.map_add, cosh, map_div₀, conj_bit0, RingHom.map_one]\n#align cosh_conj cosh_conj\n\n",
 "cosh_add_sinh":
 "@[simp]\ntheorem cosh_add_sinh : cosh x + sinh x = exp x := by rw [← of_real_inj] <;> simp\n#align cosh_add_sinh cosh_add_sinh\n\n",
 "cosh_add_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\nprivate theorem cosh_add_aux {a b c d : exprℂ} : (a + b) * (c + d) + (a - b) * (c - d) = 2 * (a * c + b * d) := by ring\n#align cosh_add_aux cosh_add_aux\n\n",
 "cosh_add":
 "theorem cosh_add : cosh (x + y) = cosh x * cosh y + sinh x * sinh y := by rw [← of_real_inj] <;> simp [cosh_add]\n#align cosh_add cosh_add\n\n",
 "cosh_abs":
 "@[simp]\ntheorem cosh_abs : cosh (|x|) = cosh x := by cases le_total x 0 <;> simp [*, _root_.abs_of_nonneg, abs_of_nonpos]\n#align cosh_abs cosh_abs\n\n",
 "cos_zero":
 "@[simp]\ntheorem cos_zero : cos 0 = 1 := by simp [cos]\n#align cos_zero cos_zero\n\n",
 "cos_two_neg":
 "theorem cos_two_neg : cos 2 < 0 :=\n  calc\n    cos 2 = cos (2 * 1) := congr_arg cos (mul_one _).symm\n    _ = _ := real.cos_two_mul 1\n    _ ≤ 2 * (2 / 3) ^ 2 - 1 :=\n      sub_le_sub_right\n        (mul_le_mul_of_nonneg_left\n          (by\n            rw [sq, sq]\n            exact mul_self_le_mul_self (le_of_lt cos_one_pos) cos_one_le)\n          zero_le_two)\n        _\n    _ < 0 := by norm_num\n    \n#align cos_two_neg cos_two_neg\n\n",
 "cos_two_mul'":
 "theorem cos_two_mul' : cos (2 * x) = cos x ^ 2 - sin x ^ 2 := by rw [← of_real_inj] <;> simp [cos_two_mul']\n#align cos_two_mul' cos_two_mul'\n\n",
 "cos_two_mul":
 "theorem cos_two_mul : cos (2 * x) = 2 * cos x ^ 2 - 1 := by rw [← of_real_inj] <;> simp [cos_two_mul]\n#align cos_two_mul cos_two_mul\n\n",
 "cos_three_mul":
 "theorem cos_three_mul : cos (3 * x) = 4 * cos x ^ 3 - 3 * cos x := by rw [← of_real_inj] <;> simp [cos_three_mul]\n#align cos_three_mul cos_three_mul\n\n",
 "cos_sub_sin_I":
 "theorem cos_sub_sin_I : cos x - sin x * I = exp (-x * I) := by rw [neg_mul, ← cosh_sub_sinh, sinh_mul_I, cosh_mul_I]\n#align cos_sub_sin_I cos_sub_sin_I\n\n",
 "cos_sub_cos":
 "theorem cos_sub_cos : cos x - cos y = -2 * sin ((x + y) / 2) * sin ((x - y) / 2) :=\n  by\n  rw [← of_real_inj]\n  simp only [cos, neg_mul, of_real_sin, of_real_sub, of_real_add, of_real_cos_of_real_re, of_real_div, of_real_mul,\n    of_real_one, of_real_neg, of_real_bit0]\n  convert cos_sub_cos _ _\n  ring\n#align cos_sub_cos cos_sub_cos\n\n",
 "cos_sub":
 "theorem cos_sub : cos (x - y) = cos x * cos y + sin x * sin y := by simp [sub_eq_add_neg, cos_add, sin_neg, cos_neg]\n#align cos_sub cos_sub\n\n",
 "cos_sq_le_one":
 "theorem cos_sq_le_one : cos x ^ 2 ≤ 1 := by rw [← sin_sq_add_cos_sq x] <;> exact le_add_of_nonneg_left (sq_nonneg _)\n#align cos_sq_le_one cos_sq_le_one\n\n",
 "cos_sq_add_sin_sq":
 "@[simp]\ntheorem cos_sq_add_sin_sq : cos x ^ 2 + sin x ^ 2 = 1 := by rw [add_comm, sin_sq_add_cos_sq]\n#align cos_sq_add_sin_sq cos_sq_add_sin_sq\n\n",
 "cos_sq'":
 "theorem cos_sq' : cos x ^ 2 = 1 - sin x ^ 2 := by rw [← sin_sq_add_cos_sq x, add_sub_cancel']\n#align cos_sq' cos_sq'\n\n",
 "cos_sq":
 "theorem cos_sq : cos x ^ 2 = 1 / 2 + cos (2 * x) / 2 :=\n  of_real_inj.1 <| by simpa using cos_sq x\n#align cos_sq cos_sq\n\n",
 "cos_pos_of_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cos_pos_of_le_one {x : exprℝ} (hx : |x| ≤ 1) : 0 < cos x :=\n  calc\n    0 < 1 - x ^ 2 / 2 - |x| ^ 4 * (5 / 96) :=\n      sub_pos.2 <|\n        lt_sub_iff_add_lt.2\n          (calc\n            |x| ^ 4 * (5 / 96) + x ^ 2 / 2 ≤ 1 * (5 / 96) + 1 / 2 :=\n              add_le_add (mul_le_mul_of_nonneg_right (pow_le_one _ (abs_nonneg _) hx) (by norm_num))\n                ((div_le_div_right (by norm_num)).2\n                  (by rw [sq, ← abs_mul_self, _root_.abs_mul] <;> exact mul_le_one hx (abs_nonneg _) hx))\n            _ < 1 := by norm_num\n            )\n    _ ≤ cos x := sub_le_comm.1 (abs_sub_le_iff.1 (cos_bound hx)).2\n    \n#align cos_pos_of_le_one cos_pos_of_le_one\n\n",
 "cos_one_pos":
 "theorem cos_one_pos : 0 < cos 1 :=\n  cos_pos_of_le_one (le_of_eq abs_one)\n#align cos_one_pos cos_one_pos\n\n",
 "cos_one_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cos_one_le : cos 1 ≤ 2 / 3 :=\n  calc\n    cos 1 ≤ |(1 : exprℝ)| ^ 4 * (5 / 96) + (1 - 1 ^ 2 / 2) :=\n      sub_le_iff_le_add.1 (abs_sub_le_iff.1 (cos_bound (by simp))).1\n    _ ≤ 2 / 3 := by norm_num\n    \n#align cos_one_le cos_one_le\n\n",
 "cos_of_real_re":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cos_of_real_re (x : exprℝ) : (cos x).re = real.cos x :=\n  rfl\n#align cos_of_real_re cos_of_real_re\n\n",
 "cos_of_real_im":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem cos_of_real_im (x : exprℝ) : (cos x).im = 0 := by rw [← of_real_cos_of_real_re, of_real_im]\n#align cos_of_real_im cos_of_real_im\n\n",
 "cos_neg":
 "@[simp]\ntheorem cos_neg : cos (-x) = cos x := by simp [cos, exp_neg]\n#align cos_neg cos_neg\n\n",
 "cos_mul_I":
 "theorem cos_mul_I : cos (x * I) = cosh x := by rw [← cosh_mul_I] <;> ring_nf <;> simp\n#align cos_mul_I cos_mul_I\n\n",
 "cos_le_one":
 "theorem cos_le_one : cos x ≤ 1 :=\n  (abs_le.1 (abs_cos_le_one _)).2\n#align cos_le_one cos_le_one\n\n",
 "cos_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem cos_eq (z : exprℂ) : cos z = cos z.re * cosh z.im - sin z.re * sinh z.im * I := by\n  convert cos_add_mul_I z.re z.im <;> exact (re_add_im z).symm\n#align cos_eq cos_eq\n\n",
 "cos_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\ntheorem cos_conj : cos ((star_ring_end) x) = (star_ring_end) (cos x) := by\n  rw [← cosh_mul_I, ← conj_neg_I, ← RingHom.map_mul, ← cosh_mul_I, cosh_conj, mul_neg, cosh_neg]\n#align cos_conj cos_conj\n\n",
 "cos_bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem cos_bound {x : exprℝ} (hx : |x| ≤ 1) : |cos x - (1 - x ^ 2 / 2)| ≤ |x| ^ 4 * (5 / 96) :=\n  calc\n    |cos x - (1 - x ^ 2 / 2)| = abs (complex.cos x - (1 - x ^ 2 / 2)) := by\n      rw [← abs_of_real] <;> simp [of_real_bit0, of_real_one, of_real_inv]\n    _ = abs ((complex.exp (x * I) + complex.exp (-x * I) - (2 - x ^ 2)) / 2) := by\n      simp [complex.cos, sub_div, add_div, neg_div, div_self (two_ne_zero' (exprℂ))]\n    _ =\n        abs\n          ((complex.exp (x * I) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range 4) ((x * I) ^ m / nat.factorial m) +\n              (complex.exp (-x * I) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range 4) ((-x * I) ^ m / nat.factorial m))) /\n            2) :=\n      congr_arg abs\n        (congr_arg (fun x : exprℂ => x / 2)\n          (by\n            simp only [sum_range_succ]\n            simp [pow_succ]\n            apply complex.ext <;> simp [div_eq_mul_inv, norm_sq] <;> ring))\n    _ ≤\n        abs\n            ((complex.exp (x * I) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range 4) ((x * I) ^ m / nat.factorial m)) /\n              2) +\n          abs\n            ((complex.exp (-x * I) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range 4) ((-x * I) ^ m / nat.factorial m)) /\n              2) :=\n      by rw [add_div] <;> exact complex.abs.add_le _ _\n    _ =\n        abs\n              (complex.exp (x * I) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range 4) ((x * I) ^ m / nat.factorial m)) /\n            2 +\n          abs\n              (complex.exp (-x * I) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range 4) ((-x * I) ^ m / nat.factorial m)) /\n            2 :=\n      by simp [map_div₀]\n    _ ≤\n        complex.abs (x * I) ^ 4 * (nat.succ 4 * (nat.factorial 4 * (4 : ℕ))⁻¹) / 2 +\n          complex.abs (-x * I) ^ 4 * (nat.succ 4 * (nat.factorial 4 * (4 : ℕ))⁻¹) / 2 :=\n      add_le_add ((div_le_div_right (by norm_num)).2 (complex.exp_bound (by simpa) (by decide)))\n        ((div_le_div_right (by norm_num)).2 (complex.exp_bound (by simpa) (by decide)))\n    _ ≤ |x| ^ 4 * (5 / 96) := by norm_num <;> simp [mul_assoc, mul_comm, mul_left_comm, mul_div_assoc]\n    \n#align cos_bound cos_bound\n\n",
 "cos_add_sin_mul_I_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/-- **De Moivre's formula** -/\ntheorem cos_add_sin_mul_I_pow (n : ℕ) (z : exprℂ) : (cos z + sin z * I) ^ n = cos (↑n * z) + sin (↑n * z) * I :=\n  by\n  rw [← exp_mul_I, ← exp_mul_I]\n  induction' n with n ih\n  · rw [pow_zero, Nat.cast_zero, zero_mul, zero_mul, exp_zero]\n  · rw [pow_succ', ih, Nat.cast_succ, add_mul, add_mul, one_mul, exp_add]\n#align cos_add_sin_mul_I_pow cos_add_sin_mul_I_pow\n\n",
 "cos_add_sin_I":
 "theorem cos_add_sin_I : cos x + sin x * I = exp (x * I) := by rw [← cosh_add_sinh, sinh_mul_I, cosh_mul_I]\n#align cos_add_sin_I cos_add_sin_I\n\n",
 "cos_add_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem cos_add_mul_I (x y : exprℂ) : cos (x + y * I) = cos x * cosh y - sin x * sinh y * I := by\n  rw [cos_add, cos_mul_I, sin_mul_I, mul_assoc]\n#align cos_add_mul_I cos_add_mul_I\n\n",
 "cos_add_cos":
 "theorem cos_add_cos : cos x + cos y = 2 * cos ((x + y) / 2) * cos ((x - y) / 2) :=\n  by\n  rw [← of_real_inj]\n  simp only [cos, of_real_sub, of_real_add, of_real_cos_of_real_re, of_real_div, of_real_mul, of_real_one, of_real_bit0]\n  convert cos_add_cos _ _ <;> norm_cast\n#align cos_add_cos cos_add_cos\n\n",
 "cos_add_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\nprivate theorem cos_add_aux {a b c d : exprℂ} : (a + b) * (c + d) - (b - a) * (d - c) * -1 = 2 * (a * c + b * d) := by\n  ring\n#align cos_add_aux cos_add_aux\n\n",
 "cos_add":
 "theorem cos_add : cos (x + y) = cos x * cos y - sin x * sin y := by rw [← of_real_inj] <;> simp [cos, cos_add]\n#align cos_add cos_add\n\n",
 "cos_abs":
 "@[simp]\ntheorem cos_abs : cos (|x|) = cos x := by\n  cases le_total x 0 <;> simp only [*, _root_.abs_of_nonneg, abs_of_nonpos, cos_neg]\n#align cos_abs cos_abs\n\n",
 "cauchy_product":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem cauchy_product {a b : ℕ → β}\n    (ha :\n      IsCauSeq abs fun m =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range m)\n          (abv (a n)))\n    (hb :\n      IsCauSeq abv fun m =>\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range m) (b n))\n    (ε : α) (ε0 : 0 < ε) :\n    ∃ i : ℕ,\n      ∀ j ≥ i,\n        abv\n            (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range j)\n                  (a k) *\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range j) (b k) -\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range j)\n                (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range (n + 1)) (a m * b (n - m)))) <\n          ε :=\n  let ⟨Q, hQ⟩ := CauSeq.bounded ⟨_, hb⟩\n  let ⟨P, hP⟩ := CauSeq.bounded ⟨_, ha⟩\n  have hP0 : 0 < P := lt_of_le_of_lt (abs_nonneg _) (hP 0)\n  have hPε0 : 0 < ε / (2 * P) := div_pos ε0 (mul_pos (show (2 : α) > 0 by norm_num) hP0)\n  let ⟨N, hN⟩ := CauSeq.cauchy₂ ⟨_, hb⟩ hPε0\n  have hQε0 : 0 < ε / (4 * Q) :=\n    div_pos ε0 (mul_pos (show (0 : α) < 4 by norm_num) (lt_of_le_of_lt (abv_nonneg _ _) (hQ 0)))\n  let ⟨M, hM⟩ := CauSeq.cauchy₂ ⟨_, ha⟩ hQε0\n  ⟨2 * (max N M + 1), fun K hK =>\n    by\n    have h₁ :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range K)\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (range (m + 1)) (a k * b (m - k))) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range K)\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (range (K - m)) (a m * b n)) :=\n      by simpa using sum_range_diag_flip K fun m n => a m * b n\n    have h₂ :\n      (fun i =>\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (range (K - i)) (a i * b k)) =\n        fun i =>\n        a i *\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (range (K - i)) (b k) :=\n      by simp [finset.mul_sum]\n    have h₃ :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range K)\n          (a i *\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (range (K - i)) (b k)) =\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range K)\n            (a i *\n              (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range (K - i)) (b k) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range K) (b k))) +\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range K)\n            (a i *\n              finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range K)\n                (b k)) :=\n      by rw [← sum_add_distrib] <;> simp [(mul_add _ _ _).symm]\n    have two_mul_two : (4 : α) = 2 * 2 := by norm_num\n    have hQ0 : Q ≠ 0 := fun h => by simpa [h, lt_irrefl] using hQε0\n    have h2Q0 : 2 * Q ≠ 0 := mul_ne_zero two_ne_zero hQ0\n    have hε : ε / (2 * P) * P + ε / (4 * Q) * (2 * Q) = ε := by\n      rw [← div_div, div_mul_cancel _ (ne.symm (ne_of_lt hP0)), two_mul_two, mul_assoc, ← div_div,\n        div_mul_cancel _ h2Q0, add_halves]\n    have hNMK : max N M + 1 < K := lt_of_lt_of_le (by rw [two_mul] <;> exact lt_add_of_pos_left _ (nat.succ_pos _)) hK\n    have hKN : N < K :=\n      calc\n        N ≤ max N M := le_max_left _ _\n        _ < max N M + 1 := nat.lt_succ_self _\n        _ < K := hNMK\n        \n    have hsumlesum :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (range (max N M + 1))\n          (abv (a i) *\n            abv\n              (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range (K - i)) (b k) -\n                finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                  (range K) (b k))) ≤\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (range (max N M + 1)) (abv (a i) * (ε / (2 * P))) :=\n      sum_le_sum fun m hmJ =>\n        mul_le_mul_of_nonneg_left\n          (le_of_lt\n            (hN (K - m)\n              (le_tsub_of_add_le_left\n                (le_trans\n                  (by\n                    rw [two_mul] <;>\n                      exact\n                        add_le_add (le_of_lt (mem_range.1 hmJ)) (le_trans (le_max_left _ _) (le_of_lt (lt_add_one _))))\n                  hK))\n              K (le_of_lt hKN)))\n          (abv_nonneg abv _)\n    have hsumltP :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n          (range (max N M + 1)) (abv (a n)) <\n        P :=\n      calc\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (range (max N M + 1)) (abv (a n)) =\n            |finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                (range (max N M + 1)) (abv (a n))| :=\n          eq.symm (abs_of_nonneg (sum_nonneg fun x h => abv_nonneg abv (a x)))\n        _ < P := hP (max N M + 1)\n        \n    rw [h₁, h₂, h₃, sum_mul, ← sub_sub, sub_right_comm, sub_self, zero_sub, abv_neg abv]\n    refine' lt_of_le_of_lt (abv_sum_le_sum_abv _ _) _\n    suffices\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            (range (max N M + 1))\n            (abv (a i) *\n              abv\n                (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                    (range (K - i)) (b k) -\n                  finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                    (range K) (b k))) +\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" (range K)\n              (abv (a i) *\n                abv\n                  (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                      (range (K - i)) (b k) -\n                    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                      (range K) (b k))) -\n            finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (range (max N M + 1))\n              (abv (a i) *\n                abv\n                  (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                      (range (K - i)) (b k) -\n                    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                      (range K) (b k)))) <\n        ε / (2 * P) * P + ε / (4 * Q) * (2 * Q)\n      by\n      rw [hε] at this\n      simpa [abv_mul abv]\n    refine'\n      add_lt_add (lt_of_le_of_lt hsumlesum (by rw [← sum_mul, mul_comm] <;> exact (mul_lt_mul_left hPε0).mpr hsumltP)) _\n    rw [sum_range_sub_sum_range (le_of_lt hNMK)]\n    calc\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            ((range K).filter fun k => max N M + 1 ≤ k)\n            (abv (a i) *\n              abv\n                (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                    (range (K - i)) (b k) -\n                  finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                    (range K) (b k))) ≤\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n            ((range K).filter fun k => max N M + 1 ≤ k) (abv (a i) * (2 * Q)) :=\n        sum_le_sum fun n hn => by\n          refine' mul_le_mul_of_nonneg_left _ (abv_nonneg _ _)\n          rw [sub_eq_add_neg]\n          refine' le_trans (abv_add _ _ _) _\n          rw [two_mul, abv_neg abv]\n          exact add_le_add (le_of_lt (hQ _)) (le_of_lt (hQ _))\n      _ < ε / (4 * Q) * (2 * Q) := by\n        rw [← sum_mul, ← sum_range_sub_sum_range (le_of_lt hNMK)] <;>\n          refine'\n            (mul_lt_mul_right <| by\n                  rw [two_mul] <;>\n                    exact add_pos (lt_of_le_of_lt (abv_nonneg _ _) (hQ 0)) (lt_of_le_of_lt (abv_nonneg _ _) (hQ 0))).2\n              (lt_of_le_of_lt (le_abs_self _)\n                (hM _ (le_trans (nat.le_succ_of_le (le_max_right _ _)) (le_of_lt hNMK)) _\n                  (nat.le_succ_of_le (le_max_right _ _))))\n      ⟩\n#align cauchy_product cauchy_product\n\n",
 "add_one_le_exp_of_nonpos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem add_one_le_exp_of_nonpos {x : exprℝ} (h : x ≤ 0) : x + 1 ≤ real.exp x :=\n  by\n  rw [add_comm]\n  have h1 : 0 ≤ -x := by linarith\n  simpa using one_sub_le_exp_minus_of_pos h1\n#align add_one_le_exp_of_nonpos add_one_le_exp_of_nonpos\n\n",
 "add_one_le_exp_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- This is an intermediate result that is later replaced by `real.add_one_le_exp`; use that lemma\ninstead. -/\ntheorem add_one_le_exp_of_nonneg {x : exprℝ} (hx : 0 ≤ x) : x + 1 ≤ exp x :=\n  calc\n    x + 1 ≤ lim (⟨fun n : ℕ => ((exp' x) n).re, is_cau_seq_re (exp' x)⟩ : CauSeq (exprℝ) has_abs.abs) :=\n      le_lim\n        (CauSeq.le_of_exists\n          ⟨2, fun j hj =>\n            show\n              x + (1 : exprℝ) ≤\n                (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n                    (range j) (x ^ m / nat.factorial m : exprℂ)).re\n              by\n              have h₁ : (((fun m : ℕ => (x ^ m / nat.factorial m : exprℂ)) ∘ nat.succ) 0).re = x := by simp\n              have h₂ : ((x : exprℂ) ^ 0 / nat.factorial 0).re = 1 := by simp\n              rw [← tsub_add_cancel_of_le hj, sum_range_succ', sum_range_succ', add_re, add_re, h₁, h₂, add_assoc, ←\n                coe_re_add_group_hom, re_add_group_hom.map_sum, coe_re_add_group_hom]\n              refine' le_add_of_nonneg_of_le (sum_nonneg fun m hm => _) le_rfl\n              rw [← of_real_pow, ← of_real_nat_cast, ← of_real_div, of_real_re]\n              exact div_nonneg (pow_nonneg hx _) (nat.cast_nonneg _)⟩)\n    _ = exp x := by rw [exp, complex.exp, ← cau_seq_re, lim_re]\n    \n#align add_one_le_exp_of_nonneg add_one_le_exp_of_nonneg\n\n",
 "add_one_le_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem add_one_le_exp (x : exprℝ) : x + 1 ≤ real.exp x :=\n  by\n  cases le_or_lt 0 x\n  · exact real.add_one_le_exp_of_nonneg h\n  exact add_one_le_exp_of_nonpos h.le\n#align add_one_le_exp add_one_le_exp\n\n",
 "abv_sum_le_sum_abv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\ntheorem abv_sum_le_sum_abv {γ : Type _} (f : γ → β) (s : Finset γ) :\n    abv (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f k)) ≤\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (abv (f k)) :=\n  haveI := classical.dec_eq γ\n  Finset.induction_on s (by simp [abv_zero abv]) fun a s has ih => by\n    rw [sum_insert has, sum_insert has] <;> exact le_trans (abv_add abv _ _) (add_le_add_left ih _)\n#align abv_sum_le_sum_abv abv_sum_le_sum_abv\n\n",
 "abs_sin_le_one":
 "theorem abs_sin_le_one : |sin x| ≤ 1 :=\n  abs_le_one_iff_mul_self_le_one.2 <| by simp only [← sq, sin_sq_le_one]\n#align abs_sin_le_one abs_sin_le_one\n\n",
 "abs_sin_eq_sqrt_one_sub_cos_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem abs_sin_eq_sqrt_one_sub_cos_sq (x : exprℝ) : |sin x| = sqrt (1 - cos x ^ 2) := by rw [← sin_sq, sqrt_sq_eq_abs]\n#align abs_sin_eq_sqrt_one_sub_cos_sq abs_sin_eq_sqrt_one_sub_cos_sq\n\n",
 "abs_exp_sub_one_sub_id_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem abs_exp_sub_one_sub_id_le {x : exprℝ} (hx : |x| ≤ 1) : |exp x - 1 - x| ≤ x ^ 2 :=\n  by\n  rw [← _root_.sq_abs]\n  have : complex.abs x ≤ 1 := by exact_mod_cast hx\n  exact_mod_cast complex.abs_exp_sub_one_sub_id_le this\n#align abs_exp_sub_one_sub_id_le abs_exp_sub_one_sub_id_le\n\n",
 "abs_exp_sub_one_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem abs_exp_sub_one_le {x : exprℝ} (hx : |x| ≤ 1) : |exp x - 1| ≤ 2 * |x| :=\n  by\n  have : complex.abs x ≤ 1 := by exact_mod_cast hx\n  exact_mod_cast complex.abs_exp_sub_one_le this\n#align abs_exp_sub_one_le abs_exp_sub_one_le\n\n",
 "abs_exp_of_real_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem abs_exp_of_real_mul_I (x : exprℝ) : abs (exp (x * I)) = 1 := by rw [exp_mul_I, abs_cos_add_sin_mul_I]\n#align abs_exp_of_real_mul_I abs_exp_of_real_mul_I\n\n",
 "abs_exp_of_real":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem abs_exp_of_real (x : exprℝ) : abs (exp x) = real.exp x := by\n  rw [← of_real_exp] <;> exact abs_of_nonneg (le_of_lt (real.exp_pos _))\n#align abs_exp_of_real abs_exp_of_real\n\n",
 "abs_exp_eq_iff_re_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem abs_exp_eq_iff_re_eq {x y : exprℂ} : abs (exp x) = abs (exp y) ↔ x.re = y.re := by\n  rw [abs_exp, abs_exp, real.exp_eq_exp]\n#align abs_exp_eq_iff_re_eq abs_exp_eq_iff_re_eq\n\n",
 "abs_exp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem abs_exp (z : exprℂ) : abs (exp z) = real.exp z.re := by\n  rw [exp_eq_exp_re_mul_sin_add_cos, map_mul, abs_exp_of_real, abs_cos_add_sin_mul_I, mul_one]\n#align abs_exp abs_exp\n\n",
 "abs_cos_le_one":
 "theorem abs_cos_le_one : |cos x| ≤ 1 :=\n  abs_le_one_iff_mul_self_le_one.2 <| by simp only [← sq, cos_sq_le_one]\n#align abs_cos_le_one abs_cos_le_one\n\n",
 "abs_cos_eq_sqrt_one_sub_sin_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem abs_cos_eq_sqrt_one_sub_sin_sq (x : exprℝ) : |cos x| = sqrt (1 - sin x ^ 2) := by rw [← cos_sq', sqrt_sq_eq_abs]\n#align abs_cos_eq_sqrt_one_sub_sin_sq abs_cos_eq_sqrt_one_sub_sin_sq\n\n",
 "abs_cos_add_sin_mul_I":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem abs_cos_add_sin_mul_I (x : exprℝ) : abs (cos x + sin x * I) = 1 :=\n  by\n  have := real.sin_sq_add_cos_sq x\n  simp_all [add_comm, abs, norm_sq, sq, sin_of_real_re, cos_of_real_re, mul_re]\n#align abs_cos_add_sin_mul_I abs_cos_add_sin_mul_I\n\n"}