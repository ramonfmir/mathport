{"piecewise_mem_Icc'":
 "theorem piecewise_mem_Icc' {s : Set ι} [∀ j, Decidable (j ∈ s)] {f₁ f₂ g₁ g₂ : ∀ i, α i} (h₁ : f₁ ∈ Icc g₁ g₂)\n    (h₂ : f₂ ∈ Icc g₁ g₂) : s.piecewise f₁ f₂ ∈ Icc g₁ g₂ :=\n  piecewise_mem_Icc (fun i hi => ⟨h₁.1 _, h₁.2 _⟩) fun i hi => ⟨h₂.1 _, h₂.2 _⟩\n#align piecewise_mem_Icc' piecewise_mem_Icc'\n\n",
 "piecewise_mem_Icc":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:635:2: warning: expanding binder collection (i «expr ∉ » s) -/\ntheorem piecewise_mem_Icc {s : Set ι} [∀ j, Decidable (j ∈ s)] {f₁ f₂ g₁ g₂ : ∀ i, α i}\n    (h₁ : ∀ i ∈ s, f₁ i ∈ Icc (g₁ i) (g₂ i)) (h₂ : ∀ (i) (_ : i ∉ s), f₂ i ∈ Icc (g₁ i) (g₂ i)) :\n    s.piecewise f₁ f₂ ∈ Icc g₁ g₂ :=\n  ⟨le_piecewise (fun i hi => (h₁ i hi).1) fun i hi => (h₂ i hi).1,\n    piecewise_le (fun i hi => (h₁ i hi).2) fun i hi => (h₂ i hi).2⟩\n#align piecewise_mem_Icc piecewise_mem_Icc\n\n",
 "pi_univ_uIcc":
 "@[simp]\ntheorem pi_univ_uIcc (a b : ∀ i, α i) : (pi univ fun i => uIcc (a i) (b i)) = uIcc a b :=\n  pi_univ_Icc _ _\n#align pi_univ_uIcc pi_univ_uIcc\n\n",
 "pi_univ_Ioo_subset":
 "theorem pi_univ_Ioo_subset : (pi univ fun i => Ioo (x i) (y i)) ⊆ Ioo x y := fun x hx =>\n  ⟨pi_univ_Ioi_subset _ fun i hi => (hx i hi).1, pi_univ_Iio_subset _ fun i hi => (hx i hi).2⟩\n#align pi_univ_Ioo_subset pi_univ_Ioo_subset\n\n",
 "pi_univ_Ioi_subset":
 "theorem pi_univ_Ioi_subset : (pi univ fun i => Ioi (x i)) ⊆ Ioi x := fun z hz =>\n  ⟨fun i => le_of_lt <| hz i trivial, fun h => Nonempty.elim ‹Nonempty ι› fun i => (h i).not_lt (hz i trivial)⟩\n#align pi_univ_Ioi_subset pi_univ_Ioi_subset\n\n",
 "pi_univ_Ioc_update_union":
 "theorem pi_univ_Ioc_update_union (x y : ∀ i, α i) (i₀ : ι) (m : α i₀) (hm : m ∈ Icc (x i₀) (y i₀)) :\n    ((pi univ fun i => Ioc (x i) (update y i₀ m i)) ∪ pi univ fun i => Ioc (update x i₀ m i) (y i)) =\n      pi univ fun i => Ioc (x i) (y i) :=\n  by\n  simp_rw [pi_univ_Ioc_update_left hm.1, pi_univ_Ioc_update_right hm.2, ← union_inter_distrib_right, ← set_of_or,\n    le_or_lt, set_of_true, univ_inter]\n#align pi_univ_Ioc_update_union pi_univ_Ioc_update_union\n\n",
 "pi_univ_Ioc_update_right":
 "theorem pi_univ_Ioc_update_right {x y : ∀ i, α i} {i₀ : ι} {m : α i₀} (hm : m ≤ y i₀) :\n    (pi univ fun i => Ioc (x i) (update y i₀ m i)) = { z | z i₀ ≤ m } ∩ pi univ fun i => Ioc (x i) (y i) :=\n  by\n  have : Ioc (x i₀) m = Iic m ∩ Ioc (x i₀) (y i₀) := by\n    rw [← Ioi_inter_Iic, ← Ioi_inter_Iic, inter_left_comm, inter_eq_self_of_subset_left (Iic_subset_Iic.2 hm)]\n  simp_rw [univ_pi_update i₀ y m fun i z => Ioc (x i) z, ← pi_inter_compl ({i₀} : Set ι), singleton_pi', ← inter_assoc,\n    this]\n  rfl\n#align pi_univ_Ioc_update_right pi_univ_Ioc_update_right\n\n",
 "pi_univ_Ioc_update_left":
 "theorem pi_univ_Ioc_update_left {x y : ∀ i, α i} {i₀ : ι} {m : α i₀} (hm : x i₀ ≤ m) :\n    (pi univ fun i => Ioc (update x i₀ m i) (y i)) = { z | m < z i₀ } ∩ pi univ fun i => Ioc (x i) (y i) :=\n  by\n  have : Ioc m (y i₀) = Ioi m ∩ Ioc (x i₀) (y i₀) := by\n    rw [← Ioi_inter_Iic, ← Ioi_inter_Iic, ← inter_assoc, inter_eq_self_of_subset_left (Ioi_subset_Ioi hm)]\n  simp_rw [univ_pi_update i₀ _ _ fun i z => Ioc z (y i), ← pi_inter_compl ({i₀} : Set ι), singleton_pi', ← inter_assoc,\n    this]\n  rfl\n#align pi_univ_Ioc_update_left pi_univ_Ioc_update_left\n\n",
 "pi_univ_Ioc_subset":
 "theorem pi_univ_Ioc_subset : (pi univ fun i => Ioc (x i) (y i)) ⊆ Ioc x y := fun x hx =>\n  ⟨pi_univ_Ioi_subset _ fun i hi => (hx i hi).1, fun i => (hx i trivial).2⟩\n#align pi_univ_Ioc_subset pi_univ_Ioc_subset\n\n",
 "pi_univ_Iio_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\ntheorem pi_univ_Iio_subset : (pi univ fun i => Iio (x i)) ⊆ Iio x :=\n  @pi_univ_Ioi_subset ι (fun i => «expr ᵒᵈ» (α i)) _ x _\n#align pi_univ_Iio_subset pi_univ_Iio_subset\n\n",
 "pi_univ_Iic":
 "@[simp]\ntheorem pi_univ_Iic : (pi univ fun i => Iic (x i)) = Iic x :=\n  ext fun y => by simp [Pi.le_def]\n#align pi_univ_Iic pi_univ_Iic\n\n",
 "pi_univ_Ico_subset":
 "theorem pi_univ_Ico_subset : (pi univ fun i => Ico (x i) (y i)) ⊆ Ico x y := fun x hx =>\n  ⟨fun i => (hx i trivial).1, pi_univ_Iio_subset _ fun i hi => (hx i hi).2⟩\n#align pi_univ_Ico_subset pi_univ_Ico_subset\n\n",
 "pi_univ_Ici":
 "/-\nCopyright (c) 2020 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\n@[simp]\ntheorem pi_univ_Ici : (pi univ fun i => Ici (x i)) = Ici x :=\n  ext fun y => by simp [Pi.le_def]\n#align pi_univ_Ici pi_univ_Ici\n\n",
 "pi_univ_Icc":
 "@[simp]\ntheorem pi_univ_Icc : (pi univ fun i => Icc (x i) (y i)) = Icc x y :=\n  ext fun y => by simp [Pi.le_def, forall_and]\n#align pi_univ_Icc pi_univ_Icc\n\n",
 "image_update_uIcc_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_uIcc_right (f : ∀ i, α i) (i : ι) (b : α i) :\n    «expr '' » (f.update i) (uIcc (f i) b) = uIcc f (f.update i b) := by simpa using image_update_uIcc f i (f i) b\n#align image_update_uIcc_right image_update_uIcc_right\n\n",
 "image_update_uIcc_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_uIcc_left (f : ∀ i, α i) (i : ι) (a : α i) :\n    «expr '' » (f.update i) (uIcc a (f i)) = uIcc (f.update i a) f := by simpa using image_update_uIcc f i a (f i)\n#align image_update_uIcc_left image_update_uIcc_left\n\n",
 "image_update_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_uIcc (f : ∀ i, α i) (i : ι) (a b : α i) :\n    «expr '' » (f.update i) (uIcc a b) = uIcc (f.update i a) (f.update i b) :=\n  (image_update_Icc _ _ _ _).trans <| by simp_rw [uIcc, f.update_sup, f.update_inf]\n#align image_update_uIcc image_update_uIcc\n\n",
 "image_update_Ioo_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Ioo_right (f : ∀ i, α i) (i : ι) (b : α i) :\n    «expr '' » (f.update i) (Ioo (f i) b) = Ioo f (f.update i b) := by simpa using image_update_Ioo f i (f i) b\n#align image_update_Ioo_right image_update_Ioo_right\n\n",
 "image_update_Ioo_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Ioo_left (f : ∀ i, α i) (i : ι) (a : α i) :\n    «expr '' » (f.update i) (Ioo a (f i)) = Ioo (f.update i a) f := by simpa using image_update_Ioo f i a (f i)\n#align image_update_Ioo_left image_update_Ioo_left\n\n",
 "image_update_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Ioo (f : ∀ i, α i) (i : ι) (a b : α i) :\n    «expr '' » (f.update i) (Ioo a b) = Ioo (f.update i a) (f.update i b) := by\n  rw [← Ico_diff_left, ← Ico_diff_left, image_diff (f.update_injective _), image_singleton, image_update_Ico]\n#align image_update_Ioo image_update_Ioo\n\n",
 "image_update_Ioc_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Ioc_right (f : ∀ i, α i) (i : ι) (b : α i) :\n    «expr '' » (f.update i) (Ioc (f i) b) = Ioc f (f.update i b) := by simpa using image_update_Ioc f i (f i) b\n#align image_update_Ioc_right image_update_Ioc_right\n\n",
 "image_update_Ioc_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Ioc_left (f : ∀ i, α i) (i : ι) (a : α i) :\n    «expr '' » (f.update i) (Ioc a (f i)) = Ioc (f.update i a) f := by simpa using image_update_Ioc f i a (f i)\n#align image_update_Ioc_left image_update_Ioc_left\n\n",
 "image_update_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Ioc (f : ∀ i, α i) (i : ι) (a b : α i) :\n    «expr '' » (f.update i) (Ioc a b) = Ioc (f.update i a) (f.update i b) := by\n  rw [← Icc_diff_left, ← Icc_diff_left, image_diff (f.update_injective _), image_singleton, image_update_Icc]\n#align image_update_Ioc image_update_Ioc\n\n",
 "image_update_Ico_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Ico_right (f : ∀ i, α i) (i : ι) (b : α i) :\n    «expr '' » (f.update i) (Ico (f i) b) = Ico f (f.update i b) := by simpa using image_update_Ico f i (f i) b\n#align image_update_Ico_right image_update_Ico_right\n\n",
 "image_update_Ico_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Ico_left (f : ∀ i, α i) (i : ι) (a : α i) :\n    «expr '' » (f.update i) (Ico a (f i)) = Ico (f.update i a) f := by simpa using image_update_Ico f i a (f i)\n#align image_update_Ico_left image_update_Ico_left\n\n",
 "image_update_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Ico (f : ∀ i, α i) (i : ι) (a b : α i) :\n    «expr '' » (f.update i) (Ico a b) = Ico (f.update i a) (f.update i b) := by\n  rw [← Icc_diff_right, ← Icc_diff_right, image_diff (f.update_injective _), image_singleton, image_update_Icc]\n#align image_update_Ico image_update_Ico\n\n",
 "image_update_Icc_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Icc_right (f : ∀ i, α i) (i : ι) (b : α i) :\n    «expr '' » (f.update i) (Icc (f i) b) = Icc f (f.update i b) := by simpa using image_update_Icc f i (f i) b\n#align image_update_Icc_right image_update_Icc_right\n\n",
 "image_update_Icc_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Icc_left (f : ∀ i, α i) (i : ι) (a : α i) :\n    «expr '' » (f.update i) (Icc a (f i)) = Icc (f.update i a) f := by simpa using image_update_Icc f i a (f i)\n#align image_update_Icc_left image_update_Icc_left\n\n",
 "image_update_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_update_Icc (f : ∀ i, α i) (i : ι) (a b : α i) :\n    «expr '' » (f.update i) (Icc a b) = Icc (f.update i a) (f.update i b) :=\n  by\n  ext\n  rw [← Set.pi_univ_Icc]\n  refine' ⟨_, fun h => ⟨x i, _, _⟩⟩\n  · rintro ⟨c, hc, rfl⟩\n    simpa [update_le_update_iff]\n  · simpa only [Function.update_same] using h i (mem_univ i)\n  · ext j\n    obtain rfl | hij := eq_or_ne i j\n    · exact Function.update_same _ _ _\n    · simpa only [Function.update_noteq hij.symm, le_antisymm_iff] using h j (mem_univ j)\n#align image_update_Icc image_update_Icc\n\n",
 "image_mul_single_uIcc_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_uIcc_right (i : ι) (b : α i) :\n    «expr '' » (Pi.mulSingle i) (uIcc 1 b) = uIcc 1 (Pi.mulSingle i b) :=\n  image_update_uIcc_right _ _ _\n#align image_mul_single_uIcc_right image_mul_single_uIcc_right\n\n",
 "image_mul_single_uIcc_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_uIcc_left (i : ι) (a : α i) :\n    «expr '' » (Pi.mulSingle i) (uIcc a 1) = uIcc (Pi.mulSingle i a) 1 :=\n  image_update_uIcc_left _ _ _\n#align image_mul_single_uIcc_left image_mul_single_uIcc_left\n\n",
 "image_mul_single_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_uIcc (i : ι) (a b : α i) :\n    «expr '' » (Pi.mulSingle i) (uIcc a b) = uIcc (Pi.mulSingle i a) (Pi.mulSingle i b) :=\n  image_update_uIcc _ _ _ _\n#align image_mul_single_uIcc image_mul_single_uIcc\n\n",
 "image_mul_single_Ioo_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Ioo_right (i : ι) (b : α i) :\n    «expr '' » (Pi.mulSingle i) (Ioo 1 b) = Ioo 1 (Pi.mulSingle i b) :=\n  image_update_Ioo_right _ _ _\n#align image_mul_single_Ioo_right image_mul_single_Ioo_right\n\n",
 "image_mul_single_Ioo_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Ioo_left (i : ι) (a : α i) :\n    «expr '' » (Pi.mulSingle i) (Ioo a 1) = Ioo (Pi.mulSingle i a) 1 :=\n  image_update_Ioo_left _ _ _\n#align image_mul_single_Ioo_left image_mul_single_Ioo_left\n\n",
 "image_mul_single_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Ioo (i : ι) (a b : α i) :\n    «expr '' » (Pi.mulSingle i) (Ioo a b) = Ioo (Pi.mulSingle i a) (Pi.mulSingle i b) :=\n  image_update_Ioo _ _ _ _\n#align image_mul_single_Ioo image_mul_single_Ioo\n\n",
 "image_mul_single_Ioc_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Ioc_right (i : ι) (b : α i) :\n    «expr '' » (Pi.mulSingle i) (Ioc 1 b) = Ioc 1 (Pi.mulSingle i b) :=\n  image_update_Ioc_right _ _ _\n#align image_mul_single_Ioc_right image_mul_single_Ioc_right\n\n",
 "image_mul_single_Ioc_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Ioc_left (i : ι) (a : α i) :\n    «expr '' » (Pi.mulSingle i) (Ioc a 1) = Ioc (Pi.mulSingle i a) 1 :=\n  image_update_Ioc_left _ _ _\n#align image_mul_single_Ioc_left image_mul_single_Ioc_left\n\n",
 "image_mul_single_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Ioc (i : ι) (a b : α i) :\n    «expr '' » (Pi.mulSingle i) (Ioc a b) = Ioc (Pi.mulSingle i a) (Pi.mulSingle i b) :=\n  image_update_Ioc _ _ _ _\n#align image_mul_single_Ioc image_mul_single_Ioc\n\n",
 "image_mul_single_Ico_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Ico_right (i : ι) (b : α i) :\n    «expr '' » (Pi.mulSingle i) (Ico 1 b) = Ico 1 (Pi.mulSingle i b) :=\n  image_update_Ico_right _ _ _\n#align image_mul_single_Ico_right image_mul_single_Ico_right\n\n",
 "image_mul_single_Ico_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Ico_left (i : ι) (a : α i) :\n    «expr '' » (Pi.mulSingle i) (Ico a 1) = Ico (Pi.mulSingle i a) 1 :=\n  image_update_Ico_left _ _ _\n#align image_mul_single_Ico_left image_mul_single_Ico_left\n\n",
 "image_mul_single_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Ico (i : ι) (a b : α i) :\n    «expr '' » (Pi.mulSingle i) (Ico a b) = Ico (Pi.mulSingle i a) (Pi.mulSingle i b) :=\n  image_update_Ico _ _ _ _\n#align image_mul_single_Ico image_mul_single_Ico\n\n",
 "image_mul_single_Icc_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Icc_right (i : ι) (b : α i) :\n    «expr '' » (Pi.mulSingle i) (Icc 1 b) = Icc 1 (Pi.mulSingle i b) :=\n  image_update_Icc_right _ _ _\n#align image_mul_single_Icc_right image_mul_single_Icc_right\n\n",
 "image_mul_single_Icc_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Icc_left (i : ι) (a : α i) :\n    «expr '' » (Pi.mulSingle i) (Icc a 1) = Icc (Pi.mulSingle i a) 1 :=\n  image_update_Icc_left _ _ _\n#align image_mul_single_Icc_left image_mul_single_Icc_left\n\n",
 "image_mul_single_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[to_additive]\ntheorem image_mul_single_Icc (i : ι) (a b : α i) :\n    «expr '' » (Pi.mulSingle i) (Icc a b) = Icc (Pi.mulSingle i a) (Pi.mulSingle i b) :=\n  image_update_Icc _ _ _ _\n#align image_mul_single_Icc image_mul_single_Icc\n\n",
 "disjoint_pi_univ_Ioc_update_left_right":
 "theorem disjoint_pi_univ_Ioc_update_left_right {x y : ∀ i, α i} {i₀ : ι} {m : α i₀} :\n    Disjoint (pi univ fun i => Ioc (x i) (update y i₀ m i)) (pi univ fun i => Ioc (update x i₀ m i) (y i)) :=\n  by\n  rw [disjoint_left]\n  rintro z h₁ h₂\n  refine' (h₁ i₀ (mem_univ _)).2.not_lt _\n  simpa only [Function.update_same] using (h₂ i₀ (mem_univ _)).1\n#align disjoint_pi_univ_Ioc_update_left_right disjoint_pi_univ_Ioc_update_left_right\n\n",
 "Icc_diff_pi_univ_Ioo_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/-- If `x`, `y`, `x'`, and `y'` are functions `Π i : ι, α i`, then\nthe set difference between the box `[x, y]` and the product of the open intervals `(x' i, y' i)`\nis covered by the union of the following boxes: for each `i : ι`, we take\n`[x, update y i (x' i)]` and `[update x i (y' i), y]`.\n\nE.g., if `x' = x` and `y' = y`, then this lemma states that the difference between a closed box\n`[x, y]` and the corresponding open box `{z | ∀ i, x i < z i < y i}` is covered by the union\nof the faces of `[x, y]`. -/\ntheorem Icc_diff_pi_univ_Ioo_subset (x y x' y' : ∀ i, α i) :\n    (Icc x y \\ pi univ fun i => Ioo (x' i) (y' i)) ⊆\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n          (Icc x (update y i (x' i))) ∪\n        «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n          (Icc (update x i (y' i)) y) :=\n  by\n  rintro a ⟨⟨hxa, hay⟩, ha'⟩\n  simpa [le_update_iff, update_le_iff, hxa, hay, hxa _, hay _, ← exists_or, not_and_or] using ha'\n#align Icc_diff_pi_univ_Ioo_subset Icc_diff_pi_univ_Ioo_subset\n\n",
 "Icc_diff_pi_univ_Ioc_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/-- If `x`, `y`, `z` are functions `Π i : ι, α i`, then\nthe set difference between the box `[x, z]` and the product of the intervals `(y i, z i]`\nis covered by the union of the boxes `[x, update z i (y i)]`.\n\nE.g., if `x = y`, then this lemma states that the difference between a closed box\n`[x, y]` and the product of half-open intervals `{z | ∀ i, x i < z i ≤ y i}` is covered by the union\nof the faces of `[x, y]` adjacent to `x`. -/\ntheorem Icc_diff_pi_univ_Ioc_subset (x y z : ∀ i, α i) :\n    (Icc x z \\ pi univ fun i => Ioc (y i) (z i)) ⊆\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\"\n        (Icc x (update z i (y i))) :=\n  by\n  rintro a ⟨⟨hax, haz⟩, hay⟩\n  simpa [not_and_or, hax, le_update_iff, haz _] using hay\n#align Icc_diff_pi_univ_Ioc_subset Icc_diff_pi_univ_Ioc_subset\n\n"}