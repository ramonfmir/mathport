{"unionᵢ_Ioo_of_mono_of_isGLB_of_isLUB":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n#print unionᵢ_Ioo_of_mono_of_isGLB_of_isLUB /-\ntheorem unionᵢ_Ioo_of_mono_of_isGLB_of_isLUB (hf : antitone f) (hg : monotone g) (ha : IsGLB (range f) a)\n    (hb : IsLUB (range g) b) :\n    «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (Ioo (f x) (g x)) =\n      Ioo a b :=\n  calc\n    «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (Ioo (f x) (g x)) =\n        «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (Ioi (f x)) ∩\n          «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (Iio (g x)) :=\n      unionᵢ_inter_of_monotone hf.Ioi hg.Iio\n    _ = Ioi a ∩ Iio b := congr_arg₂ (· ∩ ·) ha.Union_Ioi_eq hb.Union_Iio_eq\n    \n#align Union_Ioo_of_mono_of_is_glb_of_is_lub unionᵢ_Ioo_of_mono_of_isGLB_of_isLUB\n-/\n\n",
 "strictMonoOn_Iic_of_pred_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print strictMonoOn_Iic_of_pred_lt /-\ntheorem strictMonoOn_Iic_of_pred_lt [PredOrder α] [IsPredArchimedean α] {n : α} (hψ : ∀ m, n < m → ψ (pred m) < ψ m) :\n    strict_mono_on ψ (Set.Ici n) := fun i hi j hj hij =>\n  @strictMonoOn_Iic_of_lt_succ («expr ᵒᵈ» α) («expr ᵒᵈ» β) _ _ ψ _ _ n hψ j hj i hi hij\n#align strict_mono_on_Iic_of_pred_lt strictMonoOn_Iic_of_pred_lt\n-/\n\n",
 "strictMonoOn_Iic_of_lt_succ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ^[ ]» -/\n#print strictMonoOn_Iic_of_lt_succ /-\n/-- A function `ψ` on a `succ_order` is strictly monotone before some `n` if for all `m` such that\n`m < n`, we have `ψ m < ψ (succ m)`. -/\ntheorem strictMonoOn_Iic_of_lt_succ [SuccOrder α] [IsSuccArchimedean α] {n : α} (hψ : ∀ m, m < n → ψ m < ψ (succ m)) :\n    strict_mono_on ψ (Set.Iic n) := by\n  intro x hx y hy hxy\n  obtain ⟨i, rfl⟩ := hxy.le.exists_succ_iterate\n  induction' i with k ih\n  · simpa using hxy\n  cases k\n  · exact hψ _ (lt_of_lt_of_le hxy hy)\n  rw [Set.mem_Iic] at *\n  simp only [function.iterate_succ', function.comp_apply] at ih hxy hy⊢\n  by_cases hmax : is_max ((«expr ^[ ]» succ k) x)\n  · rw [succ_eq_iff_is_max.2 hmax] at hxy⊢\n    exact ih (le_trans (le_succ _) hy) hxy\n  by_cases hmax' : is_max (succ ((«expr ^[ ]» succ k) x))\n  · rw [succ_eq_iff_is_max.2 hmax'] at hxy⊢\n    exact ih (le_trans (le_succ _) hy) hxy\n  refine'\n    lt_trans (ih (le_trans (le_succ _) hy) (lt_of_le_of_lt (le_succ_iterate k _) (lt_succ_iff_not_is_max.2 hmax))) _\n  rw [← function.comp_apply succ, ← function.iterate_succ']\n  refine' hψ _ (lt_of_lt_of_le _ hy)\n  rwa [function.iterate_succ', function.comp_apply, lt_succ_iff_not_is_max]\n#align strict_mono_on_Iic_of_lt_succ strictMonoOn_Iic_of_lt_succ\n-/\n\n",
 "strictAntiOn_Iic_of_succ_lt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print strictAntiOn_Iic_of_succ_lt /-\ntheorem strictAntiOn_Iic_of_succ_lt [SuccOrder α] [IsSuccArchimedean α] {n : α} (hψ : ∀ m, m < n → ψ (succ m) < ψ m) :\n    strict_anti_on ψ (Set.Iic n) := fun i hi j hj hij =>\n  @strictMonoOn_Iic_of_lt_succ α («expr ᵒᵈ» β) _ _ ψ _ _ n hψ i hi j hj hij\n#align strict_anti_on_Iic_of_succ_lt strictAntiOn_Iic_of_succ_lt\n-/\n\n",
 "strictAntiOn_Iic_of_lt_pred":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print strictAntiOn_Iic_of_lt_pred /-\ntheorem strictAntiOn_Iic_of_lt_pred [PredOrder α] [IsPredArchimedean α] {n : α} (hψ : ∀ m, n < m → ψ m < ψ (pred m)) :\n    strict_anti_on ψ (Set.Ici n) := fun i hi j hj hij =>\n  @strictAntiOn_Iic_of_succ_lt («expr ᵒᵈ» α) («expr ᵒᵈ» β) _ _ ψ _ _ n hψ j hj i hi hij\n#align strict_anti_on_Iic_of_lt_pred strictAntiOn_Iic_of_lt_pred\n-/\n\n",
 "monotone_Iio":
 "#print monotone_Iio /-\ntheorem monotone_Iio : monotone (Iio : α → set α) := fun _ _ => Iio_subset_Iio\n#align monotone_Iio monotone_Iio\n-/\n\n",
 "monotone_Iic":
 "#print monotone_Iic /-\ntheorem monotone_Iic : monotone (Iic : α → set α) := fun _ _ => Iic_subset_Iic.2\n#align monotone_Iic monotone_Iic\n-/\n\n",
 "antitone_Ioi":
 "#print antitone_Ioi /-\ntheorem antitone_Ioi : antitone (Ioi : α → set α) := fun _ _ => Ioi_subset_Ioi\n#align antitone_Ioi antitone_Ioi\n-/\n\n",
 "antitone_Ici":
 "#print antitone_Ici /-\n/-\nCopyright (c) 2021 Yury Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury Kudryashov\n-/\ntheorem antitone_Ici : antitone (Ici : α → set α) := fun _ _ => Ici_subset_Ici.2\n#align antitone_Ici antitone_Ici\n-/\n\n",
 "Ioo":
 "#print AntitoneOn.Ioo /-\nprotected theorem AntitoneOn.Ioo (hf : antitone_on f s) (hg : monotone_on g s) :\n    monotone_on (fun x => Ioo (f x) (g x)) s :=\n  hf.Ioi.inter hg.Iio\n#align antitone_on.Ioo AntitoneOn.Ioo\n-/\n\n",
 "Ioi":
 "#print AntitoneOn.Ioi /-\nprotected theorem AntitoneOn.Ioi (hf : antitone_on f s) : monotone_on (fun x => Ioi (f x)) s :=\n  antitone_Ioi.comp_antitone_on hf\n#align antitone_on.Ioi AntitoneOn.Ioi\n-/\n\n",
 "Ioc":
 "#print AntitoneOn.Ioc /-\nprotected theorem AntitoneOn.Ioc (hf : antitone_on f s) (hg : monotone_on g s) :\n    monotone_on (fun x => Ioc (f x) (g x)) s :=\n  hf.Ioi.inter hg.Iic\n#align antitone_on.Ioc AntitoneOn.Ioc\n-/\n\n",
 "Iio":
 "#print AntitoneOn.Iio /-\nprotected theorem AntitoneOn.Iio (hf : antitone_on f s) : antitone_on (fun x => Iio (f x)) s :=\n  monotone_Iio.comp_antitone_on hf\n#align antitone_on.Iio AntitoneOn.Iio\n-/\n\n",
 "Iic_le_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵈ» -/\n#print StrictMonoOn.Iic_le_id /-\ntheorem StrictMonoOn.Iic_le_id [PredOrder α] [IsPredArchimedean α] [OrderTop α] {n : α} {φ : α → α}\n    (hφ : strict_mono_on φ (Set.Ici n)) : ∀ m, n ≤ m → φ m ≤ m :=\n  @StrictMonoOn.Iic_id_le («expr ᵒᵈ» α) _ _ _ _ _ _ fun i hi j hj hij => hφ hj hi hij\n#align strict_mono_on.Iic_le_id StrictMonoOn.Iic_le_id\n-/\n\n",
 "Iic_id_le":
 "#print StrictMonoOn.Iic_id_le /-\ntheorem StrictMonoOn.Iic_id_le [SuccOrder α] [IsSuccArchimedean α] [OrderBot α] {n : α} {φ : α → α}\n    (hφ : strict_mono_on φ (Set.Iic n)) : ∀ m ≤ n, m ≤ φ m :=\n  by\n  revert hφ\n  refine' Succ.rec_bot (fun n => strict_mono_on φ (Set.Iic n) → ∀ m ≤ n, m ≤ φ m) (fun _ _ hm => hm.trans bot_le) _ _\n  rintro k ih hφ m hm\n  by_cases hk : is_max k\n  · rw [succ_eq_iff_is_max.2 hk] at hm\n    exact ih (hφ.mono <| Iic_subset_Iic.2 (le_succ _)) _ hm\n  obtain rfl | h := le_succ_iff_eq_or_le.1 hm\n  · specialize ih (StrictMonoOn.mono hφ fun x hx => le_trans hx (le_succ _)) k le_rfl\n    refine' le_trans (succ_mono ih) (succ_le_of_lt (hφ (le_succ _) le_rfl _))\n    rw [lt_succ_iff_eq_or_lt_of_not_is_max hk]\n    exact or.inl rfl\n  · exact ih (StrictMonoOn.mono hφ fun x hx => le_trans hx (le_succ _)) _ h\n#align strict_mono_on.Iic_id_le StrictMonoOn.Iic_id_le\n-/\n\n",
 "Iic":
 "#print AntitoneOn.Iic /-\nprotected theorem AntitoneOn.Iic (hf : antitone_on f s) : antitone_on (fun x => Iic (f x)) s :=\n  monotone_Iic.comp_antitone_on hf\n#align antitone_on.Iic AntitoneOn.Iic\n-/\n\n",
 "Ico":
 "#print AntitoneOn.Ico /-\nprotected theorem AntitoneOn.Ico (hf : antitone_on f s) (hg : monotone_on g s) :\n    monotone_on (fun x => Ico (f x) (g x)) s :=\n  hf.Ici.inter hg.Iio\n#align antitone_on.Ico AntitoneOn.Ico\n-/\n\n",
 "Ici":
 "#print AntitoneOn.Ici /-\nprotected theorem AntitoneOn.Ici (hf : antitone_on f s) : monotone_on (fun x => Ici (f x)) s :=\n  antitone_Ici.comp_antitone_on hf\n#align antitone_on.Ici AntitoneOn.Ici\n-/\n\n",
 "Icc":
 "#print AntitoneOn.Icc /-\nprotected theorem AntitoneOn.Icc (hf : antitone_on f s) (hg : monotone_on g s) :\n    monotone_on (fun x => Icc (f x) (g x)) s :=\n  hf.Ici.inter hg.Iic\n#align antitone_on.Icc AntitoneOn.Icc\n-/\n\n"}