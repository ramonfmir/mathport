{"preimage_sub_const_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem preimage_sub_const_uIcc : «expr ⁻¹' » (fun x => x - a) (set.uIcc b c) = set.uIcc (b + a) (c + a) := by\n  simp [sub_eq_add_neg]\n#align preimage_sub_const_uIcc preimage_sub_const_uIcc\n\n",
 "preimage_sub_const_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_sub_const_Ioo : «expr ⁻¹' » (fun x => x - a) (Ioo b c) = Ioo (b + a) (c + a) := by\n  simp [sub_eq_add_neg]\n#align preimage_sub_const_Ioo preimage_sub_const_Ioo\n\n",
 "preimage_sub_const_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_sub_const_Ioi : «expr ⁻¹' » (fun x => x - a) (Ioi b) = Ioi (b + a) := by simp [sub_eq_add_neg]\n#align preimage_sub_const_Ioi preimage_sub_const_Ioi\n\n",
 "preimage_sub_const_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_sub_const_Ioc : «expr ⁻¹' » (fun x => x - a) (Ioc b c) = Ioc (b + a) (c + a) := by\n  simp [sub_eq_add_neg]\n#align preimage_sub_const_Ioc preimage_sub_const_Ioc\n\n",
 "preimage_sub_const_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_sub_const_Iio : «expr ⁻¹' » (fun x => x - a) (Iio b) = Iio (b + a) := by simp [sub_eq_add_neg]\n#align preimage_sub_const_Iio preimage_sub_const_Iio\n\n",
 "preimage_sub_const_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_sub_const_Iic : «expr ⁻¹' » (fun x => x - a) (Iic b) = Iic (b + a) := by simp [sub_eq_add_neg]\n#align preimage_sub_const_Iic preimage_sub_const_Iic\n\n",
 "preimage_sub_const_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_sub_const_Ico : «expr ⁻¹' » (fun x => x - a) (Ico b c) = Ico (b + a) (c + a) := by\n  simp [sub_eq_add_neg]\n#align preimage_sub_const_Ico preimage_sub_const_Ico\n\n",
 "preimage_sub_const_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_sub_const_Ici : «expr ⁻¹' » (fun x => x - a) (Ici b) = Ici (b + a) := by simp [sub_eq_add_neg]\n#align preimage_sub_const_Ici preimage_sub_const_Ici\n\n",
 "preimage_sub_const_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_sub_const_Icc : «expr ⁻¹' » (fun x => x - a) (Icc b c) = Icc (b + a) (c + a) := by\n  simp [sub_eq_add_neg]\n#align preimage_sub_const_Icc preimage_sub_const_Icc\n\n",
 "preimage_neg_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem preimage_neg_uIcc : -set.uIcc a b = set.uIcc (-a) (-b) := by\n  simp only [← Icc_min_max, preimage_neg_Icc, min_neg_neg, max_neg_neg]\n#align preimage_neg_uIcc preimage_neg_uIcc\n\n",
 "preimage_neg_Ioo":
 "@[simp]\ntheorem preimage_neg_Ioo : -Ioo a b = Ioo (-b) (-a) := by simp [← Ioi_inter_Iio, inter_comm]\n#align preimage_neg_Ioo preimage_neg_Ioo\n\n",
 "preimage_neg_Ioi":
 "@[simp]\ntheorem preimage_neg_Ioi : -Ioi a = Iio (-a) :=\n  ext fun x => lt_neg\n#align preimage_neg_Ioi preimage_neg_Ioi\n\n",
 "preimage_neg_Ioc":
 "@[simp]\ntheorem preimage_neg_Ioc : -Ioc a b = Ico (-b) (-a) := by simp [← Ioi_inter_Iic, ← Ici_inter_Iio, inter_comm]\n#align preimage_neg_Ioc preimage_neg_Ioc\n\n",
 "preimage_neg_Iio":
 "@[simp]\ntheorem preimage_neg_Iio : -Iio a = Ioi (-a) :=\n  ext fun x => neg_lt\n#align preimage_neg_Iio preimage_neg_Iio\n\n",
 "preimage_neg_Iic":
 "@[simp]\ntheorem preimage_neg_Iic : -Iic a = Ici (-a) :=\n  ext fun x => neg_le\n#align preimage_neg_Iic preimage_neg_Iic\n\n",
 "preimage_neg_Ico":
 "@[simp]\ntheorem preimage_neg_Ico : -Ico a b = Ioc (-b) (-a) := by simp [← Ici_inter_Iio, ← Ioi_inter_Iic, inter_comm]\n#align preimage_neg_Ico preimage_neg_Ico\n\n",
 "preimage_neg_Ici":
 "@[simp]\ntheorem preimage_neg_Ici : -Ici a = Iic (-a) :=\n  ext fun x => le_neg\n#align preimage_neg_Ici preimage_neg_Ici\n\n",
 "preimage_neg_Icc":
 "@[simp]\ntheorem preimage_neg_Icc : -Icc a b = Icc (-b) (-a) := by simp [← Ici_inter_Iic, inter_comm]\n#align preimage_neg_Icc preimage_neg_Icc\n\n",
 "preimage_mul_const_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem preimage_mul_const_uIcc (ha : a ≠ 0) (b c : α) :\n    «expr ⁻¹' » (fun x => x * a) (set.uIcc b c) = set.uIcc (b / a) (c / a) :=\n  (lt_or_gt_of_ne ha).elim\n    (fun h => by simp [← Icc_min_max, h, h.le, min_div_div_right_of_nonpos, max_div_div_right_of_nonpos])\n    fun ha : 0 < a => by simp [← Icc_min_max, ha, ha.le, min_div_div_right, max_div_div_right]\n#align preimage_mul_const_uIcc preimage_mul_const_uIcc\n\n",
 "preimage_mul_const_Ioo_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ioo_of_neg (a b : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » (fun x => x * c) (Ioo a b) = Ioo (b / c) (a / c) := by simp [← Ioi_inter_Iio, h, inter_comm]\n#align preimage_mul_const_Ioo_of_neg preimage_mul_const_Ioo_of_neg\n\n",
 "preimage_mul_const_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ioo (a b : α) {c : α} (h : 0 < c) :\n    «expr ⁻¹' » (fun x => x * c) (Ioo a b) = Ioo (a / c) (b / c) := by simp [← Ioi_inter_Iio, h]\n#align preimage_mul_const_Ioo preimage_mul_const_Ioo\n\n",
 "preimage_mul_const_Ioi_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ioi_of_neg (a : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » (fun x => x * c) (Ioi a) = Iio (a / c) :=\n  ext fun x => (lt_div_iff_of_neg h).symm\n#align preimage_mul_const_Ioi_of_neg preimage_mul_const_Ioi_of_neg\n\n",
 "preimage_mul_const_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ioi (a : α) {c : α} (h : 0 < c) : «expr ⁻¹' » (fun x => x * c) (Ioi a) = Ioi (a / c) :=\n  ext fun x => (div_lt_iff h).symm\n#align preimage_mul_const_Ioi preimage_mul_const_Ioi\n\n",
 "preimage_mul_const_Ioc_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ioc_of_neg (a b : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » (fun x => x * c) (Ioc a b) = Ico (b / c) (a / c) := by\n  simp [← Ioi_inter_Iic, ← Ici_inter_Iio, h, inter_comm]\n#align preimage_mul_const_Ioc_of_neg preimage_mul_const_Ioc_of_neg\n\n",
 "preimage_mul_const_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ioc (a b : α) {c : α} (h : 0 < c) :\n    «expr ⁻¹' » (fun x => x * c) (Ioc a b) = Ioc (a / c) (b / c) := by simp [← Ioi_inter_Iic, h]\n#align preimage_mul_const_Ioc preimage_mul_const_Ioc\n\n",
 "preimage_mul_const_Iio_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Iio_of_neg (a : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » (fun x => x * c) (Iio a) = Ioi (a / c) :=\n  ext fun x => (div_lt_iff_of_neg h).symm\n#align preimage_mul_const_Iio_of_neg preimage_mul_const_Iio_of_neg\n\n",
 "preimage_mul_const_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Iio (a : α) {c : α} (h : 0 < c) : «expr ⁻¹' » (fun x => x * c) (Iio a) = Iio (a / c) :=\n  ext fun x => (lt_div_iff h).symm\n#align preimage_mul_const_Iio preimage_mul_const_Iio\n\n",
 "preimage_mul_const_Iic_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Iic_of_neg (a : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » (fun x => x * c) (Iic a) = Ici (a / c) :=\n  ext fun x => (div_le_iff_of_neg h).symm\n#align preimage_mul_const_Iic_of_neg preimage_mul_const_Iic_of_neg\n\n",
 "preimage_mul_const_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Iic (a : α) {c : α} (h : 0 < c) : «expr ⁻¹' » (fun x => x * c) (Iic a) = Iic (a / c) :=\n  ext fun x => (le_div_iff h).symm\n#align preimage_mul_const_Iic preimage_mul_const_Iic\n\n",
 "preimage_mul_const_Ico_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ico_of_neg (a b : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » (fun x => x * c) (Ico a b) = Ioc (b / c) (a / c) := by\n  simp [← Ici_inter_Iio, ← Ioi_inter_Iic, h, inter_comm]\n#align preimage_mul_const_Ico_of_neg preimage_mul_const_Ico_of_neg\n\n",
 "preimage_mul_const_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ico (a b : α) {c : α} (h : 0 < c) :\n    «expr ⁻¹' » (fun x => x * c) (Ico a b) = Ico (a / c) (b / c) := by simp [← Ici_inter_Iio, h]\n#align preimage_mul_const_Ico preimage_mul_const_Ico\n\n",
 "preimage_mul_const_Ici_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ici_of_neg (a : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » (fun x => x * c) (Ici a) = Iic (a / c) :=\n  ext fun x => (le_div_iff_of_neg h).symm\n#align preimage_mul_const_Ici_of_neg preimage_mul_const_Ici_of_neg\n\n",
 "preimage_mul_const_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Ici (a : α) {c : α} (h : 0 < c) : «expr ⁻¹' » (fun x => x * c) (Ici a) = Ici (a / c) :=\n  ext fun x => (div_le_iff h).symm\n#align preimage_mul_const_Ici preimage_mul_const_Ici\n\n",
 "preimage_mul_const_Icc_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Icc_of_neg (a b : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » (fun x => x * c) (Icc a b) = Icc (b / c) (a / c) := by simp [← Ici_inter_Iic, h, inter_comm]\n#align preimage_mul_const_Icc_of_neg preimage_mul_const_Icc_of_neg\n\n",
 "preimage_mul_const_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_mul_const_Icc (a b : α) {c : α} (h : 0 < c) :\n    «expr ⁻¹' » (fun x => x * c) (Icc a b) = Icc (a / c) (b / c) := by simp [← Ici_inter_Iic, h]\n#align preimage_mul_const_Icc preimage_mul_const_Icc\n\n",
 "preimage_div_const_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem preimage_div_const_uIcc (ha : a ≠ 0) (b c : α) :\n    «expr ⁻¹' » (fun x => x / a) (set.uIcc b c) = set.uIcc (b * a) (c * a) := by\n  simp only [div_eq_mul_inv, preimage_mul_const_uIcc (inv_ne_zero ha), inv_inv]\n#align preimage_div_const_uIcc preimage_div_const_uIcc\n\n",
 "preimage_const_sub_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem preimage_const_sub_uIcc : «expr ⁻¹' » (fun x => a - x) (set.uIcc b c) = set.uIcc (a - b) (a - c) :=\n  by\n  simp_rw [← Icc_min_max, preimage_const_sub_Icc]\n  simp only [sub_eq_add_neg, min_add_add_left, max_add_add_left, min_neg_neg, max_neg_neg]\n#align preimage_const_sub_uIcc preimage_const_sub_uIcc\n\n",
 "preimage_const_sub_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_sub_Ioo : «expr ⁻¹' » (fun x => a - x) (Ioo b c) = Ioo (a - c) (a - b) := by\n  simp [← Ioi_inter_Iio, inter_comm]\n#align preimage_const_sub_Ioo preimage_const_sub_Ioo\n\n",
 "preimage_const_sub_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_sub_Ioi : «expr ⁻¹' » (fun x => a - x) (Ioi b) = Iio (a - b) :=\n  ext fun x => lt_sub_comm\n#align preimage_const_sub_Ioi preimage_const_sub_Ioi\n\n",
 "preimage_const_sub_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_sub_Ioc : «expr ⁻¹' » (fun x => a - x) (Ioc b c) = Ico (a - c) (a - b) := by\n  simp [← Ioi_inter_Iic, ← Ici_inter_Iio, inter_comm]\n#align preimage_const_sub_Ioc preimage_const_sub_Ioc\n\n",
 "preimage_const_sub_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_sub_Iio : «expr ⁻¹' » (fun x => a - x) (Iio b) = Ioi (a - b) :=\n  ext fun x => sub_lt_comm\n#align preimage_const_sub_Iio preimage_const_sub_Iio\n\n",
 "preimage_const_sub_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_sub_Iic : «expr ⁻¹' » (fun x => a - x) (Iic b) = Ici (a - b) :=\n  ext fun x => sub_le_comm\n#align preimage_const_sub_Iic preimage_const_sub_Iic\n\n",
 "preimage_const_sub_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_sub_Ico : «expr ⁻¹' » (fun x => a - x) (Ico b c) = Ioc (a - c) (a - b) := by\n  simp [← Ioi_inter_Iic, ← Ici_inter_Iio, inter_comm]\n#align preimage_const_sub_Ico preimage_const_sub_Ico\n\n",
 "preimage_const_sub_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_sub_Ici : «expr ⁻¹' » (fun x => a - x) (Ici b) = Iic (a - b) :=\n  ext fun x => le_sub_comm\n#align preimage_const_sub_Ici preimage_const_sub_Ici\n\n",
 "preimage_const_sub_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_sub_Icc : «expr ⁻¹' » (fun x => a - x) (Icc b c) = Icc (a - c) (a - b) := by\n  simp [← Ici_inter_Iic, inter_comm]\n#align preimage_const_sub_Icc preimage_const_sub_Icc\n\n",
 "preimage_const_mul_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem preimage_const_mul_uIcc (ha : a ≠ 0) (b c : α) :\n    «expr ⁻¹' » (fun x => a * x) (set.uIcc b c) = set.uIcc (b / a) (c / a) := by\n  simp only [← preimage_mul_const_uIcc ha, mul_comm]\n#align preimage_const_mul_uIcc preimage_const_mul_uIcc\n\n",
 "preimage_const_mul_Ioo_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ioo_of_neg (a b : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » ((· * ·) c) (Ioo a b) = Ioo (b / c) (a / c) := by\n  simpa only [mul_comm] using preimage_mul_const_Ioo_of_neg a b h\n#align preimage_const_mul_Ioo_of_neg preimage_const_mul_Ioo_of_neg\n\n",
 "preimage_const_mul_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ioo (a b : α) {c : α} (h : 0 < c) :\n    «expr ⁻¹' » ((· * ·) c) (Ioo a b) = Ioo (a / c) (b / c) := by simp [← Ioi_inter_Iio, h]\n#align preimage_const_mul_Ioo preimage_const_mul_Ioo\n\n",
 "preimage_const_mul_Ioi_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ioi_of_neg (a : α) {c : α} (h : c < 0) : «expr ⁻¹' » ((· * ·) c) (Ioi a) = Iio (a / c) := by\n  simpa only [mul_comm] using preimage_mul_const_Ioi_of_neg a h\n#align preimage_const_mul_Ioi_of_neg preimage_const_mul_Ioi_of_neg\n\n",
 "preimage_const_mul_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ioi (a : α) {c : α} (h : 0 < c) : «expr ⁻¹' » ((· * ·) c) (Ioi a) = Ioi (a / c) :=\n  ext fun x => (div_lt_iff' h).symm\n#align preimage_const_mul_Ioi preimage_const_mul_Ioi\n\n",
 "preimage_const_mul_Ioc_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ioc_of_neg (a b : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » ((· * ·) c) (Ioc a b) = Ico (b / c) (a / c) := by\n  simpa only [mul_comm] using preimage_mul_const_Ioc_of_neg a b h\n#align preimage_const_mul_Ioc_of_neg preimage_const_mul_Ioc_of_neg\n\n",
 "preimage_const_mul_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ioc (a b : α) {c : α} (h : 0 < c) :\n    «expr ⁻¹' » ((· * ·) c) (Ioc a b) = Ioc (a / c) (b / c) := by simp [← Ioi_inter_Iic, h]\n#align preimage_const_mul_Ioc preimage_const_mul_Ioc\n\n",
 "preimage_const_mul_Iio_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Iio_of_neg (a : α) {c : α} (h : c < 0) : «expr ⁻¹' » ((· * ·) c) (Iio a) = Ioi (a / c) := by\n  simpa only [mul_comm] using preimage_mul_const_Iio_of_neg a h\n#align preimage_const_mul_Iio_of_neg preimage_const_mul_Iio_of_neg\n\n",
 "preimage_const_mul_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Iio (a : α) {c : α} (h : 0 < c) : «expr ⁻¹' » ((· * ·) c) (Iio a) = Iio (a / c) :=\n  ext fun x => (lt_div_iff' h).symm\n#align preimage_const_mul_Iio preimage_const_mul_Iio\n\n",
 "preimage_const_mul_Iic_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Iic_of_neg (a : α) {c : α} (h : c < 0) : «expr ⁻¹' » ((· * ·) c) (Iic a) = Ici (a / c) := by\n  simpa only [mul_comm] using preimage_mul_const_Iic_of_neg a h\n#align preimage_const_mul_Iic_of_neg preimage_const_mul_Iic_of_neg\n\n",
 "preimage_const_mul_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Iic (a : α) {c : α} (h : 0 < c) : «expr ⁻¹' » ((· * ·) c) (Iic a) = Iic (a / c) :=\n  ext fun x => (le_div_iff' h).symm\n#align preimage_const_mul_Iic preimage_const_mul_Iic\n\n",
 "preimage_const_mul_Ico_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ico_of_neg (a b : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » ((· * ·) c) (Ico a b) = Ioc (b / c) (a / c) := by\n  simpa only [mul_comm] using preimage_mul_const_Ico_of_neg a b h\n#align preimage_const_mul_Ico_of_neg preimage_const_mul_Ico_of_neg\n\n",
 "preimage_const_mul_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ico (a b : α) {c : α} (h : 0 < c) :\n    «expr ⁻¹' » ((· * ·) c) (Ico a b) = Ico (a / c) (b / c) := by simp [← Ici_inter_Iio, h]\n#align preimage_const_mul_Ico preimage_const_mul_Ico\n\n",
 "preimage_const_mul_Ici_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ici_of_neg (a : α) {c : α} (h : c < 0) : «expr ⁻¹' » ((· * ·) c) (Ici a) = Iic (a / c) := by\n  simpa only [mul_comm] using preimage_mul_const_Ici_of_neg a h\n#align preimage_const_mul_Ici_of_neg preimage_const_mul_Ici_of_neg\n\n",
 "preimage_const_mul_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Ici (a : α) {c : α} (h : 0 < c) : «expr ⁻¹' » ((· * ·) c) (Ici a) = Ici (a / c) :=\n  ext fun x => (div_le_iff' h).symm\n#align preimage_const_mul_Ici preimage_const_mul_Ici\n\n",
 "preimage_const_mul_Icc_of_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Icc_of_neg (a b : α) {c : α} (h : c < 0) :\n    «expr ⁻¹' » ((· * ·) c) (Icc a b) = Icc (b / c) (a / c) := by\n  simpa only [mul_comm] using preimage_mul_const_Icc_of_neg a b h\n#align preimage_const_mul_Icc_of_neg preimage_const_mul_Icc_of_neg\n\n",
 "preimage_const_mul_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_mul_Icc (a b : α) {c : α} (h : 0 < c) :\n    «expr ⁻¹' » ((· * ·) c) (Icc a b) = Icc (a / c) (b / c) := by simp [← Ici_inter_Iic, h]\n#align preimage_const_mul_Icc preimage_const_mul_Icc\n\n",
 "preimage_const_add_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem preimage_const_add_uIcc : «expr ⁻¹' » (fun x => a + x) (set.uIcc b c) = set.uIcc (b - a) (c - a) := by\n  simp only [← Icc_min_max, preimage_const_add_Icc, min_sub_sub_right, max_sub_sub_right]\n#align preimage_const_add_uIcc preimage_const_add_uIcc\n\n",
 "preimage_const_add_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_add_Ioo : «expr ⁻¹' » (fun x => a + x) (Ioo b c) = Ioo (b - a) (c - a) := by\n  simp [← Ioi_inter_Iio]\n#align preimage_const_add_Ioo preimage_const_add_Ioo\n\n",
 "preimage_const_add_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_add_Ioi : «expr ⁻¹' » (fun x => a + x) (Ioi b) = Ioi (b - a) :=\n  ext fun x => sub_lt_iff_lt_add'.symm\n#align preimage_const_add_Ioi preimage_const_add_Ioi\n\n",
 "preimage_const_add_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_add_Ioc : «expr ⁻¹' » (fun x => a + x) (Ioc b c) = Ioc (b - a) (c - a) := by\n  simp [← Ioi_inter_Iic]\n#align preimage_const_add_Ioc preimage_const_add_Ioc\n\n",
 "preimage_const_add_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_add_Iio : «expr ⁻¹' » (fun x => a + x) (Iio b) = Iio (b - a) :=\n  ext fun x => lt_sub_iff_add_lt'.symm\n#align preimage_const_add_Iio preimage_const_add_Iio\n\n",
 "preimage_const_add_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_add_Iic : «expr ⁻¹' » (fun x => a + x) (Iic b) = Iic (b - a) :=\n  ext fun x => le_sub_iff_add_le'.symm\n#align preimage_const_add_Iic preimage_const_add_Iic\n\n",
 "preimage_const_add_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_add_Ico : «expr ⁻¹' » (fun x => a + x) (Ico b c) = Ico (b - a) (c - a) := by\n  simp [← Ici_inter_Iio]\n#align preimage_const_add_Ico preimage_const_add_Ico\n\n",
 "preimage_const_add_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/-\nCopyright (c) 2020 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov, Patrick Massot\n-/\n@[simp]\ntheorem preimage_const_add_Ici : «expr ⁻¹' » (fun x => a + x) (Ici b) = Ici (b - a) :=\n  ext fun x => sub_le_iff_le_add'.symm\n#align preimage_const_add_Ici preimage_const_add_Ici\n\n",
 "preimage_const_add_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_const_add_Icc : «expr ⁻¹' » (fun x => a + x) (Icc b c) = Icc (b - a) (c - a) := by\n  simp [← Ici_inter_Iic]\n#align preimage_const_add_Icc preimage_const_add_Icc\n\n",
 "preimage_add_const_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem preimage_add_const_uIcc : «expr ⁻¹' » (fun x => x + a) (set.uIcc b c) = set.uIcc (b - a) (c - a) := by\n  simpa only [add_comm] using preimage_const_add_uIcc a b c\n#align preimage_add_const_uIcc preimage_add_const_uIcc\n\n",
 "preimage_add_const_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_add_const_Ioo : «expr ⁻¹' » (fun x => x + a) (Ioo b c) = Ioo (b - a) (c - a) := by\n  simp [← Ioi_inter_Iio]\n#align preimage_add_const_Ioo preimage_add_const_Ioo\n\n",
 "preimage_add_const_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_add_const_Ioi : «expr ⁻¹' » (fun x => x + a) (Ioi b) = Ioi (b - a) :=\n  ext fun x => sub_lt_iff_lt_add.symm\n#align preimage_add_const_Ioi preimage_add_const_Ioi\n\n",
 "preimage_add_const_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_add_const_Ioc : «expr ⁻¹' » (fun x => x + a) (Ioc b c) = Ioc (b - a) (c - a) := by\n  simp [← Ioi_inter_Iic]\n#align preimage_add_const_Ioc preimage_add_const_Ioc\n\n",
 "preimage_add_const_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_add_const_Iio : «expr ⁻¹' » (fun x => x + a) (Iio b) = Iio (b - a) :=\n  ext fun x => lt_sub_iff_add_lt.symm\n#align preimage_add_const_Iio preimage_add_const_Iio\n\n",
 "preimage_add_const_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_add_const_Iic : «expr ⁻¹' » (fun x => x + a) (Iic b) = Iic (b - a) :=\n  ext fun x => le_sub_iff_add_le.symm\n#align preimage_add_const_Iic preimage_add_const_Iic\n\n",
 "preimage_add_const_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_add_const_Ico : «expr ⁻¹' » (fun x => x + a) (Ico b c) = Ico (b - a) (c - a) := by\n  simp [← Ici_inter_Iio]\n#align preimage_add_const_Ico preimage_add_const_Ico\n\n",
 "preimage_add_const_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_add_const_Ici : «expr ⁻¹' » (fun x => x + a) (Ici b) = Ici (b - a) :=\n  ext fun x => sub_le_iff_le_add.symm\n#align preimage_add_const_Ici preimage_add_const_Ici\n\n",
 "preimage_add_const_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n@[simp]\ntheorem preimage_add_const_Icc : «expr ⁻¹' » (fun x => x + a) (Icc b c) = Icc (b - a) (c - a) := by\n  simp [← Ici_inter_Iic]\n#align preimage_add_const_Icc preimage_add_const_Icc\n\n",
 "inv_Ioo_0_left":
 "/-- The (pre)image under `inv` of `Ioo 0 a` is `Ioi a⁻¹`. -/\ntheorem inv_Ioo_0_left {a : α} (ha : 0 < a) : (Ioo 0 a)⁻¹ = Ioi a⁻¹ :=\n  by\n  ext x\n  exact\n    ⟨fun h => inv_inv x ▸ (inv_lt_inv ha h.1).2 h.2, fun h =>\n      ⟨inv_pos.2 <| (inv_pos.2 ha).trans h, inv_inv a ▸ (inv_lt_inv ((inv_pos.2 ha).trans h) (inv_pos.2 ha)).2 h⟩⟩\n#align inv_Ioo_0_left inv_Ioo_0_left\n\n",
 "inv_Ioi":
 "theorem inv_Ioi {a : α} (ha : 0 < a) : (Ioi a)⁻¹ = Ioo 0 a⁻¹ := by\n  rw [inv_eq_iff_eq_inv, inv_Ioo_0_left (inv_pos.2 ha), inv_inv]\n#align inv_Ioi inv_Ioi\n\n",
 "image_sub_const_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem image_sub_const_uIcc : «expr '' » (fun x => x - a) (set.uIcc b c) = set.uIcc (b - a) (c - a) := by\n  simp [sub_eq_add_neg, add_comm]\n#align image_sub_const_uIcc image_sub_const_uIcc\n\n",
 "image_sub_const_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_sub_const_Ioo : «expr '' » (fun x => x - a) (Ioo b c) = Ioo (b - a) (c - a) := by simp [sub_eq_neg_add]\n#align image_sub_const_Ioo image_sub_const_Ioo\n\n",
 "image_sub_const_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_sub_const_Ioi : «expr '' » (fun x => x - a) (Ioi b) = Ioi (b - a) := by simp [sub_eq_neg_add]\n#align image_sub_const_Ioi image_sub_const_Ioi\n\n",
 "image_sub_const_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_sub_const_Ioc : «expr '' » (fun x => x - a) (Ioc b c) = Ioc (b - a) (c - a) := by simp [sub_eq_neg_add]\n#align image_sub_const_Ioc image_sub_const_Ioc\n\n",
 "image_sub_const_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_sub_const_Iio : «expr '' » (fun x => x - a) (Iio b) = Iio (b - a) := by simp [sub_eq_neg_add]\n#align image_sub_const_Iio image_sub_const_Iio\n\n",
 "image_sub_const_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_sub_const_Iic : «expr '' » (fun x => x - a) (Iic b) = Iic (b - a) := by simp [sub_eq_neg_add]\n#align image_sub_const_Iic image_sub_const_Iic\n\n",
 "image_sub_const_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_sub_const_Ico : «expr '' » (fun x => x - a) (Ico b c) = Ico (b - a) (c - a) := by simp [sub_eq_neg_add]\n#align image_sub_const_Ico image_sub_const_Ico\n\n",
 "image_sub_const_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_sub_const_Ici : «expr '' » (fun x => x - a) (Ici b) = Ici (b - a) := by simp [sub_eq_neg_add]\n#align image_sub_const_Ici image_sub_const_Ici\n\n",
 "image_sub_const_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_sub_const_Icc : «expr '' » (fun x => x - a) (Icc b c) = Icc (b - a) (c - a) := by simp [sub_eq_neg_add]\n#align image_sub_const_Icc image_sub_const_Icc\n\n",
 "image_neg_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\ntheorem image_neg_uIcc : «expr '' » has_neg.neg (set.uIcc a b) = set.uIcc (-a) (-b) := by simp\n#align image_neg_uIcc image_neg_uIcc\n\n",
 "image_neg_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_neg_Ioo : «expr '' » has_neg.neg (Ioo a b) = Ioo (-b) (-a) := by simp\n#align image_neg_Ioo image_neg_Ioo\n\n",
 "image_neg_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_neg_Ioi : «expr '' » has_neg.neg (Ioi a) = Iio (-a) := by simp\n#align image_neg_Ioi image_neg_Ioi\n\n",
 "image_neg_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_neg_Ioc : «expr '' » has_neg.neg (Ioc a b) = Ico (-b) (-a) := by simp\n#align image_neg_Ioc image_neg_Ioc\n\n",
 "image_neg_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_neg_Iio : «expr '' » has_neg.neg (Iio a) = Ioi (-a) := by simp\n#align image_neg_Iio image_neg_Iio\n\n",
 "image_neg_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_neg_Iic : «expr '' » has_neg.neg (Iic a) = Ici (-a) := by simp\n#align image_neg_Iic image_neg_Iic\n\n",
 "image_neg_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_neg_Ico : «expr '' » has_neg.neg (Ico a b) = Ioc (-b) (-a) := by simp\n#align image_neg_Ico image_neg_Ico\n\n",
 "image_neg_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_neg_Ici : «expr '' » has_neg.neg (Ici a) = Iic (-a) := by simp\n#align image_neg_Ici image_neg_Ici\n\n",
 "image_neg_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_neg_Icc : «expr '' » has_neg.neg (Icc a b) = Icc (-b) (-a) := by simp\n#align image_neg_Icc image_neg_Icc\n\n",
 "image_mul_right_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_mul_right_Ioo (a b : α) {c : α} (h : 0 < c) :\n    «expr '' » (fun x => x * c) (Ioo a b) = Ioo (a * c) (b * c) :=\n  ((Units.mk0 c h.ne').mul_right.image_eq_preimage _).trans (by simp [h, division_def])\n#align image_mul_right_Ioo image_mul_right_Ioo\n\n",
 "image_mul_right_Icc'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_mul_right_Icc' (a b : α) {c : α} (h : 0 < c) :\n    «expr '' » (fun x => x * c) (Icc a b) = Icc (a * c) (b * c) :=\n  ((Units.mk0 c h.ne').mul_right.image_eq_preimage _).trans (by simp [h, division_def])\n#align image_mul_right_Icc' image_mul_right_Icc'\n\n",
 "image_mul_right_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_mul_right_Icc {a b c : α} (hab : a ≤ b) (hc : 0 ≤ c) :\n    «expr '' » (fun x => x * c) (Icc a b) = Icc (a * c) (b * c) :=\n  by\n  cases eq_or_lt_of_le hc\n  · subst c\n    simp [(nonempty_Icc.2 hab).image_const]\n  exact image_mul_right_Icc' a b ‹0 < c›\n#align image_mul_right_Icc image_mul_right_Icc\n\n",
 "image_mul_left_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_mul_left_Ioo {a : α} (h : 0 < a) (b c : α) : «expr '' » ((· * ·) a) (Ioo b c) = Ioo (a * b) (a * c) := by\n  convert image_mul_right_Ioo b c h using 1 <;> simp only [mul_comm _ a]\n#align image_mul_left_Ioo image_mul_left_Ioo\n\n",
 "image_mul_left_Icc'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_mul_left_Icc' {a : α} (h : 0 < a) (b c : α) : «expr '' » ((· * ·) a) (Icc b c) = Icc (a * b) (a * c) := by\n  convert image_mul_right_Icc' b c h using 1 <;> simp only [mul_comm _ a]\n#align image_mul_left_Icc' image_mul_left_Icc'\n\n",
 "image_mul_left_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_mul_left_Icc {a b c : α} (ha : 0 ≤ a) (hbc : b ≤ c) :\n    «expr '' » ((· * ·) a) (Icc b c) = Icc (a * b) (a * c) := by\n  convert image_mul_right_Icc hbc ha using 1 <;> simp only [mul_comm _ a]\n#align image_mul_left_Icc image_mul_left_Icc\n\n",
 "image_mul_const_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem image_mul_const_uIcc (a b c : α) : «expr '' » (fun x => x * a) (set.uIcc b c) = set.uIcc (b * a) (c * a) :=\n  if ha : a = 0 then by simp [ha]\n  else\n    calc\n      «expr '' » (fun x => x * a) (set.uIcc b c) = «expr ⁻¹' » (fun x => x * a⁻¹) (set.uIcc b c) :=\n        (Units.mk0 a ha).mul_right.image_eq_preimage _\n      _ = «expr ⁻¹' » (fun x => x / a) (set.uIcc b c) := by simp only [div_eq_mul_inv]\n      _ = set.uIcc (b * a) (c * a) := preimage_div_const_uIcc ha _ _\n      \n#align image_mul_const_uIcc image_mul_const_uIcc\n\n",
 "image_div_const_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem image_div_const_uIcc (a b c : α) : «expr '' » (fun x => x / a) (set.uIcc b c) = set.uIcc (b / a) (c / a) := by\n  simp only [div_eq_mul_inv, image_mul_const_uIcc]\n#align image_div_const_uIcc image_div_const_uIcc\n\n",
 "image_const_sub_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem image_const_sub_uIcc : «expr '' » (fun x => a - x) (set.uIcc b c) = set.uIcc (a - b) (a - c) := by\n  simp [sub_eq_add_neg, image_comp (fun x => a + x) fun x => -x]\n#align image_const_sub_uIcc image_const_sub_uIcc\n\n",
 "image_const_sub_Ioo":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_sub_Ioo : «expr '' » (fun x => a - x) (Ioo b c) = Ioo (a - c) (a - b) := by\n  simp [sub_eq_add_neg, image_comp (fun x => a + x) fun x => -x, add_comm]\n#align image_const_sub_Ioo image_const_sub_Ioo\n\n",
 "image_const_sub_Ioi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_sub_Ioi : «expr '' » (fun x => a - x) (Ioi b) = Iio (a - b) := by\n  simp [sub_eq_add_neg, image_comp (fun x => a + x) fun x => -x]\n#align image_const_sub_Ioi image_const_sub_Ioi\n\n",
 "image_const_sub_Ioc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_sub_Ioc : «expr '' » (fun x => a - x) (Ioc b c) = Ico (a - c) (a - b) := by\n  simp [sub_eq_add_neg, image_comp (fun x => a + x) fun x => -x, add_comm]\n#align image_const_sub_Ioc image_const_sub_Ioc\n\n",
 "image_const_sub_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_sub_Iio : «expr '' » (fun x => a - x) (Iio b) = Ioi (a - b) := by\n  simp [sub_eq_add_neg, image_comp (fun x => a + x) fun x => -x, add_comm]\n#align image_const_sub_Iio image_const_sub_Iio\n\n",
 "image_const_sub_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_sub_Iic : «expr '' » (fun x => a - x) (Iic b) = Ici (a - b) := by\n  simp [sub_eq_add_neg, image_comp (fun x => a + x) fun x => -x, add_comm]\n#align image_const_sub_Iic image_const_sub_Iic\n\n",
 "image_const_sub_Ico":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_sub_Ico : «expr '' » (fun x => a - x) (Ico b c) = Ioc (a - c) (a - b) := by\n  simp [sub_eq_add_neg, image_comp (fun x => a + x) fun x => -x, add_comm]\n#align image_const_sub_Ico image_const_sub_Ico\n\n",
 "image_const_sub_Ici":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_sub_Ici : «expr '' » (fun x => a - x) (Ici b) = Iic (a - b) := by\n  simp [sub_eq_add_neg, image_comp (fun x => a + x) fun x => -x]\n#align image_const_sub_Ici image_const_sub_Ici\n\n",
 "image_const_sub_Icc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_sub_Icc : «expr '' » (fun x => a - x) (Icc b c) = Icc (a - c) (a - b) := by\n  simp [sub_eq_add_neg, image_comp (fun x => a + x) fun x => -x, add_comm]\n#align image_const_sub_Icc image_const_sub_Icc\n\n",
 "image_const_mul_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem image_const_mul_uIcc (a b c : α) : «expr '' » (fun x => a * x) (set.uIcc b c) = set.uIcc (a * b) (a * c) := by\n  simpa only [mul_comm] using image_mul_const_uIcc a b c\n#align image_const_mul_uIcc image_const_mul_uIcc\n\n",
 "image_const_mul_Ioi_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_const_mul_Ioi_zero {k : Type _} [LinearOrderedField k] {x : k} (hx : 0 < x) :\n    «expr '' » (fun y => x * y) (Ioi (0 : k)) = Ioi 0 := by\n  erw [(Units.mk0 x hx.ne').mul_left.image_eq_preimage, preimage_const_mul_Ioi 0 (inv_pos.mpr hx), zero_div]\n#align image_const_mul_Ioi_zero image_const_mul_Ioi_zero\n\n",
 "image_const_add_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem image_const_add_uIcc : «expr '' » (fun x => a + x) (set.uIcc b c) = set.uIcc (a + b) (a + c) := by\n  simp [add_comm]\n#align image_const_add_uIcc image_const_add_uIcc\n\n",
 "image_const_add_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_add_Iio : «expr '' » (fun x => a + x) (Iio b) = Iio (a + b) := by simp [add_comm]\n#align image_const_add_Iio image_const_add_Iio\n\n",
 "image_const_add_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_const_add_Iic : «expr '' » (fun x => a + x) (Iic b) = Iic (a + b) := by simp [add_comm]\n#align image_const_add_Iic image_const_add_Iic\n\n",
 "image_affine_Icc'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_affine_Icc' {a : α} (h : 0 < a) (b c d : α) :\n    «expr '' » (fun x => a * x + b) (Icc c d) = Icc (a * c + b) (a * d + b) :=\n  by\n  suffices «expr '' » (fun x => x + b) («expr '' » (fun x => a * x) (Icc c d)) = Icc (a * c + b) (a * d + b) by\n    rwa [Set.image_image] at this\n  rw [image_mul_left_Icc' h, image_add_const_Icc]\n#align image_affine_Icc' image_affine_Icc'\n\n",
 "image_add_const_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n@[simp]\ntheorem image_add_const_uIcc : «expr '' » (fun x => x + a) (set.uIcc b c) = set.uIcc (b + a) (c + a) := by simp\n#align image_add_const_uIcc image_add_const_uIcc\n\n",
 "image_add_const_Iio":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_add_const_Iio : «expr '' » (fun x => x + a) (Iio b) = Iio (b + a) := by simp\n#align image_add_const_Iio image_add_const_Iio\n\n",
 "image_add_const_Iic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n@[simp]\ntheorem image_add_const_Iic : «expr '' » (fun x => x + a) (Iic b) = Iic (b + a) := by simp\n#align image_add_const_Iic image_add_const_Iic\n\n",
 "abs_sub_right_of_mem_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/-- If `x ∈ [a, b]`, then the distance between `c` and `b` is less than or equal to\nthat of `a` and `b`  -/\ntheorem abs_sub_right_of_mem_uIcc (h : c ∈ set.uIcc a b) : |b - c| ≤ |b - a| :=\n  abs_sub_le_of_uIcc_subset_uIcc <| uIcc_subset_uIcc_right h\n#align abs_sub_right_of_mem_uIcc abs_sub_right_of_mem_uIcc\n\n",
 "abs_sub_left_of_mem_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/-- If `c ∈ [a, b]`, then the distance between `a` and `c` is less than or equal to\nthat of `a` and `b`  -/\ntheorem abs_sub_left_of_mem_uIcc (h : c ∈ set.uIcc a b) : |c - a| ≤ |b - a| :=\n  abs_sub_le_of_uIcc_subset_uIcc <| uIcc_subset_uIcc_left h\n#align abs_sub_left_of_mem_uIcc abs_sub_left_of_mem_uIcc\n\n",
 "abs_sub_le_of_uIcc_subset_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `set.uIcc -/\n/-- If `[c, d]` is a subinterval of `[a, b]`, then the distance between `c` and `d` is less than or\nequal to that of `a` and `b` -/\ntheorem abs_sub_le_of_uIcc_subset_uIcc (h : set.uIcc c d ⊆ set.uIcc a b) : |d - c| ≤ |b - a| :=\n  by\n  rw [← max_sub_min_eq_abs, ← max_sub_min_eq_abs]\n  rw [uIcc_subset_uIcc_iff_le] at h\n  exact sub_le_sub h.2 h.1\n#align abs_sub_le_of_uIcc_subset_uIcc abs_sub_le_of_uIcc_subset_uIcc\n\n",
 "Iio_add_bij":
 "theorem Iio_add_bij : BijOn (· + a) (Iio b) (Iio (b + a)) :=\n  image_add_const_Iio a b ▸ ((add_left_injective _).inj_on _).bij_on_image\n#align Iio_add_bij Iio_add_bij\n\n",
 "Iic_add_bij":
 "theorem Iic_add_bij : BijOn (· + a) (Iic b) (Iic (b + a)) :=\n  image_add_const_Iic a b ▸ ((add_left_injective _).inj_on _).bij_on_image\n#align Iic_add_bij Iic_add_bij\n\n"}