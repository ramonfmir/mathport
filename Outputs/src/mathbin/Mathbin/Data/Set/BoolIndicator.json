{"preimage_bool_indicator_tt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem preimage_bool_indicator_tt : «expr ⁻¹' » s.bool_indicator {true} = s :=\n  ext fun x => (s.mem_iff_bool_indicator x).symm\n#align preimage_bool_indicator_tt preimage_bool_indicator_tt\n\n",
 "preimage_bool_indicator_ff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem preimage_bool_indicator_ff : «expr ⁻¹' » s.bool_indicator {false} = «expr ᶜ» s :=\n  ext fun x => (s.not_mem_iff_bool_indicator x).symm\n#align preimage_bool_indicator_ff preimage_bool_indicator_ff\n\n",
 "preimage_bool_indicator_eq_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\ntheorem preimage_bool_indicator_eq_union (t : set bool) :\n    «expr ⁻¹' » s.bool_indicator t = (if tt ∈ t then s else ∅) ∪ if ff ∈ t then «expr ᶜ» s else ∅ :=\n  by\n  ext x\n  dsimp [bool_indicator]\n  split_ifs <;> tauto\n#align preimage_bool_indicator_eq_union preimage_bool_indicator_eq_union\n\n",
 "preimage_bool_indicator":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᶜ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⁻¹' » -/\ntheorem preimage_bool_indicator (t : set bool) :\n    «expr ⁻¹' » s.bool_indicator t = univ ∨\n      «expr ⁻¹' » s.bool_indicator t = s ∨\n        «expr ⁻¹' » s.bool_indicator t = «expr ᶜ» s ∨ «expr ⁻¹' » s.bool_indicator t = ∅ :=\n  by\n  simp only [preimage_bool_indicator_eq_union]\n  split_ifs <;> simp [s.union_compl_self]\n#align preimage_bool_indicator preimage_bool_indicator\n\n",
 "not_mem_iff_bool_indicator":
 "theorem not_mem_iff_bool_indicator (x : α) : x ∉ s ↔ s.bool_indicator x = ff :=\n  by\n  unfold bool_indicator\n  split_ifs <;> tauto\n#align not_mem_iff_bool_indicator not_mem_iff_bool_indicator\n\n",
 "mem_iff_bool_indicator":
 "/-\nCopyright (c) 2022 Dagur Tómas Ásgeirsson. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Dagur Tómas Ásgeirsson, Leonardo de Moura\n-/\ntheorem mem_iff_bool_indicator (x : α) : x ∈ s ↔ s.bool_indicator x = tt :=\n  by\n  unfold bool_indicator\n  split_ifs <;> tauto\n#align mem_iff_bool_indicator mem_iff_bool_indicator\n\n"}