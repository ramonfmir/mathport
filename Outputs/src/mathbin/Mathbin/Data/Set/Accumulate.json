{"subset_accumulate":
 "theorem subset_accumulate [preorder α] {x : α} : s x ⊆ Accumulate s x := fun z => mem_bunionᵢ le_rfl\n#align subset_accumulate subset_accumulate\n\n",
 "monotone_accumulate":
 "theorem monotone_accumulate [preorder α] : Monotone (Accumulate s) := fun x y hxy =>\n  bunionᵢ_subset_bunionᵢ_left fun z hz => le_trans hz hxy\n#align monotone_accumulate monotone_accumulate\n\n",
 "mem_accumulate":
 "@[simp]\ntheorem mem_accumulate [LE α] {x : α} {z : β} : z ∈ Accumulate s x ↔ ∃ y ≤ x, z ∈ s y :=\n  mem_unionᵢ₂\n#align mem_accumulate mem_accumulate\n\n",
 "bUnion_accumulate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem bUnion_accumulate [preorder α] (x : α) :\n    «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (Accumulate s y) =\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s y) :=\n  by\n  apply subset.antisymm\n  · exact Union₂_subset fun y hy => monotone_accumulate hy\n  · exact Union₂_mono fun y hy => subset_accumulate\n#align bUnion_accumulate bUnion_accumulate\n\n",
 "accumulate_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/-\nCopyright (c) 2020 Floris van Doorn. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Floris van Doorn\n-/\ntheorem accumulate_def [LE α] {x : α} :\n    Accumulate s x =\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s y) :=\n  rfl\n#align accumulate_def accumulate_def\n\n",
 "Union_accumulate":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\ntheorem Union_accumulate [preorder α] :\n    «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (Accumulate s x) =\n      «expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s x) :=\n  by\n  apply subset.antisymm\n  · simp only [subset_def, mem_Union, exists_imp, mem_accumulate]\n    intro z x x' hx'x hz\n    exact ⟨x', hz⟩\n  · exact Union_mono fun i => subset_accumulate\n#align Union_accumulate Union_accumulate\n\n"}