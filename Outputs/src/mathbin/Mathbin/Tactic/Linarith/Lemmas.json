{"zero_mul_eq":
 "-- used in the `nlinarith` normalization steps. The `_` argument is for uniformity.\n@[nolint unused_arguments]\ntheorem zero_mul_eq {α} {R : α → α → Prop} [Semiring α] {a b : α} (h : a = 0) (_ : R b 0) : a * b = 0 := by simp [h]\n#align zero_mul_eq zero_mul_eq\n\n",
 "zero_lt_one":
 "#print zero_lt_one /-\n/-\nCopyright (c) 2020 Robert Y. Lewis. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Robert Y. Lewis\n-/\ntheorem zero_lt_one {α} [OrderedSemiring α] [Nontrivial α] : (0 : α) < 1 :=\n  zero_lt_one\n#align zero_lt_one zero_lt_one\n-/\n\n",
 "mul_zero_eq":
 "-- used in the `nlinarith` normalization steps. The `_` argument is for uniformity.\n@[nolint unused_arguments]\ntheorem mul_zero_eq {α} {R : α → α → Prop} [Semiring α] {a b : α} (_ : R a 0) (h : b = 0) : a * b = 0 := by simp [h]\n#align mul_zero_eq mul_zero_eq\n\n",
 "mul_nonpos":
 "theorem mul_nonpos {α} [OrderedRing α] {a b : α} (ha : a ≤ 0) (hb : 0 < b) : b * a ≤ 0 :=\n  by\n  have : -b * a ≥ 0 := mul_nonneg_of_nonpos_of_nonpos (le_of_lt (neg_neg_of_pos hb)) ha\n  simpa\n#align mul_nonpos mul_nonpos\n\n",
 "mul_neg":
 "#print mul_neg /-\ntheorem mul_neg {α} [StrictOrderedRing α] {a b : α} (ha : a < 0) (hb : 0 < b) : b * a < 0 :=\n  have : -b * a > 0 := mul_pos_of_neg_of_neg (neg_neg_of_pos hb) ha\n  neg_of_neg_pos (by simpa)\n#align mul_neg mul_neg\n-/\n\n",
 "mul_eq":
 "-- used alongside `mul_neg` and `mul_nonpos`, so has the same argument pattern for uniformity\n@[nolint unused_arguments]\ntheorem mul_eq {α} [OrderedSemiring α] {a b : α} (ha : a = 0) (hb : 0 < b) : b * a = 0 := by simp [*]\n#align mul_eq mul_eq\n\n",
 "lt_of_lt_of_eq":
 "#print lt_of_lt_of_eq /-\ntheorem lt_of_lt_of_eq {α} [OrderedSemiring α] {a b : α} (ha : a < 0) (hb : b = 0) : a + b < 0 := by simp [*]\n#align lt_of_lt_of_eq lt_of_lt_of_eq\n-/\n\n",
 "lt_of_eq_of_lt":
 "#print lt_of_eq_of_lt /-\ntheorem lt_of_eq_of_lt {α} [OrderedSemiring α] {a b : α} (ha : a = 0) (hb : b < 0) : a + b < 0 := by simp [*]\n#align lt_of_eq_of_lt lt_of_eq_of_lt\n-/\n\n",
 "le_of_le_of_eq":
 "#print le_of_le_of_eq /-\ntheorem le_of_le_of_eq {α} [OrderedSemiring α] {a b : α} (ha : a ≤ 0) (hb : b = 0) : a + b ≤ 0 := by simp [*]\n#align le_of_le_of_eq le_of_le_of_eq\n-/\n\n",
 "le_of_eq_of_le":
 "#print le_of_eq_of_le /-\ntheorem le_of_eq_of_le {α} [OrderedSemiring α] {a b : α} (ha : a = 0) (hb : b ≤ 0) : a + b ≤ 0 := by simp [*]\n#align le_of_eq_of_le le_of_eq_of_le\n-/\n\n",
 "eq_of_not_lt_of_not_gt":
 "theorem eq_of_not_lt_of_not_gt {α} [linear_order α] (a b : α) (h1 : ¬a < b) (h2 : ¬b < a) : a = b :=\n  le_antisymm (le_of_not_gt h2) (le_of_not_gt h1)\n#align eq_of_not_lt_of_not_gt eq_of_not_lt_of_not_gt\n\n",
 "eq_of_eq_of_eq":
 "theorem eq_of_eq_of_eq {α} [OrderedSemiring α] {a b : α} (ha : a = 0) (hb : b = 0) : a + b = 0 := by simp [*]\n#align eq_of_eq_of_eq eq_of_eq_of_eq\n\n"}