{"sub_subst":
 "theorem sub_subst {α} [Ring α] {n e1 e2 t1 t2 : α} (h1 : n * e1 = t1) (h2 : n * e2 = t2) : n * (e1 - e2) = t1 - t2 := by\n  simp [left_distrib, *, sub_eq_add_neg]\n#align sub_subst sub_subst\n\n",
 "neg_subst":
 "theorem neg_subst {α} [Ring α] {n e t : α} (h1 : n * e = t) : n * -e = -t := by simp [*]\n#align neg_subst neg_subst\n\n",
 "mul_subst":
 "/-\nCopyright (c) 2020 Robert Y. Lewis. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Robert Y. Lewis\n-/\ntheorem mul_subst {α} [CommRing α] {n1 n2 k e1 e2 t1 t2 : α} (h1 : n1 * e1 = t1) (h2 : n2 * e2 = t2)\n    (h3 : n1 * n2 = k) : k * (e1 * e2) = t1 * t2 := by\n  rw [← h3, mul_comm n1, mul_assoc n2, ← mul_assoc n1, h1, ← mul_assoc n2, mul_comm n2, mul_assoc, h2]\n#align mul_subst mul_subst\n\n",
 "div_subst":
 "theorem div_subst {α} [Field α] {n1 n2 k e1 e2 t1 : α} (h1 : n1 * e1 = t1) (h2 : n2 / e2 = 1) (h3 : n1 * n2 = k) :\n    k * (e1 / e2) = t1 := by rw [← h3, mul_assoc, mul_div_left_comm, h2, ← mul_assoc, h1, mul_comm, one_mul]\n#align div_subst div_subst\n\n",
 "cancel_factors_lt":
 "theorem cancel_factors_lt {α} [LinearOrderedField α] {a b ad bd a' b' gcd : α} (ha : ad * a = a') (hb : bd * b = b')\n    (had : 0 < ad) (hbd : 0 < bd) (hgcd : 0 < gcd) : (a < b) = (1 / gcd * (bd * a') < 1 / gcd * (ad * b')) :=\n  by\n  rw [mul_lt_mul_left, ← ha, ← hb, ← mul_assoc, ← mul_assoc, mul_comm bd, mul_lt_mul_left]\n  exact mul_pos had hbd\n  exact one_div_pos.2 hgcd\n#align cancel_factors_lt cancel_factors_lt\n\n",
 "cancel_factors_le":
 "theorem cancel_factors_le {α} [LinearOrderedField α] {a b ad bd a' b' gcd : α} (ha : ad * a = a') (hb : bd * b = b')\n    (had : 0 < ad) (hbd : 0 < bd) (hgcd : 0 < gcd) : (a ≤ b) = (1 / gcd * (bd * a') ≤ 1 / gcd * (ad * b')) :=\n  by\n  rw [mul_le_mul_left, ← ha, ← hb, ← mul_assoc, ← mul_assoc, mul_comm bd, mul_le_mul_left]\n  exact mul_pos had hbd\n  exact one_div_pos.2 hgcd\n#align cancel_factors_le cancel_factors_le\n\n",
 "cancel_factors_eq_div":
 "theorem cancel_factors_eq_div {α} [Field α] {n e e' : α} (h : n * e = e') (h2 : n ≠ 0) : e = e' / n :=\n  eq_div_of_mul_eq h2 <| by rwa [mul_comm] at h\n#align cancel_factors_eq_div cancel_factors_eq_div\n\n",
 "cancel_factors_eq":
 "theorem cancel_factors_eq {α} [LinearOrderedField α] {a b ad bd a' b' gcd : α} (ha : ad * a = a') (hb : bd * b = b')\n    (had : 0 < ad) (hbd : 0 < bd) (hgcd : 0 < gcd) : (a = b) = (1 / gcd * (bd * a') = 1 / gcd * (ad * b')) :=\n  by\n  rw [← ha, ← hb, ← mul_assoc bd, ← mul_assoc ad, mul_comm bd]\n  ext; constructor\n  · rintro rfl\n    rfl\n  · intro h\n    simp only [← mul_assoc] at h\n    refine' mul_left_cancel₀ (mul_ne_zero _ _) h\n    apply mul_ne_zero\n    apply div_ne_zero\n    all_goals apply ne_of_gt <;> first |assumption|exact zero_lt_one\n#align cancel_factors_eq cancel_factors_eq\n\n",
 "add_subst":
 "theorem add_subst {α} [Ring α] {n e1 e2 t1 t2 : α} (h1 : n * e1 = t1) (h2 : n * e2 = t2) : n * (e1 + e2) = t1 + t2 := by\n  simp [left_distrib, *]\n#align add_subst add_subst\n\n"}