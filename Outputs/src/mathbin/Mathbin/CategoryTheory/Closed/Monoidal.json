{"uncurry_pre":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem uncurry_pre (f : «expr ⟶ » B A) (X : C) :\n    MonoidalClosed.uncurry ((pre f).app X) = «expr ≫ » (tensor_iso f ((«expr𝟙») _)) ((ihom.ev A).app X) := by\n  rw [uncurry_eq, id_tensor_pre_app_comp_ev]\n#align uncurry_pre uncurry_pre\n\n",
 "uncurry_natural_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem uncurry_natural_right (f : «expr ⟶ » X (ihom A C Y)) (g : «expr ⟶ » Y Y') :\n    uncurry («expr ≫ » f ((ihom _).map g)) = «expr ≫ » (uncurry f) g :=\n  Adjunction.homEquiv_naturality_right_symm _ _ _\n#align uncurry_natural_right uncurry_natural_right\n\n",
 "uncurry_natural_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[reassoc.1]\ntheorem uncurry_natural_left (f : «expr ⟶ » X X') (g : «expr ⟶ » X' (ihom A C Y)) :\n    uncurry («expr ≫ » f g) = «expr ≫ » (tensor_iso ((«expr𝟙») _) f) (uncurry g) :=\n  Adjunction.homEquiv_naturality_left_symm _ _ _\n#align uncurry_natural_left uncurry_natural_left\n\n",
 "uncurry_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\ntheorem uncurry_injective : function.injective (uncurry : «expr ⟶ » Y (ihom A C X) → «expr ⟶ » (tensor_iso A Y) X) :=\n  (closed.is_adj.adj.hom_equiv _ _).symm.injective\n#align uncurry_injective uncurry_injective\n\n",
 "uncurry_id_eq_ev":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\ntheorem uncurry_id_eq_ev : uncurry ((«expr𝟙») (ihom A C X)) = (ihom.ev A).app X := by\n  rw [uncurry_eq, tensor_id, id_comp]\n#align uncurry_id_eq_ev uncurry_id_eq_ev\n\n",
 "uncurry_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n-- I don't think these two should be simp.\ntheorem uncurry_eq (g : «expr ⟶ » Y (ihom A C X)) :\n    uncurry g = «expr ≫ » (tensor_iso ((«expr𝟙») A) g) ((ihom.ev A).app X) :=\n  Adjunction.homEquiv_counit _\n#align uncurry_eq uncurry_eq\n\n",
 "uncurry_curry":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n@[simp]\ntheorem uncurry_curry (f : «expr ⟶ » (tensor_iso A X) Y) : uncurry (curry f) = f :=\n  (closed.is_adj.adj.hom_equiv _ _).left_inv f\n#align uncurry_curry uncurry_curry\n\n",
 "pre_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem pre_map {A₁ A₂ A₃ : C} [Closed A₁] [Closed A₂] [Closed A₃] (f : «expr ⟶ » A₁ A₂) (g : «expr ⟶ » A₂ A₃) :\n    pre («expr ≫ » f g) = «expr ≫ » (pre g) (pre f) := by\n  rw [pre, pre, pre, transfer_nat_trans_self_comp, (tensoring_left C).map_comp]\n#align pre_map pre_map\n\n",
 "pre_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem pre_id (A : C) [Closed A] : pre ((«expr𝟙») A) = («expr𝟙») _ :=\n  by\n  simp only [pre, Functor.map_id]\n  dsimp\n  simp\n#align pre_id pre_id\n\n",
 "pre_comm_ihom_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem pre_comm_ihom_map {W X Y Z : C} [Closed W] [Closed X] (f : «expr ⟶ » W X) (g : «expr ⟶ » Y Z) :\n    «expr ≫ » ((pre f).app Y) ((ihom W).map g) = «expr ≫ » ((ihom X).map g) ((pre f).app Z) := by simp\n#align pre_comm_ihom_map pre_comm_ihom_map\n\n",
 "of_equiv_uncurry_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/-- Suppose we have a monoidal equivalence `F : C ≌ D`, with `D` monoidal closed. We can pull the\nmonoidal closed instance back along the equivalence. For `X, Y, Z : C`, this lemma describes the\nresulting uncurrying map `Hom(Y, (X ⟶[C] Z)) → Hom(X ⊗ Y ⟶ Z)`. (`X ⟶[C] Z` is\ndefined to be `F⁻¹(F(X) ⟶[D] F(Z))`, so uncurrying in `C` is given by essentially conjugating\nuncurrying in `D` by `F.`) -/\ntheorem of_equiv_uncurry_def (F : MonoidalFunctor C D) [IsEquivalence F.to_functor] [h : MonoidalClosed D] {X Y Z : C}\n    (f : «expr ⟶ » Y ((@ihom _ _ _ X <| (MonoidalClosed.ofEquiv F).1 X).obj Z)) :\n    @MonoidalClosed.uncurry _ _ _ _ _ _ ((MonoidalClosed.ofEquiv F).1 _) f =\n      «expr ≫ » ((compInvIso (F.comm_tensor_left X)).inv.app Y)\n        ((F.1.1.inv.adjunction.hom_equiv (tensor_iso (F.1.1.obj X) (F.1.1.obj Y)) Z).symm\n          (MonoidalClosed.uncurry ((F.1.1.adjunction.hom_equiv Y ((ihom (F.1.1.obj X)).obj (F.1.1.obj Z))).symm f))) :=\n  rfl\n#align of_equiv_uncurry_def of_equiv_uncurry_def\n\n",
 "of_equiv_curry_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- Suppose we have a monoidal equivalence `F : C ≌ D`, with `D` monoidal closed. We can pull the\nmonoidal closed instance back along the equivalence. For `X, Y, Z : C`, this lemma describes the\nresulting currying map `Hom(X ⊗ Y, Z) → Hom(Y, (X ⟶[C] Z))`. (`X ⟶[C] Z` is defined to be\n`F⁻¹(F(X) ⟶[D] F(Z))`, so currying in `C` is given by essentially conjugating currying in\n`D` by `F.`) -/\ntheorem of_equiv_curry_def (F : MonoidalFunctor C D) [IsEquivalence F.to_functor] [h : MonoidalClosed D] {X Y Z : C}\n    (f : «expr ⟶ » (tensor_iso X Y) Z) :\n    @MonoidalClosed.curry _ _ _ _ _ _ ((MonoidalClosed.ofEquiv F).1 _) f =\n      (F.1.1.adjunction.hom_equiv Y ((ihom _).obj _))\n        (MonoidalClosed.curry\n          (F.1.1.inv.adjunction.hom_equiv (tensor_iso (F.1.1.obj X) (F.1.1.obj Y)) Z\n            («expr ≫ » ((compInvIso (F.comm_tensor_left X)).hom.app Y) f))) :=\n  rfl\n#align of_equiv_curry_def of_equiv_curry_def\n\n",
 "ihom_adjunction_unit":
 "@[simp]\ntheorem ihom_adjunction_unit : (ihom.adjunction A).unit = coev A :=\n  rfl\n#align ihom_adjunction_unit ihom_adjunction_unit\n\n",
 "ihom_adjunction_counit":
 "/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Bhavik Mehta\n-/\n-- Note that this class carries a particular choice of right adjoint,\n-- (which is only unique up to isomorphism),\n-- not merely the existence of such, and\n-- so definitional properties of instances may be important.\n@[simp]\ntheorem ihom_adjunction_counit : (ihom.adjunction A).counit = ev A :=\n  rfl\n#align ihom_adjunction_counit ihom_adjunction_counit\n\n",
 "id_tensor_pre_app_comp_ev":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\n@[simp, reassoc.1]\ntheorem id_tensor_pre_app_comp_ev (f : «expr ⟶ » B A) (X : C) :\n    «expr ≫ » (tensor_iso ((«expr𝟙») B) ((pre f).app X)) ((ihom.ev B).app X) =\n      «expr ≫ » (tensor_iso f ((«expr𝟙») (ihom A C X))) ((ihom.ev A).app X) :=\n  transferNatTransSelf_counit _ _ ((tensoringLeft C).map f) X\n#align id_tensor_pre_app_comp_ev id_tensor_pre_app_comp_ev\n\n",
 "hom_equiv_symm_apply_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\n@[simp]\ntheorem hom_equiv_symm_apply_eq (f : «expr ⟶ » Y (ihom A C X)) :\n    ((ihom.adjunction A).hom_equiv _ _).symm f = uncurry f :=\n  rfl\n#align hom_equiv_symm_apply_eq hom_equiv_symm_apply_eq\n\n",
 "hom_equiv_apply_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n-- Wrap these in a namespace so we don't clash with the core versions.\n@[simp]\ntheorem hom_equiv_apply_eq (f : «expr ⟶ » (tensor_iso A Y) X) : (ihom.adjunction A).hom_equiv _ _ f = curry f :=\n  rfl\n#align hom_equiv_apply_eq hom_equiv_apply_eq\n\n",
 "ev_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ev_naturality {X Y : C} (f : «expr ⟶ » X Y) :\n    «expr ≫ » (tensor_iso ((«expr𝟙») A) ((ihom A).map f)) ((ev A).app Y) = «expr ≫ » ((ev A).app X) f :=\n  (ev A).naturality f\n#align ev_naturality ev_naturality\n\n",
 "ev_coev":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n@[simp, reassoc.1]\ntheorem ev_coev :\n    «expr ≫ » (tensor_iso ((«expr𝟙») A) ((coev A).app B)) ((ev A).app (tensor_iso A B)) = («expr𝟙») (tensor_iso A B) :=\n  Adjunction.left_triangle_components (ihom.adjunction A)\n#align ev_coev ev_coev\n\n",
 "eq_curry_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\ntheorem eq_curry_iff (f : «expr ⟶ » (tensor_iso A Y) X) (g : «expr ⟶ » Y (ihom A C X)) : g = curry f ↔ uncurry g = f :=\n  Adjunction.eq_homEquiv_apply _ f g\n#align eq_curry_iff eq_curry_iff\n\n",
 "curry_uncurry":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\n@[simp]\ntheorem curry_uncurry (f : «expr ⟶ » X (ihom A C Y)) : curry (uncurry f) = f :=\n  (closed.is_adj.adj.hom_equiv _ _).right_inv f\n#align curry_uncurry curry_uncurry\n\n",
 "curry_natural_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem curry_natural_right (f : «expr ⟶ » (tensor_iso A X) Y) (g : «expr ⟶ » Y Y') :\n    curry («expr ≫ » f g) = «expr ≫ » (curry f) ((ihom _).map g) :=\n  Adjunction.homEquiv_naturality_right _ _ _\n#align curry_natural_right curry_natural_right\n\n",
 "curry_natural_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem curry_natural_left (f : «expr ⟶ » X X') (g : «expr ⟶ » (tensor_iso A X') Y) :\n    curry («expr ≫ » (tensor_iso ((«expr𝟙») _) f) g) = «expr ≫ » f (curry g) :=\n  Adjunction.homEquiv_naturality_left _ _ _\n#align curry_natural_left curry_natural_left\n\n",
 "curry_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\ntheorem curry_injective : function.injective (curry : «expr ⟶ » (tensor_iso A Y) X → «expr ⟶ » Y (ihom A C X)) :=\n  (closed.is_adj.adj.hom_equiv _ _).injective\n#align curry_injective curry_injective\n\n",
 "curry_id_eq_coev":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem curry_id_eq_coev : curry ((«expr𝟙») _) = (ihom.coev A).app X :=\n  by\n  rw [curry_eq, (ihom A).map_id (tensor_iso A _)]\n  apply comp_id\n#align curry_id_eq_coev curry_id_eq_coev\n\n",
 "curry_eq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\ntheorem curry_eq_iff (f : «expr ⟶ » (tensor_iso A Y) X) (g : «expr ⟶ » Y (ihom A C X)) : curry f = g ↔ f = uncurry g :=\n  Adjunction.homEquiv_apply_eq _ f g\n#align curry_eq_iff curry_eq_iff\n\n",
 "curry_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem curry_eq (g : «expr ⟶ » (tensor_iso A Y) X) : curry g = «expr ≫ » ((ihom.coev A).app Y) ((ihom A).map g) :=\n  Adjunction.homEquiv_unit _\n#align curry_eq curry_eq\n\n",
 "coev_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem coev_naturality {X Y : C} (f : «expr ⟶ » X Y) :\n    «expr ≫ » f ((coev A).app Y) = «expr ≫ » ((coev A).app X) ((ihom A).map (tensor_iso ((«expr𝟙») A) f)) :=\n  (coev A).naturality f\n#align coev_naturality coev_naturality\n\n",
 "coev_ev":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `ihom -/\n@[simp, reassoc.1]\ntheorem coev_ev : «expr ≫ » ((coev A).app (ihom A C B)) ((ihom A).map ((ev A).app B)) = («expr𝟙») (ihom A C B) :=\n  Adjunction.right_triangle_components (ihom.adjunction A)\n#align coev_ev coev_ev\n\n",
 "coev_app_comp_pre_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem coev_app_comp_pre_app (f : «expr ⟶ » B A) :\n    «expr ≫ » ((ihom.coev A).app X) ((pre f).app (tensor_iso A X)) =\n      «expr ≫ » ((ihom.coev B).app X) ((ihom B).map (tensor_iso f ((«expr𝟙») _))) :=\n  unit_transferNatTransSelf _ _ ((tensoringLeft C).map f) X\n#align coev_app_comp_pre_app coev_app_comp_pre_app\n\n"}