{"inv_map_unit":
 "/-\nCopyright (c) 2019 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n/-- If the unit of an adjunction is an isomorphism, then its inverse on the image of L is given\nby L whiskered with the counit. -/\n@[simp]\ntheorem inv_map_unit {X : C} [IsIso (h.unit.app X)] : inv (L.map (h.unit.app X)) = h.counit.app (L.obj X) :=\n  IsIso.inv_eq_of_hom_inv_id h.left_triangle_components\n#align inv_map_unit inv_map_unit\n\n",
 "inv_counit_map":
 "/-- If the counit of an adjunction is an isomorphism, then its inverse on the image of R is given\nby R whiskered with the unit. -/\n@[simp]\ntheorem inv_counit_map {X : D} [IsIso (h.counit.app X)] : inv (R.map (h.counit.app X)) = h.unit.app (R.obj X) :=\n  IsIso.inv_eq_of_inv_hom_id h.right_triangle_components\n#align inv_counit_map inv_counit_map\n\n",
 "R_faithful_of_counit_is_iso":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫= » -/\n/-- If the counit is an isomorphism, then the right adjoint is faithful-/\ntheorem R_faithful_of_counit_is_iso [IsIso h.counit] : Faithful R :=\n  {\n    map_injective' := fun X Y f g H =>\n      by\n      rw [← (h.hom_equiv (R.obj X) Y).symm.apply_eq_iff_eq] at H\n      simpa using «expr ≫= » (inv (h.counit.app X)) H }\n#align R_faithful_of_counit_is_iso R_faithful_of_counit_is_iso\n\n",
 "L_faithful_of_unit_is_iso":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr =≫ » -/\n/-- If the unit is an isomorphism, then the left adjoint is faithful-/\ntheorem L_faithful_of_unit_is_iso [IsIso h.unit] : Faithful L :=\n  {\n    map_injective' := fun X Y f g H =>\n      by\n      rw [← (h.hom_equiv X (L.obj Y)).apply_eq_iff_eq] at H\n      simpa using «expr =≫ » H (inv (h.unit.app Y)) }\n#align L_faithful_of_unit_is_iso L_faithful_of_unit_is_iso\n\n"}