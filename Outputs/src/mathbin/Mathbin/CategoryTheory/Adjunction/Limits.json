{"has_limits_of_shape_of_equivalence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/-- Transport a `has_limits_of_shape` instance across an equivalence. -/\ntheorem has_limits_of_shape_of_equivalence (E : «expr ⥤ » D C) [IsEquivalence E] [HasLimitsOfShape J C] :\n    HasLimitsOfShape J D :=\n  ⟨fun F => has_limit_of_comp_equivalence F E⟩\n#align has_limits_of_shape_of_equivalence has_limits_of_shape_of_equivalence\n\n",
 "has_limits_of_equivalence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/-- Transport a `has_limits` instance across an equivalence. -/\ntheorem has_limits_of_equivalence (E : «expr ⥤ » D C) [IsEquivalence E] [HasLimitsOfSize.{v, u} C] :\n    HasLimitsOfSize.{v, u} D :=\n  ⟨fun J hJ => has_limits_of_shape_of_equivalence E⟩\n#align has_limits_of_equivalence has_limits_of_equivalence\n\n",
 "has_limit_of_comp_equivalence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\ntheorem has_limit_of_comp_equivalence (E : «expr ⥤ » D C) [IsEquivalence E] [HasLimit («expr ⋙ » K E)] : HasLimit K :=\n  @hasLimitOfIso _ _ _ _ («expr ⋙ » K («expr ⋙ » E (inv E))) K\n    (@hasLimit_comp_equivalence _ _ _ _ _ _ («expr ⋙ » K E) (inv E) _ _)\n    («expr ≪≫ » (isoWhiskerLeft K E.as_equivalence.unit_iso.symm) (Functor.rightUnitor _))\n#align has_limit_of_comp_equivalence has_limit_of_comp_equivalence\n\n",
 "has_limit_comp_equivalence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- verify the preserve_limits instance works as expected:\ntheorem has_limit_comp_equivalence (E : «expr ⥤ » D C) [IsEquivalence E] [HasLimit K] : HasLimit («expr ⋙ » K E) :=\n  HasLimit.mk\n    { cone := E.map_cone (limit.cone K)\n      is_limit := preserves_limit.preserves (limit.isLimit K) }\n#align has_limit_comp_equivalence has_limit_comp_equivalence\n\n",
 "has_colimits_of_shape_of_equivalence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/-- Transport a `has_colimits_of_shape` instance across an equivalence. -/\ntheorem has_colimits_of_shape_of_equivalence (E : «expr ⥤ » C D) [IsEquivalence E] [HasColimitsOfShape J D] :\n    HasColimitsOfShape J C :=\n  ⟨fun F => has_colimit_of_comp_equivalence F E⟩\n#align has_colimits_of_shape_of_equivalence has_colimits_of_shape_of_equivalence\n\n",
 "has_colimits_of_equivalence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/-- Transport a `has_colimits` instance across an equivalence. -/\ntheorem has_colimits_of_equivalence (E : «expr ⥤ » C D) [IsEquivalence E] [HasColimitsOfSize.{v, u} D] :\n    HasColimitsOfSize.{v, u} C :=\n  ⟨fun J hJ => has_colimits_of_shape_of_equivalence E⟩\n#align has_colimits_of_equivalence has_colimits_of_equivalence\n\n",
 "has_colimit_of_comp_equivalence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\ntheorem has_colimit_of_comp_equivalence (E : «expr ⥤ » C D) [IsEquivalence E] [HasColimit («expr ⋙ » K E)] :\n    HasColimit K :=\n  @hasColimitOfIso _ _ _ _ («expr ⋙ » K («expr ⋙ » E (inv E))) K\n    (@hasColimit_comp_equivalence _ _ _ _ _ _ («expr ⋙ » K E) (inv E) _ _)\n    («expr ≪≫ » (Functor.rightUnitor _).symm (isoWhiskerLeft K E.as_equivalence.unit_iso))\n#align has_colimit_of_comp_equivalence has_colimit_of_comp_equivalence\n\n",
 "has_colimit_comp_equivalence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/-\nCopyright (c) 2019 Reid Barton. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Reid Barton, Johan Commelin\n-/\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- see Note [lower instance priority]\n-- verify the preserve_colimits instance works as expected:\ntheorem has_colimit_comp_equivalence (E : «expr ⥤ » C D) [IsEquivalence E] [HasColimit K] :\n    HasColimit («expr ⋙ » K E) :=\n  HasColimit.mk\n    { cocone := E.map_cocone (colimit.cocone K)\n      is_colimit := preserves_colimit.preserves (colimit.isColimit K) }\n#align has_colimit_comp_equivalence has_colimit_comp_equivalence\n\n"}