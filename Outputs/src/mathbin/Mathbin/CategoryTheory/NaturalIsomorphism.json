{"trans_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem trans_app {F G H : «expr ⥤ » C D} (α : «expr ≅ » F G) (β : «expr ≅ » G H) (X : C) :\n    («expr ≪≫ » α β).app X = «expr ≪≫ » (α.app X) (β.app X) :=\n  rfl\n#align trans_app trans_app\n\n",
 "naturality_2'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem naturality_2' (α : «expr ⟶ » F G) (f : «expr ⟶ » X Y) [IsIso (α.app Y)] :\n    «expr ≫ » (α.app X) («expr ≫ » (G.map f) (inv (α.app Y))) = F.map f := by\n  rw [← category.assoc, ← naturality, category.assoc, is_iso.hom_inv_id, category.comp_id]\n#align naturality_2' naturality_2'\n\n",
 "naturality_2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem naturality_2 (α : «expr ≅ » F G) (f : «expr ⟶ » X Y) :\n    «expr ≫ » (α.hom.app X) («expr ≫ » (G.map f) (α.inv.app Y)) = F.map f := by simp\n#align naturality_2 naturality_2\n\n",
 "naturality_1'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem naturality_1' (α : «expr ⟶ » F G) (f : «expr ⟶ » X Y) [IsIso (α.app X)] :\n    «expr ≫ » (inv (α.app X)) («expr ≫ » (F.map f) (α.app Y)) = G.map f := by simp\n#align naturality_1' naturality_1'\n\n",
 "naturality_1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem naturality_1 (α : «expr ≅ » F G) (f : «expr ⟶ » X Y) :\n    «expr ≫ » (α.inv.app X) («expr ≫ » (F.map f) (α.hom.app Y)) = G.map f := by simp\n#align naturality_1 naturality_1\n\n",
 "is_iso_of_is_iso_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n-- Making this an instance would cause a typeclass inference loop with `is_iso_app_of_is_iso`.\n/-- A natural transformation is an isomorphism if all its components are isomorphisms.\n-/\ntheorem is_iso_of_is_iso_app (α : «expr ⟶ » F G) [∀ X : C, IsIso (α.app X)] : IsIso α :=\n  ⟨(IsIso.of_iso (ofComponents (fun X => asIso (α.app X)) (by tidy))).1⟩\n#align is_iso_of_is_iso_app is_iso_of_is_iso_app\n\n",
 "is_iso_map_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem is_iso_map_iff {F₁ F₂ : «expr ⥤ » C D} (e : «expr ≅ » F₁ F₂) {X Y : C} (f : «expr ⟶ » X Y) :\n    IsIso (F₁.map f) ↔ IsIso (F₂.map f) := by\n  revert F₁ F₂\n  suffices ∀ {F₁ F₂ : «expr ⥤ » C D} (e : «expr ≅ » F₁ F₂) (hf : is_iso (F₁.map f)), is_iso (F₂.map f) by\n    exact fun F₁ F₂ e => ⟨this e, this e.symm⟩\n  intro F₁ F₂ e hf\n  refine' is_iso.mk ⟨«expr ≫ » (e.inv.app Y) («expr ≫ » (inv (F₁.map f)) (e.hom.app X)), _, _⟩\n  · simp only [nat_trans.naturality_assoc, is_iso.hom_inv_id_assoc, iso.inv_hom_id_app]\n  · simp only [assoc, ← e.hom.naturality, is_iso.inv_hom_id_assoc, iso.inv_hom_id_app]\n#align is_iso_map_iff is_iso_map_iff\n\n",
 "is_iso_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem is_iso_inv_app (α : «expr ⟶ » F G) [IsIso α] (X) : (inv α).app X = inv (α.app X) :=\n  by\n  ext\n  rw [← nat_trans.comp_app]\n  simp\n#align is_iso_inv_app is_iso_inv_app\n\n",
 "inv_map_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem inv_map_inv_app (F : «expr ⥤ » C («expr ⥤ » D E)) {X Y : C} (e : «expr ≅ » X Y) (Z : D) :\n    inv ((F.map e.inv).app Z) = (F.map e.hom).app Z := by\n  ext\n  simp\n#align inv_map_inv_app inv_map_inv_app\n\n",
 "inv_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem inv_inv_app {F G : «expr ⥤ » C D} (e : «expr ≅ » F G) (X : C) : inv (e.inv.app X) = e.hom.app X :=\n  by\n  ext\n  simp\n#align inv_inv_app inv_inv_app\n\n",
 "inv_hom_id_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem inv_hom_id_app {F G : «expr ⥤ » C D} (α : «expr ≅ » F G) (X : C) :\n    «expr ≫ » (α.inv.app X) (α.hom.app X) = («expr𝟙») (G.obj X) :=\n  congr_fun (congr_arg nat_trans.app α.inv_hom_id) X\n#align inv_hom_id_app inv_hom_id_app\n\n",
 "hom_inv_id_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-\nCopyright (c) 2017 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Tim Baumann, Stephen Morgan, Scott Morrison, Floris van Doorn\n-/\n-- declare the `v`'s first; see `category_theory.category` for an explanation\n@[simp, reassoc.1]\ntheorem hom_inv_id_app {F G : «expr ⥤ » C D} (α : «expr ≅ » F G) (X : C) :\n    «expr ≫ » (α.hom.app X) (α.inv.app X) = («expr𝟙») (F.obj X) :=\n  congr_fun (congr_arg nat_trans.app α.hom_inv_id) X\n#align hom_inv_id_app hom_inv_id_app\n\n",
 "cancel_nat_iso_inv_right_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_nat_iso_inv_right_assoc {W X X' : D} {Y : C} (f : «expr ⟶ » W X) (g : «expr ⟶ » X (G.obj Y))\n    (f' : «expr ⟶ » W X') (g' : «expr ⟶ » X' (G.obj Y)) :\n    «expr ≫ » f («expr ≫ » g (α.inv.app Y)) = «expr ≫ » f' («expr ≫ » g' (α.inv.app Y)) ↔\n      «expr ≫ » f g = «expr ≫ » f' g' :=\n  by simp only [← category.assoc, cancel_mono]\n#align cancel_nat_iso_inv_right_assoc cancel_nat_iso_inv_right_assoc\n\n",
 "cancel_nat_iso_inv_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_nat_iso_inv_right {X : D} {Y : C} (f f' : «expr ⟶ » X (G.obj Y)) :\n    «expr ≫ » f (α.inv.app Y) = «expr ≫ » f' (α.inv.app Y) ↔ f = f' := by simp only [cancel_mono]\n#align cancel_nat_iso_inv_right cancel_nat_iso_inv_right\n\n",
 "cancel_nat_iso_inv_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_nat_iso_inv_left {X : C} {Z : D} (g g' : «expr ⟶ » (F.obj X) Z) :\n    «expr ≫ » (α.inv.app X) g = «expr ≫ » (α.inv.app X) g' ↔ g = g' := by simp only [cancel_epi]\n#align cancel_nat_iso_inv_left cancel_nat_iso_inv_left\n\n",
 "cancel_nat_iso_hom_right_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_nat_iso_hom_right_assoc {W X X' : D} {Y : C} (f : «expr ⟶ » W X) (g : «expr ⟶ » X (F.obj Y))\n    (f' : «expr ⟶ » W X') (g' : «expr ⟶ » X' (F.obj Y)) :\n    «expr ≫ » f («expr ≫ » g (α.hom.app Y)) = «expr ≫ » f' («expr ≫ » g' (α.hom.app Y)) ↔\n      «expr ≫ » f g = «expr ≫ » f' g' :=\n  by simp only [← category.assoc, cancel_mono]\n#align cancel_nat_iso_hom_right_assoc cancel_nat_iso_hom_right_assoc\n\n",
 "cancel_nat_iso_hom_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_nat_iso_hom_right {X : D} {Y : C} (f f' : «expr ⟶ » X (F.obj Y)) :\n    «expr ≫ » f (α.hom.app Y) = «expr ≫ » f' (α.hom.app Y) ↔ f = f' := by simp only [cancel_mono]\n#align cancel_nat_iso_hom_right cancel_nat_iso_hom_right\n\n",
 "cancel_nat_iso_hom_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_nat_iso_hom_left {X : C} {Z : D} (g g' : «expr ⟶ » (G.obj X) Z) :\n    «expr ≫ » (α.hom.app X) g = «expr ≫ » (α.hom.app X) g' ↔ g = g' := by simp only [cancel_epi]\n#align cancel_nat_iso_hom_left cancel_nat_iso_hom_left\n\n",
 "app_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem app_inv {F G : «expr ⥤ » C D} (α : «expr ≅ » F G) (X : C) : (α.app X).inv = α.inv.app X :=\n  rfl\n#align app_inv app_inv\n\n",
 "app_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem app_hom {F G : «expr ⥤ » C D} (α : «expr ≅ » F G) (X : C) : (α.app X).hom = α.hom.app X :=\n  rfl\n#align app_hom app_hom\n\n",
 "app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem of_components.app (app' : ∀ X : C, «expr ≅ » (F.obj X) (G.obj X)) (naturality) (X) :\n    (ofComponents app' naturality).app X = app' X := by tidy\n#align of_components.app of_components.app\n\n"}