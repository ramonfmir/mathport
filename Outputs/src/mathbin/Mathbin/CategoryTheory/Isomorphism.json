{"trans_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem trans_symm (α : «expr ≅ » X Y) (β : «expr ≅ » Y Z) : («expr ≪≫ » α β).symm = «expr ≪≫ » β.symm α.symm :=\n  rfl\n#align trans_symm trans_symm\n\n",
 "trans_refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem trans_refl (α : «expr ≅ » X Y) : «expr ≪≫ » α (Iso.refl Y) = α := by ext <;> apply category.comp_id\n#align trans_refl trans_refl\n\n",
 "trans_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- type as `\\ll \\gg`.\n@[simp]\ntheorem trans_mk {X Y Z : C} (hom : «expr ⟶ » X Y) (inv : «expr ⟶ » Y X) (hom_inv_id) (inv_hom_id)\n    (hom' : «expr ⟶ » Y Z) (inv' : «expr ⟶ » Z Y) (hom_inv_id') (inv_hom_id') (hom_inv_id'') (inv_hom_id'') :\n    Iso.trans\n        { hom\n          inv\n          hom_inv_id' := hom_inv_id\n          inv_hom_id' := inv_hom_id }\n        { hom := hom'\n          inv := inv'\n          hom_inv_id'\n          inv_hom_id' } =\n      { hom := «expr ≫ » hom hom'\n        inv := «expr ≫ » inv' inv\n        hom_inv_id' := hom_inv_id''\n        inv_hom_id' := inv_hom_id'' } :=\n  rfl\n#align trans_mk trans_mk\n\n",
 "trans_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem trans_assoc {Z' : C} (α : «expr ≅ » X Y) (β : «expr ≅ » Y Z) (γ : «expr ≅ » Z Z') :\n    «expr ≪≫ » («expr ≪≫ » α β) γ = «expr ≪≫ » α («expr ≪≫ » β γ) := by ext <;> simp only [trans_hom, category.assoc]\n#align trans_assoc trans_assoc\n\n",
 "symm_symm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem symm_symm_eq {X Y : C} (α : «expr ≅ » X Y) : α.symm.symm = α := by cases α <;> rfl\n#align symm_symm_eq symm_symm_eq\n\n",
 "symm_self_id_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem symm_self_id_assoc (α : «expr ≅ » X Y) (β : «expr ≅ » Y Z) : «expr ≪≫ » α.symm («expr ≪≫ » α β) = β := by\n  rw [← trans_assoc, symm_self_id, refl_trans]\n#align symm_self_id_assoc symm_self_id_assoc\n\n",
 "symm_self_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem symm_self_id (α : «expr ≅ » X Y) : «expr ≪≫ » α.symm α = Iso.refl Y :=\n  ext α.inv_hom_id\n#align symm_self_id symm_self_id\n\n",
 "symm_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem symm_mk {X Y : C} (hom : «expr ⟶ » X Y) (inv : «expr ⟶ » Y X) (hom_inv_id) (inv_hom_id) :\n    Iso.symm\n        { hom\n          inv\n          hom_inv_id' := hom_inv_id\n          inv_hom_id' := inv_hom_id } =\n      { hom := inv\n        inv := hom\n        hom_inv_id' := inv_hom_id\n        inv_hom_id' := hom_inv_id } :=\n  rfl\n#align symm_mk symm_mk\n\n",
 "symm_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem symm_inv (α : «expr ≅ » X Y) : α.symm.inv = α.hom :=\n  rfl\n#align symm_inv symm_inv\n\n",
 "symm_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem symm_hom (α : «expr ≅ » X Y) : α.symm.hom = α.inv :=\n  rfl\n#align symm_hom symm_hom\n\n",
 "symm_eq_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem symm_eq_iff {X Y : C} {α β : «expr ≅ » X Y} : α.symm = β.symm ↔ α = β :=\n  ⟨fun h => symm_symm_eq α ▸ symm_symm_eq β ▸ congr_arg symm h, congr_arg symm⟩\n#align symm_eq_iff symm_eq_iff\n\n",
 "self_symm_id_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem self_symm_id_assoc (α : «expr ≅ » X Y) (β : «expr ≅ » X Z) : «expr ≪≫ » α («expr ≪≫ » α.symm β) = β := by\n  rw [← trans_assoc, self_symm_id, refl_trans]\n#align self_symm_id_assoc self_symm_id_assoc\n\n",
 "self_symm_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem self_symm_id (α : «expr ≅ » X Y) : «expr ≪≫ » α α.symm = Iso.refl X :=\n  ext α.hom_inv_id\n#align self_symm_id self_symm_id\n\n",
 "refl_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem refl_trans (α : «expr ≅ » X Y) : «expr ≪≫ » (Iso.refl X) α = α := by ext <;> apply category.id_comp\n#align refl_trans refl_trans\n\n",
 "refl_symm":
 "@[simp]\ntheorem refl_symm (X : C) : (Iso.refl X).symm = Iso.refl X :=\n  rfl\n#align refl_symm refl_symm\n\n",
 "of_is_iso_fac_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem of_is_iso_fac_right {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » Y Z} {h : «expr ⟶ » X Z} [IsIso g]\n    [hh : IsIso h] (w : «expr ≫ » f g = h) : IsIso f :=\n  by\n  rw [← w] at hh\n  haveI := hh\n  exact of_is_iso_comp_right f g\n#align of_is_iso_fac_right of_is_iso_fac_right\n\n",
 "of_is_iso_fac_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem of_is_iso_fac_left {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » Y Z} {h : «expr ⟶ » X Z} [IsIso f]\n    [hh : IsIso h] (w : «expr ≫ » f g = h) : IsIso g :=\n  by\n  rw [← w] at hh\n  haveI := hh\n  exact of_is_iso_comp_left f g\n#align of_is_iso_fac_left of_is_iso_fac_left\n\n",
 "of_is_iso_comp_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem of_is_iso_comp_right {X Y Z : C} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) [IsIso g] [IsIso («expr ≫ » f g)] :\n    IsIso f := by\n  rw [← comp_id f, ← hom_inv_id g, ← assoc]\n  infer_instance\n#align of_is_iso_comp_right of_is_iso_comp_right\n\n",
 "of_is_iso_comp_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem of_is_iso_comp_left {X Y Z : C} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) [IsIso f] [IsIso («expr ≫ » f g)] :\n    IsIso g := by\n  rw [← id_comp g, ← inv_hom_id f, assoc]\n  infer_instance\n#align of_is_iso_comp_left of_is_iso_comp_left\n\n",
 "nonempty_iso_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem nonempty_iso_symm (X Y : C) : Nonempty («expr ≅ » X Y) ↔ Nonempty («expr ≅ » Y X) :=\n  ⟨fun h => ⟨h.some.symm⟩, fun h => ⟨h.some.symm⟩⟩\n#align nonempty_iso_symm nonempty_iso_symm\n\n",
 "map_iso_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem map_iso_trans (F : «expr ⥤ » C D) {X Y Z : C} (i : «expr ≅ » X Y) (j : «expr ≅ » Y Z) :\n    F.map_iso («expr ≪≫ » i j) = «expr ≪≫ » (F.map_iso i) (F.map_iso j) := by ext <;> apply functor.map_comp\n#align map_iso_trans map_iso_trans\n\n",
 "map_iso_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem map_iso_symm (F : «expr ⥤ » C D) {X Y : C} (i : «expr ≅ » X Y) : F.map_iso i.symm = (F.map_iso i).symm :=\n  rfl\n#align map_iso_symm map_iso_symm\n\n",
 "map_iso_refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n@[simp]\ntheorem map_iso_refl (F : «expr ⥤ » C D) (X : C) : F.map_iso (Iso.refl X) = Iso.refl (F.obj X) :=\n  Iso.ext <| F.map_id X\n#align map_iso_refl map_iso_refl\n\n",
 "map_inv_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem map_inv_hom (F : «expr ⥤ » C D) {X Y : C} (f : «expr ⟶ » X Y) [IsIso f] :\n    «expr ≫ » (F.map (inv f)) (F.map f) = («expr𝟙») (F.obj Y) := by simp\n#align map_inv_hom map_inv_hom\n\n",
 "map_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n#print map_inv /-\n@[simp]\ntheorem map_inv (F : «expr ⥤ » C D) {X Y : C} (f : «expr ⟶ » X Y) [IsIso f] : F.map (inv f) = inv (F.map f) :=\n  by\n  ext\n  simp [← F.map_comp]\n#align map_inv map_inv\n-/\n\n",
 "map_hom_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem map_hom_inv (F : «expr ⥤ » C D) {X Y : C} (f : «expr ⟶ » X Y) [IsIso f] :\n    «expr ≫ » (F.map f) (F.map (inv f)) = («expr𝟙») (F.obj X) := by simp\n#align map_hom_inv map_hom_inv\n\n",
 "is_iso_of_hom_comp_eq_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem is_iso_of_hom_comp_eq_id (g : «expr ⟶ » X Y) [IsIso g] {f : «expr ⟶ » Y X} (h : «expr ≫ » g f = («expr𝟙») X) :\n    IsIso f := by\n  rw [(hom_comp_eq_id _).mp h]\n  infer_instance\n#align is_iso_of_hom_comp_eq_id is_iso_of_hom_comp_eq_id\n\n",
 "is_iso_of_comp_hom_eq_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem is_iso_of_comp_hom_eq_id (g : «expr ⟶ » X Y) [IsIso g] {f : «expr ⟶ » Y X} (h : «expr ≫ » f g = («expr𝟙») Y) :\n    IsIso f := by\n  rw [(comp_hom_eq_id _).mp h]\n  infer_instance\n#align is_iso_of_comp_hom_eq_id is_iso_of_comp_hom_eq_id\n\n",
 "inv_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem iso.inv_inv (f : «expr ≅ » X Y) : inv f.inv = f.hom :=\n  by\n  ext\n  simp\n#align iso.inv_inv iso.inv_inv\n\n",
 "inv_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- The following instance has lower priority for the following reason:\nSuppose we are given `f : X ≅ Y` with `X Y : Type u`.\nWithout the lower priority, typeclass inference cannot deduce `is_iso f.hom`\nbecause `f.hom` is defeq to `(λ x, x) ≫ f.hom`, triggering a loop. -/\n@[simp]\ntheorem inv_id : inv ((«expr𝟙») X) = («expr𝟙») X := by\n  ext\n  simp\n#align inv_id inv_id\n\n",
 "inv_hom_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem inv_hom_id (f : «expr ⟶ » X Y) [I : IsIso f] : «expr ≫ » (inv f) f = («expr𝟙») Y :=\n  (Classical.choose_spec I.1).right\n#align inv_hom_id inv_hom_id\n\n",
 "inv_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem iso.inv_hom (f : «expr ≅ » X Y) : inv f.hom = f.inv :=\n  by\n  ext\n  simp\n#align iso.inv_hom iso.inv_hom\n\n",
 "inv_ext'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[ext]\ntheorem inv_ext' {f : «expr ≅ » X Y} {g : «expr ⟶ » Y X} (hom_inv_id : «expr ≫ » f.hom g = («expr𝟙») X) : g = f.inv :=\n  (hom_comp_eq_id f).1 hom_inv_id\n#align inv_ext' inv_ext'\n\n",
 "inv_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[ext]\ntheorem inv_ext {f : «expr ≅ » X Y} {g : «expr ⟶ » Y X} (hom_inv_id : «expr ≫ » f.hom g = («expr𝟙») X) : f.inv = g :=\n  ((hom_comp_eq_id f).1 hom_inv_id).symm\n#align inv_ext inv_ext\n\n",
 "inv_eq_of_inv_hom_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem inv_eq_of_inv_hom_id {f : «expr ⟶ » X Y} [IsIso f] {g : «expr ⟶ » Y X}\n    (inv_hom_id : «expr ≫ » g f = («expr𝟙») Y) : inv f = g :=\n  by\n  apply (cancel_mono f).mp\n  simp [inv_hom_id]\n#align inv_eq_of_inv_hom_id inv_eq_of_inv_hom_id\n\n",
 "inv_eq_of_hom_inv_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n-- see Note [lower instance priority]\n-- This is an interesting test case for better rewrite automation.\n-- see Note [lower instance priority]\n@[ext]\ntheorem inv_eq_of_hom_inv_id {f : «expr ⟶ » X Y} [IsIso f] {g : «expr ⟶ » Y X}\n    (hom_inv_id : «expr ≫ » f g = («expr𝟙») X) : inv f = g :=\n  by\n  apply (cancel_epi f).mp\n  simp [hom_inv_id]\n#align inv_eq_of_hom_inv_id inv_eq_of_hom_inv_id\n\n",
 "inv_eq_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem is_iso.inv_eq_inv {f g : «expr ⟶ » X Y} [IsIso f] [IsIso g] : inv f = inv g ↔ f = g :=\n  Iso.inv_eq_inv (asIso f) (asIso g)\n#align is_iso.inv_eq_inv is_iso.inv_eq_inv\n\n",
 "inv_comp_eq_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem inv_comp_eq_id (g : «expr ⟶ » X Y) [IsIso g] {f : «expr ⟶ » X Y} : «expr ≫ » (inv g) f = («expr𝟙») Y ↔ f = g :=\n  (asIso g).inv_comp_eq_id\n#align inv_comp_eq_id inv_comp_eq_id\n\n",
 "inv_comp_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem inv_comp_eq (α : «expr ⟶ » X Y) [IsIso α] {f : «expr ⟶ » X Z} {g : «expr ⟶ » Y Z} :\n    «expr ≫ » (inv α) f = g ↔ f = «expr ≫ » α g :=\n  (asIso α).inv_comp_eq\n#align inv_comp_eq inv_comp_eq\n\n",
 "inv_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem inv_comp [IsIso f] [IsIso h] : inv («expr ≫ » f h) = «expr ≫ » (inv h) (inv f) :=\n  by\n  ext\n  simp\n#align inv_comp inv_comp\n\n",
 "hom_inv_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem hom_inv_id (f : «expr ⟶ » X Y) [I : IsIso f] : «expr ≫ » f (inv f) = («expr𝟙») X :=\n  (Classical.choose_spec I.1).left\n#align hom_inv_id hom_inv_id\n\n",
 "hom_eq_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem hom_eq_inv (α : «expr ≅ » X Y) (β : «expr ≅ » Y X) : α.hom = β.inv ↔ β.hom = α.inv :=\n  by\n  erw [inv_eq_inv α.symm β, eq_comm]\n  rfl\n#align hom_eq_inv hom_eq_inv\n\n",
 "hom_comp_eq_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem hom_comp_eq_id (g : «expr ⟶ » X Y) [IsIso g] {f : «expr ⟶ » Y X} : «expr ≫ » g f = («expr𝟙») X ↔ f = inv g :=\n  (asIso g).hom_comp_eq_id\n#align hom_comp_eq_id hom_comp_eq_id\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/-\nCopyright (c) 2017 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Tim Baumann, Stephen Morgan, Scott Morrison, Floris van Doorn\n-/\n-- morphism levels before object levels. See note [category_theory universes].\n-- type as \\cong or \\iso\n@[ext]\ntheorem ext ⦃α β : «expr ≅ » X Y⦄ (w : α.hom = β.hom) : α = β :=\n  suffices α.inv = β.inv by cases α <;> cases β <;> cc\n  calc\n    α.inv = «expr ≫ » α.inv («expr ≫ » β.hom β.inv) := by rw [iso.hom_inv_id, category.comp_id]\n    _ = «expr ≫ » («expr ≫ » α.inv α.hom) β.inv := by rw [category.assoc, ← w]\n    _ = β.inv := by rw [iso.inv_hom_id, category.id_comp]\n    \n#align ext ext\n\n",
 "eq_of_inv_eq_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem eq_of_inv_eq_inv {f g : «expr ⟶ » X Y} [IsIso f] [IsIso g] (p : inv f = inv g) : f = g :=\n  by\n  apply (cancel_epi (inv f)).1\n  erw [inv_hom_id, p, inv_hom_id]\n#align eq_of_inv_eq_inv eq_of_inv_eq_inv\n\n",
 "eq_inv_of_inv_hom_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem eq_inv_of_inv_hom_id {f : «expr ⟶ » X Y} [IsIso f] {g : «expr ⟶ » Y X}\n    (inv_hom_id : «expr ≫ » g f = («expr𝟙») Y) : g = inv f :=\n  (inv_eq_of_inv_hom_id inv_hom_id).symm\n#align eq_inv_of_inv_hom_id eq_inv_of_inv_hom_id\n\n",
 "eq_inv_of_hom_inv_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[ext]\ntheorem eq_inv_of_hom_inv_id {f : «expr ⟶ » X Y} [IsIso f] {g : «expr ⟶ » Y X}\n    (hom_inv_id : «expr ≫ » f g = («expr𝟙») X) : g = inv f :=\n  (inv_eq_of_hom_inv_id hom_inv_id).symm\n#align eq_inv_of_hom_inv_id eq_inv_of_hom_inv_id\n\n",
 "eq_inv_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem eq_inv_comp (α : «expr ⟶ » X Y) [IsIso α] {f : «expr ⟶ » X Z} {g : «expr ⟶ » Y Z} :\n    g = «expr ≫ » (inv α) f ↔ «expr ≫ » α g = f :=\n  (asIso α).eq_inv_comp\n#align eq_inv_comp eq_inv_comp\n\n",
 "eq_comp_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem eq_comp_inv (α : «expr ⟶ » X Y) [IsIso α] {f : «expr ⟶ » Z Y} {g : «expr ⟶ » Z X} :\n    g = «expr ≫ » f (inv α) ↔ «expr ≫ » g α = f :=\n  (asIso α).eq_comp_inv\n#align eq_comp_inv eq_comp_inv\n\n",
 "comp_inv_eq_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem comp_inv_eq_id (g : «expr ⟶ » X Y) [IsIso g] {f : «expr ⟶ » X Y} : «expr ≫ » f (inv g) = («expr𝟙») X ↔ f = g :=\n  (asIso g).comp_inv_eq_id\n#align comp_inv_eq_id comp_inv_eq_id\n\n",
 "comp_inv_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem comp_inv_eq (α : «expr ⟶ » X Y) [IsIso α] {f : «expr ⟶ » Z Y} {g : «expr ⟶ » Z X} :\n    «expr ≫ » f (inv α) = g ↔ f = «expr ≫ » g α :=\n  (asIso α).comp_inv_eq\n#align comp_inv_eq comp_inv_eq\n\n",
 "comp_hom_eq_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem comp_hom_eq_id (g : «expr ⟶ » X Y) [IsIso g] {f : «expr ⟶ » Y X} : «expr ≫ » f g = («expr𝟙») Y ↔ f = inv g :=\n  (asIso g).comp_hom_eq_id\n#align comp_hom_eq_id comp_hom_eq_id\n\n",
 "cancel_iso_inv_right_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_iso_inv_right_assoc {W X X' Y Z : C} (f : «expr ⟶ » W X) (g : «expr ⟶ » X Y) (f' : «expr ⟶ » W X')\n    (g' : «expr ⟶ » X' Y) (h : «expr ≅ » Z Y) :\n    «expr ≫ » f («expr ≫ » g h.inv) = «expr ≫ » f' («expr ≫ » g' h.inv) ↔ «expr ≫ » f g = «expr ≫ » f' g' := by\n  simp only [← category.assoc, cancel_mono]\n#align cancel_iso_inv_right_assoc cancel_iso_inv_right_assoc\n\n",
 "cancel_iso_inv_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_iso_inv_right {X Y Z : C} (f f' : «expr ⟶ » X Y) (g : «expr ≅ » Z Y) :\n    «expr ≫ » f g.inv = «expr ≫ » f' g.inv ↔ f = f' := by simp only [cancel_mono]\n#align cancel_iso_inv_right cancel_iso_inv_right\n\n",
 "cancel_iso_inv_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_iso_inv_left {X Y Z : C} (f : «expr ≅ » Y X) (g g' : «expr ⟶ » Y Z) :\n    «expr ≫ » f.inv g = «expr ≫ » f.inv g' ↔ g = g' := by simp only [cancel_epi]\n#align cancel_iso_inv_left cancel_iso_inv_left\n\n",
 "cancel_iso_hom_right_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nUnfortunately cancelling an isomorphism from the right of a chain of compositions is awkward.\nWe would need separate lemmas for each chain length (worse: for each pair of chain lengths).\n\nWe provide two more lemmas, for case of three morphisms, because this actually comes up in practice,\nbut then stop.\n-/\n@[simp]\ntheorem cancel_iso_hom_right_assoc {W X X' Y Z : C} (f : «expr ⟶ » W X) (g : «expr ⟶ » X Y) (f' : «expr ⟶ » W X')\n    (g' : «expr ⟶ » X' Y) (h : «expr ≅ » Y Z) :\n    «expr ≫ » f («expr ≫ » g h.hom) = «expr ≫ » f' («expr ≫ » g' h.hom) ↔ «expr ≫ » f g = «expr ≫ » f' g' := by\n  simp only [← category.assoc, cancel_mono]\n#align cancel_iso_hom_right_assoc cancel_iso_hom_right_assoc\n\n",
 "cancel_iso_hom_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_iso_hom_right {X Y Z : C} (f f' : «expr ⟶ » X Y) (g : «expr ≅ » Y Z) :\n    «expr ≫ » f g.hom = «expr ≫ » f' g.hom ↔ f = f' := by simp only [cancel_mono]\n#align cancel_iso_hom_right cancel_iso_hom_right\n\n",
 "cancel_iso_hom_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem cancel_iso_hom_left {X Y Z : C} (f : «expr ≅ » X Y) (g g' : «expr ⟶ » Y Z) :\n    «expr ≫ » f.hom g = «expr ≫ » f.hom g' ↔ g = g' := by simp only [cancel_epi]\n#align cancel_iso_hom_left cancel_iso_hom_left\n\n",
 "as_iso_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem as_iso_inv (f : «expr ⟶ » X Y) [IsIso f] : (asIso f).inv = inv f :=\n  rfl\n#align as_iso_inv as_iso_inv\n\n",
 "as_iso_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem as_iso_hom (f : «expr ⟶ » X Y) [IsIso f] : (asIso f).hom = f :=\n  rfl\n#align as_iso_hom as_iso_hom\n\n"}