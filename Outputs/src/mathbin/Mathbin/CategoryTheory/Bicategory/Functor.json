{"to_prelax_functor_obj":
 "@[simp]\ntheorem to_prelax_functor_obj : (F : prelax_functor B C).obj = F.obj :=\n  rfl\n#align to_prelax_functor_obj to_prelax_functor_obj\n\n",
 "to_prelax_functor_map₂":
 "@[simp]\ntheorem to_prelax_functor_map₂ : @prelax_functor.map₂ B _ _ C _ _ F = @map₂ _ _ _ _ F :=\n  rfl\n#align to_prelax_functor_map₂ to_prelax_functor_map₂\n\n",
 "to_prelax_functor_map":
 "@[simp]\ntheorem to_prelax_functor_map : @prelax_functor.map B _ _ C _ _ F = @map _ _ _ _ F :=\n  rfl\n#align to_prelax_functor_map to_prelax_functor_map\n\n",
 "to_prelax_functor_eq_coe":
 "/-\nWe use this auxiliary definition instead of writing it directly in the definition\nof pseudofunctors because doing so will cause a timeout.\n-/\n@[simp]\ntheorem to_prelax_functor_eq_coe : F.to_prelax_functor = F :=\n  rfl\n#align to_prelax_functor_eq_coe to_prelax_functor_eq_coe\n\n",
 "to_prelax_eq_coe":
 "/-\nWe use this auxiliary definition instead of writing it directly in the definition\nof oplax functors because doing so will cause a timeout.\n-/\n@[simp]\ntheorem to_prelax_eq_coe : F.to_prelax_functor = F :=\n  rfl\n#align to_prelax_eq_coe to_prelax_eq_coe\n\n",
 "to_prefunctor_obj":
 "@[simp]\ntheorem to_prefunctor_obj : (F : Prefunctor B C).obj = F.obj :=\n  rfl\n#align to_prefunctor_obj to_prefunctor_obj\n\n",
 "to_prefunctor_map":
 "@[simp]\ntheorem to_prefunctor_map : @prefunctor.map B _ C _ F = @map _ _ _ _ _ _ F :=\n  rfl\n#align to_prefunctor_map to_prefunctor_map\n\n",
 "to_prefunctor_eq_coe":
 "/-\nCopyright (c) 2022 Yuma Mizuno. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yuma Mizuno\n-/\n@[simp]\ntheorem to_prefunctor_eq_coe : F.to_prefunctor = F :=\n  rfl\n#align to_prefunctor_eq_coe to_prefunctor_eq_coe\n\n",
 "to_oplax_obj":
 "@[simp]\ntheorem to_oplax_obj : (F : oplax_functor B C).obj = F.obj :=\n  rfl\n#align to_oplax_obj to_oplax_obj\n\n",
 "to_oplax_map₂":
 "@[simp]\ntheorem to_oplax_map₂ : @oplax_functor.map₂ B _ C _ F = @map₂ _ _ _ _ F :=\n  rfl\n#align to_oplax_map₂ to_oplax_map₂\n\n",
 "to_oplax_map_id":
 "@[simp]\ntheorem to_oplax_map_id (a : B) : (F : oplax_functor B C).map_id a = (F.map_id a).hom :=\n  rfl\n#align to_oplax_map_id to_oplax_map_id\n\n",
 "to_oplax_map_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem to_oplax_map_comp {a b c : B} (f : «expr ⟶ » a b) (g : «expr ⟶ » b c) :\n    (F : oplax_functor B C).map_comp f g = (F.map_comp f g).hom :=\n  rfl\n#align to_oplax_map_comp to_oplax_map_comp\n\n",
 "to_oplax_map":
 "@[simp]\ntheorem to_oplax_map : @oplax_functor.map B _ C _ F = @map _ _ _ _ F :=\n  rfl\n#align to_oplax_map to_oplax_map\n\n",
 "to_oplax_eq_coe":
 "@[simp]\ntheorem to_oplax_eq_coe : F.to_oplax = F :=\n  rfl\n#align to_oplax_eq_coe to_oplax_eq_coe\n\n"}