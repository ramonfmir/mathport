{"unit_cofork_œÄ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n@[simp]\ntheorem unit_cofork_œÄ (A : (expradj).to_monad.algebra)\n    [HasCoequalizer ((exprF).map A.a) ((expradj).counit.app ((exprF).obj A.A))] :\n    (unit_cofork A).œÄ = G.map (coequalizer.œÄ ((exprF).map A.a) ((expradj).counit.app ((exprF).obj A.A))) :=\n  rfl\n#align unit_cofork_œÄ unit_cofork_œÄ\n\n",
 "comparison_adjunction_unit_f_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/-\nCopyright (c) 2020 Bhavik Mehta. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Bhavik Mehta\n-/\n-- Hide the implementation details in this namespace.\n-- We use these parameters and notations to simplify the statements of internal constructions\n-- here.\n-- An unfortunate consequence of the local notation is that it is only recognised if there is an\n-- extra space after the reference.\ntheorem comparison_adjunction_unit_f_aux\n    [‚àÄ A : (expradj).to_monad.algebra, HasCoequalizer ((exprF).map A.a) ((expradj).counit.app ((exprF).obj A.A))]\n    (A : (expradj).to_monad.algebra) :\n    (comparison_adjunction.unit.app A).f =\n      (expradj).hom_equiv A.A _ (coequalizer.œÄ ((exprF).map A.a) ((expradj).counit.app ((exprF).obj A.A))) :=\n  congr_arg ((expradj).hom_equiv _ _) (Category.comp_id _)\n#align comparison_adjunction_unit_f_aux comparison_adjunction_unit_f_aux\n\n",
 "comparison_adjunction_unit_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\ntheorem comparison_adjunction_unit_f\n    [‚àÄ A : (expradj).to_monad.algebra, HasCoequalizer ((exprF).map A.a) ((expradj).counit.app ((exprF).obj A.A))]\n    (A : (expradj).to_monad.algebra) :\n    (comparison_adjunction.unit.app A).f = (beckCoequalizer A).desc (unit_cofork A) :=\n  by\n  apply limits.cofork.is_colimit.hom_ext (beck_coequalizer A)\n  rw [cofork.is_colimit.œÄ_desc]\n  dsimp only [beck_cofork_œÄ, unit_cofork_œÄ]\n  rw [comparison_adjunction_unit_f_aux, ‚Üê (expradj).hom_equiv_naturality_left A.a, coequalizer.condition,\n    (expradj).hom_equiv_naturality_right, (expradj).hom_equiv_unit, category.assoc]\n  apply (expradj).right_triangle_components_assoc\n#align comparison_adjunction_unit_f comparison_adjunction_unit_f\n\n",
 "comparison_adjunction_counit_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚â´ ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´exprùüô¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr ‚â´ ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expradj -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprF -/\ntheorem comparison_adjunction_counit_app\n    [‚àÄ A : (expradj).to_monad.algebra, HasCoequalizer ((exprF).map A.a) ((expradj).counit.app ((exprF).obj A.A))]\n    (B : D) : comparison_adjunction.counit.app B = colimit.desc _ (counit_cofork B) :=\n  by\n  apply coequalizer.hom_ext\n  change\n    ¬´expr ‚â´ ¬ª (coequalizer.œÄ _ _) (coequalizer.desc (((expradj).hom_equiv _ B).symm ((¬´exprùüô¬ª) _)) _) =\n      ¬´expr ‚â´ ¬ª (coequalizer.œÄ _ _) (coequalizer.desc _ _)\n  simp\n#align comparison_adjunction_counit_app comparison_adjunction_counit_app\n\n"}