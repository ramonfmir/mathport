{"condition":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2020 Bhavik Mehta. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Bhavik Mehta\n-/\ntheorem free_coequalizer.condition :\n    «expr ≫ » (free_coequalizer.top_map X) (free_coequalizer.π X) =\n      «expr ≫ » (free_coequalizer.bottom_map X) (free_coequalizer.π X) :=\n  algebra.hom.ext _ _ X.assoc.symm\n#align free_coequalizer.condition free_coequalizer.condition\n\n",
 "beck_cofork_π":
 "@[simp]\ntheorem beck_cofork_π : (beck_cofork X).π = X.a :=\n  rfl\n#align beck_cofork_π beck_cofork_π\n\n",
 "beck_coequalizer_desc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem beck_coequalizer_desc (s : cofork (T.to_functor.map X.a) (T.μ.app X.A)) :\n    (beck_coequalizer X).desc s = «expr ≫ » (T.η.app _) s.π :=\n  rfl\n#align beck_coequalizer_desc beck_coequalizer_desc\n\n"}