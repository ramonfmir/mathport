{"right_unit":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n@[simp, reassoc.1]\ntheorem monad.right_unit (T : Monad C) (X : C) :\n    «expr ≫ » ((T : «expr ⥤ » C C).map (T.η.app X)) (T.μ.app X) = («expr𝟙») ((T : «expr ⥤ » C C).obj X) :=\n  T.right_unit' X\n#align monad.right_unit monad.right_unit\n\n",
 "right_counit":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n@[simp, reassoc.1]\ntheorem comonad.right_counit (G : Comonad C) (X : C) :\n    «expr ≫ » (G.δ.app X) ((G : «expr ⥤ » C C).map (G.ε.app X)) = («expr𝟙») ((G : «expr ⥤ » C C).obj X) :=\n  G.right_counit' X\n#align comonad.right_counit comonad.right_counit\n\n",
 "monad_to_functor_map_iso_monad_iso_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\ntheorem monad_to_functor_map_iso_monad_iso_mk {M N : Monad C} (f : «expr ≅ » (M : «expr ⥤ » C C) N) (f_η f_μ) :\n    (monadToFunctor _).map_iso (MonadIso.mk f f_η f_μ) = f :=\n  by\n  ext\n  rfl\n#align monad_to_functor_map_iso_monad_iso_mk monad_to_functor_map_iso_monad_iso_mk\n\n",
 "monad_to_functor_eq_coe":
 "/-\nCopyright (c) 2019 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Bhavik Mehta, Adam Topaz\n-/\n-- morphism levels before object levels. See note [category_theory universes].\n@[simp]\ntheorem monad_to_functor_eq_coe : T.to_functor = T :=\n  rfl\n#align monad_to_functor_eq_coe monad_to_functor_eq_coe\n\n",
 "left_unit":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n@[simp, reassoc.1]\ntheorem monad.left_unit (T : Monad C) (X : C) :\n    «expr ≫ » (T.η.app ((T : «expr ⥤ » C C).obj X)) (T.μ.app X) = («expr𝟙») ((T : «expr ⥤ » C C).obj X) :=\n  T.left_unit' X\n#align monad.left_unit monad.left_unit\n\n",
 "left_counit":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n@[simp, reassoc.1]\ntheorem comonad.left_counit (G : Comonad C) (X : C) :\n    «expr ≫ » (G.δ.app X) (G.ε.app ((G : «expr ⥤ » C C).obj X)) = («expr𝟙») ((G : «expr ⥤ » C C).obj X) :=\n  G.left_counit' X\n#align comonad.left_counit comonad.left_counit\n\n",
 "id_to_nat_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n@[simp]\ntheorem comonad_hom.id_to_nat_trans (T : Comonad C) :\n    ((«expr𝟙») T : «expr ⟶ » T T).to_nat_trans = («expr𝟙») (T : «expr ⥤ » C C) :=\n  rfl\n#align comonad_hom.id_to_nat_trans comonad_hom.id_to_nat_trans\n\n",
 "comp_to_nat_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n@[simp]\ntheorem comp_to_nat_trans {T₁ T₂ T₃ : Comonad C} (f : «expr ⟶ » T₁ T₂) (g : «expr ⟶ » T₂ T₃) :\n    («expr ≫ » f g).to_nat_trans =\n      («expr ≫ » (f.to_nat_trans : «expr ⟶ » _ (T₂ : «expr ⥤ » C C)) g.to_nat_trans :\n        «expr ⟶ » (T₁ : «expr ⥤ » C C) T₃) :=\n  rfl\n#align comp_to_nat_trans comp_to_nat_trans\n\n",
 "comonad_to_functor_map_iso_comonad_iso_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\ntheorem comonad_to_functor_map_iso_comonad_iso_mk {M N : Comonad C} (f : «expr ≅ » (M : «expr ⥤ » C C) N) (f_ε f_δ) :\n    (comonadToFunctor _).map_iso (ComonadIso.mk f f_ε f_δ) = f :=\n  by\n  ext\n  rfl\n#align comonad_to_functor_map_iso_comonad_iso_mk comonad_to_functor_map_iso_comonad_iso_mk\n\n",
 "comonad_to_functor_eq_coe":
 "@[simp]\ntheorem comonad_to_functor_eq_coe : G.to_functor = G :=\n  rfl\n#align comonad_to_functor_eq_coe comonad_to_functor_eq_coe\n\n",
 "coassoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem comonad.coassoc (G : Comonad C) (X : C) :\n    «expr ≫ » (G.δ.app _) ((G : «expr ⥤ » C C).map (G.δ.app X)) = «expr ≫ » (G.δ.app _) (G.δ.app _) :=\n  G.coassoc' X\n#align comonad.coassoc comonad.coassoc\n\n",
 "assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem monad.assoc (T : Monad C) (X : C) :\n    «expr ≫ » ((T : «expr ⥤ » C C).map (T.μ.app X)) (T.μ.app _) = «expr ≫ » (T.μ.app _) (T.μ.app _) :=\n  T.assoc' X\n#align monad.assoc monad.assoc\n\n"}