{"strong_epi_map_of_strong_epi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊣ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem strong_epi_map_of_strong_epi (adj : «expr ⊣ » F F') (f : «expr ⟶ » A B) [h₁ : F'.preserves_monomorphisms]\n    [h₂ : F.preserves_epimorphisms] [StrongEpi f] : StrongEpi (F.map f) :=\n  ⟨inferInstance, fun X Y Z => by\n    intro\n    rw [adj.has_lifting_property_iff]\n    infer_instance⟩\n#align strong_epi_map_of_strong_epi strong_epi_map_of_strong_epi\n\n",
 "strong_epi_map_iff_strong_epi_of_is_equivalence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem strong_epi_map_iff_strong_epi_of_is_equivalence [IsEquivalence F] : StrongEpi (F.map f) ↔ StrongEpi f :=\n  by\n  constructor\n  · intro\n    have e : «expr ≅ » (arrow.mk f) (arrow.mk (F.inv.map (F.map f))) :=\n      arrow.iso_of_nat_iso F.as_equivalence.unit_iso (arrow.mk f)\n    rw [strong_epi.iff_of_arrow_iso e]\n    infer_instance\n  · intro\n    infer_instance\n#align strong_epi_map_iff_strong_epi_of_is_equivalence strong_epi_map_iff_strong_epi_of_is_equivalence\n\n",
 "reflects_monomorphisms_of_preserves_of_reflects":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\ntheorem reflects_monomorphisms_of_preserves_of_reflects (F : «expr ⥤ » C D) (G : «expr ⥤ » D E)\n    [PreservesMonomorphisms G] [ReflectsMonomorphisms («expr ⋙ » F G)] : ReflectsMonomorphisms F :=\n  ⟨fun X Y f hf => («expr ⋙ » F G).mono_of_mono_map <| show Mono (G.map (F.map f)) from inferInstance⟩\n#align reflects_monomorphisms_of_preserves_of_reflects reflects_monomorphisms_of_preserves_of_reflects\n\n",
 "reflects_epimorphisms_of_preserves_of_reflects":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\ntheorem reflects_epimorphisms_of_preserves_of_reflects (F : «expr ⥤ » C D) (G : «expr ⥤ » D E) [PreservesEpimorphisms G]\n    [ReflectsEpimorphisms («expr ⋙ » F G)] : ReflectsEpimorphisms F :=\n  ⟨fun X Y f hf => («expr ⋙ » F G).epi_of_epi_map <| show Epi (G.map (F.map f)) from inferInstance⟩\n#align reflects_epimorphisms_of_preserves_of_reflects reflects_epimorphisms_of_preserves_of_reflects\n\n",
 "preserves_monomorphisms_of_preserves_of_reflects":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\ntheorem preserves_monomorphisms_of_preserves_of_reflects (F : «expr ⥤ » C D) (G : «expr ⥤ » D E)\n    [PreservesMonomorphisms («expr ⋙ » F G)] [ReflectsMonomorphisms G] : PreservesMonomorphisms F :=\n  ⟨fun X Y f hf => G.mono_of_mono_map <| show Mono ((«expr ⋙ » F G).map f) from inferInstance⟩\n#align preserves_monomorphisms_of_preserves_of_reflects preserves_monomorphisms_of_preserves_of_reflects\n\n",
 "preserves_monomorphisms_of_adjunction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊣ » -/\ntheorem preserves_monomorphisms_of_adjunction {F : «expr ⥤ » C D} {G : «expr ⥤ » D C} (adj : «expr ⊣ » F G) :\n    PreservesMonomorphisms G :=\n  {\n    preserves := fun X Y f hf =>\n      ⟨by\n        intro Z g h H\n        replace H := congr_arg (adj.hom_equiv Z Y).symm H\n        rwa [adj.hom_equiv_naturality_right_symm, adj.hom_equiv_naturality_right_symm, cancel_mono,\n          Equiv.apply_eq_iff_eq] at H⟩ }\n#align preserves_monomorphisms_of_adjunction preserves_monomorphisms_of_adjunction\n\n",
 "preserves_epimorphsisms_of_adjunction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊣ » -/\ntheorem preserves_epimorphsisms_of_adjunction {F : «expr ⥤ » C D} {G : «expr ⥤ » D C} (adj : «expr ⊣ » F G) :\n    PreservesEpimorphisms F :=\n  {\n    preserves := fun X Y f hf =>\n      ⟨by\n        intro Z g h H\n        replace H := congr_arg (adj.hom_equiv X Z) H\n        rwa [adj.hom_equiv_naturality_left, adj.hom_equiv_naturality_left, cancel_epi, Equiv.apply_eq_iff_eq] at H⟩ }\n#align preserves_epimorphsisms_of_adjunction preserves_epimorphsisms_of_adjunction\n\n",
 "preserves_epimorphisms_of_preserves_of_reflects":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\ntheorem preserves_epimorphisms_of_preserves_of_reflects (F : «expr ⥤ » C D) (G : «expr ⥤ » D E)\n    [PreservesEpimorphisms («expr ⋙ » F G)] [ReflectsEpimorphisms G] : PreservesEpimorphisms F :=\n  ⟨fun X Y f hf => G.epi_of_epi_map <| show Epi ((«expr ⋙ » F G).map f) from inferInstance⟩\n#align preserves_epimorphisms_of_preserves_of_reflects preserves_epimorphisms_of_preserves_of_reflects\n\n",
 "of_iso":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem reflects_epimorphisms.of_iso {F G : «expr ⥤ » C D} [ReflectsEpimorphisms F] (α : «expr ≅ » F G) :\n    ReflectsEpimorphisms G :=\n  {\n    reflects := fun X Y f h => by\n      apply F.epi_of_epi_map\n      haveI : epi («expr ≫ » (G.map f) (α.app Y).inv) := epi_comp _ _\n      convert(epi_comp _ _ : epi («expr ≫ » (α.app X).hom («expr ≫ » (G.map f) (α.app Y).inv)))\n      rw [← category.assoc, iso.eq_comp_inv, iso.app_hom, iso.app_hom, nat_trans.naturality] }\n#align reflects_epimorphisms.of_iso reflects_epimorphisms.of_iso\n\n",
 "mono_of_mono_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-\nCopyright (c) 2022 Markus Himmel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Markus Himmel\n-/\ntheorem mono_of_mono_map (F : «expr ⥤ » C D) [ReflectsMonomorphisms F] {X Y : C} {f : «expr ⟶ » X Y}\n    (h : Mono (F.map f)) : Mono f :=\n  reflects_monomorphisms.reflects f h\n#align mono_of_mono_map mono_of_mono_map\n\n",
 "mono_map_iff_mono":
 "@[simp]\ntheorem mono_map_iff_mono [hF₁ : PreservesMonomorphisms F] [hF₂ : ReflectsMonomorphisms F] : Mono (F.map f) ↔ Mono f :=\n  by\n  constructor\n  · exact F.mono_of_mono_map\n  · intro h\n    exact F.map_mono f\n#align mono_map_iff_mono mono_map_iff_mono\n\n",
 "iso_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem reflects_epimorphisms.iso_iff {F G : «expr ⥤ » C D} (α : «expr ≅ » F G) :\n    ReflectsEpimorphisms F ↔ ReflectsEpimorphisms G :=\n  ⟨fun h => reflects_epimorphisms.of_iso α, fun h => reflects_epimorphisms.of_iso α.symm⟩\n#align reflects_epimorphisms.iso_iff reflects_epimorphisms.iso_iff\n\n",
 "is_split_mono_iff":
 "@[simp]\ntheorem is_split_mono_iff [Full F] [Faithful F] : IsSplitMono (F.map f) ↔ IsSplitMono f :=\n  by\n  constructor\n  · intro h\n    exact is_split_mono.mk' ((split_mono_equiv F f).inv_fun h.exists_split_mono.some)\n  · intro h\n    exact is_split_mono.mk' ((split_mono_equiv F f).to_fun h.exists_split_mono.some)\n#align is_split_mono_iff is_split_mono_iff\n\n",
 "is_split_epi_iff":
 "@[simp]\ntheorem is_split_epi_iff [Full F] [Faithful F] : IsSplitEpi (F.map f) ↔ IsSplitEpi f :=\n  by\n  constructor\n  · intro h\n    exact is_split_epi.mk' ((split_epi_equiv F f).inv_fun h.exists_split_epi.some)\n  · intro h\n    exact is_split_epi.mk' ((split_epi_equiv F f).to_fun h.exists_split_epi.some)\n#align is_split_epi_iff is_split_epi_iff\n\n",
 "epi_of_epi_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem epi_of_epi_map (F : «expr ⥤ » C D) [ReflectsEpimorphisms F] {X Y : C} {f : «expr ⟶ » X Y} (h : Epi (F.map f)) :\n    Epi f :=\n  reflects_epimorphisms.reflects f h\n#align epi_of_epi_map epi_of_epi_map\n\n",
 "epi_map_iff_epi":
 "@[simp]\ntheorem epi_map_iff_epi [hF₁ : PreservesEpimorphisms F] [hF₂ : ReflectsEpimorphisms F] : Epi (F.map f) ↔ Epi f :=\n  by\n  constructor\n  · exact F.epi_of_epi_map\n  · intro h\n    exact F.map_epi f\n#align epi_map_iff_epi epi_map_iff_epi\n\n"}