{"map_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem functorial.map_id {F : C → D} [Functorial.{v₁, v₂} F] {X : C} : map F ((«expr𝟙») X) = («expr𝟙») (F X) :=\n  functorial.map_id' X\n#align functorial.map_id functorial.map_id\n\n",
 "map_functorial_obj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem map_functorial_obj (F : «expr ⥤ » C D) {X Y : C} (f : «expr ⟶ » X Y) : map F.obj f = F.map f :=\n  rfl\n#align map_functorial_obj map_functorial_obj\n\n",
 "map_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem functorial.map_comp {F : C → D} [Functorial.{v₁, v₂} F] {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » Y Z} :\n    map F («expr ≫ » f g) = «expr ≫ » (map F f) (map F g) :=\n  functorial.map_comp' f g\n#align functorial.map_comp functorial.map_comp\n\n",
 "map_as_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-\nCopyright (c) 2019 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n-- declare the `v`'s first; see `category_theory.category` for an explanation\n-- Perhaps in the future we could redefine `functor` in terms of this, but that isn't the\n-- immediate plan.\n@[simp]\ntheorem map_as_map {F : C → D} [Functorial.{v₁, v₂} F] {X Y : C} {f : «expr ⟶ » X Y} :\n    Functorial.map'.{v₁, v₂} f = map F f :=\n  rfl\n#align map_as_map map_as_map\n\n"}