{"unop_functor_op_obj_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem unop_functor_op_obj_map (X : «expr ᵒᵖ» C) {j₁ j₂ : J} (f : «expr ⟶ » j₁ j₂) :\n    (unop ((functor.op (const J)).obj X)).map f = («expr𝟙») (unop X) :=\n  rfl\n#align unop_functor_op_obj_map unop_functor_op_obj_map\n\n",
 "op_obj_unop_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem op_obj_unop_inv_app (X : «expr ᵒᵖ» C) (j : «expr ᵒᵖ» J) : (op_obj_unop.{v₁, v₂} X).inv.app j = («expr𝟙») _ :=\n  rfl\n#align op_obj_unop_inv_app op_obj_unop_inv_app\n\n",
 "op_obj_unop_hom_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-\nCopyright (c) 2018 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Bhavik Mehta\n-/\n-- declare the `v`'s first; see `category_theory.category` for an explanation\n-- Lean needs some help with universes here.\n@[simp]\ntheorem op_obj_unop_hom_app (X : «expr ᵒᵖ» C) (j : «expr ᵒᵖ» J) : (op_obj_unop.{v₁, v₂} X).hom.app j = («expr𝟙») _ :=\n  rfl\n#align op_obj_unop_hom_app op_obj_unop_hom_app\n\n"}