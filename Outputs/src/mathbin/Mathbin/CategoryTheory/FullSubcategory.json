{"obj":
 "/-\nCopyright (c) 2017 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Reid Barton\n-/\n-- morphism levels before object levels. See note [category_theory universes].\n-- A full subcategory is the special case of an induced category with F = subtype.val.\n@[simp]\ntheorem full_subcategory_inclusion.obj {X} : (fullSubcategoryInclusion Z).obj X = X.obj :=\n  rfl\n#align full_subcategory_inclusion.obj full_subcategory_inclusion.obj\n\n",
 "map_inclusion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n@[simp]\ntheorem full_subcategory.map_inclusion (h : ∀ ⦃X⦄, Z X → Z' X) :\n    «expr ⋙ » (FullSubcategory.map h) (fullSubcategoryInclusion Z') = fullSubcategoryInclusion Z :=\n  rfl\n#align full_subcategory.map_inclusion full_subcategory.map_inclusion\n\n",
 "map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem full_subcategory_inclusion.map {X Y} {f : «expr ⟶ » X Y} : (fullSubcategoryInclusion Z).map f = f :=\n  rfl\n#align full_subcategory_inclusion.map full_subcategory_inclusion.map\n\n",
 "lift_comp_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n@[simp]\ntheorem full_subcategory.lift_comp_map (F : «expr ⥤ » C D) (hF : ∀ X, P (F.obj X)) (h : ∀ ⦃X⦄, P X → Q X) :\n    «expr ⋙ » (FullSubcategory.lift P F hF) (FullSubcategory.map h) = FullSubcategory.lift Q F fun X => h (hF X) :=\n  rfl\n#align full_subcategory.lift_comp_map full_subcategory.lift_comp_map\n\n",
 "inclusion_obj_lift_obj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n@[simp]\ntheorem full_subcategory.inclusion_obj_lift_obj (F : «expr ⥤ » C D) (hF : ∀ X, P (F.obj X)) {X : C} :\n    (fullSubcategoryInclusion P).obj ((FullSubcategory.lift P F hF).obj X) = F.obj X :=\n  rfl\n#align full_subcategory.inclusion_obj_lift_obj full_subcategory.inclusion_obj_lift_obj\n\n",
 "inclusion_map_lift_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem full_subcategory.inclusion_map_lift_map (F : «expr ⥤ » C D) (hF : ∀ X, P (F.obj X)) {X Y : C}\n    (f : «expr ⟶ » X Y) : (fullSubcategoryInclusion P).map ((FullSubcategory.lift P F hF).map f) = F.map f :=\n  rfl\n#align full_subcategory.inclusion_map_lift_map full_subcategory.inclusion_map_lift_map\n\n"}