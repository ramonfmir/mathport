{"preserves_cokernel_iso_comp_cokernel_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem preserves_cokernel_iso_comp_cokernel_map {X' Y' : C} (g : «expr ⟶ » X' Y') [HasCokernel g]\n    [HasCokernel (G.map g)] [PreservesColimit (parallelPair g 0) G] (p : «expr ⟶ » X X') (q : «expr ⟶ » Y Y')\n    (hpq : «expr ≫ » f q = «expr ≫ » p g) :\n    «expr ≫ » (PreservesCokernel.iso G _).hom\n        (cokernel.map (G.map f) (G.map g) (G.map p) (G.map q) (by rw [← G.map_comp, hpq, G.map_comp])) =\n      «expr ≫ » (G.map (cokernel.map f g p q hpq)) (PreservesCokernel.iso G _).hom :=\n  by\n  rw [← iso.comp_inv_eq, category.assoc, ← iso.eq_inv_comp]\n  exact cokernel_map_comp_cokernel_comparison _ _ _ _ _ _\n#align preserves_cokernel_iso_comp_cokernel_map preserves_cokernel_iso_comp_cokernel_map\n\n",
 "kernel_map_comp_preserves_kernel_iso_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem kernel_map_comp_preserves_kernel_iso_inv {X' Y' : C} (g : «expr ⟶ » X' Y') [HasKernel g] [HasKernel (G.map g)]\n    [PreservesLimit (parallelPair g 0) G] (p : «expr ⟶ » X X') (q : «expr ⟶ » Y Y')\n    (hpq : «expr ≫ » f q = «expr ≫ » p g) :\n    «expr ≫ » (kernel.map (G.map f) (G.map g) (G.map p) (G.map q) (by rw [← G.map_comp, hpq, G.map_comp]))\n        (PreservesKernel.iso G _).inv =\n      «expr ≫ » (PreservesKernel.iso G _).inv (G.map (kernel.map f g p q hpq)) :=\n  by\n  rw [iso.comp_inv_eq, category.assoc, preserves_kernel.iso_hom, iso.eq_inv_comp]\n  exact kernel_comparison_comp_kernel_map _ _ _ _ _ _\n#align kernel_map_comp_preserves_kernel_iso_inv kernel_map_comp_preserves_kernel_iso_inv\n\n",
 "iso_inv":
 "@[simp]\ntheorem preserves_cokernel.iso_inv : (PreservesCokernel.iso G f).inv = cokernelComparison f G :=\n  rfl\n#align preserves_cokernel.iso_inv preserves_cokernel.iso_inv\n\n",
 "iso_hom":
 "/-\nCopyright (c) 2022 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n@[simp]\ntheorem preserves_kernel.iso_hom : (PreservesKernel.iso G f).hom = kernelComparison f G :=\n  rfl\n#align preserves_kernel.iso_hom preserves_kernel.iso_hom\n\n"}