{"ι_preserves_colimits_iso_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- TODO: think about swapping the order here\n@[simp, reassoc.1]\ntheorem ι_preserves_colimits_iso_inv (j : J) :\n    «expr ≫ » (colimit.ι _ j) (preserves_colimit_iso G F).inv = G.map (colimit.ι F j) :=\n  is_colimit.comp_cocone_point_unique_up_to_iso_inv _ (colimit.is_colimit («expr ⋙ » F G)) j\n#align ι_preserves_colimits_iso_inv ι_preserves_colimits_iso_inv\n\n",
 "ι_preserves_colimits_iso_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n@[simp, reassoc.1]\ntheorem ι_preserves_colimits_iso_hom (j : J) :\n    «expr ≫ » (G.map (colimit.ι F j)) (preserves_colimit_iso G F).hom = colimit.ι («expr ⋙ » F G) j :=\n  (preserves_colimit.preserves (colimit.is_colimit _)).comp_cocone_point_unique_up_to_iso_hom _ j\n#align ι_preserves_colimits_iso_hom ι_preserves_colimits_iso_hom\n\n",
 "preserves_limits_iso_inv_π":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem preserves_limits_iso_inv_π (j) : «expr ≫ » (preserves_limit_iso G F).inv (G.map (limit.π F j)) = limit.π _ j :=\n  is_limit.cone_point_unique_up_to_iso_inv_comp _ _ j\n#align preserves_limits_iso_inv_π preserves_limits_iso_inv_π\n\n",
 "preserves_limits_iso_hom_π":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem preserves_limits_iso_hom_π (j) : «expr ≫ » (preserves_limit_iso G F).hom (limit.π _ j) = G.map (limit.π F j) :=\n  is_limit.cone_point_unique_up_to_iso_hom_comp _ _ j\n#align preserves_limits_iso_hom_π preserves_limits_iso_hom_π\n\n",
 "preserves_lift_map_cone":
 "/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Bhavik Mehta\n-/\n@[simp]\ntheorem preserves_lift_map_cone (c₁ c₂ : cone F) (t : is_limit c₁) :\n    (preserves_limit.preserves t).lift (G.map_cone c₂) = G.map (t.lift c₂) :=\n  ((preserves_limit.preserves t).uniq (G.map_cone c₂) _ (by simp [← G.map_comp])).symm\n#align preserves_lift_map_cone preserves_lift_map_cone\n\n",
 "preserves_desc_map_cocone":
 "@[simp]\ntheorem preserves_desc_map_cocone (c₁ c₂ : cocone F) (t : is_colimit c₁) :\n    (preserves_colimit.preserves t).desc (G.map_cocone _) = G.map (t.desc c₂) :=\n  ((preserves_colimit.preserves t).uniq (G.map_cocone _) _ (by simp [← G.map_comp])).symm\n#align preserves_desc_map_cocone preserves_desc_map_cocone\n\n",
 "preserves_colimits_iso_inv_comp_desc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem preserves_colimits_iso_inv_comp_desc (t : cocone F) :\n    «expr ≫ » (preserves_colimit_iso G F).inv (G.map (colimit.desc _ t)) = colimit.desc _ (G.map_cocone t) :=\n  by\n  ext\n  simp [← G.map_comp]\n#align preserves_colimits_iso_inv_comp_desc preserves_colimits_iso_inv_comp_desc\n\n",
 "lift_comp_preserves_limits_iso_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n@[simp, reassoc.1]\ntheorem lift_comp_preserves_limits_iso_hom (t : cone F) :\n    «expr ≫ » (G.map (limit.lift _ t)) (preserves_limit_iso G F).hom = limit.lift («expr ⋙ » F G) (G.map_cone _) :=\n  by\n  ext\n  simp [← G.map_comp]\n#align lift_comp_preserves_limits_iso_hom lift_comp_preserves_limits_iso_hom\n\n"}