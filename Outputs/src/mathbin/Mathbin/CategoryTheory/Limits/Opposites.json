{"unop_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem unop_snd {X Y Z : «expr ᵒᵖ» C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » X Z} (c : PushoutCocone f g) :\n    c.unop.snd = c.inr.unop := by\n  change (_ : limits.cone _).π.app _ = _\n  simp only [pushout_cocone.unop_π_app, pushout_cocone.ι_app_right]\n  tidy\n#align unop_snd unop_snd\n\n",
 "unop_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem unop_inr {X Y Z : «expr ᵒᵖ» C} {f : «expr ⟶ » X Z} {g : «expr ⟶ » Y Z} (c : PullbackCone f g) :\n    c.unop.inr = c.snd.unop := by\n  change (_ : limits.cocone _).ι.app _ = _\n  apply Quiver.Hom.op_inj\n  simp [unop_ι_app]; dsimp; simp\n  apply category.comp_id\n#align unop_inr unop_inr\n\n",
 "unop_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem unop_inl {X Y Z : «expr ᵒᵖ» C} {f : «expr ⟶ » X Z} {g : «expr ⟶ » Y Z} (c : PullbackCone f g) :\n    c.unop.inl = c.fst.unop := by\n  change (_ : limits.cocone _).ι.app _ = _\n  dsimp only [unop, op_span]\n  simp; dsimp; simp; dsimp; simp\n#align unop_inl unop_inl\n\n",
 "unop_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem unop_fst {X Y Z : «expr ᵒᵖ» C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » X Z} (c : PushoutCocone f g) :\n    c.unop.fst = c.inl.unop := by\n  change (_ : limits.cone _).π.app _ = _\n  simp only [pushout_cocone.ι_app_left, pushout_cocone.unop_π_app]\n  tidy\n#align unop_fst unop_fst\n\n",
 "pushout_iso_unop_pullback_inv_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem pushout_iso_unop_pullback_inv_snd {X Y Z : C} (f : «expr ⟶ » X Z) (g : «expr ⟶ » X Y) [HasPushout f g]\n    [HasPullback f.op g.op] : «expr ≫ » (pushoutIsoUnopPullback f g).inv.op pullback.snd = pushout.inr.op :=\n  by\n  apply Quiver.Hom.unop_inj\n  dsimp\n  rw [← pushout_iso_unop_pullback_inr_hom, category.assoc, iso.hom_inv_id, category.comp_id]\n#align pushout_iso_unop_pullback_inv_snd pushout_iso_unop_pullback_inv_snd\n\n",
 "pushout_iso_unop_pullback_inv_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem pushout_iso_unop_pullback_inv_fst {X Y Z : C} (f : «expr ⟶ » X Z) (g : «expr ⟶ » X Y) [HasPushout f g]\n    [HasPullback f.op g.op] : «expr ≫ » (pushoutIsoUnopPullback f g).inv.op pullback.fst = pushout.inl.op :=\n  by\n  apply Quiver.Hom.unop_inj\n  dsimp\n  rw [← pushout_iso_unop_pullback_inl_hom, category.assoc, iso.hom_inv_id, category.comp_id]\n#align pushout_iso_unop_pullback_inv_fst pushout_iso_unop_pullback_inv_fst\n\n",
 "pushout_iso_unop_pullback_inr_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp, reassoc.1]\ntheorem pushout_iso_unop_pullback_inr_hom {X Y Z : C} (f : «expr ⟶ » X Z) (g : «expr ⟶ » X Y) [HasPushout f g]\n    [HasPullback f.op g.op] :\n    «expr ≫ » pushout.inr (pushoutIsoUnopPullback f g).hom = (pullback.snd : «expr ⟶ » (pullback f.op g.op) _).unop :=\n  (IsColimit.comp_coconePointUniqueUpToIso_hom _ _ _).trans (by simp)\n#align pushout_iso_unop_pullback_inr_hom pushout_iso_unop_pullback_inr_hom\n\n",
 "pushout_iso_unop_pullback_inl_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp, reassoc.1]\ntheorem pushout_iso_unop_pullback_inl_hom {X Y Z : C} (f : «expr ⟶ » X Z) (g : «expr ⟶ » X Y) [HasPushout f g]\n    [HasPullback f.op g.op] :\n    «expr ≫ » pushout.inl (pushoutIsoUnopPullback f g).hom = (pullback.fst : «expr ⟶ » (pullback f.op g.op) _).unop :=\n  (IsColimit.comp_coconePointUniqueUpToIso_hom _ _ _).trans (by simp)\n#align pushout_iso_unop_pullback_inl_hom pushout_iso_unop_pullback_inl_hom\n\n",
 "pullback_iso_unop_pushout_inv_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp, reassoc.1]\ntheorem pullback_iso_unop_pushout_inv_snd {X Y Z : C} (f : «expr ⟶ » X Z) (g : «expr ⟶ » Y Z) [HasPullback f g]\n    [HasPushout f.op g.op] :\n    «expr ≫ » (pullbackIsoUnopPushout f g).inv pullback.snd = (pushout.inr : «expr ⟶ » _ (pushout f.op g.op)).unop :=\n  (IsLimit.conePointUniqueUpToIso_inv_comp _ _ _).trans (by simp)\n#align pullback_iso_unop_pushout_inv_snd pullback_iso_unop_pushout_inv_snd\n\n",
 "pullback_iso_unop_pushout_inv_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp, reassoc.1]\ntheorem pullback_iso_unop_pushout_inv_fst {X Y Z : C} (f : «expr ⟶ » X Z) (g : «expr ⟶ » Y Z) [HasPullback f g]\n    [HasPushout f.op g.op] :\n    «expr ≫ » (pullbackIsoUnopPushout f g).inv pullback.fst = (pushout.inl : «expr ⟶ » _ (pushout f.op g.op)).unop :=\n  (IsLimit.conePointUniqueUpToIso_inv_comp _ _ _).trans (by simp)\n#align pullback_iso_unop_pushout_inv_fst pullback_iso_unop_pushout_inv_fst\n\n",
 "pullback_iso_unop_pushout_hom_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pullback_iso_unop_pushout_hom_inr {X Y Z : C} (f : «expr ⟶ » X Z) (g : «expr ⟶ » Y Z) [HasPullback f g]\n    [HasPushout f.op g.op] : «expr ≫ » pushout.inr (pullbackIsoUnopPushout f g).hom.op = pullback.snd.op :=\n  by\n  apply Quiver.Hom.unop_inj\n  dsimp\n  rw [← pullback_iso_unop_pushout_inv_snd, iso.hom_inv_id_assoc]\n#align pullback_iso_unop_pushout_hom_inr pullback_iso_unop_pushout_hom_inr\n\n",
 "pullback_iso_unop_pushout_hom_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pullback_iso_unop_pushout_hom_inl {X Y Z : C} (f : «expr ⟶ » X Z) (g : «expr ⟶ » Y Z) [HasPullback f g]\n    [HasPushout f.op g.op] : «expr ≫ » pushout.inl (pullbackIsoUnopPushout f g).hom.op = pullback.fst.op :=\n  by\n  apply Quiver.Hom.unop_inj\n  dsimp\n  rw [← pullback_iso_unop_pushout_inv_fst, iso.hom_inv_id_assoc]\n#align pullback_iso_unop_pushout_hom_inl pullback_iso_unop_pushout_hom_inl\n\n",
 "op_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem op_snd {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » X Z} (c : PushoutCocone f g) : c.op.snd = c.inr.op :=\n  by\n  change (_ : limits.cone _).π.app _ = _\n  apply category.comp_id\n#align op_snd op_snd\n\n",
 "op_inr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem op_inr {X Y Z : C} {f : «expr ⟶ » X Z} {g : «expr ⟶ » Y Z} (c : PullbackCone f g) : c.op.inr = c.snd.op :=\n  by\n  change (_ : limits.cocone _).ι.app _ = _\n  apply category.id_comp\n#align op_inr op_inr\n\n",
 "op_inl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem op_inl {X Y Z : C} {f : «expr ⟶ » X Z} {g : «expr ⟶ » Y Z} (c : PullbackCone f g) : c.op.inl = c.fst.op :=\n  by\n  change (_ : limits.cocone _).ι.app _ = _\n  apply category.id_comp\n#align op_inl op_inl\n\n",
 "op_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem op_fst {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » X Z} (c : PushoutCocone f g) : c.op.fst = c.inl.op :=\n  by\n  change (_ : limits.cone _).π.app _ = _\n  apply category.comp_id\n#align op_fst op_fst\n\n",
 "has_products_of_shape_of_opposite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_products_of_shape_of_opposite [HasCoproductsOfShape X («expr ᵒᵖ» C)] : HasProductsOfShape X C :=\n  haveI : has_colimits_of_shape («expr ᵒᵖ» (discrete X)) («expr ᵒᵖ» C) :=\n    has_colimits_of_shape_of_equivalence (discrete.opposite X).symm\n  has_limits_of_shape_of_has_colimits_of_shape_op\n#align has_products_of_shape_of_opposite has_products_of_shape_of_opposite\n\n",
 "has_products_of_opposite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_products_of_opposite [HasCoproducts.{v₂} («expr ᵒᵖ» C)] : HasProducts.{v₂} C := fun X =>\n  hasProductsOfShape_of_opposite X\n#align has_products_of_opposite has_products_of_opposite\n\n",
 "has_limits_of_shape_op_of_has_colimits_of_shape":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/-- If `C` has colimits of shape `Jᵒᵖ`, we can construct limits in `Cᵒᵖ` of shape `J`.\n-/\ntheorem has_limits_of_shape_op_of_has_colimits_of_shape [HasColimitsOfShape («expr ᵒᵖ» J) C] :\n    HasLimitsOfShape J («expr ᵒᵖ» C) :=\n  { has_limit := fun F => hasLimit_of_hasColimit_leftOp F }\n#align has_limits_of_shape_op_of_has_colimits_of_shape has_limits_of_shape_op_of_has_colimits_of_shape\n\n",
 "has_limits_of_shape_of_has_colimits_of_shape_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_limits_of_shape_of_has_colimits_of_shape_op [HasColimitsOfShape («expr ᵒᵖ» J) («expr ᵒᵖ» C)] :\n    HasLimitsOfShape J C :=\n  { has_limit := fun F => hasLimit_of_hasColimit_op F }\n#align has_limits_of_shape_of_has_colimits_of_shape_op has_limits_of_shape_of_has_colimits_of_shape_op\n\n",
 "has_limits_of_has_colimits_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_limits_of_has_colimits_op [HasColimits («expr ᵒᵖ» C)] : HasLimits C :=\n  { has_limits_of_shape := fun J hJ => has_limits_of_shape_of_has_colimits_of_shape_op }\n#align has_limits_of_has_colimits_op has_limits_of_has_colimits_op\n\n",
 "has_limit_of_has_colimit_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\ntheorem has_limit_of_has_colimit_op (F : «expr ⥤ » J C) [HasColimit F.op] : HasLimit F :=\n  HasLimit.mk\n    { cone := (colimit.cocone F.op).unop\n      is_limit := isLimitCoconeUnop _ (colimit.isColimit _) }\n#align has_limit_of_has_colimit_op has_limit_of_has_colimit_op\n\n",
 "has_limit_of_has_colimit_left_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/-\nCopyright (c) 2019 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Floris van Doorn\n-/\n/-- If `F.left_op : Jᵒᵖ ⥤ C` has a colimit, we can construct a limit for `F : J ⥤ Cᵒᵖ`.\n-/\ntheorem has_limit_of_has_colimit_left_op (F : «expr ⥤ » J («expr ᵒᵖ» C)) [HasColimit F.left_op] : HasLimit F :=\n  HasLimit.mk\n    { cone := coneOfCoconeLeftOp (colimit.cocone F.left_op)\n      is_limit := isLimitConeOfCoconeLeftOp _ (colimit.isColimit _) }\n#align has_limit_of_has_colimit_left_op has_limit_of_has_colimit_left_op\n\n",
 "has_finite_products_of_opposite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_finite_products_of_opposite [HasFiniteCoproducts («expr ᵒᵖ» C)] : HasFiniteProducts C :=\n  { out := fun n => hasProductsOfShape_of_opposite _ }\n#align has_finite_products_of_opposite has_finite_products_of_opposite\n\n",
 "has_finite_coproducts_of_opposite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_finite_coproducts_of_opposite [HasFiniteProducts («expr ᵒᵖ» C)] : HasFiniteCoproducts C :=\n  { out := fun n => hasCoproductsOfShape_of_opposite _ }\n#align has_finite_coproducts_of_opposite has_finite_coproducts_of_opposite\n\n",
 "has_filtered_colimits_of_has_cofiltered_limits_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_filtered_colimits_of_has_cofiltered_limits_op [HasCofilteredLimitsOfSize.{v₂, u₂} («expr ᵒᵖ» C)] :\n    HasFilteredColimitsOfSize.{v₂, u₂} C :=\n  { has_colimits_of_shape := fun I hI₁ hI₂ => has_colimits_of_shape_of_has_limits_of_shape_op }\n#align has_filtered_colimits_of_has_cofiltered_limits_op has_filtered_colimits_of_has_cofiltered_limits_op\n\n",
 "has_coproducts_of_shape_of_opposite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_coproducts_of_shape_of_opposite [HasProductsOfShape X («expr ᵒᵖ» C)] : HasCoproductsOfShape X C :=\n  haveI : has_limits_of_shape («expr ᵒᵖ» (discrete X)) («expr ᵒᵖ» C) :=\n    has_limits_of_shape_of_equivalence (discrete.opposite X).symm\n  has_colimits_of_shape_of_has_limits_of_shape_op\n#align has_coproducts_of_shape_of_opposite has_coproducts_of_shape_of_opposite\n\n",
 "has_coproducts_of_opposite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_coproducts_of_opposite [HasProducts.{v₂} («expr ᵒᵖ» C)] : HasCoproducts.{v₂} C := fun X =>\n  hasCoproductsOfShape_of_opposite X\n#align has_coproducts_of_opposite has_coproducts_of_opposite\n\n",
 "has_colimits_of_shape_of_has_limits_of_shape_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_colimits_of_shape_of_has_limits_of_shape_op [HasLimitsOfShape («expr ᵒᵖ» J) («expr ᵒᵖ» C)] :\n    HasColimitsOfShape J C :=\n  { has_colimit := fun F => hasColimit_of_hasLimit_op F }\n#align has_colimits_of_shape_of_has_limits_of_shape_op has_colimits_of_shape_of_has_limits_of_shape_op\n\n",
 "has_colimits_of_has_limits_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_colimits_of_has_limits_op [HasLimits («expr ᵒᵖ» C)] : HasColimits C :=\n  { has_colimits_of_shape := fun J hJ => has_colimits_of_shape_of_has_limits_of_shape_op }\n#align has_colimits_of_has_limits_op has_colimits_of_has_limits_op\n\n",
 "has_colimit_of_has_limit_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\ntheorem has_colimit_of_has_limit_op (F : «expr ⥤ » J C) [HasLimit F.op] : HasColimit F :=\n  HasColimit.mk\n    { cocone := (limit.cone F.op).unop\n      is_colimit := isColimitConeUnop _ (limit.isLimit _) }\n#align has_colimit_of_has_limit_op has_colimit_of_has_limit_op\n\n",
 "has_colimit_of_has_limit_left_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/-- If `F.left_op : Jᵒᵖ ⥤ C` has a limit, we can construct a colimit for `F : J ⥤ Cᵒᵖ`.\n-/\ntheorem has_colimit_of_has_limit_left_op (F : «expr ⥤ » J («expr ᵒᵖ» C)) [HasLimit F.left_op] : HasColimit F :=\n  HasColimit.mk\n    { cocone := coconeOfConeLeftOp (limit.cone F.left_op)\n      is_colimit := isColimitCoconeOfConeLeftOp _ (limit.isLimit _) }\n#align has_colimit_of_has_limit_left_op has_colimit_of_has_limit_left_op\n\n",
 "has_cofiltered_limits_of_has_filtered_colimits_op":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\ntheorem has_cofiltered_limits_of_has_filtered_colimits_op [HasFilteredColimitsOfSize.{v₂, u₂} («expr ᵒᵖ» C)] :\n    HasCofilteredLimitsOfSize.{v₂, u₂} C :=\n  { has_limits_of_shape := fun I hI₂ hI₂ => has_limits_of_shape_of_has_colimits_of_shape_op }\n#align has_cofiltered_limits_of_has_filtered_colimits_op has_cofiltered_limits_of_has_filtered_colimits_op\n\n"}