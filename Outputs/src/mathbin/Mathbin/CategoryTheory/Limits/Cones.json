{"w":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem cocone.w {F : «expr ⥤ » J C} (c : Cocone F) {j j' : J} (f : «expr ⟶ » j j') :\n    «expr ≫ » (F.map f) (c.ι.app j') = c.ι.app j :=\n  by\n  rw [c.ι.naturality f]\n  apply comp_id\n#align cocone.w cocone.w\n\n",
 "cone_iso_of_hom_iso":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-- Given a cone morphism whose object part is an isomorphism, produce an\nisomorphism of cones.\n-/\ntheorem cone_iso_of_hom_iso {K : «expr ⥤ » J C} {c d : Cone K} (f : «expr ⟶ » c d) [i : IsIso f.hom] : IsIso f :=\n  ⟨⟨{   hom := inv f.hom\n        w' := fun j => (asIso f.hom).inv_comp_eq.2 (f.w j).symm }, by tidy⟩⟩\n#align cone_iso_of_hom_iso cone_iso_of_hom_iso\n\n",
 "cocone_of_cone_left_op_ι_app":
 "-- Unfortunately this doesn't work by `tidy`.\n-- In this configuration `simp` reaches a dead-end and needs help.\n-- See note [dsimp, simp].\n-- Here and below we only automatically generate the `@[simp]` lemma for the `X` field,\n-- as we can write a simpler `rfl` lemma for the components of the natural transformation by hand.\n/- When trying use `@[simps]` to generate the `ι_app` field of this definition, `@[simps]` tries to\n  reduce the RHS using `expr.dsimp` and `expr.simp`, but for some reason the expression is not\n  being simplified properly. -/\n@[simp]\ntheorem cocone_of_cone_left_op_ι_app (c : Cone F.left_op) (j) : (coconeOfConeLeftOp c).ι.app j = (c.π.app (op j)).op :=\n  by\n  dsimp only [cocone_of_cone_left_op]\n  simp\n#align cocone_of_cone_left_op_ι_app cocone_of_cone_left_op_ι_app\n\n",
 "cocone_iso_of_hom_iso":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n-- See library note [dsimp, simp]\n/-- Given a cocone morphism whose object part is an isomorphism, produce an\nisomorphism of cocones.\n-/\ntheorem cocone_iso_of_hom_iso {K : «expr ⥤ » J C} {c d : Cocone K} (f : «expr ⟶ » c d) [i : IsIso f.hom] : IsIso f :=\n  ⟨⟨{   hom := inv f.hom\n        w' := fun j => (asIso f.hom).comp_inv_eq.2 (f.w j).symm }, by tidy⟩⟩\n#align cocone_iso_of_hom_iso cocone_iso_of_hom_iso\n\n"}