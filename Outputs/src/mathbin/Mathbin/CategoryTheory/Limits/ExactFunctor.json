{"of_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n@[simp]\ntheorem ExactFunctor.of_fst (F : «expr ⥤ » C D) [preserves_finite_limits F] [preserves_finite_colimits F] :\n    (ExactFunctor.of F).obj = F :=\n  rfl\n#align ExactFunctor.of_fst ExactFunctor.of_fst\n\n",
 "of_exact_obj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ₑ » -/\n@[simp]\ntheorem RightExactFunctor.of_exact_obj (F : «expr ⥤ₑ » C D) : (RightExactFunctor.of_exact C D).obj F = ⟨F.1, F.2.2⟩ :=\n  rfl\n#align RightExactFunctor.of_exact_obj RightExactFunctor.of_exact_obj\n\n",
 "of_exact_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ₑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem RightExactFunctor.of_exact_map {F G : «expr ⥤ₑ » C D} (α : «expr ⟶ » F G) :\n    (RightExactFunctor.of_exact C D).map α = α :=\n  rfl\n#align RightExactFunctor.of_exact_map RightExactFunctor.of_exact_map\n\n",
 "forget_obj_of":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\ntheorem ExactFunctor.forget_obj_of (F : «expr ⥤ » C D) [preserves_finite_limits F] [preserves_finite_colimits F] :\n    (ExactFunctor.forget C D).obj (ExactFunctor.of F) = F :=\n  rfl\n#align ExactFunctor.forget_obj_of ExactFunctor.forget_obj_of\n\n",
 "forget_obj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ₑ » -/\n@[simp]\ntheorem ExactFunctor.forget_obj (F : «expr ⥤ₑ » C D) : (ExactFunctor.forget C D).obj F = F.1 :=\n  rfl\n#align ExactFunctor.forget_obj ExactFunctor.forget_obj\n\n",
 "forget_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ₑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem ExactFunctor.forget_map {F G : «expr ⥤ₑ » C D} (α : «expr ⟶ » F G) : (ExactFunctor.forget C D).map α = α :=\n  rfl\n#align ExactFunctor.forget_map ExactFunctor.forget_map\n\n"}