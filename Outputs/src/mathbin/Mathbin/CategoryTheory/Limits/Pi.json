{"has_limit_of_has_limit_comp_eval":
 "/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n/-- If we have a functor `F : J ⥤ Π i, C i` into a category of indexed families,\nand we have limits for each of the `F ⋙ pi.eval C i`,\nthen `F` has a limit.\n-/\ntheorem has_limit_of_has_limit_comp_eval : HasLimit F :=\n  HasLimit.mk\n    { cone := coneOfConeCompEval fun i => limit.cone _\n      is_limit := coneOfConeEvalIsLimit fun i => limit.isLimit _ }\n#align has_limit_of_has_limit_comp_eval has_limit_of_has_limit_comp_eval\n\n",
 "has_colimit_of_has_colimit_comp_eval":
 "/-- If we have a functor `F : J ⥤ Π i, C i` into a category of indexed families,\nand colimits exist for each of the `F ⋙ pi.eval C i`,\nthere is a colimit for `F`.\n-/\ntheorem has_colimit_of_has_colimit_comp_eval : HasColimit F :=\n  HasColimit.mk\n    { cocone := coconeOfCoconeCompEval fun i => colimit.cocone _\n      is_colimit := coconeOfCoconeEvalIsColimit fun i => colimit.isColimit _ }\n#align has_colimit_of_has_colimit_comp_eval has_colimit_of_has_colimit_comp_eval\n\n"}