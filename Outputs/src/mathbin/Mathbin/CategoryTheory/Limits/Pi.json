{"has_limit_of_has_limit_comp_eval":
 "/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n/-- If we have a functor `F : J ⥤ Π i, C i` into a category of indexed families,\nand we have limits for each of the `F ⋙ pi.eval C i`,\nthen `F` has a limit.\n-/\ntheorem has_limit_of_has_limit_comp_eval : has_limit F :=\n  has_limit.mk\n    { cone := cone_of_cone_comp_eval fun i => limit.cone _\n      is_limit := cone_of_cone_eval_is_limit fun i => limit.is_limit _ }\n#align has_limit_of_has_limit_comp_eval has_limit_of_has_limit_comp_eval\n\n",
 "has_colimit_of_has_colimit_comp_eval":
 "/-- If we have a functor `F : J ⥤ Π i, C i` into a category of indexed families,\nand colimits exist for each of the `F ⋙ pi.eval C i`,\nthere is a colimit for `F`.\n-/\ntheorem has_colimit_of_has_colimit_comp_eval : has_colimit F :=\n  has_colimit.mk\n    { cocone := cocone_of_cocone_comp_eval fun i => colimit.cocone _\n      is_colimit := cocone_of_cocone_eval_is_colimit fun i => colimit.is_colimit _ }\n#align has_colimit_of_has_colimit_comp_eval has_colimit_of_has_colimit_comp_eval\n\n"}