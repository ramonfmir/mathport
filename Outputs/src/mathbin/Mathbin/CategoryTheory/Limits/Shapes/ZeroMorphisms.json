{"ι_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-- If we know `f = 0`,\nit requires a little work to conclude `image.ι f = 0`,\nbecause `f = g` only implies `image f ≅ image g`.\n-/\n@[simp]\ntheorem image.ι_zero' [HasEqualizers C] {X Y : C} {f : «expr ⟶ » X Y} (h : f = 0) [HasImage f] : image.ι f = 0 :=\n  by\n  rw [image.eq_fac h]\n  simp\n#align image.ι_zero' image.ι_zero'\n\n",
 "ι_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem image.ι_zero {X Y : C} [HasImage (0 : «expr ⟶ » X Y)] : image.ι (0 : «expr ⟶ » X Y) = 0 :=\n  by\n  rw [← image.lift_fac (mono_factorisation_zero X Y)]\n  simp\n#align image.ι_zero image.ι_zero\n\n",
 "zero_of_to_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n-- This can't be a `simp` lemma because the left hand side would be a metavariable.\n/-- An arrow ending in the zero object is zero -/\ntheorem zero_of_to_zero {X : C} (f : «expr ⟶ » X 0) : f = 0 := by ext\n#align zero_of_to_zero zero_of_to_zero\n\n",
 "zero_of_target_iso_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem zero_of_target_iso_zero' {X Y : C} (f : «expr ⟶ » X Y) (i : IsIsomorphic Y 0) : f = 0 :=\n  zero_of_target_iso_zero f (Nonempty.some i)\n#align zero_of_target_iso_zero' zero_of_target_iso_zero'\n\n",
 "zero_of_target_iso_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem zero_of_target_iso_zero {X Y : C} (f : «expr ⟶ » X Y) (i : «expr ≅ » Y 0) : f = 0 :=\n  by\n  have h : f = «expr ≫ » f («expr ≫ » i.hom («expr ≫ » ((«expr𝟙») 0) i.inv)) := by\n    simp only [iso.hom_inv_id, id_comp, comp_id]\n  simpa using h\n#align zero_of_target_iso_zero zero_of_target_iso_zero\n\n",
 "zero_of_source_iso_zero'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem zero_of_source_iso_zero' {X Y : C} (f : «expr ⟶ » X Y) (i : IsIsomorphic X 0) : f = 0 :=\n  zero_of_source_iso_zero f (Nonempty.some i)\n#align zero_of_source_iso_zero' zero_of_source_iso_zero'\n\n",
 "zero_of_source_iso_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem zero_of_source_iso_zero {X Y : C} (f : «expr ⟶ » X Y) (i : «expr ≅ » X 0) : f = 0 :=\n  by\n  have h : f = «expr ≫ » i.hom («expr ≫ » ((«expr𝟙») 0) («expr ≫ » i.inv f)) := by\n    simp only [iso.hom_inv_id_assoc, id_comp, comp_id]\n  simpa using h\n#align zero_of_source_iso_zero zero_of_source_iso_zero\n\n",
 "zero_of_from_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-- An arrow starting at the zero object is zero -/\ntheorem zero_of_from_zero {X : C} (f : «expr ⟶ » 0 X) : f = 0 := by ext\n#align zero_of_from_zero zero_of_from_zero\n\n",
 "zero_of_epi_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem zero_of_epi_comp {X Y Z : C} (f : «expr ⟶ » X Y) {g : «expr ⟶ » Y Z} [Epi f] (h : «expr ≫ » f g = 0) : g = 0 :=\n  by\n  rw [← comp_zero, cancel_epi] at h\n  exact h\n#align zero_of_epi_comp zero_of_epi_comp\n\n",
 "zero_of_comp_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem zero_of_comp_mono {X Y Z : C} {f : «expr ⟶ » X Y} (g : «expr ⟶ » Y Z) [Mono g] (h : «expr ≫ » f g = 0) :\n    f = 0 := by\n  rw [← zero_comp, cancel_mono] at h\n  exact h\n#align zero_of_comp_mono zero_of_comp_mono\n\n",
 "zero_obj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n#print CategoryTheory.Functor.zero_obj /-\n@[simp]\ntheorem CategoryTheory.Functor.zero_obj [HasZeroObject D] (X : C) : IsZero ((0 : «expr ⥤ » C D).obj X) :=\n  (isZero_zero _).obj _\n#align category_theory.functor.zero_obj CategoryTheory.Functor.zero_obj\n-/\n\n",
 "zero_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n#print CategoryTheory.zero_map /-\n@[simp]\ntheorem CategoryTheory.zero_map [HasZeroObject D] [HasZeroMorphisms D] {X Y : C} (f : «expr ⟶ » X Y) :\n    (0 : «expr ⥤ » C D).map f = 0 :=\n  (isZero_zero _).map _\n#align category_theory.zero_map CategoryTheory.zero_map\n-/\n\n",
 "zero_iso_terminal_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤_ » -/\n@[simp]\ntheorem zero_iso_terminal_inv [HasTerminal C] : zeroIsoTerminal.inv = (0 : «expr ⟶ » («expr⊤_ » C) 0) := by ext\n#align zero_iso_terminal_inv zero_iso_terminal_inv\n\n",
 "zero_iso_terminal_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤_ » -/\n@[simp]\ntheorem zero_iso_terminal_hom [HasTerminal C] : zeroIsoTerminal.hom = (0 : «expr ⟶ » 0 («expr⊤_ » C)) := by ext\n#align zero_iso_terminal_hom zero_iso_terminal_hom\n\n",
 "zero_iso_is_terminal_inv":
 "@[simp]\ntheorem zero_iso_is_terminal_inv {X : C} (t : IsTerminal X) : (zeroIsoIsTerminal t).inv = 0 := by ext\n#align zero_iso_is_terminal_inv zero_iso_is_terminal_inv\n\n",
 "zero_iso_is_terminal_hom":
 "@[simp]\ntheorem zero_iso_is_terminal_hom {X : C} (t : IsTerminal X) : (zeroIsoIsTerminal t).hom = 0 := by ext\n#align zero_iso_is_terminal_hom zero_iso_is_terminal_hom\n\n",
 "zero_iso_is_initial_inv":
 "@[simp]\ntheorem zero_iso_is_initial_inv {X : C} (t : IsInitial X) : (zeroIsoIsInitial t).inv = 0 := by ext\n#align zero_iso_is_initial_inv zero_iso_is_initial_inv\n\n",
 "zero_iso_is_initial_hom":
 "@[simp]\ntheorem zero_iso_is_initial_hom {X : C} (t : IsInitial X) : (zeroIsoIsInitial t).hom = 0 := by ext\n#align zero_iso_is_initial_hom zero_iso_is_initial_hom\n\n",
 "zero_iso_initial_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥_ » -/\n@[simp]\ntheorem zero_iso_initial_inv [HasInitial C] : zeroIsoInitial.inv = (0 : «expr ⟶ » («expr⊥_ » C) 0) := by ext\n#align zero_iso_initial_inv zero_iso_initial_inv\n\n",
 "zero_iso_initial_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥_ » -/\n@[simp]\ntheorem zero_iso_initial_hom [HasInitial C] : zeroIsoInitial.hom = (0 : «expr ⟶ » 0 («expr⊥_ » C)) := by ext\n#align zero_iso_initial_hom zero_iso_initial_hom\n\n",
 "zero_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem zero_comp [HasZeroMorphisms C] {X : C} {Y Z : C} {f : «expr ⟶ » Y Z} :\n    «expr ≫ » (0 : «expr ⟶ » X Y) f = (0 : «expr ⟶ » X Z) :=\n  has_zero_morphisms.zero_comp X f\n#align zero_comp zero_comp\n\n",
 "zero_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem zero_app (F G : «expr ⥤ » C D) (j : C) : (0 : «expr ⟶ » F G).app j = 0 :=\n  rfl\n#align zero_app zero_app\n\n",
 "of_mono_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem of_mono_zero (X Y : C) [Mono (0 : «expr ⟶ » X Y)] : IsZero X :=\n  (iff_id_eq_zero X).mpr ((cancel_mono (0 : «expr ⟶ » X Y)).1 (by simp))\n#align of_mono_zero of_mono_zero\n\n",
 "of_mono_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem of_mono_eq_zero {X Y : C} (f : «expr ⟶ » X Y) [Mono f] (h : f = 0) : IsZero X :=\n  by\n  subst h\n  apply of_mono_zero X Y\n#align of_mono_eq_zero of_mono_eq_zero\n\n",
 "of_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem of_mono {X Y : C} (f : «expr ⟶ » X Y) [Mono f] (i : IsZero Y) : IsZero X :=\n  by\n  have hf := i.eq_zero_of_tgt f\n  subst hf\n  exact is_zero.of_mono_zero X Y\n#align of_mono of_mono\n\n",
 "of_epi_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem of_epi_zero (X Y : C) [Epi (0 : «expr ⟶ » X Y)] : IsZero Y :=\n  (iff_id_eq_zero Y).mpr ((cancel_epi (0 : «expr ⟶ » X Y)).1 (by simp))\n#align of_epi_zero of_epi_zero\n\n",
 "of_epi_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem of_epi_eq_zero {X Y : C} (f : «expr ⟶ » X Y) [Epi f] (h : f = 0) : IsZero Y :=\n  by\n  subst h\n  apply of_epi_zero X Y\n#align of_epi_eq_zero of_epi_eq_zero\n\n",
 "of_epi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem of_epi {X Y : C} (f : «expr ⟶ » X Y) [Epi f] (i : IsZero X) : IsZero Y :=\n  by\n  have hf := i.eq_zero_of_src f\n  subst hf\n  exact is_zero.of_epi_zero X Y\n#align of_epi of_epi\n\n",
 "nonzero_image_of_nonzero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem nonzero_image_of_nonzero {X Y : C} {f : «expr ⟶ » X Y} [HasImage f] (w : f ≠ 0) : image.ι f ≠ 0 := fun h =>\n  w (eq_zero_of_image_eq_zero h)\n#align nonzero_image_of_nonzero nonzero_image_of_nonzero\n\n",
 "mono_of_source_iso_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem mono_of_source_iso_zero {X Y : C} (f : «expr ⟶ » X Y) (i : «expr ≅ » X 0) : Mono f :=\n  ⟨fun Z g h w => by rw [zero_of_target_iso_zero g i, zero_of_target_iso_zero h i]⟩\n#align mono_of_source_iso_zero mono_of_source_iso_zero\n\n",
 "map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem is_zero.map [HasZeroObject D] [HasZeroMorphisms D] {F : «expr ⥤ » C D} (hF : IsZero F) {X Y : C}\n    (f : «expr ⟶ » X Y) : F.map f = 0 :=\n  (hF.obj _).eq_of_src _ _\n#align is_zero.map is_zero.map\n\n",
 "is_iso_of_source_target_iso_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n-- This is lame, because `prod` can't cope with `Prop`, so we can't use `equiv.prod_congr`.\ntheorem is_iso_of_source_target_iso_zero {X Y : C} (f : «expr ⟶ » X Y) (i : «expr ≅ » X 0) (j : «expr ≅ » Y 0) :\n    IsIso f := by\n  rw [zero_of_source_iso_zero f i]\n  exact (is_iso_zero_equiv_iso_zero _ _).inv_fun ⟨i, j⟩\n#align is_iso_of_source_target_iso_zero is_iso_of_source_target_iso_zero\n\n",
 "image_ι_comp_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem image_ι_comp_eq_zero {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » Y Z} [HasImage f] [Epi (factorThruImage f)]\n    (h : «expr ≫ » f g = 0) : «expr ≫ » (image.ι f) g = 0 :=\n  zero_of_epi_comp (factorThruImage f) <| by simp [h]\n#align image_ι_comp_eq_zero image_ι_comp_eq_zero\n\n",
 "iff_is_split_mono_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem iff_is_split_mono_eq_zero {X Y : C} (f : «expr ⟶ » X Y) [IsSplitMono f] : IsZero X ↔ f = 0 :=\n  by\n  rw [iff_id_eq_zero]\n  constructor\n  · intro h\n    rw [← category.id_comp f, h, zero_comp]\n  · intro h\n    rw [← is_split_mono.id f]\n    simp [h]\n#align iff_is_split_mono_eq_zero iff_is_split_mono_eq_zero\n\n",
 "iff_is_split_epi_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem iff_is_split_epi_eq_zero {X Y : C} (f : «expr ⟶ » X Y) [IsSplitEpi f] : IsZero Y ↔ f = 0 :=\n  by\n  rw [iff_id_eq_zero]\n  constructor\n  · intro h\n    rw [← category.comp_id f, h, comp_zero]\n  · intro h\n    rw [← is_split_epi.id f]\n    simp [h]\n#align iff_is_split_epi_eq_zero iff_is_split_epi_eq_zero\n\n",
 "iff_id_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem iff_id_eq_zero (X : C) : IsZero X ↔ («expr𝟙») X = 0 :=\n  ⟨fun h => h.eq_of_src _ _, fun h =>\n    ⟨fun Y => ⟨⟨⟨0⟩, fun f => by rw [← id_comp f, ← id_comp default, h, zero_comp, zero_comp]⟩⟩, fun Y =>\n      ⟨⟨⟨0⟩, fun f => by rw [← comp_id f, ← comp_id default, h, comp_zero, comp_zero]⟩⟩⟩⟩\n#align iff_id_eq_zero iff_id_eq_zero\n\n",
 "id_zero_equiv_iso_zero_apply_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem id_zero_equiv_iso_zero_apply_inv (X : C) (h : («expr𝟙») X = 0) : ((idZeroEquivIsoZero X) h).inv = 0 :=\n  rfl\n#align id_zero_equiv_iso_zero_apply_inv id_zero_equiv_iso_zero_apply_inv\n\n",
 "id_zero_equiv_iso_zero_apply_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem id_zero_equiv_iso_zero_apply_hom (X : C) (h : («expr𝟙») X = 0) : ((idZeroEquivIsoZero X) h).hom = 0 :=\n  rfl\n#align id_zero_equiv_iso_zero_apply_hom id_zero_equiv_iso_zero_apply_hom\n\n",
 "id_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem id_zero : («expr𝟙») (0 : C) = (0 : «expr ⟶ » 0 0) := by ext\n#align id_zero id_zero\n\n",
 "has_zero_object_of_has_terminal_object":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤_ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-- If there are zero morphisms, any terminal object is a zero object. -/\ntheorem has_zero_object_of_has_terminal_object [HasZeroMorphisms C] [HasTerminal C] : HasZeroObject C :=\n  by\n  refine' ⟨⟨«expr⊤_ » C, fun X => ⟨⟨⟨0⟩, fun f => _⟩⟩, fun X => ⟨⟨⟨0⟩, by tidy⟩⟩⟩⟩\n  calc\n    f = «expr ≫ » ((«expr𝟙») _) f := (category.id_comp _).symm\n    _ = «expr ≫ » 0 f := by congr\n    _ = 0 := zero_comp\n    \n#align has_zero_object_of_has_terminal_object has_zero_object_of_has_terminal_object\n\n",
 "has_zero_object_of_has_initial_object":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥_ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-- If there are zero morphisms, any initial object is a zero object. -/\ntheorem has_zero_object_of_has_initial_object [HasZeroMorphisms C] [HasInitial C] : HasZeroObject C :=\n  by\n  refine' ⟨⟨«expr⊥_ » C, fun X => ⟨⟨⟨0⟩, by tidy⟩⟩, fun X => ⟨⟨⟨0⟩, fun f => _⟩⟩⟩⟩\n  calc\n    f = «expr ≫ » f ((«expr𝟙») _) := (category.comp_id _).symm\n    _ = «expr ≫ » f 0 := by congr\n    _ = 0 := has_zero_morphisms.comp_zero _ _\n    \n#align has_zero_object_of_has_initial_object has_zero_object_of_has_initial_object\n\n",
 "ext_aux":
 "/-- This lemma will be immediately superseded by `ext`, below. -/\nprivate theorem ext_aux (I J : HasZeroMorphisms C)\n    (w : ∀ X Y : C, (@has_zero_morphisms.has_zero _ _ I X Y).zero = (@has_zero_morphisms.has_zero _ _ J X Y).zero) :\n    I = J := by\n  cases I; cases J\n  congr\n  · ext (X Y)\n    exact w X Y\n  · apply proof_irrel_heq\n  · apply proof_irrel_heq\n#align ext_aux ext_aux\n\n",
 "ext":
 "/-- If you're tempted to use this lemma \"in the wild\", you should probably\ncarefully consider whether you've made a mistake in allowing two\ninstances of `has_zero_morphisms` to exist at all.\n\nSee, particularly, the note on `zero_morphisms_of_zero_object` below.\n-/\ntheorem ext (I J : HasZeroMorphisms C) : I = J := by\n  apply ext_aux\n  intro X Y\n  rw [← @has_zero_morphisms.comp_zero _ _ I X X (@has_zero_morphisms.has_zero _ _ J X X).zero]\n  rw [@has_zero_morphisms.zero_comp _ _ J]\n#align ext ext\n\n",
 "eq_zero_of_tgt":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem eq_zero_of_tgt {X Y : C} (o : IsZero Y) (f : «expr ⟶ » X Y) : f = 0 :=\n  o.eq_of_tgt _ _\n#align eq_zero_of_tgt eq_zero_of_tgt\n\n",
 "eq_zero_of_src":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem eq_zero_of_src {X Y : C} (o : IsZero X) (f : «expr ⟶ » X Y) : f = 0 :=\n  o.eq_of_src _ _\n#align eq_zero_of_src eq_zero_of_src\n\n",
 "eq_zero_of_image_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem eq_zero_of_image_eq_zero {X Y : C} {f : «expr ⟶ » X Y} [HasImage f] (w : image.ι f = 0) : f = 0 := by\n  rw [← image.fac f, w, has_zero_morphisms.comp_zero]\n#align eq_zero_of_image_eq_zero eq_zero_of_image_eq_zero\n\n",
 "epi_of_target_iso_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\ntheorem epi_of_target_iso_zero {X Y : C} (f : «expr ⟶ » X Y) (i : «expr ≅ » Y 0) : Epi f :=\n  ⟨fun Z g h w => by rw [zero_of_source_iso_zero g i, zero_of_source_iso_zero h i]⟩\n#align epi_of_target_iso_zero epi_of_target_iso_zero\n\n",
 "comp_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-\nCopyright (c) 2019 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n@[simp]\ntheorem comp_zero [HasZeroMorphisms C] {X Y : C} {f : «expr ⟶ » X Y} {Z : C} :\n    «expr ≫ » f (0 : «expr ⟶ » Y Z) = (0 : «expr ⟶ » X Z) :=\n  has_zero_morphisms.comp_zero f Z\n#align comp_zero comp_zero\n\n",
 "comp_factor_thru_image_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem comp_factor_thru_image_eq_zero {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » Y Z} [HasImage g]\n    (h : «expr ≫ » f g = 0) : «expr ≫ » f (factorThruImage g) = 0 :=\n  zero_of_comp_mono (image.ι g) <| by simp [h]\n#align comp_factor_thru_image_eq_zero comp_factor_thru_image_eq_zero\n\n"}