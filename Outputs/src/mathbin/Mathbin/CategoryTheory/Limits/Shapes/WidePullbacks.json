{"π_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem π_arrow (j : J) : «expr ≫ » (π arrows j) (arrows _) = base arrows := by\n  apply limit.w (wide_pullback_shape.wide_cospan _ _ _) (wide_pullback_shape.hom.term j)\n#align π_arrow π_arrow\n\n",
 "ι_desc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ι_desc (j : J) : «expr ≫ » (ι arrows j) (desc f fs w) = fs _ :=\n  by\n  simp\n  rfl\n#align ι_desc ι_desc\n\n",
 "lift_π":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem lift_π (j : J) : «expr ≫ » (lift f fs w) (π arrows j) = fs _ :=\n  by\n  simp\n  rfl\n#align lift_π lift_π\n\n",
 "lift_base":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem lift_base : «expr ≫ » (lift f fs w) (base arrows) = f :=\n  by\n  simp\n  rfl\n#align lift_base lift_base\n\n",
 "hom_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem hom_id (X : WidePushoutShape J) : hom.id X = («expr𝟙») X :=\n  rfl\n#align hom_id hom_id\n\n",
 "hom_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[ext]\ntheorem hom_ext (g1 g2 : «expr ⟶ » (widePushout _ _ arrows) X) :\n    (∀ j : J, «expr ≫ » (ι arrows j) g1 = «expr ≫ » (ι arrows j) g2) →\n      «expr ≫ » (head arrows) g1 = «expr ≫ » (head arrows) g2 → g1 = g2 :=\n  by\n  intro h1 h2\n  apply colimit.hom_ext\n  rintro (_ | _)\n  · apply h2\n  · apply h1\n#align hom_ext hom_ext\n\n",
 "hom_eq_lift":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem hom_eq_lift (g : «expr ⟶ » X (widePullback _ _ arrows)) :\n    g = lift («expr ≫ » g (base arrows)) (fun j => «expr ≫ » g (π arrows j)) (by tidy) :=\n  by\n  apply eq_lift_of_comp_eq\n  tidy\n#align hom_eq_lift hom_eq_lift\n\n",
 "hom_eq_desc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem hom_eq_desc (g : «expr ⟶ » (widePushout _ _ arrows) X) :\n    g =\n      desc («expr ≫ » (head arrows) g) (fun j => «expr ≫ » (ι arrows j) g) fun j =>\n        by\n        rw [← category.assoc]\n        simp :=\n  by\n  apply eq_desc_of_comp_eq\n  tidy\n#align hom_eq_desc hom_eq_desc\n\n",
 "head_desc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem head_desc : «expr ≫ » (head arrows) (desc f fs w) = f :=\n  by\n  simp\n  rfl\n#align head_desc head_desc\n\n",
 "has_wide_pullbacks_shrink":
 "/-- If a category has wide pullbacks on a higher universe level it also has wide pullbacks\non a lower universe level. -/\ntheorem has_wide_pullbacks_shrink [HasWidePullbacks.{max w w'} C] : HasWidePullbacks.{w} C := fun J =>\n  hasLimitsOfShape_of_equivalence (WidePullbackShape.equivalenceOfEquiv _ Equiv.ulift.{w'})\n#align has_wide_pullbacks_shrink has_wide_pullbacks_shrink\n\n",
 "eq_lift_of_comp_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem eq_lift_of_comp_eq (g : «expr ⟶ » X (widePullback _ _ arrows)) :\n    (∀ j : J, «expr ≫ » g (π arrows j) = fs j) → «expr ≫ » g (base arrows) = f → g = lift f fs w :=\n  by\n  intro h1 h2\n  apply (limit.is_limit (wide_pullback_shape.wide_cospan B objs arrows)).uniq (wide_pullback_shape.mk_cone f fs <| w)\n  rintro (_ | _)\n  · apply h2\n  · apply h1\n#align eq_lift_of_comp_eq eq_lift_of_comp_eq\n\n",
 "eq_desc_of_comp_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem eq_desc_of_comp_eq (g : «expr ⟶ » (widePushout _ _ arrows) X) :\n    (∀ j : J, «expr ≫ » (ι arrows j) g = fs j) → «expr ≫ » (head arrows) g = f → g = desc f fs w :=\n  by\n  intro h1 h2\n  apply (colimit.is_colimit (wide_pushout_shape.wide_span B objs arrows)).uniq (wide_pushout_shape.mk_cocone f fs <| w)\n  rintro (_ | _)\n  · apply h2\n  · apply h1\n#align eq_desc_of_comp_eq eq_desc_of_comp_eq\n\n",
 "arrow_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem arrow_ι (j : J) : «expr ≫ » (arrows j) (ι arrows j) = head arrows := by\n  apply colimit.w (wide_pushout_shape.wide_span _ _ _) (wide_pushout_shape.hom.init j)\n#align arrow_ι arrow_ι\n\n"}