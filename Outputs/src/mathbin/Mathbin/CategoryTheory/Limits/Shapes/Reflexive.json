{"swap":
 "-- This shouldn't be an instance as it would instantly loop.\n/-- If `f,g` is coreflexive, then `g,f` is coreflexive. -/\ntheorem is_coreflexive_pair.swap [is_coreflexive_pair f g] : is_coreflexive_pair g f :=\n  is_coreflexive_pair.mk' _ (right_comp_retraction f g) (left_comp_retraction f g)\n#align is_coreflexive_pair.swap is_coreflexive_pair.swap\n\n",
 "section_comp_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem section_comp_right (f g : «expr ⟶ » A B) [is_reflexive_pair f g] :\n    «expr ≫ » (common_section f g) g = («expr𝟙») B :=\n  (is_reflexive_pair.common_section f g).some_spec.2\n#align section_comp_right section_comp_right\n\n",
 "section_comp_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem section_comp_left (f g : «expr ⟶ » A B) [is_reflexive_pair f g] :\n    «expr ≫ » (common_section f g) f = («expr𝟙») B :=\n  (is_reflexive_pair.common_section f g).some_spec.1\n#align section_comp_left section_comp_left\n\n",
 "right_comp_retraction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem right_comp_retraction (f g : «expr ⟶ » A B) [is_coreflexive_pair f g] :\n    «expr ≫ » g (common_retraction f g) = («expr𝟙») A :=\n  (is_coreflexive_pair.common_retraction f g).some_spec.2\n#align right_comp_retraction right_comp_retraction\n\n",
 "mk'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem is_coreflexive_pair.mk' (s : «expr ⟶ » B A) (fs : «expr ≫ » f s = («expr𝟙») A)\n    (gs : «expr ≫ » g s = («expr𝟙») A) : is_coreflexive_pair f g :=\n  ⟨⟨s, fs, gs⟩⟩\n#align is_coreflexive_pair.mk' is_coreflexive_pair.mk'\n\n",
 "left_comp_retraction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem left_comp_retraction (f g : «expr ⟶ » A B) [is_coreflexive_pair f g] :\n    «expr ≫ » f (common_retraction f g) = («expr𝟙») A :=\n  (is_coreflexive_pair.common_retraction f g).some_spec.1\n#align left_comp_retraction left_comp_retraction\n\n",
 "is_reflexive_pair":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-- If `f,g` is a kernel pair for some morphism `q`, then it is reflexive. -/\ntheorem is_kernel_pair.is_reflexive_pair {R : C} {f g : «expr ⟶ » R A} {q : «expr ⟶ » A B} (h : is_kernel_pair q f g) :\n    is_reflexive_pair f g :=\n  is_reflexive_pair.mk' _ (h.lift' _ _ rfl).2.1 (h.lift' _ _ _).2.2\n#align is_kernel_pair.is_reflexive_pair is_kernel_pair.is_reflexive_pair\n\n",
 "has_equalizer_of_common_retraction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem has_equalizer_of_common_retraction [has_coreflexive_equalizers C] {A B : C} {f g : «expr ⟶ » A B}\n    (r : «expr ⟶ » B A) (fr : «expr ≫ » f r = («expr𝟙») _) (gr : «expr ≫ » g r = («expr𝟙») _) : has_equalizer f g :=\n  by\n  letI := is_coreflexive_pair.mk' r fr gr\n  infer_instance\n#align has_equalizer_of_common_retraction has_equalizer_of_common_retraction\n\n",
 "has_coequalizer_of_common_section":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem has_coequalizer_of_common_section [has_reflexive_coequalizers C] {A B : C} {f g : «expr ⟶ » A B}\n    (r : «expr ⟶ » B A) (rf : «expr ≫ » r f = («expr𝟙») _) (rg : «expr ≫ » r g = («expr𝟙») _) : has_coequalizer f g :=\n  by\n  letI := is_reflexive_pair.mk' r rf rg\n  infer_instance\n#align has_coequalizer_of_common_section has_coequalizer_of_common_section\n\n"}