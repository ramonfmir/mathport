{"π_eq_app_right":
 "@[simp]\ntheorem π_eq_app_right (b) : K.ι.app (walking_multispan.right _) = K.π b :=\n  rfl\n#align π_eq_app_right π_eq_app_right\n\n",
 "π_desc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem π_desc (W : C) (k : ∀ b, «expr ⟶ » (I.right b) W)\n    (h : ∀ a, «expr ≫ » (I.fst a) (k (I.fst_from a)) = «expr ≫ » (I.snd a) (k (I.snd_from a))) (b) :\n    «expr ≫ » (Multicoequalizer.π I b) (Multicoequalizer.desc I _ k h) = k _ :=\n  colimit.ι_desc _ _\n#align π_desc π_desc\n\n",
 "ι_snd_sigma_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ι_snd_sigma_map (b) : «expr ≫ » (Sigma.ι I.left b) I.snd_sigma_map = «expr ≫ » (I.snd b) (Sigma.ι I.right _) :=\n  by simp [snd_sigma_map]\n#align ι_snd_sigma_map ι_snd_sigma_map\n\n",
 "ι_sigma_π":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ι_sigma_π (b) : «expr ≫ » (Sigma.ι I.right b) (sigmaπ I) = π I b :=\n  by\n  rw [sigma_π, ← category.assoc, iso.comp_inv_eq, iso_coequalizer]\n  simpa\n#align ι_sigma_π ι_sigma_π\n\n",
 "ι_pi_π":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ι_pi_π (a) : «expr ≫ » (ιPi I) (Pi.π I.left a) = ι I a :=\n  by\n  rw [ι_pi, category.assoc, ← iso.eq_inv_comp, iso_equalizer]\n  simpa\n#align ι_pi_π ι_pi_π\n\n",
 "ι_fst_sigma_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ι_fst_sigma_map (b) : «expr ≫ » (Sigma.ι I.left b) I.fst_sigma_map = «expr ≫ » (I.fst b) (Sigma.ι I.right _) :=\n  by simp [fst_sigma_map]\n#align ι_fst_sigma_map ι_fst_sigma_map\n\n",
 "to_sigma_cofork_π":
 "@[simp]\ntheorem to_sigma_cofork_π : K.to_sigma_cofork.π = Sigma.desc K.π :=\n  rfl\n#align to_sigma_cofork_π to_sigma_cofork_π\n\n",
 "to_pi_fork_π_app_zero":
 "@[simp]\ntheorem to_pi_fork_π_app_zero : K.to_pi_fork.ι = Pi.lift K.ι :=\n  rfl\n#align to_pi_fork_π_app_zero to_pi_fork_π_app_zero\n\n",
 "to_pi_fork_π_app_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem to_pi_fork_π_app_one : K.to_pi_fork.π.app walking_parallel_pair.one = «expr ≫ » (Pi.lift K.ι) I.fst_pi_map :=\n  rfl\n#align to_pi_fork_π_app_one to_pi_fork_π_app_one\n\n",
 "snd_pi_map_π":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem snd_pi_map_π (b) : «expr ≫ » I.snd_pi_map (Pi.π I.right b) = «expr ≫ » (Pi.π I.left _) (I.snd b) := by\n  simp [snd_pi_map]\n#align snd_pi_map_π snd_pi_map_π\n\n",
 "snd_app_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem snd_app_right (a) : K.ι.app (walking_multispan.left a) = «expr ≫ » (I.snd a) (K.π _) :=\n  by\n  rw [← K.w (walking_multispan.hom.snd a)]\n  rfl\n#align snd_app_right snd_app_right\n\n",
 "sigma_condition":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `discrete_cases #[] -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem sigma_condition : «expr ≫ » I.fst_sigma_map (Sigma.desc K.π) = «expr ≫ » I.snd_sigma_map (Sigma.desc K.π) :=\n  by\n  ext\n  trace \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `discrete_cases #[]\"\n  simp\n#align sigma_condition sigma_condition\n\n",
 "pi_condition":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `discrete_cases #[] -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem pi_condition : «expr ≫ » (Pi.lift K.ι) I.fst_pi_map = «expr ≫ » (Pi.lift K.ι) I.snd_pi_map :=\n  by\n  ext\n  trace \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `discrete_cases #[]\"\n  simp\n#align pi_condition pi_condition\n\n",
 "of_sigma_cofork_ι_app_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem of_sigma_cofork_ι_app_right (c : Cofork I.fst_sigma_map I.snd_sigma_map) (b) :\n    (ofSigmaCofork I c).ι.app (walking_multispan.right b) = «expr ≫ » (Sigma.ι I.right b : _) c.π :=\n  rfl\n#align of_sigma_cofork_ι_app_right of_sigma_cofork_ι_app_right\n\n",
 "of_sigma_cofork_ι_app_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem of_sigma_cofork_ι_app_left (c : Cofork I.fst_sigma_map I.snd_sigma_map) (a) :\n    (ofSigmaCofork I c).ι.app (walking_multispan.left a) =\n      «expr ≫ » (Sigma.ι I.left a : _) («expr ≫ » I.fst_sigma_map c.π) :=\n  rfl\n#align of_sigma_cofork_ι_app_left of_sigma_cofork_ι_app_left\n\n",
 "of_pi_fork_π_app_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem of_pi_fork_π_app_right (c : Fork I.fst_pi_map I.snd_pi_map) (a) :\n    (ofPiFork I c).π.app (walking_multicospan.right a) = «expr ≫ » c.ι («expr ≫ » I.fst_pi_map (Pi.π _ _)) :=\n  rfl\n#align of_pi_fork_π_app_right of_pi_fork_π_app_right\n\n",
 "of_pi_fork_π_app_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem of_pi_fork_π_app_left (c : Fork I.fst_pi_map I.snd_pi_map) (a) :\n    (ofPiFork I c).ι a = «expr ≫ » c.ι (Pi.π _ _) :=\n  rfl\n#align of_pi_fork_π_app_left of_pi_fork_π_app_left\n\n",
 "multispan_obj_right":
 "@[simp]\ntheorem multispan_obj_right (b) : I.multispan.obj (walking_multispan.right b) = I.right b :=\n  rfl\n#align multispan_obj_right multispan_obj_right\n\n",
 "multispan_obj_left":
 "@[simp]\ntheorem multispan_obj_left (a) : I.multispan.obj (walking_multispan.left a) = I.left a :=\n  rfl\n#align multispan_obj_left multispan_obj_left\n\n",
 "multispan_map_snd":
 "@[simp]\ntheorem multispan_map_snd (a) : I.multispan.map (walking_multispan.hom.snd a) = I.snd a :=\n  rfl\n#align multispan_map_snd multispan_map_snd\n\n",
 "multispan_map_fst":
 "@[simp]\ntheorem multispan_map_fst (a) : I.multispan.map (walking_multispan.hom.fst a) = I.fst a :=\n  rfl\n#align multispan_map_fst multispan_map_fst\n\n",
 "multifork_π_app_left":
 "@[simp]\ntheorem multifork_π_app_left (a) :\n    (Multiequalizer.multifork I).π.app (walking_multicospan.left a) = Multiequalizer.ι I a :=\n  rfl\n#align multifork_π_app_left multifork_π_app_left\n\n",
 "multifork_ι":
 "@[simp]\ntheorem multifork_ι (a) : (Multiequalizer.multifork I).ι a = Multiequalizer.ι I a :=\n  rfl\n#align multifork_ι multifork_ι\n\n",
 "multicospan_obj_right":
 "@[simp]\ntheorem multicospan_obj_right (b) : I.multicospan.obj (walking_multicospan.right b) = I.right b :=\n  rfl\n#align multicospan_obj_right multicospan_obj_right\n\n",
 "multicospan_obj_left":
 "/-\nCopyright (c) 2021 Adam Topaz. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Adam Topaz\n-/\n@[simp]\ntheorem multicospan_obj_left (a) : I.multicospan.obj (walking_multicospan.left a) = I.left a :=\n  rfl\n#align multicospan_obj_left multicospan_obj_left\n\n",
 "multicospan_map_snd":
 "@[simp]\ntheorem multicospan_map_snd (b) : I.multicospan.map (walking_multicospan.hom.snd b) = I.snd b :=\n  rfl\n#align multicospan_map_snd multicospan_map_snd\n\n",
 "multicospan_map_fst":
 "@[simp]\ntheorem multicospan_map_fst (b) : I.multicospan.map (walking_multicospan.hom.fst b) = I.fst b :=\n  rfl\n#align multicospan_map_fst multicospan_map_fst\n\n",
 "multicofork_π":
 "@[simp]\ntheorem multicofork_π (b) : (Multicoequalizer.multicofork I).π b = Multicoequalizer.π I b :=\n  rfl\n#align multicofork_π multicofork_π\n\n",
 "multicofork_ι_app_right":
 "@[simp]\ntheorem multicofork_ι_app_right (b) :\n    (Multicoequalizer.multicofork I).ι.app (walking_multispan.right b) = Multicoequalizer.π I b :=\n  rfl\n#align multicofork_ι_app_right multicofork_ι_app_right\n\n",
 "lift_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem lift_ι (W : C) (k : ∀ a, «expr ⟶ » W (I.left a))\n    (h : ∀ b, «expr ≫ » (k (I.fst_to b)) (I.fst b) = «expr ≫ » (k (I.snd_to b)) (I.snd b)) (a) :\n    «expr ≫ » (Multiequalizer.lift I _ k h) (Multiequalizer.ι I a) = k _ :=\n  limit.lift_π _ _\n#align lift_ι lift_ι\n\n",
 "hom_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[ext]\ntheorem hom_ext {W : C} (i j : «expr ⟶ » (multicoequalizer I) W)\n    (h : ∀ b, «expr ≫ » (Multicoequalizer.π I b) i = «expr ≫ » (Multicoequalizer.π I b) j) : i = j :=\n  colimit.hom_ext\n    (by\n      rintro (a | b)\n      · simp_rw [← colimit.w I.multispan (walking_multispan.hom.fst a), category.assoc, h]\n      · apply h)\n#align hom_ext hom_ext\n\n",
 "hom_comp_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem hom_comp_ι (K₁ K₂ : Multifork I) (f : «expr ⟶ » K₁ K₂) (j : I.L) : «expr ≫ » f.hom (K₂.ι j) = K₁.ι j :=\n  f.w (walking_multicospan.left j)\n#align hom_comp_ι hom_comp_ι\n\n",
 "fst_pi_map_π":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem fst_pi_map_π (b) : «expr ≫ » I.fst_pi_map (Pi.π I.right b) = «expr ≫ » (Pi.π I.left _) (I.fst b) := by\n  simp [fst_pi_map]\n#align fst_pi_map_π fst_pi_map_π\n\n",
 "fst_app_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem fst_app_right (a) : K.ι.app (walking_multispan.left a) = «expr ≫ » (I.fst a) (K.π _) :=\n  by\n  rw [← K.w (walking_multispan.hom.fst a)]\n  rfl\n#align fst_app_right fst_app_right\n\n",
 "condition":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem condition (a) :\n    «expr ≫ » (I.fst a) (Multicoequalizer.π I (I.fst_from a)) =\n      «expr ≫ » (I.snd a) (Multicoequalizer.π I (I.snd_from a)) :=\n  Multicofork.condition _ _\n#align condition condition\n\n",
 "app_right_eq_ι_comp_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem app_right_eq_ι_comp_snd (b) : K.π.app (walking_multicospan.right b) = «expr ≫ » (K.ι (I.snd_to b)) (I.snd b) :=\n  by\n  rw [← K.w (walking_multicospan.hom.snd b)]\n  rfl\n#align app_right_eq_ι_comp_snd app_right_eq_ι_comp_snd\n\n",
 "app_right_eq_ι_comp_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem app_right_eq_ι_comp_fst (b) : K.π.app (walking_multicospan.right b) = «expr ≫ » (K.ι (I.fst_to b)) (I.fst b) :=\n  by\n  rw [← K.w (walking_multicospan.hom.fst b)]\n  rfl\n#align app_right_eq_ι_comp_fst app_right_eq_ι_comp_fst\n\n",
 "app_left_eq_ι":
 "@[simp]\ntheorem app_left_eq_ι (a) : K.π.app (walking_multicospan.left a) = K.ι a :=\n  rfl\n#align app_left_eq_ι app_left_eq_ι\n\n"}