{"reflective":
 "/-\nCopyright (c) 2021 Adam Topaz. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Bhavik Mehta, Adam Topaz\n-/\ntheorem reflective [Full ι] [Faithful ι] [∀ X, HasLimitsOfShape (StructuredArrow X ι) D] :\n    IsIso (adjunction D ι).counit := by\n  apply nat_iso.is_iso_of_is_iso_app _\n  intro F\n  apply nat_iso.is_iso_of_is_iso_app _\n  intro X\n  dsimp [adjunction]\n  simp only [category.id_comp]\n  exact\n    is_iso.of_iso\n      ((limit.is_limit _).cone_point_unique_up_to_iso (limit_of_diagram_initial structured_arrow.mk_id_initial _))\n#align reflective reflective\n\n",
 "coreflective":
 "-- I don't know why lean can't deduce the following three instances...\n-- sigh\n-- same issue :-(\ntheorem coreflective [Full ι] [Faithful ι] [∀ X, HasColimitsOfShape (CostructuredArrow ι X) D] :\n    IsIso (adjunction D ι).unit := by\n  apply nat_iso.is_iso_of_is_iso_app _\n  intro F\n  apply nat_iso.is_iso_of_is_iso_app _\n  intro X\n  dsimp [adjunction]\n  simp only [category.comp_id]\n  exact\n    is_iso.of_iso\n      ((colimit.is_colimit _).cocone_point_unique_up_to_iso\n          (colimit_of_diagram_terminal costructured_arrow.mk_id_terminal _)).symm\n#align coreflective coreflective\n\n"}