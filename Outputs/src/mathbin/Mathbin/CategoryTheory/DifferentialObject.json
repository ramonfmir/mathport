{"zero_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem zero_f (P Q : differential_object C) : (0 : «expr ⟶ » P Q).f = 0 :=\n  rfl\n#align zero_f zero_f\n\n",
 "iso_app_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n@[simp]\ntheorem iso_app_trans {X Y Z : differential_object C} (f : «expr ≅ » X Y) (g : «expr ≅ » Y Z) :\n    iso_app («expr ≪≫ » f g) = «expr ≪≫ » (iso_app f) (iso_app g) :=\n  rfl\n#align iso_app_trans iso_app_trans\n\n",
 "iso_app_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n@[simp]\ntheorem iso_app_symm {X Y : differential_object C} (f : «expr ≅ » X Y) : iso_app f.symm = (iso_app f).symm :=\n  rfl\n#align iso_app_symm iso_app_symm\n\n",
 "iso_app_refl":
 "@[simp]\ntheorem iso_app_refl (X : differential_object C) : iso_app (Iso.refl X) = Iso.refl X.X :=\n  rfl\n#align iso_app_refl iso_app_refl\n\n",
 "id_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n-- TODO: generalize to `has_shift C A` for an arbitrary `[add_monoid A]` `[has_one A]`.\n@[simp]\ntheorem id_f (X : differential_object C) : ((«expr𝟙») X : «expr ⟶ » X X).f = («expr𝟙») X.X :=\n  rfl\n#align id_f id_f\n\n",
 "eq_to_hom_f":
 "@[simp]\ntheorem eq_to_hom_f {X Y : differential_object C} (h : X = Y) : hom.f (eq_to_hom h) = eq_to_hom (congr_arg _ h) :=\n  by\n  subst h\n  rw [eq_to_hom_refl, eq_to_hom_refl]\n  rfl\n#align eq_to_hom_f eq_to_hom_f\n\n",
 "comp_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem comp_f {X Y Z : differential_object C} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) :\n    («expr ≫ » f g).f = «expr ≫ » f.f g.f :=\n  rfl\n#align comp_f comp_f\n\n"}