{"is_thin_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-\nCopyright (c) 2022 Rémi Bottinelli. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Rémi Bottinelli\n-/\ntheorem is_thin_iff : Quiver.IsThin C ↔ ∀ c : C, subsingleton («expr ⟶ » c c) :=\n  by\n  refine' ⟨fun h c => h c c, fun h c d => subsingleton.intro fun f g => _⟩\n  haveI := h d\n  calc\n    f = «expr ≫ » f («expr ≫ » (inv g) g) := by simp only [inv_eq_inv, is_iso.inv_hom_id, category.comp_id]\n    _ = «expr ≫ » f («expr ≫ » (inv f) g) := by congr\n    _ = g := by simp only [inv_eq_inv, is_iso.hom_inv_id_assoc]\n    \n#align is_thin_iff is_thin_iff\n\n"}