{"nat_trans_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n@[simp]\ntheorem nat_trans_app {F G : «expr ⥤ » (Σi, C i) D}\n    (h : ∀ i : I, «expr ⟶ » («expr ⋙ » (incl i) F) («expr ⋙ » (incl i) G)) (i : I) (X : C i) :\n    (natTrans h).app ⟨i, X⟩ = (h i).app X :=\n  rfl\n#align nat_trans_app nat_trans_app\n\n",
 "map_obj":
 "@[simp]\ntheorem map_obj (j : J) (X : C (g j)) : (Sigma.map C g).obj ⟨j, X⟩ = ⟨g j, X⟩ :=\n  rfl\n#align map_obj map_obj\n\n",
 "map_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem map_map {j : J} {X Y : C (g j)} (f : «expr ⟶ » X Y) : (Sigma.map C g).map (sigma_hom.mk f) = sigma_hom.mk f :=\n  rfl\n#align map_map map_map\n\n",
 "incl_obj":
 "@[simp]\ntheorem incl_obj {i : I} (X : C i) : (incl i).obj X = ⟨i, X⟩ :=\n  rfl\n#align incl_obj incl_obj\n\n",
 "incl_desc_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem incl_desc_inv_app (i : I) (X : C i) : (inclDesc F i).inv.app X = («expr𝟙») ((F i).obj X) :=\n  rfl\n#align incl_desc_inv_app incl_desc_inv_app\n\n",
 "incl_desc_hom_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n-- We hand-generate the simp lemmas about this since they come out cleaner.\n@[simp]\ntheorem incl_desc_hom_app (i : I) (X : C i) : (inclDesc F i).hom.app X = («expr𝟙») ((F i).obj X) :=\n  rfl\n#align incl_desc_hom_app incl_desc_hom_app\n\n",
 "id_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem id_comp : ∀ (X Y : Σi, C i) (f : «expr ⟶ » X Y), «expr ≫ » ((«expr𝟙») X) f = f\n  | _, _, mk f => congr_arg mk (Category.id_comp _)\n#align id_comp id_comp\n\n",
 "desc_uniq_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n@[simp]\ntheorem desc_uniq_inv_app (q : «expr ⥤ » (Σi, C i) D) (h : ∀ i, «expr ≅ » («expr ⋙ » (incl i) q) (F i)) (i : I)\n    (X : C i) : (descUniq F q h).inv.app ⟨i, X⟩ = (h i).inv.app X :=\n  rfl\n#align desc_uniq_inv_app desc_uniq_inv_app\n\n",
 "desc_uniq_hom_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≅ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n@[simp]\ntheorem desc_uniq_hom_app (q : «expr ⥤ » (Σi, C i) D) (h : ∀ i, «expr ≅ » («expr ⋙ » (incl i) q) (F i)) (i : I)\n    (X : C i) : (descUniq F q h).hom.app ⟨i, X⟩ = (h i).hom.app X :=\n  rfl\n#align desc_uniq_hom_app desc_uniq_hom_app\n\n",
 "desc_map_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem desc_map_mk {i : I} (X Y : C i) (f : «expr ⟶ » X Y) : (desc F).map (sigma_hom.mk f) = (F i).map f :=\n  rfl\n#align desc_map_mk desc_map_mk\n\n",
 "comp_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem comp_id : ∀ (X Y : Σi, C i) (f : «expr ⟶ » X Y), «expr ≫ » f ((«expr𝟙») Y) = f\n  | _, _, mk f => congr_arg mk (Category.comp_id _)\n#align comp_id comp_id\n\n",
 "comp_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2020 Bhavik Mehta. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Bhavik Mehta\n-/\n@[simp]\ntheorem comp_def (i : I) (X Y Z : C i) (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) :\n    comp (mk f) (mk g) = mk («expr ≫ » f g) :=\n  rfl\n#align comp_def comp_def\n\n",
 "assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem assoc :\n    ∀ (X Y Z W : Σi, C i) (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) (h : «expr ⟶ » Z W),\n      «expr ≫ » («expr ≫ » f g) h = «expr ≫ » f («expr ≫ » g h)\n  | _, _, _, _, mk f, mk g, mk h => congr_arg mk (Category.assoc _ _ _)\n#align assoc assoc\n\n"}