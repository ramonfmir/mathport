{"vcomp_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- functor_category will rewrite (vcomp α β) to (α ≫ β), so this is not a\n-- suitable simp lemma.  We will declare the variant vcomp_app' there.\ntheorem vcomp_app (α : NatTrans F G) (β : NatTrans G H) (X : C) : (vcomp α β).app X = «expr ≫ » (α.app X) (β.app X) :=\n  rfl\n#align vcomp_app vcomp_app\n\n",
 "id_app'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem id_app' (F : «expr ⥤ » C D) (X : C) : (NatTrans.id F).app X = («expr𝟙») (F.obj X) :=\n  rfl\n#align id_app' id_app'\n\n",
 "congr_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/-\nCopyright (c) 2017 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Tim Baumann, Stephen Morgan, Scott Morrison, Floris van Doorn\n-/\n-- declare the `v`'s first; see `category_theory.category` for an explanation\n-- Rather arbitrarily, we say that the 'simpler' form is\n-- components of natural transfomations moving earlier.\ntheorem congr_app {F G : «expr ⥤ » C D} {α β : NatTrans F G} (h : α = β) (X : C) : α.app X = β.app X :=\n  congr_fun (congr_arg nat_trans.app h) X\n#align congr_app congr_app\n\n"}