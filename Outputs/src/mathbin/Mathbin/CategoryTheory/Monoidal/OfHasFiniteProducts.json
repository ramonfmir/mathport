{"tensor_obj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⨿ » -/\n@[simp]\ntheorem tensor_obj (X Y : C) : tensor_iso X Y = «expr ⨿ » X Y :=\n  rfl\n#align tensor_obj tensor_obj\n\n",
 "tensor_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n@[simp]\ntheorem tensor_hom {W X Y Z : C} (f : «expr ⟶ » W X) (g : «expr ⟶ » Y Z) : tensor_iso f g = Limits.coprod.map f g :=\n  rfl\n#align tensor_hom tensor_hom\n\n",
 "right_unitor_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n@[simp]\ntheorem right_unitor_inv (X : C) : ((exprρ_) X).inv = Limits.coprod.inl :=\n  rfl\n#align right_unitor_inv right_unitor_inv\n\n",
 "right_unitor_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem right_unitor_hom (X : C) : ((exprρ_) X).hom = coprod.desc ((«expr𝟙») _) (initial.to X) :=\n  rfl\n#align right_unitor_hom right_unitor_hom\n\n",
 "left_unitor_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n@[simp]\ntheorem left_unitor_inv (X : C) : ((«exprλ_») X).inv = Limits.coprod.inr :=\n  rfl\n#align left_unitor_inv left_unitor_inv\n\n",
 "left_unitor_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem left_unitor_hom (X : C) : ((«exprλ_») X).hom = coprod.desc (initial.to X) ((«expr𝟙») _) :=\n  rfl\n#align left_unitor_hom left_unitor_hom\n\n",
 "associator_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- We don't mark this as a simp lemma, even though in many particular\n-- categories the right hand side will simplify significantly further.\n-- For now, we'll plan to create specialised simp lemmas in each particular category.\ntheorem associator_hom (X Y Z : C) :\n    ((exprα_) X Y Z).hom =\n      coprod.desc (coprod.desc coprod.inl («expr ≫ » coprod.inl coprod.inr)) («expr ≫ » coprod.inr coprod.inr) :=\n  rfl\n#align associator_hom associator_hom\n\n"}