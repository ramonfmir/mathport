{"μ_naturalityₗ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem μ_naturalityₗ {m n m' : M} (f : «expr ⟶ » m m') (X : C) :\n    «expr ≫ » ((F.obj n).map ((F.map f).app X)) ((F.μ m' n).app X) =\n      «expr ≫ » ((F.μ m n).app X) ((F.map (tensor_iso f ((«expr𝟙») n))).app X) :=\n  by\n  rw [← μ_naturality₂ F f ((«expr𝟙») n) X]\n  simp\n#align μ_naturalityₗ μ_naturalityₗ\n\n",
 "μ_naturality₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n-- This is not a simp lemma since it could be proved by the lemmas later.\n@[reassoc.1]\ntheorem μ_naturality₂ {m n m' n' : M} (f : «expr ⟶ » m m') (g : «expr ⟶ » n n') (X : C) :\n    «expr ≫ » ((F.map g).app ((F.obj m).obj X)) («expr ≫ » ((F.obj n').map ((F.map f).app X)) ((F.μ m' n').app X)) =\n      «expr ≫ » ((F.μ m n).app X) ((F.map (tensor_iso f g)).app X) :=\n  by\n  have := congr_app (F.to_lax_monoidal_functor.μ_natural f g) X\n  dsimp at this\n  simpa using this\n#align μ_naturality₂ μ_naturality₂\n\n",
 "μ_naturalityᵣ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem μ_naturalityᵣ {m n n' : M} (g : «expr ⟶ » n n') (X : C) :\n    «expr ≫ » ((F.map g).app ((F.obj m).obj X)) ((F.μ m n').app X) =\n      «expr ≫ » ((F.μ m n).app X) ((F.map (tensor_iso ((«expr𝟙») m) g)).app X) :=\n  by\n  rw [← μ_naturality₂ F ((«expr𝟙») m) g X]\n  simp\n#align μ_naturalityᵣ μ_naturalityᵣ\n\n",
 "μ_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem μ_naturality {m n : M} {X Y : C} (f : «expr ⟶ » X Y) :\n    «expr ≫ » ((F.obj n).map ((F.obj m).map f)) ((F.μ m n).app Y) = «expr ≫ » ((F.μ m n).app X) ((F.obj _).map f) :=\n  (F.to_lax_monoidal_functor.μ m n).naturality f\n#align μ_naturality μ_naturality\n\n",
 "μ_inv_naturalityₗ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem μ_inv_naturalityₗ {m n m' : M} (f : «expr ⟶ » m m') (X : C) :\n    «expr ≫ » ((F.μ_iso m n).inv.app X) ((F.obj n).map ((F.map f).app X)) =\n      «expr ≫ » ((F.map (tensor_iso f ((«expr𝟙») n))).app X) ((F.μ_iso m' n).inv.app X) :=\n  by\n  rw [← is_iso.comp_inv_eq, category.assoc, ← is_iso.eq_inv_comp]\n  simp\n#align μ_inv_naturalityₗ μ_inv_naturalityₗ\n\n",
 "μ_inv_naturalityᵣ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem μ_inv_naturalityᵣ {m n n' : M} (g : «expr ⟶ » n n') (X : C) :\n    «expr ≫ » ((F.μ_iso m n).inv.app X) ((F.map g).app ((F.obj m).obj X)) =\n      «expr ≫ » ((F.map (tensor_iso ((«expr𝟙») m) g)).app X) ((F.μ_iso m n').inv.app X) :=\n  by\n  rw [← is_iso.comp_inv_eq, category.assoc, ← is_iso.eq_inv_comp]\n  simp\n#align μ_inv_naturalityᵣ μ_inv_naturalityᵣ\n\n",
 "μ_inv_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- This is a simp lemma in the reverse direction via `nat_trans.naturality`.\n@[reassoc.1]\ntheorem μ_inv_naturality {m n : M} {X Y : C} (f : «expr ⟶ » X Y) :\n    «expr ≫ » ((F.μ_iso m n).inv.app X) ((F.obj n).map ((F.obj m).map f)) =\n      «expr ≫ » ((F.obj _).map f) ((F.μ_iso m n).inv.app Y) :=\n  ((F.μ_iso m n).inv.naturality f).symm\n#align μ_inv_naturality μ_inv_naturality\n\n",
 "μ_inv_hom_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem μ_inv_hom_app (i j : M) (X : C) : «expr ≫ » ((F.μ_iso i j).inv.app X) ((F.μ i j).app X) = («expr𝟙») _ :=\n  (F.μ_iso i j).inv_hom_id_app X\n#align μ_inv_hom_app μ_inv_hom_app\n\n",
 "μ_hom_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison, Andrew Yang\n-/\n-- We could avoid needing to do this explicitly by\n-- constructing a partially applied analogue of `associator_nat_iso`.\n@[simp, reassoc.1]\ntheorem μ_hom_inv_app (i j : M) (X : C) : «expr ≫ » ((F.μ i j).app X) ((F.μ_iso i j).inv.app X) = («expr𝟙») _ :=\n  (F.μ_iso i j).hom_inv_id_app X\n#align μ_hom_inv_app μ_hom_inv_app\n\n",
 "ε_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ε_naturality {X Y : C} (f : «expr ⟶ » X Y) :\n    «expr ≫ » (F.ε.app X) ((F.obj ((«expr𝟙_») M)).map f) = «expr ≫ » f (F.ε.app Y) :=\n  (F.ε.naturality f).symm\n#align ε_naturality ε_naturality\n\n",
 "ε_inv_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ε_inv_naturality {X Y : C} (f : «expr ⟶ » X Y) :\n    «expr ≫ » ((F.obj ((«expr𝟙_») M)).map f) (F.ε_iso.inv.app Y) = «expr ≫ » (F.ε_iso.inv.app X) f :=\n  F.ε_iso.inv.naturality f\n#align ε_inv_naturality ε_inv_naturality\n\n",
 "ε_inv_hom_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem ε_inv_hom_app (X : C) : «expr ≫ » (F.ε_iso.inv.app X) (F.ε.app X) = («expr𝟙») _ :=\n  F.ε_iso.inv_hom_id_app X\n#align ε_inv_hom_app ε_inv_hom_app\n\n",
 "ε_inv_app_obj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n@[simp]\ntheorem ε_inv_app_obj (n : M) (X : C) :\n    F.ε_iso.inv.app ((F.obj n).obj X) = «expr ≫ » ((F.μ n ((«expr𝟙_») M)).app X) ((F.map ((exprρ_) n).hom).app X) :=\n  by\n  rw [← cancel_mono (F.ε.app ((F.obj n).obj X)), ε_inv_hom_app]\n  simpa\n#align ε_inv_app_obj ε_inv_app_obj\n\n",
 "ε_hom_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem ε_hom_inv_app (X : C) : «expr ≫ » (F.ε.app X) (F.ε_iso.inv.app X) = («expr𝟙») _ :=\n  F.ε_iso.hom_inv_id_app X\n#align ε_hom_inv_app ε_hom_inv_app\n\n",
 "ε_app_obj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n@[simp]\ntheorem ε_app_obj (n : M) (X : C) :\n    F.ε.app ((F.obj n).obj X) = «expr ≫ » ((F.map ((exprρ_) n).inv).app X) ((F.μ_iso n ((«expr𝟙_») M)).inv.app X) :=\n  by\n  refine' Eq.trans _ (category.id_comp _)\n  rw [← category.assoc, ← is_iso.comp_inv_eq, ← is_iso.comp_inv_eq, category.assoc]\n  convert right_unitality_app F n X\n  · simp\n  · ext\n    simpa\n#align ε_app_obj ε_app_obj\n\n",
 "right_unitality_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[reassoc.1]\ntheorem right_unitality_app (n : M) (X : C) :\n    «expr ≫ » (F.ε.app ((F.obj n).obj X)) («expr ≫ » ((F.μ n ((«expr𝟙_») M)).app X) ((F.map ((exprρ_) n).hom).app X)) =\n      («expr𝟙») _ :=\n  by\n  have := congr_app (F.to_lax_monoidal_functor.right_unitality n) X\n  dsimp at this\n  simpa using this.symm\n#align right_unitality_app right_unitality_app\n\n",
 "obj_μ_zero_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n@[simp]\ntheorem obj_μ_zero_app (m₁ m₂ : M) (X : C) :\n    (F.obj m₂).map ((F.μ m₁ ((«expr𝟙_») M)).app X) =\n      «expr ≫ » ((F.μ ((«expr𝟙_») M) m₂).app ((F.obj m₁).obj X))\n        («expr ≫ » ((F.map ((«exprλ_») m₂).hom).app ((F.obj m₁).obj X))\n          ((F.obj m₂).map ((F.map ((exprρ_) m₁).inv).app X))) :=\n  by\n  rw [← obj_ε_inv_app_assoc, ← functor.map_comp]\n  congr ; simp\n#align obj_μ_zero_app obj_μ_zero_app\n\n",
 "obj_μ_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n@[reassoc.1, simp]\ntheorem obj_μ_inv_app (m₁ m₂ m₃ : M) (X : C) :\n    (F.obj m₃).map ((F.μ_iso m₁ m₂).inv.app X) =\n      «expr ≫ » ((F.μ (tensor_iso m₁ m₂) m₃).app X)\n        («expr ≫ » ((F.map ((exprα_) m₁ m₂ m₃).hom).app X)\n          («expr ≫ » ((F.μ_iso m₁ (tensor_iso m₂ m₃)).inv.app X) ((F.μ_iso m₂ m₃).inv.app ((F.obj m₁).obj X)))) :=\n  by\n  rw [← is_iso.inv_eq_inv]\n  convert obj_μ_app F m₁ m₂ m₃ X using 1\n  · ext\n    rw [← functor.map_comp]\n    simp\n  · simp only [monoidal_functor.μ_iso_hom, category.assoc, nat_iso.inv_inv_app, is_iso.inv_comp]\n    congr\n    · ext\n      simp\n    · ext\n      simpa\n#align obj_μ_inv_app obj_μ_inv_app\n\n",
 "obj_μ_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n@[reassoc.1, simp]\ntheorem obj_μ_app (m₁ m₂ m₃ : M) (X : C) :\n    (F.obj m₃).map ((F.μ m₁ m₂).app X) =\n      «expr ≫ » ((F.μ m₂ m₃).app ((F.obj m₁).obj X))\n        («expr ≫ » ((F.μ m₁ (tensor_iso m₂ m₃)).app X)\n          («expr ≫ » ((F.map ((exprα_) m₁ m₂ m₃).inv).app X) ((F.μ_iso (tensor_iso m₁ m₂) m₃).inv.app X))) :=\n  by\n  rw [← associativity_app_assoc]\n  dsimp\n  simp\n  dsimp\n  simp\n#align obj_μ_app obj_μ_app\n\n",
 "obj_ε_inv_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n@[reassoc.1, simp]\ntheorem obj_ε_inv_app (n : M) (X : C) :\n    (F.obj n).map (F.ε_iso.inv.app X) = «expr ≫ » ((F.μ ((«expr𝟙_») M) n).app X) ((F.map ((«exprλ_») n).hom).app X) :=\n  by\n  rw [← cancel_mono ((F.obj n).map (F.ε.app X)), ← functor.map_comp]\n  simpa\n#align obj_ε_inv_app obj_ε_inv_app\n\n",
 "obj_ε_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n@[reassoc.1, simp]\ntheorem obj_ε_app (n : M) (X : C) :\n    (F.obj n).map (F.ε.app X) = «expr ≫ » ((F.map ((«exprλ_») n).inv).app X) ((F.μ_iso ((«expr𝟙_») M) n).inv.app X) :=\n  by\n  refine' Eq.trans _ (category.id_comp _)\n  rw [← category.assoc, ← is_iso.comp_inv_eq, ← is_iso.comp_inv_eq, category.assoc]\n  convert left_unitality_app F n X\n  · simp\n  · ext\n    simpa\n#align obj_ε_app obj_ε_app\n\n",
 "obj_zero_map_μ_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n@[simp, reassoc.1]\ntheorem obj_zero_map_μ_app {m : M} {X Y : C} (f : «expr ⟶ » X ((F.obj m).obj Y)) :\n    «expr ≫ » ((F.obj ((«expr𝟙_») M)).map f) ((F.μ m ((«expr𝟙_») M)).app _) =\n      «expr ≫ » (F.ε_iso.inv.app _) («expr ≫ » f ((F.map ((exprρ_) m).inv).app _)) :=\n  by\n  rw [← is_iso.inv_comp_eq, ← is_iso.comp_inv_eq]\n  simp\n#align obj_zero_map_μ_app obj_zero_map_μ_app\n\n",
 "left_unitality_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[reassoc.1]\ntheorem left_unitality_app (n : M) (X : C) :\n    «expr ≫ » ((F.obj n).map (F.ε.app X))\n        («expr ≫ » ((F.μ ((«expr𝟙_») M) n).app X) ((F.map ((«exprλ_») n).hom).app X)) =\n      («expr𝟙») _ :=\n  by\n  have := congr_app (F.to_lax_monoidal_functor.left_unitality n) X\n  dsimp at this\n  simpa using this.symm\n#align left_unitality_app left_unitality_app\n\n",
 "associativity_app":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n@[reassoc.1]\ntheorem associativity_app (m₁ m₂ m₃ : M) (X : C) :\n    «expr ≫ » ((F.obj m₃).map ((F.μ m₁ m₂).app X))\n        («expr ≫ » ((F.μ (tensor_iso m₁ m₂) m₃).app X) ((F.map ((exprα_) m₁ m₂ m₃).hom).app X)) =\n      «expr ≫ » ((F.μ m₂ m₃).app ((F.obj m₁).obj X)) ((F.μ m₁ (tensor_iso m₂ m₃)).app X) :=\n  by\n  have := congr_app (F.to_lax_monoidal_functor.associativity m₁ m₂ m₃) X\n  dsimp at this\n  simpa using this\n#align associativity_app associativity_app\n\n"}