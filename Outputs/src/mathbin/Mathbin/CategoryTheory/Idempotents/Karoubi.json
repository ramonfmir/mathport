{"zsmul_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem zsmul_hom [Preadditive C] {P Q : Karoubi C} (n : ℤ) (f : «expr ⟶ » P Q) : («expr • » n f).f = «expr • » n f.f :=\n  map_zsmul (inclusionHom P Q) n f\n#align zsmul_hom zsmul_hom\n\n",
 "sum_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n@[simp]\ntheorem sum_hom [Preadditive C] {P Q : Karoubi C} {α : Type _} (s : Finset α) (f : α → «expr ⟶ » P Q) :\n    (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f x)).f =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (f x).f :=\n  AddMonoidHom.map_sum (inclusionHom P Q) f s\n#align sum_hom sum_hom\n\n",
 "p_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem p_comp {P Q : Karoubi C} (f : Hom P Q) : «expr ≫ » P.p f.f = f.f := by rw [f.comm, ← assoc, P.idem]\n#align p_comp p_comp\n\n",
 "p_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem p_comm {P Q : Karoubi C} (f : Hom P Q) : «expr ≫ » P.p f.f = «expr ≫ » f.f Q.p := by rw [p_comp, comp_p]\n#align p_comm p_comm\n\n",
 "id_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n#print id_eq /-\n@[simp]\ntheorem id_eq {P : Karoubi C} : («expr𝟙») P = ⟨P.p, by repeat' rw [P.idem]⟩ := by rfl\n#align id_eq id_eq\n-/\n\n",
 "hom_ext":
 "@[simp]\ntheorem hom_ext {P Q : Karoubi C} {f g : Hom P Q} : f = g ↔ f.f = g.f :=\n  by\n  constructor\n  · intro h\n    rw [h]\n  · ext\n#align hom_ext hom_ext\n\n",
 "hom_eq_zero_iff":
 "theorem hom_eq_zero_iff [Preadditive C] {P Q : Karoubi C} {f : Hom P Q} : f = 0 ↔ f.f = 0 :=\n  hom_ext_iff\n#align hom_eq_zero_iff hom_eq_zero_iff\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2022 Joël Riou. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Joël Riou\n-/\n@[ext]\ntheorem ext {P Q : Karoubi C} (h_X : P.X = Q.X) (h_p : «expr ≫ » P.p (eqToHom h_X) = «expr ≫ » (eqToHom h_X) Q.p) :\n    P = Q := by\n  cases P\n  cases Q\n  dsimp at h_X h_p\n  subst h_X\n  simpa only [true_and_iff, eq_self_iff_true, id_comp, eq_to_hom_refl, heq_iff_eq, comp_id] using h_p\n#align ext ext\n\n",
 "eq_to_hom_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem eq_to_hom_f {P Q : Karoubi C} (h : P = Q) :\n    karoubi.hom.f (eqToHom h) = «expr ≫ » P.p (eqToHom (congr_arg karoubi.X h)) :=\n  by\n  subst h\n  simp only [eq_to_hom_refl, karoubi.id_eq, comp_id]\n#align eq_to_hom_f eq_to_hom_f\n\n",
 "decomp_p":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem decomp_p (P : Karoubi C) : (toKaroubi C).map P.p = «expr ≫ » (decompId_p P) (decompId_i P) :=\n  by\n  ext\n  simp only [comp_f, decomp_id_p_f, decomp_id_i_f, P.idem, to_karoubi_map_f]\n#align decomp_p decomp_p\n\n",
 "decomp_id_p_to_karoubi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem decomp_id_p_to_karoubi (X : C) : decompId_p ((toKaroubi C).obj X) = («expr𝟙») _ :=\n  by\n  ext\n  rfl\n#align decomp_id_p_to_karoubi decomp_id_p_to_karoubi\n\n",
 "decomp_id_p_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem decomp_id_p_naturality {P Q : Karoubi C} (f : «expr ⟶ » P Q) :\n    «expr ≫ » (decompId_p P) f =\n      «expr ≫ » (⟨f.f, by erw [comp_id, id_comp]⟩ : «expr ⟶ » (P.X : Karoubi C) Q.X) (decompId_p Q) :=\n  by\n  ext\n  simp only [comp_f, decomp_id_p_f, karoubi.comp_p, karoubi.p_comp]\n#align decomp_id_p_naturality decomp_id_p_naturality\n\n",
 "decomp_id_i_to_karoubi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem decomp_id_i_to_karoubi (X : C) : decompId_i ((toKaroubi C).obj X) = («expr𝟙») _ :=\n  by\n  ext\n  rfl\n#align decomp_id_i_to_karoubi decomp_id_i_to_karoubi\n\n",
 "decomp_id_i_naturality":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem decomp_id_i_naturality {P Q : Karoubi C} (f : «expr ⟶ » P Q) :\n    «expr ≫ » f (decompId_i _) = «expr ≫ » (decompId_i _) ⟨f.f, by erw [comp_id, id_comp]⟩ :=\n  by\n  ext\n  simp only [comp_f, decomp_id_i_f, karoubi.comp_p, karoubi.p_comp]\n#align decomp_id_i_naturality decomp_id_i_naturality\n\n",
 "decomp_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The formal direct factor of `P.X` given by the idempotent `P.p` in the category `C`\nis actually a direct factor in the category `karoubi C`. -/\ntheorem decomp_id (P : Karoubi C) : («expr𝟙») P = «expr ≫ » (decompId_i P) (decompId_p P) :=\n  by\n  ext\n  simp only [comp_f, id_eq, P.idem, decomp_id_i, decomp_id_p]\n#align decomp_id decomp_id\n\n",
 "comp_proof":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem comp_proof {P Q R : Karoubi C} (g : Hom Q R) (f : Hom P Q) :\n    «expr ≫ » f.f g.f = «expr ≫ » P.p («expr ≫ » («expr ≫ » f.f g.f) R.p) := by rw [assoc, comp_p, ← assoc, p_comp]\n#align comp_proof comp_proof\n\n",
 "comp_p":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem comp_p {P Q : Karoubi C} (f : Hom P Q) : «expr ≫ » f.f Q.p = f.f := by rw [f.comm, assoc, assoc, Q.idem]\n#align comp_p comp_p\n\n",
 "comp_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem comp_f {P Q R : Karoubi C} (f : «expr ⟶ » P Q) (g : «expr ⟶ » Q R) : («expr ≫ » f g).f = «expr ≫ » f.f g.f := by\n  rfl\n#align comp_f comp_f\n\n",
 "coe_p":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem coe_p (X : C) : (X : Karoubi C).p = («expr𝟙») X := by rfl\n#align coe_p coe_p\n\n",
 "coe_X":
 "@[simp]\ntheorem coe_X (X : C) : (X : Karoubi C).X = X := by rfl\n#align coe_X coe_X\n\n"}