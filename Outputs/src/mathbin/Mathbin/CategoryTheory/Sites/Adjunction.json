{"adjunction_to_types_unit_app_val":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊣ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2021 Adam Topaz. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Adam Topaz\n-/\n-- We need to sheafify...\n@[simp]\ntheorem adjunction_to_types_unit_app_val {G : «expr ⥤ » (Type max v u) D} (adj : «expr ⊣ » G (forget D))\n    (Y : SheafOfTypes J) :\n    ((adjunction_to_types J adj).unit.app Y).val =\n      «expr ≫ » ((adj.whisker_right _).unit.app ((SheafOfTypes_to_presheaf J).obj Y))\n        (whiskerRight (J.to_sheafify _) (forget D)) :=\n  by\n  dsimp [adjunction_to_types, adjunction.comp]\n  simpa\n#align adjunction_to_types_unit_app_val adjunction_to_types_unit_app_val\n\n",
 "adjunction_to_types_counit_app_val":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊣ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem adjunction_to_types_counit_app_val {G : «expr ⥤ » (Type max v u) D} (adj : «expr ⊣ » G (forget D))\n    (X : Sheaf J D) :\n    ((adjunction_to_types J adj).counit.app X).val =\n      J.sheafify_lift («expr ≫ » (Functor.associator _ _ _).hom ((adj.whisker_right _).counit.app _)) X.2 :=\n  by\n  dsimp [adjunction_to_types, adjunction.comp, adjunction.whisker_right]\n  rw [category.id_comp]\n  apply J.sheafify_lift_unique\n  rw [adjunction_counit_app_val, J.sheafify_map_sheafify_lift, J.to_sheafify_sheafify_lift]\n  ext\n  dsimp [Sheaf_equiv_SheafOfTypes, equivalence.symm, equivalence.to_adjunction, nat_iso.of_components]\n  simp\n#align adjunction_to_types_counit_app_val adjunction_to_types_counit_app_val\n\n"}