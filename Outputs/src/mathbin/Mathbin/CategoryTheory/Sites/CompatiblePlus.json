{"ι_plus_comp_iso_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem ι_plus_comp_iso_hom (X) (W) :\n    «expr ≫ » (F.map (colimit.ι _ W)) ((J.plus_comp_iso F P).hom.app X) =\n      «expr ≫ » ((J.diagram_comp_iso F P X.unop).hom.app W) (colimit.ι _ W) :=\n  by\n  delta diagram_comp_iso plus_comp_iso\n  simp only [is_colimit.desc_cocone_morphism_hom, is_colimit.unique_up_to_iso_hom, cocones.forget_map, iso.trans_hom,\n    nat_iso.of_components_hom_app, functor.map_iso_hom, ← category.assoc]\n  erw [(is_colimit_of_preserves F (colimit.is_colimit (J.diagram P (unop X)))).fac]\n  simp only [category.assoc, has_limit.iso_of_nat_iso_hom_π, iso.symm_hom, cover.multicospan_comp_hom_inv_left,\n    eq_to_hom_refl, category.comp_id, limit.cone_point_unique_up_to_iso_hom_comp, functor.map_cone_π_app,\n    multiequalizer.multifork_π_app_left, multiequalizer.lift_ι, functor.map_comp, eq_self_iff_true, category.assoc,\n    iso.trans_hom, iso.cancel_iso_hom_left, nat_iso.of_components_hom_app, colimit.cocone_ι, category.assoc,\n    has_colimit.iso_of_nat_iso_ι_hom]\n#align ι_plus_comp_iso_hom ι_plus_comp_iso_hom\n\n",
 "whisker_right_to_plus_comp_plus_comp_iso_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem whisker_right_to_plus_comp_plus_comp_iso_hom :\n    «expr ≫ » (whiskerRight (J.to_plus _) _) (J.plus_comp_iso F P).hom = J.to_plus _ :=\n  by\n  ext\n  dsimp [to_plus]\n  simp only [ι_plus_comp_iso_hom, functor.map_comp, category.assoc]\n  simp only [← category.assoc]\n  congr 1\n  ext\n  delta cover.to_multiequalizer\n  simp only [diagram_comp_iso_hom_ι, category.assoc, ← F.map_comp]\n  erw [multiequalizer.lift_ι, multiequalizer.lift_ι]\n  rfl\n#align whisker_right_to_plus_comp_plus_comp_iso_hom whisker_right_to_plus_comp_plus_comp_iso_hom\n\n",
 "to_plus_comp_plus_comp_iso_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem to_plus_comp_plus_comp_iso_inv :\n    «expr ≫ » (J.to_plus _) (J.plus_comp_iso F P).inv = whiskerRight (J.to_plus _) _ := by simp [iso.comp_inv_eq]\n#align to_plus_comp_plus_comp_iso_inv to_plus_comp_plus_comp_iso_inv\n\n",
 "plus_comp_iso_whisker_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem plus_comp_iso_whisker_right {P Q : «expr ⥤ » («expr ᵒᵖ» C) D} (η : «expr ⟶ » P Q) :\n    «expr ≫ » (whiskerRight (J.plus_map η) F) (J.plus_comp_iso F Q).hom =\n      «expr ≫ » (J.plus_comp_iso F P).hom (J.plus_map (whiskerRight η F)) :=\n  by\n  ext X\n  apply (is_colimit_of_preserves F (colimit.is_colimit (J.diagram P X.unop))).hom_ext\n  intro W\n  dsimp [plus_obj, plus_map]\n  simp only [ι_colim_map, whisker_right_app, ι_plus_comp_iso_hom_assoc, grothendieck_topology.diagram_nat_trans_app]\n  simp only [← category.assoc, ← F.map_comp]\n  dsimp [colim_map, is_colimit.map]\n  simp only [colimit.ι_desc]\n  dsimp [cocones.precompose]\n  simp only [functor.map_comp, category.assoc, ι_plus_comp_iso_hom]\n  simp only [← category.assoc]\n  congr 1\n  ext\n  dsimp\n  simp only [diagram_comp_iso_hom_ι_assoc, multiequalizer.lift_ι, diagram_comp_iso_hom_ι, category.assoc]\n  simp only [← F.map_comp, multiequalizer.lift_ι]\n#align plus_comp_iso_whisker_right plus_comp_iso_whisker_right\n\n",
 "plus_comp_iso_whisker_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem plus_comp_iso_whisker_left {F G : «expr ⥤ » D E} (η : «expr ⟶ » F G) (P : «expr ⥤ » («expr ᵒᵖ» C) D)\n    [∀ X : C, preserves_colimits_of_shape («expr ᵒᵖ» (J.cover X)) F]\n    [∀ (X : C) (W : J.cover X) (P : «expr ⥤ » («expr ᵒᵖ» C) D), preserves_limit (W.index P).multicospan F]\n    [∀ X : C, preserves_colimits_of_shape («expr ᵒᵖ» (J.cover X)) G]\n    [∀ (X : C) (W : J.cover X) (P : «expr ⥤ » («expr ᵒᵖ» C) D), preserves_limit (W.index P).multicospan G] :\n    «expr ≫ » (whiskerLeft _ η) (J.plus_comp_iso G P).hom =\n      «expr ≫ » (J.plus_comp_iso F P).hom (J.plus_map (whiskerLeft _ η)) :=\n  by\n  ext X\n  apply (is_colimit_of_preserves F (colimit.is_colimit (J.diagram P X.unop))).hom_ext\n  intro W\n  dsimp [plus_obj, plus_map]\n  simp only [ι_plus_comp_iso_hom, ι_colim_map, whisker_left_app, ι_plus_comp_iso_hom_assoc, nat_trans.naturality_assoc,\n    grothendieck_topology.diagram_nat_trans_app]\n  simp only [← category.assoc]\n  congr 1\n  ext\n  dsimp\n  simpa\n#align plus_comp_iso_whisker_left plus_comp_iso_whisker_left\n\n",
 "plus_comp_iso_inv_eq_plus_lift":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\ntheorem plus_comp_iso_inv_eq_plus_lift (hP : presheaf.is_sheaf J («expr ⋙ » (J.plus_obj P) F)) :\n    (J.plus_comp_iso F P).inv = J.plus_lift (whiskerRight (J.to_plus _) _) hP :=\n  by\n  apply J.plus_lift_unique\n  simp [iso.comp_inv_eq]\n#align plus_comp_iso_inv_eq_plus_lift plus_comp_iso_inv_eq_plus_lift\n\n",
 "diagram_comp_iso_hom_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2021 Adam Topaz. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Adam Topaz\n-/\n@[simp, reassoc.1]\ntheorem diagram_comp_iso_hom_ι (X : C) (W : «expr ᵒᵖ» (J.cover X)) (i : W.unop.arrow) :\n    «expr ≫ » ((J.diagram_comp_iso F P X).hom.app W) (multiequalizer.ι _ i) = F.map (multiequalizer.ι _ _) :=\n  by\n  delta diagram_comp_iso\n  dsimp\n  simp\n#align diagram_comp_iso_hom_ι diagram_comp_iso_hom_ι\n\n"}