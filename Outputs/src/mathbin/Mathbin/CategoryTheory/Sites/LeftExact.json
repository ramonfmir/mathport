{"lift_to_plus_obj_limit_obj_fac":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⥤ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⋙ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ᵒᵖ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2021 Adam Topaz. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Adam Topaz\n-/\n-- This lemma should not be used directly. Instead, one should use the fact that\n-- `J.plus_functor D` preserves finite limits, along with the fact that\n-- evaluation preserves limits.\ntheorem lift_to_plus_obj_limit_obj_fac {K : Type max v u} [SmallCategory K] [FinCategory K] [HasLimitsOfShape K D]\n    [PreservesLimitsOfShape K (forget D)] [ReflectsLimitsOfShape K (forget D)]\n    (F : «expr ⥤ » K («expr ⥤ » («expr ᵒᵖ» C) D)) (X : C)\n    (S : Cone («expr ⋙ » F («expr ⋙ » (J.plus_functor D) ((evaluation («expr ᵒᵖ» C) D).obj (op X))))) (k) :\n    «expr ≫ » (liftToPlusObjLimitObj F X S) ((J.plus_map (limit.π F k)).app (op X)) = S.π.app k :=\n  by\n  dsimp only [lift_to_plus_obj_limit_obj]\n  rw [← (limit.is_limit («expr ⋙ » F («expr ⋙ » (J.plus_functor D) ((evaluation («expr ᵒᵖ» C) D).obj (op X))))).fac S k,\n    category.assoc]\n  congr 1\n  dsimp\n  simp only [category.assoc]\n  rw [← iso.eq_inv_comp, iso.inv_comp_eq, iso.inv_comp_eq]\n  ext\n  dsimp [plus_map]\n  simp only [has_colimit.iso_of_nat_iso_ι_hom_assoc, ι_colim_map]\n  dsimp [is_limit.cone_point_unique_up_to_iso, has_limit.iso_of_nat_iso, is_limit.map]\n  rw [limit.lift_π]\n  dsimp\n  rw [ι_colimit_limit_iso_limit_π_assoc]\n  simp_rw [← nat_trans.comp_app, ← category.assoc, ← nat_trans.comp_app]\n  rw [limit.lift_π, category.assoc]\n  congr 1\n  rw [← iso.comp_inv_eq]\n  erw [colimit.ι_desc]\n  rfl\n#align lift_to_plus_obj_limit_obj_fac lift_to_plus_obj_limit_obj_fac\n\n"}