{"reflects_isomorphisms_forget₂":
 "/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n-- This should not be an instance, as it causes a typeclass loop\n-- with `category_theory.has_forget_to_Type`\n/-- A `forget₂ C D` forgetful functor between concrete categories `C` and `D`\nwhere `forget C` reflects isomorphisms, itself reflects isomorphisms.\n-/\ntheorem reflects_isomorphisms_forget₂ [HasForget₂ C D] [ReflectsIsomorphisms (forget C)] :\n    ReflectsIsomorphisms (forget₂ C D) :=\n  {\n    reflects := fun X Y f i => by\n      skip\n      haveI i' : is_iso ((forget D).map ((forget₂ C D).map f)) := functor.map_is_iso (forget D) _\n      haveI : is_iso ((forget C).map f) := by\n        have := has_forget₂.forget_comp\n        dsimp at this\n        rw [← this]\n        exact i'\n      apply is_iso_of_reflects_iso f (forget C) }\n#align reflects_isomorphisms_forget₂ reflects_isomorphisms_forget₂\n\n"}