{"whisker_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- precompose an equation between morphisms by another morphism -/\ntheorem whisker_eq (f : «expr ⟶ » X Y) {g h : «expr ⟶ » Y Z} (w : g = h) : «expr ≫ » f g = «expr ≫ » f h := by rw [w]\n#align whisker_eq whisker_eq\n\n",
 "mono_of_mono_fac":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem mono_of_mono_fac {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » Y Z} {h : «expr ⟶ » X Z} [Mono h]\n    (w : «expr ≫ » f g = h) : Mono f := by\n  subst h\n  exact mono_of_mono f g\n#align mono_of_mono_fac mono_of_mono_fac\n\n",
 "mono_of_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem mono_of_mono {X Y Z : C} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) [Mono («expr ≫ » f g)] : Mono f :=\n  by\n  constructor; intro Z a b w\n  replace w := congr_arg (fun k => «expr ≫ » k g) w\n  dsimp at w\n  rw [category.assoc, category.assoc] at w\n  exact (cancel_mono _).1 w\n#align mono_of_mono mono_of_mono\n\n",
 "mono_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem mono_comp {X Y Z : C} (f : «expr ⟶ » X Y) [Mono f] (g : «expr ⟶ » Y Z) [Mono g] : Mono («expr ≫ » f g) :=\n  by\n  constructor; intro Z a b w\n  apply (cancel_mono f).1\n  apply (cancel_mono g).1\n  simpa using w\n#align mono_comp mono_comp\n\n",
 "ite_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem ite_comp {P : Prop} [Decidable P] {X Y Z : C} (f f' : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) :\n    «expr ≫ » (if P then f else f') g = if P then «expr ≫ » f g else «expr ≫ » f' g := by split_ifs <;> rfl\n#align ite_comp ite_comp\n\n",
 "id_of_comp_right_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem id_of_comp_right_id (f : «expr ⟶ » X X) (w : ∀ {Y : C} (g : «expr ⟶ » Y X), «expr ≫ » g f = g) :\n    f = («expr𝟙») X := by\n  convert w ((«expr𝟙») X)\n  tidy\n#align id_of_comp_right_id id_of_comp_right_id\n\n",
 "id_of_comp_left_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem id_of_comp_left_id (f : «expr ⟶ » X X) (w : ∀ {Y : C} (g : «expr ⟶ » X Y), «expr ≫ » f g = g) :\n    f = («expr𝟙») X := by\n  convert w ((«expr𝟙») X)\n  tidy\n#align id_of_comp_left_id id_of_comp_left_id\n\n",
 "eq_whisker":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2017 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Stephen Morgan, Scott Morrison, Johannes Hölzl, Reid Barton\n-/\n-- type as \\b1\n-- type as \\gg\n-- `restate_axiom` is a command that creates a lemma from a structure field,\n-- discarding any auto_param wrappers from the type.\n-- (It removes a backtick from the name, if it finds one, and otherwise adds \"_lemma\".)\n/-- postcompose an equation between morphisms by another morphism -/\ntheorem eq_whisker {f g : «expr ⟶ » X Y} (w : f = g) (h : «expr ⟶ » Y Z) : «expr ≫ » f h = «expr ≫ » g h := by rw [w]\n#align eq_whisker eq_whisker\n\n",
 "eq_of_comp_right_eq'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem eq_of_comp_right_eq' (f g : «expr ⟶ » Y Z)\n    (w : (fun {X : C} (h : «expr ⟶ » X Y) => «expr ≫ » h f) = fun {X : C} (h : «expr ⟶ » X Y) => «expr ≫ » h g) :\n    f = g :=\n  eq_of_comp_right_eq fun X h => by convert congr_fun (congr_fun w X) h\n#align eq_of_comp_right_eq' eq_of_comp_right_eq'\n\n",
 "eq_of_comp_right_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem eq_of_comp_right_eq {f g : «expr ⟶ » Y Z} (w : ∀ {X : C} (h : «expr ⟶ » X Y), «expr ≫ » h f = «expr ≫ » h g) :\n    f = g := by\n  convert w ((«expr𝟙») Y)\n  tidy\n#align eq_of_comp_right_eq eq_of_comp_right_eq\n\n",
 "eq_of_comp_left_eq'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem eq_of_comp_left_eq' (f g : «expr ⟶ » X Y)\n    (w : (fun {Z : C} (h : «expr ⟶ » Y Z) => «expr ≫ » f h) = fun {Z : C} (h : «expr ⟶ » Y Z) => «expr ≫ » g h) :\n    f = g :=\n  eq_of_comp_left_eq fun Z h => by convert congr_fun (congr_fun w Z) h\n#align eq_of_comp_left_eq' eq_of_comp_left_eq'\n\n",
 "eq_of_comp_left_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem eq_of_comp_left_eq {f g : «expr ⟶ » X Y} (w : ∀ {Z : C} (h : «expr ⟶ » Y Z), «expr ≫ » f h = «expr ≫ » g h) :\n    f = g := by\n  convert w ((«expr𝟙») Y)\n  tidy\n#align eq_of_comp_left_eq eq_of_comp_left_eq\n\n",
 "epi_of_epi_fac":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem epi_of_epi_fac {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » Y Z} {h : «expr ⟶ » X Z} [Epi h]\n    (w : «expr ≫ » f g = h) : Epi g := by subst h <;> exact epi_of_epi f g\n#align epi_of_epi_fac epi_of_epi_fac\n\n",
 "epi_of_epi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem epi_of_epi {X Y Z : C} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) [Epi («expr ≫ » f g)] : Epi g :=\n  by\n  constructor; intro Z a b w\n  replace w := congr_arg (fun k => «expr ≫ » f k) w\n  dsimp at w\n  rw [← category.assoc, ← category.assoc] at w\n  exact (cancel_epi _).1 w\n#align epi_of_epi epi_of_epi\n\n",
 "epi_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem epi_comp {X Y Z : C} (f : «expr ⟶ » X Y) [Epi f] (g : «expr ⟶ » Y Z) [Epi g] : Epi («expr ≫ » f g) :=\n  by\n  constructor; intro Z a b w\n  apply (cancel_epi g).1\n  apply (cancel_epi f).1\n  simpa using w\n#align epi_comp epi_comp\n\n",
 "dite_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem dite_comp {P : Prop} [Decidable P] {X Y Z : C} (f : P → «expr ⟶ » X Y) (f' : ¬P → «expr ⟶ » X Y)\n    (g : «expr ⟶ » Y Z) :\n    «expr ≫ » (if h : P then f h else f' h) g = if h : P then «expr ≫ » (f h) g else «expr ≫ » (f' h) g := by\n  split_ifs <;> rfl\n#align dite_comp dite_comp\n\n",
 "comp_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem comp_ite {P : Prop} [Decidable P] {X Y Z : C} (f : «expr ⟶ » X Y) (g g' : «expr ⟶ » Y Z) :\n    «expr ≫ » f (if P then g else g') = if P then «expr ≫ » f g else «expr ≫ » f g' := by split_ifs <;> rfl\n#align comp_ite comp_ite\n\n",
 "comp_dite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem comp_dite {P : Prop} [Decidable P] {X Y Z : C} (f : «expr ⟶ » X Y) (g : P → «expr ⟶ » Y Z)\n    (g' : ¬P → «expr ⟶ » Y Z) :\n    «expr ≫ » f (if h : P then g h else g' h) = if h : P then «expr ≫ » f (g h) else «expr ≫ » f (g' h) := by\n  split_ifs <;> rfl\n#align comp_dite comp_dite\n\n",
 "cancel_mono_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem cancel_mono_id (f : «expr ⟶ » X Y) [Mono f] {g : «expr ⟶ » X X} : «expr ≫ » g f = f ↔ g = («expr𝟙») X :=\n  by\n  convert cancel_mono f\n  simp\n#align cancel_mono_id cancel_mono_id\n\n",
 "cancel_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem cancel_mono (f : «expr ⟶ » X Y) [Mono f] {g h : «expr ⟶ » Z X} : «expr ≫ » g f = «expr ≫ » h f ↔ g = h :=\n  ⟨fun p => mono.right_cancellation g h p, congr_arg _⟩\n#align cancel_mono cancel_mono\n\n",
 "cancel_epi_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem cancel_epi_id (f : «expr ⟶ » X Y) [Epi f] {h : «expr ⟶ » Y Y} : «expr ≫ » f h = f ↔ h = («expr𝟙») Y :=\n  by\n  convert cancel_epi f\n  simp\n#align cancel_epi_id cancel_epi_id\n\n",
 "cancel_epi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem cancel_epi (f : «expr ⟶ » X Y) [Epi f] {g h : «expr ⟶ » Y Z} : «expr ≫ » f g = «expr ≫ » f h ↔ g = h :=\n  ⟨fun p => epi.left_cancellation g h p, congr_arg _⟩\n#align cancel_epi cancel_epi\n\n"}