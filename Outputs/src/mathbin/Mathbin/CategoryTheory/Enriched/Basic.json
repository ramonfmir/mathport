{"to_of":
 "@[simp]\ntheorem forget_enrichment.to_of (X : C) : forget_enrichment.to W (forget_enrichment.of W X) = X :=\n  rfl\n#align forget_enrichment.to_of forget_enrichment.to_of\n\n",
 "of_to":
 "@[simp]\ntheorem forget_enrichment.of_to (X : forget_enrichment W C) : forget_enrichment.of W (forget_enrichment.to W X) = X :=\n  rfl\n#align forget_enrichment.of_to forget_enrichment.of_to\n\n",
 "hom_to_hom_of":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `enriched_category.hom -/\n@[simp]\ntheorem forget_enrichment.hom_to_hom_of {X Y : C} (f : «expr ⟶ » ((«expr𝟙_») W) (enriched_category.hom X W Y)) :\n    forget_enrichment.hom_to W (forget_enrichment.hom_of W f) = f :=\n  rfl\n#align forget_enrichment.hom_to_hom_of forget_enrichment.hom_to_hom_of\n\n",
 "hom_of_hom_to":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem forget_enrichment.hom_of_hom_to {X Y : forget_enrichment W C} (f : «expr ⟶ » X Y) :\n    forget_enrichment.hom_of W (forget_enrichment.hom_to W f) = f :=\n  rfl\n#align forget_enrichment.hom_of_hom_to forget_enrichment.hom_of_hom_to\n\n",
 "forget_enrichment_id'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem forget_enrichment_id' (X : C) :\n    forget_enrichment.hom_of W (e_id W X) = («expr𝟙») (forget_enrichment.of W X : C) :=\n  (forget_enrichment_id W (forget_enrichment.of W X)).symm\n#align forget_enrichment_id' forget_enrichment_id'\n\n",
 "forget_enrichment_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/-- The identity in the \"underlying\" category of an enriched category. -/\n@[simp]\ntheorem forget_enrichment_id (X : forget_enrichment W C) :\n    forget_enrichment.hom_to W ((«expr𝟙») X) = e_id W (forget_enrichment.to W X : C) :=\n  category.id_comp _\n#align forget_enrichment_id forget_enrichment_id\n\n",
 "forget_enrichment_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/-- Composition in the \"underlying\" category of an enriched category. -/\n@[simp]\ntheorem forget_enrichment_comp {X Y Z : forget_enrichment W C} (f : «expr ⟶ » X Y) (g : «expr ⟶ » Y Z) :\n    forget_enrichment.hom_to W («expr ≫ » f g) =\n      «expr ≫ »\n        («expr ≫ » ((«exprλ_») ((«expr𝟙_») W)).inv\n          (tensor_iso (forget_enrichment.hom_to W f) (forget_enrichment.hom_to W g)))\n        (e_comp W _ _ _) :=\n  rfl\n#align forget_enrichment_comp forget_enrichment_comp\n\n",
 "e_id_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprλ_» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `enriched_category.hom -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `enriched_category.hom -/\n/-\nCopyright (c) 2021 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\n-- We don't just use `restate_axiom` here; that would leave `V` as an implicit argument.\n@[simp, reassoc.1]\ntheorem e_id_comp (X Y : C) :\n    «expr ≫ » ((«exprλ_») (enriched_category.hom X V Y)).inv\n        («expr ≫ » (tensor_iso (e_id V X) ((«expr𝟙») _)) (e_comp V X X Y)) =\n      («expr𝟙») (enriched_category.hom X V Y) :=\n  enriched_category.id_comp X Y\n#align e_id_comp e_id_comp\n\n",
 "e_comp_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprρ_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `enriched_category.hom -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `enriched_category.hom -/\n@[simp, reassoc.1]\ntheorem e_comp_id (X Y : C) :\n    «expr ≫ » ((exprρ_) (enriched_category.hom X V Y)).inv\n        («expr ≫ » (tensor_iso ((«expr𝟙») _) (e_id V Y)) (e_comp V X Y Y)) =\n      («expr𝟙») (enriched_category.hom X V Y) :=\n  enriched_category.comp_id X Y\n#align e_comp_id e_comp_id\n\n",
 "e_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprα_ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_iso -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp, reassoc.1]\ntheorem e_assoc (W X Y Z : C) :\n    «expr ≫ » ((exprα_) _ _ _).inv («expr ≫ » (tensor_iso (e_comp V W X Y) ((«expr𝟙») _)) (e_comp V W Y Z)) =\n      «expr ≫ » (tensor_iso ((«expr𝟙») _) (e_comp V X Y Z)) (e_comp V W X Z) :=\n  enriched_category.assoc W X Y Z\n#align e_assoc e_assoc\n\n"}