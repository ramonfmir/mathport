{"is_unital_right_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr +ᵣ » -/\ntheorem is_unital_right_add : EckmannHilton.IsUnital («expr +ᵣ » · ·) 0 :=\n  ⟨⟨fun f => by simp [show biprod.desc (0 : «expr ⟶ » X Y) f = «expr ≫ » biprod.snd f by ext <;> simp]⟩,\n    ⟨fun f => by simp [show biprod.desc f (0 : «expr ⟶ » X Y) = «expr ≫ » biprod.fst f by ext <;> simp]⟩⟩\n#align is_unital_right_add is_unital_right_add\n\n",
 "is_unital_left_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:219:4: warning: unsupported binary notation `«expr +ₗ » -/\n/-\nCopyright (c) 2022 Markus Himmel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Markus Himmel\n-/\ntheorem is_unital_left_add : EckmannHilton.IsUnital («expr +ₗ » · ·) 0 :=\n  ⟨⟨fun f => by simp [show biprod.lift (0 : «expr ⟶ » X Y) f = «expr ≫ » f biprod.inr by ext <;> simp]⟩,\n    ⟨fun f => by simp [show biprod.lift f (0 : «expr ⟶ » X Y) = «expr ≫ » f biprod.inl by ext <;> simp]⟩⟩\n#align is_unital_left_add is_unital_left_add\n\n",
 "comp_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem comp_add (f : «expr ⟶ » X Y) (g h : «expr ⟶ » Y Z) : «expr ≫ » f (g + h) = «expr ≫ » f g + «expr ≫ » f h :=\n  by\n  simp only [add_eq_left_addition, ← category.assoc]\n  congr\n  ext <;> simp\n#align comp_add comp_add\n\n",
 "add_eq_right_addition":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem add_eq_right_addition (f g : «expr ⟶ » X Y) :\n    f + g = «expr ≫ » (biprod.lift ((«expr𝟙») X) ((«expr𝟙») X)) (biprod.desc f g) :=\n  rfl\n#align add_eq_right_addition add_eq_right_addition\n\n",
 "add_eq_left_addition":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\ntheorem add_eq_left_addition (f g : «expr ⟶ » X Y) :\n    f + g = «expr ≫ » (biprod.lift f g) (biprod.desc ((«expr𝟙») Y) ((«expr𝟙») Y)) :=\n  congr_fun₂ (EckmannHilton.mul (is_unital_left_add X Y) (is_unital_right_add X Y) (distrib X Y)).symm f g\n#align add_eq_left_addition add_eq_left_addition\n\n",
 "add_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem add_comp (f g : «expr ⟶ » X Y) (h : «expr ⟶ » Y Z) : «expr ≫ » (f + g) h = «expr ≫ » f h + «expr ≫ » g h :=\n  by\n  simp only [add_eq_right_addition, category.assoc]\n  congr\n  ext <;> simp\n#align add_comp add_comp\n\n",
 "Distrib":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊞ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊞ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵣ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵣ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ₗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ₗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ₗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵣ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵣ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵣ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ₗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ₗ » -/\n#print Distrib /-\ntheorem Distrib (f g h k : «expr ⟶ » X Y) :\n    «expr +ₗ » («expr +ᵣ » f g) («expr +ᵣ » h k) = «expr +ᵣ » («expr +ₗ » f h) («expr +ₗ » g k) :=\n  by\n  let diag : «expr ⟶ » («expr ⊞ » X X) («expr ⊞ » Y Y) := biprod.lift (biprod.desc f g) (biprod.desc h k)\n  have hd₁ : «expr ≫ » biprod.inl diag = biprod.lift f h := by ext <;> simp\n  have hd₂ : «expr ≫ » biprod.inr diag = biprod.lift g k := by ext <;> simp\n  have h₁ : biprod.lift («expr +ᵣ » f g) («expr +ᵣ » h k) = «expr ≫ » (biprod.lift ((«expr𝟙») X) ((«expr𝟙») X)) diag :=\n    by ext <;> simp\n  have h₂ : «expr ≫ » diag (biprod.desc ((«expr𝟙») Y) ((«expr𝟙») Y)) = biprod.desc («expr +ₗ » f h) («expr +ₗ » g k) :=\n    by ext <;> simp [reassoc_of hd₁, reassoc_of hd₂]\n  rw [left_add, h₁, category.assoc, h₂, right_add]\n#align distrib Distrib\n-/\n\n"}