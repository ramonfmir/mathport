{"is_separator_iff_faithful_preadditive_coyoneda_obj":
 "theorem is_separator_iff_faithful_preadditive_coyoneda_obj (G : C) :\n    is_separator G ↔ Faithful (preadditive_coyoneda_obj (op G)) :=\n  by\n  rw [is_separator_iff_faithful_preadditive_coyoneda, preadditive_coyoneda_obj_2]\n  exact ⟨fun h => faithful.of_comp _ (forget₂ _ AddCommGroup.{v}), fun h => faithful.comp _ _⟩\n#align is_separator_iff_faithful_preadditive_coyoneda_obj is_separator_iff_faithful_preadditive_coyoneda_obj\n\n",
 "is_separator_iff_faithful_preadditive_coyoneda":
 "theorem is_separator_iff_faithful_preadditive_coyoneda (G : C) :\n    is_separator G ↔ Faithful (preadditive_coyoneda.obj (op G)) :=\n  by\n  rw [is_separator_iff_faithful_coyoneda_obj, ← whiskering_preadditive_coyoneda, functor.comp_obj,\n    whiskering_right_obj_obj]\n  exact ⟨fun h => faithful.of_comp _ (forget AddCommGroup), fun h => faithful.comp _ _⟩\n#align is_separator_iff_faithful_preadditive_coyoneda is_separator_iff_faithful_preadditive_coyoneda\n\n",
 "is_separator_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem preadditive.is_separator_iff (G : C) :\n    is_separator G ↔ ∀ ⦃X Y : C⦄ (f : «expr ⟶ » X Y), (∀ h : «expr ⟶ » G X, «expr ≫ » h f = 0) → f = 0 :=\n  ⟨fun hG X Y f hf => hG.def _ _ (by simpa only [limits.comp_zero] using hf), fun hG =>\n    (is_separator_def _).2 fun X Y f g hfg =>\n      sub_eq_zero.1 <| hG _ (by simpa only [preadditive.comp_sub, sub_eq_zero] using hfg)⟩\n#align preadditive.is_separator_iff preadditive.is_separator_iff\n\n",
 "is_separating_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2022 Markus Himmel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Markus Himmel\n-/\ntheorem preadditive.is_separating_iff (𝒢 : set C) :\n    is_separating 𝒢 ↔ ∀ ⦃X Y : C⦄ (f : «expr ⟶ » X Y), (∀ G ∈ 𝒢, ∀ (h : «expr ⟶ » G X), «expr ≫ » h f = 0) → f = 0 :=\n  ⟨fun h𝒢 X Y f hf => h𝒢 _ _ (by simpa only [limits.comp_zero] using hf), fun h𝒢 X Y f g hfg =>\n    sub_eq_zero.1 <| h𝒢 _ (by simpa only [preadditive.comp_sub, sub_eq_zero] using hfg)⟩\n#align preadditive.is_separating_iff preadditive.is_separating_iff\n\n",
 "is_coseparator_iff_faithful_preadditive_yoneda_obj":
 "theorem is_coseparator_iff_faithful_preadditive_yoneda_obj (G : C) :\n    is_coseparator G ↔ Faithful (preadditive_yoneda_obj G) :=\n  by\n  rw [is_coseparator_iff_faithful_preadditive_yoneda, preadditive_yoneda_obj_2]\n  exact ⟨fun h => faithful.of_comp _ (forget₂ _ AddCommGroup.{v}), fun h => faithful.comp _ _⟩\n#align is_coseparator_iff_faithful_preadditive_yoneda_obj is_coseparator_iff_faithful_preadditive_yoneda_obj\n\n",
 "is_coseparator_iff_faithful_preadditive_yoneda":
 "theorem is_coseparator_iff_faithful_preadditive_yoneda (G : C) :\n    is_coseparator G ↔ Faithful (preadditive_yoneda.obj G) :=\n  by\n  rw [is_coseparator_iff_faithful_yoneda_obj, ← whiskering_preadditive_yoneda, functor.comp_obj,\n    whiskering_right_obj_obj]\n  exact ⟨fun h => faithful.of_comp _ (forget AddCommGroup), fun h => faithful.comp _ _⟩\n#align is_coseparator_iff_faithful_preadditive_yoneda is_coseparator_iff_faithful_preadditive_yoneda\n\n",
 "is_coseparator_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem preadditive.is_coseparator_iff (G : C) :\n    is_coseparator G ↔ ∀ ⦃X Y : C⦄ (f : «expr ⟶ » X Y), (∀ h : «expr ⟶ » Y G, «expr ≫ » f h = 0) → f = 0 :=\n  ⟨fun hG X Y f hf => hG.def _ _ (by simpa only [limits.zero_comp] using hf), fun hG =>\n    (is_coseparator_def _).2 fun X Y f g hfg =>\n      sub_eq_zero.1 <| hG _ (by simpa only [preadditive.sub_comp, sub_eq_zero] using hfg)⟩\n#align preadditive.is_coseparator_iff preadditive.is_coseparator_iff\n\n",
 "is_coseparating_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem preadditive.is_coseparating_iff (𝒢 : set C) :\n    is_coseparating 𝒢 ↔ ∀ ⦃X Y : C⦄ (f : «expr ⟶ » X Y), (∀ G ∈ 𝒢, ∀ (h : «expr ⟶ » Y G), «expr ≫ » f h = 0) → f = 0 :=\n  ⟨fun h𝒢 X Y f hf => h𝒢 _ _ (by simpa only [limits.zero_comp] using hf), fun h𝒢 X Y f g hfg =>\n    sub_eq_zero.1 <| h𝒢 _ (by simpa only [preadditive.sub_comp, sub_eq_zero] using hfg)⟩\n#align preadditive.is_coseparating_iff preadditive.is_coseparating_iff\n\n"}