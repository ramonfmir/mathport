{"homotopy_equiv_inv_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem homotopy_equiv_inv_ι {X : C} (I J : InjectiveResolution X) : «expr ≫ » J.ι (homotopy_equiv I J).inv = I.ι := by\n  simp [homotopy_equiv]\n#align homotopy_equiv_inv_ι homotopy_equiv_inv_ι\n\n",
 "homotopy_equiv_hom_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- Now that we've checked this property of the descent,\n-- we can seal away the actual definition.\n-- We don't care about the actual definitions of these homotopies.\n@[simp, reassoc.1]\ntheorem homotopy_equiv_hom_ι {X : C} (I J : InjectiveResolution X) : «expr ≫ » I.ι (homotopy_equiv I J).hom = J.ι := by\n  simp [homotopy_equiv]\n#align homotopy_equiv_hom_ι homotopy_equiv_hom_ι\n\n",
 "exact_f_d":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem exact_f_d {X Y : C} (f : «expr ⟶ » X Y) : exact f (d f) :=\n  (abelian.exact_iff _ _).2 <| ⟨by simp, zero_of_comp_mono (ι _) <| by rw [category.assoc, kernel.condition]⟩\n#align exact_f_d exact_f_d\n\n",
 "desc_f_one_zero_comm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2022 Jujian Zhang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Jujian Zhang, Scott Morrison\n-/\n@[simp]\ntheorem desc_f_one_zero_comm {Y Z : C} (f : «expr ⟶ » Z Y) (I : InjectiveResolution Y) (J : InjectiveResolution Z) :\n    «expr ≫ » (J.cocomplex.d 0 1) (desc_f_one f I J) = «expr ≫ » (desc_f_zero f I J) (I.cocomplex.d 0 1) := by\n  simp [desc_f_zero, desc_f_one]\n#align desc_f_one_zero_comm desc_f_one_zero_comm\n\n",
 "desc_commutes":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The resolution maps intertwine the descent of a morphism and that morphism. -/\n@[simp, reassoc.1]\ntheorem desc_commutes {Y Z : C} (f : «expr ⟶ » Z Y) (I : InjectiveResolution Y) (J : InjectiveResolution Z) :\n    «expr ≫ » J.ι (desc f I J) = «expr ≫ » ((cochain_complex.single₀ C).map f) I.ι :=\n  by\n  ext n\n  rcases n with (_ | _ | n) <;>\n    · dsimp [desc, desc_f_one, desc_f_zero]\n      simp\n#align desc_commutes desc_commutes\n\n"}