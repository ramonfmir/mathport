{"projective_of_preserves_finite_colimits_preadditive_coyoneda_obj":
 "/-- An object is projective if its preadditive Co-Yoneda functor preserves finite colimits. -/\ntheorem projective_of_preserves_finite_colimits_preadditive_coyoneda_obj (P : C)\n    [hP : PreservesFiniteColimits (preadditiveCoyonedaObj (op P))] : Projective P :=\n  by\n  rw [projective_iff_preserves_epimorphisms_preadditive_coyoneda_obj']\n  infer_instance\n#align projective_of_preserves_finite_colimits_preadditive_coyoneda_obj projective_of_preserves_finite_colimits_preadditive_coyoneda_obj\n\n",
 "exact_d_f":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/-\nCopyright (c) 2020 Markus Himmel. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Markus Himmel, Scott Morrison, Jakob von Raumer\n-/\n/-- When `C` is abelian, `projective.d f` and `f` are exact.\n-/\ntheorem exact_d_f [EnoughProjectives C] {X Y : C} (f : «expr ⟶ » X Y) : Exact (d f) f :=\n  (Abelian.exact_iff _ _).2 <| ⟨by simp, zero_of_epi_comp (π _) <| by rw [← category.assoc, cokernel.condition]⟩\n#align exact_d_f exact_d_f\n\n"}