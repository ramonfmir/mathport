{"π'_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem π'_ι : «expr ≫ » (π' f g w) (ι f g w) = «expr ≫ » (kernel.ι _) (cokernel.π _) :=\n  by\n  dsimp [π', ι, homology_iso_kernel_desc]\n  simp\n#align π'_ι π'_ι\n\n",
 "π'_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem π'_map (α β h) :\n    «expr ≫ » (π' _ _ _) (map w w' α β h) =\n      «expr ≫ » (kernel.map _ _ α.right β.right (by simp [h, β.w.symm])) (π' _ _ _) :=\n  by\n  apply_fun fun e => «expr ≫ » (kernel_subobject_iso _).hom e\n  swap\n  · intro i j hh\n    apply_fun fun e => «expr ≫ » (kernel_subobject_iso _).inv e  at hh\n    simpa using hh\n  dsimp [map]\n  simp only [π'_eq_π_assoc]\n  dsimp [π]\n  simp only [cokernel.π_desc]\n  rw [← iso.inv_comp_eq, ← category.assoc]\n  have :\n    «expr ≫ » (limits.kernel_subobject_iso g).inv (limits.kernel_subobject_map β) =\n      «expr ≫ » (kernel.map _ _ β.left β.right β.w.symm) (kernel_subobject_iso _).inv :=\n    by\n    rw [iso.inv_comp_eq, ← category.assoc, iso.eq_comp_inv]\n    ext\n    dsimp\n    simp\n  rw [this]\n  simp only [category.assoc]\n  dsimp [π', homology_iso_cokernel_lift]\n  simp only [cokernel_iso_of_eq_inv_comp_desc, cokernel.π_desc_assoc]\n  congr 1\n  · congr\n    exact h.symm\n  · rw [iso.inv_comp_eq, ← category.assoc, iso.eq_comp_inv]\n    dsimp [homology_iso_cokernel_image_to_kernel']\n    simp\n#align π'_map π'_map\n\n",
 "π'_eq_π":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem π'_eq_π : «expr ≫ » (kernel_subobject_iso _).hom (π' f g w) = π _ _ _ :=\n  by\n  dsimp [π', homology_iso_cokernel_lift]\n  simp only [← category.assoc]\n  rw [iso.comp_inv_eq]\n  dsimp [π, homology_iso_cokernel_image_to_kernel']\n  simp\n#align π'_eq_π π'_eq_π\n\n",
 "π'_desc'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2022 Adam Topaz. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Adam Topaz, Amelia Livingston\n-/\n-- `homology.π` is taken\n@[simp, reassoc.1]\ntheorem π'_desc' {W : A} (e : «expr ⟶ » (kernel g) W) (he : «expr ≫ » (kernel.lift g f w) e = 0) :\n    «expr ≫ » (π' f g w) (desc' f g w e he) = e := by\n  dsimp [π', desc']\n  simp\n#align π'_desc' π'_desc'\n\n",
 "map_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem map_ι (α β h) :\n    «expr ≫ » (map w w' α β h) (ι f' g' w') =\n      «expr ≫ » (ι f g w) (cokernel.map f f' α.left β.left (by simp [h, β.w.symm])) :=\n  by\n  rw [map_eq_lift_desc'_left, lift_ι]\n  ext\n  simp only [← category.assoc]\n  rw [π'_ι, π'_desc', category.assoc, category.assoc, cokernel.π_desc]\n#align map_ι map_ι\n\n",
 "map_eq_lift_desc'_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem map_eq_lift_desc'_right (α β h) :\n    map w w' α β h =\n      homology.lift _ _ _\n        (homology.desc' _ _ _ («expr ≫ » (kernel.ι _) («expr ≫ » α.right (cokernel.π _)))\n          (by\n            simp only [kernel.lift_ι_assoc]\n            erw [← reassoc_of α.w]\n            simp))\n        (by\n          ext\n          simp [h]) :=\n  by\n  rw [map_eq_desc'_lift_right]\n  ext\n  simp\n#align map_eq_lift_desc'_right map_eq_lift_desc'_right\n\n",
 "map_eq_lift_desc'_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem map_eq_lift_desc'_left (α β h) :\n    map w w' α β h =\n      homology.lift _ _ _\n        (homology.desc' _ _ _ («expr ≫ » (kernel.ι _) («expr ≫ » β.left (cokernel.π _)))\n          (by\n            simp only [kernel.lift_ι_assoc, ← h]\n            erw [← reassoc_of α.w]\n            simp))\n        (by\n          ext\n          simp) :=\n  by\n  rw [map_eq_desc'_lift_left]\n  ext\n  simp\n#align map_eq_lift_desc'_left map_eq_lift_desc'_left\n\n",
 "map_eq_desc'_lift_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem map_eq_desc'_lift_right (α β h) :\n    map w w' α β h =\n      homology.desc' _ _ _\n        (homology.lift _ _ _ («expr ≫ » (kernel.ι _) («expr ≫ » α.right (cokernel.π _))) (by simp [h]))\n        (by\n          ext\n          simp only [category.assoc, zero_comp, lift_ι, kernel.lift_ι_assoc]\n          erw [← reassoc_of α.w]\n          simp) :=\n  by\n  rw [map_eq_desc'_lift_left]\n  ext\n  simp [h]\n#align map_eq_desc'_lift_right map_eq_desc'_lift_right\n\n",
 "map_eq_desc'_lift_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem map_eq_desc'_lift_left (α β h) :\n    map w w' α β h =\n      homology.desc' _ _ _ (homology.lift _ _ _ («expr ≫ » (kernel.ι _) («expr ≫ » β.left (cokernel.π _))) (by simp))\n        (by\n          ext\n          simp only [← h, category.assoc, zero_comp, lift_ι, kernel.lift_ι_assoc]\n          erw [← reassoc_of α.w]\n          simp) :=\n  by\n  apply homology.hom_from_ext\n  simp only [π'_map, π'_desc']\n  dsimp [π', lift]\n  rw [iso.eq_comp_inv]\n  dsimp [homology_iso_kernel_desc]\n  ext\n  simp [h]\n#align map_eq_desc'_lift_left map_eq_desc'_lift_left\n\n",
 "lift_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem lift_ι {W : A} (e : «expr ⟶ » W (cokernel f)) (he : «expr ≫ » e (cokernel.desc f g w) = 0) :\n    «expr ≫ » (lift f g w e he) (ι _ _ _) = e := by\n  dsimp [ι, lift]\n  simp\n#align lift_ι lift_ι\n\n",
 "hom_to_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[ext]\ntheorem hom_to_ext {W : A} (a b : «expr ⟶ » W (homology f g w)) (h : «expr ≫ » a (ι f g w) = «expr ≫ » b (ι f g w)) :\n    a = b := by\n  dsimp [ι] at h\n  apply_fun fun e => «expr ≫ » e (homology_iso_kernel_desc f g w).hom\n  swap\n  · intro i j hh\n    apply_fun fun e => «expr ≫ » e (homology_iso_kernel_desc f g w).inv  at hh\n    simpa using hh\n  simp only [← category.assoc] at h\n  exact equalizer.hom_ext h\n#align hom_to_ext hom_to_ext\n\n",
 "hom_from_ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[ext]\ntheorem hom_from_ext {W : A} (a b : «expr ⟶ » (homology f g w) W)\n    (h : «expr ≫ » (π' f g w) a = «expr ≫ » (π' f g w) b) : a = b :=\n  by\n  dsimp [π'] at h\n  apply_fun fun e => «expr ≫ » (homology_iso_cokernel_lift f g w).inv e\n  swap\n  · intro i j hh\n    apply_fun fun e => «expr ≫ » (homology_iso_cokernel_lift f g w).hom e  at hh\n    simpa using hh\n  simp only [category.assoc] at h\n  exact coequalizer.hom_ext h\n#align hom_from_ext hom_from_ext\n\n",
 "condition_π'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem condition_π' : «expr ≫ » (kernel.lift g f w) (π' f g w) = 0 :=\n  by\n  dsimp [π']\n  simp\n#align condition_π' condition_π'\n\n",
 "condition_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem condition_ι : «expr ≫ » (ι f g w) (cokernel.desc f g w) = 0 :=\n  by\n  dsimp [ι]\n  simp\n#align condition_ι condition_ι\n\n"}