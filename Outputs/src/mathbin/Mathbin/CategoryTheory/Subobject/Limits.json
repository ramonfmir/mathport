{"le_kernel_subobject":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem le_kernel_subobject (A : Subobject X) (h : «expr ≫ » A.arrow f = 0) : A ≤ kernelSubobject f :=\n  Subobject.le_mk_of_comm (kernel.lift f A.arrow h) (by simp)\n#align le_kernel_subobject le_kernel_subobject\n\n",
 "kernel_subobject_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem kernel_subobject_zero {A B : C} : kernelSubobject (0 : «expr ⟶ » A B) = «expr⊤» :=\n  (isIso_iff_mk_eq_top _).mp (by infer_instance)\n#align kernel_subobject_zero kernel_subobject_zero\n\n",
 "kernel_subobject_map_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr𝟙» -/\n@[simp]\ntheorem kernel_subobject_map_id : kernelSubobjectMap ((«expr𝟙») (Arrow.mk f)) = («expr𝟙») _ :=\n  by\n  ext\n  simp\n  dsimp\n  simp\n#align kernel_subobject_map_id kernel_subobject_map_id\n\n",
 "kernel_subobject_map_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n-- See library note [dsimp, simp].\n@[simp]\ntheorem kernel_subobject_map_comp {X'' Y'' : C} {f'' : «expr ⟶ » X'' Y''} [HasKernel f'']\n    (sq : «expr ⟶ » (Arrow.mk f) (Arrow.mk f')) (sq' : «expr ⟶ » (Arrow.mk f') (Arrow.mk f'')) :\n    kernelSubobjectMap («expr ≫ » sq sq') = «expr ≫ » (kernelSubobjectMap sq) (kernelSubobjectMap sq') :=\n  by\n  ext\n  simp\n#align kernel_subobject_map_comp kernel_subobject_map_comp\n\n",
 "kernel_subobject_map_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1, elementwise]\ntheorem kernel_subobject_map_arrow (sq : «expr ⟶ » (Arrow.mk f) (Arrow.mk f')) :\n    «expr ≫ » (kernelSubobjectMap sq) (kernelSubobject f').arrow = «expr ≫ » (kernelSubobject f).arrow sq.left := by\n  simp [kernel_subobject_map]\n#align kernel_subobject_map_arrow kernel_subobject_map_arrow\n\n",
 "kernel_subobject_iso_comp_kernel_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem kernel_subobject_iso_comp_kernel_map (sq : «expr ⟶ » (Arrow.mk f) (Arrow.mk f')) :\n    «expr ≫ » (kernelSubobjectIso _).hom (kernel.map f f' sq.1 sq.2 sq.3.symm) =\n      «expr ≫ » (kernelSubobjectMap sq) (kernelSubobjectIso _).hom :=\n  by simp [← iso.comp_inv_eq, kernel_map_comp_kernel_subobject_iso_inv]\n#align kernel_subobject_iso_comp_kernel_map kernel_subobject_iso_comp_kernel_map\n\n",
 "kernel_subobject_iso_comp_inv_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem kernel_subobject_iso_comp_inv_arrow {X' : C} (f : «expr ⟶ » X' X) [IsIso f] (g : «expr ⟶ » X Y) [HasKernel g] :\n    «expr ≫ » (kernelSubobjectIsoComp f g).inv (kernelSubobject («expr ≫ » f g)).arrow =\n      «expr ≫ » (kernelSubobject g).arrow (inv f) :=\n  by simp [kernel_subobject_iso_comp]\n#align kernel_subobject_iso_comp_inv_arrow kernel_subobject_iso_comp_inv_arrow\n\n",
 "kernel_subobject_iso_comp_hom_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem kernel_subobject_iso_comp_hom_arrow {X' : C} (f : «expr ⟶ » X' X) [IsIso f] (g : «expr ⟶ » X Y) [HasKernel g] :\n    «expr ≫ » (kernelSubobjectIsoComp f g).hom (kernelSubobject g).arrow =\n      «expr ≫ » (kernelSubobject («expr ≫ » f g)).arrow f :=\n  by simp [kernel_subobject_iso_comp]\n#align kernel_subobject_iso_comp_hom_arrow kernel_subobject_iso_comp_hom_arrow\n\n",
 "kernel_subobject_factors_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem kernel_subobject_factors_iff {W : C} (h : «expr ⟶ » W X) : (kernelSubobject f).factors h ↔ «expr ≫ » h f = 0 :=\n  ⟨fun w => by rw [← subobject.factor_thru_arrow _ _ w, category.assoc, kernel_subobject_arrow_comp, comp_zero],\n    kernelSubobject_factors f h⟩\n#align kernel_subobject_factors_iff kernel_subobject_factors_iff\n\n",
 "kernel_subobject_factors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem kernel_subobject_factors {W : C} (h : «expr ⟶ » W X) (w : «expr ≫ » h f = 0) : (kernelSubobject f).factors h :=\n  ⟨kernel.lift _ h w, by simp⟩\n#align kernel_subobject_factors kernel_subobject_factors\n\n",
 "kernel_subobject_comp_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- Postcomposing by an monomorphism does not change the kernel subobject. -/\n@[simp]\ntheorem kernel_subobject_comp_mono (f : «expr ⟶ » X Y) [HasKernel f] {Z : C} (h : «expr ⟶ » Y Z) [Mono h] :\n    kernelSubobject («expr ≫ » f h) = kernelSubobject f :=\n  le_antisymm (le_kernelSubobject _ _ ((cancel_mono h).mp (by simp))) (kernelSubobject_comp_le f h)\n#align kernel_subobject_comp_mono kernel_subobject_comp_mono\n\n",
 "kernel_subobject_comp_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The kernel of `f` is always a smaller subobject than the kernel of `f ≫ h`. -/\ntheorem kernel_subobject_comp_le (f : «expr ⟶ » X Y) [HasKernel f] {Z : C} (h : «expr ⟶ » Y Z)\n    [HasKernel («expr ≫ » f h)] : kernelSubobject f ≤ kernelSubobject («expr ≫ » f h) :=\n  le_kernelSubobject _ _ (by simp)\n#align kernel_subobject_comp_le kernel_subobject_comp_le\n\n",
 "kernel_subobject_arrow_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1, elementwise]\ntheorem kernel_subobject_arrow_comp : «expr ≫ » (kernelSubobject f).arrow f = 0 :=\n  by\n  rw [← kernel_subobject_arrow]\n  simp only [category.assoc, kernel.condition, comp_zero]\n#align kernel_subobject_arrow_comp kernel_subobject_arrow_comp\n\n",
 "kernel_subobject_arrow'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1, elementwise]\ntheorem kernel_subobject_arrow' : «expr ≫ » (kernelSubobjectIso f).inv (kernelSubobject f).arrow = kernel.ι f := by\n  simp [kernel_subobject_iso]\n#align kernel_subobject_arrow' kernel_subobject_arrow'\n\n",
 "kernel_subobject_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1, elementwise]\ntheorem kernel_subobject_arrow : «expr ≫ » (kernelSubobjectIso f).hom (kernel.ι f) = (kernelSubobject f).arrow := by\n  simp [kernel_subobject_iso]\n#align kernel_subobject_arrow kernel_subobject_arrow\n\n",
 "kernel_map_comp_kernel_subobject_iso_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem kernel_map_comp_kernel_subobject_iso_inv (sq : «expr ⟶ » (Arrow.mk f) (Arrow.mk f')) :\n    «expr ≫ » (kernel.map f f' sq.1 sq.2 sq.3.symm) (kernelSubobjectIso _).inv =\n      «expr ≫ » (kernelSubobjectIso _).inv (kernelSubobjectMap sq) :=\n  by ext <;> simp\n#align kernel_map_comp_kernel_subobject_iso_inv kernel_map_comp_kernel_subobject_iso_inv\n\n",
 "image_subobject_zero_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n@[simp]\ntheorem image_subobject_zero_arrow : (imageSubobject (0 : «expr ⟶ » X Y)).arrow = 0 :=\n  by\n  rw [← image_subobject_arrow]\n  simp\n#align image_subobject_zero_arrow image_subobject_zero_arrow\n\n",
 "image_subobject_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem image_subobject_zero {A B : C} : imageSubobject (0 : «expr ⟶ » A B) = «expr⊥» :=\n  Subobject.eq_of_comm («expr ≪≫ » (imageSubobjectIso _) («expr ≪≫ » imageZero Subobject.botCoeIsoZero.symm)) (by simp)\n#align image_subobject_zero image_subobject_zero\n\n",
 "image_subobject_mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≪≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\ntheorem image_subobject_mono (f : «expr ⟶ » X Y) [Mono f] : imageSubobject f = mk f :=\n  eq_of_comm («expr ≪≫ » (imageSubobjectIso f) («expr ≪≫ » (imageMonoIsoSource f) (underlyingIso f).symm)) (by simp)\n#align image_subobject_mono image_subobject_mono\n\n",
 "image_subobject_map_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem image_subobject_map_arrow {W X Y Z : C} {f : «expr ⟶ » W X} [HasImage f] {g : «expr ⟶ » Y Z} [HasImage g]\n    (sq : «expr ⟶ » (Arrow.mk f) (Arrow.mk g)) [HasImageMap sq] :\n    «expr ≫ » (imageSubobjectMap sq) (imageSubobject g).arrow = «expr ≫ » (imageSubobject f).arrow sq.right :=\n  by\n  simp only [image_subobject_map, category.assoc, image_subobject_arrow']\n  erw [image.map_ι, ← category.assoc, image_subobject_arrow]\n#align image_subobject_map_arrow image_subobject_map_arrow\n\n",
 "image_subobject_le_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem image_subobject_le_mk {A B : C} {X : C} (g : «expr ⟶ » X B) [Mono g] (f : «expr ⟶ » A B) [HasImage f]\n    (h : «expr ⟶ » A X) (w : «expr ≫ » h g = f) : imageSubobject f ≤ Subobject.mk g :=\n  imageSubobject_le f («expr ≫ » h (Subobject.underlyingIso g).inv) (by simp [w])\n#align image_subobject_le_mk image_subobject_le_mk\n\n",
 "image_subobject_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem image_subobject_le {A B : C} {X : Subobject B} (f : «expr ⟶ » A B) [HasImage f] (h : «expr ⟶ » A X)\n    (w : «expr ≫ » h X.arrow = f) : imageSubobject f ≤ X :=\n  Subobject.le_of_comm\n    («expr ≫ » (imageSubobjectIso f).hom\n      (image.lift\n        { I := (X : C)\n          e := h\n          m := X.arrow }))\n    (by simp)\n#align image_subobject_le image_subobject_le\n\n",
 "image_subobject_iso_comp_image_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem image_subobject_iso_comp_image_map {W X Y Z : C} {f : «expr ⟶ » W X} [HasImage f] {g : «expr ⟶ » Y Z}\n    [HasImage g] (sq : «expr ⟶ » (Arrow.mk f) (Arrow.mk g)) [HasImageMap sq] :\n    «expr ≫ » (imageSubobjectIso _).hom (image.map sq) = «expr ≫ » (imageSubobjectMap sq) (imageSubobjectIso _).hom :=\n  by\n  rw [← iso.comp_inv_eq, category.assoc, ← (image_subobject_iso (arrow.mk f).hom).eq_inv_comp, ←\n      image_map_comp_image_subobject_iso_inv] <;>\n    rfl\n#align image_subobject_iso_comp_image_map image_subobject_iso_comp_image_map\n\n",
 "image_subobject_iso_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- Precomposing by an isomorphism does not change the image subobject. -/\ntheorem image_subobject_iso_comp [HasEqualizers C] {X' : C} (h : «expr ⟶ » X' X) [IsIso h] (f : «expr ⟶ » X Y)\n    [HasImage f] : imageSubobject («expr ≫ » h f) = imageSubobject f :=\n  le_antisymm (imageSubobject_comp_le h f) (Subobject.mk_le_mk_of_comm (inv (image.preComp h f)) (by simp))\n#align image_subobject_iso_comp image_subobject_iso_comp\n\n",
 "image_subobject_factors_comp_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem image_subobject_factors_comp_self {W : C} (k : «expr ⟶ » W X) : (imageSubobject f).factors («expr ≫ » k f) :=\n  ⟨«expr ≫ » k (factorThruImage f), by simp⟩\n#align image_subobject_factors_comp_self image_subobject_factors_comp_self\n\n",
 "image_subobject_comp_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-- The image of `h ≫ f` is always a smaller subobject than the image of `f`. -/\ntheorem image_subobject_comp_le {X' : C} (h : «expr ⟶ » X' X) (f : «expr ⟶ » X Y) [HasImage f]\n    [HasImage («expr ≫ » h f)] : imageSubobject («expr ≫ » h f) ≤ imageSubobject f :=\n  Subobject.mk_le_mk_of_comm (image.preComp h f) (by simp)\n#align image_subobject_comp_le image_subobject_comp_le\n\n",
 "image_subobject_comp_iso_inv_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem image_subobject_comp_iso_inv_arrow (f : «expr ⟶ » X Y) [HasImage f] {Y' : C} (h : «expr ⟶ » Y Y') [IsIso h] :\n    «expr ≫ » (imageSubobjectCompIso f h).inv (imageSubobject («expr ≫ » f h)).arrow =\n      «expr ≫ » (imageSubobject f).arrow h :=\n  by simp [image_subobject_comp_iso]\n#align image_subobject_comp_iso_inv_arrow image_subobject_comp_iso_inv_arrow\n\n",
 "image_subobject_comp_iso_hom_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem image_subobject_comp_iso_hom_arrow (f : «expr ⟶ » X Y) [HasImage f] {Y' : C} (h : «expr ⟶ » Y Y') [IsIso h] :\n    «expr ≫ » (imageSubobjectCompIso f h).hom (imageSubobject f).arrow =\n      «expr ≫ » (imageSubobject («expr ≫ » f h)).arrow (inv h) :=\n  by simp [image_subobject_comp_iso]\n#align image_subobject_comp_iso_hom_arrow image_subobject_comp_iso_hom_arrow\n\n",
 "image_subobject_arrow_comp_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem image_subobject_arrow_comp_eq_zero [HasZeroMorphisms C] {X Y Z : C} {f : «expr ⟶ » X Y} {g : «expr ⟶ » Y Z}\n    [HasImage f] [Epi (factorThruImageSubobject f)] (h : «expr ≫ » f g = 0) :\n    «expr ≫ » (imageSubobject f).arrow g = 0 :=\n  zero_of_epi_comp (factorThruImageSubobject f) <| by simp [h]\n#align image_subobject_arrow_comp_eq_zero image_subobject_arrow_comp_eq_zero\n\n",
 "image_subobject_arrow_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1, elementwise]\ntheorem image_subobject_arrow_comp : «expr ≫ » (factorThruImageSubobject f) (imageSubobject f).arrow = f := by\n  simp [factor_thru_image_subobject, image_subobject_arrow]\n#align image_subobject_arrow_comp image_subobject_arrow_comp\n\n",
 "image_subobject_arrow'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem image_subobject_arrow' : «expr ≫ » (imageSubobjectIso f).inv (imageSubobject f).arrow = image.ι f := by\n  simp [image_subobject_iso]\n#align image_subobject_arrow' image_subobject_arrow'\n\n",
 "image_subobject_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem image_subobject_arrow : «expr ≫ » (imageSubobjectIso f).hom (image.ι f) = (imageSubobject f).arrow := by\n  simp [image_subobject_iso]\n#align image_subobject_arrow image_subobject_arrow\n\n",
 "image_map_comp_image_subobject_iso_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem image_map_comp_image_subobject_iso_inv {W X Y Z : C} {f : «expr ⟶ » W X} [HasImage f] {g : «expr ⟶ » Y Z}\n    [HasImage g] (sq : «expr ⟶ » (Arrow.mk f) (Arrow.mk g)) [HasImageMap sq] :\n    «expr ≫ » (image.map sq) (imageSubobjectIso _).inv = «expr ≫ » (imageSubobjectIso _).inv (imageSubobjectMap sq) :=\n  by ext <;> simp\n#align image_map_comp_image_subobject_iso_inv image_map_comp_image_subobject_iso_inv\n\n",
 "factor_thru_kernel_subobject_comp_kernel_subobject_iso":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem factor_thru_kernel_subobject_comp_kernel_subobject_iso {W : C} (h : «expr ⟶ » W X) (w : «expr ≫ » h f = 0) :\n    «expr ≫ » (factorThruKernelSubobject f h w) (kernelSubobjectIso f).hom = kernel.lift f h w :=\n  (cancel_mono (kernel.ι f)).1 <| by simp\n#align factor_thru_kernel_subobject_comp_kernel_subobject_iso factor_thru_kernel_subobject_comp_kernel_subobject_iso\n\n",
 "factor_thru_kernel_subobject_comp_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem factor_thru_kernel_subobject_comp_arrow {W : C} (h : «expr ⟶ » W X) (w : «expr ≫ » h f = 0) :\n    «expr ≫ » (factorThruKernelSubobject f h w) (kernelSubobject f).arrow = h :=\n  by\n  dsimp [factor_thru_kernel_subobject]\n  simp\n#align factor_thru_kernel_subobject_comp_arrow factor_thru_kernel_subobject_comp_arrow\n\n",
 "factor_thru_image_subobject_comp_self_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem factor_thru_image_subobject_comp_self_assoc {W W' : C} (k : «expr ⟶ » W W') (k' : «expr ⟶ » W' X) (h) :\n    (imageSubobject f).factor_thru («expr ≫ » k («expr ≫ » k' f)) h =\n      «expr ≫ » k («expr ≫ » k' (factorThruImageSubobject f)) :=\n  by\n  ext\n  simp\n#align factor_thru_image_subobject_comp_self_assoc factor_thru_image_subobject_comp_self_assoc\n\n",
 "factor_thru_image_subobject_comp_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp]\ntheorem factor_thru_image_subobject_comp_self {W : C} (k : «expr ⟶ » W X) (h) :\n    (imageSubobject f).factor_thru («expr ≫ » k f) h = «expr ≫ » k (factorThruImageSubobject f) :=\n  by\n  ext\n  simp\n#align factor_thru_image_subobject_comp_self factor_thru_image_subobject_comp_self\n\n",
 "equalizer_subobject_factors_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem equalizer_subobject_factors_iff {W : C} (h : «expr ⟶ » W X) :\n    (equalizerSubobject f g).factors h ↔ «expr ≫ » h f = «expr ≫ » h g :=\n  ⟨fun w => by rw [← subobject.factor_thru_arrow _ _ w, category.assoc, equalizer_subobject_arrow_comp, category.assoc],\n    equalizerSubobject_factors f g h⟩\n#align equalizer_subobject_factors_iff equalizer_subobject_factors_iff\n\n",
 "equalizer_subobject_factors":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟶ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\ntheorem equalizer_subobject_factors {W : C} (h : «expr ⟶ » W X) (w : «expr ≫ » h f = «expr ≫ » h g) :\n    (equalizerSubobject f g).factors h :=\n  ⟨equalizer.lift h w, by simp⟩\n#align equalizer_subobject_factors equalizer_subobject_factors\n\n",
 "equalizer_subobject_arrow_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[reassoc.1]\ntheorem equalizer_subobject_arrow_comp :\n    «expr ≫ » (equalizerSubobject f g).arrow f = «expr ≫ » (equalizerSubobject f g).arrow g := by\n  rw [← equalizer_subobject_arrow, category.assoc, category.assoc, equalizer.condition]\n#align equalizer_subobject_arrow_comp equalizer_subobject_arrow_comp\n\n",
 "equalizer_subobject_arrow'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n@[simp, reassoc.1]\ntheorem equalizer_subobject_arrow' :\n    «expr ≫ » (equalizerSubobjectIso f g).inv (equalizerSubobject f g).arrow = equalizer.ι f g := by\n  simp [equalizer_subobject_iso]\n#align equalizer_subobject_arrow' equalizer_subobject_arrow'\n\n",
 "equalizer_subobject_arrow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≫ » -/\n/-\nCopyright (c) 2020 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Bhavik Mehta, Scott Morrison\n-/\n@[simp, reassoc.1]\ntheorem equalizer_subobject_arrow :\n    «expr ≫ » (equalizerSubobjectIso f g).hom (equalizer.ι f g) = (equalizerSubobject f g).arrow := by\n  simp [equalizer_subobject_iso]\n#align equalizer_subobject_arrow equalizer_subobject_arrow\n\n"}