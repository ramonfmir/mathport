{"well_powered_of_essentially_small_mono_over":
 "theorem well_powered_of_essentially_small_mono_over (h : ∀ X : C, essentially_small.{v} (mono_over X)) :\n    well_powered C :=\n  { subobject_small := fun X => (essentially_small_mono_over_iff_small_subobject X).mp (h X) }\n#align well_powered_of_essentially_small_mono_over well_powered_of_essentially_small_mono_over\n\n",
 "well_powered_of_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≌ » -/\ntheorem well_powered_of_equiv (e : «expr ≌ » C D) [well_powered C] : well_powered D :=\n  well_powered_of_essentially_small_mono_over fun X =>\n    (essentially_small_congr (mono_over.congr X e.symm)).2 <| by infer_instance\n#align well_powered_of_equiv well_powered_of_equiv\n\n",
 "well_powered_congr":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≌ » -/\n/-- Being well-powered is preserved by equivalences, as long as the two categories involved have\n    their morphisms in the same universe. -/\ntheorem well_powered_congr (e : «expr ≌ » C D) : well_powered C ↔ well_powered D :=\n  ⟨fun i => well_powered_of_equiv e, fun i => well_powered_of_equiv e.symm⟩\n#align well_powered_congr well_powered_congr\n\n",
 "essentially_small_mono_over_iff_small_subobject":
 "/-\nCopyright (c) 2021 Scott Morrison. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Scott Morrison\n-/\ntheorem essentially_small_mono_over_iff_small_subobject (X : C) :\n    essentially_small.{v} (mono_over X) ↔ Small.{v} (subobject X) :=\n  essentially_small_iff_of_thin\n#align essentially_small_mono_over_iff_small_subobject essentially_small_mono_over_iff_small_subobject\n\n"}