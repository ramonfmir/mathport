{"quotient_quotient_equiv_quotient_aux_mk_mk":
 "@[simp]\ntheorem quotient_quotient_equiv_quotient_aux_mk_mk (x : M) :\n    quotientQuotientEquivQuotientAux S T h (Quotient.mk (Quotient.mk x)) = Quotient.mk x := by\n  rw [quotient_quotient_equiv_quotient_aux_mk, mapq_apply, LinearMap.id_apply]\n#align quotient_quotient_equiv_quotient_aux_mk_mk quotient_quotient_equiv_quotient_aux_mk_mk\n\n",
 "quotient_quotient_equiv_quotient_aux_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n@[simp]\ntheorem quotient_quotient_equiv_quotient_aux_mk (x : «expr ⧸ » M S) :\n    quotientQuotientEquivQuotientAux S T h (Quotient.mk x) = mapQ S T LinearMap.id h x :=\n  liftQ_apply _ _ _\n#align quotient_quotient_equiv_quotient_aux_mk quotient_quotient_equiv_quotient_aux_mk\n\n",
 "quotient_inf_equiv_sup_quotient_symm_apply_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem quotient_inf_equiv_sup_quotient_symm_apply_right (p p' : Submodule R M) {x : «expr ⊔ » p p'}\n    (hx : (x : M) ∈ p') : (quotientInfEquivSupQuotient p p').symm (Submodule.Quotient.mk x) = 0 :=\n  quotientInfEquivSupQuotient_symm_apply_eq_zero_iff.2 hx\n#align quotient_inf_equiv_sup_quotient_symm_apply_right quotient_inf_equiv_sup_quotient_symm_apply_right\n\n",
 "quotient_inf_equiv_sup_quotient_symm_apply_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem quotient_inf_equiv_sup_quotient_symm_apply_left (p p' : Submodule R M) (x : «expr ⊔ » p p') (hx : (x : M) ∈ p) :\n    (quotientInfEquivSupQuotient p p').symm (Submodule.Quotient.mk x) = Submodule.Quotient.mk ⟨x, hx⟩ :=\n  (LinearEquiv.symm_apply_eq _).2 <| by simp [of_le_apply]\n#align quotient_inf_equiv_sup_quotient_symm_apply_left quotient_inf_equiv_sup_quotient_symm_apply_left\n\n",
 "quotient_inf_equiv_sup_quotient_symm_apply_eq_zero_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem quotient_inf_equiv_sup_quotient_symm_apply_eq_zero_iff {p p' : Submodule R M} {x : «expr ⊔ » p p'} :\n    (quotientInfEquivSupQuotient p p').symm (Submodule.Quotient.mk x) = 0 ↔ (x : M) ∈ p' :=\n  (LinearEquiv.symm_apply_eq _).trans <| by simp [of_le_apply]\n#align quotient_inf_equiv_sup_quotient_symm_apply_eq_zero_iff quotient_inf_equiv_sup_quotient_symm_apply_eq_zero_iff\n\n",
 "quotient_inf_equiv_sup_quotient_apply_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n@[simp]\ntheorem quotient_inf_equiv_sup_quotient_apply_mk (p p' : Submodule R M) (x : p) :\n    quotientInfEquivSupQuotient p p' (Submodule.Quotient.mk x) =\n      Submodule.Quotient.mk (ofLe (le_sup_left : p ≤ «expr ⊔ » p p') x) :=\n  rfl\n#align quotient_inf_equiv_sup_quotient_apply_mk quotient_inf_equiv_sup_quotient_apply_mk\n\n",
 "quot_ker_equiv_range_symm_apply_image":
 "@[simp]\ntheorem quot_ker_equiv_range_symm_apply_image (x : M) (h : f x ∈ f.range) :\n    f.quot_ker_equiv_range.symm ⟨f x, h⟩ = f.ker.mkq x :=\n  f.quot_ker_equiv_range.symm_apply_apply (f.ker.mkq x)\n#align quot_ker_equiv_range_symm_apply_image quot_ker_equiv_range_symm_apply_image\n\n",
 "quot_ker_equiv_range_apply_mk":
 "/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Mario Carneiro, Kevin Buzzard, Yury Kudryashov\n-/\n@[simp]\ntheorem quot_ker_equiv_range_apply_mk (x : M) : (f.quot_ker_equiv_range (Submodule.Quotient.mk x) : M₂) = f x :=\n  rfl\n#align quot_ker_equiv_range_apply_mk quot_ker_equiv_range_apply_mk\n\n",
 "coe_quotient_inf_to_sup_quotient":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_quotient_inf_to_sup_quotient (p p' : Submodule R M) :\n    «expr⇑ » (quotientInfToSupQuotient p p') = quotientInfEquivSupQuotient p p' :=\n  rfl\n#align coe_quotient_inf_to_sup_quotient coe_quotient_inf_to_sup_quotient\n\n",
 "card_quotient_mul_card_quotient":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/-- Corollary of the third isomorphism theorem: `[S : T] [M : S] = [M : T]` -/\ntheorem card_quotient_mul_card_quotient (S T : Submodule R M) (hST : T ≤ S) [DecidablePred fun x => x ∈ S.map T.mkq]\n    [Fintype («expr ⧸ » M S)] [Fintype («expr ⧸ » M T)] :\n    Fintype.card (S.map T.mkq) * Fintype.card («expr ⧸ » M S) = Fintype.card («expr ⧸ » M T) := by\n  rw [Submodule.card_eq_card_quotient_mul_card (map T.mkq S),\n    fintype.card_eq.mpr ⟨(quotient_quotient_equiv_quotient T S hST).to_equiv⟩]\n#align card_quotient_mul_card_quotient card_quotient_mul_card_quotient\n\n"}