{"rank_lt_aleph_0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `cardinal.aleph_0 -/\n/-\nCopyright (c) 2021 Riccardo Brasca. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Riccardo Brasca\n-/\n--TODO: `linear_algebra/finite_dimensional` should import this file, and a lot of results should\n--be moved here.\n/-- The rank of a finite and free module is finite. -/\ntheorem rank_lt_aleph_0 : module.rank R M < cardinal.aleph_0 :=\n  by\n  letI := nontrivial_of_invariant_basis_number R\n  rw [← (choose_basis R M).mk_eq_dim'', lt_aleph_0_iff_fintype]\n  exact nonempty.intro infer_instance\n#align rank_lt_aleph_0 rank_lt_aleph_0\n\n",
 "finrank_tensor_product":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/-- The finrank of `M ⊗[R] N` is `(finrank R M) * (finrank R N)`. -/\n@[simp]\ntheorem finrank_tensor_product (M : Type v) (N : Type w) [add_comm_group M] [Module R M] [module.free R M]\n    [add_comm_group N] [Module R N] [module.free R N] : finrank R (tensor_product M R N) = finrank R M * finrank R N :=\n  by simp [finrank]\n#align finrank_tensor_product finrank_tensor_product\n\n",
 "finrank_prod":
 "/-- The finrank of `M × N` is `(finrank R M) + (finrank R N)`. -/\n@[simp]\ntheorem finrank_prod : finrank R (M × N) = finrank R M + finrank R N := by\n  simp [finrank, rank_lt_aleph_0 R M, rank_lt_aleph_0 R N]\n#align finrank_prod finrank_prod\n\n",
 "finrank_pi_fintype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n--TODO: this should follow from `linear_equiv.finrank_eq`, that is over a field.\n/-- The finrank of a finite product is the sum of the finranks. -/\ntheorem finrank_pi_fintype {ι : Type v} [fintype ι] {M : ι → Type w} [∀ i : ι, add_comm_group (M i)]\n    [∀ i : ι, Module R (M i)] [∀ i : ι, module.free R (M i)] [∀ i : ι, module.finite R (M i)] :\n    finrank R (∀ i, M i) =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (finrank R (M i)) :=\n  by\n  letI := nontrivial_of_invariant_basis_number R\n  simp only [finrank, fun i => rank_eq_card_choose_basis_index R (M i), rank_pi_finite, ← mk_sigma, mk_to_nat_eq_card,\n    card_sigma]\n#align finrank_pi_fintype finrank_pi_fintype\n\n",
 "finrank_pi":
 "/-- The finrank of `(ι → R)` is `fintype.card ι`. -/\ntheorem finrank_pi {ι : Type v} [fintype ι] : finrank R (ι → R) = card ι := by simp [finrank]\n#align finrank_pi finrank_pi\n\n",
 "finrank_matrix":
 "/-- If `m` and `n` are `fintype`, the finrank of `m × n` matrices is\n  `(fintype.card m) * (fintype.card n)`. -/\ntheorem finrank_matrix (m n : Type v) [fintype m] [fintype n] : finrank R (matrix m n R) = card m * card n := by\n  simp [finrank]\n#align finrank_matrix finrank_matrix\n\n",
 "finrank_finsupp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/-- The finrank of `(ι →₀ R)` is `fintype.card ι`. -/\n@[simp]\ntheorem finrank_finsupp {ι : Type v} [fintype ι] : finrank R («expr →₀ » ι R) = card ι := by\n  rw [finrank, rank_finsupp, ← mk_to_nat_eq_card, to_nat_lift]\n#align finrank_finsupp finrank_finsupp\n\n",
 "finrank_eq_rank":
 "/-- If `M` is finite and free, `finrank M = rank M`. -/\n@[simp]\ntheorem finrank_eq_rank : ↑(finrank R M) = module.rank R M := by\n  rw [finrank, cast_to_nat_of_lt_aleph_0 (rank_lt_aleph_0 R M)]\n#align finrank_eq_rank finrank_eq_rank\n\n",
 "finrank_eq_card_choose_basis_index":
 "/-- The finrank of a free module `M` over `R` is the cardinality of `choose_basis_index R M`. -/\ntheorem finrank_eq_card_choose_basis_index :\n    finrank R M =\n      @card (choose_basis_index R M)\n        (@choose_basis_index.fintype R M _ _ _ _ (nontrivial_of_invariant_basis_number R) _) :=\n  by\n  letI := nontrivial_of_invariant_basis_number R\n  simp [finrank, rank_eq_card_choose_basis_index]\n#align finrank_eq_card_choose_basis_index finrank_eq_card_choose_basis_index\n\n",
 "finrank_direct_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/-- The finrank of the direct sum is the sum of the finranks. -/\n@[simp]\ntheorem finrank_direct_sum {ι : Type v} [fintype ι] (M : ι → Type w) [∀ i : ι, add_comm_group (M i)]\n    [∀ i : ι, Module R (M i)] [∀ i : ι, module.free R (M i)] [∀ i : ι, module.finite R (M i)] :\n    finrank R (direct_sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `direct_sum\" (M i)) =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (finrank R (M i)) :=\n  by\n  letI := nontrivial_of_invariant_basis_number R\n  simp only [finrank, fun i => rank_eq_card_choose_basis_index R (M i), rank_direct_sum, ← mk_sigma, mk_to_nat_eq_card,\n    card_sigma]\n#align finrank_direct_sum finrank_direct_sum\n\n"}