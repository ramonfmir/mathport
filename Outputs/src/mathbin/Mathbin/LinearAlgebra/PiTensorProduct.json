{"zero_tprod_coeff'":
 "theorem zero_tprod_coeff' (z : R) (f : ∀ i, s i) (i : ι) (hf : f i = 0) : tprod_coeff R z f = 0 :=\n  quotient.sound' <| add_con_gen.rel.of _ _ <| eqv.of_zero _ _ i hf\n#align zero_tprod_coeff' zero_tprod_coeff'\n\n",
 "zero_tprod_coeff":
 "/-\nCopyright (c) 2020 Frédéric Dupuis. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Frédéric Dupuis, Eric Wieser\n-/\n-- This enables the notation `⨂[R] i : ι, s i` for the pi tensor product, given `s : ι → Type*`.\ntheorem zero_tprod_coeff (f : ∀ i, s i) : tprod_coeff R 0 f = 0 :=\n  quotient.sound' <| add_con_gen.rel.of _ _ <| eqv.of_zero_scalar _\n#align zero_tprod_coeff zero_tprod_coeff\n\n",
 "unique'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\ntheorem lift.unique'\n    {φ' :\n      «expr →ₗ[ ] »\n        (pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n          (s i))\n        R E}\n    (H : φ'.comp_multilinear_map (tprod R) = φ) : φ' = lift φ :=\n  ext <| H.symm ▸ (lift.symm_apply_apply φ).symm\n#align lift.unique' lift.unique'\n\n",
 "unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\ntheorem lift.unique\n    {φ' :\n      «expr →ₗ[ ] »\n        (pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n          (s i))\n        R E}\n    (H : ∀ f, φ' (tprod R f) = φ f) : φ' = lift φ :=\n  lift.unique' (multilinear_map.ext H)\n#align lift.unique lift.unique\n\n",
 "tprod_coeff_eq_smul_tprod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n-- Most of the time we want the instance below this one, which is easier for typeclass resolution\n-- to find.\n-- shortcut instances\n@[simp]\ntheorem tprod_coeff_eq_smul_tprod (z : R) (f : ∀ i, s i) : tprod_coeff R z f = «expr • » z (tprod R f) :=\n  by\n  have : z = «expr • » z (1 : R) := by simp only [mul_one, algebra.id.smul_eq_mul]\n  conv_lhs => rw [this]\n  rw [← smul_tprod_coeff']\n  rfl\n#align tprod_coeff_eq_smul_tprod tprod_coeff_eq_smul_tprod\n\n",
 "tprod":
 "@[simp]\ntheorem lift.tprod (f : ∀ i, s i) : lift φ (tprod R f) = φ f :=\n  lift_aux_tprod φ f\n#align lift.tprod lift.tprod\n\n",
 "tmul_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n-- by using tactic mode, we avoid the need for a lot of `@`s and `_`s\nprivate theorem tmul_symm_apply (a : Sum ι ι₂ → M) :\n    tmul_symm\n        («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n          (a i)) =\n      «expr ⊗ₜ[ ] »\n        («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n          (a (sum.inl i)))\n        R\n        («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n          (a (sum.inr i))) :=\n  pi_tensor_product.lift.tprod _\n#align tmul_symm_apply tmul_symm_apply\n\n",
 "tmul_equiv_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n@[simp]\ntheorem tmul_equiv_symm_apply (a : Sum ι ι₂ → M) :\n    (tmul_equiv R M).symm\n        («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n          (a i)) =\n      «expr ⊗ₜ[ ] »\n        («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n          (a (sum.inl i)))\n        R\n        («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n          (a (sum.inr i))) :=\n  tmul_symm_apply a\n#align tmul_equiv_symm_apply tmul_equiv_symm_apply\n\n",
 "tmul_equiv_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n-- Speed up the call to `simp`.\n@[simp]\ntheorem tmul_equiv_apply (a : ι → M) (b : ι₂ → M) :\n    tmul_equiv R M\n        («expr ⊗ₜ[ ] »\n          («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n            (a i))\n          R\n          («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n            (b i))) =\n      «expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n        (sum.elim a b i) :=\n  tmul_apply a b\n#align tmul_equiv_apply tmul_equiv_apply\n\n",
 "tmul_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨂ₜ[ ] , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , » -/\nprivate theorem tmul_apply (a : ι → M) (b : ι₂ → M) :\n    tmul\n        («expr ⊗ₜ[ ] »\n          («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n            (a i))\n          R\n          («expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n            (b i))) =\n      «expr⨂ₜ[ ] , » R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨂ₜ[ ] , »\"\n        (sum.elim a b i) :=\n  by\n  erw [tensor_product.lift.tmul, pi_tensor_product.lift.tprod, pi_tensor_product.lift.tprod]\n  rfl\n#align tmul_apply tmul_apply\n\n",
 "subsingleton_equiv_apply_tprod":
 "@[simp]\ntheorem subsingleton_equiv_apply_tprod [subsingleton ι] (i : ι) (f : ι → M) : subsingleton_equiv i (tprod R f) = f i :=\n  lift.tprod _\n#align subsingleton_equiv_apply_tprod subsingleton_equiv_apply_tprod\n\n",
 "smul_tprod_coeff_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_tprod_coeff_aux (z : R) (f : ∀ i, s i) (i : ι) (r : R) :\n    tprod_coeff R z (update f i («expr • » r (f i))) = tprod_coeff R (r * z) f :=\n  quotient.sound' <| add_con_gen.rel.of _ _ <| eqv.of_smul _ _ _ _\n#align smul_tprod_coeff_aux smul_tprod_coeff_aux\n\n",
 "smul_tprod_coeff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n-- Most of the time we want the instance below this one, which is easier for typeclass resolution\n-- to find.\ntheorem smul_tprod_coeff' (r : R₁) (z : R) (f : ∀ i, s i) :\n    «expr • » r (tprod_coeff R z f) = tprod_coeff R («expr • » r z) f :=\n  rfl\n#align smul_tprod_coeff' smul_tprod_coeff'\n\n",
 "smul_tprod_coeff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_tprod_coeff (z : R) (f : ∀ i, s i) (i : ι) (r : R₁) [SMul R₁ R] [IsScalarTower R₁ R R] [SMul R₁ (s i)]\n    [IsScalarTower R₁ R (s i)] : tprod_coeff R z (update f i («expr • » r (f i))) = tprod_coeff R («expr • » r z) f :=\n  by\n  have h₁ : «expr • » r z = «expr • » r (1 : R) * z := by rw [smul_mul_assoc, one_mul]\n  have h₂ : «expr • » r (f i) = «expr • » («expr • » r (1 : R)) (f i) := (smul_one_smul _ _ _).symm\n  rw [h₁, h₂]\n  exact smul_tprod_coeff_aux z f i _\n#align smul_tprod_coeff smul_tprod_coeff\n\n",
 "smul_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print smul_add /-\nprotected theorem smul_add (r : R₁)\n    (x y :\n      pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n        (s i)) :\n    «expr • » r (x + y) = «expr • » r x + «expr • » r y :=\n  AddMonoidHom.map_add _ _ _\n#align smul_add smul_add\n-/\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem lift_aux.smul {φ : multilinear_map R s E} (r : R)\n    (x :\n      pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n        (s i)) :\n    lift_aux φ («expr • » r x) = «expr • » r (lift_aux φ x) :=\n  by\n  refine' pi_tensor_product.induction_on' x _ _\n  · intro z f\n    rw [smul_tprod_coeff' r z f, lift_aux_tprod_coeff, lift_aux_tprod_coeff, smul_assoc]\n  · intro z y ihz ihy\n    rw [smul_add, (lift_aux φ).map_add, ihz, ihy, (lift_aux φ).map_add, smul_add]\n#align lift_aux.smul lift_aux.smul\n\n",
 "reindex_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem reindex_trans (e : «expr ≃ » ι ι₂) (e' : «expr ≃ » ι₂ ι₃) :\n    (reindex R M e).trans (reindex R M e') = reindex R M (e.trans e') :=\n  by\n  apply linear_equiv.to_linear_map_injective\n  ext f\n  simp only [linear_equiv.trans_apply, linear_equiv.coe_coe, reindex_tprod, linear_map.coe_comp_multilinear_map,\n    Function.comp_apply, multilinear_map.dom_dom_congr_apply, reindex_comp_tprod]\n  congr\n#align reindex_trans reindex_trans\n\n",
 "reindex_tprod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem reindex_tprod (e : «expr ≃ » ι ι₂) (f : ∀ i, M) : reindex R M e (tprod R f) = tprod R fun i => f (e.symm i) :=\n  lift_aux_tprod _ f\n#align reindex_tprod reindex_tprod\n\n",
 "reindex_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n@[simp]\ntheorem reindex_symm (e : «expr ≃ » ι ι₂) : (reindex R M e).symm = reindex R M e.symm :=\n  rfl\n#align reindex_symm reindex_symm\n\n",
 "reindex_reindex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n@[simp]\ntheorem reindex_reindex (e : «expr ≃ » ι ι₂) (e' : «expr ≃ » ι₂ ι₃)\n    (x :\n      pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n        M) :\n    reindex R M e' (reindex R M e x) = reindex R M (e.trans e') x :=\n  linear_equiv.congr_fun (reindex_trans e e' : _ = reindex R M (e.trans e')) x\n#align reindex_reindex reindex_reindex\n\n",
 "reindex_refl":
 "@[simp]\ntheorem reindex_refl : reindex R M (equiv.refl ι) = linear_equiv.refl R _ :=\n  by\n  apply linear_equiv.to_linear_map_injective\n  ext1\n  rw [reindex_comp_tprod, linear_equiv.refl_to_linear_map, equiv.refl_symm]\n  rfl\n#align reindex_refl reindex_refl\n\n",
 "reindex_comp_tprod":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n@[simp]\ntheorem reindex_comp_tprod (e : «expr ≃ » ι ι₂) :\n    (reindex R M e :\n            «expr →ₗ[ ] »\n              (pi_tensor_product R\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\" M)\n              R\n              (pi_tensor_product R\n                \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n                M)).comp_multilinear_map\n        (tprod R) =\n      (tprod R : multilinear_map R (fun i => M) _).dom_dom_congr e.symm :=\n  multilinear_map.ext <| reindex_tprod e\n#align reindex_comp_tprod reindex_comp_tprod\n\n",
 "lift_tprod":
 "@[simp]\ntheorem lift_tprod : lift (tprod R : multilinear_map R s _) = linear_map.id :=\n  eq.symm <| lift.unique' rfl\n#align lift_tprod lift_tprod\n\n",
 "lift_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n@[simp]\ntheorem lift_symm\n    (φ' :\n      «expr →ₗ[ ] »\n        (pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n          (s i))\n        R E) :\n    lift.symm φ' = φ'.comp_multilinear_map (tprod R) :=\n  rfl\n#align lift_symm lift_symm\n\n",
 "lift_reindex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n@[simp]\ntheorem lift_reindex (e : «expr ≃ » ι ι₂) (φ : multilinear_map R (fun _ => M) E)\n    (x :\n      pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n        M) :\n    lift φ (reindex R M e x) = lift (φ.dom_dom_congr e.symm) x :=\n  linear_map.congr_fun (lift_comp_reindex e φ) x\n#align lift_reindex lift_reindex\n\n",
 "lift_comp_reindex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ∘ₗ » -/\n@[simp]\ntheorem lift_comp_reindex (e : «expr ≃ » ι ι₂) (φ : multilinear_map R (fun _ : ι₂ => M) E) :\n    «expr ∘ₗ » (lift φ) ↑(reindex R M e) = lift (φ.dom_dom_congr e.symm) :=\n  by\n  ext\n  simp\n#align lift_comp_reindex lift_comp_reindex\n\n",
 "lift_aux_tprod_coeff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem lift_aux_tprod_coeff (φ : multilinear_map R s E) (z : R) (f : ∀ i, s i) :\n    lift_aux φ (tprod_coeff R z f) = «expr • » z (φ f) := by\n  simp [lift_aux, lift_add_hom, tprod_coeff, free_add_monoid.lift_eval_of]\n#align lift_aux_tprod_coeff lift_aux_tprod_coeff\n\n",
 "lift_aux_tprod":
 "theorem lift_aux_tprod (φ : multilinear_map R s E) (f : ∀ i, s i) : lift_aux φ (tprod R f) = φ f := by\n  simp only [lift_aux, lift_add_hom, tprod, multilinear_map.coe_mk, tprod_coeff, free_add_monoid.lift_eval_of, one_smul,\n    add_con.lift_mk']\n#align lift_aux_tprod lift_aux_tprod\n\n",
 "is_empty_equiv_apply_tprod":
 "@[simp]\ntheorem is_empty_equiv_apply_tprod [is_empty ι] (f : ι → M) : is_empty_equiv ι (tprod R f) = 1 :=\n  lift.tprod _\n#align is_empty_equiv_apply_tprod is_empty_equiv_apply_tprod\n\n",
 "induction_on'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n@[elab_as_elim]\nprotected theorem induction_on'\n    {C :\n      pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n          (s i) →\n        Prop}\n    (z :\n      pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n        (s i))\n    (C1 : ∀ {r : R} {f : ∀ i, s i}, C (tprod_coeff R r f)) (Cp : ∀ {x y}, C x → C y → C (x + y)) : C z :=\n  by\n  have C0 : C 0 := by\n    have h₁ := @C1 0 0\n    rwa [zero_tprod_coeff] at h₁\n  refine' add_con.induction_on z fun x => free_add_monoid.rec_on x C0 _\n  simp_rw [add_con.coe_add]\n  refine' fun f y ih => Cp _ ih\n  convert @C1 f.1 f.2\n  simp only [prod.mk.eta]\n#align induction_on' induction_on'\n\n",
 "induction_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[elab_as_elim]\nprotected theorem induction_on\n    {C :\n      pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n          (s i) →\n        Prop}\n    (z :\n      pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n        (s i))\n    (C1 : ∀ {r : R} {f : ∀ i, s i}, C («expr • » r (tprod R f))) (Cp : ∀ {x y}, C x → C y → C (x + y)) : C z :=\n  by\n  simp_rw [← tprod_coeff_eq_smul_tprod] at C1\n  exact pi_tensor_product.induction_on' z @C1 @Cp\n#align induction_on induction_on\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `pi_tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product -/\n@[ext]\ntheorem ext\n    {φ₁ φ₂ :\n      «expr →ₗ[ ] »\n        (pi_tensor_product R \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `pi_tensor_product\"\n          (s i))\n        R E}\n    (H : φ₁.comp_multilinear_map (tprod R) = φ₂.comp_multilinear_map (tprod R)) : φ₁ = φ₂ :=\n  by\n  refine' linear_map.ext _\n  refine' fun z => pi_tensor_product.induction_on' z _ fun x y hx hy => by rw [φ₁.map_add, φ₂.map_add, hx, hy]\n  · intro r f\n    rw [tprod_coeff_eq_smul_tprod, φ₁.map_smul, φ₂.map_smul]\n    apply _root_.congr_arg\n    exact multilinear_map.congr_fun H f\n#align ext ext\n\n",
 "add_tprod_coeff'":
 "theorem add_tprod_coeff' (z₁ z₂ : R) (f : ∀ i, s i) :\n    tprod_coeff R z₁ f + tprod_coeff R z₂ f = tprod_coeff R (z₁ + z₂) f :=\n  quotient.sound' <| add_con_gen.rel.of _ _ (eqv.of_add_scalar z₁ z₂ f)\n#align add_tprod_coeff' add_tprod_coeff'\n\n",
 "add_tprod_coeff":
 "theorem add_tprod_coeff (z : R) (f : ∀ i, s i) (i : ι) (m₁ m₂ : s i) :\n    tprod_coeff R z (update f i m₁) + tprod_coeff R z (update f i m₂) = tprod_coeff R z (update f i (m₁ + m₂)) :=\n  quotient.sound' <| add_con_gen.rel.of _ _ (eqv.of_add z f i m₁ m₂)\n#align add_tprod_coeff add_tprod_coeff\n\n"}