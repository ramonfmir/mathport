{"vec_empty_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\n@[simp]\ntheorem linear_map.vec_empty_apply (m : M) :\n    (linear_map.vec_empty : «expr →ₗ[ ] » M R (fin 0 → M₃)) m =\n      «expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\" :=\n  rfl\n#align linear_map.vec_empty_apply linear_map.vec_empty_apply\n\n",
 "vec_cons_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem linear_map.vec_cons_apply {n} (f : «expr →ₗ[ ] » M R M₂) (g : «expr →ₗ[ ] » M R (fin n → M₂)) (m : M) :\n    f.vec_cons g m = matrix.vec_cons (f m) (g m) :=\n  rfl\n#align linear_map.vec_cons_apply linear_map.vec_cons_apply\n\n",
 "update_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem update_apply (f : ∀ i, «expr →ₗ[ ] » M₂ R (φ i)) (c : M₂) (i j : ι) (b : «expr →ₗ[ ] » M₂ R (φ i)) :\n    (update f i b j) c = update (fun i => f i c) i (b c) j :=\n  by\n  by_cases j = i\n  · rw [h, update_same, update_same]\n  · rw [update_noteq h, update_noteq h]\n#align update_apply update_apply\n\n",
 "supr_map_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem supr_map_single [decidable_eq ι] [Finite ι] :\n    «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\"\n        (map (linear_map.single i : «expr →ₗ[ ] » (φ i) R (∀ i, φ i)) (p i)) =\n      pi Set.univ p :=\n  by\n  cases nonempty_fintype ι\n  refine' (supᵢ_le fun i => _).antisymm _\n  · rintro _ ⟨x, hx : x ∈ p i, rfl⟩ j -\n    rcases em (j = i) with (rfl | hj) <;> simp [*]\n  · intro x hx\n    rw [← finset.univ_sum_single x]\n    exact sum_mem_supr fun i => mem_map_of_mem (hx i trivial)\n#align supr_map_single supr_map_single\n\n",
 "sum_arrow_lequiv_prod_arrow_symm_apply_inr":
 "@[simp]\ntheorem sum_arrow_lequiv_prod_arrow_symm_apply_inr {α β} (f : α → M) (g : β → M) (b : β) :\n    ((sum_arrow_lequiv_prod_arrow α β R M).symm (f, g)) (sum.inr b) = g b :=\n  rfl\n#align sum_arrow_lequiv_prod_arrow_symm_apply_inr sum_arrow_lequiv_prod_arrow_symm_apply_inr\n\n",
 "sum_arrow_lequiv_prod_arrow_symm_apply_inl":
 "@[simp]\ntheorem sum_arrow_lequiv_prod_arrow_symm_apply_inl {α β} (f : α → M) (g : β → M) (a : α) :\n    ((sum_arrow_lequiv_prod_arrow α β R M).symm (f, g)) (sum.inl a) = f a :=\n  rfl\n#align sum_arrow_lequiv_prod_arrow_symm_apply_inl sum_arrow_lequiv_prod_arrow_symm_apply_inl\n\n",
 "sum_arrow_lequiv_prod_arrow_apply_snd":
 "@[simp]\ntheorem sum_arrow_lequiv_prod_arrow_apply_snd {α β} (f : Sum α β → M) (b : β) :\n    (sum_arrow_lequiv_prod_arrow α β R M f).2 b = f (sum.inr b) :=\n  rfl\n#align sum_arrow_lequiv_prod_arrow_apply_snd sum_arrow_lequiv_prod_arrow_apply_snd\n\n",
 "sum_arrow_lequiv_prod_arrow_apply_fst":
 "-- TODO additive version?\n@[simp]\ntheorem sum_arrow_lequiv_prod_arrow_apply_fst {α β} (f : Sum α β → M) (a : α) :\n    (sum_arrow_lequiv_prod_arrow α β R M f).1 a = f (sum.inl a) :=\n  rfl\n#align sum_arrow_lequiv_prod_arrow_apply_fst sum_arrow_lequiv_prod_arrow_apply_fst\n\n",
 "proj_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem proj_pi (f : ∀ i, «expr →ₗ[ ] » M₂ R (φ i)) (i : ι) : (proj i).comp (pi f) = f i :=\n  ext fun c => rfl\n#align proj_pi proj_pi\n\n",
 "proj_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem proj_apply (i : ι) (b : ∀ i, φ i) : (proj i : «expr →ₗ[ ] » (∀ i, φ i) R (φ i)) b = b i :=\n  rfl\n#align proj_apply proj_apply\n\n",
 "pi_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem pi_zero : pi (fun i => 0 : ∀ i, «expr →ₗ[ ] » M₂ R (φ i)) = 0 := by ext <;> rfl\n#align pi_zero pi_zero\n\n",
 "pi_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem pi_top (s : set ι) : (pi s fun i : ι => («expr⊤» : submodule R (φ i))) = «expr⊤» :=\n  SetLike.coe_injective <| Set.pi_univ _\n#align pi_top pi_top\n\n",
 "pi_ring_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem pi_ring_symm_apply (f : ι → M) (g : ι → R) :\n    (pi_ring R M ι S).symm f g =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        («expr • » (g i) (f i)) :=\n  by simp [pi_ring, linear_map.lsum]\n#align pi_ring_symm_apply pi_ring_symm_apply\n\n",
 "pi_ring_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem pi_ring_apply (f : «expr →ₗ[ ] » (ι → R) R M) (i : ι) : pi_ring R M ι S f i = f (Pi.single i 1) :=\n  rfl\n#align pi_ring_apply pi_ring_apply\n\n",
 "pi_mono":
 "theorem pi_mono {s : set ι} (h : ∀ i ∈ s, p i ≤ q i) : pi s p ≤ pi s q :=\n  Set.pi_mono h\n#align pi_mono pi_mono\n\n",
 "pi_ext_iff":
 "theorem pi_ext_iff : f = g ↔ ∀ i x, f (Pi.single i x) = g (Pi.single i x) :=\n  ⟨fun h i x => h ▸ rfl, pi_ext⟩\n#align pi_ext_iff pi_ext_iff\n\n",
 "pi_ext'_iff":
 "theorem pi_ext'_iff : f = g ↔ ∀ i, f.comp (single i) = g.comp (single i) :=\n  ⟨fun h i => h ▸ rfl, pi_ext'⟩\n#align pi_ext'_iff pi_ext'_iff\n\n",
 "pi_ext'":
 "/-- This is used as the ext lemma instead of `linear_map.pi_ext` for reasons explained in\nnote [partially-applied ext lemmas]. -/\n@[ext]\ntheorem pi_ext' (h : ∀ i, f.comp (single i) = g.comp (single i)) : f = g :=\n  by\n  refine' pi_ext fun i x => _\n  convert linear_map.congr_fun (h i) x\n#align pi_ext' pi_ext'\n\n",
 "pi_ext":
 "theorem pi_ext (h : ∀ i x, f (Pi.single i x) = g (Pi.single i x)) : f = g :=\n  to_add_monoid_hom_injective <| add_monoid_hom.functions_ext _ _ _ h\n#align pi_ext pi_ext\n\n",
 "pi_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem pi_eq_zero (f : ∀ i, «expr →ₗ[ ] » M₂ R (φ i)) : pi f = 0 ↔ ∀ i, f i = 0 := by\n  simp only [linear_map.ext_iff, pi_apply, funext_iff] <;> exact ⟨fun h a b => h b a, fun h a b => h b a⟩\n#align pi_eq_zero pi_eq_zero\n\n",
 "pi_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem pi_empty (p : ∀ i, submodule R (φ i)) : pi ∅ p = «expr⊤» :=\n  SetLike.coe_injective <| Set.empty_pi _\n#align pi_empty pi_empty\n\n",
 "pi_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem pi_comp (f : ∀ i, «expr →ₗ[ ] » M₂ R (φ i)) (g : «expr →ₗ[ ] » M₃ R M₂) :\n    (pi f).comp g = pi fun i => (f i).comp g :=\n  rfl\n#align pi_comp pi_comp\n\n",
 "pi_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/-\nCopyright (c) 2017 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl, Mario Carneiro, Kevin Buzzard, Yury Kudryashov, Eric Wieser\n-/\n@[simp]\ntheorem pi_apply (f : ∀ i, «expr →ₗ[ ] » M₂ R (φ i)) (c : M₂) (i : ι) : pi f c i = f i c :=\n  rfl\n#align pi_apply pi_apply\n\n",
 "mem_pi":
 "@[simp]\ntheorem mem_pi : x ∈ pi I p ↔ ∀ i ∈ I, x i ∈ p i :=\n  iff.rfl\n#align mem_pi mem_pi\n\n",
 "lsum_single":
 "@[simp]\ntheorem lsum_single {ι R : Type _} [fintype ι] [decidable_eq ι] [CommRing R] {M : ι → Type _}\n    [∀ i, add_comm_group (M i)] [∀ i, Module R (M i)] : linear_map.lsum R M R linear_map.single = linear_map.id :=\n  linear_map.ext fun x => by simp [finset.univ_sum_single]\n#align lsum_single lsum_single\n\n",
 "le_comap_single_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem le_comap_single_pi [decidable_eq ι] (p : ∀ i, submodule R (φ i)) {i} :\n    p i ≤ submodule.comap (linear_map.single i : «expr →ₗ[ ] » (φ i) R _) (submodule.pi Set.univ p) :=\n  by\n  intro x hx\n  rw [submodule.mem_comap, submodule.mem_pi]\n  rintro j -\n  by_cases h : j = i\n  · rwa [h, linear_map.coe_single, Pi.single_eq_same]\n  · rw [linear_map.coe_single, Pi.single_eq_of_ne h]\n    exact (p j).zero_mem\n#align le_comap_single_pi le_comap_single_pi\n\n",
 "ker_pi":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\ntheorem ker_pi (f : ∀ i, «expr →ₗ[ ] » M₂ R (φ i)) :\n    ker (pi f) =\n      «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\" (ker (f i)) :=\n  by ext c <;> simp [funext_iff] <;> rfl\n#align ker_pi ker_pi\n\n",
 "infi_ker_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem infi_ker_proj :\n    («expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n          (ker (proj i : «expr →ₗ[ ] » (∀ i, φ i) R (φ i))) :\n        submodule R (∀ i, φ i)) =\n      «expr⊥» :=\n  bot_unique <|\n    SetLike.le_def.2 fun a h => by\n      simp only [mem_infi, mem_ker, proj_apply] at h\n      exact (mem_bot _).2 (funext fun i => h i)\n#align infi_ker_proj infi_ker_proj\n\n",
 "infi_comap_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem infi_comap_proj :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (comap (proj i : «expr →ₗ[ ] » (∀ i, φ i) R (φ i)) (p i)) =\n      pi Set.univ p :=\n  by\n  ext x\n  simp\n#align infi_comap_proj infi_comap_proj\n\n",
 "coe_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_single [decidable_eq ι] (i : ι) : «expr⇑ » (single i : «expr →ₗ[ ] » (φ i) R (∀ i, φ i)) = Pi.single i :=\n  rfl\n#align coe_single coe_single\n\n",
 "coe_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem coe_proj (i : ι) : «expr⇑ » (proj i : «expr →ₗ[ ] » (∀ i, φ i) R (φ i)) = function.eval i :=\n  rfl\n#align coe_proj coe_proj\n\n",
 "coe_pi":
 "@[simp, norm_cast]\ntheorem coe_pi : (pi I p : set (∀ i, φ i)) = Set.pi I fun i => p i :=\n  rfl\n#align coe_pi coe_pi\n\n",
 "binfi_comap_proj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem binfi_comap_proj :\n    «expr⨅ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨅ , »\"\n        (comap (proj i : «expr →ₗ[ ] » (∀ i, φ i) R (φ i)) (p i)) =\n      pi I p :=\n  by\n  ext x\n  simp\n#align binfi_comap_proj binfi_comap_proj\n\n",
 "apply_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem apply_single [add_comm_monoid M] [Module R M] [decidable_eq ι] (f : ∀ i, «expr →ₗ[ ] » (φ i) R M) (i j : ι)\n    (x : φ i) : f j (Pi.single i x j) = Pi.single i (f i x) j :=\n  Pi.apply_single (fun i => f i) (fun i => (f i).map_zero) _ _ _\n#align apply_single apply_single\n\n",
 "Pi_congr_right_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n@[simp]\ntheorem Pi_congr_right_trans (e : ∀ i, «expr ≃ₗ[ ] » (φ i) R (ψ i)) (f : ∀ i, «expr ≃ₗ[ ] » (ψ i) R (χ i)) :\n    (Pi_congr_right e).trans (Pi_congr_right f) = Pi_congr_right fun i => (e i).trans (f i) :=\n  rfl\n#align Pi_congr_right_trans Pi_congr_right_trans\n\n",
 "Pi_congr_right_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n@[simp]\ntheorem Pi_congr_right_symm (e : ∀ i, «expr ≃ₗ[ ] » (φ i) R (ψ i)) :\n    (Pi_congr_right e).symm = Pi_congr_right fun i => (e i).symm :=\n  rfl\n#align Pi_congr_right_symm Pi_congr_right_symm\n\n",
 "Pi_congr_right_refl":
 "@[simp]\ntheorem Pi_congr_right_refl : (Pi_congr_right fun j => refl R (φ j)) = refl _ _ :=\n  rfl\n#align Pi_congr_right_refl Pi_congr_right_refl\n\n"}