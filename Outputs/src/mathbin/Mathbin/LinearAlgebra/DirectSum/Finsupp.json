{"finsupp_tensor_finsupp_symm_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem finsupp_tensor_finsupp_symm_single (R M N ι κ : Sort _) [CommRing R] [add_comm_group M] [Module R M]\n    [add_comm_group N] [Module R N] (i : ι × κ) (m : M) (n : N) :\n    (finsupp_tensor_finsupp R M N ι κ).symm (finsupp.single i («expr ⊗ₜ » m n)) =\n      «expr ⊗ₜ » (finsupp.single i.1 m) (finsupp.single i.2 n) :=\n  prod.cases_on i fun i k => (linear_equiv.symm_apply_eq _).2 (finsupp_tensor_finsupp_single _ _ _ _ _ _ _ _ _).symm\n#align finsupp_tensor_finsupp_symm_single finsupp_tensor_finsupp_symm_single\n\n",
 "finsupp_tensor_finsupp_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/-\nCopyright (c) 2019 Johannes Hölzl. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johannes Hölzl\n-/\n@[simp]\ntheorem finsupp_tensor_finsupp_single (R M N ι κ : Sort _) [CommRing R] [add_comm_group M] [Module R M]\n    [add_comm_group N] [Module R N] (i : ι) (m : M) (k : κ) (n : N) :\n    finsupp_tensor_finsupp R M N ι κ («expr ⊗ₜ » (finsupp.single i m) (finsupp.single k n)) =\n      finsupp.single (i, k) («expr ⊗ₜ » m n) :=\n  by simp [finsupp_tensor_finsupp]\n#align finsupp_tensor_finsupp_single finsupp_tensor_finsupp_single\n\n",
 "finsupp_tensor_finsupp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem finsupp_tensor_finsupp_apply (R M N ι κ : Sort _) [CommRing R] [add_comm_group M] [Module R M]\n    [add_comm_group N] [Module R N] (f : «expr →₀ » ι M) (g : «expr →₀ » κ N) (i : ι) (k : κ) :\n    finsupp_tensor_finsupp R M N ι κ («expr ⊗ₜ » f g) (i, k) = «expr ⊗ₜ » (f i) (g k) :=\n  by\n  apply finsupp.induction_linear f\n  · simp\n  · intro f₁ f₂ hf₁ hf₂\n    simp [add_tmul, hf₁, hf₂]\n  · intro i' m\n    apply finsupp.induction_linear g\n    · simp\n    · intro g₁ g₂ hg₁ hg₂\n      simp [tmul_add, hg₁, hg₂]\n    · intro k' n\n      simp only [finsupp_tensor_finsupp_single]\n      simp only [finsupp.single_apply]\n      -- split_ifs; finish can close the goal from here\n      by_cases h1 : (i', k') = (i, k)\n      · simp only [prod.mk.inj_iff] at h1\n        simp [h1]\n      · simp only [h1, if_false]\n        simp only [prod.mk.inj_iff, not_and_or] at h1\n        cases h1 <;> simp [h1]\n#align finsupp_tensor_finsupp_apply finsupp_tensor_finsupp_apply\n\n",
 "finsupp_tensor_finsupp'_single_tmul_single":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem finsupp_tensor_finsupp'_single_tmul_single (a : α) (b : β) (r₁ r₂ : S) :\n    finsupp_tensor_finsupp' S α β («expr ⊗ₜ[ ] » (finsupp.single a r₁) S (finsupp.single b r₂)) =\n      finsupp.single (a, b) (r₁ * r₂) :=\n  by\n  ext ⟨a', b'⟩\n  simp [finsupp.single_apply, ite_and]\n#align finsupp_tensor_finsupp'_single_tmul_single finsupp_tensor_finsupp'_single_tmul_single\n\n",
 "finsupp_tensor_finsupp'_apply_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →₀ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem finsupp_tensor_finsupp'_apply_apply (f : «expr →₀ » α S) (g : «expr →₀ » β S) (a : α) (b : β) :\n    finsupp_tensor_finsupp' S α β («expr ⊗ₜ[ ] » f S g) (a, b) = f a * g b := by simp [finsupp_tensor_finsupp']\n#align finsupp_tensor_finsupp'_apply_apply finsupp_tensor_finsupp'_apply_apply\n\n"}