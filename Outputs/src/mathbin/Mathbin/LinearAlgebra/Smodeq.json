{"zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\ntheorem zero : «expr ≡ [SMOD ]» x 0 U ↔ x ∈ U := by rw [smodeq.def, submodule.quotient.eq, sub_zero]\n#align zero zero\n\n",
 "trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n#print trans /-\n@[trans]\ntheorem trans (hxy : «expr ≡ [SMOD ]» x y U) (hyz : «expr ≡ [SMOD ]» y z U) : «expr ≡ [SMOD ]» x z U :=\n  hxy.trans hyz\n#align trans trans\n-/\n\n",
 "top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem top : «expr ≡ [SMOD ]» x y («expr⊤» : submodule R M) :=\n  (submodule.quotient.eq («expr⊤»)).2 mem_top\n#align top top\n\n",
 "symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n#print symm /-\n@[symm]\ntheorem symm (hxy : «expr ≡ [SMOD ]» x y U) : «expr ≡ [SMOD ]» y x U :=\n  hxy.symm\n#align symm symm\n-/\n\n",
 "sub_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\ntheorem sub_mem : «expr ≡ [SMOD ]» x y U ↔ x - y ∈ U := by rw [smodeq.def, submodule.quotient.eq]\n#align sub_mem sub_mem\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul (hxy : «expr ≡ [SMOD ]» x y U) (c : R) : «expr ≡ [SMOD ]» («expr • » c x) («expr • » c y) U :=\n  by\n  rw [smodeq.def] at hxy⊢\n  simp_rw [quotient.mk_smul, hxy]\n#align smul smul\n\n",
 "rfl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n#print rfl /-\nprotected theorem rfl : «expr ≡ [SMOD ]» x x U :=\n  smodeq.refl _\n#align rfl rfl\n-/\n\n",
 "refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n#print refl /-\n@[refl]\nprotected theorem refl (x : M) : «expr ≡ [SMOD ]» x x U :=\n  @rfl _ _\n#align refl refl\n-/\n\n",
 "mono":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n@[mono]\ntheorem mono (HU : U₁ ≤ U₂) (hxy : «expr ≡ [SMOD ]» x y U₁) : «expr ≡ [SMOD ]» x y U₂ :=\n  (submodule.quotient.eq U₂).2 <| HU <| (submodule.quotient.eq U₁).1 hxy\n#align mono mono\n\n",
 "map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\ntheorem map (hxy : «expr ≡ [SMOD ]» x y U) (f : «expr →ₗ[ ] » M R N) : «expr ≡ [SMOD ]» (f x) (f y) (U.map f) :=\n  (submodule.quotient.eq _).2 <| f.map_sub x y ▸ mem_map_of_mem <| (submodule.quotient.eq _).1 hxy\n#align map map\n\n",
 "eval":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `polynomial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\ntheorem eval {R : Type _} [CommRing R] {I : ideal R} {x y : R} (h : «expr ≡ [SMOD ]» x y I) (f : polynomial R) :\n    «expr ≡ [SMOD ]» (f.eval x) (f.eval y) I := by\n  rw [smodeq.def] at h⊢\n  show ideal.quotient.mk I (f.eval x) = ideal.quotient.mk I (f.eval y)\n  change ideal.quotient.mk I x = ideal.quotient.mk I y at h\n  rw [← polynomial.eval₂_at_apply, ← polynomial.eval₂_at_apply, h]\n#align eval eval\n\n",
 "def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/-\nCopyright (c) 2020 Kenny Lau. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kenny Lau\n-/\nprotected theorem smodeq.def :\n    «expr ≡ [SMOD ]» x y U ↔ (submodule.quotient.mk x : «expr ⧸ » M U) = submodule.quotient.mk y :=\n  iff.rfl\n#align smodeq.def smodeq.def\n\n",
 "comap":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\ntheorem comap {f : «expr →ₗ[ ] » M R N} (hxy : «expr ≡ [SMOD ]» (f x) (f y) V) : «expr ≡ [SMOD ]» x y (V.comap f) :=\n  (submodule.quotient.eq _).2 <| show f (x - y) ∈ V from (f.map_sub x y).symm ▸ (submodule.quotient.eq _).1 hxy\n#align comap comap\n\n",
 "bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n@[simp]\ntheorem bot : «expr ≡ [SMOD ]» x y («expr⊥» : submodule R M) ↔ x = y := by\n  rw [smodeq.def, submodule.quotient.eq, mem_bot, sub_eq_zero]\n#align bot bot\n\n",
 "add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [SMOD ]» -/\ntheorem add (hxy₁ : «expr ≡ [SMOD ]» x₁ y₁ U) (hxy₂ : «expr ≡ [SMOD ]» x₂ y₂ U) :\n    «expr ≡ [SMOD ]» (x₁ + x₂) (y₁ + y₂) U :=\n  by\n  rw [smodeq.def] at hxy₁ hxy₂⊢\n  simp_rw [quotient.mk_add, hxy₁, hxy₂]\n#align add add\n\n"}