{"weighted_vsub_weighted_vsub_vsub_weights":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted subtraction with `weighted_vsub_vsub_weights` gives the result of subtracting the\nspecified points. -/\n@[simp]\ntheorem weighted_vsub_weighted_vsub_vsub_weights [decidable_eq ι] (p : ι → P) {i j : ι} (hi : i ∈ s) (hj : j ∈ s) :\n    s.weighted_vsub p (weighted_vsub_vsub_weights k i j) = «expr -ᵥ » (p i) (p j) := by\n  rw [weighted_vsub_vsub_weights, ← affine_combination_vsub,\n    s.affine_combination_affine_combination_single_weights k p hi,\n    s.affine_combination_affine_combination_single_weights k p hj]\n#align weighted_vsub_weighted_vsub_vsub_weights weighted_vsub_weighted_vsub_vsub_weights\n\n",
 "weighted_vsub_vsub_weights_self":
 "@[simp]\ntheorem weighted_vsub_vsub_weights_self [decidable_eq ι] (i : ι) : weighted_vsub_vsub_weights k i i = 0 := by\n  simp [weighted_vsub_vsub_weights]\n#align weighted_vsub_vsub_weights_self weighted_vsub_vsub_weights_self\n\n",
 "weighted_vsub_vsub_weights_apply_right":
 "@[simp]\ntheorem weighted_vsub_vsub_weights_apply_right [decidable_eq ι] {i j : ι} (h : i ≠ j) :\n    weighted_vsub_vsub_weights k i j j = -1 := by simp [weighted_vsub_vsub_weights, h.symm]\n#align weighted_vsub_vsub_weights_apply_right weighted_vsub_vsub_weights_apply_right\n\n",
 "weighted_vsub_vsub_weights_apply_of_ne":
 "@[simp]\ntheorem weighted_vsub_vsub_weights_apply_of_ne [decidable_eq ι] {i j t : ι} (hi : t ≠ i) (hj : t ≠ j) :\n    weighted_vsub_vsub_weights k i j t = 0 := by simp [weighted_vsub_vsub_weights, hi, hj]\n#align weighted_vsub_vsub_weights_apply_of_ne weighted_vsub_vsub_weights_apply_of_ne\n\n",
 "weighted_vsub_vsub_weights_apply_left":
 "@[simp]\ntheorem weighted_vsub_vsub_weights_apply_left [decidable_eq ι] {i j : ι} (h : i ≠ j) :\n    weighted_vsub_vsub_weights k i j i = 1 := by simp [weighted_vsub_vsub_weights, h]\n#align weighted_vsub_vsub_weights_apply_left weighted_vsub_vsub_weights_apply_left\n\n",
 "weighted_vsub_vadd_affine_combination":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- Adding a `weighted_vsub` to an `affine_combination`. -/\ntheorem weighted_vsub_vadd_affine_combination (w₁ w₂ : ι → k) (p : ι → P) :\n    «expr +ᵥ » (s.weighted_vsub p w₁) (s.affine_combination p w₂) = s.affine_combination p (w₁ + w₂) := by\n  rw [← vadd_eq_add, affine_map.map_vadd, affine_combination_linear]\n#align weighted_vsub_vadd_affine_combination weighted_vsub_vadd_affine_combination\n\n",
 "weighted_vsub_subtype_eq_filter":
 "/-- A weighted sum over `s.subtype pred` equals one over `s.filter pred`. -/\ntheorem weighted_vsub_subtype_eq_filter (w : ι → k) (p : ι → P) (pred : ι → Prop) [decidable_pred pred] :\n    ((s.subtype pred).weighted_vsub (fun i => p i) fun i => w i) = (s.filter pred).weighted_vsub p w :=\n  s.weighted_vsub_of_point_subtype_eq_filter _ _ _ _\n#align weighted_vsub_subtype_eq_filter weighted_vsub_subtype_eq_filter\n\n",
 "weighted_vsub_sdiff_sub":
 "/-- A weighted sum may be split into a subtraction of such sums over two subsets. -/\ntheorem weighted_vsub_sdiff_sub [decidable_eq ι] {s₂ : Finset ι} (h : s₂ ⊆ s) (w : ι → k) (p : ι → P) :\n    (s \\ s₂).weighted_vsub p w - s₂.weighted_vsub p (-w) = s.weighted_vsub p w :=\n  s.weighted_vsub_of_point_sdiff_sub h _ _ _\n#align weighted_vsub_sdiff_sub weighted_vsub_sdiff_sub\n\n",
 "weighted_vsub_sdiff":
 "/-- A weighted sum may be split into such sums over two subsets. -/\ntheorem weighted_vsub_sdiff [decidable_eq ι] {s₂ : Finset ι} (h : s₂ ⊆ s) (w : ι → k) (p : ι → P) :\n    (s \\ s₂).weighted_vsub p w + s₂.weighted_vsub p w = s.weighted_vsub p w :=\n  s.weighted_vsub_of_point_sdiff h _ _ _\n#align weighted_vsub_sdiff weighted_vsub_sdiff\n\n",
 "weighted_vsub_of_point_vadd_eq_of_sum_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- The weighted sum, added to the base point, is independent of the\nbase point when the sum of the weights is 1. -/\ntheorem weighted_vsub_of_point_vadd_eq_of_sum_eq_one (w : ι → k) (p : ι → P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1)\n    (b₁ b₂ : P) : «expr +ᵥ » (s.weighted_vsub_of_point p b₁ w) b₁ = «expr +ᵥ » (s.weighted_vsub_of_point p b₂ w) b₂ :=\n  by\n  erw [weighted_vsub_of_point_apply, weighted_vsub_of_point_apply, ← @vsub_eq_zero_iff_eq V, vadd_vsub_assoc,\n    vsub_vadd_eq_vsub_sub, ← add_sub_assoc, add_comm, add_sub_assoc, ← sum_sub_distrib]\n  conv_lhs =>\n    congr\n    skip\n    congr\n    skip\n    ext\n    rw [← smul_sub, vsub_sub_vsub_cancel_left]\n  rw [← sum_smul, h, one_smul, vsub_add_vsub_cancel, vsub_self]\n#align weighted_vsub_of_point_vadd_eq_of_sum_eq_one weighted_vsub_of_point_vadd_eq_of_sum_eq_one\n\n",
 "weighted_vsub_of_point_subtype_eq_filter":
 "/-- A weighted sum over `s.subtype pred` equals one over `s.filter pred`. -/\ntheorem weighted_vsub_of_point_subtype_eq_filter (w : ι → k) (p : ι → P) (b : P) (pred : ι → Prop)\n    [decidable_pred pred] :\n    ((s.subtype pred).weighted_vsub_of_point (fun i => p i) b fun i => w i) =\n      (s.filter pred).weighted_vsub_of_point p b w :=\n  by rw [weighted_vsub_of_point_apply, weighted_vsub_of_point_apply, ← sum_subtype_eq_sum_filter]\n#align weighted_vsub_of_point_subtype_eq_filter weighted_vsub_of_point_subtype_eq_filter\n\n",
 "weighted_vsub_of_point_sdiff_sub":
 "/-- A weighted sum may be split into a subtraction of such sums over two subsets. -/\ntheorem weighted_vsub_of_point_sdiff_sub [decidable_eq ι] {s₂ : Finset ι} (h : s₂ ⊆ s) (w : ι → k) (p : ι → P) (b : P) :\n    (s \\ s₂).weighted_vsub_of_point p b w - s₂.weighted_vsub_of_point p b (-w) = s.weighted_vsub_of_point p b w := by\n  rw [map_neg, sub_neg_eq_add, s.weighted_vsub_of_point_sdiff h]\n#align weighted_vsub_of_point_sdiff_sub weighted_vsub_of_point_sdiff_sub\n\n",
 "weighted_vsub_of_point_sdiff":
 "/-- A weighted sum may be split into such sums over two subsets. -/\ntheorem weighted_vsub_of_point_sdiff [decidable_eq ι] {s₂ : Finset ι} (h : s₂ ⊆ s) (w : ι → k) (p : ι → P) (b : P) :\n    (s \\ s₂).weighted_vsub_of_point p b w + s₂.weighted_vsub_of_point p b w = s.weighted_vsub_of_point p b w := by\n  simp_rw [weighted_vsub_of_point_apply, sum_sdiff h]\n#align weighted_vsub_of_point_sdiff weighted_vsub_of_point_sdiff\n\n",
 "weighted_vsub_of_point_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪ » -/\n/-- A weighted sum, over the image of an embedding, equals a weighted\nsum with the same points and weights over the original\n`finset`. -/\ntheorem weighted_vsub_of_point_map (e : «expr ↪ » ι₂ ι) (w : ι → k) (p : ι → P) (b : P) :\n    (s₂.map e).weighted_vsub_of_point p b w = s₂.weighted_vsub_of_point (p ∘ e) b (w ∘ e) :=\n  by\n  simp_rw [weighted_vsub_of_point_apply]\n  exact finset.sum_map _ _ _\n#align weighted_vsub_of_point_map weighted_vsub_of_point_map\n\n",
 "weighted_vsub_of_point_insert":
 "/-- The weighted sum is unaffected by adding the base point, whether\nor not present, to the set of points. -/\n@[simp]\ntheorem weighted_vsub_of_point_insert [decidable_eq ι] (w : ι → k) (p : ι → P) (i : ι) :\n    (insert i s).weighted_vsub_of_point p (p i) w = s.weighted_vsub_of_point p (p i) w :=\n  by\n  rw [weighted_vsub_of_point_apply, weighted_vsub_of_point_apply]\n  apply sum_insert_zero\n  rw [vsub_self, smul_zero]\n#align weighted_vsub_of_point_insert weighted_vsub_of_point_insert\n\n",
 "weighted_vsub_of_point_indicator_subset":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- The weighted sum is unaffected by changing the weights to the\ncorresponding indicator function and adding points to the set. -/\ntheorem weighted_vsub_of_point_indicator_subset (w : ι → k) (p : ι → P) (b : P) {s₁ s₂ : Finset ι} (h : s₁ ⊆ s₂) :\n    s₁.weighted_vsub_of_point p b w = s₂.weighted_vsub_of_point p b (set.indicator (↑s₁) w) :=\n  by\n  rw [weighted_vsub_of_point_apply, weighted_vsub_of_point_apply]\n  exact\n    set.sum_indicator_subset_of_eq_zero w (fun i wi => «expr • » wi («expr -ᵥ » (p i) b : V)) h fun i => zero_smul k _\n#align weighted_vsub_of_point_indicator_subset weighted_vsub_of_point_indicator_subset\n\n",
 "weighted_vsub_of_point_filter_of_ne":
 "/-- A weighted sum over `s.filter pred` equals one over `s` if all the weights at indices in `s`\nnot satisfying `pred` are zero. -/\ntheorem weighted_vsub_of_point_filter_of_ne (w : ι → k) (p : ι → P) (b : P) {pred : ι → Prop} [decidable_pred pred]\n    (h : ∀ i ∈ s, w i ≠ 0 → pred i) : (s.filter pred).weighted_vsub_of_point p b w = s.weighted_vsub_of_point p b w :=\n  by\n  rw [weighted_vsub_of_point_apply, weighted_vsub_of_point_apply, sum_filter_of_ne]\n  intro i hi hne\n  refine' h i hi _\n  intro hw\n  simpa [hw] using hne\n#align weighted_vsub_of_point_filter_of_ne weighted_vsub_of_point_filter_of_ne\n\n",
 "weighted_vsub_of_point_erase":
 "/-- The weighted sum is unaffected by removing the base point, if\npresent, from the set of points. -/\n@[simp]\ntheorem weighted_vsub_of_point_erase [decidable_eq ι] (w : ι → k) (p : ι → P) (i : ι) :\n    (s.erase i).weighted_vsub_of_point p (p i) w = s.weighted_vsub_of_point p (p i) w :=\n  by\n  rw [weighted_vsub_of_point_apply, weighted_vsub_of_point_apply]\n  apply sum_erase\n  rw [vsub_self, smul_zero]\n#align weighted_vsub_of_point_erase weighted_vsub_of_point_erase\n\n",
 "weighted_vsub_of_point_eq_of_weights_eq":
 "/-- Given a family of points, if we use a member of the family as a base point, the\n`weighted_vsub_of_point` does not depend on the value of the weights at this point. -/\ntheorem weighted_vsub_of_point_eq_of_weights_eq (p : ι → P) (j : ι) (w₁ w₂ : ι → k) (hw : ∀ i, i ≠ j → w₁ i = w₂ i) :\n    s.weighted_vsub_of_point p (p j) w₁ = s.weighted_vsub_of_point p (p j) w₂ :=\n  by\n  simp only [finset.weighted_vsub_of_point_apply]\n  congr\n  ext i\n  cases' eq_or_ne i j with h h\n  · simp [h]\n  · simp [hw i h]\n#align weighted_vsub_of_point_eq_of_weights_eq weighted_vsub_of_point_eq_of_weights_eq\n\n",
 "weighted_vsub_of_point_eq_of_sum_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The weighted sum is independent of the base point when the sum of\nthe weights is 0. -/\ntheorem weighted_vsub_of_point_eq_of_sum_eq_zero (w : ι → k) (p : ι → P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 0)\n    (b₁ b₂ : P) : s.weighted_vsub_of_point p b₁ w = s.weighted_vsub_of_point p b₂ w :=\n  by\n  apply eq_of_sub_eq_zero\n  rw [weighted_vsub_of_point_apply, weighted_vsub_of_point_apply, ← sum_sub_distrib]\n  conv_lhs =>\n    congr\n    skip\n    ext\n    rw [← smul_sub, vsub_sub_vsub_cancel_left]\n  rw [← sum_smul, h, zero_smul]\n#align weighted_vsub_of_point_eq_of_sum_eq_zero weighted_vsub_of_point_eq_of_sum_eq_zero\n\n",
 "weighted_vsub_of_point_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- A constant multiplier of the weights in `weighted_vsub_of_point` may be moved outside the\nsum. -/\ntheorem weighted_vsub_of_point_const_smul (w : ι → k) (p : ι → P) (b : P) (c : k) :\n    s.weighted_vsub_of_point p b («expr • » c w) = «expr • » c (s.weighted_vsub_of_point p b w) := by\n  simp_rw [weighted_vsub_of_point_apply, smul_sum, pi.smul_apply, smul_smul, smul_eq_mul]\n#align weighted_vsub_of_point_const_smul weighted_vsub_of_point_const_smul\n\n",
 "weighted_vsub_of_point_congr":
 "/-- `weighted_vsub_of_point` gives equal results for two families of weights and two families of\npoints that are equal on `s`. -/\ntheorem weighted_vsub_of_point_congr {w₁ w₂ : ι → k} (hw : ∀ i ∈ s, w₁ i = w₂ i) {p₁ p₂ : ι → P}\n    (hp : ∀ i ∈ s, p₁ i = p₂ i) (b : P) : s.weighted_vsub_of_point p₁ b w₁ = s.weighted_vsub_of_point p₂ b w₂ :=\n  by\n  simp_rw [weighted_vsub_of_point_apply]\n  convert sum_congr rfl fun i hi => _\n  rw [hw i hi, hp i hi]\n#align weighted_vsub_of_point_congr weighted_vsub_of_point_congr\n\n",
 "weighted_vsub_of_point_apply_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- The value of `weighted_vsub_of_point`, where the given points are equal. -/\n@[simp]\ntheorem weighted_vsub_of_point_apply_const (w : ι → k) (p : P) (b : P) :\n    s.weighted_vsub_of_point (fun _ => p) b w =\n      «expr • »\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i))\n        («expr -ᵥ » p b) :=\n  by rw [weighted_vsub_of_point_apply, sum_smul]\n#align weighted_vsub_of_point_apply_const weighted_vsub_of_point_apply_const\n\n",
 "weighted_vsub_of_point_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem weighted_vsub_of_point_apply (w : ι → k) (p : ι → P) (b : P) :\n    s.weighted_vsub_of_point p b w =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » (p i) b)) :=\n  by simp [weighted_vsub_of_point, linear_map.sum_apply]\n#align weighted_vsub_of_point_apply weighted_vsub_of_point_apply\n\n",
 "weighted_vsub_mem_vector_span":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- A `weighted_vsub` with sum of weights 0 is in the `vector_span` of\nan indexed family. -/\ntheorem weighted_vsub_mem_vector_span {s : Finset ι} {w : ι → k}\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 0)\n    (p : ι → P) : s.weighted_vsub p w ∈ vector_span k (Set.range p) := by\n  classical\n    rcases isEmpty_or_nonempty ι with (hι | ⟨⟨i0⟩⟩)\n    · skip\n      simp [Finset.eq_empty_of_isEmpty s]\n    · rw [vector_span_range_eq_span_range_vsub_right k p i0, ← Set.image_univ, finsupp.mem_span_image_iff_total,\n        finset.weighted_vsub_eq_weighted_vsub_of_point_of_sum_eq_zero s w p h (p i0),\n        finset.weighted_vsub_of_point_apply]\n      let w' := set.indicator (↑s) w\n      have hwx : ∀ i, w' i ≠ 0 → i ∈ s := fun i => set.mem_of_indicator_ne_zero\n      use finsupp.on_finset s w' hwx, Set.subset_univ _\n      rw [finsupp.total_apply, finsupp.on_finset_sum hwx]\n      · apply finset.sum_congr rfl\n        intro i hi\n        simp [w', set.indicator_apply, if_pos hi]\n      · exact fun _ => zero_smul k _\n#align weighted_vsub_mem_vector_span weighted_vsub_mem_vector_span\n\n",
 "weighted_vsub_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪ » -/\n/-- A weighted subtraction, over the image of an embedding, equals a\nweighted subtraction with the same points and weights over the\noriginal `finset`. -/\ntheorem weighted_vsub_map (e : «expr ↪ » ι₂ ι) (w : ι → k) (p : ι → P) :\n    (s₂.map e).weighted_vsub p w = s₂.weighted_vsub (p ∘ e) (w ∘ e) :=\n  s₂.weighted_vsub_of_point_map _ _ _ _\n#align weighted_vsub_map weighted_vsub_map\n\n",
 "weighted_vsub_indicator_subset":
 "/-- The weighted sum is unaffected by changing the weights to the\ncorresponding indicator function and adding points to the set. -/\ntheorem weighted_vsub_indicator_subset (w : ι → k) (p : ι → P) {s₁ s₂ : Finset ι} (h : s₁ ⊆ s₂) :\n    s₁.weighted_vsub p w = s₂.weighted_vsub p (set.indicator (↑s₁) w) :=\n  weighted_vsub_of_point_indicator_subset _ _ _ h\n#align weighted_vsub_indicator_subset weighted_vsub_indicator_subset\n\n",
 "weighted_vsub_filter_of_ne":
 "/-- A weighted sum over `s.filter pred` equals one over `s` if all the weights at indices in `s`\nnot satisfying `pred` are zero. -/\ntheorem weighted_vsub_filter_of_ne (w : ι → k) (p : ι → P) {pred : ι → Prop} [decidable_pred pred]\n    (h : ∀ i ∈ s, w i ≠ 0 → pred i) : (s.filter pred).weighted_vsub p w = s.weighted_vsub p w :=\n  s.weighted_vsub_of_point_filter_of_ne _ _ _ h\n#align weighted_vsub_filter_of_ne weighted_vsub_filter_of_ne\n\n",
 "weighted_vsub_eq_weighted_vsub_of_point_of_sum_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- `weighted_vsub` gives the sum of the results of subtracting any\nbase point, when the sum of the weights is 0. -/\ntheorem weighted_vsub_eq_weighted_vsub_of_point_of_sum_eq_zero (w : ι → k) (p : ι → P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 0)\n    (b : P) : s.weighted_vsub p w = s.weighted_vsub_of_point p b w :=\n  s.weighted_vsub_of_point_eq_of_sum_eq_zero w p h _ _\n#align weighted_vsub_eq_weighted_vsub_of_point_of_sum_eq_zero weighted_vsub_eq_weighted_vsub_of_point_of_sum_eq_zero\n\n",
 "weighted_vsub_eq_linear_combination":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Viewing a module as an affine space modelled on itself, a `weighted_vsub` is just a linear\ncombination. -/\n@[simp]\ntheorem weighted_vsub_eq_linear_combination {ι} (s : Finset ι) {w : ι → k} {p : ι → V} (hw : s.sum w = 0) :\n    s.weighted_vsub p w =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) (p i)) :=\n  by simp [s.weighted_vsub_apply, vsub_eq_sub, smul_sub, ← finset.sum_smul, hw]\n#align weighted_vsub_eq_linear_combination weighted_vsub_eq_linear_combination\n\n",
 "weighted_vsub_empty":
 "/-- The `weighted_vsub` for an empty set is 0. -/\n@[simp]\ntheorem weighted_vsub_empty (w : ι → k) (p : ι → P) : (∅ : Finset ι).weighted_vsub p w = (0 : V) := by\n  simp [weighted_vsub_apply]\n#align weighted_vsub_empty weighted_vsub_empty\n\n",
 "weighted_vsub_const_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- A constant multiplier of the weights in `weighted_vsub_of` may be moved outside the sum. -/\ntheorem weighted_vsub_const_smul (w : ι → k) (p : ι → P) (c : k) :\n    s.weighted_vsub p («expr • » c w) = «expr • » c (s.weighted_vsub p w) :=\n  s.weighted_vsub_of_point_const_smul _ _ _ _\n#align weighted_vsub_const_smul weighted_vsub_const_smul\n\n",
 "weighted_vsub_congr":
 "/-- `weighted_vsub` gives equal results for two families of weights and two families of points\nthat are equal on `s`. -/\ntheorem weighted_vsub_congr {w₁ w₂ : ι → k} (hw : ∀ i ∈ s, w₁ i = w₂ i) {p₁ p₂ : ι → P} (hp : ∀ i ∈ s, p₁ i = p₂ i) :\n    s.weighted_vsub p₁ w₁ = s.weighted_vsub p₂ w₂ :=\n  s.weighted_vsub_of_point_congr hw hp _\n#align weighted_vsub_congr weighted_vsub_congr\n\n",
 "weighted_vsub_apply_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The value of `weighted_vsub`, where the given points are equal and the sum of the weights\nis 0. -/\n@[simp]\ntheorem weighted_vsub_apply_const (w : ι → k) (p : P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 0) :\n    s.weighted_vsub (fun _ => p) w = 0 := by rw [weighted_vsub, weighted_vsub_of_point_apply_const, h, zero_smul]\n#align weighted_vsub_apply_const weighted_vsub_apply_const\n\n",
 "weighted_vsub_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Applying `weighted_vsub` with given weights.  This is for the case\nwhere a result involving a default base point is OK (for example, when\nthat base point will cancel out later); a more typical use case for\n`weighted_vsub` would involve selecting a preferred base point with\n`weighted_vsub_eq_weighted_vsub_of_point_of_sum_eq_zero` and then\nusing `weighted_vsub_of_point_apply`. -/\ntheorem weighted_vsub_apply (w : ι → k) (p : ι → P) :\n    s.weighted_vsub p w =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » (p i) (classical.choice S.nonempty))) :=\n  by simp [weighted_vsub, linear_map.sum_apply]\n#align weighted_vsub_apply weighted_vsub_apply\n\n",
 "univ_fin2":
 "/-\nCopyright (c) 2020 Joseph Myers. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Joseph Myers\n-/\ntheorem univ_fin2 : (univ : Finset (fin 2)) = {0, 1} := by\n  ext x\n  fin_cases x <;> simp\n#align univ_fin2 univ_fin2\n\n",
 "sum_weighted_vsub_vsub_weights":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n@[simp]\ntheorem sum_weighted_vsub_vsub_weights [decidable_eq ι] {i j : ι} (hi : i ∈ s) (hj : j ∈ s) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (weighted_vsub_vsub_weights k i j t) =\n      0 :=\n  by\n  simp_rw [weighted_vsub_vsub_weights, pi.sub_apply, sum_sub_distrib]\n  simp [hi, hj]\n#align sum_weighted_vsub_vsub_weights sum_weighted_vsub_vsub_weights\n\n",
 "sum_smul_vsub_eq_weighted_vsub_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum of pairwise subtractions, expressed as a subtraction of two `weighted_vsub`\nexpressions. -/\ntheorem sum_smul_vsub_eq_weighted_vsub_sub (w : ι → k) (p₁ p₂ : ι → P) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » (p₁ i) (p₂ i))) =\n      s.weighted_vsub p₁ w - s.weighted_vsub p₂ w :=\n  s.sum_smul_vsub_eq_weighted_vsub_of_point_sub _ _ _ _\n#align sum_smul_vsub_eq_weighted_vsub_sub sum_smul_vsub_eq_weighted_vsub_sub\n\n",
 "sum_smul_vsub_eq_weighted_vsub_of_point_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum of pairwise subtractions, expressed as a subtraction of two\n`weighted_vsub_of_point` expressions. -/\ntheorem sum_smul_vsub_eq_weighted_vsub_of_point_sub (w : ι → k) (p₁ p₂ : ι → P) (b : P) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » (p₁ i) (p₂ i))) =\n      s.weighted_vsub_of_point p₁ b w - s.weighted_vsub_of_point p₂ b w :=\n  by simp_rw [weighted_vsub_of_point_apply, ← sum_sub_distrib, ← smul_sub, vsub_sub_vsub_cancel_right]\n#align sum_smul_vsub_eq_weighted_vsub_of_point_sub sum_smul_vsub_eq_weighted_vsub_of_point_sub\n\n",
 "sum_smul_vsub_eq_affine_combination_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum of pairwise subtractions, expressed as a subtraction of two `affine_combination`\nexpressions. -/\ntheorem sum_smul_vsub_eq_affine_combination_vsub (w : ι → k) (p₁ p₂ : ι → P) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » (p₁ i) (p₂ i))) =\n      «expr -ᵥ » (s.affine_combination p₁ w) (s.affine_combination p₂ w) :=\n  by\n  simp_rw [affine_combination_apply, vadd_vsub_vadd_cancel_right]\n  exact s.sum_smul_vsub_eq_weighted_vsub_of_point_sub _ _ _ _\n#align sum_smul_vsub_eq_affine_combination_vsub sum_smul_vsub_eq_affine_combination_vsub\n\n",
 "sum_smul_vsub_const_eq_weighted_vsub_of_point_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum of pairwise subtractions, where the point on the right is constant,\nexpressed as a subtraction involving a `weighted_vsub_of_point` expression. -/\ntheorem sum_smul_vsub_const_eq_weighted_vsub_of_point_sub (w : ι → k) (p₁ : ι → P) (p₂ b : P) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » (p₁ i) p₂)) =\n      s.weighted_vsub_of_point p₁ b w -\n        «expr • »\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i))\n          («expr -ᵥ » p₂ b) :=\n  by rw [sum_smul_vsub_eq_weighted_vsub_of_point_sub, weighted_vsub_of_point_apply_const]\n#align sum_smul_vsub_const_eq_weighted_vsub_of_point_sub sum_smul_vsub_const_eq_weighted_vsub_of_point_sub\n\n",
 "sum_smul_vsub_const_eq_weighted_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum of pairwise subtractions, where the point on the right is constant and the\nsum of the weights is 0. -/\ntheorem sum_smul_vsub_const_eq_weighted_vsub (w : ι → k) (p₁ : ι → P) (p₂ : P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 0) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » (p₁ i) p₂)) =\n      s.weighted_vsub p₁ w :=\n  by rw [sum_smul_vsub_eq_weighted_vsub_sub, s.weighted_vsub_apply_const _ _ h, sub_zero]\n#align sum_smul_vsub_const_eq_weighted_vsub sum_smul_vsub_const_eq_weighted_vsub\n\n",
 "sum_smul_vsub_const_eq_affine_combination_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum of pairwise subtractions, where the point on the right is constant and the\nsum of the weights is 1. -/\ntheorem sum_smul_vsub_const_eq_affine_combination_vsub (w : ι → k) (p₁ : ι → P) (p₂ : P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » (p₁ i) p₂)) =\n      «expr -ᵥ » (s.affine_combination p₁ w) p₂ :=\n  by rw [sum_smul_vsub_eq_affine_combination_vsub, affine_combination_apply_const _ _ _ h]\n#align sum_smul_vsub_const_eq_affine_combination_vsub sum_smul_vsub_const_eq_affine_combination_vsub\n\n",
 "sum_smul_const_vsub_eq_vsub_affine_combination":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum of pairwise subtractions, where the point on the left is constant and the\nsum of the weights is 1. -/\ntheorem sum_smul_const_vsub_eq_vsub_affine_combination (w : ι → k) (p₂ : ι → P) (p₁ : P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » p₁ (p₂ i))) =\n      «expr -ᵥ » p₁ (s.affine_combination p₂ w) :=\n  by rw [sum_smul_vsub_eq_affine_combination_vsub, affine_combination_apply_const _ _ _ h]\n#align sum_smul_const_vsub_eq_vsub_affine_combination sum_smul_const_vsub_eq_vsub_affine_combination\n\n",
 "sum_smul_const_vsub_eq_sub_weighted_vsub_of_point":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum of pairwise subtractions, where the point on the left is constant,\nexpressed as a subtraction involving a `weighted_vsub_of_point` expression. -/\ntheorem sum_smul_const_vsub_eq_sub_weighted_vsub_of_point (w : ι → k) (p₂ : ι → P) (p₁ b : P) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » p₁ (p₂ i))) =\n      «expr • »\n          (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i))\n          («expr -ᵥ » p₁ b) -\n        s.weighted_vsub_of_point p₂ b w :=\n  by rw [sum_smul_vsub_eq_weighted_vsub_of_point_sub, weighted_vsub_of_point_apply_const]\n#align sum_smul_const_vsub_eq_sub_weighted_vsub_of_point sum_smul_const_vsub_eq_sub_weighted_vsub_of_point\n\n",
 "sum_smul_const_vsub_eq_neg_weighted_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum of pairwise subtractions, where the point on the left is constant and the\nsum of the weights is 0. -/\ntheorem sum_smul_const_vsub_eq_neg_weighted_vsub (w : ι → k) (p₂ : ι → P) (p₁ : P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 0) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) («expr -ᵥ » p₁ (p₂ i))) =\n      -s.weighted_vsub p₂ w :=\n  by rw [sum_smul_vsub_eq_weighted_vsub_sub, s.weighted_vsub_apply_const _ _ h, zero_sub]\n#align sum_smul_const_vsub_eq_neg_weighted_vsub sum_smul_const_vsub_eq_neg_weighted_vsub\n\n",
 "sum_centroid_weights_indicator_eq_one_of_nonempty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/-- In the characteristic zero case, the weights in the centroid\nindexed by a `fintype` sum to 1 if the set is nonempty. -/\ntheorem sum_centroid_weights_indicator_eq_one_of_nonempty [CharZero k] [fintype ι] (h : s.nonempty) :\n    finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (s.centroid_weights_indicator k i) =\n      1 :=\n  by\n  rw [sum_centroid_weights_indicator]\n  exact s.sum_centroid_weights_eq_one_of_nonempty k h\n#align sum_centroid_weights_indicator_eq_one_of_nonempty sum_centroid_weights_indicator_eq_one_of_nonempty\n\n",
 "sum_centroid_weights_indicator_eq_one_of_card_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/-- In the characteristic zero case, the weights in the centroid\nindexed by a `fintype` sum to 1 if the number of points is not\nzero. -/\ntheorem sum_centroid_weights_indicator_eq_one_of_card_ne_zero [CharZero k] [fintype ι] (h : card s ≠ 0) :\n    finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (s.centroid_weights_indicator k i) =\n      1 :=\n  by\n  rw [sum_centroid_weights_indicator]\n  exact s.sum_centroid_weights_eq_one_of_card_ne_zero k h\n#align sum_centroid_weights_indicator_eq_one_of_card_ne_zero sum_centroid_weights_indicator_eq_one_of_card_ne_zero\n\n",
 "sum_centroid_weights_indicator_eq_one_of_card_eq_add_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/-- In the characteristic zero case, the weights in the centroid\nindexed by a `fintype` sum to 1 if the number of points is `n + 1`. -/\ntheorem sum_centroid_weights_indicator_eq_one_of_card_eq_add_one [CharZero k] [fintype ι] {n : ℕ} (h : card s = n + 1) :\n    finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (s.centroid_weights_indicator k i) =\n      1 :=\n  by\n  rw [sum_centroid_weights_indicator]\n  exact s.sum_centroid_weights_eq_one_of_card_eq_add_one k h\n#align sum_centroid_weights_indicator_eq_one_of_card_eq_add_one sum_centroid_weights_indicator_eq_one_of_card_eq_add_one\n\n",
 "sum_centroid_weights_indicator":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The sum of the weights for the centroid indexed by a `fintype`. -/\ntheorem sum_centroid_weights_indicator [fintype ι] :\n    finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (s.centroid_weights_indicator k i) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (s.centroid_weights k i) :=\n  (set.sum_indicator_subset _ (subset_univ _)).symm\n#align sum_centroid_weights_indicator sum_centroid_weights_indicator\n\n",
 "sum_centroid_weights_eq_one_of_nonempty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- In the characteristic zero case, the weights in the centroid sum\nto 1 if the set is nonempty. -/\ntheorem sum_centroid_weights_eq_one_of_nonempty [CharZero k] (h : s.nonempty) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (s.centroid_weights k i) =\n      1 :=\n  s.sum_centroid_weights_eq_one_of_card_ne_zero k (ne_of_gt (card_pos.2 h))\n#align sum_centroid_weights_eq_one_of_nonempty sum_centroid_weights_eq_one_of_nonempty\n\n",
 "sum_centroid_weights_eq_one_of_cast_card_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The weights in the centroid sum to 1, if the number of points,\nconverted to `k`, is not zero. -/\ntheorem sum_centroid_weights_eq_one_of_cast_card_ne_zero (h : (card s : k) ≠ 0) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (s.centroid_weights k i) =\n      1 :=\n  by simp [h]\n#align sum_centroid_weights_eq_one_of_cast_card_ne_zero sum_centroid_weights_eq_one_of_cast_card_ne_zero\n\n",
 "sum_centroid_weights_eq_one_of_card_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- In the characteristic zero case, the weights in the centroid sum\nto 1 if the number of points is not zero. -/\ntheorem sum_centroid_weights_eq_one_of_card_ne_zero [CharZero k] (h : card s ≠ 0) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (s.centroid_weights k i) =\n      1 :=\n  by simp [h]\n#align sum_centroid_weights_eq_one_of_card_ne_zero sum_centroid_weights_eq_one_of_card_ne_zero\n\n",
 "sum_centroid_weights_eq_one_of_card_eq_add_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- In the characteristic zero case, the weights in the centroid sum\nto 1 if the number of points is `n + 1`. -/\ntheorem sum_centroid_weights_eq_one_of_card_eq_add_one [CharZero k] {n : ℕ} (h : card s = n + 1) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (s.centroid_weights k i) =\n      1 :=\n  s.sum_centroid_weights_eq_one_of_card_ne_zero k (h.symm ▸ nat.succ_ne_zero n)\n#align sum_centroid_weights_eq_one_of_card_eq_add_one sum_centroid_weights_eq_one_of_card_eq_add_one\n\n",
 "sum_affine_combination_single_weights":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n@[simp]\ntheorem sum_affine_combination_single_weights [decidable_eq ι] {i : ι} (h : i ∈ s) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (affine_combination_single_weights k i j) =\n      1 :=\n  by\n  rw [← affine_combination_single_weights_apply_self k i]\n  exact sum_eq_single_of_mem i h fun j _ hj => affine_combination_single_weights_apply_of_ne k hj\n#align sum_affine_combination_single_weights sum_affine_combination_single_weights\n\n",
 "sum_affine_combination_line_map_weights":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n@[simp]\ntheorem sum_affine_combination_line_map_weights [decidable_eq ι] {i j : ι} (hi : i ∈ s) (hj : j ∈ s) (c : k) :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        (affine_combination_line_map_weights i j c t) =\n      1 :=\n  by\n  simp_rw [affine_combination_line_map_weights, pi.add_apply, sum_add_distrib]\n  simp [hi, hj, ← mul_sum]\n#align sum_affine_combination_line_map_weights sum_affine_combination_line_map_weights\n\n",
 "mem_vector_span_iff_eq_weighted_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- A vector is in the `vector_span` of an indexed family if and only\nif it is a `weighted_vsub` with sum of weights 0. -/\ntheorem mem_vector_span_iff_eq_weighted_vsub {v : V} {p : ι → P} :\n    v ∈ vector_span k (Set.range p) ↔\n      ∃ (s : Finset ι)(w : ι → k)(h :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 0),\n        v = s.weighted_vsub p w :=\n  by\n  classical\n    constructor\n    · rcases isEmpty_or_nonempty ι with (hι | ⟨⟨i0⟩⟩)\n      swap\n      · rw [vector_span_range_eq_span_range_vsub_right k p i0, ← Set.image_univ, finsupp.mem_span_image_iff_total]\n        rintro ⟨l, hl, hv⟩\n        use insert i0 l.support\n        set w :=\n          (l : ι → k) -\n            function.update (function.const ι 0 : ι → k) i0\n              (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" l.support\n                (l i)) with\n          hwdef\n        use w\n        have hw :\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\"\n              (insert i0 l.support) (w i) =\n            0 :=\n          by\n          rw [hwdef]\n          simp_rw [pi.sub_apply, finset.sum_sub_distrib, finset.sum_update_of_mem (Finset.mem_insert_self _ _),\n            finset.sum_const_zero, finset.sum_insert_of_eq_zero_if_not_mem finsupp.not_mem_support_iff.1, add_zero,\n            sub_self]\n        use hw\n        have hz : «expr • » (w i0) («expr -ᵥ » (p i0) (p i0) : V) = 0 := (vsub_self (p i0)).symm ▸ smul_zero _\n        change (fun i => «expr • » (w i) («expr -ᵥ » (p i) (p i0) : V)) i0 = 0 at hz\n        rw [finset.weighted_vsub_eq_weighted_vsub_of_point_of_sum_eq_zero _ w p hw (p i0),\n          finset.weighted_vsub_of_point_apply, ← hv, finsupp.total_apply, finset.sum_insert_zero hz]\n        change\n          finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" l.support\n              («expr • » (l i) _) =\n            _\n        congr with i\n        by_cases h : i = i0\n        · simp [h]\n        · simp [hwdef, h]\n      · skip\n        rw [Set.range_eq_empty, vector_span_empty, submodule.mem_bot]\n        rintro rfl\n        use ∅\n        simp\n    · rintro ⟨s, w, hw, rfl⟩\n      exact weighted_vsub_mem_vector_span hw p\n#align mem_vector_span_iff_eq_weighted_vsub mem_vector_span_iff_eq_weighted_vsub\n\n",
 "mem_affine_span_iff_eq_weighted_vsub_of_point_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- Given a family of points together with a chosen base point in that family, membership of the\naffine span of this family corresponds to an identity in terms of `weighted_vsub_of_point`, with\nweights that are not required to sum to 1. -/\ntheorem mem_affine_span_iff_eq_weighted_vsub_of_point_vadd [nontrivial k] (p : ι → P) (j : ι) (q : P) :\n    q ∈ affine_span k (Set.range p) ↔\n      ∃ (s : Finset ι)(w : ι → k), q = «expr +ᵥ » (s.weighted_vsub_of_point p (p j) w) (p j) :=\n  by\n  constructor\n  · intro hq\n    obtain ⟨s, w, hw, rfl⟩ := eq_affine_combination_of_mem_affine_span hq\n    exact ⟨s, w, s.affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one w p hw (p j)⟩\n  · rintro ⟨s, w, rfl⟩\n    classical\n      let w' : ι → k := function.update w j (1 - (s \\ {j}).sum w)\n      have h₁ : (insert j s).sum w' = 1 := by\n        by_cases hj : j ∈ s\n        · simp [finset.sum_update_of_mem hj, Finset.insert_eq_of_mem hj]\n        · simp [w', finset.sum_insert hj, finset.sum_update_of_not_mem hj, hj]\n      have hww : ∀ i, i ≠ j → w i = w' i := by\n        intro i hij\n        simp [w', hij]\n      rw [s.weighted_vsub_of_point_eq_of_weights_eq p j w w' hww, ← s.weighted_vsub_of_point_insert w' p j, ←\n        (insert j s).affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one w' p h₁ (p j)]\n      exact affine_combination_mem_affine_span h₁ p\n#align mem_affine_span_iff_eq_weighted_vsub_of_point_vadd mem_affine_span_iff_eq_weighted_vsub_of_point_vadd\n\n",
 "mem_affine_span_iff_eq_affine_combination":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- A point is in the `affine_span` of an indexed family if and only\nif it is an `affine_combination` with sum of weights 1, provided the\nunderlying ring is nontrivial. -/\ntheorem mem_affine_span_iff_eq_affine_combination [nontrivial k] {p1 : P} {p : ι → P} :\n    p1 ∈ affine_span k (Set.range p) ↔\n      ∃ (s : Finset ι)(w : ι → k)(hw :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1),\n        p1 = s.affine_combination p w :=\n  by\n  constructor\n  · exact eq_affine_combination_of_mem_affine_span\n  · rintro ⟨s, w, hw, rfl⟩\n    exact affine_combination_mem_affine_span hw p\n#align mem_affine_span_iff_eq_affine_combination mem_affine_span_iff_eq_affine_combination\n\n",
 "map_affine_combination":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_torsor -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_torsor -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_torsor -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/-- Affine maps commute with affine combinations. -/\ntheorem map_affine_combination {V₂ P₂ : Type _} [add_comm_group V₂] [Module k V₂] [(add_torsor) V₂ P₂] (p : ι → P)\n    (w : ι → k) (hw : s.sum w = 1) (f : «expr →ᵃ[ ] » P k P₂) :\n    f (s.affine_combination p w) = s.affine_combination (f ∘ p) w :=\n  by\n  have b := classical.choice (infer_instance : (add_torsor) V P).nonempty\n  have b₂ := classical.choice (infer_instance : (add_torsor) V₂ P₂).nonempty\n  rw [s.affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one w p hw b,\n    s.affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one w (f ∘ p) hw b₂, ←\n    s.weighted_vsub_of_point_vadd_eq_of_sum_eq_one w (f ∘ p) hw (f b) b₂]\n  simp only [weighted_vsub_of_point_apply, RingHom.id_apply, affine_map.map_vadd, linear_map.map_smulₛₗ,\n    affine_map.linear_map_vsub, linear_map.map_sum]\n#align map_affine_combination map_affine_combination\n\n",
 "eq_weighted_vsub_subset_iff_eq_weighted_vsub_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- Suppose an indexed family of points is given, along with a subset\nof the index type.  A vector can be expressed as `weighted_vsub` using\na `finset` lying within that subset and with sum of weights 0 if and\nonly if it can be expressed as `weighted_vsub` with sum of weights 0\nfor the corresponding indexed family whose index type is the subtype\ncorresponding to that subset. -/\ntheorem eq_weighted_vsub_subset_iff_eq_weighted_vsub_subtype {v : V} {s : set ι} {p : ι → P} :\n    (∃ (fs : Finset ι)(hfs : ↑fs ⊆ s)(w : ι → k)(hw :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" fs (w i) = 0),\n        v = fs.weighted_vsub p w) ↔\n      ∃ (fs : Finset s)(w : s → k)(hw :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" fs (w i) = 0),\n        v = fs.weighted_vsub (fun i : s => p i) w :=\n  eq_weighted_vsub_of_point_subset_iff_eq_weighted_vsub_of_point_subtype\n#align eq_weighted_vsub_subset_iff_eq_weighted_vsub_subtype eq_weighted_vsub_subset_iff_eq_weighted_vsub_subtype\n\n",
 "eq_weighted_vsub_of_point_subset_iff_eq_weighted_vsub_of_point_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- Suppose an indexed family of points is given, along with a subset\nof the index type.  A vector can be expressed as\n`weighted_vsub_of_point` using a `finset` lying within that subset and\nwith a given sum of weights if and only if it can be expressed as\n`weighted_vsub_of_point` with that sum of weights for the\ncorresponding indexed family whose index type is the subtype\ncorresponding to that subset. -/\ntheorem eq_weighted_vsub_of_point_subset_iff_eq_weighted_vsub_of_point_subtype {v : V} {x : k} {s : set ι} {p : ι → P}\n    {b : P} :\n    (∃ (fs : Finset ι)(hfs : ↑fs ⊆ s)(w : ι → k)(hw :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" fs (w i) = x),\n        v = fs.weighted_vsub_of_point p b w) ↔\n      ∃ (fs : Finset s)(w : s → k)(hw :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" fs (w i) = x),\n        v = fs.weighted_vsub_of_point (fun i : s => p i) b w :=\n  by\n  classical\n    simp_rw [weighted_vsub_of_point_apply]\n    constructor\n    · rintro ⟨fs, hfs, w, rfl, rfl⟩\n      use fs.subtype s, fun i => w i, sum_subtype_of_mem _ hfs, (sum_subtype_of_mem _ hfs).symm\n    · rintro ⟨fs, w, rfl, rfl⟩\n      refine'\n          ⟨fs.map (Function.Embedding.subtype _), map_subtype_subset _, fun i => if h : i ∈ s then w ⟨i, h⟩ else 0, _,\n            _⟩ <;>\n        simp\n#align\n  eq_weighted_vsub_of_point_subset_iff_eq_weighted_vsub_of_point_subtype eq_weighted_vsub_of_point_subset_iff_eq_weighted_vsub_of_point_subtype\n\n",
 "eq_affine_combination_subset_iff_eq_affine_combination_subtype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- Suppose an indexed family of points is given, along with a subset\nof the index type.  A point can be expressed as an\n`affine_combination` using a `finset` lying within that subset and\nwith sum of weights 1 if and only if it can be expressed an\n`affine_combination` with sum of weights 1 for the corresponding\nindexed family whose index type is the subtype corresponding to that\nsubset. -/\ntheorem eq_affine_combination_subset_iff_eq_affine_combination_subtype {p0 : P} {s : set ι} {p : ι → P} :\n    (∃ (fs : Finset ι)(hfs : ↑fs ⊆ s)(w : ι → k)(hw :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" fs (w i) = 1),\n        p0 = fs.affine_combination p w) ↔\n      ∃ (fs : Finset s)(w : s → k)(hw :\n        finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" fs (w i) = 1),\n        p0 = fs.affine_combination (fun i : s => p i) w :=\n  by\n  simp_rw [affine_combination_apply, eq_vadd_iff_vsub_eq]\n  exact eq_weighted_vsub_of_point_subset_iff_eq_weighted_vsub_of_point_subtype\n#align\n  eq_affine_combination_subset_iff_eq_affine_combination_subtype eq_affine_combination_subset_iff_eq_affine_combination_subtype\n\n",
 "eq_affine_combination_of_mem_affine_span_of_fintype":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem eq_affine_combination_of_mem_affine_span_of_fintype [fintype ι] {p1 : P} {p : ι → P}\n    (h : p1 ∈ affine_span k (Set.range p)) :\n    ∃ (w : ι → k)(hw :\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\" (w i) =\n        1),\n      p1 = finset.univ.affine_combination p w :=\n  by\n  classical\n    obtain ⟨s, w, hw, rfl⟩ := eq_affine_combination_of_mem_affine_span h\n    refine' ⟨(s : set ι).indicator w, _, finset.affine_combination_indicator_subset w p s.subset_univ⟩\n    simp only [Finset.mem_coe, set.indicator_apply, ← hw]\n    rw [fintype.sum_extend_by_zero s w]\n#align eq_affine_combination_of_mem_affine_span_of_fintype eq_affine_combination_of_mem_affine_span_of_fintype\n\n",
 "eq_affine_combination_of_mem_affine_span":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- A point in the `affine_span` of an indexed family is an\n`affine_combination` with sum of weights 1. See also\n`eq_affine_combination_of_mem_affine_span_of_fintype`. -/\ntheorem eq_affine_combination_of_mem_affine_span {p1 : P} {p : ι → P} (h : p1 ∈ affine_span k (Set.range p)) :\n    ∃ (s : Finset ι)(w : ι → k)(hw :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1),\n      p1 = s.affine_combination p w :=\n  by\n  classical\n    have hn : (affine_span k (Set.range p) : set P).nonempty := ⟨p1, h⟩\n    rw [affine_span_nonempty, Set.range_nonempty_iff_nonempty] at hn\n    cases' hn with i0\n    have h0 : p i0 ∈ affine_span k (Set.range p) := mem_affine_span k (Set.mem_range_self i0)\n    have hd : «expr -ᵥ » p1 (p i0) ∈ (affine_span k (Set.range p)).direction := affine_subspace.vsub_mem_direction h h0\n    rw [direction_affine_span, mem_vector_span_iff_eq_weighted_vsub] at hd\n    rcases hd with ⟨s, w, h, hs⟩\n    let s' := insert i0 s\n    let w' := set.indicator (↑s) w\n    have h' :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s' (w' i) = 0 :=\n      by rw [← h, set.sum_indicator_subset _ (Finset.subset_insert i0 s)]\n    have hs' : s'.weighted_vsub p w' = «expr -ᵥ » p1 (p i0) :=\n      by\n      rw [hs]\n      exact (finset.weighted_vsub_indicator_subset _ _ (Finset.subset_insert i0 s)).symm\n    let w0 : ι → k := function.update (function.const ι 0) i0 1\n    have hw0 :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s' (w0 i) = 1 :=\n      by rw [finset.sum_update_of_mem (Finset.mem_insert_self _ _), finset.sum_const_zero, add_zero]\n    have hw0s : s'.affine_combination p w0 = p i0 :=\n      s'.affine_combination_of_eq_one_of_eq_zero w0 p (Finset.mem_insert_self _ _) (function.update_same _ _ _)\n        fun _ _ hne => function.update_noteq hne _ _\n    use s', w0 + w'\n    constructor\n    · simp [pi.add_apply, finset.sum_add_distrib, hw0, h']\n    · rw [add_comm, ← finset.weighted_vsub_vadd_affine_combination, hw0s, hs', vsub_vadd]\n#align eq_affine_combination_of_mem_affine_span eq_affine_combination_of_mem_affine_span\n\n",
 "centroid_weights_indicator_def":
 "/-- The definition of `centroid_weights_indicator`. -/\ntheorem centroid_weights_indicator_def : s.centroid_weights_indicator k = set.indicator (↑s) (s.centroid_weights k) :=\n  rfl\n#align centroid_weights_indicator_def centroid_weights_indicator_def\n\n",
 "centroid_weights_eq_const":
 "/-- `centroid_weights` equals a constant function. -/\ntheorem centroid_weights_eq_const : s.centroid_weights k = function.const ι (card s : k)⁻¹ :=\n  rfl\n#align centroid_weights_eq_const centroid_weights_eq_const\n\n",
 "centroid_weights_apply":
 "/-- `centroid_weights` at any point. -/\n@[simp]\ntheorem centroid_weights_apply (i : ι) : s.centroid_weights k i = (card s : k)⁻¹ :=\n  rfl\n#align centroid_weights_apply centroid_weights_apply\n\n",
 "centroid_univ":
 "theorem centroid_univ (s : Finset P) : univ.centroid k (coe : s → P) = s.centroid k id :=\n  by\n  rw [centroid, centroid, ← s.attach_affine_combination_coe]\n  congr\n  ext\n  simp\n#align centroid_univ centroid_univ\n\n",
 "centroid_singleton":
 "/-- The centroid of a single point. -/\n@[simp]\ntheorem centroid_singleton (p : ι → P) (i : ι) : ({i} : Finset ι).centroid k p = p i := by\n  simp [centroid_def, affine_combination_apply]\n#align centroid_singleton centroid_singleton\n\n",
 "centroid_pair_fin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- The centroid of two points indexed by `fin 2`, expressed directly\nas adding a vector to the first point. -/\ntheorem centroid_pair_fin [Invertible (2 : k)] (p : fin 2 → P) :\n    univ.centroid k p = «expr +ᵥ » («expr • » (2⁻¹ : k) («expr -ᵥ » (p 1) (p 0))) (p 0) :=\n  by\n  rw [univ_fin2]\n  convert centroid_pair k p 0 1\n#align centroid_pair_fin centroid_pair_fin\n\n",
 "centroid_pair":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- The centroid of two points, expressed directly as adding a vector\nto a point. -/\ntheorem centroid_pair [decidable_eq ι] [Invertible (2 : k)] (p : ι → P) (i₁ i₂ : ι) :\n    ({i₁, i₂} : Finset ι).centroid k p = «expr +ᵥ » («expr • » (2⁻¹ : k) («expr -ᵥ » (p i₂) (p i₁))) (p i₁) :=\n  by\n  by_cases h : i₁ = i₂\n  · simp [h]\n  · have hc : (card ({i₁, i₂} : Finset ι) : k) ≠ 0 :=\n      by\n      rw [card_insert_of_not_mem (not_mem_singleton.2 h), card_singleton]\n      norm_num\n      exact nonzero_of_invertible _\n    rw [centroid_def,\n      affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one _ _ _\n        (sum_centroid_weights_eq_one_of_cast_card_ne_zero _ hc) (p i₁)]\n    simp [h]\n#align centroid_pair centroid_pair\n\n",
 "centroid_mem_affine_span_of_nonempty":
 "/-- In the characteristic zero case, the centroid lies in the affine\nspan if the set is nonempty. -/\ntheorem centroid_mem_affine_span_of_nonempty [CharZero k] {s : Finset ι} (p : ι → P) (h : s.nonempty) :\n    s.centroid k p ∈ affine_span k (range p) :=\n  affine_combination_mem_affine_span (s.sum_centroid_weights_eq_one_of_nonempty k h) p\n#align centroid_mem_affine_span_of_nonempty centroid_mem_affine_span_of_nonempty\n\n",
 "centroid_mem_affine_span_of_cast_card_ne_zero":
 "/-- The centroid lies in the affine span if the number of points,\nconverted to `k`, is not zero. -/\ntheorem centroid_mem_affine_span_of_cast_card_ne_zero {s : Finset ι} (p : ι → P) (h : (card s : k) ≠ 0) :\n    s.centroid k p ∈ affine_span k (range p) :=\n  affine_combination_mem_affine_span (s.sum_centroid_weights_eq_one_of_cast_card_ne_zero h) p\n#align centroid_mem_affine_span_of_cast_card_ne_zero centroid_mem_affine_span_of_cast_card_ne_zero\n\n",
 "centroid_mem_affine_span_of_card_ne_zero":
 "/-- In the characteristic zero case, the centroid lies in the affine\nspan if the number of points is not zero. -/\ntheorem centroid_mem_affine_span_of_card_ne_zero [CharZero k] {s : Finset ι} (p : ι → P) (h : card s ≠ 0) :\n    s.centroid k p ∈ affine_span k (range p) :=\n  affine_combination_mem_affine_span (s.sum_centroid_weights_eq_one_of_card_ne_zero k h) p\n#align centroid_mem_affine_span_of_card_ne_zero centroid_mem_affine_span_of_card_ne_zero\n\n",
 "centroid_mem_affine_span_of_card_eq_add_one":
 "/-- In the characteristic zero case, the centroid lies in the affine\nspan if the number of points is `n + 1`. -/\ntheorem centroid_mem_affine_span_of_card_eq_add_one [CharZero k] {s : Finset ι} (p : ι → P) {n : ℕ}\n    (h : card s = n + 1) : s.centroid k p ∈ affine_span k (range p) :=\n  affine_combination_mem_affine_span (s.sum_centroid_weights_eq_one_of_card_eq_add_one k h) p\n#align centroid_mem_affine_span_of_card_eq_add_one centroid_mem_affine_span_of_card_eq_add_one\n\n",
 "centroid_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪ » -/\n/-- A centroid, over the image of an embedding, equals a centroid with\nthe same points and weights over the original `finset`. -/\ntheorem centroid_map (e : «expr ↪ » ι₂ ι) (p : ι → P) : (s₂.map e).centroid k p = s₂.centroid k (p ∘ e) := by\n  simp [centroid_def, affine_combination_map, centroid_weights]\n#align centroid_map centroid_map\n\n",
 "centroid_eq_of_inj_on_of_image_eq":
 "/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (i j «expr ∈ » s) -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (i j «expr ∈ » s₂) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/-- Two indexed families of points that are injective on the given\n`finset`s and with the same points in the image of those `finset`s\nhave the same centroid. -/\ntheorem centroid_eq_of_inj_on_of_image_eq {p : ι → P} (hi : ∀ (i) (_ : i ∈ s) (j) (_ : j ∈ s), p i = p j → i = j)\n    {p₂ : ι₂ → P} (hi₂ : ∀ (i) (_ : i ∈ s₂) (j) (_ : j ∈ s₂), p₂ i = p₂ j → i = j)\n    (he : «expr '' » p ↑s = «expr '' » p₂ ↑s₂) : s.centroid k p = s₂.centroid k p₂ := by\n  classical rw [s.centroid_eq_centroid_image_of_inj_on k hi rfl, s₂.centroid_eq_centroid_image_of_inj_on k hi₂ he]\n#align centroid_eq_of_inj_on_of_image_eq centroid_eq_of_inj_on_of_image_eq\n\n",
 "centroid_eq_centroid_image_of_inj_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪ » -/\n/- ./././Mathport/Syntax/Translate/Basic.lean:632:2: warning: expanding binder collection (i j «expr ∈ » s) -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/-- An indexed family of points that is injective on the given\n`finset` has the same centroid as the image of that `finset`.  This is\nstated in terms of a set equal to the image to provide control of\ndefinitional equality for the index type used for the centroid of the\nimage. -/\ntheorem centroid_eq_centroid_image_of_inj_on {p : ι → P} (hi : ∀ (i) (_ : i ∈ s) (j) (_ : j ∈ s), p i = p j → i = j)\n    {ps : set P} [fintype ps] (hps : ps = «expr '' » p ↑s) :\n    s.centroid k p = (univ : Finset ps).centroid k fun x => x :=\n  by\n  let f : «expr '' » p ↑s → ι := fun x => x.property.some\n  have hf : ∀ x, f x ∈ s ∧ p (f x) = x := fun x => x.property.some_spec\n  let f' : ps → ι := fun x => f ⟨x, hps ▸ x.property⟩\n  have hf' : ∀ x, f' x ∈ s ∧ p (f' x) = x := fun x => hf ⟨x, hps ▸ x.property⟩\n  have hf'i : function.injective f' := by\n    intro x y h\n    rw [subtype.ext_iff, ← (hf' x).2, ← (hf' y).2, h]\n  let f'e : «expr ↪ » ps ι := ⟨f', hf'i⟩\n  have hu : finset.univ.map f'e = s := by\n    ext x\n    rw [mem_map]\n    constructor\n    · rintro ⟨i, _, rfl⟩\n      exact (hf' i).1\n    · intro hx\n      use ⟨p x, hps.symm ▸ Set.mem_image_of_mem _ hx⟩, mem_univ _\n      refine' hi _ (hf' _).1 _ hx _\n      rw [(hf' _).2]\n      rfl\n  rw [← hu, centroid_map]\n  congr with x\n  change p (f' x) = ↑x\n  rw [(hf' x).2]\n#align centroid_eq_centroid_image_of_inj_on centroid_eq_centroid_image_of_inj_on\n\n",
 "centroid_eq_affine_combination_fintype":
 "/-- The centroid as an affine combination over a `fintype`. -/\ntheorem centroid_eq_affine_combination_fintype [fintype ι] (p : ι → P) :\n    s.centroid k p = univ.affine_combination p (s.centroid_weights_indicator k) :=\n  affine_combination_indicator_subset _ _ (subset_univ _)\n#align centroid_eq_affine_combination_fintype centroid_eq_affine_combination_fintype\n\n",
 "centroid_def":
 "/-- The definition of the centroid. -/\ntheorem centroid_def (p : ι → P) : s.centroid k p = s.affine_combination p (s.centroid_weights k) :=\n  rfl\n#align centroid_def centroid_def\n\n",
 "attach_affine_combination_of_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem attach_affine_combination_of_injective [decidable_eq P] (s : Finset P) (w : P → k) (f : s → P)\n    (hf : function.injective f) : s.attach.affine_combination f (w ∘ f) = (image f univ).affine_combination id w :=\n  by\n  simp only [affine_combination, weighted_vsub_of_point_apply, id.def, vadd_right_cancel_iff, Function.comp_apply,\n    affine_map.coe_mk]\n  let g₁ : s → V := fun i => «expr • » (w (f i)) («expr -ᵥ » (f i) (classical.choice S.nonempty))\n  let g₂ : P → V := fun i => «expr • » (w i) («expr -ᵥ » i (classical.choice S.nonempty))\n  change univ.sum g₁ = (image f univ).sum g₂\n  have hgf : g₁ = g₂ ∘ f := by\n    ext\n    simp\n  rw [hgf, sum_image]\n  exact fun _ _ _ _ hxy => hf hxy\n#align attach_affine_combination_of_injective attach_affine_combination_of_injective\n\n",
 "attach_affine_combination_coe":
 "theorem attach_affine_combination_coe (s : Finset P) (w : P → k) :\n    s.attach.affine_combination (coe : s → P) (w ∘ coe) = s.affine_combination id w := by\n  classical rw [attach_affine_combination_of_injective s w (coe : s → P) subtype.coe_injective, univ_eq_attach,\n      attach_image_coe]\n#align attach_affine_combination_coe attach_affine_combination_coe\n\n",
 "affine_span_eq_affine_span_line_map_units":
 "/-- Given a set of points, together with a chosen base point in this set, if we affinely transport\nall other members of the set along the line joining them to this base point, the affine span is\nunchanged. -/\ntheorem affine_span_eq_affine_span_line_map_units [nontrivial k] {s : set P} {p : P} (hp : p ∈ s) (w : s → Units k) :\n    affine_span k (Set.range fun q : s => affine_map.line_map p ↑q (w q : k)) = affine_span k s :=\n  by\n  have : s = Set.range (coe : s → P) := by simp\n  conv_rhs => rw [this]\n  apply le_antisymm <;> intro q hq <;>\n            erw [mem_affine_span_iff_eq_weighted_vsub_of_point_vadd k V _ (⟨p, hp⟩ : s) q] at hq⊢ <;>\n          obtain ⟨t, μ, rfl⟩ := hq <;>\n        use t <;>\n      [use fun x => μ x * ↑(w x), use fun x => μ x * ↑(w x)⁻¹] <;>\n    simp [smul_smul]\n#align affine_span_eq_affine_span_line_map_units affine_span_eq_affine_span_line_map_units\n\n",
 "affine_combination_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- Subtracting two `affine_combination`s. -/\ntheorem affine_combination_vsub (w₁ w₂ : ι → k) (p : ι → P) :\n    «expr -ᵥ » (s.affine_combination p w₁) (s.affine_combination p w₂) = s.weighted_vsub p (w₁ - w₂) := by\n  rw [← affine_map.linear_map_vsub, affine_combination_linear, vsub_eq_sub]\n#align affine_combination_vsub affine_combination_vsub\n\n",
 "affine_combination_subtype_eq_filter":
 "/-- An affine combination over `s.subtype pred` equals one over `s.filter pred`. -/\ntheorem affine_combination_subtype_eq_filter (w : ι → k) (p : ι → P) (pred : ι → Prop) [decidable_pred pred] :\n    ((s.subtype pred).affine_combination (fun i => p i) fun i => w i) = (s.filter pred).affine_combination p w := by\n  rw [affine_combination_apply, affine_combination_apply, weighted_vsub_of_point_subtype_eq_filter]\n#align affine_combination_subtype_eq_filter affine_combination_subtype_eq_filter\n\n",
 "affine_combination_single_weights_apply_self":
 "@[simp]\ntheorem affine_combination_single_weights_apply_self [decidable_eq ι] (i : ι) :\n    affine_combination_single_weights k i i = 1 := by simp [affine_combination_single_weights]\n#align affine_combination_single_weights_apply_self affine_combination_single_weights_apply_self\n\n",
 "affine_combination_single_weights_apply_of_ne":
 "@[simp]\ntheorem affine_combination_single_weights_apply_of_ne [decidable_eq ι] {i j : ι} (h : j ≠ i) :\n    affine_combination_single_weights k i j = 0 := by simp [affine_combination_single_weights, h]\n#align affine_combination_single_weights_apply_of_ne affine_combination_single_weights_apply_of_ne\n\n",
 "affine_combination_sdiff_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- A weighted sum may be split into a subtraction of affine combinations over two subsets. -/\ntheorem affine_combination_sdiff_sub [decidable_eq ι] {s₂ : Finset ι} (h : s₂ ⊆ s) (w : ι → k) (p : ι → P) :\n    «expr -ᵥ » ((s \\ s₂).affine_combination p w) (s₂.affine_combination p (-w)) = s.weighted_vsub p w :=\n  by\n  simp_rw [affine_combination_apply, vadd_vsub_vadd_cancel_right]\n  exact s.weighted_vsub_sdiff_sub h _ _\n#align affine_combination_sdiff_sub affine_combination_sdiff_sub\n\n",
 "affine_combination_of_eq_one_of_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- An `affine_combination` equals a point if that point is in the set\nand has weight 1 and the other points in the set have weight 0. -/\n@[simp]\ntheorem affine_combination_of_eq_one_of_eq_zero (w : ι → k) (p : ι → P) {i : ι} (his : i ∈ s) (hwi : w i = 1)\n    (hw0 : ∀ i2 ∈ s, i2 ≠ i → w i2 = 0) : s.affine_combination p w = p i :=\n  by\n  have h1 :\n    finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1 :=\n    hwi ▸ sum_eq_single i hw0 fun h => false.elim (h his)\n  rw [s.affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one w p h1 (p i), weighted_vsub_of_point_apply]\n  convert zero_vadd V (p i)\n  convert sum_eq_zero _\n  intro i2 hi2\n  by_cases h : i2 = i\n  · simp [h]\n  · simp [hw0 i2 hi2 h]\n#align affine_combination_of_eq_one_of_eq_zero affine_combination_of_eq_one_of_eq_zero\n\n",
 "affine_combination_mem_affine_span":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- An `affine_combination` with sum of weights 1 is in the\n`affine_span` of an indexed family, if the underlying ring is\nnontrivial. -/\ntheorem affine_combination_mem_affine_span [nontrivial k] {s : Finset ι} {w : ι → k}\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1)\n    (p : ι → P) : s.affine_combination p w ∈ affine_span k (Set.range p) := by\n  classical\n    have hnz :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) ≠ 0 :=\n      h.symm ▸ one_ne_zero\n    have hn : s.nonempty := finset.nonempty_of_sum_ne_zero hnz\n    cases' hn with i1 hi1\n    let w1 : ι → k := function.update (function.const ι 0) i1 1\n    have hw1 :\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w1 i) = 1 := by\n      rw [finset.sum_update_of_mem hi1, finset.sum_const_zero, add_zero]\n    have hw1s : s.affine_combination p w1 = p i1 :=\n      s.affine_combination_of_eq_one_of_eq_zero w1 p hi1 (function.update_same _ _ _) fun _ _ hne =>\n        function.update_noteq hne _ _\n    have hv : «expr -ᵥ » (s.affine_combination p w) (p i1) ∈ (affine_span k (Set.range p)).direction :=\n      by\n      rw [direction_affine_span, ← hw1s, finset.affine_combination_vsub]\n      apply weighted_vsub_mem_vector_span\n      simp [pi.sub_apply, h, hw1]\n    rw [← vsub_vadd (s.affine_combination p w) (p i1)]\n    exact affine_subspace.vadd_mem_of_mem_direction hv (mem_affine_span k (Set.mem_range_self _))\n#align affine_combination_mem_affine_span affine_combination_mem_affine_span\n\n",
 "affine_combination_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ↪ » -/\n/-- An affine combination, over the image of an embedding, equals an\naffine combination with the same points and weights over the original\n`finset`. -/\ntheorem affine_combination_map (e : «expr ↪ » ι₂ ι) (w : ι → k) (p : ι → P) :\n    (s₂.map e).affine_combination p w = s₂.affine_combination (p ∘ e) (w ∘ e) := by\n  simp_rw [affine_combination_apply, weighted_vsub_of_point_map]\n#align affine_combination_map affine_combination_map\n\n",
 "affine_combination_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/-- The linear map corresponding to `affine_combination` is\n`weighted_vsub`. -/\n@[simp]\ntheorem affine_combination_linear (p : ι → P) :\n    (s.affine_combination p : «expr →ᵃ[ ] » (ι → k) k P).linear = s.weighted_vsub p :=\n  rfl\n#align affine_combination_linear affine_combination_linear\n\n",
 "affine_combination_line_map_weights_self":
 "@[simp]\ntheorem affine_combination_line_map_weights_self [decidable_eq ι] (i : ι) (c : k) :\n    affine_combination_line_map_weights i i c = affine_combination_single_weights k i := by\n  simp [affine_combination_line_map_weights]\n#align affine_combination_line_map_weights_self affine_combination_line_map_weights_self\n\n",
 "affine_combination_line_map_weights_apply_right":
 "@[simp]\ntheorem affine_combination_line_map_weights_apply_right [decidable_eq ι] {i j : ι} (h : i ≠ j) (c : k) :\n    affine_combination_line_map_weights i j c j = c := by simp [affine_combination_line_map_weights, h.symm]\n#align affine_combination_line_map_weights_apply_right affine_combination_line_map_weights_apply_right\n\n",
 "affine_combination_line_map_weights_apply_of_ne":
 "@[simp]\ntheorem affine_combination_line_map_weights_apply_of_ne [decidable_eq ι] {i j t : ι} (hi : t ≠ i) (hj : t ≠ j) (c : k) :\n    affine_combination_line_map_weights i j c t = 0 := by simp [affine_combination_line_map_weights, hi, hj]\n#align affine_combination_line_map_weights_apply_of_ne affine_combination_line_map_weights_apply_of_ne\n\n",
 "affine_combination_line_map_weights_apply_left":
 "@[simp]\ntheorem affine_combination_line_map_weights_apply_left [decidable_eq ι] {i j : ι} (h : i ≠ j) (c : k) :\n    affine_combination_line_map_weights i j c i = 1 - c := by\n  simp [affine_combination_line_map_weights, h.symm, sub_eq_neg_add]\n#align affine_combination_line_map_weights_apply_left affine_combination_line_map_weights_apply_left\n\n",
 "affine_combination_indicator_subset":
 "/-- An affine combination is unaffected by changing the weights to the\ncorresponding indicator function and adding points to the set. -/\ntheorem affine_combination_indicator_subset (w : ι → k) (p : ι → P) {s₁ s₂ : Finset ι} (h : s₁ ⊆ s₂) :\n    s₁.affine_combination p w = s₂.affine_combination p (set.indicator (↑s₁) w) := by\n  rw [affine_combination_apply, affine_combination_apply, weighted_vsub_of_point_indicator_subset _ _ _ h]\n#align affine_combination_indicator_subset affine_combination_indicator_subset\n\n",
 "affine_combination_filter_of_ne":
 "/-- An affine combination over `s.filter pred` equals one over `s` if all the weights at indices\nin `s` not satisfying `pred` are zero. -/\ntheorem affine_combination_filter_of_ne (w : ι → k) (p : ι → P) {pred : ι → Prop} [decidable_pred pred]\n    (h : ∀ i ∈ s, w i ≠ 0 → pred i) : (s.filter pred).affine_combination p w = s.affine_combination p w := by\n  rw [affine_combination_apply, affine_combination_apply, s.weighted_vsub_of_point_filter_of_ne _ _ _ h]\n#align affine_combination_filter_of_ne affine_combination_filter_of_ne\n\n",
 "affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- `affine_combination` gives the sum with any base point, when the\nsum of the weights is 1. -/\ntheorem affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one (w : ι → k) (p : ι → P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1)\n    (b : P) : s.affine_combination p w = «expr +ᵥ » (s.weighted_vsub_of_point p b w) b :=\n  s.weighted_vsub_of_point_vadd_eq_of_sum_eq_one w p h _ _\n#align\n  affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one\n\n",
 "affine_combination_eq_of_weighted_vsub_eq_zero_of_eq_neg_one":
 "/-- If a weighted sum is zero and one of the weights is `-1`, the corresponding point is\nthe affine combination of the other points with the given weights. -/\ntheorem affine_combination_eq_of_weighted_vsub_eq_zero_of_eq_neg_one {w : ι → k} {p : ι → P}\n    (hw : s.weighted_vsub p w = (0 : V)) {i : ι} [decidable_pred (· ≠ i)] (his : i ∈ s) (hwi : w i = -1) :\n    (s.filter (· ≠ i)).affine_combination p w = p i := by\n  classical\n    rw [← @vsub_eq_zero_iff_eq V, ← hw, ← s.affine_combination_sdiff_sub (singleton_subset_iff.2 his),\n      sdiff_singleton_eq_erase, ← filter_ne']\n    congr\n    refine' (affine_combination_of_eq_one_of_eq_zero _ _ _ (mem_singleton_self _) _ _).symm\n    · simp [hwi]\n    · simp\n#align\n  affine_combination_eq_of_weighted_vsub_eq_zero_of_eq_neg_one affine_combination_eq_of_weighted_vsub_eq_zero_of_eq_neg_one\n\n",
 "affine_combination_eq_linear_combination":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Viewing a module as an affine space modelled on itself, affine combinations are just linear\ncombinations. -/\n@[simp]\ntheorem affine_combination_eq_linear_combination (s : Finset ι) (p : ι → V) (w : ι → k)\n    (hw : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1) :\n    s.affine_combination p w =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr • » (w i) (p i)) :=\n  by simp [s.affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one w p hw 0]\n#align affine_combination_eq_linear_combination affine_combination_eq_linear_combination\n\n",
 "affine_combination_congr":
 "/-- `affine_combination` gives equal results for two families of weights and two families of\npoints that are equal on `s`. -/\ntheorem affine_combination_congr {w₁ w₂ : ι → k} (hw : ∀ i ∈ s, w₁ i = w₂ i) {p₁ p₂ : ι → P}\n    (hp : ∀ i ∈ s, p₁ i = p₂ i) : s.affine_combination p₁ w₁ = s.affine_combination p₂ w₂ := by\n  simp_rw [affine_combination_apply, s.weighted_vsub_of_point_congr hw hp]\n#align affine_combination_congr affine_combination_congr\n\n",
 "affine_combination_apply_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/-- The value of `affine_combination`, where the given points are equal. -/\n@[simp]\ntheorem affine_combination_apply_const (w : ι → k) (p : P)\n    (h : finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (w i) = 1) :\n    s.affine_combination (fun _ => p) w = p := by\n  rw [affine_combination_apply, s.weighted_vsub_of_point_apply_const, h, one_smul, vsub_vadd]\n#align affine_combination_apply_const affine_combination_apply_const\n\n",
 "affine_combination_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- Applying `affine_combination` with given weights.  This is for the\ncase where a result involving a default base point is OK (for example,\nwhen that base point will cancel out later); a more typical use case\nfor `affine_combination` would involve selecting a preferred base\npoint with\n`affine_combination_eq_weighted_vsub_of_point_vadd_of_sum_eq_one` and\nthen using `weighted_vsub_of_point_apply`. -/\ntheorem affine_combination_apply (w : ι → k) (p : ι → P) :\n    s.affine_combination p w =\n      «expr +ᵥ » (s.weighted_vsub_of_point p (classical.choice S.nonempty) w) (classical.choice S.nonempty) :=\n  rfl\n#align affine_combination_apply affine_combination_apply\n\n",
 "affine_combination_affine_combination_single_weights":
 "/-- An affine combination with `affine_combination_single_weights` gives the specified point. -/\n@[simp]\ntheorem affine_combination_affine_combination_single_weights [decidable_eq ι] (p : ι → P) {i : ι} (hi : i ∈ s) :\n    s.affine_combination p (affine_combination_single_weights k i) = p i :=\n  by\n  refine' s.affine_combination_of_eq_one_of_eq_zero _ _ hi (by simp) _\n  rintro j - hj\n  simp [hj]\n#align affine_combination_affine_combination_single_weights affine_combination_affine_combination_single_weights\n\n",
 "affine_combination_affine_combination_line_map_weights":
 "/-- An affine combination with `affine_combination_line_map_weights` gives the result of\n`line_map`. -/\n@[simp]\ntheorem affine_combination_affine_combination_line_map_weights [decidable_eq ι] (p : ι → P) {i j : ι} (hi : i ∈ s)\n    (hj : j ∈ s) (c : k) :\n    s.affine_combination p (affine_combination_line_map_weights i j c) = affine_map.line_map (p i) (p j) c := by\n  rw [affine_combination_line_map_weights, ← weighted_vsub_vadd_affine_combination, weighted_vsub_const_smul,\n    s.affine_combination_affine_combination_single_weights k p hi, s.weighted_vsub_weighted_vsub_vsub_weights k p hj hi,\n    affine_map.line_map_apply]\n#align affine_combination_affine_combination_line_map_weights affine_combination_affine_combination_line_map_weights\n\n"}