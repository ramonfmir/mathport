{"to_matrix_vec_mul_coords":
 "/-- A change of basis formula for barycentric coordinates.\n\nSee also `affine_basis.to_matrix_inv_mul_affine_basis_to_matrix`. -/\n@[simp]\ntheorem to_matrix_vec_mul_coords (x : P) : (b.to_matrix b₂).vec_mul (b₂.coords x) = b.coords x :=\n  by\n  ext j\n  change _ = b.coord j x\n  conv_rhs => rw [← b₂.affine_combination_coord_eq_self x]\n  rw [Finset.map_affineCombination _ _ _ (b₂.sum_coord_apply_eq_one x)]\n  simp [Matrix.vecMul, Matrix.dotProduct, to_matrix_apply, coords]\n#align to_matrix_vec_mul_coords to_matrix_vec_mul_coords\n\n",
 "to_matrix_self":
 "@[simp]\ntheorem to_matrix_self [DecidableEq ι] : b.to_matrix b = (1 : Matrix ι ι k) :=\n  by\n  ext (i j)\n  rw [to_matrix_apply, coord_apply, Matrix.one_eq_pi_single, Pi.single_apply]\n#align to_matrix_self to_matrix_self\n\n",
 "to_matrix_row_sum_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem to_matrix_row_sum_one {ι' : Type _} (q : ι' → P) (i : ι') :\n    finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (b.to_matrix q i j) =\n      1 :=\n  by simp\n#align to_matrix_row_sum_one to_matrix_row_sum_one\n\n",
 "to_matrix_mul_to_matrix":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem to_matrix_mul_to_matrix : matrix.mul (b.to_matrix b₂) (b₂.to_matrix b) = 1 :=\n  by\n  ext (l m)\n  change (b₂.to_matrix b).vec_mul (b.coords (b₂ l)) m = _\n  rw [to_matrix_vec_mul_coords, coords_apply, ← to_matrix_apply, to_matrix_self]\n#align to_matrix_mul_to_matrix to_matrix_mul_to_matrix\n\n",
 "to_matrix_inv_vec_mul_to_matrix":
 "/-- A change of basis formula for barycentric coordinates.\n\nSee also `affine_basis.to_matrix_vec_mul_coords`. -/\n@[simp]\ntheorem to_matrix_inv_vec_mul_to_matrix (x : P) : (b.to_matrix b₂)⁻¹.vec_mul (b.coords x) = b₂.coords x :=\n  by\n  have hu := b.is_unit_to_matrix b₂\n  rw [Matrix.isUnit_iff_isUnit_det] at hu\n  rw [← b.to_matrix_vec_mul_coords b₂, Matrix.vecMul_vecMul, Matrix.mul_nonsing_inv _ hu, Matrix.vecMul_one]\n#align to_matrix_inv_vec_mul_to_matrix to_matrix_inv_vec_mul_to_matrix\n\n",
 "to_matrix_apply":
 "/-\nCopyright (c) 2021 Oliver Nash. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Oliver Nash\n-/\n@[simp]\ntheorem to_matrix_apply {ι' : Type _} (q : ι' → P) (i : ι') (j : ι) : b.to_matrix q i j = b.coord j (q i) :=\n  rfl\n#align to_matrix_apply to_matrix_apply\n\n",
 "is_unit_to_matrix_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\ntheorem is_unit_to_matrix_iff [Nontrivial k] (p : ι → P) :\n    IsUnit (b.to_matrix p) ↔ AffineIndependent k p ∧ affineSpan k (range p) = «expr⊤» :=\n  by\n  constructor\n  · rintro ⟨⟨B, A, hA, hA'⟩, rfl : B = b.to_matrix p⟩\n    rw [Matrix.mul_eq_mul] at hA hA'\n    exact ⟨b.affine_independent_of_to_matrix_right_inv p hA, b.affine_span_eq_top_of_to_matrix_left_inv p hA'⟩\n  · rintro ⟨h_tot, h_ind⟩\n    let b' : AffineBasis ι k P := ⟨p, h_tot, h_ind⟩\n    change IsUnit (b.to_matrix b')\n    exact b.is_unit_to_matrix b'\n#align is_unit_to_matrix_iff is_unit_to_matrix_iff\n\n",
 "is_unit_to_matrix":
 "theorem is_unit_to_matrix : IsUnit (b.to_matrix b₂) :=\n  ⟨{  val := b.to_matrix b₂\n      inv := b₂.to_matrix b\n      val_inv := b.to_matrix_mul_to_matrix b₂\n      inv_val := b₂.to_matrix_mul_to_matrix b }, rfl⟩\n#align is_unit_to_matrix is_unit_to_matrix\n\n",
 "det_smul_coords_eq_cramer_coords":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/-- If we fix a background affine basis `b`, then for any other basis `b₂`, we can characterise\nthe barycentric coordinates provided by `b₂` in terms of determinants relative to `b`. -/\ntheorem det_smul_coords_eq_cramer_coords (x : P) :\n    «expr • » (b.to_matrix b₂).det (b₂.coords x) = (matrix.transpose (b.to_matrix b₂)).cramer (b.coords x) :=\n  by\n  have hu := b.is_unit_to_matrix b₂\n  rw [Matrix.isUnit_iff_isUnit_det] at hu\n  rw [← b.to_matrix_inv_vec_mul_to_matrix, Matrix.det_smul_inv_vecMul_eq_cramer_transpose _ _ hu]\n#align det_smul_coords_eq_cramer_coords det_smul_coords_eq_cramer_coords\n\n",
 "affine_span_eq_top_of_to_matrix_left_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- Given a family of points `p : ι' → P` and an affine basis `b`, if the matrix whose rows are the\ncoordinates of `p` with respect `b` has a left inverse, then `p` spans the entire space. -/\ntheorem affine_span_eq_top_of_to_matrix_left_inv [DecidableEq ι] [Nontrivial k] (p : ι' → P) {A : Matrix ι ι' k}\n    (hA : matrix.mul A (b.to_matrix p) = 1) : affineSpan k (range p) = «expr⊤» :=\n  by\n  suffices ∀ i, b i ∈ affineSpan k (range p)\n    by\n    rw [eq_top_iff, ← b.tot, affineSpan_le]\n    rintro q ⟨i, rfl⟩\n    exact this i\n  intro i\n  have hAi :\n    finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\" (A i j) =\n      1 :=\n    by\n    calc\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n            (A i j) =\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n            (A i j *\n              finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n                (b.to_matrix p j l)) :=\n        by simp\n      _ =\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n            (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n              (A i j * b.to_matrix p j l)) :=\n        by simp_rw [Finset.mul_sum]\n      _ =\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n            (finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n              (A i j * b.to_matrix p j l)) :=\n        by rw [Finset.sum_comm]\n      _ =\n          finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n            ((matrix.mul A (b.to_matrix p)) i l) :=\n        rfl\n      _ = 1 := by simp [hA, Matrix.one_apply, Finset.filter_eq]\n      \n  have hbi : b i = finset.univ.affine_combination k p (A i) :=\n    by\n    apply b.ext_elem\n    intro j\n    rw [b.coord_apply, finset.univ.map_affine_combination _ _ hAi,\n      finset.univ.affine_combination_eq_linear_combination _ _ hAi]\n    change _ = (matrix.mul A (b.to_matrix p)) i j\n    simp_rw [hA, Matrix.one_apply, @eq_comm _ i j]\n  rw [hbi]\n  exact affineCombination_mem_affineSpan hAi p\n#align affine_span_eq_top_of_to_matrix_left_inv affine_span_eq_top_of_to_matrix_left_inv\n\n",
 "affine_independent_of_to_matrix_right_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/-- Given a family of points `p : ι' → P` and an affine basis `b`, if the matrix whose rows are the\ncoordinates of `p` with respect `b` has a right inverse, then `p` is affine independent. -/\ntheorem affine_independent_of_to_matrix_right_inv [DecidableEq ι'] (p : ι' → P) {A : Matrix ι ι' k}\n    (hA : matrix.mul (b.to_matrix p) A = 1) : AffineIndependent k p :=\n  by\n  rw [affineIndependent_iff_eq_of_fintype_affineCombination_eq]\n  intro w₁ w₂ hw₁ hw₂ hweq\n  have hweq' : (b.to_matrix p).vec_mul w₁ = (b.to_matrix p).vec_mul w₂ :=\n    by\n    ext j\n    change\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          («expr • » (w₁ i) (b.coord j (p i))) =\n        finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n          («expr • » (w₂ i) (b.coord j (p i)))\n    rw [← finset.univ.affine_combination_eq_linear_combination _ _ hw₁, ←\n      finset.univ.affine_combination_eq_linear_combination _ _ hw₂, ← finset.univ.map_affine_combination p w₁ hw₁, ←\n      finset.univ.map_affine_combination p w₂ hw₂, hweq]\n  replace hweq' := congr_arg (fun w => A.vec_mul w) hweq'\n  simpa only [Matrix.vecMul_vecMul, ← Matrix.mul_eq_mul, hA, Matrix.vecMul_one] using hweq'\n#align affine_independent_of_to_matrix_right_inv affine_independent_of_to_matrix_right_inv\n\n"}