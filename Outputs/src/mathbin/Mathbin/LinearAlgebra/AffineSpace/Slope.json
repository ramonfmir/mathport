{"sub_smul_slope_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem sub_smul_slope_vadd (f : k → PE) (a b : k) : «expr +ᵥ » («expr • » (b - a) (slope f a b)) (f a) = f b := by\n  rw [sub_smul_slope, vsub_vadd]\n#align sub_smul_slope_vadd sub_smul_slope_vadd\n\n",
 "sub_smul_slope":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem sub_smul_slope (f : k → PE) (a b : k) : «expr • » (b - a) (slope f a b) = «expr -ᵥ » (f b) (f a) :=\n  by\n  rcases eq_or_ne a b with (rfl | hne)\n  · rw [sub_self, zero_smul, vsub_self]\n  · rw [slope, smul_inv_smul₀ (sub_ne_zero.2 hne.symm)]\n#align sub_smul_slope sub_smul_slope\n\n",
 "sub_div_sub_smul_slope_add_sub_div_sub_smul_slope":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- `slope f a c` is a linear combination of `slope f a b` and `slope f b c`. This version\nexplicitly provides coefficients. If `a ≠ c`, then the sum of the coefficients is `1`, so it is\nactually an affine combination, see `line_map_slope_slope_sub_div_sub`. -/\ntheorem sub_div_sub_smul_slope_add_sub_div_sub_smul_slope (f : k → PE) (a b c : k) :\n    «expr • » ((b - a) / (c - a)) (slope f a b) + «expr • » ((c - b) / (c - a)) (slope f b c) = slope f a c :=\n  by\n  by_cases hab : a = b\n  · subst hab\n    rw [sub_self, zero_div, zero_smul, zero_add]\n    by_cases hac : a = c\n    · simp [hac]\n    · rw [div_self (sub_ne_zero.2 <| ne.symm hac), one_smul]\n  by_cases hbc : b = c;\n  · subst hbc\n    simp [sub_ne_zero.2 (ne.symm hab)]\n  rw [add_comm]\n  simp_rw [slope, div_eq_inv_mul, mul_smul, ← smul_add, smul_inv_smul₀ (sub_ne_zero.2 <| ne.symm hab),\n    smul_inv_smul₀ (sub_ne_zero.2 <| ne.symm hbc), vsub_add_vsub_cancel]\n#align sub_div_sub_smul_slope_add_sub_div_sub_smul_slope sub_div_sub_smul_slope_add_sub_div_sub_smul_slope\n\n",
 "slope_vadd_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n@[simp]\ntheorem slope_vadd_const (f : k → E) (c : PE) : (slope fun x => «expr +ᵥ » (f x) c) = slope f :=\n  by\n  ext (a b)\n  simp only [slope, vadd_vsub_vadd_cancel_right, vsub_eq_sub]\n#align slope_vadd_const slope_vadd_const\n\n",
 "slope_sub_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem slope_sub_smul (f : k → E) {a b : k} (h : a ≠ b) : slope (fun x => «expr • » (x - a) (f x)) a b = f b := by\n  simp [slope, inv_smul_smul₀ (sub_ne_zero.2 h.symm)]\n#align slope_sub_smul slope_sub_smul\n\n",
 "slope_same":
 "@[simp]\ntheorem slope_same (f : k → PE) (a : k) : (slope f a a : E) = 0 := by rw [slope, sub_self, inv_zero, zero_smul]\n#align slope_same slope_same\n\n",
 "slope_fun_def_field":
 "theorem slope_fun_def_field (f : k → k) (a : k) : slope f a = fun b => (f b - f a) / (b - a) :=\n  (div_eq_inv_mul _ _).symm\n#align slope_fun_def_field slope_fun_def_field\n\n",
 "slope_fun_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-\nCopyright (c) 2020 Yury G. Kudryashov. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yury G. Kudryashov\n-/\ntheorem slope_fun_def (f : k → PE) : slope f = fun a b => «expr • » (b - a)⁻¹ («expr -ᵥ » (f b) (f a)) :=\n  rfl\n#align slope_fun_def slope_fun_def\n\n",
 "slope_def_module":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem slope_def_module (f : k → E) (a b : k) : slope f a b = «expr • » (b - a)⁻¹ (f b - f a) :=\n  rfl\n#align slope_def_module slope_def_module\n\n",
 "slope_def_field":
 "theorem slope_def_field (f : k → k) (a b : k) : slope f a b = (f b - f a) / (b - a) :=\n  (div_eq_inv_mul _ _).symm\n#align slope_def_field slope_def_field\n\n",
 "slope_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem linear_map.slope_comp {F : Type _} [add_comm_group F] [Module k F] (f : «expr →ₗ[ ] » E k F) (g : k → E)\n    (a b : k) : slope (f ∘ g) a b = f (slope g a b) :=\n  f.to_affine_map.slope_comp g a b\n#align linear_map.slope_comp linear_map.slope_comp\n\n",
 "slope_comm":
 "theorem slope_comm (f : k → PE) (a b : k) : slope f a b = slope f b a := by\n  rw [slope, slope, ← neg_vsub_eq_vsub_rev, smul_neg, ← neg_smul, neg_inv, neg_sub]\n#align slope_comm slope_comm\n\n",
 "line_map_slope_slope_sub_div_sub":
 "/-- `slope f a c` is an affine combination of `slope f a b` and `slope f b c`. This version uses\n`line_map` to express this property. -/\ntheorem line_map_slope_slope_sub_div_sub (f : k → PE) (a b c : k) (h : a ≠ c) :\n    line_map (slope f a b) (slope f b c) ((c - b) / (c - a)) = slope f a c := by\n  field_simp [sub_ne_zero.2 h.symm, ← sub_div_sub_smul_slope_add_sub_div_sub_smul_slope f a b c, line_map_apply_module]\n#align line_map_slope_slope_sub_div_sub line_map_slope_slope_sub_div_sub\n\n",
 "line_map_slope_line_map_slope_line_map":
 "/-- `slope f a b` is an affine combination of `slope f a (line_map a b r)` and\n`slope f (line_map a b r) b`. We use `line_map` to express this property. -/\ntheorem line_map_slope_line_map_slope_line_map (f : k → PE) (a b r : k) :\n    line_map (slope f (line_map a b r) b) (slope f a (line_map a b r)) r = slope f a b :=\n  by\n  obtain rfl | hab : a = b ∨ a ≠ b := classical.em _; · simp\n  rw [slope_comm _ a, slope_comm _ a, slope_comm _ _ b]\n  convert line_map_slope_slope_sub_div_sub f b (line_map a b r) a hab.symm using 2\n  rw [line_map_apply_ring, eq_div_iff (sub_ne_zero.2 hab), sub_mul, one_mul, mul_sub, ← sub_sub, sub_sub_cancel]\n#align line_map_slope_line_map_slope_line_map line_map_slope_line_map_slope_line_map\n\n",
 "eq_of_slope_eq_zero":
 "theorem eq_of_slope_eq_zero {f : k → PE} {a b : k} (h : slope f a b = (0 : E)) : f a = f b := by\n  rw [← sub_smul_slope_vadd f a b, h, smul_zero, zero_vadd]\n#align eq_of_slope_eq_zero eq_of_slope_eq_zero\n\n"}