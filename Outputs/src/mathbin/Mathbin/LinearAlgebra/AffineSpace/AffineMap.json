{"zero_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem zero_linear : (0 : «expr →ᵃ[ ] » P1 k V2).linear = 0 :=\n  rfl\n#align zero_linear zero_linear\n\n",
 "vsub_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem vsub_apply (f g : «expr →ᵃ[ ] » P1 k P2) (p : P1) :\n    («expr -ᵥ » f g : «expr →ᵃ[ ] » P1 k V2) p = «expr -ᵥ » (f p) (g p) :=\n  rfl\n#align vsub_apply vsub_apply\n\n",
 "vadd_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n@[simp]\ntheorem vadd_apply (f : «expr →ᵃ[ ] » P1 k V2) (g : «expr →ᵃ[ ] » P1 k P2) (p : P1) :\n    («expr +ᵥ » f g) p = «expr +ᵥ » (f p) (g p) :=\n  rfl\n#align vadd_apply vadd_apply\n\n",
 "to_fun_eq_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/-- `to_fun` is the same as the result of coercing to a function. -/\n@[simp]\ntheorem to_fun_eq_coe (f : «expr →ᵃ[ ] » P1 k P2) : f.to_fun = «expr⇑ » f :=\n  rfl\n#align to_fun_eq_coe to_fun_eq_coe\n\n",
 "to_affine_map_linear":
 "@[simp]\ntheorem to_affine_map_linear : f.to_affine_map.linear = f :=\n  rfl\n#align to_affine_map_linear to_affine_map_linear\n\n",
 "sub_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem sub_linear (f g : «expr →ᵃ[ ] » P1 k V2) : (f - g).linear = f.linear - g.linear :=\n  rfl\n#align sub_linear sub_linear\n\n",
 "snd_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem snd_linear : (snd : «expr →ᵃ[ ] » (P1 × P2) k P2).linear = linear_map.snd k V1 V2 :=\n  rfl\n#align snd_linear snd_linear\n\n",
 "snd_line_map":
 "@[simp]\ntheorem snd_line_map (p₀ p₁ : P1 × P2) (c : k) : (line_map p₀ p₁ c).2 = line_map p₀.2 p₁.2 c :=\n  snd.apply_line_map p₀ p₁ c\n#align snd_line_map snd_line_map\n\n",
 "smul_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem smul_linear (t : R) (f : «expr →ᵃ[ ] » P1 k V2) : («expr • » t f).linear = «expr • » t f.linear :=\n  rfl\n#align smul_linear smul_linear\n\n",
 "right_vsub_line_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem right_vsub_line_map (p₀ p₁ : P1) (c : k) :\n    «expr -ᵥ » p₁ (line_map p₀ p₁ c) = «expr • » (1 - c) («expr -ᵥ » p₁ p₀) := by\n  rw [← line_map_apply_one_sub, left_vsub_line_map]\n#align right_vsub_line_map right_vsub_line_map\n\n",
 "proj_linear":
 "@[simp]\ntheorem proj_linear (i : ι) : (@proj k _ ι V P _ _ _ i).linear = @linear_map.proj k ι _ V _ _ i :=\n  rfl\n#align proj_linear proj_linear\n\n",
 "proj_apply":
 "@[simp]\ntheorem proj_apply (i : ι) (f : ∀ i, P i) : @proj k _ ι V P _ _ _ i f = f i :=\n  rfl\n#align proj_apply proj_apply\n\n",
 "pi_line_map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\ntheorem pi_line_map_apply (f g : ∀ i, P i) (c : k) (i : ι) : line_map f g c i = line_map (f i) (g i) c :=\n  (proj i : «expr →ᵃ[ ] » (∀ i, P i) k (P i)).apply_line_map f g c\n#align pi_line_map_apply pi_line_map_apply\n\n",
 "neg_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem neg_linear (f : «expr →ᵃ[ ] » P1 k V2) : (-f).linear = -f.linear :=\n  rfl\n#align neg_linear neg_linear\n\n",
 "mk'_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem mk'_linear (f : P1 → P2) (f' : «expr →ₗ[ ] » V1 k V2) (p h) : (mk' f f' p h).linear = f' :=\n  rfl\n#align mk'_linear mk'_linear\n\n",
 "map_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-- An affine map on the result of adding a vector to a point produces\nthe same result as the linear map applied to that vector, added to the\naffine map applied to that point. -/\n@[simp]\ntheorem map_vadd (f : «expr →ᵃ[ ] » P1 k P2) (p : P1) (v : V1) : f («expr +ᵥ » v p) = «expr +ᵥ » (f.linear v) (f p) :=\n  f.map_vadd' p v\n#align map_vadd map_vadd\n\n",
 "linear_surjective_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem linear_surjective_iff (f : «expr →ᵃ[ ] » P1 k P2) : function.surjective f.linear ↔ function.surjective f :=\n  by\n  obtain ⟨p⟩ := (infer_instance : nonempty P1)\n  have h : «expr⇑ » f.linear = (equiv.vadd_const (f p)).symm ∘ f ∘ equiv.vadd_const p :=\n    by\n    ext v\n    simp [f.map_vadd, vadd_vsub_assoc]\n  rw [h, equiv.comp_surjective, equiv.surjective_comp]\n#align linear_surjective_iff linear_surjective_iff\n\n",
 "linear_map_vsub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/-- The linear map on the result of subtracting two points is the\nresult of subtracting the result of the affine map on those two\npoints. -/\n@[simp]\ntheorem linear_map_vsub (f : «expr →ᵃ[ ] » P1 k P2) (p1 p2 : P1) :\n    f.linear («expr -ᵥ » p1 p2) = «expr -ᵥ » (f p1) (f p2) := by conv_rhs => rw [← vsub_vadd p1 p2, map_vadd, vadd_vsub]\n#align linear_map_vsub linear_map_vsub\n\n",
 "linear_injective_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem linear_injective_iff (f : «expr →ᵃ[ ] » P1 k P2) : function.injective f.linear ↔ function.injective f :=\n  by\n  obtain ⟨p⟩ := (infer_instance : nonempty P1)\n  have h : «expr⇑ » f.linear = (equiv.vadd_const (f p)).symm ∘ f ∘ equiv.vadd_const p :=\n    by\n    ext v\n    simp [f.map_vadd, vadd_vsub_assoc]\n  rw [h, equiv.comp_injective, equiv.injective_comp]\n#align linear_injective_iff linear_injective_iff\n\n",
 "linear_eq_zero_iff_exists_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\ntheorem linear_eq_zero_iff_exists_const (f : «expr →ᵃ[ ] » P1 k P2) : f.linear = 0 ↔ ∃ q, f = const k P1 q :=\n  by\n  refine' ⟨fun h => _, fun h => _⟩\n  · use f (classical.arbitrary P1)\n    ext\n    rw [coe_const, function.const_apply, ← @vsub_eq_zero_iff_eq V2, ← f.linear_map_vsub, h, linear_map.zero_apply]\n  · rcases h with ⟨q, rfl⟩\n    exact const_linear k P1 q\n#align linear_eq_zero_iff_exists_const linear_eq_zero_iff_exists_const\n\n",
 "linear_bijective_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem linear_bijective_iff (f : «expr →ᵃ[ ] » P1 k P2) : function.bijective f.linear ↔ function.bijective f :=\n  and_congr f.linear_injective_iff f.linear_surjective_iff\n#align linear_bijective_iff linear_bijective_iff\n\n",
 "line_map_vsub_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem line_map_vsub_right (p₀ p₁ : P1) (c : k) :\n    «expr -ᵥ » (line_map p₀ p₁ c) p₁ = «expr • » (1 - c) («expr -ᵥ » p₀ p₁) := by\n  rw [← line_map_apply_one_sub, line_map_vsub_left]\n#align line_map_vsub_right line_map_vsub_right\n\n",
 "line_map_vsub_line_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_torsor -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem line_map_vsub_line_map (p₁ p₂ p₃ p₄ : P1) (c : k) :\n    «expr -ᵥ » (line_map p₁ p₂ c) (line_map p₃ p₄ c) = line_map («expr -ᵥ » p₁ p₃) («expr -ᵥ » p₂ p₄) c :=\n  letI-- Why Lean fails to find this instance without a hint?\n   : (add_torsor) (V1 × V1) (P1 × P1) := prod.add_torsor\n  («expr -ᵥ » (fst : «expr →ᵃ[ ] » (P1 × P1) k P1) (snd : «expr →ᵃ[ ] » (P1 × P1) k P1)).apply_line_map (_, _) (_, _) c\n#align line_map_vsub_line_map line_map_vsub_line_map\n\n",
 "line_map_vsub_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem line_map_vsub_left (p₀ p₁ : P1) (c : k) : «expr -ᵥ » (line_map p₀ p₁ c) p₀ = «expr • » c («expr -ᵥ » p₁ p₀) :=\n  vadd_vsub _ _\n#align line_map_vsub_left line_map_vsub_left\n\n",
 "line_map_vadd_line_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\ntheorem line_map_vadd_line_map (v₁ v₂ : V1) (p₁ p₂ : P1) (c : k) :\n    «expr +ᵥ » (line_map v₁ v₂ c) (line_map p₁ p₂ c) = line_map («expr +ᵥ » v₁ p₁) («expr +ᵥ » v₂ p₂) c :=\n  («expr +ᵥ » (fst : «expr →ᵃ[ ] » (V1 × P1) k V1) snd).apply_line_map (v₁, p₁) (v₂, p₂) c\n#align line_map_vadd_line_map line_map_vadd_line_map\n\n",
 "line_map_vadd_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem line_map_vadd_apply (p : P1) (v : V1) (c : k) : line_map p («expr +ᵥ » v p) c = «expr +ᵥ » («expr • » c v) p :=\n  by rw [line_map_apply, vadd_vsub]\n#align line_map_vadd_apply line_map_vadd_apply\n\n",
 "line_map_symm":
 "theorem line_map_symm (p₀ p₁ : P1) : line_map p₀ p₁ = (line_map p₁ p₀).comp (line_map (1 : k) (0 : k)) :=\n  by\n  rw [comp_line_map]\n  simp\n#align line_map_symm line_map_symm\n\n",
 "line_map_same_apply":
 "theorem line_map_same_apply (p : P1) (c : k) : line_map p p c = p := by simp [line_map_apply]\n#align line_map_same_apply line_map_same_apply\n\n",
 "line_map_same":
 "@[simp]\ntheorem line_map_same (p : P1) : line_map p p = const k k p :=\n  ext <| line_map_same_apply p\n#align line_map_same line_map_same\n\n",
 "line_map_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem line_map_linear (p₀ p₁ : P1) :\n    (line_map p₀ p₁ : «expr →ᵃ[ ] » k k P1).linear = linear_map.id.smul_right («expr -ᵥ » p₁ p₀) :=\n  add_zero _\n#align line_map_linear line_map_linear\n\n",
 "line_map_injective":
 "theorem line_map_injective [NoZeroSMulDivisors k V1] {p₀ p₁ : P1} (h : p₀ ≠ p₁) :\n    function.injective (line_map p₀ p₁ : k → P1) := fun c₁ c₂ hc => (line_map_eq_line_map_iff.mp hc).resolve_left h\n#align line_map_injective line_map_injective\n\n",
 "line_map_eq_right_iff":
 "@[simp]\ntheorem line_map_eq_right_iff [NoZeroSMulDivisors k V1] {p₀ p₁ : P1} {c : k} :\n    line_map p₀ p₁ c = p₁ ↔ p₀ = p₁ ∨ c = 1 := by rw [← @line_map_eq_line_map_iff k V1, line_map_apply_one]\n#align line_map_eq_right_iff line_map_eq_right_iff\n\n",
 "line_map_eq_line_map_iff":
 "@[simp]\ntheorem line_map_eq_line_map_iff [NoZeroSMulDivisors k V1] {p₀ p₁ : P1} {c₁ c₂ : k} :\n    line_map p₀ p₁ c₁ = line_map p₀ p₁ c₂ ↔ p₀ = p₁ ∨ c₁ = c₂ := by\n  rw [line_map_apply, line_map_apply, ← @vsub_eq_zero_iff_eq V1, vadd_vsub_vadd_cancel_right, ← sub_smul, smul_eq_zero,\n    sub_eq_zero, vsub_eq_zero_iff_eq, or_comm', eq_comm]\n#align line_map_eq_line_map_iff line_map_eq_line_map_iff\n\n",
 "line_map_eq_left_iff":
 "@[simp]\ntheorem line_map_eq_left_iff [NoZeroSMulDivisors k V1] {p₀ p₁ : P1} {c : k} : line_map p₀ p₁ c = p₀ ↔ p₀ = p₁ ∨ c = 0 :=\n  by rw [← @line_map_eq_line_map_iff k V1, line_map_apply_zero]\n#align line_map_eq_left_iff line_map_eq_left_iff\n\n",
 "line_map_apply_zero":
 "@[simp]\ntheorem line_map_apply_zero (p₀ p₁ : P1) : line_map p₀ p₁ (0 : k) = p₀ := by simp [line_map_apply]\n#align line_map_apply_zero line_map_apply_zero\n\n",
 "line_map_apply_ring'":
 "theorem line_map_apply_ring' (a b c : k) : line_map a b c = c * (b - a) + a :=\n  rfl\n#align line_map_apply_ring' line_map_apply_ring'\n\n",
 "line_map_apply_ring":
 "theorem line_map_apply_ring (a b c : k) : line_map a b c = (1 - c) * a + c * b :=\n  line_map_apply_module a b c\n#align line_map_apply_ring line_map_apply_ring\n\n",
 "line_map_apply_one_sub":
 "theorem line_map_apply_one_sub (p₀ p₁ : P1) (c : k) : line_map p₀ p₁ (1 - c) = line_map p₁ p₀ c :=\n  by\n  rw [line_map_symm p₀, comp_apply]\n  congr\n  simp [line_map_apply]\n#align line_map_apply_one_sub line_map_apply_one_sub\n\n",
 "line_map_apply_one":
 "@[simp]\ntheorem line_map_apply_one (p₀ p₁ : P1) : line_map p₀ p₁ (1 : k) = p₁ := by simp [line_map_apply]\n#align line_map_apply_one line_map_apply_one\n\n",
 "line_map_apply_module'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem line_map_apply_module' (p₀ p₁ : V1) (c : k) : line_map p₀ p₁ c = «expr • » c (p₁ - p₀) + p₀ :=\n  rfl\n#align line_map_apply_module' line_map_apply_module'\n\n",
 "line_map_apply_module":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem line_map_apply_module (p₀ p₁ : V1) (c : k) : line_map p₀ p₁ c = «expr • » (1 - c) p₀ + «expr • » c p₁ := by\n  simp [line_map_apply_module', smul_sub, sub_smul] <;> abel\n#align line_map_apply_module line_map_apply_module\n\n",
 "line_map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem line_map_apply (p₀ p₁ : P1) (c : k) : line_map p₀ p₁ c = «expr +ᵥ » («expr • » c («expr -ᵥ » p₁ p₀)) p₀ :=\n  rfl\n#align line_map_apply line_map_apply\n\n",
 "left_vsub_line_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem left_vsub_line_map (p₀ p₁ : P1) (c : k) : «expr -ᵥ » p₀ (line_map p₀ p₁ c) = «expr • » c («expr -ᵥ » p₀ p₁) :=\n  by rw [← neg_vsub_eq_vsub_rev, line_map_vsub_left, ← smul_neg, neg_vsub_eq_vsub_rev]\n#align left_vsub_line_map left_vsub_line_map\n\n",
 "image_vsub_image":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem image_vsub_image {s t : set P1} (f : «expr →ᵃ[ ] » P1 k P2) :\n    «expr -ᵥ » («expr '' » f s) («expr '' » f t) = «expr '' » f.linear («expr -ᵥ » s t) :=\n  by\n  ext v\n  simp only [Set.mem_vsub, Set.mem_image, exists_exists_and_eq_and, exists_and_left, ← f.linear_map_vsub]\n  constructor\n  · rintro ⟨x, hx, y, hy, hv⟩\n    exact ⟨«expr -ᵥ » x y, ⟨x, hx, y, hy, rfl⟩, hv⟩\n  · rintro ⟨-, ⟨x, hx, y, hy, rfl⟩, rfl⟩\n    exact ⟨x, hx, y, hy, rfl⟩\n#align image_vsub_image image_vsub_image\n\n",
 "image_uIcc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr '' » -/\ntheorem image_uIcc {k : Type _} [LinearOrderedField k] (f : «expr →ᵃ[ ] » k k k) (a b : k) :\n    «expr '' » f (set.uIcc a b) = set.uIcc (f a) (f b) :=\n  by\n  have : «expr⇑ » f = (fun x => x + f 0) ∘ fun x => x * (f 1 - f 0) :=\n    by\n    ext x\n    change f x = «expr +ᵥ » («expr • » x («expr -ᵥ » (f 1) (f 0))) (f 0)\n    rw [← f.linear_map_vsub, ← f.linear.map_smul, ← f.map_vadd]\n    simp only [vsub_eq_sub, add_zero, mul_one, vadd_eq_add, sub_zero, smul_eq_mul]\n  rw [this, Set.image_comp]\n  simp only [set.image_add_const_uIcc, set.image_mul_const_uIcc]\n#align image_uIcc image_uIcc\n\n",
 "id_linear":
 "@[simp]\ntheorem id_linear : (id k P1).linear = linear_map.id :=\n  rfl\n#align id_linear id_linear\n\n",
 "id_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem id_comp (f : «expr →ᵃ[ ] » P1 k P2) : (id k P2).comp f = f :=\n  ext fun p => rfl\n#align id_comp id_comp\n\n",
 "id_apply":
 "/-- The identity affine map acts as the identity. -/\ntheorem id_apply (p : P1) : id k P1 p = p :=\n  rfl\n#align id_apply id_apply\n\n",
 "homothety_zero":
 "@[simp]\ntheorem homothety_zero (c : P1) : homothety c (0 : k) = const k P1 c :=\n  by\n  ext p\n  simp [homothety_apply]\n#align homothety_zero homothety_zero\n\n",
 "homothety_one":
 "@[simp]\ntheorem homothety_one (c : P1) : homothety c (1 : k) = id k P1 :=\n  by\n  ext p\n  simp [homothety_apply]\n#align homothety_one homothety_one\n\n",
 "homothety_mul_apply":
 "theorem homothety_mul_apply (c : P1) (r₁ r₂ : k) (p : P1) :\n    homothety c (r₁ * r₂) p = homothety c r₁ (homothety c r₂ p) := by simp [homothety_apply, mul_smul]\n#align homothety_mul_apply homothety_mul_apply\n\n",
 "homothety_mul":
 "theorem homothety_mul (c : P1) (r₁ r₂ : k) : homothety c (r₁ * r₂) = (homothety c r₁).comp (homothety c r₂) :=\n  ext <| homothety_mul_apply c r₁ r₂\n#align homothety_mul homothety_mul\n\n",
 "homothety_eq_line_map":
 "theorem homothety_eq_line_map (c : P1) (r : k) (p : P1) : homothety c r p = line_map c p r :=\n  rfl\n#align homothety_eq_line_map homothety_eq_line_map\n\n",
 "homothety_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem homothety_def (c : P1) (r : k) :\n    homothety c r = «expr +ᵥ » («expr • » r («expr -ᵥ » (id k P1) (const k P1 c))) (const k P1 c) :=\n  rfl\n#align homothety_def homothety_def\n\n",
 "homothety_apply_same":
 "@[simp]\ntheorem homothety_apply_same (c : P1) (r : k) : homothety c r c = c :=\n  line_map_same_apply c r\n#align homothety_apply_same homothety_apply_same\n\n",
 "homothety_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem homothety_apply (c : P1) (r : k) (p : P1) :\n    homothety c r p = «expr +ᵥ » («expr • » r («expr -ᵥ » p c : V1)) c :=\n  rfl\n#align homothety_apply homothety_apply\n\n",
 "homothety_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\n@[simp]\ntheorem homothety_add (c : P1) (r₁ r₂ : k) :\n    homothety c (r₁ + r₂) = «expr +ᵥ » («expr • » r₁ («expr -ᵥ » (id k P1) (const k P1 c))) (homothety c r₂) := by\n  simp only [homothety_def, add_smul, vadd_vadd]\n#align homothety_add homothety_add\n\n",
 "fst_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem fst_linear : (fst : «expr →ᵃ[ ] » (P1 × P2) k P1).linear = linear_map.fst k V1 V2 :=\n  rfl\n#align fst_linear fst_linear\n\n",
 "fst_line_map":
 "@[simp]\ntheorem fst_line_map (p₀ p₁ : P1 × P2) (c : k) : (line_map p₀ p₁ c).1 = line_map p₀.1 p₁.1 c :=\n  fst.apply_line_map p₀ p₁ c\n#align fst_line_map fst_line_map\n\n",
 "ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\ntheorem ext_iff {f g : «expr →ᵃ[ ] » P1 k P2} : f = g ↔ ∀ p, f p = g p :=\n  ⟨fun h p => h ▸ rfl, ext⟩\n#align ext_iff ext_iff\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/-- Two affine maps are equal if they coerce to the same function. -/\n@[ext]\ntheorem ext {f g : «expr →ᵃ[ ] » P1 k P2} (h : ∀ p, f p = g p) : f = g :=\n  by\n  rcases f with ⟨f, f_linear, f_add⟩\n  rcases g with ⟨g, g_linear, g_add⟩\n  obtain rfl : f = g := funext h\n  congr with v\n  cases' (add_torsor.nonempty : nonempty P1) with p\n  apply vadd_right_cancel (f p)\n  erw [← f_add, ← g_add]\n#align ext ext\n\n",
 "decomp'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/-- Decomposition of an affine map in the special case when the point space and vector space\nare the same. -/\ntheorem decomp' (f : «expr →ᵃ[ ] » V1 k V2) : (f.linear : V1 → V2) = f - fun z => f 0 := by\n  rw [decomp] <;> simp only [linear_map.map_zero, pi.add_apply, add_sub_cancel, zero_add]\n#align decomp' decomp'\n\n",
 "decomp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/-- Decomposition of an affine map in the special case when the point space and vector space\nare the same. -/\ntheorem decomp (f : «expr →ᵃ[ ] » V1 k V2) : (f : V1 → V2) = f.linear + fun z => f 0 :=\n  by\n  ext x\n  calc\n    f x = «expr +ᵥ » (f.linear x) (f 0) := by simp [← f.map_vadd]\n    _ = (f.linear.to_fun + fun z : V1 => f 0) x := by simp\n    \n#align decomp decomp\n\n",
 "const_linear":
 "@[simp]\ntheorem const_linear (p : P2) : (const k P1 p).linear = 0 :=\n  rfl\n#align const_linear const_linear\n\n",
 "congr_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n#print congr_fun /-\nprotected theorem congr_fun {f g : «expr →ᵃ[ ] » P1 k P2} (h : f = g) (x : P1) : f x = g x :=\n  h ▸ rfl\n#align congr_fun congr_fun\n-/\n\n",
 "congr_arg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n#print congr_arg /-\nprotected theorem congr_arg (f : «expr →ᵃ[ ] » P1 k P2) {x y : P1} (h : x = y) : f x = f y :=\n  congr_arg _ h\n#align congr_arg congr_arg\n-/\n\n",
 "comp_line_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem comp_line_map (f : «expr →ᵃ[ ] » P1 k P2) (p₀ p₁ : P1) : f.comp (line_map p₀ p₁) = line_map (f p₀) (f p₁) :=\n  ext <| f.apply_line_map p₀ p₁\n#align comp_line_map comp_line_map\n\n",
 "comp_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem comp_id (f : «expr →ᵃ[ ] » P1 k P2) : f.comp (id k P1) = f :=\n  ext fun p => rfl\n#align comp_id comp_id\n\n",
 "comp_assoc":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\ntheorem comp_assoc (f₃₄ : «expr →ᵃ[ ] » P3 k P4) (f₂₃ : «expr →ᵃ[ ] » P2 k P3) (f₁₂ : «expr →ᵃ[ ] » P1 k P2) :\n    (f₃₄.comp f₂₃).comp f₁₂ = f₃₄.comp (f₂₃.comp f₁₂) :=\n  rfl\n#align comp_assoc comp_assoc\n\n",
 "comp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/-- Composition of affine maps acts as applying the two functions. -/\ntheorem comp_apply (f : «expr →ᵃ[ ] » P2 k P3) (g : «expr →ᵃ[ ] » P1 k P2) (p : P1) : f.comp g p = f (g p) :=\n  rfl\n#align comp_apply comp_apply\n\n",
 "combo_affine_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Applying an affine map to an affine combination of two points yields an affine combination of\nthe images. -/\ntheorem convex.combo_affine_apply {x y : E} {a b : 𝕜} {f : «expr →ᵃ[ ] » E 𝕜 F} (h : a + b = 1) :\n    f («expr • » a x + «expr • » b y) = «expr • » a (f x) + «expr • » b (f y) :=\n  by\n  simp only [Convex.combo_eq_smul_sub_add h, ← vsub_eq_sub]\n  exact f.apply_line_map _ _ _\n#align convex.combo_affine_apply convex.combo_affine_apply\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp, norm_cast]\ntheorem coe_zero : «expr⇑ » (0 : «expr →ᵃ[ ] » P1 k V2) = 0 :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_to_affine_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/-\nCopyright (c) 2020 Joseph Myers. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Joseph Myers\n-/\n@[simp]\ntheorem coe_to_affine_map : «expr⇑ » f.to_affine_map = f :=\n  rfl\n#align coe_to_affine_map coe_to_affine_map\n\n",
 "coe_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp, norm_cast]\ntheorem coe_sub (f g : «expr →ᵃ[ ] » P1 k V2) : «expr⇑ » (f - g) = f - g :=\n  rfl\n#align coe_sub coe_sub\n\n",
 "coe_snd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem coe_snd : «expr⇑ » (snd : «expr →ᵃ[ ] » (P1 × P2) k P2) = prod.snd :=\n  rfl\n#align coe_snd coe_snd\n\n",
 "coe_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp, norm_cast]\ntheorem coe_smul (c : R) (f : «expr →ᵃ[ ] » P1 k V2) : «expr⇑ » («expr • » c f) = «expr • » c f :=\n  rfl\n#align coe_smul coe_smul\n\n",
 "coe_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem coe_one : «expr⇑ » (1 : «expr →ᵃ[ ] » P1 k P1) = _root_.id :=\n  rfl\n#align coe_one coe_one\n\n",
 "coe_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp, norm_cast]\ntheorem coe_neg (f : «expr →ᵃ[ ] » P1 k V2) : «expr⇑ » (-f) = -f :=\n  rfl\n#align coe_neg coe_neg\n\n",
 "coe_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_mul (f g : «expr →ᵃ[ ] » P1 k P1) : «expr⇑ » (f * g) = f ∘ g :=\n  rfl\n#align coe_mul coe_mul\n\n",
 "coe_mk'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_mk' (f : P1 → P2) (f' : «expr →ₗ[ ] » V1 k V2) (p h) : «expr⇑ » (mk' f f' p h) = f :=\n  rfl\n#align coe_mk' coe_mk'\n\n",
 "coe_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/-- Constructing an affine map and coercing back to a function\nproduces the same map. -/\n@[simp]\ntheorem coe_mk (f : P1 → P2) (linear add) : ((mk f linear add : «expr →ᵃ[ ] » P1 k P2) : P1 → P2) = f :=\n  rfl\n#align coe_mk coe_mk\n\n",
 "coe_line_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr -ᵥ » -/\ntheorem coe_line_map (p₀ p₁ : P1) :\n    (line_map p₀ p₁ : k → P1) = fun c => «expr +ᵥ » («expr • » c («expr -ᵥ » p₁ p₀)) p₀ :=\n  rfl\n#align coe_line_map coe_line_map\n\n",
 "coe_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/-- The identity affine map acts as the identity. -/\n@[simp]\ntheorem coe_id : «expr⇑ » (id k P1) = _root_.id :=\n  rfl\n#align coe_id coe_id\n\n",
 "coe_homothety_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n@[simp]\ntheorem coe_homothety_hom (c : P1) : «expr⇑ » (homothety_hom c : «expr →* » k _) = homothety c :=\n  rfl\n#align coe_homothety_hom coe_homothety_hom\n\n",
 "coe_homothety_affine":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem coe_homothety_affine (c : P1) : «expr⇑ » (homothety_affine c : «expr →ᵃ[ ] » k k _) = homothety c :=\n  rfl\n#align coe_homothety_affine coe_homothety_affine\n\n",
 "coe_fst":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem coe_fst : «expr⇑ » (fst : «expr →ᵃ[ ] » (P1 × P2) k P1) = prod.fst :=\n  rfl\n#align coe_fst coe_fst\n\n",
 "coe_fn_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\ntheorem coe_fn_injective : @function.injective («expr →ᵃ[ ] » P1 k P2) (P1 → P2) coe_fn := fun f g H =>\n  ext <| congr_fun H\n#align coe_fn_injective coe_fn_injective\n\n",
 "coe_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_const (p : P2) : «expr⇑ » (const k P1 p) = function.const P1 p :=\n  rfl\n#align coe_const coe_const\n\n",
 "coe_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/-- Composition of affine maps acts as applying the two functions. -/\n@[simp]\ntheorem coe_comp (f : «expr →ᵃ[ ] » P2 k P3) (g : «expr →ᵃ[ ] » P1 k P2) : «expr⇑ » (f.comp g) = f ∘ g :=\n  rfl\n#align coe_comp coe_comp\n\n",
 "coe_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp, norm_cast]\ntheorem coe_add (f g : «expr →ᵃ[ ] » P1 k V2) : «expr⇑ » (f + g) = f + g :=\n  rfl\n#align coe_add coe_add\n\n",
 "apply_line_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem apply_line_map (f : «expr →ᵃ[ ] » P1 k P2) (p₀ p₁ : P1) (c : k) :\n    f (line_map p₀ p₁ c) = line_map (f p₀) (f p₁) c := by simp [line_map_apply]\n#align apply_line_map apply_line_map\n\n",
 "add_linear":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n@[simp]\ntheorem add_linear (f g : «expr →ᵃ[ ] » P1 k V2) : (f + g).linear = f.linear + g.linear :=\n  rfl\n#align add_linear add_linear\n\n"}