{"vadd_mem_pointwise_vadd_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\ntheorem vadd_mem_pointwise_vadd_iff {v : V} {s : AffineSubspace k P} {p : P} :\n    «expr +ᵥ » v p ∈ «expr +ᵥ » v s ↔ p ∈ s :=\n  vadd_mem_vadd_set_iff\n#align vadd_mem_pointwise_vadd_iff vadd_mem_pointwise_vadd_iff\n\n",
 "pointwise_vadd_span":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\ntheorem pointwise_vadd_span (v : V) (s : Set P) : «expr +ᵥ » v (affineSpan k s) = affineSpan k («expr +ᵥ » v s) :=\n  map_span _ s\n#align pointwise_vadd_span pointwise_vadd_span\n\n",
 "pointwise_vadd_direction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\ntheorem pointwise_vadd_direction (v : V) (s : AffineSubspace k P) : («expr +ᵥ » v s).direction = s.direction :=\n  by\n  unfold has_vadd.vadd\n  rw [map_direction]\n  exact Submodule.map_id _\n#align pointwise_vadd_direction pointwise_vadd_direction\n\n",
 "pointwise_vadd_bot":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\ntheorem pointwise_vadd_bot (v : V) : «expr +ᵥ » v («expr⊥» : AffineSubspace k P) = «expr⊥» := by simp [SetLike.ext'_iff]\n#align pointwise_vadd_bot pointwise_vadd_bot\n\n",
 "map_pointwise_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ᵃ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\ntheorem map_pointwise_vadd (f : «expr →ᵃ[ ] » P₁ k P₂) (v : V₁) (s : AffineSubspace k P₁) :\n    («expr +ᵥ » v s).map f = «expr +ᵥ » (f.linear v) (s.map f) :=\n  by\n  unfold has_vadd.vadd\n  rw [map_map, map_map]\n  congr 1\n  ext\n  exact f.map_vadd _ _\n#align map_pointwise_vadd map_pointwise_vadd\n\n",
 "coe_pointwise_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/-\nCopyright (c) 2022 Hanting Zhang. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Hanting Zhang\n-/\n@[simp]\ntheorem coe_pointwise_vadd (v : V) (s : AffineSubspace k P) :\n    ((«expr +ᵥ » v s : AffineSubspace k P) : Set P) = «expr +ᵥ » v s :=\n  rfl\n#align coe_pointwise_vadd coe_pointwise_vadd\n\n"}