{"star_ι":
 "@[simp]\ntheorem star_ι (m : M) : star (ι Q m) = -ι Q m := by rw [star_def, involute_ι, map_neg, reverse_ι]\n#align star_ι star_ι\n\n",
 "star_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- Note that this not match the `star_smul` implied by `star_module`; it certainly could if we\nalso conjugated all the scalars, but there appears to be nothing in the literature that advocates\ndoing this. -/\n@[simp]\ntheorem star_smul (r : R) (x : clifford_algebra Q) : star («expr • » r x) = «expr • » r (star x) := by\n  rw [star_def, star_def, map_smul, map_smul]\n#align star_smul star_smul\n\n",
 "star_def'":
 "theorem star_def' (x : clifford_algebra Q) : star x = involute (reverse x) :=\n  reverse_involute _\n#align star_def' star_def'\n\n",
 "star_def":
 "/-\nCopyright (c) 2022 Eric Wieser. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Eric Wieser\n-/\ntheorem star_def (x : clifford_algebra Q) : star x = reverse (involute x) :=\n  rfl\n#align star_def star_def\n\n",
 "star_algebra_map":
 "@[simp]\ntheorem star_algebra_map (r : R) : star (algebra_map R (clifford_algebra Q) r) = algebra_map R (clifford_algebra Q) r :=\n  by rw [star_def, involute.commutes, reverse.commutes]\n#align star_algebra_map star_algebra_map\n\n"}