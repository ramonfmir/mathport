{"ι_mul_ι":
 "-- this name is too short for us to want it visible after `open clifford_algebra_quaternion`\ntheorem ι_mul_ι (r₁ r₂) : ι (0 : quadratic_form R R) r₁ * ι (0 : quadratic_form R R) r₂ = 0 := by\n  rw [← mul_one r₁, ← mul_one r₂, ← smul_eq_mul R, ← smul_eq_mul R, linear_map.map_smul, linear_map.map_smul,\n    smul_mul_smul, ι_sq_scalar, quadratic_form.zero_apply, RingHom.map_zero, smul_zero]\n#align ι_mul_ι ι_mul_ι\n\n",
 "ι_eq_zero":
 "/-\nCopyright (c) 2021 Eric Wieser. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Eric Wieser\n-/\n@[simp]\ntheorem ι_eq_zero : ι (0 : quadratic_form R unit) = 0 :=\n  subsingleton.elim _ _\n#align ι_eq_zero ι_eq_zero\n\n",
 "to_quaternion_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[simp]\ntheorem to_quaternion_ι (v : R × R) : to_quaternion (ι (Q c₁ c₂) v) = (⟨0, v.1, v.2, 0⟩ : quaternion_algebra R c₁ c₂) :=\n  clifford_algebra.lift_ι_apply _ _ v\n#align to_quaternion_ι to_quaternion_ι\n\n",
 "to_quaternion_star":
 "/-- The \"clifford conjugate\" maps to the quaternion conjugate. -/\ntheorem to_quaternion_star (c : clifford_algebra (Q c₁ c₂)) :\n    to_quaternion (star c) = quaternion_algebra.conj (to_quaternion c) :=\n  by\n  simp only [clifford_algebra.star_def']\n  induction c using clifford_algebra.induction\n  case h_grade0 r =>\n    simp only [reverse.commutes, alg_hom.commutes, quaternion_algebra.coe_algebra_map, quaternion_algebra.conj_coe]\n  case h_grade1 x =>\n    rw [reverse_ι, involute_ι, to_quaternion_ι, alg_hom.map_neg, to_quaternion_ι, quaternion_algebra.neg_mk, conj_mk,\n      neg_zero]\n  case h_mul x₁ x₂ hx₁ hx₂ => simp only [reverse.map_mul, alg_hom.map_mul, hx₁, hx₂, quaternion_algebra.conj_mul]\n  case h_add x₁ x₂ hx₁ hx₂ => simp only [reverse.map_add, alg_hom.map_add, hx₁, hx₂, quaternion_algebra.conj_add]\n#align to_quaternion_star to_quaternion_star\n\n",
 "to_quaternion_of_quaternion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[simp]\ntheorem to_quaternion_of_quaternion (q : quaternion_algebra R c₁ c₂) : to_quaternion (of_quaternion q) = q :=\n  alg_hom.congr_fun (to_quaternion_comp_of_quaternion : _ = alg_hom.id R (quaternion_algebra R c₁ c₂)) q\n#align to_quaternion_of_quaternion to_quaternion_of_quaternion\n\n",
 "to_quaternion_comp_of_quaternion":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n@[simp]\ntheorem to_quaternion_comp_of_quaternion :\n    to_quaternion.comp of_quaternion = alg_hom.id R (quaternion_algebra R c₁ c₂) :=\n  by\n  apply quaternion_algebra.lift.symm.injective\n  ext1 <;> dsimp [quaternion_algebra.basis.lift] <;> simp\n#align to_quaternion_comp_of_quaternion to_quaternion_comp_of_quaternion\n\n",
 "to_complex_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem to_complex_ι (r : exprℝ) : to_complex (ι Q r) = «expr • » r complex.I :=\n  clifford_algebra.lift_ι_apply _ _ r\n#align to_complex_ι to_complex_ι\n\n",
 "to_complex_of_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem to_complex_of_complex (c : exprℂ) : to_complex (of_complex c) = c :=\n  alg_hom.congr_fun to_complex_comp_of_complex c\n#align to_complex_of_complex to_complex_of_complex\n\n",
 "to_complex_involute":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- `clifford_algebra.involute` is analogous to `complex.conj`. -/\n@[simp]\ntheorem to_complex_involute (c : clifford_algebra Q) : to_complex c.involute = (star_ring_end) (to_complex c) :=\n  by\n  have : to_complex (involute (ι Q 1)) = (star_ring_end) (to_complex (ι Q 1)) := by\n    simp only [involute_ι, to_complex_ι, alg_hom.map_neg, one_smul, complex.conj_I]\n  suffices to_complex.comp involute = complex.conj_ae.to_alg_hom.comp to_complex by exact alg_hom.congr_fun this c\n  ext : 2\n  exact this\n#align to_complex_involute to_complex_involute\n\n",
 "to_complex_comp_of_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n@[simp]\ntheorem to_complex_comp_of_complex : to_complex.comp of_complex = alg_hom.id (exprℝ) (exprℂ) :=\n  by\n  ext1\n  dsimp only [alg_hom.comp_apply, subtype.coe_mk, alg_hom.id_apply]\n  rw [of_complex_I, to_complex_ι, one_smul]\n#align to_complex_comp_of_complex to_complex_comp_of_complex\n\n",
 "reverse_eq_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem reverse_eq_id : (reverse : «expr →ₗ[ ] » (clifford_algebra Q) (exprℝ) _) = linear_map.id :=\n  linear_map.ext reverse_apply\n#align reverse_eq_id reverse_eq_id\n\n",
 "reverse_apply":
 "/-- `reverse` is a no-op over `clifford_algebra_complex.Q`. -/\ntheorem reverse_apply (x : clifford_algebra Q) : x.reverse = x :=\n  by\n  induction x using clifford_algebra.induction\n  case h_grade0 r => exact reverse.commutes _\n  case h_grade1 x => rw [reverse_ι]\n  case h_mul x₁ x₂ hx₁ hx₂ => rw [reverse.map_mul, mul_comm, hx₁, hx₂]\n  case h_add x₁ x₂ hx₁ hx₂ => rw [reverse.map_add, hx₁, hx₂]\n#align reverse_apply reverse_apply\n\n",
 "of_quaternion_to_quaternion":
 "@[simp]\ntheorem of_quaternion_to_quaternion (c : clifford_algebra (Q c₁ c₂)) : of_quaternion (to_quaternion c) = c :=\n  alg_hom.congr_fun (of_quaternion_comp_to_quaternion : _ = alg_hom.id R (clifford_algebra (Q c₁ c₂))) c\n#align of_quaternion_to_quaternion of_quaternion_to_quaternion\n\n",
 "of_quaternion_mk":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem of_quaternion_mk (a₁ a₂ a₃ a₄ : R) :\n    of_quaternion (⟨a₁, a₂, a₃, a₄⟩ : quaternion_algebra R c₁ c₂) =\n      algebra_map R _ a₁ + «expr • » a₂ (ι (Q c₁ c₂) (1, 0)) + «expr • » a₃ (ι (Q c₁ c₂) (0, 1)) +\n        «expr • » a₄ (ι (Q c₁ c₂) (1, 0) * ι (Q c₁ c₂) (0, 1)) :=\n  rfl\n#align of_quaternion_mk of_quaternion_mk\n\n",
 "of_quaternion_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `quaternion_algebra -/\n/-- The quaternion conjugate maps to the \"clifford conjugate\" (aka `star`). -/\n@[simp]\ntheorem of_quaternion_conj (q : quaternion_algebra R c₁ c₂) : of_quaternion q.conj = star (of_quaternion q) :=\n  clifford_algebra_quaternion.equiv.injective <| by\n    rw [equiv_apply, equiv_apply, to_quaternion_star, to_quaternion_of_quaternion, to_quaternion_of_quaternion]\n#align of_quaternion_conj of_quaternion_conj\n\n",
 "of_quaternion_comp_to_quaternion":
 "@[simp]\ntheorem of_quaternion_comp_to_quaternion :\n    of_quaternion.comp to_quaternion = alg_hom.id R (clifford_algebra (Q c₁ c₂)) :=\n  by\n  ext : 1\n  dsimp\n  -- before we end up with two goals and have to do this twice\n  ext\n  all_goals\n    dsimp\n    rw [to_quaternion_ι]\n    dsimp\n    simp only [to_quaternion_ι, zero_smul, one_smul, zero_add, add_zero, RingHom.map_zero]\n#align of_quaternion_comp_to_quaternion of_quaternion_comp_to_quaternion\n\n",
 "of_complex_to_complex":
 "@[simp]\ntheorem of_complex_to_complex (c : clifford_algebra Q) : of_complex (to_complex c) = c :=\n  alg_hom.congr_fun of_complex_comp_to_complex c\n#align of_complex_to_complex of_complex_to_complex\n\n",
 "of_complex_conj":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `star_ring_end -/\n/-- `complex.conj` is analogous to `clifford_algebra.involute`. -/\n@[simp]\ntheorem of_complex_conj (c : exprℂ) : of_complex ((star_ring_end) c) = (of_complex c).involute :=\n  clifford_algebra_complex.equiv.injective <| by\n    rw [equiv_apply, equiv_apply, to_complex_involute, to_complex_of_complex, to_complex_of_complex]\n#align of_complex_conj of_complex_conj\n\n",
 "of_complex_comp_to_complex":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n@[simp]\ntheorem of_complex_comp_to_complex : of_complex.comp to_complex = alg_hom.id (exprℝ) (clifford_algebra Q) :=\n  by\n  ext\n  dsimp only [linear_map.comp_apply, subtype.coe_mk, alg_hom.id_apply, alg_hom.to_linear_map_apply, alg_hom.comp_apply]\n  rw [to_complex_ι, one_smul, of_complex_I]\n#align of_complex_comp_to_complex of_complex_comp_to_complex\n\n",
 "of_complex_I":
 "@[simp]\ntheorem of_complex_I : of_complex complex.I = ι Q 1 :=\n  complex.lift_aux_apply_I _ _\n#align of_complex_I of_complex_I\n\n",
 "involute_eq_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n@[simp]\ntheorem involute_eq_id :\n    (involute : «expr →ₐ[ ] » (clifford_algebra (0 : quadratic_form R unit)) R _) = alg_hom.id R _ :=\n  by\n  ext\n  simp\n#align involute_eq_id involute_eq_id\n\n",
 "equiv_ι":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dual_number.eps -/\n@[simp]\ntheorem equiv_ι (r : R) : clifford_algebra_dual_number.equiv (ι _ r) = «expr • » r (dual_number.eps) :=\n  (lift_ι_apply _ _ r).trans (inr_eq_smul_eps _)\n#align equiv_ι equiv_ι\n\n",
 "equiv_symm_eps":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dual_number -/\n@[simp]\ntheorem equiv_symm_eps : clifford_algebra_dual_number.equiv.symm (eps : dual_number R) = ι (0 : quadratic_form R R) 1 :=\n  dual_number.lift_apply_eps _\n#align equiv_symm_eps equiv_symm_eps\n\n",
 "Q_apply":
 "-- this name is too short for us to want it visible after `open clifford_algebra_complex`\n@[simp]\ntheorem Q_apply (v : R × R) : Q c₁ c₂ v = c₁ * (v.1 * v.1) + c₂ * (v.2 * v.2) :=\n  rfl\n#align Q_apply Q_apply\n\n"}