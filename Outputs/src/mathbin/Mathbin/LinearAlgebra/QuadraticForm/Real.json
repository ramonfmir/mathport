{"equivalent_one_zero_neg_one_weighted_sum_squared":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-- **Sylvester's law of inertia**: A real quadratic form is equivalent to a weighted\nsum of squares with the weights being ±1 or 0. -/\ntheorem equivalent_one_zero_neg_one_weighted_sum_squared {M : Type _} [AddCommGroup M] [Module (exprℝ) M]\n    [FiniteDimensional (exprℝ) M] (Q : quadratic_form (exprℝ) M) :\n    ∃ w : Fin (FiniteDimensional.finrank (exprℝ) M) → exprℝ,\n      (∀ i, w i = -1 ∨ w i = 0 ∨ w i = 1) ∧ equivalent Q (weighted_sum_squares (exprℝ) w) :=\n  let ⟨w, ⟨hw₁⟩⟩ := Q.equivalent_weighted_sum_squares\n  ⟨SignType.sign ∘ coe ∘ w, fun i => sign_apply_eq (w i), ⟨hw₁.trans (isometry_sign_weighted_sum_squares w)⟩⟩\n#align equivalent_one_zero_neg_one_weighted_sum_squared equivalent_one_zero_neg_one_weighted_sum_squared\n\n",
 "equivalent_one_neg_one_weighted_sum_squared":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/-\nCopyright (c) 2020 Anne Baanen. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Anne Baanen, Kexing Ying, Eric Wieser\n-/\n/-- **Sylvester's law of inertia**: A nondegenerate real quadratic form is equivalent to a weighted\nsum of squares with the weights being ±1. -/\ntheorem equivalent_one_neg_one_weighted_sum_squared {M : Type _} [AddCommGroup M] [Module (exprℝ) M]\n    [FiniteDimensional (exprℝ) M] (Q : quadratic_form (exprℝ) M) (hQ : (associated Q).nondegenerate) :\n    ∃ w : Fin (FiniteDimensional.finrank (exprℝ) M) → exprℝ,\n      (∀ i, w i = -1 ∨ w i = 1) ∧ equivalent Q (weighted_sum_squares (exprℝ) w) :=\n  let ⟨w, ⟨hw₁⟩⟩ := Q.equivalent_weighted_sum_squares_units_of_nondegenerate' hQ\n  ⟨SignType.sign ∘ coe ∘ w, fun i => sign_apply_eq_of_ne_zero (w i) (w i).ne_zero,\n    ⟨hw₁.trans (isometry_sign_weighted_sum_squares (coe ∘ w))⟩⟩\n#align equivalent_one_neg_one_weighted_sum_squared equivalent_one_neg_one_weighted_sum_squared\n\n"}