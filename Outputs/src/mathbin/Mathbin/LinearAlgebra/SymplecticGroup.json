{"transpose_mem_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n@[simp]\ntheorem transpose_mem_iff : matrix.transpose A ∈ symplecticGroup l R ↔ A ∈ symplecticGroup l R :=\n  ⟨fun hA => by simpa using transpose_mem hA, transpose_mem⟩\n#align transpose_mem_iff transpose_mem_iff\n\n",
 "transpose_mem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem transpose_mem (hA : A ∈ symplecticGroup l R) : matrix.transpose A ∈ symplecticGroup l R :=\n  by\n  rw [mem_iff] at hA⊢\n  rw [transpose_transpose]\n  have huA := symplectic_det hA\n  have huAT : IsUnit (matrix.transpose A).det :=\n    by\n    rw [Matrix.det_transpose]\n    exact huA\n  calc\n    matrix.mul (matrix.mul (matrix.transpose A) (J l R)) A =\n        matrix.mul (matrix.mul (-matrix.transpose A) (J l R)⁻¹) A :=\n      by\n      rw [J_inv]\n      simp\n    _ = matrix.mul (matrix.mul (-matrix.transpose A) (matrix.mul (matrix.mul A (J l R)) (matrix.transpose A))⁻¹) A := by\n      rw [hA]\n    _ =\n        matrix.mul (matrix.mul (-matrix.mul (matrix.transpose A) (matrix.mul (matrix.transpose A)⁻¹ (J l R)⁻¹)) A⁻¹)\n          A :=\n      by simp only [Matrix.mul_inv_rev, Matrix.mul_assoc, Matrix.neg_mul]\n    _ = -(J l R)⁻¹ := by rw [mul_nonsing_inv_cancel_left _ _ huAT, nonsing_inv_mul_cancel_right _ _ huA]\n    _ = J l R := by simp [J_inv]\n    \n#align transpose_mem transpose_mem\n\n",
 "symplectic_det":
 "theorem symplectic_det (hA : A ∈ symplecticGroup l R) : IsUnit <| det A :=\n  by\n  rw [isUnit_iff_exists_inv]\n  use A.det\n  refine' (is_unit_det_J l R).mul_left_cancel _\n  rw [mul_one]\n  rw [mem_iff] at hA\n  apply_fun det  at hA\n  simp only [det_mul, det_transpose] at hA\n  rw [mul_comm A.det, mul_assoc] at hA\n  exact hA\n#align symplectic_det symplectic_det\n\n",
 "neg_mem":
 "theorem neg_mem (h : A ∈ symplecticGroup l R) : -A ∈ symplecticGroup l R :=\n  by\n  rw [mem_iff] at h⊢\n  simp [h]\n#align neg_mem neg_mem\n\n",
 "mem_iff'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem mem_iff' : A ∈ symplecticGroup l R ↔ matrix.mul (matrix.mul (matrix.transpose A) (J l R)) A = J l R := by\n  rw [← transpose_mem_iff, mem_iff, transpose_transpose]\n#align mem_iff' mem_iff'\n\n",
 "mem_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem mem_iff {A : Matrix (Sum l l) (Sum l l) R} :\n    A ∈ symplecticGroup l R ↔ matrix.mul (matrix.mul A (J l R)) (matrix.transpose A) = J l R := by\n  simp [symplectic_group]\n#align mem_iff mem_iff\n\n",
 "is_unit_det_J":
 "theorem is_unit_det_J : IsUnit (det (J l R)) :=\n  isUnit_iff_exists_inv.mpr ⟨det (J l R), J_det_mul_J_det _ _⟩\n#align is_unit_det_J is_unit_det_J\n\n",
 "inv_left_mul_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem inv_left_mul_aux (hA : A ∈ symplecticGroup l R) :\n    -matrix.mul (matrix.mul (matrix.mul (J l R) (matrix.transpose A)) (J l R)) A = 1 :=\n  calc\n    -matrix.mul (matrix.mul (matrix.mul (J l R) (matrix.transpose A)) (J l R)) A =\n        matrix.mul (-J l R) (matrix.mul (matrix.mul (matrix.transpose A) (J l R)) A) :=\n      by simp only [Matrix.mul_assoc, Matrix.neg_mul]\n    _ = matrix.mul (-J l R) (J l R) := by\n      rw [mem_iff'] at hA\n      rw [hA]\n    _ = «expr • » (-1 : R) (matrix.mul (J l R) (J l R)) := by simp only [Matrix.neg_mul, neg_smul, one_smul]\n    _ = «expr • » (-1 : R) (-1) := by rw [J_squared]\n    _ = 1 := by simp only [neg_smul_neg, one_smul]\n    \n#align inv_left_mul_aux inv_left_mul_aux\n\n",
 "inv_eq_symplectic_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem inv_eq_symplectic_inv (A : Matrix (Sum l l) (Sum l l) R) (hA : A ∈ symplecticGroup l R) :\n    A⁻¹ = matrix.mul (matrix.mul (-J l R) (matrix.transpose A)) (J l R) :=\n  inv_eq_left_inv (by simp only [Matrix.neg_mul, inv_left_mul_aux hA])\n#align inv_eq_symplectic_inv inv_eq_symplectic_inv\n\n",
 "coe_inv'":
 "theorem coe_inv' (A : symplecticGroup l R) : (↑A⁻¹ : Matrix (Sum l l) (Sum l l) R) = A⁻¹ :=\n  by\n  refine' (coe_inv A).trans (inv_eq_left_inv _).symm\n  simp [inv_left_mul_aux, coe_inv]\n#align coe_inv' coe_inv'\n\n",
 "coe_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem coe_inv (A : symplecticGroup l R) :\n    (↑A⁻¹ : Matrix _ _ _) = matrix.mul (matrix.mul (-J l R) (matrix.transpose ↑A)) (J l R) :=\n  rfl\n#align coe_inv coe_inv\n\n",
 "coe_J":
 "@[simp]\ntheorem coe_J : ↑(symJ l R) = J l R :=\n  rfl\n#align coe_J coe_J\n\n",
 "J_transpose":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/-\nCopyright (c) 2022 Matej Penciak. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Matej Penciak, Moritz Doll, Fabien Clery\n-/\n@[simp]\ntheorem J_transpose : matrix.transpose (J l R) = -J l R :=\n  by\n  rw [J, from_blocks_transpose, ← neg_one_smul R (from_blocks _ _ _ _), from_blocks_smul, Matrix.transpose_zero,\n    Matrix.transpose_one, transpose_neg]\n  simp [from_blocks]\n#align J_transpose J_transpose\n\n",
 "J_squared":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem J_squared : matrix.mul (J l R) (J l R) = -1 :=\n  by\n  rw [J, from_blocks_multiply]\n  simp only [Matrix.zero_mul, Matrix.neg_mul, zero_add, neg_zero, Matrix.one_mul, add_zero]\n  rw [← neg_zero, ← Matrix.fromBlocks_neg, ← from_blocks_one]\n#align J_squared J_squared\n\n",
 "J_mem":
 "theorem J_mem : J l R ∈ symplecticGroup l R :=\n  by\n  rw [mem_iff, J, from_blocks_multiply, from_blocks_transpose, from_blocks_multiply]\n  simp\n#align J_mem J_mem\n\n",
 "J_inv":
 "theorem J_inv : (J l R)⁻¹ = -J l R := by\n  refine' Matrix.inv_eq_right_inv _\n  rw [Matrix.mul_neg, J_squared]\n  exact neg_neg 1\n#align J_inv J_inv\n\n",
 "J_det_mul_J_det":
 "theorem J_det_mul_J_det : det (J l R) * det (J l R) = 1 :=\n  by\n  rw [← det_mul, J_squared]\n  rw [← one_smul R (-1 : Matrix _ _ R)]\n  rw [smul_neg, ← neg_smul, det_smul]\n  simp only [Fintype.card_sum, det_one, mul_one]\n  apply Even.neg_one_pow\n  exact even_add_self _\n#align J_det_mul_J_det J_det_mul_J_det\n\n"}