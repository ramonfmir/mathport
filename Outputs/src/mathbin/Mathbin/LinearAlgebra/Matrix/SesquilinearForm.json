{"to_matrixₛₗ₂'_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n@[simp]\ntheorem linear_map.to_matrixₛₗ₂'_symm :\n    (linear_map.to_matrixₛₗ₂'.symm : «expr ≃ₗ[ ] » (Matrix n m R) R _) = matrix.to_linear_mapₛₗ₂' σ₁ σ₂ :=\n  rfl\n#align linear_map.to_matrixₛₗ₂'_symm linear_map.to_matrixₛₗ₂'_symm\n\n",
 "to_matrixₛₗ₂'_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n@[simp]\ntheorem linear_map.to_matrixₛₗ₂'_apply (B : «expr →ₛₗ[ ] » (n → R₁) σ₁ («expr →ₛₗ[ ] » (m → R₂) σ₂ R)) (i : n) (j : m) :\n    linear_map.to_matrixₛₗ₂' B i j = B (stdBasis R₁ (fun _ => R₁) i 1) (stdBasis R₂ (fun _ => R₂) j 1) :=\n  rfl\n#align linear_map.to_matrixₛₗ₂'_apply linear_map.to_matrixₛₗ₂'_apply\n\n",
 "to_matrix₂_to_linear_map₂":
 "@[simp]\ntheorem linear_map.to_matrix₂_to_linear_map₂ (M : Matrix n m R) :\n    linear_map.to_matrix₂ b₁ b₂ (matrix.to_linear_map₂ b₁ b₂ M) = M :=\n  (linear_map.to_matrix₂ b₁ b₂).apply_symm_apply M\n#align linear_map.to_matrix₂_to_linear_map₂ linear_map.to_matrix₂_to_linear_map₂\n\n",
 "to_matrix₂_symm":
 "@[simp]\ntheorem linear_map.to_matrix₂_symm : (linear_map.to_matrix₂ b₁ b₂).symm = matrix.to_linear_map₂ b₁ b₂ :=\n  rfl\n#align linear_map.to_matrix₂_symm linear_map.to_matrix₂_symm\n\n",
 "to_matrix₂_mul_basis_to_matrix":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n@[simp]\ntheorem linear_map.to_matrix₂_mul_basis_to_matrix (c₁ : Basis n' R M₁) (c₂ : Basis m' R M₂)\n    (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) :\n    matrix.mul (matrix.mul (matrix.transpose (b₁.to_matrix c₁)) (linear_map.to_matrix₂ b₁ b₂ B)) (b₂.to_matrix c₂) =\n      linear_map.to_matrix₂ c₁ c₂ B :=\n  by\n  simp_rw [← LinearMap.toMatrix_id_eq_basis_toMatrix]\n  rw [← linear_map.to_matrix₂_compl₁₂, LinearMap.compl₁₂_id_id]\n#align linear_map.to_matrix₂_mul_basis_to_matrix linear_map.to_matrix₂_mul_basis_to_matrix\n\n",
 "to_matrix₂_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem linear_map.to_matrix₂_mul (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) (M : Matrix m m' R) :\n    matrix.mul (linear_map.to_matrix₂ b₁ b₂ B) M = linear_map.to_matrix₂ b₁ b₂' (B.compl₂ (toLin b₂' b₂ M)) := by\n  rw [linear_map.to_matrix₂_compl₂ b₁, to_matrix_to_lin]\n#align linear_map.to_matrix₂_mul linear_map.to_matrix₂_mul\n\n",
 "to_matrix₂_compl₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem linear_map.to_matrix₂_compl₂ (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) (f : «expr →ₗ[ ] » M₂' R M₂) :\n    linear_map.to_matrix₂ b₁ b₂' (B.compl₂ f) = matrix.mul (linear_map.to_matrix₂ b₁ b₂ B) (toMatrix b₂' b₂ f) :=\n  by\n  rw [← LinearMap.comp_id B, ← LinearMap.compl₁₂, linear_map.to_matrix₂_compl₁₂ b₁ b₂]\n  simp\n#align linear_map.to_matrix₂_compl₂ linear_map.to_matrix₂_compl₂\n\n",
 "to_matrix₂_compl₁₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n-- Cannot be a `simp` lemma because `b₁` and `b₂` must be inferred.\ntheorem linear_map.to_matrix₂_compl₁₂ (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) (l : «expr →ₗ[ ] » M₁' R M₁)\n    (r : «expr →ₗ[ ] » M₂' R M₂) :\n    linear_map.to_matrix₂ b₁' b₂' (B.compl₁₂ l r) =\n      matrix.mul (matrix.mul (matrix.transpose (toMatrix b₁' b₁ l)) (linear_map.to_matrix₂ b₁ b₂ B))\n        (toMatrix b₂' b₂ r) :=\n  by\n  ext (i j)\n  simp only [linear_map.to_matrix₂_apply, compl₁₂_apply, transpose_apply, Matrix.mul_apply, LinearMap.toMatrix_apply,\n    LinearEquiv.coe_mk, sum_mul]\n  rw [sum_comm]\n  conv_lhs => rw [← LinearMap.sum_repr_mul_repr_mul b₁ b₂]\n  rw [Finsupp.sum_fintype]\n  · apply sum_congr rfl\n    rintro i' -\n    rw [Finsupp.sum_fintype]\n    · apply sum_congr rfl\n      rintro j' -\n      simp only [smul_eq_mul, LinearMap.toMatrix_apply, Basis.equivFun_apply, mul_assoc, mul_comm, mul_left_comm]\n    · intros\n      simp only [zero_smul, smul_zero]\n  · intros\n    simp only [zero_smul, Finsupp.sum_zero]\n#align linear_map.to_matrix₂_compl₁₂ linear_map.to_matrix₂_compl₁₂\n\n",
 "to_matrix₂_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem linear_map.to_matrix₂_comp (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) (f : «expr →ₗ[ ] » M₁' R M₁) :\n    linear_map.to_matrix₂ b₁' b₂ (B.comp f) =\n      matrix.mul (matrix.transpose (toMatrix b₁' b₁ f)) (linear_map.to_matrix₂ b₁ b₂ B) :=\n  by\n  rw [← LinearMap.compl₂_id (B.comp f), ← LinearMap.compl₁₂, linear_map.to_matrix₂_compl₁₂ b₁ b₂]\n  simp\n#align linear_map.to_matrix₂_comp linear_map.to_matrix₂_comp\n\n",
 "to_matrix₂_basis_fun":
 "theorem linear_map.to_matrix₂_basis_fun :\n    linear_map.to_matrix₂ (Pi.basisFun R n) (Pi.basisFun R m) = linear_map.to_matrix₂' :=\n  by\n  ext B\n  rw [linear_map.to_matrix₂_apply, linear_map.to_matrix₂'_apply, Pi.basisFun_apply, Pi.basisFun_apply]\n#align linear_map.to_matrix₂_basis_fun linear_map.to_matrix₂_basis_fun\n\n",
 "to_matrix₂_aux_to_linear_map₂'_aux":
 "theorem matrix.to_matrix₂_aux_to_linear_map₂'_aux (f : Matrix n m R) :\n    linear_map.to_matrix₂_aux (fun i => stdBasis R₁ (fun _ => R₁) i 1) (fun j => stdBasis R₂ (fun _ => R₂) j 1)\n        (f.to_linear_map₂'_aux σ₁ σ₂) =\n      f :=\n  by\n  ext (i j)\n  simp_rw [linear_map.to_matrix₂_aux_apply, matrix.to_linear_map₂'_aux_std_basis]\n#align matrix.to_matrix₂_aux_to_linear_map₂'_aux matrix.to_matrix₂_aux_to_linear_map₂'_aux\n\n",
 "to_matrix₂_aux_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n-- Not a `simp` lemma since `linear_map.to_matrix₂` needs an extra argument\ntheorem linear_map.to_matrix₂_aux_eq (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) :\n    linear_map.to_matrix₂_aux b₁ b₂ B = linear_map.to_matrix₂ b₁ b₂ B :=\n  ext fun i j => by rw [linear_map.to_matrix₂_apply, linear_map.to_matrix₂_aux_apply]\n#align linear_map.to_matrix₂_aux_eq linear_map.to_matrix₂_aux_eq\n\n",
 "to_matrix₂_aux_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n@[simp]\ntheorem linear_map.to_matrix₂_aux_apply (f : «expr →ₛₗ[ ] » M₁ σ₁ («expr →ₛₗ[ ] » M₂ σ₂ R)) (b₁ : n → M₁) (b₂ : m → M₂)\n    (i : n) (j : m) : linear_map.to_matrix₂_aux b₁ b₂ f i j = f (b₁ i) (b₂ j) :=\n  rfl\n#align linear_map.to_matrix₂_aux_apply linear_map.to_matrix₂_aux_apply\n\n",
 "to_matrix₂_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n-- We make this and not `linear_map.to_matrix₂` a `simp` lemma to avoid timeouts\n@[simp]\ntheorem linear_map.to_matrix₂_apply (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) (i : n) (j : m) :\n    linear_map.to_matrix₂ b₁ b₂ B i j = B (b₁ i) (b₂ j) := by\n  simp only [linear_map.to_matrix₂, LinearEquiv.trans_apply, linear_map.to_matrix₂'_apply, LinearEquiv.trans_apply,\n    linear_map.to_matrix₂'_apply, LinearEquiv.arrowCongr_apply, Basis.equivFun_symm_stdBasis, LinearEquiv.refl_apply]\n#align linear_map.to_matrix₂_apply linear_map.to_matrix₂_apply\n\n",
 "to_matrix₂'_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem linear_map.to_matrix₂'_mul (B : «expr →ₗ[ ] » (n → R) R («expr →ₗ[ ] » (m → R) R R)) (M : Matrix m m' R) :\n    matrix.mul B.to_matrix₂' M = (B.compl₂ M.to_lin').to_matrix₂' := by\n  simp only [B.to_matrix₂'_compl₂, to_matrix'_to_lin']\n#align linear_map.to_matrix₂'_mul linear_map.to_matrix₂'_mul\n\n",
 "to_matrix₂'_compl₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem linear_map.to_matrix₂'_compl₂ (B : «expr →ₗ[ ] » (n → R) R («expr →ₗ[ ] » (m → R) R R))\n    (f : «expr →ₗ[ ] » (m' → R) R (m → R)) : (B.compl₂ f).to_matrix₂' = matrix.mul B.to_matrix₂' f.to_matrix' :=\n  by\n  rw [← LinearMap.comp_id B, ← LinearMap.compl₁₂]\n  simp\n#align linear_map.to_matrix₂'_compl₂ linear_map.to_matrix₂'_compl₂\n\n",
 "to_matrix₂'_compl₁₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n@[simp]\ntheorem linear_map.to_matrix₂'_compl₁₂ (B : «expr →ₗ[ ] » (n → R) R («expr →ₗ[ ] » (m → R) R R))\n    (l : «expr →ₗ[ ] » (n' → R) R (n → R)) (r : «expr →ₗ[ ] » (m' → R) R (m → R)) :\n    (B.compl₁₂ l r).to_matrix₂' = matrix.mul (matrix.mul (matrix.transpose l.to_matrix') B.to_matrix₂') r.to_matrix' :=\n  by\n  ext (i j)\n  simp only [linear_map.to_matrix₂'_apply, LinearMap.compl₁₂_apply, transpose_apply, Matrix.mul_apply,\n    LinearMap.toMatrix', LinearEquiv.coe_mk, sum_mul]\n  rw [sum_comm]\n  conv_lhs => rw [← LinearMap.sum_repr_mul_repr_mul (Pi.basisFun R n) (Pi.basisFun R m) (l _) (r _)]\n  rw [Finsupp.sum_fintype]\n  · apply sum_congr rfl\n    rintro i' -\n    rw [Finsupp.sum_fintype]\n    · apply sum_congr rfl\n      rintro j' -\n      simp only [smul_eq_mul, Pi.basisFun_repr, mul_assoc, mul_comm, mul_left_comm, Pi.basisFun_apply, of_apply]\n    · intros\n      simp only [zero_smul, smul_zero]\n  · intros\n    simp only [zero_smul, Finsupp.sum_zero]\n#align linear_map.to_matrix₂'_compl₁₂ linear_map.to_matrix₂'_compl₁₂\n\n",
 "to_matrix₂'_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem linear_map.to_matrix₂'_comp (B : «expr →ₗ[ ] » (n → R) R («expr →ₗ[ ] » (m → R) R R))\n    (f : «expr →ₗ[ ] » (n' → R) R (n → R)) :\n    (B.comp f).to_matrix₂' = matrix.mul (matrix.transpose f.to_matrix') B.to_matrix₂' :=\n  by\n  rw [← LinearMap.compl₂_id (B.comp f), ← LinearMap.compl₁₂]\n  simp\n#align linear_map.to_matrix₂'_comp linear_map.to_matrix₂'_comp\n\n",
 "to_matrix₂'_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem linear_map.to_matrix₂'_apply (B : «expr →ₗ[ ] » (n → R) R («expr →ₗ[ ] » (m → R) R R)) (i : n) (j : m) :\n    linear_map.to_matrix₂' B i j = B (stdBasis R (fun _ => R) i 1) (stdBasis R (fun _ => R) j 1) :=\n  rfl\n#align linear_map.to_matrix₂'_apply linear_map.to_matrix₂'_apply\n\n",
 "to_matrix₂'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem separating_left.to_matrix₂' {B : «expr →ₗ[ ] » (ι → R₁) R₁ («expr →ₗ[ ] » (ι → R₁) R₁ R₁)}\n    (h : B.separating_left) : B.to_matrix₂'.nondegenerate :=\n  nondegenerate_to_matrix₂'_iff.mpr h\n#align separating_left.to_matrix₂' separating_left.to_matrix₂'\n\n",
 "to_matrix₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem separating_left.to_matrix₂ {B : «expr →ₗ[ ] » M₁ R₁ («expr →ₗ[ ] » M₁ R₁ R₁)} (h : B.separating_left)\n    (b : Basis ι R₁ M₁) : (to_matrix₂ b b B).nondegenerate :=\n  (nondegenerate_to_matrix_iff b).mpr h\n#align separating_left.to_matrix₂ separating_left.to_matrix₂\n\n",
 "to_matrix'_to_linear_mapₛₗ₂'":
 "@[simp]\ntheorem linear_map.to_matrix'_to_linear_mapₛₗ₂' (M : Matrix n m R) :\n    linear_map.to_matrixₛₗ₂' (matrix.to_linear_mapₛₗ₂' σ₁ σ₂ M) = M :=\n  linear_map.to_matrixₛₗ₂'.apply_symm_apply M\n#align linear_map.to_matrix'_to_linear_mapₛₗ₂' linear_map.to_matrix'_to_linear_mapₛₗ₂'\n\n",
 "to_matrix'_to_linear_map₂'":
 "@[simp]\ntheorem linear_map.to_matrix'_to_linear_map₂' (M : Matrix n m R) :\n    linear_map.to_matrix₂' (matrix.to_linear_map₂' M) = M :=\n  linear_map.to_matrixₛₗ₂'.apply_symm_apply M\n#align linear_map.to_matrix'_to_linear_map₂' linear_map.to_matrix'_to_linear_map₂'\n\n",
 "to_linear_mapₛₗ₂'_to_matrix'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n@[simp]\ntheorem matrix.to_linear_mapₛₗ₂'_to_matrix' (B : «expr →ₛₗ[ ] » (n → R₁) σ₁ («expr →ₛₗ[ ] » (m → R₂) σ₂ R)) :\n    matrix.to_linear_mapₛₗ₂' σ₁ σ₂ (linear_map.to_matrixₛₗ₂' B) = B :=\n  (matrix.to_linear_mapₛₗ₂' σ₁ σ₂).apply_symm_apply B\n#align matrix.to_linear_mapₛₗ₂'_to_matrix' matrix.to_linear_mapₛₗ₂'_to_matrix'\n\n",
 "to_linear_mapₛₗ₂'_symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n@[simp]\ntheorem matrix.to_linear_mapₛₗ₂'_symm :\n    ((matrix.to_linear_mapₛₗ₂' σ₁ σ₂).symm : «expr ≃ₗ[ ] » _ R (Matrix n m R)) = linear_map.to_matrixₛₗ₂' :=\n  linear_map.to_matrixₛₗ₂'.symm_symm\n#align matrix.to_linear_mapₛₗ₂'_symm matrix.to_linear_mapₛₗ₂'_symm\n\n",
 "to_linear_mapₛₗ₂'_std_basis":
 "@[simp]\ntheorem matrix.to_linear_mapₛₗ₂'_std_basis (M : Matrix n m R) (i : n) (j : m) :\n    matrix.to_linear_mapₛₗ₂' σ₁ σ₂ M (stdBasis R₁ (fun _ => R₁) i 1) (stdBasis R₂ (fun _ => R₂) j 1) = M i j :=\n  matrix.to_linear_map₂'_aux_std_basis σ₁ σ₂ M i j\n#align matrix.to_linear_mapₛₗ₂'_std_basis matrix.to_linear_mapₛₗ₂'_std_basis\n\n",
 "to_linear_mapₛₗ₂'_aux_eq":
 "theorem matrix.to_linear_mapₛₗ₂'_aux_eq (M : Matrix n m R) :\n    matrix.to_linear_map₂'_aux σ₁ σ₂ M = matrix.to_linear_mapₛₗ₂' σ₁ σ₂ M :=\n  rfl\n#align matrix.to_linear_mapₛₗ₂'_aux_eq matrix.to_linear_mapₛₗ₂'_aux_eq\n\n",
 "to_linear_mapₛₗ₂'_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem matrix.to_linear_mapₛₗ₂'_apply (M : Matrix n m R) (x : n → R₁) (y : m → R₂) :\n    matrix.to_linear_mapₛₗ₂' σ₁ σ₂ M x y =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (σ₁ (x i) * M i j * σ₂ (y j)) :=\n  rfl\n#align matrix.to_linear_mapₛₗ₂'_apply matrix.to_linear_mapₛₗ₂'_apply\n\n",
 "to_linear_map₂_to_matrix₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem matrix.to_linear_map₂_to_matrix₂ (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) :\n    matrix.to_linear_map₂ b₁ b₂ (linear_map.to_matrix₂ b₁ b₂ B) = B :=\n  (matrix.to_linear_map₂ b₁ b₂).apply_symm_apply B\n#align matrix.to_linear_map₂_to_matrix₂ matrix.to_linear_map₂_to_matrix₂\n\n",
 "to_linear_map₂_symm":
 "@[simp]\ntheorem matrix.to_linear_map₂_symm : (matrix.to_linear_map₂ b₁ b₂).symm = linear_map.to_matrix₂ b₁ b₂ :=\n  (linear_map.to_matrix₂ b₁ b₂).symm_symm\n#align matrix.to_linear_map₂_symm matrix.to_linear_map₂_symm\n\n",
 "to_linear_map₂_compl₁₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem matrix.to_linear_map₂_compl₁₂ (M : Matrix n m R) (P : Matrix n n' R) (Q : Matrix m m' R) :\n    (matrix.to_linear_map₂ b₁ b₂ M).compl₁₂ (toLin b₁' b₁ P) (toLin b₂' b₂ Q) =\n      matrix.to_linear_map₂ b₁' b₂' (matrix.mul (matrix.mul (matrix.transpose P) M) Q) :=\n  (linear_map.to_matrix₂ b₁' b₂').injective\n    (by simp only [linear_map.to_matrix₂_compl₁₂ b₁ b₂, linear_map.to_matrix₂_to_linear_map₂, to_matrix_to_lin])\n#align matrix.to_linear_map₂_compl₁₂ matrix.to_linear_map₂_compl₁₂\n\n",
 "to_linear_map₂_basis_fun":
 "theorem matrix.to_linear_map₂_basis_fun :\n    matrix.to_linear_map₂ (Pi.basisFun R n) (Pi.basisFun R m) = matrix.to_linear_map₂' :=\n  by\n  ext M\n  simp only [matrix.to_linear_map₂_apply, matrix.to_linear_map₂'_apply, Pi.basisFun_repr, coe_comp, Function.comp_apply]\n#align matrix.to_linear_map₂_basis_fun matrix.to_linear_map₂_basis_fun\n\n",
 "to_linear_map₂_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n@[simp]\ntheorem matrix.to_linear_map₂_apply (M : Matrix n m R) (x : M₁) (y : M₂) :\n    matrix.to_linear_map₂ b₁ b₂ M x y =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (b₁.repr x i * M i j * b₂.repr y j) :=\n  rfl\n#align matrix.to_linear_map₂_apply matrix.to_linear_map₂_apply\n\n",
 "to_linear_map₂'_to_matrix'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem matrix.to_linear_map₂'_to_matrix' (B : «expr →ₗ[ ] » (n → R) R («expr →ₗ[ ] » (m → R) R R)) :\n    matrix.to_linear_map₂' (linear_map.to_matrix₂' B) = B :=\n  matrix.to_linear_map₂'.apply_symm_apply B\n#align matrix.to_linear_map₂'_to_matrix' matrix.to_linear_map₂'_to_matrix'\n\n",
 "to_linear_map₂'_std_basis":
 "@[simp]\ntheorem matrix.to_linear_map₂'_std_basis (M : Matrix n m R) (i : n) (j : m) :\n    matrix.to_linear_map₂' M (stdBasis R (fun _ => R) i 1) (stdBasis R (fun _ => R) j 1) = M i j :=\n  matrix.to_linear_map₂'_aux_std_basis _ _ M i j\n#align matrix.to_linear_map₂'_std_basis matrix.to_linear_map₂'_std_basis\n\n",
 "to_linear_map₂'_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem matrix.to_linear_map₂'_comp (M : Matrix n m R) (P : Matrix n n' R) (Q : Matrix m m' R) :\n    M.to_linear_map₂'.compl₁₂ P.to_lin' Q.to_lin' =\n      (matrix.mul (matrix.mul (matrix.transpose P) M) Q).to_linear_map₂' :=\n  linear_map.to_matrix₂'.injective (by simp)\n#align matrix.to_linear_map₂'_comp matrix.to_linear_map₂'_comp\n\n",
 "to_linear_map₂'_aux_to_matrix₂_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₛₗ[ ] » -/\ntheorem linear_map.to_linear_map₂'_aux_to_matrix₂_aux (f : «expr →ₛₗ[ ] » (n → R₁) σ₁ («expr →ₛₗ[ ] » (m → R₂) σ₂ R)) :\n    matrix.to_linear_map₂'_aux σ₁ σ₂\n        (linear_map.to_matrix₂_aux (fun i => stdBasis R₁ (fun _ => R₁) i 1) (fun j => stdBasis R₂ (fun _ => R₂) j 1)\n          f) =\n      f :=\n  by\n  refine' ext_basis (Pi.basisFun R₁ n) (Pi.basisFun R₂ m) fun i j => _\n  simp_rw [Pi.basisFun_apply, matrix.to_linear_map₂'_aux_std_basis, linear_map.to_matrix₂_aux_apply]\n#align linear_map.to_linear_map₂'_aux_to_matrix₂_aux linear_map.to_linear_map₂'_aux_to_matrix₂_aux\n\n",
 "to_linear_map₂'_aux_std_basis":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\n/-\nCopyright (c) 2020 Anne Baanen. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Anne Baanen, Kexing Ying, Moritz Doll\n-/\ntheorem matrix.to_linear_map₂'_aux_std_basis (f : Matrix n m R) (i : n) (j : m) :\n    f.to_linear_map₂'_aux σ₁ σ₂ (stdBasis R₁ (fun _ => R₁) i 1) (stdBasis R₂ (fun _ => R₂) j 1) = f i j :=\n  by\n  rw [matrix.to_linear_map₂'_aux, mk₂'ₛₗ_apply]\n  have :\n    finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        ((if i = i' then 1 else 0) * f i' j' * if j = j' then 1 else 0) =\n      f i j :=\n    by\n    simp_rw [mul_assoc, ← Finset.mul_sum]\n    simp only [boole_mul, Finset.sum_ite_eq, Finset.mem_univ, if_true, mul_comm (f _ _)]\n  rw [← this]\n  exact Finset.sum_congr rfl fun _ _ => Finset.sum_congr rfl fun _ _ => by simp\n#align matrix.to_linear_map₂'_aux_std_basis matrix.to_linear_map₂'_aux_std_basis\n\n",
 "to_linear_map₂'_apply'":
 "theorem matrix.to_linear_map₂'_apply' (M : Matrix n m R) (v : n → R) (w : m → R) :\n    matrix.to_linear_map₂' M v w = Matrix.dotProduct v (M.mul_vec w) :=\n  by\n  simp_rw [matrix.to_linear_map₂'_apply, Matrix.dotProduct, Matrix.mulVec, Matrix.dotProduct]\n  refine' Finset.sum_congr rfl fun _ _ => _\n  rw [Finset.mul_sum]\n  refine' Finset.sum_congr rfl fun _ _ => _\n  rw [← mul_assoc]\n#align matrix.to_linear_map₂'_apply' matrix.to_linear_map₂'_apply'\n\n",
 "to_linear_map₂'_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum_univ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ -/\ntheorem matrix.to_linear_map₂'_apply (M : Matrix n m R) (x : n → R) (y : m → R) :\n    matrix.to_linear_map₂' M x y =\n      finset.sum_univ \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum_univ\"\n        (x i * M i j * y j) :=\n  rfl\n#align matrix.to_linear_map₂'_apply matrix.to_linear_map₂'_apply\n\n",
 "to_linear_map₂'":
 "-- Lemmas transferring nondegeneracy between a matrix and its associated bilinear form\ntheorem _root_.matrix.nondegenerate.to_linear_map₂' {M : Matrix ι ι R₁} (h : M.nondegenerate) :\n    M.to_linear_map₂'.separating_left := fun x hx =>\n  h.eq_zero_of_ortho fun y => by simpa only [to_linear_map₂'_apply'] using hx y\n#align matrix.nondegenerate.to_linear_map₂' matrix.nondegenerate.to_linear_map₂'\n\n",
 "to_linear_map₂":
 "theorem _root_.matrix.nondegenerate.to_linear_map₂ {M : Matrix ι ι R₁} (h : M.nondegenerate) (b : Basis ι R₁ M₁) :\n    (to_linear_map₂ b b M).separating_left :=\n  (matrix.separating_left_to_linear_map₂'_iff_separating_left_to_linear_map₂ b).mp h.to_linear_map₂'\n#align matrix.nondegenerate.to_linear_map₂ matrix.nondegenerate.to_linear_map₂\n\n",
 "separating_left_to_linear_map₂_iff":
 "@[simp]\ntheorem _root_.matrix.separating_left_to_linear_map₂_iff {M : Matrix ι ι R₁} (b : Basis ι R₁ M₁) :\n    (to_linear_map₂ b b M).separating_left ↔ M.nondegenerate := by\n  rw [← matrix.separating_left_to_linear_map₂'_iff_separating_left_to_linear_map₂,\n    matrix.separating_left_to_linear_map₂'_iff]\n#align matrix.separating_left_to_linear_map₂_iff matrix.separating_left_to_linear_map₂_iff\n\n",
 "separating_left_to_linear_map₂'_of_det_ne_zero'":
 "theorem separating_left_to_linear_map₂'_of_det_ne_zero' (M : Matrix ι ι R₁) (h : M.det ≠ 0) :\n    M.to_linear_map₂'.separating_left :=\n  separating_left_to_linear_map₂'_iff_det_ne_zero.mpr h\n#align separating_left_to_linear_map₂'_of_det_ne_zero' separating_left_to_linear_map₂'_of_det_ne_zero'\n\n",
 "separating_left_to_linear_map₂'_iff_separating_left_to_linear_map₂":
 "theorem _root_.matrix.separating_left_to_linear_map₂'_iff_separating_left_to_linear_map₂ {M : Matrix ι ι R₁}\n    (b : Basis ι R₁ M₁) : M.to_linear_map₂'.separating_left ↔ (matrix.to_linear_map₂ b b M).separating_left :=\n  (separatingLeft_congr_iff b.equiv_fun.symm b.equiv_fun.symm).symm\n#align matrix.separating_left_to_linear_map₂'_iff_separating_left_to_linear_map₂ matrix.separating_left_to_linear_map₂'_iff_separating_left_to_linear_map₂\n\n",
 "separating_left_to_linear_map₂'_iff_det_ne_zero":
 "-- Some shorthands for combining the above with `matrix.nondegenerate_of_det_ne_zero`\ntheorem separating_left_to_linear_map₂'_iff_det_ne_zero {M : Matrix ι ι R₁} :\n    M.to_linear_map₂'.separating_left ↔ M.det ≠ 0 := by\n  rw [matrix.separating_left_to_linear_map₂'_iff, matrix.nondegenerate_iff_det_ne_zero]\n#align separating_left_to_linear_map₂'_iff_det_ne_zero separating_left_to_linear_map₂'_iff_det_ne_zero\n\n",
 "separating_left_to_linear_map₂'_iff":
 "@[simp]\ntheorem _root_.matrix.separating_left_to_linear_map₂'_iff {M : Matrix ι ι R₁} :\n    M.to_linear_map₂'.separating_left ↔ M.nondegenerate :=\n  ⟨fun h v hv => h v fun w => (M.to_linear_map₂'_apply' _ _).trans <| hv w, matrix.nondegenerate.to_linear_map₂'⟩\n#align matrix.separating_left_to_linear_map₂'_iff matrix.separating_left_to_linear_map₂'_iff\n\n",
 "separating_left_of_det_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem separating_left_of_det_ne_zero {B : «expr →ₗ[ ] » M₁ R₁ («expr →ₗ[ ] » M₁ R₁ R₁)} (b : Basis ι R₁ M₁)\n    (h : (to_matrix₂ b b B).det ≠ 0) : B.separating_left :=\n  (separating_left_iff_det_ne_zero b).mpr h\n#align separating_left_of_det_ne_zero separating_left_of_det_ne_zero\n\n",
 "separating_left_iff_det_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem separating_left_iff_det_ne_zero {B : «expr →ₗ[ ] » M₁ R₁ («expr →ₗ[ ] » M₁ R₁ R₁)} (b : Basis ι R₁ M₁) :\n    B.separating_left ↔ (to_matrix₂ b b B).det ≠ 0 := by\n  rw [← matrix.nondegenerate_iff_det_ne_zero, nondegenerate_to_matrix_iff]\n#align separating_left_iff_det_ne_zero separating_left_iff_det_ne_zero\n\n",
 "nondegenerate_to_matrix₂'_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n-- Lemmas transferring nondegeneracy between a bilinear form and its associated matrix\n@[simp]\ntheorem nondegenerate_to_matrix₂'_iff {B : «expr →ₗ[ ] » (ι → R₁) R₁ («expr →ₗ[ ] » (ι → R₁) R₁ R₁)} :\n    B.to_matrix₂'.nondegenerate ↔ B.separating_left :=\n  matrix.separating_left_to_linear_map₂'_iff.symm.trans <| (matrix.to_linear_map₂'_to_matrix' B).symm ▸ iff.rfl\n#align nondegenerate_to_matrix₂'_iff nondegenerate_to_matrix₂'_iff\n\n",
 "nondegenerate_to_matrix_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem nondegenerate_to_matrix_iff {B : «expr →ₗ[ ] » M₁ R₁ («expr →ₗ[ ] » M₁ R₁ R₁)} (b : Basis ι R₁ M₁) :\n    (to_matrix₂ b b B).nondegenerate ↔ B.separating_left :=\n  (matrix.separating_left_to_linear_map₂_iff b).symm.trans <| (matrix.to_linear_map₂_to_matrix₂ b b B).symm ▸ iff.rfl\n#align nondegenerate_to_matrix_iff nondegenerate_to_matrix_iff\n\n",
 "mul_to_matrix₂_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem linear_map.mul_to_matrix₂_mul (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) (M : Matrix n' n R)\n    (N : Matrix m m' R) :\n    matrix.mul (matrix.mul M (linear_map.to_matrix₂ b₁ b₂ B)) N =\n      linear_map.to_matrix₂ b₁' b₂' (B.compl₁₂ (toLin b₁' b₁ (matrix.transpose M)) (toLin b₂' b₂ N)) :=\n  by simp_rw [linear_map.to_matrix₂_compl₁₂ b₁ b₂, to_matrix_to_lin, transpose_transpose]\n#align linear_map.mul_to_matrix₂_mul linear_map.mul_to_matrix₂_mul\n\n",
 "mul_to_matrix₂'_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem linear_map.mul_to_matrix₂'_mul (B : «expr →ₗ[ ] » (n → R) R («expr →ₗ[ ] » (m → R) R R)) (M : Matrix n' n R)\n    (N : Matrix m m' R) :\n    matrix.mul (matrix.mul M B.to_matrix₂') N = (B.compl₁₂ (matrix.transpose M).to_lin' N.to_lin').to_matrix₂' := by\n  simp\n#align linear_map.mul_to_matrix₂'_mul linear_map.mul_to_matrix₂'_mul\n\n",
 "mul_to_matrix₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem linear_map.mul_to_matrix₂ (B : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R)) (M : Matrix n' n R) :\n    matrix.mul M (linear_map.to_matrix₂ b₁ b₂ B) =\n      linear_map.to_matrix₂ b₁' b₂ (B.comp (toLin b₁' b₁ (matrix.transpose M))) :=\n  by rw [linear_map.to_matrix₂_comp b₁, to_matrix_to_lin, transpose_transpose]\n#align linear_map.mul_to_matrix₂ linear_map.mul_to_matrix₂\n\n",
 "mul_to_matrix'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\ntheorem linear_map.mul_to_matrix' (B : «expr →ₗ[ ] » (n → R) R («expr →ₗ[ ] » (m → R) R R)) (M : Matrix n' n R) :\n    matrix.mul M B.to_matrix₂' = (B.comp (matrix.transpose M).to_lin').to_matrix₂' := by\n  simp only [B.to_matrix₂'_comp, transpose_transpose, to_matrix'_to_lin']\n#align linear_map.mul_to_matrix' linear_map.mul_to_matrix'\n\n",
 "mem_skew_adjoint_matrices_submodule":
 "@[simp]\ntheorem mem_skew_adjoint_matrices_submodule : A₁ ∈ skew_adjoint_matrices_submodule J ↔ J.is_skew_adjoint A₁ :=\n  by\n  erw [mem_pair_self_adjoint_matrices_submodule]\n  simp [matrix.is_skew_adjoint, matrix.is_adjoint_pair]\n#align mem_skew_adjoint_matrices_submodule mem_skew_adjoint_matrices_submodule\n\n",
 "mem_self_adjoint_matrices_submodule":
 "@[simp]\ntheorem mem_self_adjoint_matrices_submodule : A₁ ∈ self_adjoint_matrices_submodule J ↔ J.is_self_adjoint A₁ :=\n  by\n  erw [mem_pair_self_adjoint_matrices_submodule]\n  rfl\n#align mem_self_adjoint_matrices_submodule mem_self_adjoint_matrices_submodule\n\n",
 "mem_pair_self_adjoint_matrices_submodule":
 "@[simp]\ntheorem mem_pair_self_adjoint_matrices_submodule :\n    A₁ ∈ pair_self_adjoint_matrices_submodule J J₂ ↔ matrix.is_adjoint_pair J J₂ A₁ A₁ :=\n  by\n  simp only [pair_self_adjoint_matrices_submodule, LinearEquiv.coe_coe, LinearMap.toMatrix'_apply, Submodule.mem_map,\n    mem_is_pair_self_adjoint_submodule]\n  constructor\n  · rintro ⟨f, hf, hA⟩\n    have hf' : f = A₁.to_lin' := by rw [← hA, Matrix.toLin'_toMatrix']\n    rw [hf'] at hf\n    rw [← is_adjoint_pair_to_linear_map₂']\n    exact hf\n  · intro h\n    refine' ⟨A₁.to_lin', _, LinearMap.toMatrix'_toLin' _⟩\n    exact (is_adjoint_pair_to_linear_map₂' _ _ _ _).mpr h\n#align mem_pair_self_adjoint_matrices_submodule mem_pair_self_adjoint_matrices_submodule\n\n",
 "is_adjoint_pair_to_linear_map₂'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem is_adjoint_pair_to_linear_map₂' :\n    IsAdjointPair (matrix.to_linear_map₂' J) (matrix.to_linear_map₂' J') (Matrix.toLin' A) (Matrix.toLin' A') ↔\n      matrix.is_adjoint_pair J J' A A' :=\n  by\n  rw [is_adjoint_pair_iff_comp_eq_compl₂]\n  have h :\n    ∀ B B' : «expr →ₗ[ ] » (n → R) R («expr →ₗ[ ] » (n' → R) R R),\n      B = B' ↔ linear_map.to_matrix₂' B = linear_map.to_matrix₂' B' :=\n    by\n    intro B B'\n    constructor <;> intro h\n    · rw [h]\n    · exact linear_map.to_matrix₂'.injective h\n  simp_rw [h, linear_map.to_matrix₂'_comp, linear_map.to_matrix₂'_compl₂, LinearMap.toMatrix'_toLin',\n    linear_map.to_matrix'_to_linear_map₂']\n  rfl\n#align is_adjoint_pair_to_linear_map₂' is_adjoint_pair_to_linear_map₂'\n\n",
 "is_adjoint_pair_to_linear_map₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem is_adjoint_pair_to_linear_map₂ :\n    IsAdjointPair (matrix.to_linear_map₂ b₁ b₁ J) (matrix.to_linear_map₂ b₂ b₂ J') (Matrix.toLin b₁ b₂ A)\n        (Matrix.toLin b₂ b₁ A') ↔\n      matrix.is_adjoint_pair J J' A A' :=\n  by\n  rw [is_adjoint_pair_iff_comp_eq_compl₂]\n  have h :\n    ∀ B B' : «expr →ₗ[ ] » M₁ R («expr →ₗ[ ] » M₂ R R),\n      B = B' ↔ linear_map.to_matrix₂ b₁ b₂ B = linear_map.to_matrix₂ b₁ b₂ B' :=\n    by\n    intro B B'\n    constructor <;> intro h\n    · rw [h]\n    · exact (linear_map.to_matrix₂ b₁ b₂).injective h\n  simp_rw [h, linear_map.to_matrix₂_comp b₂ b₂, linear_map.to_matrix₂_compl₂ b₁ b₁, LinearMap.toMatrix_toLin,\n    linear_map.to_matrix₂_to_linear_map₂]\n  rfl\n#align is_adjoint_pair_to_linear_map₂ is_adjoint_pair_to_linear_map₂\n\n",
 "is_adjoint_pair_equiv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem matrix.is_adjoint_pair_equiv (P : Matrix n n R) (h : IsUnit P) :\n    (matrix.mul (matrix.mul (matrix.transpose P) J) P).is_adjoint_pair\n        (matrix.mul (matrix.mul (matrix.transpose P) J) P) A₁ A₁ ↔\n      J.is_adjoint_pair J (matrix.mul (matrix.mul P A₁) P⁻¹) (matrix.mul (matrix.mul P A₁) P⁻¹) :=\n  by\n  have h' : IsUnit P.det := P.is_unit_iff_is_unit_det.mp h\n  let u := P.nonsing_inv_unit h'\n  let v := (matrix.transpose P).nonsing_inv_unit (P.is_unit_det_transpose h')\n  let x := matrix.transpose A₁ * matrix.transpose P * J\n  let y := J * P * A₁\n  suffices x * ↑u = ↑v * y ↔ ↑v⁻¹ * x = y * ↑u⁻¹\n    by\n    dsimp only [matrix.is_adjoint_pair]\n    repeat' rw [Matrix.transpose_mul]\n    simp only [← Matrix.mul_eq_mul, ← mul_assoc, P.transpose_nonsing_inv]\n    conv_lhs =>\n      rhs\n      rw [mul_assoc, mul_assoc]\n      congr\n      skip\n      rw [← mul_assoc]\n    conv_rhs =>\n      rw [mul_assoc, mul_assoc]\n      conv =>\n        lhs\n        congr\n        skip\n        rw [← mul_assoc]\n    exact this\n  rw [Units.eq_mul_inv_iff_mul_eq]\n  conv_rhs => rw [mul_assoc]\n  rw [v.inv_mul_eq_iff_eq_mul]\n#align matrix.is_adjoint_pair_equiv matrix.is_adjoint_pair_equiv\n\n"}