{"nondegenerate_of_det_ne_zero":
 "/-- If `M` has a nonzero determinant, then `M` as a bilinear form on `n → A` is nondegenerate.\n\nSee also `bilin_form.nondegenerate_of_det_ne_zero'` and `bilin_form.nondegenerate_of_det_ne_zero`.\n-/\ntheorem nondegenerate_of_det_ne_zero [DecidableEq m] {M : Matrix m m A} (hM : M.det ≠ 0) : Nondegenerate M :=\n  by\n  intro v hv\n  ext i\n  specialize hv (M.cramer (Pi.single i 1))\n  refine' (mul_eq_zero.mp _).resolve_right hM\n  convert hv\n  simp only [mul_vec_cramer M (Pi.single i 1), dot_product, Pi.smul_apply, smul_eq_mul]\n  rw [Finset.sum_eq_single i, Pi.single_eq_same, mul_one]\n  · intro j _ hj\n    simp [hj]\n  · intros\n    have := Finset.mem_univ i\n    contradiction\n#align nondegenerate_of_det_ne_zero nondegenerate_of_det_ne_zero\n\n",
 "exists_not_ortho_of_ne_zero":
 "/-- If `M` is nondegenerate and `v ≠ 0`, then there is some `w` such that `w ⬝ M ⬝ v ≠ 0`. -/\ntheorem nondegenerate.exists_not_ortho_of_ne_zero {M : Matrix m m R} (hM : Nondegenerate M) {v : m → R} (hv : v ≠ 0) :\n    ∃ w, Matrix.dotProduct v (mulVec M w) ≠ 0 :=\n  not_forall.mp (mt hM.eq_zero_of_ortho hv)\n#align nondegenerate.exists_not_ortho_of_ne_zero nondegenerate.exists_not_ortho_of_ne_zero\n\n",
 "eq_zero_of_vec_mul_eq_zero":
 "theorem eq_zero_of_vec_mul_eq_zero [DecidableEq m] {M : Matrix m m A} (hM : M.det ≠ 0) {v : m → A}\n    (hv : M.vec_mul v = 0) : v = 0 :=\n  (nondegenerate_of_det_ne_zero hM).eq_zero_of_ortho fun w => by rw [dot_product_mul_vec, hv, zero_dot_product]\n#align eq_zero_of_vec_mul_eq_zero eq_zero_of_vec_mul_eq_zero\n\n",
 "eq_zero_of_ortho":
 "/-\nCopyright (c) 2021 Anne Baanen. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Anne Baanen\n-/\n/-- If `M` is nondegenerate and `w ⬝ M ⬝ v = 0` for all `w`, then `v = 0`. -/\ntheorem nondegenerate.eq_zero_of_ortho {M : Matrix m m R} (hM : Nondegenerate M) {v : m → R}\n    (hv : ∀ w, Matrix.dotProduct v (mulVec M w) = 0) : v = 0 :=\n  hM v hv\n#align nondegenerate.eq_zero_of_ortho nondegenerate.eq_zero_of_ortho\n\n",
 "eq_zero_of_mul_vec_eq_zero":
 "theorem eq_zero_of_mul_vec_eq_zero [DecidableEq m] {M : Matrix m m A} (hM : M.det ≠ 0) {v : m → A}\n    (hv : M.mul_vec v = 0) : v = 0 :=\n  eq_zero_of_vecMul_eq_zero (by rwa [det_transpose]) ((vecMul_transpose M v).trans hv)\n#align eq_zero_of_mul_vec_eq_zero eq_zero_of_mul_vec_eq_zero\n\n"}