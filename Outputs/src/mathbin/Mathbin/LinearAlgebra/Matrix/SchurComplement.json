{"schur_complement_eq₂₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊕ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊕ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\ntheorem schur_complement_eq₂₂ [fintype m] [fintype n] [decidable_eq n] (A : matrix m m 𝕜) (B : matrix m n 𝕜)\n    {D : matrix n n 𝕜} (x : m → 𝕜) (y : n → 𝕜) [Invertible D] (hD : D.is_hermitian) :\n    matrix.dot_product (vec_mul (star («expr ⊕ᵥ » x y)) (from_blocks A B (matrix.conj_transpose B) D))\n        («expr ⊕ᵥ » x y) =\n      matrix.dot_product (vec_mul (star ((matrix.mul D⁻¹ (matrix.conj_transpose B)).mul_vec x + y)) D)\n          ((matrix.mul D⁻¹ (matrix.conj_transpose B)).mul_vec x + y) +\n        matrix.dot_product (vec_mul (star x) (A - matrix.mul (matrix.mul B D⁻¹) (matrix.conj_transpose B))) x :=\n  by\n  simp [Function.star_sum_elim, from_blocks_mul_vec, vec_mul_from_blocks, add_vec_mul, dot_product_mul_vec, vec_mul_sub,\n    matrix.mul_assoc, vec_mul_mul_vec, hD.eq, conj_transpose_nonsing_inv, star_mul_vec]\n  abel\n#align schur_complement_eq₂₂ schur_complement_eq₂₂\n\n",
 "schur_complement_eq₁₁":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊕ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊕ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.dot_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/-\nCopyright (c) 2022 Alexander Bentkamp. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Alexander Bentkamp, Jeremy Avigad, Johan Commelin\n-/\ntheorem schur_complement_eq₁₁ [fintype m] [decidable_eq m] [fintype n] {A : matrix m m 𝕜} (B : matrix m n 𝕜)\n    (D : matrix n n 𝕜) (x : m → 𝕜) (y : n → 𝕜) [Invertible A] (hA : A.is_hermitian) :\n    matrix.dot_product (vec_mul (star («expr ⊕ᵥ » x y)) (from_blocks A B (matrix.conj_transpose B) D))\n        («expr ⊕ᵥ » x y) =\n      matrix.dot_product (vec_mul (star (x + (matrix.mul A⁻¹ B).mul_vec y)) A) (x + (matrix.mul A⁻¹ B).mul_vec y) +\n        matrix.dot_product (vec_mul (star y) (D - matrix.mul (matrix.mul (matrix.conj_transpose B) A⁻¹) B)) y :=\n  by\n  simp [Function.star_sum_elim, from_blocks_mul_vec, vec_mul_from_blocks, add_vec_mul, dot_product_mul_vec, vec_mul_sub,\n    matrix.mul_assoc, vec_mul_mul_vec, hA.eq, conj_transpose_nonsing_inv, star_mul_vec]\n  abel\n#align schur_complement_eq₁₁ schur_complement_eq₁₁\n\n",
 "from_blocks₂₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\ntheorem pos_semidef.from_blocks₂₂ [fintype m] [fintype n] [decidable_eq n] (A : matrix m m 𝕜) (B : matrix m n 𝕜)\n    {D : matrix n n 𝕜} (hD : D.pos_def) [Invertible D] :\n    (from_blocks A B (matrix.conj_transpose B) D).pos_semidef ↔\n      (A - matrix.mul (matrix.mul B D⁻¹) (matrix.conj_transpose B)).pos_semidef :=\n  by\n  rw [← pos_semidef_submatrix_equiv (Equiv.sumComm n m), equiv.sum_comm_apply, from_blocks_submatrix_sum_swap_sum_swap]\n  convert pos_semidef.from_blocks₁₁ _ _ hD <;> first |infer_instance|simp\n#align pos_semidef.from_blocks₂₂ pos_semidef.from_blocks₂₂\n\n",
 "from_blocks₁₁":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊕ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\ntheorem pos_semidef.from_blocks₁₁ [fintype m] [decidable_eq m] [fintype n] {A : matrix m m 𝕜} (B : matrix m n 𝕜)\n    (D : matrix n n 𝕜) (hA : A.pos_def) [Invertible A] :\n    (from_blocks A B (matrix.conj_transpose B) D).pos_semidef ↔\n      (D - matrix.mul (matrix.mul (matrix.conj_transpose B) A⁻¹) B).pos_semidef :=\n  by\n  rw [pos_semidef, is_hermitian.from_blocks₁₁ _ _ hA.1]\n  constructor\n  · refine' fun h => ⟨h.1, fun x => _⟩\n    have := h.2 («expr ⊕ᵥ » (-(matrix.mul A⁻¹ B).mul_vec x) x)\n    rw [dot_product_mul_vec, schur_complement_eq₁₁ B D _ _ hA.1, neg_add_self, dot_product_zero, zero_add] at this\n    rw [dot_product_mul_vec]\n    exact this\n  · refine' fun h => ⟨h.1, fun x => _⟩\n    rw [dot_product_mul_vec, ← sum.elim_comp_inl_inr x, schur_complement_eq₁₁ B D _ _ hA.1, map_add]\n    apply le_add_of_nonneg_of_le\n    · rw [← dot_product_mul_vec]\n      apply hA.pos_semidef.2\n    · rw [← dot_product_mul_vec]\n      apply h.2\n#align pos_semidef.from_blocks₁₁ pos_semidef.from_blocks₁₁\n\n"}