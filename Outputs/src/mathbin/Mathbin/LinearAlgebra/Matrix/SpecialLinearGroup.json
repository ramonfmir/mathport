{"to_lin'_to_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem to_lin'_to_linear_map (A : special_linear_group n R) :\n    ↑(special_linear_group.to_lin' A) = Matrix.toLin' («expr↑ₘ » A) :=\n  rfl\n#align to_lin'_to_linear_map to_lin'_to_linear_map\n\n",
 "to_lin'_symm_to_linear_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem to_lin'_symm_to_linear_map (A : special_linear_group n R) : ↑A.to_lin'.symm = Matrix.toLin' («expr↑ₘ » A⁻¹) :=\n  rfl\n#align to_lin'_symm_to_linear_map to_lin'_symm_to_linear_map\n\n",
 "to_lin'_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem to_lin'_symm_apply (A : special_linear_group n R) (v : n → R) :\n    A.to_lin'.symm v = Matrix.toLin' («expr↑ₘ » A⁻¹) v :=\n  rfl\n#align to_lin'_symm_apply to_lin'_symm_apply\n\n",
 "to_lin'_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\ntheorem to_lin'_injective :\n    function.injective («expr⇑ » (to_lin' : «expr →* » (special_linear_group n R) («expr ≃ₗ[ ] » (n → R) R (n → R)))) :=\n  fun A B h => Subtype.coe_injective <| Matrix.toLin'.injective <| LinearEquiv.toLinearMap_injective.eq_iff.mpr h\n#align to_lin'_injective to_lin'_injective\n\n",
 "to_lin'_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem to_lin'_apply (A : special_linear_group n R) (v : n → R) :\n    special_linear_group.to_lin' A v = Matrix.toLin' («expr↑ₘ » A) v :=\n  rfl\n#align to_lin'_apply to_lin'_apply\n\n",
 "row_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem row_ne_zero [Nontrivial R] (g : special_linear_group n R) (i : n) : («expr↑ₘ » g) i ≠ 0 := fun h =>\n  g.det_ne_zero <| det_eq_zero_of_row_eq_zero i <| by simp [h]\n#align row_ne_zero row_ne_zero\n\n",
 "fin_two_induction":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `special_linear_group.fin -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `special_linear_group.fin -/\ntheorem fin_two_induction (P : special_linear_group.fin 2 R → Prop)\n    (h : ∀ (a b c d : R) (hdet : a * d - b * c = 1), P ⟨!![a, b; c, d], by rwa [det_fin_two_of]⟩)\n    (g : special_linear_group.fin 2 R) : P g := by\n  obtain ⟨m, hm⟩ := g\n  convert h (m 0 0) (m 0 1) (m 1 0) (m 1 1) (by rwa [det_fin_two] at hm)\n  ext (i j); fin_cases i <;> fin_cases j <;> rfl\n#align fin_two_induction fin_two_induction\n\n",
 "fin_two_exists_eq_mk_of_apply_zero_one_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `special_linear_group.fin -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `special_linear_group.fin -/\ntheorem fin_two_exists_eq_mk_of_apply_zero_one_eq_zero {R : Type _} [Field R] (g : special_linear_group.fin 2 R)\n    (hg : (g : Matrix (Fin 2) (Fin 2) R) 1 0 = 0) :\n    ∃ (a b : R)(h : a ≠ 0), g = (⟨!![a, b; 0, a⁻¹], by simp [h]⟩ : special_linear_group.fin 2 R) :=\n  by\n  induction' g using matrix.special_linear_group.fin_two_induction with a b c d h_det\n  replace hg : c = 0 := by simpa using hg\n  have had : a * d = 1 := by rwa [hg, MulZeroClass.mul_zero, sub_zero] at h_det\n  refine' ⟨a, b, left_ne_zero_of_mul_eq_one had, _⟩\n  simp_rw [eq_inv_of_mul_eq_one_right had, hg]\n#align fin_two_exists_eq_mk_of_apply_zero_one_eq_zero fin_two_exists_eq_mk_of_apply_zero_one_eq_zero\n\n",
 "ext_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n/-\nCopyright (c) 2020 Anne Baanen. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Anne Baanen\n-/\n/- In this file, Lean often has a hard time working out the values of `n` and `R` for an expression\nlike `det ↑A`. Rather than writing `(A : matrix n n R)` everywhere in this file which is annoyingly\nverbose, or `A.val` which is not the simp-normal form for subtypes, we create a local notation\n`↑ₘA`. This notation references the local `n` and `R` variables, so is not valid as a global\nnotation. -/\ntheorem ext_iff (A B : special_linear_group n R) : A = B ↔ ∀ i j, («expr↑ₘ » A) i j = («expr↑ₘ » B) i j :=\n  Subtype.ext_iff.trans Matrix.ext_iff.symm\n#align ext_iff ext_iff\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n@[ext]\ntheorem ext (A B : special_linear_group n R) : (∀ i j, («expr↑ₘ » A) i j = («expr↑ₘ » B) i j) → A = B :=\n  (special_linear_group.ext_iff A B).mpr\n#align ext ext\n\n",
 "det_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem det_ne_zero [Nontrivial R] (g : special_linear_group n R) : det («expr↑ₘ » g) ≠ 0 :=\n  by\n  rw [g.det_coe]\n  norm_num\n#align det_ne_zero det_ne_zero\n\n",
 "det_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n@[simp]\ntheorem det_coe : det («expr↑ₘ » A) = 1 :=\n  A.2\n#align det_coe det_coe\n\n",
 "coe_to_GL":
 "theorem coe_to_GL (A : special_linear_group n R) : ↑A.to_GL = A.to_lin'.to_linear_map :=\n  rfl\n#align coe_to_GL coe_to_GL\n\n",
 "coe_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n@[simp]\ntheorem coe_pow (m : ℕ) : «expr↑ₘ » (A ^ m) = «expr↑ₘ » A ^ m :=\n  rfl\n#align coe_pow coe_pow\n\n",
 "coe_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n@[simp]\ntheorem coe_one : «expr↑ₘ » (1 : special_linear_group n R) = (1 : Matrix n n R) :=\n  rfl\n#align coe_one coe_one\n\n",
 "coe_neg":
 "@[simp]\ntheorem coe_neg (g : special_linear_group n R) : ↑(-g) = -(g : Matrix n n R) :=\n  rfl\n#align coe_neg coe_neg\n\n",
 "coe_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n@[simp]\ntheorem coe_mul : «expr↑ₘ » (A * B) = matrix.mul («expr↑ₘ » A) («expr↑ₘ » B) :=\n  rfl\n#align coe_mul coe_mul\n\n",
 "coe_mk":
 "@[simp]\ntheorem coe_mk (A : Matrix n n R) (h : det A = 1) : ↑(⟨A, h⟩ : special_linear_group n R) = A :=\n  rfl\n#align coe_mk coe_mk\n\n",
 "coe_matrix_coe":
 "@[simp]\ntheorem coe_matrix_coe (g : special_linear_group n ℤ) :\n    ↑(g : special_linear_group n R) = (↑g : Matrix n n ℤ).map (Int.castRingHom R) :=\n  map_apply_coe (Int.castRingHom R) g\n#align coe_matrix_coe coe_matrix_coe\n\n",
 "coe_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n@[simp]\ntheorem coe_inv : «expr↑ₘ » A⁻¹ = adjugate A :=\n  rfl\n#align coe_inv coe_inv\n\n",
 "coe_int_neg":
 "@[simp]\ntheorem coe_int_neg (g : special_linear_group n ℤ) : ↑(-g) = (-↑g : special_linear_group n R) :=\n  Subtype.ext <| (@RingHom.mapMatrix n _ _ _ _ _ _ (Int.castRingHom R)).map_neg ↑g\n#align coe_int_neg coe_int_neg\n\n",
 "coe_fn_eq_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n-- this section should be last to ensure we do not use it in lemmas\n@[simp]\ntheorem coe_fn_eq_coe (s : special_linear_group n R) : «expr⇑ » s = «expr↑ₘ » s :=\n  rfl\n#align coe_fn_eq_coe coe_fn_eq_coe\n\n",
 "coe_T_zpow":
 "/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr «expr!![ »(matrix.notation [expr _, \",\", expr _, \";\", expr _, \",\", expr _, \"]\"] [])]] -/\n/- ./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr «expr!![ »(matrix.notation [expr _, \",\", expr _, \";\", expr _, \",\", expr _, \"]\"] [])]] -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem coe_T_zpow (n : ℤ) : «expr↑ₘ » (T ^ n) = !![1, n; 0, 1] :=\n  by\n  induction' n using Int.induction_on with n h n h\n  · rw [zpow_zero, coe_one, Matrix.one_fin_two]\n  · simp_rw [zpow_add, zpow_one, coe_mul, h, coe_T, Matrix.mul_fin_two]\n    trace\n      \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr «expr!![ »(matrix.notation [expr _, \\\",\\\", expr _, \\\";\\\", expr _, \\\",\\\", expr _, \\\"]\\\"] [])]]\"\n    rw [mul_one, mul_one, add_comm]\n  · simp_rw [zpow_sub, zpow_one, coe_mul, h, coe_T_inv, Matrix.mul_fin_two]\n    trace\n        \"./././Mathport/Syntax/Translate/Tactic/Builtin.lean:73:14: unsupported tactic `congrm #[[expr «expr!![ »(matrix.notation [expr _, \\\",\\\", expr _, \\\";\\\", expr _, \\\",\\\", expr _, \\\"]\\\"] [])]]\" <;>\n      ring\n#align coe_T_zpow coe_T_zpow\n\n",
 "coe_T_inv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem coe_T_inv : «expr↑ₘ » T⁻¹ = !![1, -1; 0, 1] := by simp [coe_inv, coe_T, adjugate_fin_two]\n#align coe_T_inv coe_T_inv\n\n",
 "coe_T":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem coe_T : «expr↑ₘ » T = !![1, 1; 0, 1] :=\n  rfl\n#align coe_T coe_T\n\n",
 "coe_S":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\ntheorem coe_S : «expr↑ₘ » S = !![0, -1; 1, 0] :=\n  rfl\n#align coe_S coe_S\n\n",
 "T_pow_mul_apply_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `special_linear_group.fin -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n@[simp]\ntheorem T_pow_mul_apply_one (n : ℤ) (g : special_linear_group.fin 2 ℤ) : («expr↑ₘ » (T ^ n * g)) 1 = («expr↑ₘ » g) 1 :=\n  by simp [coe_T_zpow, Matrix.mul, Matrix.dotProduct, Fin.sum_univ_succ]\n#align T_pow_mul_apply_one T_pow_mul_apply_one\n\n",
 "T_mul_apply_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `special_linear_group.fin -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n@[simp]\ntheorem T_mul_apply_one (g : special_linear_group.fin 2 ℤ) : («expr↑ₘ » (T * g)) 1 = («expr↑ₘ » g) 1 := by\n  simpa using T_pow_mul_apply_one 1 g\n#align T_mul_apply_one T_mul_apply_one\n\n",
 "T_inv_mul_apply_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `special_linear_group.fin -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr↑ₘ » -/\n@[simp]\ntheorem T_inv_mul_apply_one (g : special_linear_group.fin 2 ℤ) : («expr↑ₘ » (T⁻¹ * g)) 1 = («expr↑ₘ » g) 1 := by\n  simpa using T_pow_mul_apply_one (-1) g\n#align T_inv_mul_apply_one T_inv_mul_apply_one\n\n",
 "SL2_inv_expl_det":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `special_linear_group.fin -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem SL2_inv_expl_det (A : special_linear_group.fin 2 R) :\n    det («expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\") = 1 :=\n  by\n  rw [Matrix.det_fin_two, mul_comm]\n  simp only [subtype.val_eq_coe, cons_val_zero, cons_val_one, head_cons, mul_neg, neg_mul, neg_neg]\n  have := A.2\n  rw [Matrix.det_fin_two] at this\n  convert this\n#align SL2_inv_expl_det SL2_inv_expl_det\n\n",
 "SL2_inv_expl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `special_linear_group.fin -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr![ ,]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]» -/\ntheorem SL2_inv_expl (A : special_linear_group.fin 2 R) :\n    A⁻¹ =\n      ⟨«expr![ ,]» \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr![ ,]»\",\n        SL2_inv_expl_det A⟩ :=\n  by\n  ext\n  have := Matrix.adjugate_fin_two A.1\n  simp only [subtype.val_eq_coe] at this\n  rw [coe_inv, this]\n  rfl\n#align SL2_inv_expl SL2_inv_expl\n\n"}