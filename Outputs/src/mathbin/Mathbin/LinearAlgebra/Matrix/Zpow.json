{"zpow_zpow_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print Commute.zpow_zpow_self /-\ntheorem Commute.zpow_zpow_self (A : exprM) (m n : ℤ) : Commute (A ^ m) (A ^ n) :=\n  Commute.zpow_zpow (Commute.refl A) _ _\n#align commute.zpow_zpow_self Commute.zpow_zpow_self\n-/\n\n",
 "zpow_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print Commute.zpow_zpow /-\ntheorem Commute.zpow_zpow {A B : exprM} (h : Commute A B) (m n : ℤ) : Commute (A ^ m) (B ^ n) :=\n  Commute.zpow_right (Commute.zpow_left h _) _\n#align commute.zpow_zpow Commute.zpow_zpow\n-/\n\n",
 "zpow_sub_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_sub_one /-\ntheorem zpow_sub_one {A : exprM} (h : IsUnit A.det) (n : ℤ) : A ^ (n - 1) = A ^ n * A⁻¹ :=\n  calc\n    A ^ (n - 1) = A ^ (n - 1) * A * A⁻¹ := by rw [mul_assoc, mul_eq_mul A, mul_nonsing_inv _ h, mul_one]\n    _ = A ^ n * A⁻¹ := by rw [← zpow_add_one h, sub_add_cancel]\n    \n#align zpow_sub_one zpow_sub_one\n-/\n\n",
 "zpow_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_sub /-\ntheorem zpow_sub {A : exprM} (ha : IsUnit A.det) (z1 z2 : ℤ) : A ^ (z1 - z2) = A ^ z1 / A ^ z2 := by\n  rw [sub_eq_add_neg, zpow_add ha, zpow_neg ha, div_eq_mul_inv]\n#align zpow_sub zpow_sub\n-/\n\n",
 "zpow_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print Commute.zpow_self /-\ntheorem Commute.zpow_self (A : exprM) (n : ℤ) : Commute (A ^ n) A :=\n  Commute.zpow_left (Commute.refl A) _\n#align commute.zpow_self Commute.zpow_self\n-/\n\n",
 "zpow_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print Commute.zpow_right /-\ntheorem Commute.zpow_right {A B : exprM} (h : Commute A B) (m : ℤ) : Commute A (B ^ m) :=\n  by\n  rcases nonsing_inv_cancel_or_zero B with (⟨hB, hB'⟩ | hB)\n  · refine' SemiconjBy.zpow_right _ _ h _ <;> exact is_unit_det_of_left_inverse hB\n  · cases m\n    · simpa using h.pow_right _\n    · simp [← inv_pow', hB]\n#align commute.zpow_right Commute.zpow_right\n-/\n\n",
 "zpow_one_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_one_add /-\ntheorem zpow_one_add {A : exprM} (h : IsUnit A.det) (i : ℤ) : A ^ (1 + i) = A * A ^ i := by rw [zpow_add h, zpow_one]\n#align zpow_one_add zpow_one_add\n-/\n\n",
 "zpow_ofNat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_ofNat /-\ntheorem zpow_ofNat (A : exprM) (n : ℕ) : A ^ (n : ℤ) = A ^ n :=\n  zpow_ofNat _ _\n#align zpow_coe_nat zpow_ofNat\n-/\n\n",
 "zpow_neg_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_neg_one /-\n@[simp]\ntheorem zpow_neg_one (A : exprM) : A ^ (-1 : ℤ) = A⁻¹ :=\n  by\n  convert div_inv_monoid.zpow_neg' 0 A\n  simp only [zpow_one, Int.ofNat_zero, Int.ofNat_succ, zpow_eq_pow, zero_add]\n#align zpow_neg_one zpow_neg_one\n-/\n\n",
 "zpow_neg_mul_zpow_self":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_neg_mul_zpow_self /-\ntheorem zpow_neg_mul_zpow_self (n : ℤ) {A : exprM} (h : IsUnit A.det) : A ^ (-n) * A ^ n = 1 := by\n  rw [zpow_neg h, mul_eq_mul, nonsing_inv_mul _ (h.det_zpow _)]\n#align zpow_neg_mul_zpow_self zpow_neg_mul_zpow_self\n-/\n\n",
 "zpow_neg_coe_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n@[simp]\ntheorem zpow_neg_coe_nat (A : exprM) (n : ℕ) : A ^ (-n : ℤ) = (A ^ n)⁻¹ :=\n  by\n  cases n\n  · simp\n  · exact div_inv_monoid.zpow_neg' _ _\n#align zpow_neg_coe_nat zpow_neg_coe_nat\n\n",
 "zpow_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_neg /-\ntheorem zpow_neg {A : exprM} (h : IsUnit A.det) : ∀ n : ℤ, A ^ (-n) = (A ^ n)⁻¹\n  | (n : ℕ) => zpow_neg_coe_nat _ _\n  | -[n+1] => by\n    rw [zpow_negSucc, neg_neg_of_nat_succ, of_nat_eq_coe, zpow_ofNat, nonsing_inv_nonsing_inv]\n    rw [det_pow]\n    exact h.pow _\n#align zpow_neg zpow_neg\n-/\n\n",
 "zpow_ne_zero_of_is_unit_det":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\ntheorem zpow_ne_zero_of_is_unit_det [Nonempty n'] [Nontrivial R] {A : exprM} (ha : IsUnit A.det) (z : ℤ) : A ^ z ≠ 0 :=\n  by\n  have := ha.det_zpow z\n  contrapose! this\n  rw [this, det_zero ‹_›]\n  exact not_isUnit_zero\n#align zpow_ne_zero_of_is_unit_det zpow_ne_zero_of_is_unit_det\n\n",
 "zpow_mul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_mul' /-\ntheorem zpow_mul' (A : exprM) (h : IsUnit A.det) (m n : ℤ) : A ^ (m * n) = (A ^ n) ^ m := by rw [mul_comm, zpow_mul _ h]\n#align zpow_mul' zpow_mul'\n-/\n\n",
 "zpow_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_mul /-\ntheorem zpow_mul (A : exprM) (h : IsUnit A.det) : ∀ m n : ℤ, A ^ (m * n) = (A ^ m) ^ n\n  | (m : ℕ), (n : ℕ) => by rw [zpow_ofNat, zpow_ofNat, ← pow_mul, ← zpow_ofNat, Int.ofNat_mul]\n  | (m : ℕ), -[n+1] => by\n    rw [zpow_ofNat, zpow_negSucc, ← pow_mul, coe_nat_mul_neg_succ, ← Int.ofNat_mul, zpow_neg_coe_nat]\n  | -[m+1], (n : ℕ) => by\n    rw [zpow_ofNat, zpow_negSucc, ← inv_pow', ← pow_mul, neg_succ_mul_coe_nat, ← Int.ofNat_mul, zpow_neg_coe_nat,\n      inv_pow']\n  | -[m+1], -[n+1] =>\n    by\n    rw [zpow_negSucc, zpow_negSucc, neg_succ_mul_neg_succ, ← Int.ofNat_mul, zpow_ofNat, inv_pow', ← pow_mul,\n      nonsing_inv_nonsing_inv]\n    rw [det_pow]\n    exact h.pow _\n#align zpow_mul zpow_mul\n-/\n\n",
 "zpow_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print Commute.zpow_left /-\ntheorem Commute.zpow_left {A B : exprM} (h : Commute A B) (m : ℤ) : Commute (A ^ m) B :=\n  (Commute.zpow_right h.symm m).symm\n#align commute.zpow_left Commute.zpow_left\n-/\n\n",
 "zpow_bit1'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_bit1' /-\ntheorem zpow_bit1' (A : exprM) (n : ℤ) : A ^ bit1 n = (A * A) ^ n * A := by\n  rw [zpow_bit1, Commute.mul_zpow (Commute.refl A)]\n#align zpow_bit1' zpow_bit1'\n-/\n\n",
 "zpow_bit1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_bit1 /-\ntheorem zpow_bit1 (A : exprM) (n : ℤ) : A ^ bit1 n = A ^ n * A ^ n * A :=\n  by\n  rw [bit1, zpow_add_one_of_ne_neg_one, zpow_bit0]\n  intro h\n  simpa using congr_arg bodd h\n#align zpow_bit1 zpow_bit1\n-/\n\n",
 "zpow_bit0'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_bit0' /-\ntheorem zpow_bit0' (A : exprM) (n : ℤ) : A ^ bit0 n = (A * A) ^ n :=\n  (zpow_bit0 A n).trans (Commute.mul_zpow (Commute.refl A) n).symm\n#align zpow_bit0' zpow_bit0'\n-/\n\n",
 "zpow_bit0":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_bit0 /-\ntheorem zpow_bit0 (A : exprM) (n : ℤ) : A ^ bit0 n = A ^ n * A ^ n :=\n  by\n  cases' le_total 0 n with nonneg nonpos\n  · exact zpow_add_of_nonneg nonneg nonneg\n  · exact zpow_add_of_nonpos nonpos nonpos\n#align zpow_bit0 zpow_bit0\n-/\n\n",
 "zpow_add_one_of_ne_neg_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\ntheorem zpow_add_one_of_ne_neg_one {A : exprM} : ∀ n : ℤ, n ≠ -1 → A ^ (n + 1) = A ^ n * A\n  | (n : ℕ), _ => by simp only [pow_succ', ← Nat.cast_succ, zpow_ofNat]\n  | -1, h => absurd rfl h\n  | -((n : ℕ) + 2), _ => by\n    rcases nonsing_inv_cancel_or_zero A with (⟨h, h'⟩ | h)\n    · apply zpow_add_one (is_unit_det_of_left_inverse h)\n    · show A ^ (-((n + 1 : ℕ) : ℤ)) = A ^ (-((n + 2 : ℕ) : ℤ)) * A\n      simp_rw [zpow_neg_coe_nat, ← inv_pow', h, zero_pow Nat.succ_pos', MulZeroClass.zero_mul]\n#align zpow_add_one_of_ne_neg_one zpow_add_one_of_ne_neg_one\n\n",
 "zpow_add_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_add_one /-\ntheorem zpow_add_one {A : exprM} (h : IsUnit A.det) : ∀ n : ℤ, A ^ (n + 1) = A ^ n * A\n  | (n : ℕ) => by simp only [← Nat.cast_succ, pow_succ', zpow_ofNat]\n  | -((n : ℕ) + 1) =>\n    calc\n      A ^ (-(n + 1) + 1 : ℤ) = (A ^ n)⁻¹ := by rw [neg_add, neg_add_cancel_right, zpow_neg h, zpow_ofNat]\n      _ = matrix.mul (matrix.mul A (A ^ n))⁻¹ A := by\n        rw [mul_inv_rev, Matrix.mul_assoc, nonsing_inv_mul _ h, Matrix.mul_one]\n      _ = A ^ (-(n + 1 : ℤ)) * A := by rw [zpow_neg h, ← Int.ofNat_succ, zpow_ofNat, pow_succ, mul_eq_mul, mul_eq_mul]\n      \n#align zpow_add_one zpow_add_one\n-/\n\n",
 "zpow_add_of_nonpos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\ntheorem zpow_add_of_nonpos {A : exprM} {m n : ℤ} (hm : m ≤ 0) (hn : n ≤ 0) : A ^ (m + n) = A ^ m * A ^ n :=\n  by\n  rcases nonsing_inv_cancel_or_zero A with (⟨h, h'⟩ | h)\n  · exact zpow_add (is_unit_det_of_left_inverse h) m n\n  · obtain ⟨k, rfl⟩ := exists_eq_neg_of_nat hm\n    obtain ⟨l, rfl⟩ := exists_eq_neg_of_nat hn\n    simp_rw [← neg_add, ← Int.ofNat_add, zpow_neg_coe_nat, ← inv_pow', h, pow_add]\n#align zpow_add_of_nonpos zpow_add_of_nonpos\n\n",
 "zpow_add_of_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\ntheorem zpow_add_of_nonneg {A : exprM} {m n : ℤ} (hm : 0 ≤ m) (hn : 0 ≤ n) : A ^ (m + n) = A ^ m * A ^ n :=\n  by\n  obtain ⟨k, rfl⟩ := eq_coe_of_zero_le hm\n  obtain ⟨l, rfl⟩ := eq_coe_of_zero_le hn\n  rw [← Int.ofNat_add, zpow_ofNat, zpow_ofNat, zpow_ofNat, pow_add]\n#align zpow_add_of_nonneg zpow_add_of_nonneg\n\n",
 "zpow_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zpow_add /-\ntheorem zpow_add {A : exprM} (ha : IsUnit A.det) (m n : ℤ) : A ^ (m + n) = A ^ m * A ^ n :=\n  by\n  induction' n using Int.induction_on with n ihn n ihn\n  case hz => simp\n  · simp only [← add_assoc, zpow_add_one ha, ihn, mul_assoc]\n  · rw [zpow_sub_one ha, ← mul_assoc, ← ihn, ← zpow_sub_one ha, add_sub_assoc]\n#align zpow_add zpow_add\n-/\n\n",
 "zero_zpow_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zero_zpow_eq /-\ntheorem zero_zpow_eq (n : ℤ) : (0 : exprM) ^ n = if n = 0 then 1 else 0 :=\n  by\n  split_ifs with h\n  · rw [h, zpow_zero]\n  · rw [zero_zpow _ h]\n#align zero_zpow_eq zero_zpow_eq\n-/\n\n",
 "zero_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print zero_zpow /-\ntheorem zero_zpow : ∀ z : ℤ, z ≠ 0 → (0 : exprM) ^ z = 0\n  | (n : ℕ), h => by\n    rw [zpow_ofNat, zero_pow]\n    refine' lt_of_le_of_ne n.zero_le (ne.symm _)\n    simpa using h\n  | -[n+1], h => by simp [zero_pow n.zero_lt_succ]\n#align zero_zpow zero_zpow\n-/\n\n",
 "transpose_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.transpose -/\n@[simp]\ntheorem transpose_zpow (A : exprM) : ∀ n : ℤ, matrix.transpose (A ^ n) = matrix.transpose A ^ n\n  | (n : ℕ) => by rw [zpow_ofNat, zpow_ofNat, transpose_pow]\n  | -[n+1] => by rw [zpow_negSucc, zpow_negSucc, transpose_nonsing_inv, transpose_pow]\n#align transpose_zpow transpose_zpow\n\n",
 "self_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print Commute.self_zpow /-\ntheorem Commute.self_zpow (A : exprM) (n : ℤ) : Commute A (A ^ n) :=\n  Commute.zpow_right (Commute.refl A) _\n#align commute.self_zpow Commute.self_zpow\n-/\n\n",
 "pow_sub'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem pow_sub' (A : exprM) {m n : ℕ} (ha : IsUnit A.det) (h : n ≤ m) : A ^ (m - n) = matrix.mul (A ^ m) (A ^ n)⁻¹ :=\n  by\n  rw [← tsub_add_cancel_of_le h, pow_add, mul_eq_mul, Matrix.mul_assoc, mul_nonsing_inv, tsub_add_cancel_of_le h,\n    Matrix.mul_one]\n  simpa using ha.pow n\n#align pow_sub' pow_sub'\n\n",
 "pow_inv_comm'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.mul -/\ntheorem pow_inv_comm' (A : exprM) (m n : ℕ) : matrix.mul (A⁻¹ ^ m) (A ^ n) = matrix.mul (A ^ n) (A⁻¹ ^ m) :=\n  by\n  induction' n with n IH generalizing m\n  · simp\n  cases m\n  · simp\n  rcases nonsing_inv_cancel_or_zero A with (⟨h, h'⟩ | h)\n  ·\n    calc\n      matrix.mul (A⁻¹ ^ (m + 1)) (A ^ (n + 1)) = matrix.mul (matrix.mul (A⁻¹ ^ m) (matrix.mul A⁻¹ A)) (A ^ n) := by\n        simp only [pow_succ' A⁻¹, pow_succ A, mul_eq_mul, Matrix.mul_assoc]\n      _ = matrix.mul (A ^ n) (A⁻¹ ^ m) := by simp only [h, Matrix.mul_one, Matrix.one_mul, IH m]\n      _ = matrix.mul (matrix.mul (A ^ n) (matrix.mul A A⁻¹)) (A⁻¹ ^ m) := by\n        simp only [h', Matrix.mul_one, Matrix.one_mul]\n      _ = matrix.mul (A ^ (n + 1)) (A⁻¹ ^ (m + 1)) := by\n        simp only [pow_succ' A, pow_succ A⁻¹, mul_eq_mul, Matrix.mul_assoc]\n      \n  · simp [h]\n#align pow_inv_comm' pow_inv_comm'\n\n",
 "one_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print one_zpow /-\n@[simp]\ntheorem one_zpow : ∀ n : ℤ, (1 : exprM) ^ n = 1\n  | (n : ℕ) => by rw [zpow_ofNat, one_pow]\n  | -[n+1] => by rw [zpow_negSucc, one_pow, inv_one]\n#align one_zpow one_zpow\n-/\n\n",
 "one_div_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print one_div_zpow /-\ntheorem one_div_zpow {A : exprM} (n : ℤ) : (1 / A) ^ n = 1 / A ^ n := by simp only [one_div, inv_zpow]\n#align one_div_zpow one_div_zpow\n-/\n\n",
 "one_div_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print one_div_pow /-\ntheorem one_div_pow {A : exprM} (n : ℕ) : (1 / A) ^ n = 1 / A ^ n := by simp only [one_div, inv_pow']\n#align one_div_pow one_div_pow\n-/\n\n",
 "mul_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print Commute.mul_zpow /-\ntheorem Commute.mul_zpow {A B : exprM} (h : Commute A B) : ∀ i : ℤ, (A * B) ^ i = A ^ i * B ^ i\n  | (n : ℕ) => by simp [h.mul_pow n, -mul_eq_mul]\n  | -[n+1] => by\n    rw [zpow_negSucc, zpow_negSucc, zpow_negSucc, mul_eq_mul _⁻¹, ← mul_inv_rev, ← mul_eq_mul, h.mul_pow n.succ,\n      (h.pow_pow _ _).eq]\n#align commute.mul_zpow Commute.mul_zpow\n-/\n\n",
 "is_unit_det_zpow_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\ntheorem is_unit_det_zpow_iff {A : exprM} {z : ℤ} : IsUnit (A ^ z).det ↔ IsUnit A.det ∨ z = 0 :=\n  by\n  induction' z using Int.induction_on with z IH z IH\n  · simp\n  · rw [← Int.ofNat_succ, zpow_ofNat, det_pow, isUnit_pow_succ_iff, ← Int.ofNat_zero, Int.ofNat_inj]\n    simp\n  · rw [← neg_add', ← Int.ofNat_succ, zpow_neg_coe_nat, is_unit_nonsing_inv_det_iff, det_pow, isUnit_pow_succ_iff,\n      neg_eq_zero, ← Int.ofNat_zero, Int.ofNat_inj]\n    simp\n#align is_unit_det_zpow_iff is_unit_det_zpow_iff\n\n",
 "inv_zpow'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print inv_zpow' /-\ntheorem inv_zpow' {A : exprM} (h : IsUnit A.det) (n : ℤ) : A⁻¹ ^ n = A ^ (-n) := by rw [zpow_neg h, inv_zpow]\n#align inv_zpow' inv_zpow'\n-/\n\n",
 "inv_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print inv_zpow /-\ntheorem inv_zpow (A : exprM) : ∀ n : ℤ, A⁻¹ ^ n = (A ^ n)⁻¹\n  | (n : ℕ) => by rw [zpow_ofNat, zpow_ofNat, inv_pow']\n  | -[n+1] => by rw [zpow_negSucc, zpow_negSucc, inv_pow']\n#align inv_zpow inv_zpow\n-/\n\n",
 "inv_pow'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n/-\nCopyright (c) 2021 Yakov Pechersky. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Yakov Pechersky\n-/\n@[simp]\ntheorem inv_pow' (A : exprM) (n : ℕ) : A⁻¹ ^ n = (A ^ n)⁻¹ :=\n  by\n  induction' n with n ih\n  · simp\n  · rw [pow_succ A, mul_eq_mul, mul_inv_rev, ← ih, ← mul_eq_mul, ← pow_succ']\n#align inv_pow' inv_pow'\n\n",
 "det_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n#print IsUnit.det_zpow /-\ntheorem IsUnit.det_zpow {A : exprM} (h : IsUnit A.det) (n : ℤ) : IsUnit (A ^ n).det :=\n  by\n  cases n\n  · simpa using h.pow n\n  · simpa using h.pow n.succ\n#align is_unit.det_zpow IsUnit.det_zpow\n-/\n\n",
 "conj_transpose_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `matrix.conj_transpose -/\n@[simp]\ntheorem conj_transpose_zpow [StarRing R] (A : exprM) :\n    ∀ n : ℤ, matrix.conj_transpose (A ^ n) = matrix.conj_transpose A ^ n\n  | (n : ℕ) => by rw [zpow_ofNat, zpow_ofNat, conj_transpose_pow]\n  | -[n+1] => by rw [zpow_negSucc, zpow_negSucc, conj_transpose_nonsing_inv, conj_transpose_pow]\n#align conj_transpose_zpow conj_transpose_zpow\n\n",
 "coe_units_zpow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ˣ» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprM -/\n@[simp, norm_cast]\ntheorem coe_units_zpow (u : «expr ˣ» (exprM)) : ∀ n : ℤ, ((u ^ n : «expr ˣ» (exprM)) : exprM) = u ^ n\n  | (n : ℕ) => by rw [_root_.zpow_coe_nat, zpow_ofNat, Units.val_pow_eq_pow_val]\n  | -[k+1] => by rw [zpow_negSucc, zpow_negSucc, ← inv_pow, u⁻¹.coe_pow, ← inv_pow', coe_units_inv]\n#align coe_units_zpow coe_units_zpow\n\n"}