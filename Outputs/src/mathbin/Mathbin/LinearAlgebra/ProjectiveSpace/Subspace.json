{"sup_span":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/-- The supremum of a subspace and the span of a set of points is equal to the span of the union of\nthe subspace and the set of points. -/\ntheorem sup_span {S : set ((exprℙ) K V)} {W : subspace K V} : «expr ⊔ » W (span S) = span (W ∪ S) := by\n  rw [span_union, span_coe]\n#align sup_span sup_span\n\n",
 "subset_span_trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\ntheorem subset_span_trans {S T U : set ((exprℙ) K V)} (hST : S ⊆ span T) (hTU : T ⊆ span U) : S ⊆ span U :=\n  gi.gc.le_u_l_trans hST hTU\n#align subset_span_trans subset_span_trans\n\n",
 "subset_span":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/-- The span of a set of points contains the set of points. -/\ntheorem subset_span (S : set ((exprℙ) K V)) : S ⊆ span S := fun x hx => span_carrier.of _ hx\n#align subset_span subset_span\n\n",
 "span_univ":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- The span of the entire projective space is the top of the lattice of subspaces. -/\n@[simp]\ntheorem span_univ : span (Set.univ : set ((exprℙ) K V)) = «expr⊤» :=\n  by\n  rw [eq_top_iff, SetLike.le_def]\n  intro x hx\n  exact subset_span _ (Set.mem_univ x)\n#align span_univ span_univ\n\n",
 "span_union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\n/-- The supremum of two subspaces is equal to the span of their union. -/\ntheorem span_union (S T : set ((exprℙ) K V)) : span (S ∪ T) = «expr ⊔ » (span S) (span T) :=\n  (@gi K V _ _ _).gc.l_sup\n#align span_union span_union\n\n",
 "span_sup":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊔ » -/\ntheorem span_sup {S : set ((exprℙ) K V)} {W : subspace K V} : «expr ⊔ » (span S) W = span (S ∪ W) := by\n  rw [span_union, span_coe]\n#align span_sup span_sup\n\n",
 "span_le_subspace_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/-- The span of a set of points is contained in a subspace if and only if the set of points is\ncontained in the subspace. -/\ntheorem span_le_subspace_iff {S : set ((exprℙ) K V)} {W : subspace K V} : span S ≤ W ↔ S ⊆ W :=\n  gi.gc S W\n#align span_le_subspace_iff span_le_subspace_iff\n\n",
 "span_eq_span_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/-- The spans of two sets of points in a projective space are equal if and only if each set of\npoints is contained in the span of the other set. -/\ntheorem span_eq_span_iff {S T : set ((exprℙ) K V)} : span S = span T ↔ S ⊆ span T ∧ T ⊆ span S :=\n  ⟨fun h => ⟨h ▸ subset_span S, h.symm ▸ subset_span T⟩, fun h =>\n    le_antisymm (span_le_subspace_iff.2 h.1) (span_le_subspace_iff.2 h.2)⟩\n#align span_eq_span_iff span_eq_span_iff\n\n",
 "span_eq_of_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/-- If a set of points in projective space is contained in a subspace, and that subspace is\ncontained in the span of the set of points, then the span of the set of points is equal to\nthe subspace. -/\ntheorem span_eq_of_le {S : set ((exprℙ) K V)} {W : subspace K V} (hS : S ⊆ W) (hW : W ≤ span S) : span S = W :=\n  le_antisymm (span_le_subspace_iff.mpr hS) hW\n#align span_eq_of_le span_eq_of_le\n\n",
 "span_eq_Inf":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/-- The span of a set of points in a projective space is equal to the infimum of the collection of\nsubspaces which contain the set. -/\ntheorem span_eq_Inf {S : set ((exprℙ) K V)} : span S = infₛ { W | S ⊆ W } :=\n  by\n  ext\n  simp_rw [mem_carrier_iff, mem_span x]\n  refine' ⟨fun hx => _, fun hx W hW => _⟩\n  · rintro W ⟨T, ⟨hT, rfl⟩⟩\n    exact hx T hT\n  · exact (@infₛ_le _ _ { W : subspace K V | S ⊆ ↑W } W hW) x hx\n#align span_eq_Inf span_eq_Inf\n\n",
 "span_empty":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊥» -/\n/-- The span of the empty set is the bottom of the lattice of subspaces. -/\n@[simp]\ntheorem span_empty : span (∅ : set ((exprℙ) K V)) = «expr⊥» :=\n  gi.gc.l_bot\n#align span_empty span_empty\n\n",
 "span_coe":
 "/-- The span of a subspace is the subspace. -/\n@[simp]\ntheorem span_coe (W : subspace K V) : span ↑W = W :=\n  GaloisInsertion.l_u_eq gi W\n#align span_coe span_coe\n\n",
 "span_Union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⨆ , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , » -/\n/-- The supremum of a collection of subspaces is equal to the span of the union of the\ncollection. -/\ntheorem span_Union {ι} (s : ι → set ((exprℙ) K V)) :\n    span («expr⋃ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⋃ , »\" (s i)) =\n      «expr⨆ , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr⨆ , »\" (span (s i)) :=\n  (@gi K V _ _ _).gc.l_supr\n#align span_Union span_Union\n\n",
 "monotone_span":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/-- If a set of points is a subset of another set of points, then its span will be contained in the\nspan of that set. -/\n@[mono]\ntheorem monotone_span : monotone (span : set ((exprℙ) K V) → subspace K V) :=\n  gi.gc.monotone_l\n#align monotone_span monotone_span\n\n",
 "mem_span":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/-- A point in a projective space is contained in the span of a set of points if and only if the\npoint is contained in all subspaces of the projective space which contain the set of points. -/\ntheorem mem_span {S : set ((exprℙ) K V)} (u : (exprℙ) K V) : u ∈ span S ↔ ∀ W : subspace K V, S ⊆ W → u ∈ W :=\n  by\n  simp_rw [← span_le_subspace_iff]\n  exact ⟨fun hu W hW => hW hu, fun W => W (span S) (le_refl _)⟩\n#align mem_span mem_span\n\n",
 "mem_carrier_iff":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℙ -/\n/-\nCopyright (c) 2022 Michael Blyth. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Michael Blyth\n-/\n@[simp]\ntheorem mem_carrier_iff (A : subspace K V) (x : (exprℙ) K V) : x ∈ A.carrier ↔ x ∈ A :=\n  iff.refl _\n#align mem_carrier_iff mem_carrier_iff\n\n",
 "mem_add":
 "theorem mem_add (T : subspace K V) (v w : V) (hv : v ≠ 0) (hw : w ≠ 0) (hvw : v + w ≠ 0) :\n    projectivization.mk K v hv ∈ T → projectivization.mk K w hw ∈ T → projectivization.mk K (v + w) hvw ∈ T :=\n  T.mem_add' v w hv hw hvw\n#align mem_add mem_add\n\n"}