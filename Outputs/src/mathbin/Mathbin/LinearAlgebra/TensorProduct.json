{"zero_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem zero_tmul (n : N) : «expr ⊗ₜ[ ] » (0 : M) R n = 0 :=\n  quotient.sound' <| add_con_gen.rel.of _ _ <| eqv.of_zero_left _\n#align zero_tmul zero_tmul\n\n",
 "zero_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print zero_smul /-\nprotected theorem zero_smul (x : tensor_product M R N) : «expr • » (0 : R'') x = 0 :=\n  have : ∀ (r : R'') (m : M) (n : N), «expr • » r («expr ⊗ₜ[ ] » m R n) = «expr ⊗ₜ » («expr • » r m) n := fun _ _ _ =>\n    rfl\n  tensor_product.induction_on x (by rw [tensor_product.smul_zero]) (fun m n => by rw [this, zero_smul, zero_tmul])\n    fun x y ihx ihy => by rw [tensor_product.smul_add, ihx, ihy, add_zero]\n#align zero_smul zero_smul\n-/\n\n",
 "unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\ntheorem lift.unique {g : «expr →ₗ[ ] » (tensor_product M R N) R P} (H : ∀ x y, g («expr ⊗ₜ » x y) = f x y) :\n    g = lift f :=\n  ext' fun m n => by rw [H, lift.tmul]\n#align lift.unique lift.unique\n\n",
 "uncurry_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem uncurry_apply (f : «expr →ₗ[ ] » M R («expr →ₗ[ ] » N R P)) (m : M) (n : N) :\n    uncurry R M N P f («expr ⊗ₜ » m n) = f m n := by rw [uncurry, linear_map.flip_apply, lift.tmul] <;> rfl\n#align uncurry_apply uncurry_apply\n\n",
 "tmul_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem tmul_zero (m : M) : «expr ⊗ₜ[ ] » m R (0 : N) = 0 :=\n  quotient.sound' <| add_con_gen.rel.of _ _ <| eqv.of_zero_right _\n#align tmul_zero tmul_zero\n\n",
 "tmul_sum":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem tmul_sum (m : M) {α : Type _} (s : Finset α) (n : α → N) :\n    «expr ⊗ₜ[ ] » m R\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (n a)) =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr ⊗ₜ[ ] » m R (n a)) :=\n  by\n  classical\n    induction' s using Finset.induction with a s has ih h\n    · simp\n    · simp [finset.sum_insert has, tmul_add, ih]\n#align tmul_sum tmul_sum\n\n",
 "tmul_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem tmul_sub (m : M) (n₁ n₂ : N) : «expr ⊗ₜ » m (n₁ - n₂) = «expr ⊗ₜ[ ] » m R n₁ - «expr ⊗ₜ[ ] » m R n₂ :=\n  (mk R M N _).map_sub _ _\n#align tmul_sub tmul_sub\n\n",
 "tmul_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n@[simp]\ntheorem tmul_smul [DistribMulAction R' N] [compatible_smul R R' M N] (r : R') (x : M) (y : N) :\n    «expr ⊗ₜ » x («expr • » r y) = «expr • » r («expr ⊗ₜ[ ] » x R y) :=\n  (smul_tmul _ _ _).symm\n#align tmul_smul tmul_smul\n\n",
 "tmul_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem tmul_neg (m : M) (n : N) : «expr ⊗ₜ » m (-n) = -«expr ⊗ₜ[ ] » m R n :=\n  (mk R M N _).map_neg _\n#align tmul_neg tmul_neg\n\n",
 "tmul_ite":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\ntheorem tmul_ite (x₁ : M) (x₂ : N) (P : Prop) [decidable P] :\n    «expr ⊗ₜ[ ] » x₁ R (if P then x₂ else 0) = if P then «expr ⊗ₜ » x₁ x₂ else 0 := by split_ifs <;> simp\n#align tmul_ite tmul_ite\n\n",
 "tmul_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem tmul_add (m : M) (n₁ n₂ : N) : «expr ⊗ₜ » m (n₁ + n₂) = «expr ⊗ₜ » m n₁ + «expr ⊗ₜ[ ] » m R n₂ :=\n  eq.symm <| quotient.sound' <| add_con_gen.rel.of _ _ <| eqv.of_add_right _ _ _\n#align tmul_add tmul_add\n\n",
 "tmul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem lift.tmul' (x y) : (lift f).1 («expr ⊗ₜ » x y) = f x y :=\n  rfl\n#align lift.tmul' lift.tmul'\n\n",
 "tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem lift.tmul (x y) : lift f («expr ⊗ₜ » x y) = f x y :=\n  rfl\n#align lift.tmul lift.tmul\n\n",
 "tensor_tensor_tensor_comm_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem tensor_tensor_tensor_comm_tmul (m : M) (n : N) (p : P) (q : Q) :\n    tensor_tensor_tensor_comm R M N P Q («expr ⊗ₜ » («expr ⊗ₜ » m n) («expr ⊗ₜ » p q)) =\n      «expr ⊗ₜ » («expr ⊗ₜ » m p) («expr ⊗ₜ » n q) :=\n  rfl\n#align tensor_tensor_tensor_comm_tmul tensor_tensor_tensor_comm_tmul\n\n",
 "tensor_tensor_tensor_comm_symm":
 "@[simp]\ntheorem tensor_tensor_tensor_comm_symm :\n    (tensor_tensor_tensor_comm R M N P Q).symm = tensor_tensor_tensor_comm R M P N Q :=\n  rfl\n#align tensor_tensor_tensor_comm_symm tensor_tensor_tensor_comm_symm\n\n",
 "tensor_tensor_tensor_assoc_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem tensor_tensor_tensor_assoc_tmul (m : M) (n : N) (p : P) (q : Q) :\n    tensor_tensor_tensor_assoc R M N P Q («expr ⊗ₜ » («expr ⊗ₜ » m n) («expr ⊗ₜ » p q)) =\n      «expr ⊗ₜ » («expr ⊗ₜ » m («expr ⊗ₜ » n p)) q :=\n  rfl\n#align tensor_tensor_tensor_assoc_tmul tensor_tensor_tensor_assoc_tmul\n\n",
 "tensor_tensor_tensor_assoc_symm_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem tensor_tensor_tensor_assoc_symm_tmul (m : M) (n : N) (p : P) (q : Q) :\n    (tensor_tensor_tensor_assoc R M N P Q).symm («expr ⊗ₜ » («expr ⊗ₜ » m («expr ⊗ₜ » n p)) q) =\n      «expr ⊗ₜ » («expr ⊗ₜ » m n) («expr ⊗ₜ » p q) :=\n  rfl\n#align tensor_tensor_tensor_assoc_symm_tmul tensor_tensor_tensor_assoc_symm_tmul\n\n",
 "sum_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem sum_tmul {α : Type _} (s : Finset α) (m : α → M) (n : N) :\n    «expr ⊗ₜ[ ] »\n        (finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s (m a)) R n =\n      finset.sum \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `finset.sum\" s\n        («expr ⊗ₜ[ ] » (m a) R n) :=\n  by\n  classical\n    induction' s using Finset.induction with a s has ih h\n    · simp\n    · simp [finset.sum_insert has, add_tmul, ih]\n#align sum_tmul sum_tmul\n\n",
 "sub_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem sub_tmul (m₁ m₂ : M) (n : N) : «expr ⊗ₜ » (m₁ - m₂) n = «expr ⊗ₜ[ ] » m₁ R n - «expr ⊗ₜ[ ] » m₂ R n :=\n  (mk R M N).map_sub₂ _ _ _\n#align sub_tmul sub_tmul\n\n",
 "span_tmul_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/-- The simple (aka pure) elements span the tensor product. -/\ntheorem span_tmul_eq_top : submodule.span R { t : tensor_product M R N | ∃ m n, «expr ⊗ₜ » m n = t } = «expr⊤» :=\n  by\n  ext t; simp only [submodule.mem_top, iff_true_iff]\n  apply t.induction_on\n  · exact submodule.zero_mem _\n  · intro m n\n    apply submodule.subset_span\n    use m, n\n  · intro t₁ t₂ ht₁ ht₂\n    exact submodule.add_mem _ ht₁ ht₂\n#align span_tmul_eq_top span_tmul_eq_top\n\n",
 "smul_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n#print smul_zero /-\nprotected theorem smul_zero (r : R') : («expr • » r 0 : tensor_product M R N) = 0 :=\n  AddMonoidHom.map_zero _\n#align smul_zero smul_zero\n-/\n\n",
 "smul_tmul_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem smul_tmul_smul (r s : R) (m : M) (n : N) :\n    «expr ⊗ₜ[ ] » («expr • » r m) R («expr • » s n) = «expr • » (r * s) («expr ⊗ₜ[ ] » m R n) := by\n  simp only [tmul_smul, smul_tmul, mul_smul]\n#align smul_tmul_smul smul_tmul_smul\n\n",
 "smul_tmul'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem smul_tmul' (r : R') (m : M) (n : N) : «expr • » r («expr ⊗ₜ[ ] » m R n) = «expr ⊗ₜ » («expr • » r m) n :=\n  rfl\n#align smul_tmul' smul_tmul'\n\n",
 "smul_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/-- `smul` can be moved from one side of the product to the other .-/\ntheorem smul_tmul [DistribMulAction R' N] [compatible_smul R R' M N] (r : R') (m : M) (n : N) :\n    «expr ⊗ₜ » («expr • » r m) n = «expr ⊗ₜ[ ] » m R («expr • » r n) :=\n  compatible_smul.smul_tmul _ _ _\n#align smul_tmul smul_tmul\n\n",
 "smul_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print smul_add /-\nprotected theorem smul_add (r : R') (x y : tensor_product M R N) :\n    «expr • » r (x + y) = «expr • » r x + «expr • » r y :=\n  AddMonoidHom.map_add _ _ _\n#align smul_add smul_add\n-/\n\n",
 "smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem lift_aux.smul (r : R) (x) : lift_aux f («expr • » r x) = «expr • » r (lift_aux f x) :=\n  tensor_product.induction_on x (smul_zero _).symm\n    (fun p q => by rw [← tmul_smul, lift_aux_tmul, lift_aux_tmul, (f p).map_smul]) fun p q ih1 ih2 => by\n    rw [smul_add, (lift_aux f).map_add, ih1, ih2, (lift_aux f).map_add, smul_add]\n#align lift_aux.smul lift_aux.smul\n\n",
 "rtensor_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem rtensor_zero : rtensor M (0 : «expr →ₗ[ ] » N R P) = 0 :=\n  (rtensor_hom M).map_zero\n#align rtensor_zero rtensor_zero\n\n",
 "rtensor_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem rtensor_tmul (m : M) (n : N) : f.rtensor M («expr ⊗ₜ » n m) = «expr ⊗ₜ » (f n) m :=\n  rfl\n#align rtensor_tmul rtensor_tmul\n\n",
 "rtensor_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem rtensor_sub (f g : «expr →ₗ[ ] » N R P) : (f - g).rtensor M = f.rtensor M - g.rtensor M := by\n  simp only [← coe_rtensor_hom, map_sub]\n#align rtensor_sub rtensor_sub\n\n",
 "rtensor_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem rtensor_smul (r : R) (f : «expr →ₗ[ ] » N R P) : («expr • » r f).rtensor M = «expr • » r (f.rtensor M) :=\n  (rtensor_hom M).map_smul r f\n#align rtensor_smul rtensor_smul\n\n",
 "rtensor_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem rtensor_pow (f : «expr →ₗ[ ] » M R M) (n : ℕ) : f.rtensor N ^ n = (f ^ n).rtensor N :=\n  by\n  have h := tensor_product.map_pow f (id : «expr →ₗ[ ] » N R N) n\n  rwa [id_pow] at h\n#align rtensor_pow rtensor_pow\n\n",
 "rtensor_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem rtensor_neg (f : «expr →ₗ[ ] » N R P) : (-f).rtensor M = -f.rtensor M := by\n  simp only [← coe_rtensor_hom, map_neg]\n#align rtensor_neg rtensor_neg\n\n",
 "rtensor_mul":
 "theorem rtensor_mul (f g : module.End R N) : (f * g).rtensor M = f.rtensor M * g.rtensor M :=\n  rtensor_comp M f g\n#align rtensor_mul rtensor_mul\n\n",
 "rtensor_id_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n-- `simp` can prove this.\ntheorem rtensor_id_apply (x : tensor_product N R M) : (linear_map.id : «expr →ₗ[ ] » N R N).rtensor M x = x := by\n  rw [rtensor_id, id_coe, id.def]\n#align rtensor_id_apply rtensor_id_apply\n\n",
 "rtensor_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem rtensor_id : (id : «expr →ₗ[ ] » N R N).rtensor M = id :=\n  map_id\n#align rtensor_id rtensor_id\n\n",
 "rtensor_hom_to_hom_rtensor_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem rtensor_hom_to_hom_rtensor_apply (f : «expr →ₗ[ ] » M R P) (q : Q) (m : M) :\n    rtensor_hom_to_hom_rtensor R M P Q («expr ⊗ₜ » f q) m = «expr ⊗ₜ » (f m) q :=\n  rfl\n#align rtensor_hom_to_hom_rtensor_apply rtensor_hom_to_hom_rtensor_apply\n\n",
 "rtensor_comp_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem rtensor_comp_map (f' : «expr →ₗ[ ] » P R S) (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) :\n    (f'.rtensor _).comp (map f g) = map (f'.comp f) g := by simp only [ltensor, rtensor, ← map_comp, id_comp, comp_id]\n#align rtensor_comp_map rtensor_comp_map\n\n",
 "rtensor_comp_ltensor":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem rtensor_comp_ltensor (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) :\n    (f.rtensor Q).comp (g.ltensor M) = map f g := by simp only [ltensor, rtensor, ← map_comp, id_comp, comp_id]\n#align rtensor_comp_ltensor rtensor_comp_ltensor\n\n",
 "rtensor_comp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\ntheorem rtensor_comp_apply (x : tensor_product N R M) : (g.comp f).rtensor M x = (g.rtensor M) ((f.rtensor M) x) := by\n  rw [rtensor_comp, coe_comp]\n#align rtensor_comp_apply rtensor_comp_apply\n\n",
 "rtensor_comp":
 "theorem rtensor_comp : (g.comp f).rtensor M = (g.rtensor M).comp (f.rtensor M) :=\n  by\n  ext (m n)\n  simp only [compr₂_apply, mk_apply, comp_apply, rtensor_tmul]\n#align rtensor_comp rtensor_comp\n\n",
 "rtensor_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem rtensor_add (f g : «expr →ₗ[ ] » N R P) : (f + g).rtensor M = f.rtensor M + g.rtensor M :=\n  (rtensor_hom M).map_add f g\n#align rtensor_add rtensor_add\n\n",
 "rid_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem rid_tmul (m : M) (r : R) : (tensor_product.rid R M) («expr ⊗ₜ » m r) = «expr • » r m :=\n  by\n  dsimp [tensor_product.rid, tensor_product.comm, tensor_product.lid]\n  simp\n#align rid_tmul rid_tmul\n\n",
 "rid_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem rid_symm_apply (m : M) : (tensor_product.rid R M).symm m = «expr ⊗ₜ » m 1 :=\n  rfl\n#align rid_symm_apply rid_symm_apply\n\n",
 "one_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print one_smul /-\nprotected theorem one_smul (x : tensor_product M R N) : «expr • » (1 : R') x = x :=\n  have : ∀ (r : R') (m : M) (n : N), «expr • » r («expr ⊗ₜ[ ] » m R n) = «expr ⊗ₜ » («expr • » r m) n := fun _ _ _ =>\n    rfl\n  tensor_product.induction_on x (by rw [tensor_product.smul_zero]) (fun m n => by rw [this, one_smul])\n    fun x y ihx ihy => by rw [tensor_product.smul_add, ihx, ihy]\n#align one_smul one_smul\n-/\n\n",
 "neg_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem neg_tmul (m : M) (n : N) : «expr ⊗ₜ » (-m) n = -«expr ⊗ₜ[ ] » m R n :=\n  rfl\n#align neg_tmul neg_tmul\n\n",
 "mk_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n-- Like `R'`, `R'₂` provides a `distrib_mul_action R'₂ (M ⊗[R] N)`\n-- or right\n@[simp]\ntheorem mk_apply (m : M) (n : N) : mk R M N m n = «expr ⊗ₜ » m n :=\n  rfl\n#align mk_apply mk_apply\n\n",
 "map₂_mk_top_top_eq_top":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⊤» -/\n@[simp]\ntheorem map₂_mk_top_top_eq_top : submodule.map₂ (mk R M N) («expr⊤») («expr⊤») = «expr⊤» :=\n  by\n  rw [← top_le_iff, ← span_tmul_eq_top, submodule.map₂_eq_span_image2]\n  exact submodule.span_mono fun _ ⟨m, n, h⟩ => ⟨m, n, trivial, trivial, h⟩\n#align map₂_mk_top_top_eq_top map₂_mk_top_top_eq_top\n\n",
 "map_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem map_tmul (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) (m : M) (n : N) :\n    map f g («expr ⊗ₜ » m n) = «expr ⊗ₜ » (f m) (g n) :=\n  rfl\n#align map_tmul map_tmul\n\n",
 "map_smul_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem map_smul_right (r : R) (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) :\n    map f («expr • » r g) = «expr • » r (map f g) := by\n  ext\n  simp only [smul_tmul, compr₂_apply, mk_apply, map_tmul, smul_apply, tmul_smul]\n#align map_smul_right map_smul_right\n\n",
 "map_smul_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem map_smul_left (r : R) (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) :\n    map («expr • » r f) g = «expr • » r (map f g) := by\n  ext\n  simp only [smul_tmul, compr₂_apply, mk_apply, map_tmul, smul_apply, tmul_smul]\n#align map_smul_left map_smul_left\n\n",
 "map_range_eq_span_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\ntheorem map_range_eq_span_tmul (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) :\n    (map f g).range = submodule.span R { t | ∃ m n, «expr ⊗ₜ » (f m) (g n) = t } :=\n  by\n  simp only [← submodule.map_top, ← span_tmul_eq_top, submodule.map_span, Set.mem_image, Set.mem_setOf_eq]\n  congr ; ext t\n  constructor\n  · rintro ⟨_, ⟨⟨m, n, rfl⟩, rfl⟩⟩\n    use m, n\n    simp only [map_tmul]\n  · rintro ⟨m, n, rfl⟩\n    use «expr ⊗ₜ » m n, m, n\n    simp only [map_tmul]\n#align map_range_eq_span_tmul map_range_eq_span_tmul\n\n",
 "map_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n#print map_pow /-\n@[simp]\nprotected theorem map_pow (f : «expr →ₗ[ ] » M R M) (g : «expr →ₗ[ ] » N R N) (n : ℕ) :\n    map f g ^ n = map (f ^ n) (g ^ n) := by\n  induction' n with n ih\n  · simp only [pow_zero, map_one]\n  · simp only [pow_succ', ih, map_mul]\n#align map_pow map_pow\n-/\n\n",
 "map_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n#print map_one /-\n@[simp]\ntheorem map_one : map (1 : «expr →ₗ[ ] » M R M) (1 : «expr →ₗ[ ] » N R N) = 1 :=\n  map_id\n#align map_one map_one\n-/\n\n",
 "map_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n#print map_mul /-\ntheorem map_mul (f₁ f₂ : «expr →ₗ[ ] » M R M) (g₁ g₂ : «expr →ₗ[ ] » N R N) :\n    map (f₁ * f₂) (g₁ * g₂) = map f₁ g₁ * map f₂ g₂ :=\n  map_comp f₁ f₂ g₁ g₂\n#align map_mul map_mul\n-/\n\n",
 "map_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem map_id : map (id : «expr →ₗ[ ] » M R M) (id : «expr →ₗ[ ] » N R N) = id :=\n  by\n  ext\n  simp only [mk_apply, id_coe, compr₂_apply, id.def, map_tmul]\n#align map_id map_id\n\n",
 "map_comp_rtensor":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem map_comp_rtensor (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) (f' : «expr →ₗ[ ] » S R M) :\n    (map f g).comp (f'.rtensor _) = map (f.comp f') g := by simp only [ltensor, rtensor, ← map_comp, id_comp, comp_id]\n#align map_comp_rtensor map_comp_rtensor\n\n",
 "map_comp_ltensor":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem map_comp_ltensor (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) (g' : «expr →ₗ[ ] » S R N) :\n    (map f g).comp (g'.ltensor _) = map f (g.comp g') := by simp only [ltensor, rtensor, ← map_comp, id_comp, comp_id]\n#align map_comp_ltensor map_comp_ltensor\n\n",
 "map_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem map_comp (f₂ : «expr →ₗ[ ] » P R P') (f₁ : «expr →ₗ[ ] » M R P) (g₂ : «expr →ₗ[ ] » Q R Q')\n    (g₁ : «expr →ₗ[ ] » N R Q) : map (f₂.comp f₁) (g₂.comp g₁) = (map f₂ g₂).comp (map f₁ g₁) :=\n  ext' fun _ _ => rfl\n#align map_comp map_comp\n\n",
 "map_bilinear_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem map_bilinear_apply (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) : map_bilinear R M N P Q f g = map f g :=\n  rfl\n#align map_bilinear_apply map_bilinear_apply\n\n",
 "map_add_right":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem map_add_right (f : «expr →ₗ[ ] » M R P) (g₁ g₂ : «expr →ₗ[ ] » N R Q) : map f (g₁ + g₂) = map f g₁ + map f g₂ :=\n  by\n  ext\n  simp only [tmul_add, compr₂_apply, mk_apply, map_tmul, add_apply]\n#align map_add_right map_add_right\n\n",
 "map_add_left":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem map_add_left (f₁ f₂ : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) : map (f₁ + f₂) g = map f₁ g + map f₂ g :=\n  by\n  ext\n  simp only [add_tmul, compr₂_apply, mk_apply, map_tmul, add_apply]\n#align map_add_left map_add_left\n\n",
 "ltensor_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem ltensor_zero : ltensor M (0 : «expr →ₗ[ ] » N R P) = 0 :=\n  (ltensor_hom M).map_zero\n#align ltensor_zero ltensor_zero\n\n",
 "ltensor_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem ltensor_tmul (m : M) (n : N) : f.ltensor M («expr ⊗ₜ » m n) = «expr ⊗ₜ » m (f n) :=\n  rfl\n#align ltensor_tmul ltensor_tmul\n\n",
 "ltensor_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem ltensor_sub (f g : «expr →ₗ[ ] » N R P) : (f - g).ltensor M = f.ltensor M - g.ltensor M := by\n  simp only [← coe_ltensor_hom, map_sub]\n#align ltensor_sub ltensor_sub\n\n",
 "ltensor_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem ltensor_smul (r : R) (f : «expr →ₗ[ ] » N R P) : («expr • » r f).ltensor M = «expr • » r (f.ltensor M) :=\n  (ltensor_hom M).map_smul r f\n#align ltensor_smul ltensor_smul\n\n",
 "ltensor_pow":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem ltensor_pow (f : «expr →ₗ[ ] » N R N) (n : ℕ) : f.ltensor M ^ n = (f ^ n).ltensor M :=\n  by\n  have h := tensor_product.map_pow (id : «expr →ₗ[ ] » M R M) f n\n  rwa [id_pow] at h\n#align ltensor_pow ltensor_pow\n\n",
 "ltensor_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem ltensor_neg (f : «expr →ₗ[ ] » N R P) : (-f).ltensor M = -f.ltensor M := by\n  simp only [← coe_ltensor_hom, map_neg]\n#align ltensor_neg ltensor_neg\n\n",
 "ltensor_mul":
 "theorem ltensor_mul (f g : module.End R N) : (f * g).ltensor M = f.ltensor M * g.ltensor M :=\n  ltensor_comp M f g\n#align ltensor_mul ltensor_mul\n\n",
 "ltensor_id_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n-- `simp` can prove this.\ntheorem ltensor_id_apply (x : tensor_product M R N) : (linear_map.id : «expr →ₗ[ ] » N R N).ltensor M x = x := by\n  rw [ltensor_id, id_coe, id.def]\n#align ltensor_id_apply ltensor_id_apply\n\n",
 "ltensor_id":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem ltensor_id : (id : «expr →ₗ[ ] » N R N).ltensor M = id :=\n  map_id\n#align ltensor_id ltensor_id\n\n",
 "ltensor_hom_to_hom_ltensor_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem ltensor_hom_to_hom_ltensor_apply (p : P) (f : «expr →ₗ[ ] » M R Q) (m : M) :\n    ltensor_hom_to_hom_ltensor R M P Q («expr ⊗ₜ » p f) m = «expr ⊗ₜ » p (f m) :=\n  rfl\n#align ltensor_hom_to_hom_ltensor_apply ltensor_hom_to_hom_ltensor_apply\n\n",
 "ltensor_comp_rtensor":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem ltensor_comp_rtensor (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) :\n    (g.ltensor P).comp (f.rtensor N) = map f g := by simp only [ltensor, rtensor, ← map_comp, id_comp, comp_id]\n#align ltensor_comp_rtensor ltensor_comp_rtensor\n\n",
 "ltensor_comp_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem ltensor_comp_map (g' : «expr →ₗ[ ] » Q R S) (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) :\n    (g'.ltensor _).comp (map f g) = map f (g'.comp g) := by simp only [ltensor, rtensor, ← map_comp, id_comp, comp_id]\n#align ltensor_comp_map ltensor_comp_map\n\n",
 "ltensor_comp_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\ntheorem ltensor_comp_apply (x : tensor_product M R N) : (g.comp f).ltensor M x = (g.ltensor M) ((f.ltensor M) x) := by\n  rw [ltensor_comp, coe_comp]\n#align ltensor_comp_apply ltensor_comp_apply\n\n",
 "ltensor_comp":
 "theorem ltensor_comp : (g.comp f).ltensor M = (g.ltensor M).comp (f.ltensor M) :=\n  by\n  ext (m n)\n  simp only [compr₂_apply, mk_apply, comp_apply, ltensor_tmul]\n#align ltensor_comp ltensor_comp\n\n",
 "ltensor_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n@[simp]\ntheorem ltensor_add (f g : «expr →ₗ[ ] » N R P) : (f + g).ltensor M = f.ltensor M + g.ltensor M :=\n  (ltensor_hom M).map_add f g\n#align ltensor_add ltensor_add\n\n",
 "lift_mk_compr₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\ntheorem lift_mk_compr₂ (f : «expr →ₗ[ ] » (tensor_product.infer M N) R P) : lift ((mk R M N).compr₂ f) = f := by\n  rw [lift_compr₂ f, lift_mk, linear_map.comp_id]\n#align lift_mk_compr₂ lift_mk_compr₂\n\n",
 "lift_mk":
 "theorem lift_mk : lift (mk R M N) = linear_map.id :=\n  eq.symm <| lift.unique fun x y => rfl\n#align lift_mk lift_mk\n\n",
 "lift_compr₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem lift_compr₂ (g : «expr →ₗ[ ] » P R Q) : lift (f.compr₂ g) = g.comp (lift f) :=\n  eq.symm <| lift.unique fun x y => by simp\n#align lift_compr₂ lift_compr₂\n\n",
 "lift_comp_map":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem lift_comp_map (i : «expr →ₗ[ ] » P R («expr →ₗ[ ] » Q R Q')) (f : «expr →ₗ[ ] » M R P)\n    (g : «expr →ₗ[ ] » N R Q) : (lift i).comp (map f g) = lift ((i.comp f).compl₂ g) :=\n  ext' fun _ _ => rfl\n#align lift_comp_map lift_comp_map\n\n",
 "lift_aux_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\ntheorem lift_aux_tmul (m n) : lift_aux f («expr ⊗ₜ » m n) = f m n :=\n  rfl\n#align lift_aux_tmul lift_aux_tmul\n\n",
 "lid_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n@[simp]\ntheorem lid_tmul (m : M) (r : R) :\n    (tensor_product.lid R M : tensor_product.infer R M → M) («expr ⊗ₜ » r m) = «expr • » r m :=\n  by\n  dsimp [tensor_product.lid]\n  simp\n#align lid_tmul lid_tmul\n\n",
 "lid_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem lid_symm_apply (m : M) : (tensor_product.lid R M).symm m = «expr ⊗ₜ » 1 m :=\n  rfl\n#align lid_symm_apply lid_symm_apply\n\n",
 "left_comm_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem left_comm_tmul (m : M) (n : N) (p : P) :\n    left_comm R M N P («expr ⊗ₜ » m («expr ⊗ₜ » n p)) = «expr ⊗ₜ » n («expr ⊗ₜ » m p) :=\n  rfl\n#align left_comm_tmul left_comm_tmul\n\n",
 "left_comm_symm_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem left_comm_symm_tmul (m : M) (n : N) (p : P) :\n    (left_comm R M N P).symm («expr ⊗ₜ » n («expr ⊗ₜ » m p)) = «expr ⊗ₜ » m («expr ⊗ₜ » n p) :=\n  rfl\n#align left_comm_symm_tmul left_comm_symm_tmul\n\n",
 "lcurry_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem lcurry_apply (f : «expr →ₗ[ ] » (tensor_product M R N) R P) (m : M) (n : N) :\n    lcurry R M N P f m n = f («expr ⊗ₜ » m n) :=\n  rfl\n#align lcurry_apply lcurry_apply\n\n",
 "ite_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\ntheorem ite_tmul (x₁ : M) (x₂ : N) (P : Prop) [decidable P] :\n    «expr ⊗ₜ[ ] » (if P then x₁ else 0) R x₂ = if P then «expr ⊗ₜ » x₁ x₂ else 0 := by split_ifs <;> simp\n#align ite_tmul ite_tmul\n\n",
 "induction_on":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/-\nCopyright (c) 2018 Kenny Lau. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Kenny Lau, Mario Carneiro\n-/\n-- open free_add_monoid\n@[elab_as_elim]\nprotected theorem induction_on {C : tensor_product M R N → Prop} (z : tensor_product M R N) (C0 : C 0)\n    (C1 : ∀ {x y}, C <| «expr ⊗ₜ[ ] » x R y) (Cp : ∀ {x y}, C x → C y → C (x + y)) : C z :=\n  add_con.induction_on z fun x =>\n    free_add_monoid.rec_on x C0 fun ⟨m, n⟩ y ih => by\n      rw [add_con.coe_add]\n      exact Cp C1 ih\n#align induction_on induction_on\n\n",
 "hom_tensor_hom_map_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem hom_tensor_hom_map_apply (f : «expr →ₗ[ ] » M R P) (g : «expr →ₗ[ ] » N R Q) :\n    hom_tensor_hom_map R M N P Q («expr ⊗ₜ » f g) = map f g :=\n  rfl\n#align hom_tensor_hom_map_apply hom_tensor_hom_map_apply\n\n",
 "ext_threefold":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\ntheorem ext_threefold {g h : «expr →ₗ[ ] » (tensor_product (tensor_product M R N) R P) R Q}\n    (H : ∀ x y z, g («expr ⊗ₜ » («expr ⊗ₜ » x y) z) = h («expr ⊗ₜ » («expr ⊗ₜ » x y) z)) : g = h :=\n  by\n  ext (x y z)\n  exact H x y z\n#align ext_threefold ext_threefold\n\n",
 "ext_fourfold'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/-- Two linear maps (M ⊗ N) ⊗ (P ⊗ Q) → S which agree on all elements of the\nform (m ⊗ₜ n) ⊗ₜ (p ⊗ₜ q) are equal. -/\ntheorem ext_fourfold' {φ ψ : «expr →ₗ[ ] » (tensor_product (tensor_product M R N) R (tensor_product P R Q)) R S}\n    (H :\n      ∀ w x y z, φ («expr ⊗ₜ » («expr ⊗ₜ » w x) («expr ⊗ₜ » y z)) = ψ («expr ⊗ₜ » («expr ⊗ₜ » w x) («expr ⊗ₜ » y z))) :\n    φ = ψ := by\n  ext (m n p q)\n  exact H m n p q\n#align ext_fourfold' ext_fourfold'\n\n",
 "ext_fourfold":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n-- We'll need this one for checking the pentagon identity!\ntheorem ext_fourfold {g h : «expr →ₗ[ ] » (tensor_product (tensor_product (tensor_product M R N) R P) R Q) R S}\n    (H :\n      ∀ w x y z, g («expr ⊗ₜ » («expr ⊗ₜ » («expr ⊗ₜ » w x) y) z) = h («expr ⊗ₜ » («expr ⊗ₜ » («expr ⊗ₜ » w x) y) z)) :\n    g = h := by\n  ext (w x y z)\n  exact H w x y z\n#align ext_fourfold ext_fourfold\n\n",
 "ext'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\ntheorem ext' {g h : «expr →ₗ[ ] » (tensor_product M R N) R P} (H : ∀ x y, g («expr ⊗ₜ » x y) = h («expr ⊗ₜ » x y)) :\n    g = h :=\n  linear_map.ext fun z =>\n    tensor_product.induction_on z (by simp_rw [linear_map.map_zero]) H fun x y ihx ihy => by\n      rw [g.map_add, h.map_add, ihx, ihy]\n#align ext' ext'\n\n",
 "ext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\n/-- This used to be an `@[ext]` lemma, but it fails very slowly when the `ext` tactic tries to apply\nit in some cases, notably when one wants to show equality of two linear maps. The `@[ext]`\nattribute is now added locally where it is needed. Using this as the `@[ext]` lemma instead of\n`tensor_product.ext'` allows `ext` to apply lemmas specific to `M →ₗ _` and `N →ₗ _`.\n\nSee note [partially-applied ext lemmas]. -/\ntheorem ext {g h : «expr →ₗ[ ] » (tensor_product.infer M N) R P} (H : (mk R M N).compr₂ g = (mk R M N).compr₂ h) :\n    g = h := by rw [← lift_mk_compr₂ g, H, lift_mk_compr₂]\n#align ext ext\n\n",
 "equiv_symm_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem lift.equiv_symm_apply (f : «expr →ₗ[ ] » (tensor_product M R N) R P) (m : M) (n : N) :\n    (lift.equiv R M N P).symm f m n = f («expr ⊗ₜ » m n) :=\n  rfl\n#align lift.equiv_symm_apply lift.equiv_symm_apply\n\n",
 "equiv_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem lift.equiv_apply (f : «expr →ₗ[ ] » M R («expr →ₗ[ ] » N R P)) (m : M) (n : N) :\n    lift.equiv R M N P f («expr ⊗ₜ » m n) = f m n :=\n  uncurry_apply f m n\n#align lift.equiv_apply lift.equiv_apply\n\n",
 "curry_injective":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\ntheorem curry_injective :\n    function.injective (curry : «expr →ₗ[ ] » (tensor_product M R N) R P → «expr →ₗ[ ] » M R («expr →ₗ[ ] » N R P)) :=\n  fun g h H => ext H\n#align curry_injective curry_injective\n\n",
 "curry_apply":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product.infer -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem curry_apply (f : «expr →ₗ[ ] » (tensor_product.infer M N) R P) (m : M) (n : N) :\n    curry f m n = f («expr ⊗ₜ » m n) :=\n  rfl\n#align curry_apply curry_apply\n\n",
 "congr_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem congr_tmul (f : «expr ≃ₗ[ ] » M R P) (g : «expr ≃ₗ[ ] » N R Q) (m : M) (n : N) :\n    congr f g («expr ⊗ₜ » m n) = «expr ⊗ₜ » (f m) (g n) :=\n  rfl\n#align congr_tmul congr_tmul\n\n",
 "congr_symm_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≃ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem congr_symm_tmul (f : «expr ≃ₗ[ ] » M R P) (g : «expr ≃ₗ[ ] » N R Q) (p : P) (q : Q) :\n    (congr f g).symm («expr ⊗ₜ » p q) = «expr ⊗ₜ » (f.symm p) (g.symm q) :=\n  rfl\n#align congr_symm_tmul congr_symm_tmul\n\n",
 "comm_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem comm_tmul (m : M) (n : N) : (tensor_product.comm R M N) («expr ⊗ₜ » m n) = «expr ⊗ₜ » n m :=\n  rfl\n#align comm_tmul comm_tmul\n\n",
 "comm_symm_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem comm_symm_tmul (m : M) (n : N) : (tensor_product.comm R M N).symm («expr ⊗ₜ » n m) = «expr ⊗ₜ » m n :=\n  rfl\n#align comm_symm_tmul comm_symm_tmul\n\n",
 "coe_rtensor_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n@[simp]\ntheorem coe_rtensor_hom :\n    (rtensor_hom M : «expr →ₗ[ ] » N R P → «expr →ₗ[ ] » (tensor_product N R M) R (tensor_product P R M)) = rtensor M :=\n  rfl\n#align coe_rtensor_hom coe_rtensor_hom\n\n",
 "coe_ltensor_hom":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₗ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n@[simp]\ntheorem coe_ltensor_hom :\n    (ltensor_hom M : «expr →ₗ[ ] » N R P → «expr →ₗ[ ] » (tensor_product M R N) R (tensor_product M R P)) = ltensor M :=\n  rfl\n#align coe_ltensor_hom coe_ltensor_hom\n\n",
 "aux_of":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem neg.aux_of (m : M) (n : N) : neg.aux R (free_add_monoid.of (m, n)) = «expr ⊗ₜ[ ] » (-m) R n :=\n  rfl\n#align neg.aux_of neg.aux_of\n\n",
 "assoc_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem assoc_tmul (m : M) (n : N) (p : P) :\n    (tensor_product.assoc R M N P) («expr ⊗ₜ » («expr ⊗ₜ » m n) p) = «expr ⊗ₜ » m («expr ⊗ₜ » n p) :=\n  rfl\n#align assoc_tmul assoc_tmul\n\n",
 "assoc_symm_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n@[simp]\ntheorem assoc_symm_tmul (m : M) (n : N) (p : P) :\n    (tensor_product.assoc R M N P).symm («expr ⊗ₜ » m («expr ⊗ₜ » n p)) = «expr ⊗ₜ » («expr ⊗ₜ » m n) p :=\n  rfl\n#align assoc_symm_tmul assoc_symm_tmul\n\n",
 "add_tmul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\ntheorem add_tmul (m₁ m₂ : M) (n : N) : «expr ⊗ₜ » (m₁ + m₂) n = «expr ⊗ₜ » m₁ n + «expr ⊗ₜ[ ] » m₂ R n :=\n  eq.symm <| quotient.sound' <| add_con_gen.rel.of _ _ <| eqv.of_add_left _ _ _\n#align add_tmul add_tmul\n\n",
 "add_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ[ ] » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ₜ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n#print add_smul /-\nprotected theorem add_smul (r s : R'') (x : tensor_product M R N) :\n    «expr • » (r + s) x = «expr • » r x + «expr • » s x :=\n  have : ∀ (r : R'') (m : M) (n : N), «expr • » r («expr ⊗ₜ[ ] » m R n) = «expr ⊗ₜ » («expr • » r m) n := fun _ _ _ =>\n    rfl\n  tensor_product.induction_on x (by simp_rw [tensor_product.smul_zero, add_zero])\n    (fun m n => by simp_rw [this, add_smul, add_tmul]) fun x y ihx ihy =>\n    by\n    simp_rw [tensor_product.smul_add]\n    rw [ihx, ihy, add_add_add_comm]\n#align add_smul add_smul\n-/\n\n",
 "add_left_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `tensor_product -/\n#print add_left_neg /-\nprotected theorem add_left_neg (x : tensor_product M R N) : -x + x = 0 :=\n  tensor_product.induction_on x\n    (by\n      rw [add_zero]\n      apply (neg.aux R).map_zero)\n    (fun x y => by\n      convert (add_tmul (-x) x y).symm\n      rw [add_left_neg, zero_tmul])\n    fun x y hx hy => by\n    unfold has_neg.neg sub_neg_monoid.neg\n    rw [AddMonoidHom.map_add]\n    ac_change -x + x + (-y + y) = 0\n    rw [hx, hy, add_zero]\n#align add_left_neg add_left_neg\n-/\n\n"}