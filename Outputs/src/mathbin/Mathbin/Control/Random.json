{"bool_of_nat_mem_Icc_of_mem_Icc_to_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr .. » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr .. » -/\n/-\nCopyright (c) 2020 Simon Hudon. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Simon Hudon\n-/\ntheorem bool_of_nat_mem_Icc_of_mem_Icc_to_nat (x y : bool) (n : ℕ) :\n    n ∈ «expr .. » x.to_nat y.to_nat → Bool.ofNat n ∈ «expr .. » x y :=\n  by\n  simp only [and_imp, Set.mem_Icc]; intro h₀ h₁\n  constructor <;> [have h₂ := bool.of_nat_le_of_nat h₀, have h₂ := bool.of_nat_le_of_nat h₁] <;>\n      rw [bool.of_nat_to_nat] at h₂ <;>\n    exact h₂\n#align bool_of_nat_mem_Icc_of_mem_Icc_to_nat bool_of_nat_mem_Icc_of_mem_Icc_to_nat\n\n"}