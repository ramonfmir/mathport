{"snd_fst":
 "@[higher_order.1snd_comp_fst]\ntheorem snd_fst {α₀ α₁ β₀ β₁} (f : α₀ → α₁) (f' : β₀ → β₁) (x : F α₀ β₀) : snd f' (fst f x) = bimap f f' x := by\n  simp [snd, bimap_bimap]\n#align snd_fst snd_fst\n\n",
 "id_snd":
 "@[higher_order.1snd_id]\ntheorem id_snd : ∀ {α β} (x : F α β), snd id x = x :=\n  @id_bimap _ _ _\n#align id_snd id_snd\n\n",
 "id_fst":
 "/-\nCopyright (c) 2018 Simon Hudon. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Simon Hudon\n-/\n@[higher_order.1fst_id]\ntheorem id_fst : ∀ {α β} (x : F α β), fst id x = x :=\n  @id_bimap _ _ _\n#align id_fst id_fst\n\n",
 "fst_snd":
 "@[higher_order.1fst_comp_snd]\ntheorem fst_snd {α₀ α₁ β₀ β₁} (f : α₀ → α₁) (f' : β₀ → β₁) (x : F α₀ β₀) : fst f (snd f' x) = bimap f f' x := by\n  simp [fst, bimap_bimap]\n#align fst_snd fst_snd\n\n",
 "comp_snd":
 "@[higher_order.1snd_comp_snd]\ntheorem comp_snd {α β₀ β₁ β₂} (g : β₀ → β₁) (g' : β₁ → β₂) (x : F α β₀) : snd g' (snd g x) = snd (g' ∘ g) x := by\n  simp [snd, bimap_bimap]\n#align comp_snd comp_snd\n\n",
 "comp_fst":
 "@[higher_order.1fst_comp_fst]\ntheorem comp_fst {α₀ α₁ α₂ β} (f : α₀ → α₁) (f' : α₁ → α₂) (x : F α₀ β) : fst f' (fst f x) = fst (f' ∘ f) x := by\n  simp [fst, bimap_bimap]\n#align comp_fst comp_fst\n\n"}