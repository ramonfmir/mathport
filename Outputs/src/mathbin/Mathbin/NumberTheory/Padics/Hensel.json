{"tendsto_zero_of_norm_tendsto_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\nprivate theorem tendsto_zero_of_norm_tendsto_zero : tendsto (fun i => F.eval (ncs i)) at_top ((nhds) 0) :=\n  tendsto_iff_norm_tendsto_zero.2 (by simpa using hnorm)\n#align tendsto_zero_of_norm_tendsto_zero tendsto_zero_of_norm_tendsto_zero\n\n",
 "soln_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℤ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem soln_unique (z : «exprℤ_[ ]» p) (hev : F.eval z = 0)\n    (hnlt : «expr‖ ‖» (z - a) < «expr‖ ‖» (F.derivative.eval a)) : z = soln :=\n  have soln_dist : «expr‖ ‖» (z - soln) < «expr‖ ‖» (F.derivative.eval a) :=\n    calc\n      «expr‖ ‖» (z - soln) = «expr‖ ‖» (z - a + (a - soln)) := by rw [sub_add_sub_cancel]\n      _ ≤ max («expr‖ ‖» (z - a)) («expr‖ ‖» (a - soln)) := padic_int.nonarchimedean _ _\n      _ < «expr‖ ‖» (F.derivative.eval a) := max_lt hnlt (norm_sub_rev soln a ▸ soln_dist_to_a_lt_deriv)\n      \n  let h := z - soln\n  let ⟨q, hq⟩ := F.binom_expansion soln h\n  have : (F.derivative.eval soln + q * h) * h = 0 :=\n    eq.symm\n      (calc\n        0 = F.eval (soln + h) := by simp [hev, h]\n        _ = F.derivative.eval soln * h + q * h ^ 2 := by rw [hq, eval_soln, zero_add]\n        _ = (F.derivative.eval soln + q * h) * h := by rw [sq, right_distrib, mul_assoc]\n        )\n  have : h = 0 :=\n    by_contradiction fun hne =>\n      have : F.derivative.eval soln + q * h = 0 := (eq_zero_or_eq_zero_of_mul_eq_zero this).resolve_right hne\n      have : F.derivative.eval soln = -q * h := by simpa using eq_neg_of_add_eq_zero_left this\n      lt_irrefl («expr‖ ‖» (F.derivative.eval soln))\n        (calc\n          «expr‖ ‖» (F.derivative.eval soln) = «expr‖ ‖» (-q * h) := by rw [this]\n          _ ≤ 1 * «expr‖ ‖» h := by\n            rw [padic_int.norm_mul]\n            exact mul_le_mul_of_nonneg_right (padic_int.norm_le_one _) (norm_nonneg _)\n          _ = «expr‖ ‖» (z - soln) := by simp [h]\n          _ < «expr‖ ‖» (F.derivative.eval soln) := by rw [soln_deriv_norm] <;> apply soln_dist\n          )\n  eq_of_sub_eq_zero (by rw [← this] <;> rfl)\n#align soln_unique soln_unique\n\n",
 "soln_spec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem soln_spec {ε : exprℝ} (hε : ε > 0) :\n    ∃ N : ℕ, ∀ {i : ℕ}, i ≥ N → «expr‖ ‖» (soln - newton_cau_seq i) < ε :=\n  setoid.symm (CauSeq.equiv_lim newton_cau_seq) _ hε\n#align soln_spec soln_spec\n\n",
 "soln_dist_to_a_lt_deriv":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem soln_dist_to_a_lt_deriv : «expr‖ ‖» (soln - a) < «expr‖ ‖» (F.derivative.eval a) :=\n  by\n  rw [soln_dist_to_a, div_lt_iff]\n  · rwa [sq] at hnorm\n  · apply deriv_norm_pos\n    assumption\n#align soln_dist_to_a_lt_deriv soln_dist_to_a_lt_deriv\n\n",
 "soln_dist_to_a":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem soln_dist_to_a : «expr‖ ‖» (soln - a) = «expr‖ ‖» (F.eval a) / «expr‖ ‖» (F.derivative.eval a) :=\n  tendsto_nhds_unique newton_seq_dist_tendsto' newton_seq_dist_tendsto\n#align soln_dist_to_a soln_dist_to_a\n\n",
 "soln_deriv_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem soln_deriv_norm : «expr‖ ‖» (F.derivative.eval soln) = «expr‖ ‖» (F.derivative.eval a) :=\n  norm_deriv_eq newton_seq_deriv_norm\n#align soln_deriv_norm soln_deriv_norm\n\n",
 "padic_polynomial_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℤ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℤ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/-\nCopyright (c) 2018 Robert Y. Lewis. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Robert Y. Lewis\n-/\n-- We begin with some general lemmas that are used below in the computation.\ntheorem padic_polynomial_dist {p : ℕ} [fact p.prime] (F : polynomial («exprℤ_[ ]» p)) (x y : «exprℤ_[ ]» p) :\n    «expr‖ ‖» (F.eval x - F.eval y) ≤ «expr‖ ‖» (x - y) :=\n  let ⟨z, hz⟩ := F.eval_sub_factor x y\n  calc\n    «expr‖ ‖» (F.eval x - F.eval y) = «expr‖ ‖» z * «expr‖ ‖» (x - y) := by simp [hz]\n    _ ≤ 1 * «expr‖ ‖» (x - y) := mul_le_mul_of_nonneg_right (padic_int.norm_le_one _) (norm_nonneg _)\n    _ = «expr‖ ‖» (x - y) := by simp\n    \n#align padic_polynomial_dist padic_polynomial_dist\n\n",
 "norm_deriv_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem norm_deriv_eq : «expr‖ ‖» (F.derivative.eval ncs.lim) = «expr‖ ‖» (F.derivative.eval a) :=\n  tendsto_nhds_unique ncs_tendsto_lim ncs_tendsto_const\n#align norm_deriv_eq norm_deriv_eq\n\n",
 "newton_seq_succ_dist_weak":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem newton_seq_succ_dist_weak (n : ℕ) :\n    «expr‖ ‖» (newton_seq (n + 2) - newton_seq (n + 1)) < «expr‖ ‖» (F.eval a) / «expr‖ ‖» (F.derivative.eval a) :=\n  have : 2 ≤ 2 ^ (n + 1) :=\n    by\n    have := pow_le_pow (by norm_num : 1 ≤ 2) (nat.le_add_left _ _ : 1 ≤ n + 1)\n    simpa using this\n  calc\n    «expr‖ ‖» (newton_seq (n + 2) - newton_seq (n + 1)) ≤ «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ (n + 1) :=\n      newton_seq_succ_dist _\n    _ ≤ «expr‖ ‖» (F.derivative.eval a) * T ^ 2 :=\n      mul_le_mul_of_nonneg_left (pow_le_pow_of_le_one (norm_nonneg _) (le_of_lt T_lt_one) this) (norm_nonneg _)\n    _ < «expr‖ ‖» (F.derivative.eval a) * T ^ 1 :=\n      mul_lt_mul_of_pos_left (pow_lt_pow_of_lt_one T_pos T_lt_one (by norm_num)) deriv_norm_pos\n    _ = «expr‖ ‖» (F.eval a) / «expr‖ ‖» (F.derivative.eval a) :=\n      by\n      rw [T, sq, pow_one, norm_div, ← mul_div_assoc, padic_norm_e.mul]\n      apply mul_div_mul_left\n      apply deriv_norm_ne_zero <;> assumption\n    \n#align newton_seq_succ_dist_weak newton_seq_succ_dist_weak\n\n",
 "newton_seq_succ_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem newton_seq_succ_dist (n : ℕ) :\n    «expr‖ ‖» (newton_seq (n + 1) - newton_seq n) ≤ «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n :=\n  calc\n    «expr‖ ‖» (newton_seq (n + 1) - newton_seq n) =\n        «expr‖ ‖» (F.eval (newton_seq n)) / «expr‖ ‖» (F.derivative.eval (newton_seq n)) :=\n      newton_seq_norm_eq _\n    _ = «expr‖ ‖» (F.eval (newton_seq n)) / «expr‖ ‖» (F.derivative.eval a) := by rw [newton_seq_deriv_norm]\n    _ ≤ «expr‖ ‖» (F.derivative.eval a) ^ 2 * T ^ 2 ^ n / «expr‖ ‖» (F.derivative.eval a) :=\n      (div_le_div_right deriv_norm_pos).2 (newton_seq_norm_le _)\n    _ = «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n := div_sq_cancel _ _\n    \n#align newton_seq_succ_dist newton_seq_succ_dist\n\n",
 "newton_seq_norm_tendsto_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\nprivate theorem newton_seq_norm_tendsto_zero :\n    tendsto (fun i => «expr‖ ‖» (F.eval (newton_cau_seq i))) at_top ((nhds) 0) :=\n  squeeze_zero (fun _ => norm_nonneg _) newton_seq_norm_le bound'_sq\n#align newton_seq_norm_tendsto_zero newton_seq_norm_tendsto_zero\n\n",
 "newton_seq_norm_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem newton_seq_norm_le (n : ℕ) :\n    «expr‖ ‖» (F.eval (newton_seq n)) ≤ «expr‖ ‖» (F.derivative.eval a) ^ 2 * T ^ 2 ^ n :=\n  (newton_seq_aux n).2.2\n#align newton_seq_norm_le newton_seq_norm_le\n\n",
 "newton_seq_norm_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem newton_seq_norm_eq (n : ℕ) :\n    «expr‖ ‖» (newton_seq (n + 1) - newton_seq n) =\n      «expr‖ ‖» (F.eval (newton_seq n)) / «expr‖ ‖» (F.derivative.eval (newton_seq n)) :=\n  by simp [newton_seq, newton_seq_aux, ih_n, sub_eq_add_neg, add_comm]\n#align newton_seq_norm_eq newton_seq_norm_eq\n\n",
 "newton_seq_is_cauchy":
 "private theorem newton_seq_is_cauchy : IsCauSeq norm newton_seq :=\n  by\n  intro ε hε\n  cases' bound hnorm hnsol hε with N hN\n  exists N\n  intro j hj\n  apply lt_of_le_of_lt\n  · apply newton_seq_dist _ _ hj\n    assumption\n  · apply hN\n    exact le_rfl\n#align newton_seq_is_cauchy newton_seq_is_cauchy\n\n",
 "newton_seq_dist_to_a":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem newton_seq_dist_to_a :\n    ∀ n : ℕ, 0 < n → «expr‖ ‖» (newton_seq n - a) = «expr‖ ‖» (F.eval a) / «expr‖ ‖» (F.derivative.eval a)\n  | 1, h => by simp [sub_eq_add_neg, add_assoc, newton_seq, newton_seq_aux, ih_n]\n  | k + 2, h =>\n    have hlt : «expr‖ ‖» (newton_seq (k + 2) - newton_seq (k + 1)) < «expr‖ ‖» (newton_seq (k + 1) - a) := by\n      rw [newton_seq_dist_to_a (k + 1) (succ_pos _)] <;> apply newton_seq_succ_dist_weak <;> assumption\n    have hne' : «expr‖ ‖» (newton_seq (k + 2) - newton_seq (k + 1)) ≠ «expr‖ ‖» (newton_seq (k + 1) - a) := ne_of_lt hlt\n    calc\n      «expr‖ ‖» (newton_seq (k + 2) - a) =\n          «expr‖ ‖» (newton_seq (k + 2) - newton_seq (k + 1) + (newton_seq (k + 1) - a)) :=\n        by rw [← sub_add_sub_cancel]\n      _ = max («expr‖ ‖» (newton_seq (k + 2) - newton_seq (k + 1))) («expr‖ ‖» (newton_seq (k + 1) - a)) :=\n        padic_int.norm_add_eq_max_of_ne hne'\n      _ = «expr‖ ‖» (newton_seq (k + 1) - a) := max_eq_right_of_lt hlt\n      _ = «expr‖ ‖» (polynomial.eval a F) / «expr‖ ‖» (polynomial.eval a (polynomial.derivative F)) :=\n        newton_seq_dist_to_a (k + 1) (succ_pos _)\n      \n#align newton_seq_dist_to_a newton_seq_dist_to_a\n\n",
 "newton_seq_dist_tendsto'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem newton_seq_dist_tendsto' :\n    tendsto (fun n => «expr‖ ‖» (newton_cau_seq n - a)) at_top ((nhds) («expr‖ ‖» (soln - a))) :=\n  (continuous_norm.tendsto _).comp (newton_cau_seq.tendsto_limit.sub tendsto_const_nhds)\n#align newton_seq_dist_tendsto' newton_seq_dist_tendsto'\n\n",
 "newton_seq_dist_tendsto":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem newton_seq_dist_tendsto :\n    tendsto (fun n => «expr‖ ‖» (newton_cau_seq n - a)) at_top\n      ((nhds) («expr‖ ‖» (F.eval a) / «expr‖ ‖» (F.derivative.eval a))) :=\n  tendsto_const_nhds.congr' <| eventually_at_top.2 ⟨1, fun _ hx => (newton_seq_dist_to_a _ hx).symm⟩\n#align newton_seq_dist_tendsto newton_seq_dist_tendsto\n\n",
 "newton_seq_dist_aux":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem newton_seq_dist_aux (n : ℕ) :\n    ∀ k : ℕ, «expr‖ ‖» (newton_seq (n + k) - newton_seq n) ≤ «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n\n  | 0 => by simp [T_pow_nonneg hnorm, mul_nonneg]\n  | k + 1 =>\n    have : 2 ^ n ≤ 2 ^ (n + k) := by\n      apply pow_le_pow\n      norm_num\n      apply nat.le_add_right\n    calc\n      «expr‖ ‖» (newton_seq (n + (k + 1)) - newton_seq n) = «expr‖ ‖» (newton_seq (n + k + 1) - newton_seq n) := by\n        rw [add_assoc]\n      _ = «expr‖ ‖» (newton_seq (n + k + 1) - newton_seq (n + k) + (newton_seq (n + k) - newton_seq n)) := by\n        rw [← sub_add_sub_cancel]\n      _ ≤\n          max («expr‖ ‖» (newton_seq (n + k + 1) - newton_seq (n + k)))\n            («expr‖ ‖» (newton_seq (n + k) - newton_seq n)) :=\n        padic_int.nonarchimedean _ _\n      _ ≤ max («expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ (n + k)) («expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n) :=\n        max_le_max (newton_seq_succ_dist _) (newton_seq_dist_aux _)\n      _ = «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n :=\n        max_eq_right <|\n          mul_le_mul_of_nonneg_left (pow_le_pow_of_le_one (norm_nonneg _) (le_of_lt T_lt_one) this) (norm_nonneg _)\n      \n#align newton_seq_dist_aux newton_seq_dist_aux\n\n",
 "newton_seq_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem newton_seq_dist {n k : ℕ} (hnk : n ≤ k) :\n    «expr‖ ‖» (newton_seq k - newton_seq n) ≤ «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n :=\n  by\n  have hex : ∃ m, k = n + m := exists_eq_add_of_le hnk\n  let ⟨_, hex'⟩ := hex\n  rw [hex'] <;> apply newton_seq_dist_aux <;> assumption\n#align newton_seq_dist newton_seq_dist\n\n",
 "newton_seq_deriv_norm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n-- why doesn't \"noncomputable theory\" stick here?\nprivate theorem newton_seq_deriv_norm (n : ℕ) :\n    «expr‖ ‖» (F.derivative.eval (newton_seq n)) = «expr‖ ‖» (F.derivative.eval a) :=\n  (newton_seq_aux n).2.1\n#align newton_seq_deriv_norm newton_seq_deriv_norm\n\n",
 "ncs_tendsto_lim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem ncs_tendsto_lim :\n    tendsto (fun i => «expr‖ ‖» (F.derivative.eval (ncs i))) at_top ((nhds) («expr‖ ‖» (F.derivative.eval ncs.lim))) :=\n  tendsto.comp (continuous_iff_continuous_at.1 continuous_norm _) (comp_tendsto_lim _)\n#align ncs_tendsto_lim ncs_tendsto_lim\n\n",
 "ncs_tendsto_const":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem ncs_tendsto_const :\n    tendsto (fun i => «expr‖ ‖» (F.derivative.eval (ncs i))) at_top ((nhds) («expr‖ ‖» (F.derivative.eval a))) := by\n  convert tendsto_const_nhds <;> ext <;> rw [ncs_der_val]\n#align ncs_tendsto_const ncs_tendsto_const\n\n",
 "limit_zero_of_norm_tendsto_zero":
 "theorem limit_zero_of_norm_tendsto_zero : F.eval ncs.lim = 0 :=\n  tendsto_nhds_unique (comp_tendsto_lim _) tendsto_zero_of_norm_tendsto_zero\n#align limit_zero_of_norm_tendsto_zero limit_zero_of_norm_tendsto_zero\n\n",
 "ih_0":
 "private theorem ih_0 : ih 0 a :=\n  ⟨rfl, by simp [T_def, mul_div_cancel' _ (ne_of_gt (deriv_sq_norm_pos hnorm))]⟩\n#align ih_0 ih_0\n\n",
 "hensels_lemma":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℤ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\ntheorem hensels_lemma :\n    ∃ z : «exprℤ_[ ]» p,\n      F.eval z = 0 ∧\n        «expr‖ ‖» (z - a) < «expr‖ ‖» (F.derivative.eval a) ∧\n          «expr‖ ‖» (F.derivative.eval z) = «expr‖ ‖» (F.derivative.eval a) ∧\n            ∀ z', F.eval z' = 0 → «expr‖ ‖» (z' - a) < «expr‖ ‖» (F.derivative.eval a) → z' = z :=\n  if ha : F.eval a = 0 then ⟨a, a_is_soln hnorm ha⟩\n  else by\n    refine' ⟨soln _ _, eval_soln _ _, soln_dist_to_a_lt_deriv _ _, soln_deriv_norm _ _, soln_unique _ _⟩ <;> assumption\n#align hensels_lemma hensels_lemma\n\n",
 "eval_soln":
 "private theorem eval_soln : F.eval soln = 0 :=\n  limit_zero_of_norm_tendsto_zero newton_seq_norm_tendsto_zero\n#align eval_soln eval_soln\n\n",
 "deriv_sq_norm_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem deriv_sq_norm_pos : 0 < «expr‖ ‖» (F.derivative.eval a) ^ 2 :=\n  lt_of_le_of_lt (norm_nonneg _) hnorm\n#align deriv_sq_norm_pos deriv_sq_norm_pos\n\n",
 "deriv_sq_norm_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem deriv_sq_norm_ne_zero : «expr‖ ‖» (F.derivative.eval a) ^ 2 ≠ 0 :=\n  ne_of_gt deriv_sq_norm_pos\n#align deriv_sq_norm_ne_zero deriv_sq_norm_ne_zero\n\n",
 "deriv_norm_pos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem deriv_norm_pos : 0 < «expr‖ ‖» (F.derivative.eval a) :=\n  lt_of_le_of_ne (norm_nonneg _) (ne.symm deriv_norm_ne_zero)\n#align deriv_norm_pos deriv_norm_pos\n\n",
 "deriv_norm_ne_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem deriv_norm_ne_zero : «expr‖ ‖» (F.derivative.eval a) ≠ 0 := fun h =>\n  deriv_sq_norm_ne_zero (by simp [*, sq])\n#align deriv_norm_ne_zero deriv_norm_ne_zero\n\n",
 "deriv_ne_zero":
 "private theorem deriv_ne_zero : F.derivative.eval a ≠ 0 :=\n  mt norm_eq_zero.2 deriv_norm_ne_zero\n#align deriv_ne_zero deriv_ne_zero\n\n",
 "comp_tendsto_lim":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℤ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℤ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\nprivate theorem comp_tendsto_lim {p : ℕ} [fact p.prime] {F : polynomial («exprℤ_[ ]» p)}\n    (ncs : CauSeq («exprℤ_[ ]» p) norm) : tendsto (fun i => F.eval (ncs i)) at_top ((nhds) (F.eval ncs.lim)) :=\n  F.continuous_at.tendsto.comp ncs.tendsto_limit\n#align comp_tendsto_lim comp_tendsto_lim\n\n",
 "calc_norm_le_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℚ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℚ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℚ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℤ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℚ_[ ]» -/\nprivate theorem calc_norm_le_one {n : ℕ} {z : «exprℤ_[ ]» p} (hz : ih n z) :\n    «expr‖ ‖» ((↑(F.eval z) : «exprℚ_[ ]» p) / ↑(F.derivative.eval z)) ≤ 1 :=\n  calc\n    «expr‖ ‖» ((↑(F.eval z) : «exprℚ_[ ]» p) / ↑(F.derivative.eval z)) =\n        «expr‖ ‖» (↑(F.eval z) : «exprℚ_[ ]» p) / «expr‖ ‖» (↑(F.derivative.eval z) : «exprℚ_[ ]» p) :=\n      norm_div _ _\n    _ = «expr‖ ‖» (F.eval z) / «expr‖ ‖» (F.derivative.eval a) := by simp [hz.1]\n    _ ≤ «expr‖ ‖» (F.derivative.eval a) ^ 2 * T ^ 2 ^ n / «expr‖ ‖» (F.derivative.eval a) :=\n      (div_le_div_right deriv_norm_pos).2 hz.2\n    _ = «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n := div_sq_cancel _ _\n    _ ≤ 1 := mul_le_one (padic_int.norm_le_one _) (T_pow_nonneg _) (le_of_lt (T_pow' _))\n    \n#align calc_norm_le_one calc_norm_le_one\n\n",
 "calc_deriv_dist":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℤ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem calc_deriv_dist {z z' z1 : «exprℤ_[ ]» p} (hz' : z' = z - z1)\n    (hz1 : «expr‖ ‖» z1 = «expr‖ ‖» (F.eval z) / «expr‖ ‖» (F.derivative.eval a)) {n} (hz : ih n z) :\n    «expr‖ ‖» (F.derivative.eval z' - F.derivative.eval z) < «expr‖ ‖» (F.derivative.eval a) :=\n  calc\n    «expr‖ ‖» (F.derivative.eval z' - F.derivative.eval z) ≤ «expr‖ ‖» (z' - z) := padic_polynomial_dist _ _ _\n    _ = «expr‖ ‖» z1 := by simp only [sub_eq_add_neg, add_assoc, hz', add_add_neg_cancel'_right, norm_neg]\n    _ = «expr‖ ‖» (F.eval z) / «expr‖ ‖» (F.derivative.eval a) := hz1\n    _ ≤ «expr‖ ‖» (F.derivative.eval a) ^ 2 * T ^ 2 ^ n / «expr‖ ‖» (F.derivative.eval a) :=\n      (div_le_div_right deriv_norm_pos).2 hz.2\n    _ = «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n := div_sq_cancel _ _\n    _ < «expr‖ ‖» (F.derivative.eval a) := (mul_lt_iff_lt_one_right deriv_norm_pos).2 (T_pow' _)\n    \n#align calc_deriv_dist calc_deriv_dist\n\n",
 "bound'_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\nprivate theorem bound'_sq : tendsto (fun n : ℕ => «expr‖ ‖» (F.derivative.eval a) ^ 2 * T ^ 2 ^ n) at_top ((nhds) 0) :=\n  by\n  rw [← mul_zero («expr‖ ‖» (F.derivative.eval a)), sq]\n  simp only [mul_assoc]\n  apply tendsto.mul\n  · apply tendsto_const_nhds\n  · apply bound'\n    assumption\n#align bound'_sq bound'_sq\n\n",
 "bound'":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nhds -/\nprivate theorem bound' : tendsto (fun n : ℕ => «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n) at_top ((nhds) 0) :=\n  by\n  rw [← mul_zero («expr‖ ‖» (F.derivative.eval a))]\n  exact\n    tendsto_const_nhds.mul\n      (tendsto.comp (tendsto_pow_at_top_nhds_0_of_lt_1 (norm_nonneg _) (T_lt_one hnorm))\n        (nat.tendsto_pow_at_top_at_top_of_one_lt (by norm_num)))\n#align bound' bound'\n\n",
 "bound":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem bound : ∀ {ε}, ε > 0 → ∃ N : ℕ, ∀ {n}, n ≥ N → «expr‖ ‖» (F.derivative.eval a) * T ^ 2 ^ n < ε :=\n  by\n  have := bound' hnorm hnsol\n  simp [tendsto, nhds] at this\n  intro ε hε\n  cases' this (ball 0 ε) (mem_ball_self hε) is_open_ball with N hN\n  exists N; intro n hn\n  simpa [abs_of_nonneg (T_nonneg _)] using hN _ hn\n#align bound bound\n\n",
 "a_soln_is_unique":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℤ_[ ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem a_soln_is_unique (ha : F.eval a = 0) (z' : «exprℤ_[ ]» p) (hz' : F.eval z' = 0)\n    (hnormz' : «expr‖ ‖» (z' - a) < «expr‖ ‖» (F.derivative.eval a)) : z' = a :=\n  let h := z' - a\n  let ⟨q, hq⟩ := F.binom_expansion a h\n  have : (F.derivative.eval a + q * h) * h = 0 :=\n    eq.symm\n      (calc\n        0 = F.eval (a + h) := show 0 = F.eval (a + (z' - a)) by rw [add_comm] <;> simp [hz']\n        _ = F.derivative.eval a * h + q * h ^ 2 := by rw [hq, ha, zero_add]\n        _ = (F.derivative.eval a + q * h) * h := by rw [sq, right_distrib, mul_assoc]\n        )\n  have : h = 0 :=\n    by_contradiction fun hne =>\n      have : F.derivative.eval a + q * h = 0 := (eq_zero_or_eq_zero_of_mul_eq_zero this).resolve_right hne\n      have : F.derivative.eval a = -q * h := by simpa using eq_neg_of_add_eq_zero_left this\n      lt_irrefl («expr‖ ‖» (F.derivative.eval a))\n        (calc\n          «expr‖ ‖» (F.derivative.eval a) = «expr‖ ‖» q * «expr‖ ‖» h := by simp [this]\n          _ ≤ 1 * «expr‖ ‖» h := mul_le_mul_of_nonneg_right (padic_int.norm_le_one _) (norm_nonneg _)\n          _ < «expr‖ ‖» (F.derivative.eval a) := by simpa [h]\n          )\n  eq_of_sub_eq_zero (by rw [← this] <;> rfl)\n#align a_soln_is_unique a_soln_is_unique\n\n",
 "a_is_soln":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem a_is_soln (ha : F.eval a = 0) :\n    F.eval a = 0 ∧\n      «expr‖ ‖» (a - a) < «expr‖ ‖» (F.derivative.eval a) ∧\n        «expr‖ ‖» (F.derivative.eval a) = «expr‖ ‖» (F.derivative.eval a) ∧\n          ∀ z', F.eval z' = 0 → «expr‖ ‖» (z' - a) < «expr‖ ‖» (F.derivative.eval a) → z' = a :=\n  ⟨ha, by simp [deriv_ne_zero hnorm], rfl, a_soln_is_unique ha⟩\n#align a_is_soln a_is_soln\n\n",
 "T_pow_nonneg":
 "private theorem T_pow_nonneg (n : ℕ) : 0 ≤ T ^ n :=\n  pow_nonneg T_nonneg _\n#align T_pow_nonneg T_pow_nonneg\n\n",
 "T_pow'":
 "private theorem T_pow' (n : ℕ) : T ^ 2 ^ n < 1 :=\n  T_pow (pow_ne_zero _ two_ne_zero)\n#align T_pow' T_pow'\n\n",
 "T_pow":
 "private theorem T_pow {n : ℕ} (hn : n ≠ 0) : T ^ n < 1 :=\n  pow_lt_one T_nonneg T_lt_one hn\n#align T_pow T_pow\n\n",
 "T_pos":
 "private theorem T_pos : T > 0 := by\n  rw [T_def]\n  exact div_pos (norm_pos_iff.2 hnsol) (deriv_sq_norm_pos hnorm)\n#align T_pos T_pos\n\n",
 "T_nonneg":
 "private theorem T_nonneg : 0 ≤ T :=\n  norm_nonneg _\n#align T_nonneg T_nonneg\n\n",
 "T_lt_one":
 "private theorem T_lt_one : T < 1 := by\n  let h := (div_lt_one deriv_sq_norm_pos).2 hnorm\n  rw [T_def] <;> apply h\n#align T_lt_one T_lt_one\n\n",
 "T_def":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\nprivate theorem T_def : T = «expr‖ ‖» (F.eval a) / «expr‖ ‖» (F.derivative.eval a) ^ 2 := by\n  simp [T, ← padic_int.norm_def]\n#align T_def T_def\n\n"}