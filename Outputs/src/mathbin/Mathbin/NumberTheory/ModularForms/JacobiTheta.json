{"summable_exp_mul_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem summable_exp_mul_sq {z : exprℂ} (hz : 0 < z.im) : Summable fun n : ℤ => (exprcexp) (real.pi * I * n ^ 2 * z) :=\n  let ⟨bd, h, h'⟩ := exists_summable_bound_exp_mul_sq hz\n  summable_norm_iff.mp (summable_of_nonneg_of_le (fun n => norm_nonneg _) (h' <| le_refl _) h)\n#align summable_exp_mul_sq summable_exp_mul_sq\n\n",
 "norm_jacobi_theta_sub_one_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_half_plane -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- An explicit upper bound for `‖jacobi_theta τ - 1‖`. -/\ntheorem norm_jacobi_theta_sub_one_le (τ : upper_half_plane) :\n    «expr‖ ‖» (jacobi_theta τ - 1) ≤ 2 / (1 - exp (-real.pi * τ.im)) * exp (-real.pi * τ.im) :=\n  by\n  suffices\n    «expr‖ ‖»\n        («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          ((exprcexp) (real.pi * I * (n + 1) ^ 2 * τ))) ≤\n      exp (-real.pi * τ.im) / (1 - exp (-real.pi * τ.im))\n    by\n    calc\n      «expr‖ ‖» (jacobi_theta τ - 1) =\n          2 *\n            «expr‖ ‖»\n              («expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n                ((exprcexp) (real.pi * I * (n + 1) ^ 2 * τ))) :=\n        by rw [sub_eq_iff_eq_add'.mpr (jacobi_theta_eq_tsum_nat τ), norm_mul, complex.norm_eq_abs, Complex.abs_two]\n      _ ≤ 2 * ((exprrexp) (-real.pi * τ.im) / (1 - (exprrexp) (-real.pi * τ.im))) := by\n        rwa [mul_le_mul_left (zero_lt_two' (exprℝ))]\n      _ = 2 / (1 - (exprrexp) (-real.pi * τ.im)) * (exprrexp) (-real.pi * τ.im) := by rw [div_mul_comm, mul_comm]\n      \n  have : ∀ n : ℕ, «expr‖ ‖» ((exprcexp) (real.pi * I * (n + 1) ^ 2 * τ)) ≤ exp (-real.pi * τ.im) ^ (n + 1) :=\n    by\n    intro n\n    simpa only [Int.cast_add, Int.cast_one] using norm_exp_mul_sq_le τ.im_pos (n + 1)\n  have s :\n    HasSum (fun n : ℕ => (exprrexp) (-real.pi * τ.im) ^ (n + 1))\n      (exp (-real.pi * τ.im) / (1 - exp (-real.pi * τ.im))) :=\n    by\n    simp_rw [pow_succ, div_eq_mul_inv, hasSum_mul_left_iff (Real.exp_ne_zero _)]\n    exact\n      hasSum_geometric_of_lt_1 (exp_pos (-real.pi * τ.im)).le\n        (exp_lt_one_iff.mpr <| mul_neg_of_neg_of_pos (neg_lt_zero.mpr pi_pos) τ.im_pos)\n  have aux : Summable fun n : ℕ => «expr‖ ‖» ((exprcexp) (↑(real.pi) * I * (↑n + 1) ^ 2 * ↑τ)) :=\n    summable_of_nonneg_of_le (fun n => norm_nonneg _) this s.summable\n  exact (norm_tsum_le_tsum_norm aux).trans ((tsum_mono aux s.summable this).trans (le_of_eq s.tsum_eq))\n#align norm_jacobi_theta_sub_one_le norm_jacobi_theta_sub_one_le\n\n",
 "norm_exp_mul_sq_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-\nCopyright (c) 2023 David Loeffler. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: David Loeffler\n-/\ntheorem norm_exp_mul_sq_le {z : exprℂ} (hz : 0 < z.im) (n : ℤ) :\n    «expr‖ ‖» ((exprcexp) (real.pi * I * n ^ 2 * z)) ≤ exp (-real.pi * z.im) ^ n.nat_abs :=\n  by\n  let y := (exprrexp) (-real.pi * z.im)\n  have h : y < 1 := exp_lt_one_iff.mpr (mul_neg_of_neg_of_pos (neg_lt_zero.mpr pi_pos) hz)\n  refine' (le_of_eq _).trans (_ : y ^ n ^ 2 ≤ _)\n  · rw [complex.norm_eq_abs, Complex.abs_exp]\n    have : (↑(real.pi) * I * n ^ 2 * z).re = -real.pi * z.im * n ^ 2 :=\n      by\n      rw [(by\n          push_cast\n          ring : ↑(real.pi) * I * n ^ 2 * z = ↑(real.pi * n ^ 2) * (z * I)),\n        of_real_mul_re, mul_I_re]\n      ring\n    obtain ⟨m, hm⟩ := Int.eq_ofNat_of_zero_le (sq_nonneg n)\n    rw [this, exp_mul, ← Int.cast_pow, rpow_int_cast, hm, zpow_ofNat]\n  · have : n ^ 2 = ↑(n.nat_abs ^ 2) := by rw [Nat.cast_pow, Int.natAbs_sq]\n    rw [this, zpow_ofNat]\n    exact pow_le_pow_of_le_one (exp_pos _).le h.le ((sq n.nat_abs).symm ▸ n.nat_abs.le_mul_self)\n#align norm_exp_mul_sq_le norm_exp_mul_sq_le\n\n",
 "mdifferentiable_jacobi_theta":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `model_with_corners_self.self -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem mdifferentiable_jacobi_theta :\n    mdifferentiable (model_with_corners_self.self (exprℂ)) (model_with_corners_self.self (exprℂ)) jacobi_theta :=\n  fun τ => (differentiable_at_tsum_exp_mul_sq τ).mdifferentiable_at.comp τ τ.mdifferentiable_coe\n#align mdifferentiable_jacobi_theta mdifferentiable_jacobi_theta\n\n",
 "jacobi_theta_two_vadd":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_half_plane -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\ntheorem jacobi_theta_two_vadd (τ : upper_half_plane) : jacobi_theta («expr +ᵥ » (2 : exprℝ) τ) = jacobi_theta τ :=\n  by\n  refine' tsum_congr fun n => _\n  rw [upper_half_plane.coe_vadd, of_real_bit0, of_real_one]\n  suffices (exprcexp) (↑(real.pi) * I * ↑n ^ 2 * 2) = 1 by rw [mul_add, Complex.exp_add, this, one_mul]\n  rw [(by\n      push_cast\n      ring : ↑(real.pi) * I * ↑n ^ 2 * 2 = ↑(n ^ 2) * (2 * real.pi * I)),\n    Complex.exp_int_mul, complex.exp_two_pi_mul_I, one_zpow]\n#align jacobi_theta_two_vadd jacobi_theta_two_vadd\n\n",
 "jacobi_theta_eq_tsum_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_half_plane -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem jacobi_theta_eq_tsum_nat (τ : upper_half_plane) :\n    jacobi_theta τ =\n      1 +\n        2 *\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n            ((exprcexp) (real.pi * I * (n + 1) ^ 2 * τ)) :=\n  by\n  rw [(has_sum_nat_jacobi_theta τ).tsum_eq, mul_div_cancel' _ (two_ne_zero' (exprℂ)), ← add_sub_assoc, add_sub_cancel']\n#align jacobi_theta_eq_tsum_nat jacobi_theta_eq_tsum_nat\n\n",
 "jacobi_theta_T_sq_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr +ᵥ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_half_plane -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\ntheorem jacobi_theta_T_sq_smul (τ : upper_half_plane) :\n    jacobi_theta («expr • » (modular_group.T ^ 2) τ) = jacobi_theta τ :=\n  by\n  suffices : «expr +ᵥ » (2 : exprℝ) τ = «expr • » (modular_group.T ^ (2 : ℤ)) τ; exact this ▸ jacobi_theta_two_vadd τ\n  simp only [← Subtype.coe_inj, upper_half_plane.modular_T_zpow_smul, Int.cast_two]\n#align jacobi_theta_T_sq_smul jacobi_theta_T_sq_smul\n\n",
 "jacobi_theta_S_smul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_half_plane -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr • » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\ntheorem jacobi_theta_S_smul (τ : upper_half_plane) :\n    jacobi_theta («expr • » modular_group.S τ) = (-I * τ) ^ (1 / 2 : exprℂ) * jacobi_theta τ :=\n  by\n  unfold jacobi_theta\n  rw [upper_half_plane.modular_S_smul, upper_half_plane.coe_mk]\n  have ha : 0 < (-I * τ).re :=\n    by\n    rw [neg_mul, neg_re, mul_re, I_re, I_im, MulZeroClass.zero_mul, one_mul, zero_sub, neg_neg]\n    exact τ.im_pos\n  have ha' : (-I * τ) ^ (1 / 2 : exprℂ) ≠ 0 :=\n    by\n    rw [ne.def, cpow_eq_zero_iff]\n    contrapose! ha\n    rw [ha.1, zero_re]\n  have hτ : (τ : exprℂ) ≠ 0 := τ.ne_zero\n  have := complex.tsum_exp_neg_mul_int_sq ha\n  rw [mul_comm ((1 : exprℂ) / _) _, mul_one_div, eq_div_iff ha', mul_comm _ (_ ^ _), eq_comm] at this\n  convert this using 3\n  · ext1 n\n    congr 1\n    field_simp [hτ, I_ne_zero]\n    ring_nf\n    rw [I_sq, mul_neg, mul_one, neg_mul, neg_neg]\n  · ext1 n\n    congr 1\n    ring_nf\n#align jacobi_theta_S_smul jacobi_theta_S_smul\n\n",
 "is_O_at_im_infty_jacobi_theta_sub_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- The norm of `jacobi_theta τ - 1` decays exponentially as `im τ → ∞`. -/\ntheorem is_O_at_im_infty_jacobi_theta_sub_one :\n    IsBigO upper_half_plane.at_im_infty (fun τ => jacobi_theta τ - 1) fun τ => (exprrexp) (-real.pi * τ.im) :=\n  by\n  simp_rw [is_O, is_O_with, Filter.Eventually, upper_half_plane.at_im_infty_mem]\n  refine' ⟨2 / (1 - (exprrexp) (-real.pi)), 1, fun τ hτ => (norm_jacobi_theta_sub_one_le τ).trans _⟩\n  rw [Real.norm_eq_abs, Real.abs_exp]\n  refine' mul_le_mul_of_nonneg_right _ (exp_pos _).le\n  rw [div_le_div_left (zero_lt_two' (exprℝ)), sub_le_sub_iff_left, exp_le_exp, neg_mul, neg_le_neg_iff]\n  · exact le_mul_of_one_le_right pi_pos.le hτ\n  · rw [sub_pos, exp_lt_one_iff, neg_mul, neg_lt_zero]\n    exact mul_pos pi_pos τ.im_pos\n  · rw [sub_pos, exp_lt_one_iff, neg_lt_zero]\n    exact pi_pos\n#align is_O_at_im_infty_jacobi_theta_sub_one is_O_at_im_infty_jacobi_theta_sub_one\n\n",
 "has_sum_nat_jacobi_theta":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_half_plane -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem has_sum_nat_jacobi_theta (τ : upper_half_plane) :\n    HasSum (fun n : ℕ => (exprcexp) (real.pi * I * (n + 1) ^ 2 * τ)) ((jacobi_theta τ - 1) / 2) :=\n  by\n  have := (summable_exp_mul_sq τ.im_pos).has_sum.sum_nat_of_sum_int\n  rw [← @hasSum_nat_add_iff' (exprℂ) _ _ _ _ 1] at this\n  simp_rw [Finset.sum_range_one, Int.cast_neg, Int.cast_ofNat, Nat.cast_zero, neg_zero, Int.cast_zero, sq (0 : exprℂ),\n    MulZeroClass.mul_zero, MulZeroClass.zero_mul, neg_sq, ← mul_two, Complex.exp_zero, add_sub_assoc,\n    (by norm_num : (1 : exprℂ) - 1 * 2 = -1), ← sub_eq_add_neg, Nat.cast_add, Nat.cast_one] at this\n  convert this.div_const 2\n  simp_rw [mul_div_cancel _ two_ne_zero]\n#align has_sum_nat_jacobi_theta has_sum_nat_jacobi_theta\n\n",
 "exists_summable_bound_exp_mul_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprrexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr‖ ‖» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem exists_summable_bound_exp_mul_sq {R : exprℝ} (hR : 0 < R) :\n    ∃ bd : ℤ → exprℝ,\n      Summable bd ∧ ∀ {τ : exprℂ} (hτ : R ≤ τ.im) (n : ℤ), «expr‖ ‖» ((exprcexp) (real.pi * I * n ^ 2 * τ)) ≤ bd n :=\n  by\n  let y := (exprrexp) (-real.pi * R)\n  have h : y < 1 := exp_lt_one_iff.mpr (mul_neg_of_neg_of_pos (neg_lt_zero.mpr pi_pos) hR)\n  refine' ⟨fun n => y ^ n.nat_abs, summable_int_of_summable_nat _ _, fun τ hτ n => _⟩\n  pick_goal 3\n  · refine' (norm_exp_mul_sq_le (hR.trans_le hτ) n).trans _\n    refine' pow_le_pow_of_le_left (exp_pos _).le (real.exp_le_exp.mpr _) _\n    rwa [mul_le_mul_left_of_neg (neg_lt_zero.mpr pi_pos)]\n  all_goals simpa only [Int.natAbs_neg, Int.natAbs_ofNat] using summable_geometric_of_lt_1 (Real.exp_pos _).le h\n#align exists_summable_bound_exp_mul_sq exists_summable_bound_exp_mul_sq\n\n",
 "differentiable_at_tsum_exp_mul_sq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℝ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `upper_half_plane -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprℂ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprcexp -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem differentiable_at_tsum_exp_mul_sq (τ : upper_half_plane) :\n    differentiable_at (exprℂ)\n      (fun z =>\n        «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n          ((exprcexp) (real.pi * I * n ^ 2 * z)))\n      ↑τ :=\n  by\n  suffices :\n    ∀ (y : exprℝ) (hy : 0 < y),\n      differentiable_on (exprℂ)\n        (fun z =>\n          «expr∑' , » \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr∑' , »\"\n            ((exprcexp) (real.pi * I * n ^ 2 * z)))\n        { w : exprℂ | y < im w }\n  exact\n    let ⟨y, hy, hy'⟩ := exists_between τ.im_pos\n    (this y hy).differentiable_at ((complex.continuous_im.is_open_preimage _ isOpen_Ioi).mem_nhds (τ.coe_im ▸ hy'))\n  intro y hy\n  have h1 :\n    ∀ (n : ℤ) (w : exprℂ) (hw : y < im w),\n      differentiable_within_at (exprℂ) (fun v : exprℂ => (exprcexp) (↑(real.pi) * I * ↑n ^ 2 * v))\n        { z : exprℂ | y < im z } w :=\n    fun n w hw => (differentiable_at_id.const_mul _).cexp.differentiable_within_at\n  have h2 : IsOpen { w : exprℂ | y < im w } := continuous_im.is_open_preimage _ isOpen_Ioi\n  obtain ⟨bd, bd_s, le_bd⟩ := exists_summable_bound_exp_mul_sq hy\n  exact differentiable_on_tsum_of_summable_norm bd_s h1 h2 fun i w hw => le_bd (le_of_lt hw) i\n#align differentiable_at_tsum_exp_mul_sq differentiable_at_tsum_exp_mul_sq\n\n",
 "continuous_jacobi_theta":
 "theorem continuous_jacobi_theta : Continuous jacobi_theta :=\n  mdifferentiable_jacobi_theta.continuous\n#align continuous_jacobi_theta continuous_jacobi_theta\n\n"}