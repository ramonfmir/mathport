{"dvd_sub_pow_of_dvd_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →+* » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⧸ » -/\n/-\nCopyright (c) 2020 Johan Commelin. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Johan Commelin, Kenny Lau\n-/\ntheorem dvd_sub_pow_of_dvd_sub {R : Type _} [CommRing R] {p : ℕ} {a b : R} (h : (p : R) ∣ a - b) (k : ℕ) :\n    (p ^ (k + 1) : R) ∣ a ^ p ^ k - b ^ p ^ k :=\n  by\n  induction' k with k ih\n  · rwa [pow_one, pow_zero, pow_one, pow_one]\n  rw [pow_succ' p k, pow_mul, pow_mul, ← geom_sum₂_mul, pow_succ]\n  refine' mul_dvd_mul _ ih\n  let I : ideal R := span {p}\n  let f : «expr →+* » R («expr ⧸ » R I) := mk I\n  have hp : (p : «expr ⧸ » R I) = 0 := by rw [← map_nat_cast f, eq_zero_iff_mem, mem_span_singleton]\n  rw [← mem_span_singleton, ← ideal.quotient.eq] at h\n  rw [← mem_span_singleton, ← eq_zero_iff_mem, ring_hom.map_geom_sum₂, RingHom.map_pow, RingHom.map_pow, h,\n    geom_sum₂_self, hp, zero_mul]\n#align dvd_sub_pow_of_dvd_sub dvd_sub_pow_of_dvd_sub\n\n"}