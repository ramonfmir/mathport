{"χ₈_nat_mod_eight":
 "/-- The value of `χ₈ n`, for `n : ℕ`, depends only on `n % 8`. -/\ntheorem χ₈_nat_mod_eight (n : ℕ) : χ₈ n = χ₈ (n % 8 : ℕ) := by rw [← zmod.nat_cast_mod n 8]\n#align χ₈_nat_mod_eight χ₈_nat_mod_eight\n\n",
 "χ₈_nat_eq_if_mod_eight":
 "theorem χ₈_nat_eq_if_mod_eight (n : ℕ) : χ₈ n = if n % 2 = 0 then 0 else if n % 8 = 1 ∨ n % 8 = 7 then 1 else -1 := by\n  exact_mod_cast χ₈_int_eq_if_mod_eight n\n#align χ₈_nat_eq_if_mod_eight χ₈_nat_eq_if_mod_eight\n\n",
 "χ₈_int_mod_eight":
 "/-- The value of `χ₈ n`, for `n : ℤ`, depends only on `n % 8`. -/\ntheorem χ₈_int_mod_eight (n : ℤ) : χ₈ n = χ₈ (n % 8 : ℤ) :=\n  by\n  rw [← zmod.int_cast_mod n 8]\n  norm_cast\n#align χ₈_int_mod_eight χ₈_int_mod_eight\n\n",
 "χ₈_int_eq_if_mod_eight":
 "/-- An explicit description of `χ₈` on integers / naturals -/\ntheorem χ₈_int_eq_if_mod_eight (n : ℤ) : χ₈ n = if n % 2 = 0 then 0 else if n % 8 = 1 ∨ n % 8 = 7 then 1 else -1 :=\n  by\n  have help : ∀ m : ℤ, 0 ≤ m → m < 8 → χ₈ m = if m % 2 = 0 then 0 else if m = 1 ∨ m = 7 then 1 else -1 := by decide\n  rw [← Int.emod_emod_of_dvd n (by norm_num : (2 : ℤ) ∣ 8), ← zmod.int_cast_mod n 8]\n  exact help (n % 8) (Int.emod_nonneg n (by norm_num)) (Int.emod_lt n (by norm_num))\n#align χ₈_int_eq_if_mod_eight χ₈_int_eq_if_mod_eight\n\n",
 "χ₈'_nat_eq_if_mod_eight":
 "theorem χ₈'_nat_eq_if_mod_eight (n : ℕ) : χ₈' n = if n % 2 = 0 then 0 else if n % 8 = 1 ∨ n % 8 = 3 then 1 else -1 := by\n  exact_mod_cast χ₈'_int_eq_if_mod_eight n\n#align χ₈'_nat_eq_if_mod_eight χ₈'_nat_eq_if_mod_eight\n\n",
 "χ₈'_int_eq_χ₄_mul_χ₈":
 "theorem χ₈'_int_eq_χ₄_mul_χ₈ (a : ℤ) : χ₈' a = χ₄ a * χ₈ a :=\n  by\n  rw [← @cast_int_cast 8 (zmod 4) _ 4 _ (by norm_num) a]\n  exact χ₈'_eq_χ₄_mul_χ₈ a\n#align χ₈'_int_eq_χ₄_mul_χ₈ χ₈'_int_eq_χ₄_mul_χ₈\n\n",
 "χ₈'_int_eq_if_mod_eight":
 "/-- An explicit description of `χ₈'` on integers / naturals -/\ntheorem χ₈'_int_eq_if_mod_eight (n : ℤ) : χ₈' n = if n % 2 = 0 then 0 else if n % 8 = 1 ∨ n % 8 = 3 then 1 else -1 :=\n  by\n  have help : ∀ m : ℤ, 0 ≤ m → m < 8 → χ₈' m = if m % 2 = 0 then 0 else if m = 1 ∨ m = 3 then 1 else -1 := by decide\n  rw [← Int.emod_emod_of_dvd n (by norm_num : (2 : ℤ) ∣ 8), ← zmod.int_cast_mod n 8]\n  exact help (n % 8) (Int.emod_nonneg n (by norm_num)) (Int.emod_lt n (by norm_num))\n#align χ₈'_int_eq_if_mod_eight χ₈'_int_eq_if_mod_eight\n\n",
 "χ₈'_eq_χ₄_mul_χ₈":
 "/-- The relation between `χ₄`, `χ₈` and `χ₈'` -/\ntheorem χ₈'_eq_χ₄_mul_χ₈ (a : zmod 8) : χ₈' a = χ₄ a * χ₈ a := by decide!\n#align χ₈'_eq_χ₄_mul_χ₈ χ₈'_eq_χ₄_mul_χ₈\n\n",
 "χ₄_nat_three_mod_four":
 "/-- If `n % 4 = 3`, then `χ₄ n = -1`. -/\ntheorem χ₄_nat_three_mod_four {n : ℕ} (hn : n % 4 = 3) : χ₄ n = -1 :=\n  by\n  rw [χ₄_nat_mod_four, hn]\n  rfl\n#align χ₄_nat_three_mod_four χ₄_nat_three_mod_four\n\n",
 "χ₄_nat_one_mod_four":
 "/-- If `n % 4 = 1`, then `χ₄ n = 1`. -/\ntheorem χ₄_nat_one_mod_four {n : ℕ} (hn : n % 4 = 1) : χ₄ n = 1 :=\n  by\n  rw [χ₄_nat_mod_four, hn]\n  rfl\n#align χ₄_nat_one_mod_four χ₄_nat_one_mod_four\n\n",
 "χ₄_nat_mod_four":
 "/-- The value of `χ₄ n`, for `n : ℕ`, depends only on `n % 4`. -/\ntheorem χ₄_nat_mod_four (n : ℕ) : χ₄ n = χ₄ (n % 4 : ℕ) := by rw [← zmod.nat_cast_mod n 4]\n#align χ₄_nat_mod_four χ₄_nat_mod_four\n\n",
 "χ₄_nat_eq_if_mod_four":
 "theorem χ₄_nat_eq_if_mod_four (n : ℕ) : χ₄ n = if n % 2 = 0 then 0 else if n % 4 = 1 then 1 else -1 := by\n  exact_mod_cast χ₄_int_eq_if_mod_four n\n#align χ₄_nat_eq_if_mod_four χ₄_nat_eq_if_mod_four\n\n",
 "χ₄_int_three_mod_four":
 "/-- If `n % 4 = 3`, then `χ₄ n = -1`. -/\ntheorem χ₄_int_three_mod_four {n : ℤ} (hn : n % 4 = 3) : χ₄ n = -1 :=\n  by\n  rw [χ₄_int_mod_four, hn]\n  rfl\n#align χ₄_int_three_mod_four χ₄_int_three_mod_four\n\n",
 "χ₄_int_one_mod_four":
 "/-- If `n % 4 = 1`, then `χ₄ n = 1`. -/\ntheorem χ₄_int_one_mod_four {n : ℤ} (hn : n % 4 = 1) : χ₄ n = 1 :=\n  by\n  rw [χ₄_int_mod_four, hn]\n  rfl\n#align χ₄_int_one_mod_four χ₄_int_one_mod_four\n\n",
 "χ₄_int_mod_four":
 "/-- The value of `χ₄ n`, for `n : ℤ`, depends only on `n % 4`. -/\ntheorem χ₄_int_mod_four (n : ℤ) : χ₄ n = χ₄ (n % 4 : ℤ) :=\n  by\n  rw [← zmod.int_cast_mod n 4]\n  norm_cast\n#align χ₄_int_mod_four χ₄_int_mod_four\n\n",
 "χ₄_int_eq_if_mod_four":
 "/-- An explicit description of `χ₄` on integers / naturals -/\ntheorem χ₄_int_eq_if_mod_four (n : ℤ) : χ₄ n = if n % 2 = 0 then 0 else if n % 4 = 1 then 1 else -1 :=\n  by\n  have help : ∀ m : ℤ, 0 ≤ m → m < 4 → χ₄ m = if m % 2 = 0 then 0 else if m = 1 then 1 else -1 := by decide\n  rw [← Int.emod_emod_of_dvd n (by norm_num : (2 : ℤ) ∣ 4), ← zmod.int_cast_mod n 4]\n  exact help (n % 4) (Int.emod_nonneg n (by norm_num)) (Int.emod_lt n (by norm_num))\n#align χ₄_int_eq_if_mod_four χ₄_int_eq_if_mod_four\n\n",
 "χ₄_eq_neg_one_pow":
 "/-- Alternative description of `χ₄ n` for odd `n : ℕ` in terms of powers of `-1` -/\ntheorem χ₄_eq_neg_one_pow {n : ℕ} (hn : n % 2 = 1) : χ₄ n = (-1) ^ (n / 2) :=\n  by\n  rw [χ₄_nat_eq_if_mod_four]\n  simp only [hn, nat.one_ne_zero, if_false]\n  nth_rw 1 [← nat.div_add_mod n 4]\n  nth_rw 1 [(by norm_num : 4 = 2 * 2)]\n  rw [mul_assoc, add_comm, nat.add_mul_div_left _ _ (by norm_num : 0 < 2), pow_add, pow_mul, neg_one_sq, one_pow,\n    mul_one]\n  have help : ∀ m : ℕ, m < 4 → m % 2 = 1 → ite (m = 1) (1 : ℤ) (-1) = (-1) ^ (m / 2) := by decide\n  exact help (n % 4) (nat.mod_lt n (by norm_num)) ((Nat.mod_mod_of_dvd n (by norm_num : 2 ∣ 4)).trans hn)\n#align χ₄_eq_neg_one_pow χ₄_eq_neg_one_pow\n\n",
 "neg_one_pow_div_two_of_three_mod_four":
 "/-- If `n % 4 = 3`, then `(-1)^(n/2) = -1`. -/\ntheorem _root_.neg_one_pow_div_two_of_three_mod_four {n : ℕ} (hn : n % 4 = 3) : (-1 : ℤ) ^ (n / 2) = -1 :=\n  by\n  rw [← χ₄_eq_neg_one_pow (Nat.odd_of_mod_four_eq_three hn), ← nat_cast_mod, hn]\n  rfl\n#align neg_one_pow_div_two_of_three_mod_four neg_one_pow_div_two_of_three_mod_four\n\n",
 "neg_one_pow_div_two_of_one_mod_four":
 "/-- If `n % 4 = 1`, then `(-1)^(n/2) = 1`. -/\ntheorem _root_.neg_one_pow_div_two_of_one_mod_four {n : ℕ} (hn : n % 4 = 1) : (-1 : ℤ) ^ (n / 2) = 1 :=\n  by\n  rw [← χ₄_eq_neg_one_pow (Nat.odd_of_mod_four_eq_one hn), ← nat_cast_mod, hn]\n  rfl\n#align neg_one_pow_div_two_of_one_mod_four neg_one_pow_div_two_of_one_mod_four\n\n",
 "is_quadratic_χ₈'":
 "/-- `χ₈'` takes values in `{0, 1, -1}` -/\ntheorem is_quadratic_χ₈' : χ₈'.is_quadratic := by\n  intro a\n  decide!\n#align is_quadratic_χ₈' is_quadratic_χ₈'\n\n",
 "is_quadratic_χ₈":
 "/-- `χ₈` takes values in `{0, 1, -1}` -/\ntheorem is_quadratic_χ₈ : χ₈.is_quadratic := by\n  intro a\n  decide!\n#align is_quadratic_χ₈ is_quadratic_χ₈\n\n",
 "is_quadratic_χ₄":
 "/-\nCopyright (c) 2022 Michael Stoll. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Michael Stoll\n-/\n/-- `χ₄` takes values in `{0, 1, -1}` -/\ntheorem is_quadratic_χ₄ : χ₄.is_quadratic := by\n  intro a\n  decide!\n#align is_quadratic_χ₄ is_quadratic_χ₄\n\n"}