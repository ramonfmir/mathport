{"is_frobenius_number_pair":
 "/-\nCopyright (c) 2021 Alex Zhao. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Alex Zhao\n-/\n/-- The **Chicken Mcnugget theorem** stating that the Frobenius number\n  of positive numbers `m` and `n` is `m * n - m - n`. -/\ntheorem is_frobenius_number_pair (cop : coprime m n) (hm : 1 < m) (hn : 1 < n) :\n    is_frobenius_number (m * n - m - n) {m, n} :=\n  by\n  simp_rw [is_frobenius_number, add_submonoid.mem_closure_pair]\n  have hmn : m + n ≤ m * n := add_le_mul hm hn\n  constructor\n  · push_neg\n    intro a b h\n    apply cop.mul_add_mul_ne_mul (add_one_ne_zero a) (add_one_ne_zero b)\n    simp only [nat.sub_sub, smul_eq_mul] at h\n    zify  at h⊢\n    rw [← sub_eq_zero] at h⊢\n    rw [← h]\n    ring\n  · intro k hk\n    dsimp at hk\n    contrapose! hk\n    let x := chinese_remainder cop 0 k\n    have hx : x.val < m * n := chinese_remainder_lt_mul cop 0 k (ne_bot_of_gt hm) (ne_bot_of_gt hn)\n    suffices key : x.1 ≤ k\n    · obtain ⟨a, ha⟩ := modeq_zero_iff_dvd.mp x.2.1\n      obtain ⟨b, hb⟩ := (modeq_iff_dvd' key).mp x.2.2\n      exact ⟨a, b, by rw [mul_comm, ← ha, mul_comm, ← hb, nat.add_sub_of_le key]⟩\n    refine' modeq.le_of_lt_add x.2.2 (lt_of_le_of_lt _ (add_lt_add_right hk n))\n    rw [nat.sub_add_cancel (le_tsub_of_add_le_left hmn)]\n    exact\n      modeq.le_of_lt_add (x.2.1.trans (modeq_zero_iff_dvd.mpr (Nat.dvd_sub' (dvd_mul_right m n) dvd_rfl)).symm)\n        (lt_of_lt_of_le hx le_tsub_add)\n#align is_frobenius_number_pair is_frobenius_number_pair\n\n"}