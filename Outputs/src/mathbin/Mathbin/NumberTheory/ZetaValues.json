{"summable_bernoulli_fourier":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚Äñ ‚Äñ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\ntheorem summable_bernoulli_fourier {k : ‚Ñï} (hk : 2 ‚â§ k) :\n    summable (fun n => -nat.factorial k / (2 * real.pi * I * n) ^ k : ‚Ñ§ ‚Üí expr‚ÑÇ) :=\n  by\n  have :\n    ‚àÄ n : ‚Ñ§,\n      -(nat.factorial k : expr‚ÑÇ) / (2 * real.pi * I * n) ^ k = -nat.factorial k / (2 * real.pi * I) ^ k * (1 / n ^ k) :=\n    by\n    intro n\n    rw [mul_one_div, div_div, ‚Üê mul_pow]\n  simp_rw [this]\n  apply summable.mul_left\n  rw [‚Üê summable_norm_iff]\n  have : (fun x : ‚Ñ§ => ¬´expr‚Äñ ‚Äñ¬ª (1 / (x : expr‚ÑÇ) ^ k)) = fun x : ‚Ñ§ => |1 / (x : expr‚Ñù) ^ k| :=\n    by\n    ext1 x\n    rw [norm_eq_abs, ‚Üê complex.abs_of_real]\n    congr 1\n    norm_cast\n  simp_rw [this]\n  rw [summable_abs_iff]\n  exact real.summable_one_div_int_pow.mpr (one_lt_two.trans_le hk)\n#align summable_bernoulli_fourier summable_bernoulli_fourier\n\n",
 "integral_bernoulli_fun_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´expr‚à´ in .. , ¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚à´ in .. , ¬ª -/\ntheorem integral_bernoulli_fun_eq_zero {k : ‚Ñï} (hk : k ‚â† 0) :\n    ¬´expr‚à´ in .. , ¬ª \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `¬´expr‚à´ in .. , ¬ª\" 0 1\n        (bernoulli_fun k x) =\n      0 :=\n  by\n  rw [integral_eq_sub_of_has_deriv_at (fun x hx => antideriv_bernoulli_fun k x)\n      ((polynomial.continuous _).interval_integrable _ _)]\n  dsimp only\n  rw [bernoulli_fun_eval_one]\n  split_ifs\n  ¬∑ exfalso\n    exact hk (nat.succ_inj'.mp h); ¬∑ simp\n#align integral_bernoulli_fun_eq_zero integral_bernoulli_fun_eq_zero\n\n",
 "has_sum_zeta_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem has_sum_zeta_two : has_sum (fun n : ‚Ñï => 1 / (n : expr‚Ñù) ^ 2) (real.pi ^ 2 / 6) :=\n  by\n  convert has_sum_zeta_nat one_ne_zero using 1; rw [mul_one]\n  rw [bernoulli_eq_bernoulli'_of_ne_one (by decide : 2 ‚â† 1), bernoulli'_two]\n  norm_num; field_simp; ring\n#align has_sum_zeta_two has_sum_zeta_two\n\n",
 "has_sum_zeta_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem has_sum_zeta_nat {k : ‚Ñï} (hk : k ‚â† 0) :\n    has_sum (fun n : ‚Ñï => 1 / (n : expr‚Ñù) ^ (2 * k))\n      ((-1) ^ (k + 1) * 2 ^ (2 * k - 1) * real.pi ^ (2 * k) * bernoulli (2 * k) / nat.factorial (2 * k)) :=\n  by\n  convert has_sum_one_div_nat_pow_mul_cos hk (left_mem_Icc.mpr zero_le_one)\n  ¬∑ ext1 n\n    rw [mul_zero, real.cos_zero, mul_one]\n  rw [polynomial.eval_zero_map, polynomial.bernoulli_eval_zero, eq_ratCast]\n  have : (2 : expr‚Ñù) ^ (2 * k - 1) = (2 : expr‚Ñù) ^ (2 * k) / 2 :=\n    by\n    rw [eq_div_iff (two_ne_zero' (expr‚Ñù))]\n    conv_lhs =>\n      congr\n      skip\n      rw [‚Üê pow_one (2 : expr‚Ñù)]\n    rw [‚Üê pow_add, nat.sub_add_cancel]\n    linarith [nat.one_le_iff_ne_zero.mpr hk]\n  rw [this, mul_pow]\n  ring\n#align has_sum_zeta_nat has_sum_zeta_nat\n\n",
 "has_sum_zeta_four":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem has_sum_zeta_four : has_sum (fun n : ‚Ñï => 1 / (n : expr‚Ñù) ^ 4) (real.pi ^ 4 / 90) :=\n  by\n  convert has_sum_zeta_nat two_ne_zero using 1; norm_num\n  rw [bernoulli_eq_bernoulli'_of_ne_one, bernoulli'_four]\n  norm_num; field_simp; ring; decide\n#align has_sum_zeta_four has_sum_zeta_four\n\n",
 "has_sum_one_div_pow_mul_fourier_mul_bernoulli_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `¬´exprC( , )¬ª -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\ntheorem has_sum_one_div_pow_mul_fourier_mul_bernoulli_fun {k : ‚Ñï} (hk : 2 ‚â§ k) {x : expr‚Ñù}\n    (hx : x ‚àà Icc (0 : expr‚Ñù) 1) :\n    has_sum (fun n : ‚Ñ§ => 1 / (n : expr‚ÑÇ) ^ k * fourier n (x : exprùïå))\n      (-(2 * real.pi * I) ^ k / nat.factorial k * bernoulli_fun k x) :=\n  by\n  -- first show it suffices to prove result for `Ico 0 1`\n  suffices ‚àÄ {y : expr‚Ñù}, y ‚àà Ico (0 : expr‚Ñù) 1 ‚Üí has_sum _ _\n    by\n    rw [‚Üê Ico_insert_right (zero_le_one' (expr‚Ñù)), mem_insert_iff, or_comm] at hx\n    rcases hx with (hx | rfl)\n    ¬∑ exact this hx\n    ¬∑ convert this (left_mem_Ico.mpr zero_lt_one) using 1\n      ¬∑ rw [add_circle.coe_period, quotient_add_group.coe_zero]\n      ¬∑ rw [bernoulli_fun_endpoints_eq_of_ne_one (by linarith : k ‚â† 1)]\n  intro y hy\n  let B : ¬´exprC( , )¬ª (exprùïå) (expr‚ÑÇ) :=\n    continuous_map.mk (coe ‚àò periodized_bernoulli k)\n      (continuous_of_real.comp (periodized_bernoulli.continuous (by linarith)))\n  have step1 : ‚àÄ n : ‚Ñ§, fourier_coeff B n = -nat.factorial k / (2 * real.pi * I * n) ^ k :=\n    by\n    rw [continuous_map.coe_mk]\n    exact fourier_coeff_bernoulli_eq (by linarith : k ‚â† 0)\n  have step2 :=\n    has_pointwise_sum_fourier_series_of_summable ((summable_bernoulli_fourier hk).congr fun n => (step1 n).symm) y\n  simp_rw [step1] at step2\n  convert step2.mul_left (-(2 * ‚Üë(real.pi) * I) ^ k / (nat.factorial k : expr‚ÑÇ)) using 2\n  ext1 n\n  rw [smul_eq_mul, ‚Üê mul_assoc, mul_div, mul_neg, div_mul_cancel, neg_neg, mul_pow _ ‚Üën, ‚Üê div_div, div_self]\n  ¬∑ rw [ne.def, pow_eq_zero_iff', not_and_or]\n    exact or.inl two_pi_I_ne_zero\n  ¬∑ exact nat.cast_ne_zero.mpr (Nat.factorial_ne_zero _)\n  ¬∑\n    rw [continuous_map.coe_mk, Function.comp_apply, of_real_inj, periodized_bernoulli,\n      add_circle.lift_Ico_coe_apply (by rwa [zero_add])]\n#align has_sum_one_div_pow_mul_fourier_mul_bernoulli_fun has_sum_one_div_pow_mul_fourier_mul_bernoulli_fun\n\n",
 "has_sum_one_div_nat_pow_mul_sin":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñö -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\ntheorem has_sum_one_div_nat_pow_mul_sin {k : ‚Ñï} (hk : k ‚â† 0) {x : expr‚Ñù} (hx : x ‚àà Icc (0 : expr‚Ñù) 1) :\n    has_sum (fun n : ‚Ñï => 1 / (n : expr‚Ñù) ^ (2 * k + 1) * real.sin (2 * real.pi * n * x))\n      ((-1) ^ (k + 1) * (2 * real.pi) ^ (2 * k + 1) / 2 / nat.factorial (2 * k + 1) *\n        (polynomial.map (algebra_map (expr‚Ñö) (expr‚Ñù)) (polynomial.bernoulli (2 * k + 1))).eval x) :=\n  by\n  have :\n    has_sum (fun n : ‚Ñï => 1 / (n : expr‚ÑÇ) ^ (2 * k + 1) * (fourier n (x : exprùïå) - fourier (-n) (x : exprùïå)))\n      ((-1) ^ (k + 1) * I * (2 * real.pi) ^ (2 * k + 1) / nat.factorial (2 * k + 1) * bernoulli_fun (2 * k + 1) x) :=\n    by\n    convert has_sum_one_div_nat_pow_mul_fourier (by linarith [nat.one_le_iff_ne_zero.mpr hk] : 2 ‚â§ 2 * k + 1) hx\n    ¬∑ ext1 n\n      rw [pow_add (-1 : expr‚ÑÇ), pow_mul (-1 : expr‚ÑÇ), neg_one_sq, one_pow, one_mul, pow_one, ‚Üê neg_eq_neg_one_mul, ‚Üê\n        sub_eq_add_neg]\n    ¬∑ rw [pow_add, pow_one]\n      conv_rhs =>\n        rw [mul_pow]\n        congr\n        congr\n        skip\n        rw [pow_add, pow_one, pow_mul, I_sq]\n      ring\n  convert ((has_sum_iff _ _).mp (this.div_const (2 * I))).1\n  ¬∑ ext1 n\n    convert (of_real_re _).symm\n    rw [of_real_mul]\n    rw [‚Üê mul_div]\n    congr\n    ¬∑ rw [of_real_div, of_real_one, of_real_pow]\n      rfl\n    ¬∑ rw [of_real_sin, of_real_mul, fourier_coe_apply, fourier_coe_apply, sin, of_real_one, div_one, div_one,\n        of_real_mul, of_real_mul, of_real_bit0, of_real_one, Int.cast_neg, Int.cast_ofNat, of_real_nat_cast, ‚Üê div_div,\n        div_I, div_mul_eq_mul_div‚ÇÄ, ‚Üê neg_div, ‚Üê neg_mul, neg_sub]\n      congr 4\n      ¬∑ ring\n      ¬∑ ring\n  ¬∑ convert (of_real_re _).symm\n    rw [of_real_mul, of_real_div, of_real_div, of_real_mul, of_real_pow, of_real_pow, of_real_neg, of_real_nat_cast,\n      of_real_mul, of_real_bit0, of_real_one, ‚Üê div_div, div_I, div_mul_eq_mul_div‚ÇÄ]\n    have : ‚àÄ Œ± Œ≤ Œ≥ Œ¥ : expr‚ÑÇ, Œ± * I * Œ≤ / Œ≥ * Œ¥ * I = I ^ 2 * Œ± * Œ≤ / Œ≥ * Œ¥ :=\n      by\n      intros\n      ring\n    rw [this, I_sq]\n    ring\n#align has_sum_one_div_nat_pow_mul_sin has_sum_one_div_nat_pow_mul_sin\n\n",
 "has_sum_one_div_nat_pow_mul_fourier":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n-- This section is just reformulating the results in a nicer form.\ntheorem has_sum_one_div_nat_pow_mul_fourier {k : ‚Ñï} (hk : 2 ‚â§ k) {x : expr‚Ñù} (hx : x ‚àà Icc (0 : expr‚Ñù) 1) :\n    has_sum (fun n : ‚Ñï => 1 / (n : expr‚ÑÇ) ^ k * (fourier n (x : exprùïå) + (-1) ^ k * fourier (-n) (x : exprùïå)))\n      (-(2 * real.pi * I) ^ k / nat.factorial k * bernoulli_fun k x) :=\n  by\n  convert (has_sum_one_div_pow_mul_fourier_mul_bernoulli_fun hk hx).sum_nat_of_sum_int\n  ¬∑ ext1 n\n    rw [Int.cast_neg, mul_add, ‚Üê mul_assoc]\n    conv_rhs => rw [neg_eq_neg_one_mul, mul_pow, ‚Üê div_div]\n    congr 2\n    rw [div_mul_eq_mul_div‚ÇÄ, one_mul]\n    congr 1\n    rw [eq_div_iff, ‚Üê mul_pow, ‚Üê neg_eq_neg_one_mul, neg_neg, one_pow]\n    apply pow_ne_zero\n    rw [neg_ne_zero]\n    exact one_ne_zero\n  ¬∑ rw [Int.cast_zero, zero_pow (by linarith : 0 < k), div_zero, zero_mul, add_zero]\n#align has_sum_one_div_nat_pow_mul_fourier has_sum_one_div_nat_pow_mul_fourier\n\n",
 "has_sum_one_div_nat_pow_mul_cos":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñö -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\ntheorem has_sum_one_div_nat_pow_mul_cos {k : ‚Ñï} (hk : k ‚â† 0) {x : expr‚Ñù} (hx : x ‚àà Icc (0 : expr‚Ñù) 1) :\n    has_sum (fun n : ‚Ñï => 1 / (n : expr‚Ñù) ^ (2 * k) * real.cos (2 * real.pi * n * x))\n      ((-1) ^ (k + 1) * (2 * real.pi) ^ (2 * k) / 2 / nat.factorial (2 * k) *\n        (polynomial.map (algebra_map (expr‚Ñö) (expr‚Ñù)) (polynomial.bernoulli (2 * k))).eval x) :=\n  by\n  have :\n    has_sum (fun n : ‚Ñï => 1 / (n : expr‚ÑÇ) ^ (2 * k) * (fourier n (x : exprùïå) + fourier (-n) (x : exprùïå)))\n      ((-1) ^ (k + 1) * (2 * real.pi) ^ (2 * k) / nat.factorial (2 * k) * bernoulli_fun (2 * k) x) :=\n    by\n    convert has_sum_one_div_nat_pow_mul_fourier (by linarith [nat.one_le_iff_ne_zero.mpr hk] : 2 ‚â§ 2 * k) hx\n    ¬∑ ext1 n\n      rw [pow_mul (-1 : expr‚ÑÇ), neg_one_sq, one_pow, one_mul]\n    ¬∑ rw [pow_add, pow_one]\n      conv_rhs =>\n        rw [mul_pow]\n        congr\n        congr\n        skip\n        rw [pow_mul, I_sq]\n      ring\n  convert ((has_sum_iff _ _).mp (this.div_const 2)).1\n  ¬∑ ext1 n\n    convert (of_real_re _).symm\n    rw [of_real_mul]\n    rw [‚Üê mul_div]\n    congr\n    ¬∑ rw [of_real_div, of_real_one, of_real_pow]\n      rfl\n    ¬∑ rw [of_real_cos, of_real_mul, fourier_coe_apply, fourier_coe_apply, cos, of_real_one, div_one, div_one,\n        of_real_mul, of_real_mul, of_real_bit0, of_real_one, Int.cast_neg, Int.cast_ofNat, of_real_nat_cast]\n      congr 3\n      ¬∑ ring\n      ¬∑ ring\n  ¬∑ convert (of_real_re _).symm\n    rw [of_real_mul, of_real_div, of_real_div, of_real_mul, of_real_pow, of_real_pow, of_real_neg, of_real_nat_cast,\n      of_real_mul, of_real_bit0, of_real_one]\n    ring\n#align has_sum_one_div_nat_pow_mul_cos has_sum_one_div_nat_pow_mul_cos\n\n",
 "has_sum_L_function_mod_four_eval_three":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñö -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñö -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- Explicit formula for `L(œá, 3)`, where `œá` is the unique nontrivial Dirichlet character modulo 4.\n-/\ntheorem has_sum_L_function_mod_four_eval_three :\n    has_sum (fun n : ‚Ñï => 1 / (n : expr‚Ñù) ^ 3 * real.sin (real.pi * n / 2)) (real.pi ^ 3 / 32) :=\n  by\n  convert has_sum_one_div_nat_pow_mul_sin one_ne_zero (_ : 1 / 4 ‚àà Icc (0 : expr‚Ñù) 1)\n  ¬∑ ext1 n\n    norm_num\n    left\n    congr 1\n    ring\n  ¬∑ have : (1 / 4 : expr‚Ñù) = (algebra_map (expr‚Ñö) (expr‚Ñù)) (1 / 4 : expr‚Ñö) := by norm_num\n    rw [this, mul_pow, polynomial.eval_map, polynomial.eval‚ÇÇ_at_apply, (by decide : 2 * 1 + 1 = 3),\n      polynomial.bernoulli_three_eval_one_quarter]\n    norm_num\n    field_simp\n    ring\n  ¬∑ rw [mem_Icc]\n    constructor\n    linarith\n    linarith\n#align has_sum_L_function_mod_four_eval_three has_sum_L_function_mod_four_eval_three\n\n",
 "has_deriv_at_bernoulli_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñö -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\ntheorem has_deriv_at_bernoulli_fun (k : ‚Ñï) (x : expr‚Ñù) :\n    has_deriv_at (bernoulli_fun k) (k * bernoulli_fun (k - 1) x) x :=\n  by\n  convert ((polynomial.bernoulli k).map <| algebra_map (expr‚Ñö) (expr‚Ñù)).has_deriv_at x using 1\n  simp only [bernoulli_fun, polynomial.derivative_map, polynomial.derivative_bernoulli k, polynomial.map_mul,\n    polynomial.map_nat_cast, polynomial.eval_mul, polynomial.eval_nat_cast]\n#align has_deriv_at_bernoulli_fun has_deriv_at_bernoulli_fun\n\n",
 "fourier_coeff_bernoulli_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `exprùïå -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚ÑÇ -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem fourier_coeff_bernoulli_eq {k : ‚Ñï} (hk : k ‚â† 0) (n : ‚Ñ§) :\n    fourier_coeff (coe ‚àò periodized_bernoulli k : exprùïå ‚Üí expr‚ÑÇ) n = -nat.factorial k / (2 * real.pi * I * n) ^ k :=\n  by\n  have : (coe ‚àò periodized_bernoulli k : exprùïå ‚Üí expr‚ÑÇ) = add_circle.lift_Ico 1 0 (coe ‚àò bernoulli_fun k) :=\n    by\n    ext1 x\n    rfl\n  rw [this, fourier_coeff_lift_Ico_eq]\n  simpa only [zero_add] using bernoulli_fourier_coeff_eq hk n\n#align fourier_coeff_bernoulli_eq fourier_coeff_bernoulli_eq\n\n",
 "continuous":
 "theorem periodized_bernoulli.continuous {k : ‚Ñï} (hk : k ‚â† 1) : continuous (periodized_bernoulli k) :=\n  add_circle.lift_Ico_zero_continuous (by exact_mod_cast (bernoulli_fun_endpoints_eq_of_ne_one hk).symm)\n    (polynomial.continuous _).continuous_on\n#align periodized_bernoulli.continuous periodized_bernoulli.continuous\n\n",
 "bernoulli_zero_fourier_coeff":
 "/-- The Fourier coefficients of `B‚ÇÄ(x) = 1`. -/\ntheorem bernoulli_zero_fourier_coeff {n : ‚Ñ§} (hn : n ‚â† 0) : bernoulli_fourier_coeff 0 n = 0 := by\n  simpa using bernoulli_fourier_coeff_recurrence 0 hn\n#align bernoulli_zero_fourier_coeff bernoulli_zero_fourier_coeff\n\n",
 "bernoulli_three_eval_one_quarter":
 "theorem polynomial.bernoulli_three_eval_one_quarter : (polynomial.bernoulli 3).eval (1 / 4) = 3 / 64 :=\n  by\n  simp_rw [polynomial.bernoulli, finset.sum_range_succ, polynomial.eval_add, polynomial.eval_monomial]\n  rw [finset.sum_range_zero, polynomial.eval_zero, zero_add, bernoulli_one]\n  rw [bernoulli_eq_bernoulli'_of_ne_one zero_ne_one, bernoulli'_zero,\n    bernoulli_eq_bernoulli'_of_ne_one (by decide : 2 ‚â† 1), bernoulli'_two,\n    bernoulli_eq_bernoulli'_of_ne_one (by decide : 3 ‚â† 1), bernoulli'_three]\n  norm_num\n#align polynomial.bernoulli_three_eval_one_quarter polynomial.bernoulli_three_eval_one_quarter\n\n",
 "bernoulli_fun_eval_zero":
 "/-\nCopyright (c) 2022 David Loeffler. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: David Loeffler\n-/\ntheorem bernoulli_fun_eval_zero (k : ‚Ñï) : bernoulli_fun k 0 = bernoulli k := by\n  rw [bernoulli_fun, polynomial.eval_zero_map, polynomial.bernoulli_eval_zero, eq_ratCast]\n#align bernoulli_fun_eval_zero bernoulli_fun_eval_zero\n\n",
 "bernoulli_fun_eval_one":
 "theorem bernoulli_fun_eval_one (k : ‚Ñï) : bernoulli_fun k 1 = bernoulli_fun k 0 + ite (k = 1) 1 0 :=\n  by\n  rw [bernoulli_fun, bernoulli_fun_eval_zero, polynomial.eval_one_map, polynomial.bernoulli_eval_one]\n  split_ifs\n  ¬∑ rw [h, bernoulli_one, bernoulli'_one, eq_ratCast]\n    push_cast\n    ring\n  ¬∑ rw [bernoulli_eq_bernoulli'_of_ne_one h, add_zero, eq_ratCast]\n#align bernoulli_fun_eval_one bernoulli_fun_eval_one\n\n",
 "bernoulli_fun_endpoints_eq_of_ne_one":
 "theorem bernoulli_fun_endpoints_eq_of_ne_one {k : ‚Ñï} (hk : k ‚â† 1) : bernoulli_fun k 1 = bernoulli_fun k 0 := by\n  rw [bernoulli_fun_eval_zero, bernoulli_fun, polynomial.eval_one_map, polynomial.bernoulli_eval_one,\n    bernoulli_eq_bernoulli'_of_ne_one hk, eq_ratCast]\n#align bernoulli_fun_endpoints_eq_of_ne_one bernoulli_fun_endpoints_eq_of_ne_one\n\n",
 "bernoulli_fourier_coeff_zero":
 "/-- The `0`-th Fourier coefficient of `B‚Çñ(x)`. -/\ntheorem bernoulli_fourier_coeff_zero {k : ‚Ñï} (hk : k ‚â† 0) : bernoulli_fourier_coeff k 0 = 0 := by\n  simp_rw [bernoulli_fourier_coeff, fourier_coeff_on_eq_integral, neg_zero, fourier_zero, sub_zero, div_one, one_smul,\n    interval_integral.integral_of_real, integral_bernoulli_fun_eq_zero hk, of_real_zero]\n#align bernoulli_fourier_coeff_zero bernoulli_fourier_coeff_zero\n\n",
 "bernoulli_fourier_coeff_recurrence":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\n/-- Recurrence relation (in `k`) for the `n`-th Fourier coefficient of `B‚Çñ`. -/\ntheorem bernoulli_fourier_coeff_recurrence (k : ‚Ñï) {n : ‚Ñ§} (hn : n ‚â† 0) :\n    bernoulli_fourier_coeff k n =\n      1 / (-2 * real.pi * I * n) * (ite (k = 1) 1 0 - k * bernoulli_fourier_coeff (k - 1) n) :=\n  by\n  unfold bernoulli_fourier_coeff\n  rw [fourier_coeff_on_of_has_deriv_at zero_lt_one hn (fun x hx => (has_deriv_at_bernoulli_fun k x).of_real_comp)\n      ((continuous_of_real.comp <| continuous_const.mul <| polynomial.continuous _).interval_integrable _ _)]\n  dsimp only\n  simp_rw [of_real_one, of_real_zero, sub_zero, one_mul]\n  rw [quotient_add_group.coe_zero, fourier_eval_zero, one_mul, ‚Üê of_real_sub, bernoulli_fun_eval_one, add_sub_cancel']\n  congr 2\n  ¬∑ split_ifs\n    all_goals simp only [of_real_one, of_real_zero, one_mul]\n  ¬∑ simp_rw [of_real_mul, of_real_nat_cast, fourier_coeff_on.const_mul]\n#align bernoulli_fourier_coeff_recurrence bernoulli_fourier_coeff_recurrence\n\n",
 "bernoulli_fourier_coeff_eq":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `nat.factorial -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `real.pi -/\ntheorem bernoulli_fourier_coeff_eq {k : ‚Ñï} (hk : k ‚â† 0) (n : ‚Ñ§) :\n    bernoulli_fourier_coeff k n = -nat.factorial k / (2 * real.pi * I * n) ^ k :=\n  by\n  rcases eq_or_ne n 0 with (rfl | hn)\n  ¬∑ rw [bernoulli_fourier_coeff_zero hk, Int.cast_zero, mul_zero, zero_pow' _ hk, div_zero]\n  refine' Nat.le_induction _ (fun k hk h'k => _) k (nat.one_le_iff_ne_zero.mpr hk)\n  ¬∑ rw [bernoulli_fourier_coeff_recurrence 1 hn]\n    simp only [Nat.cast_one, tsub_self, neg_mul, one_mul, eq_self_iff_true, if_true, Nat.factorial_one, pow_one, inv_I,\n      mul_neg]\n    rw [bernoulli_zero_fourier_coeff hn, sub_zero, mul_one, div_neg, neg_div]\n  ¬∑ rw [bernoulli_fourier_coeff_recurrence (k + 1) hn, nat.add_sub_cancel k 1]\n    split_ifs\n    ¬∑ exfalso\n      exact (ne_of_gt (nat.lt_succ_iff.mpr hk)) h\n    ¬∑ rw [h'k, Nat.factorial_succ, zero_sub, nat.cast_mul, pow_add, pow_one, neg_div, mul_neg, mul_neg, mul_neg,\n        neg_neg, neg_mul, neg_mul, neg_mul, div_neg]\n      field_simp [int.cast_ne_zero.mpr hn, I_ne_zero]\n      ring_nf\n#align bernoulli_fourier_coeff_eq bernoulli_fourier_coeff_eq\n\n",
 "antideriv_bernoulli_fun":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `expr‚Ñù -/\ntheorem antideriv_bernoulli_fun (k : ‚Ñï) (x : expr‚Ñù) :\n    has_deriv_at (fun x => bernoulli_fun (k + 1) x / (k + 1)) (bernoulli_fun k x) x :=\n  by\n  convert (has_deriv_at_bernoulli_fun (k + 1) x).div_const _\n  field_simp [Nat.cast_add_one_ne_zero k]\n  ring\n#align antideriv_bernoulli_fun antideriv_bernoulli_fun\n\n"}