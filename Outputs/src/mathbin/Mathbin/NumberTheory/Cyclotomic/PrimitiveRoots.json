{"zeta_spec":
 "/-\nCopyright (c) 2022 Riccardo Brasca. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Alex Best, Riccardo Brasca, Eric Rodriguez\n-/\n/-- `zeta n A B` is a primitive `n`-th root of unity. -/\n@[simp]\ntheorem zeta_spec : is_primitive_root (zeta n A B) n :=\n  Classical.choose_spec (exists_prim_root A (Set.mem_singleton n) : ∃ r : B, is_primitive_root r n)\n#align zeta_spec zeta_spec\n\n",
 "zeta_pow":
 "theorem zeta_pow : zeta n A B ^ (n : ℕ) = 1 :=\n  (zeta_spec n A B).pow_eq_one\n#align zeta_pow zeta_pow\n\n",
 "zeta_is_root":
 "theorem zeta_is_root [IsDomain B] [ne_zero ((n : ℕ) : B)] : is_root (cyclotomic n B) (zeta n A B) :=\n  by\n  convert aeval_zeta n A B\n  rw [is_root.def, aeval_def, eval₂_eq_eval_map, map_cyclotomic]\n#align zeta_is_root zeta_is_root\n\n",
 "two_pow_norm_zeta_sub_one":
 "/-- If `irreducible (cyclotomic (2 ^ k) K)` (in particular for `K = ℚ`) and `k` is at least `2`,\nthen the norm of `zeta (2 ^ k) K L - 1` is `2`. -/\ntheorem two_pow_norm_zeta_sub_one {k : ℕ} (hk : 2 ≤ k) [is_cyclotomic_extension {2 ^ k} K L]\n    (hirr : Irreducible (cyclotomic (2 ^ k) K)) : norm K (zeta (2 ^ k) K L - 1) = 2 :=\n  sub_one_norm_two (zeta_spec (2 ^ k) K L) hk hirr\n#align two_pow_norm_zeta_sub_one two_pow_norm_zeta_sub_one\n\n",
 "sub_one_norm_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ+» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ+» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ+» -/\n/-- If `irreducible (cyclotomic (2 ^ k) K)` (in particular for `K = ℚ`) and `k` is at least `2`,\nthen the norm of `ζ - 1` is `2`. -/\ntheorem sub_one_norm_two {k : ℕ} (hζ : is_primitive_root ζ (2 ^ k)) (hk : 2 ≤ k)\n    [H : is_cyclotomic_extension {2 ^ k} K L] (hirr : Irreducible (cyclotomic (2 ^ k) K)) : norm K (ζ - 1) = 2 :=\n  by\n  have : 2 < (2 ^ k : «exprℕ+») :=\n    by\n    simp only [← coe_lt_coe, PNat.coe_bit0, one_coe, pow_coe]\n    nth_rw 1 [← pow_one 2]\n    exact pow_lt_pow one_lt_two (lt_of_lt_of_le one_lt_two hk)\n  replace hirr : Irreducible (cyclotomic (2 ^ k : «exprℕ+») K) := by simp [hirr]\n  replace hζ : is_primitive_root ζ (2 ^ k : «exprℕ+») := by simp [hζ]\n  obtain ⟨k₁, hk₁⟩ := exists_eq_succ_of_ne_zero (lt_of_lt_of_le zero_lt_two hk).ne.symm\n  simpa [hk₁] using sub_one_norm_eq_eval_cyclotomic hζ this hirr\n#align sub_one_norm_two sub_one_norm_two\n\n",
 "sub_one_norm_prime_ne_two":
 "/-- If `irreducible (cyclotomic (p ^ (k + 1)) K)` (in particular for `K = ℚ`) and `p` is an odd\nprime, then the norm of `ζ - 1` is `p`. -/\ntheorem sub_one_norm_prime_ne_two {k : ℕ} (hζ : is_primitive_root ζ ↑(p ^ (k + 1))) [hpri : fact (p : ℕ).prime]\n    [is_cyclotomic_extension {p ^ (k + 1)} K L] (hirr : Irreducible (cyclotomic (↑(p ^ (k + 1)) : ℕ) K)) (h : p ≠ 2) :\n    norm K (ζ - 1) = p := by simpa using hζ.pow_sub_one_norm_prime_ne_two hirr k.zero_le h\n#align sub_one_norm_prime_ne_two sub_one_norm_prime_ne_two\n\n",
 "sub_one_norm_prime":
 "/-- If `irreducible (cyclotomic p K)` (in particular for `K = ℚ`) and `p` is an odd prime,\nthen the norm of `ζ - 1` is `p`. -/\ntheorem sub_one_norm_prime [hpri : fact (p : ℕ).prime] [hcyc : is_cyclotomic_extension {p} K L]\n    (hζ : is_primitive_root ζ p) (hirr : Irreducible (cyclotomic p K)) (h : p ≠ 2) : norm K (ζ - 1) = p :=\n  by\n  replace hirr : Irreducible (cyclotomic (↑(p ^ (0 + 1)) : ℕ) K) := by simp [hirr]\n  replace hζ : is_primitive_root ζ (↑(p ^ (0 + 1)) : ℕ) := by simp [hζ]\n  haveI : is_cyclotomic_extension {p ^ (0 + 1)} K L := by simp [hcyc]\n  simpa using sub_one_norm_prime_ne_two hζ hirr h\n#align sub_one_norm_prime sub_one_norm_prime\n\n",
 "sub_one_norm_is_prime_pow":
 "/-- If `is_prime_pow (n : ℕ)`, `n ≠ 2` and `irreducible (cyclotomic n K)` (in particular for\n`K = ℚ`), then the norm of `ζ - 1` is `(n : ℕ).min_fac`. -/\ntheorem sub_one_norm_is_prime_pow (hn : is_prime_pow (n : ℕ)) [is_cyclotomic_extension {n} K L]\n    (hirr : Irreducible (cyclotomic (n : ℕ) K)) (h : n ≠ 2) : norm K (ζ - 1) = (n : ℕ).min_fac :=\n  by\n  have :=\n    (coe_lt_coe 2 _).1\n      (lt_of_le_of_ne (succ_le_of_lt (is_prime_pow.one_lt hn)) (Function.Injective.ne PNat.coe_injective h).symm)\n  letI hprime : fact (n : ℕ).min_fac.prime := ⟨min_fac_prime (is_prime_pow.ne_one hn)⟩\n  rw [sub_one_norm_eq_eval_cyclotomic hζ this hirr]\n  nth_rw 1 [← is_prime_pow.min_fac_pow_factorization_eq hn]\n  obtain ⟨k, hk⟩ : ∃ k, (n : ℕ).factorization (n : ℕ).min_fac = k + 1 :=\n    exists_eq_succ_of_ne_zero\n      (((n : ℕ).factorization.mem_support_to_fun (n : ℕ).min_fac).1 <|\n        factor_iff_mem_factorization.2 <| (mem_factors (is_prime_pow.ne_zero hn)).2 ⟨hprime.out, min_fac_dvd _⟩)\n  simp [hk, sub_one_norm_eq_eval_cyclotomic hζ this hirr]\n#align sub_one_norm_is_prime_pow sub_one_norm_is_prime_pow\n\n",
 "sub_one_norm_eq_eval_cyclotomic":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n/-- If `irreducible (cyclotomic n K)` (in particular for `K = ℚ`), then the norm of\n`ζ - 1` is `eval 1 (cyclotomic n ℤ)`. -/\ntheorem sub_one_norm_eq_eval_cyclotomic [is_cyclotomic_extension {n} K L] (h : 2 < (n : ℕ))\n    (hirr : Irreducible (cyclotomic n K)) : norm K (ζ - 1) = ↑(eval 1 (cyclotomic n ℤ)) :=\n  by\n  haveI := is_cyclotomic_extension.ne_zero' n K L\n  let E := algebraic_closure L\n  obtain ⟨z, hz⟩ := is_alg_closed.exists_root _ (degree_cyclotomic_pos n E n.pos).ne.symm\n  apply (algebra_map K E).injective\n  letI := finite_dimensional {n} K L\n  letI := is_galois n K L\n  rw [norm_eq_prod_embeddings]\n  conv_lhs =>\n    congr\n    skip\n    ext\n    rw [← neg_sub, alg_hom.map_neg, alg_hom.map_sub, alg_hom.map_one, neg_eq_neg_one_mul]\n  rw [prod_mul_distrib, prod_const, card_univ, alg_hom.card, is_cyclotomic_extension.finrank L hirr,\n    (totient_even h).neg_one_pow, one_mul]\n  have : (finset.univ.prod fun σ : «expr →ₐ[ ] » L K E => 1 - σ ζ) = eval 1 (cyclotomic' n E) :=\n    by\n    rw [cyclotomic', eval_prod, ← @finset.prod_attach E E, ← univ_eq_attach]\n    refine' fintype.prod_equiv (hζ.embeddings_equiv_primitive_roots E hirr) _ _ fun σ => _\n    simp\n  haveI : ne_zero ((n : ℕ) : E) := ne_zero.of_no_zero_smul_divisors K _ (n : ℕ)\n  rw [this, cyclotomic', ← cyclotomic_eq_prod_X_sub_primitive_roots (is_root_cyclotomic_iff.1 hz), ← map_cyclotomic_int,\n    _root_.map_int_cast, ← Int.cast_one, eval_int_cast_map, eq_intCast, Int.cast_id]\n#align sub_one_norm_eq_eval_cyclotomic sub_one_norm_eq_eval_cyclotomic\n\n",
 "prime_ne_two_pow_norm_zeta_sub_one":
 "/-- If `irreducible (cyclotomic (p ^ (k + 1)) K)` (in particular for `K = ℚ`) and `p` is an odd\nprime, then the norm of `zeta (p ^ (k + 1)) K L - 1` is `p`. -/\ntheorem prime_ne_two_pow_norm_zeta_sub_one {k : ℕ} [hpri : fact (p : ℕ).prime]\n    [is_cyclotomic_extension {p ^ (k + 1)} K L] (hirr : Irreducible (cyclotomic (↑(p ^ (k + 1)) : ℕ) K)) (h : p ≠ 2) :\n    norm K (zeta (p ^ (k + 1)) K L - 1) = p :=\n  (zeta_spec _ K L).sub_one_norm_prime_ne_two hirr h\n#align prime_ne_two_pow_norm_zeta_sub_one prime_ne_two_pow_norm_zeta_sub_one\n\n",
 "prime_ne_two_pow_norm_zeta_pow_sub_one":
 "/-- If `irreducible (cyclotomic (p ^ (k + 1)) K)` (in particular for `K = ℚ`) and `p` is a prime,\nthen the norm of `(zeta (p ^ (k + 1)) K L) ^ (p ^ s) - 1` is `p ^ (p ^ s)`\nif `p ^ (k - s + 1) ≠ 2`. -/\ntheorem prime_ne_two_pow_norm_zeta_pow_sub_one {k : ℕ} [hpri : fact (p : ℕ).prime]\n    [is_cyclotomic_extension {p ^ (k + 1)} K L] (hirr : Irreducible (cyclotomic (↑(p ^ (k + 1)) : ℕ) K)) {s : ℕ}\n    (hs : s ≤ k) (htwo : p ^ (k - s + 1) ≠ 2) : norm K (zeta (p ^ (k + 1)) K L ^ (p : ℕ) ^ s - 1) = p ^ (p : ℕ) ^ s :=\n  (zeta_spec _ K L).pow_sub_one_norm_prime_pow_ne_two hirr hs htwo\n#align prime_ne_two_pow_norm_zeta_pow_sub_one prime_ne_two_pow_norm_zeta_pow_sub_one\n\n",
 "prime_ne_two_norm_zeta_sub_one":
 "/-- If `irreducible (cyclotomic p K)` (in particular for `K = ℚ`) and `p` is an odd prime,\nthen the norm of `zeta p K L - 1` is `p`. -/\ntheorem prime_ne_two_norm_zeta_sub_one [hpri : fact (p : ℕ).prime] [hcyc : is_cyclotomic_extension {p} K L]\n    (hirr : Irreducible (cyclotomic p K)) (h : p ≠ 2) : norm K (zeta p K L - 1) = p :=\n  (zeta_spec _ K L).sub_one_norm_prime hirr h\n#align prime_ne_two_norm_zeta_sub_one prime_ne_two_norm_zeta_sub_one\n\n",
 "power_basis_gen_mem_adjoin_zeta_sub_one":
 "theorem power_basis_gen_mem_adjoin_zeta_sub_one : (hζ.power_basis K).gen ∈ adjoin K ({ζ - 1} : set L) :=\n  by\n  rw [power_basis_gen, adjoin_singleton_eq_range_aeval, alg_hom.mem_range]\n  exact ⟨X + 1, by simp⟩\n#align power_basis_gen_mem_adjoin_zeta_sub_one power_basis_gen_mem_adjoin_zeta_sub_one\n\n",
 "pow_sub_one_norm_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ+» -/\n/-- If `irreducible (cyclotomic (2 ^ (k + 1)) K)` (in particular for `K = ℚ`), then the norm of\n`ζ ^ (2 ^ k) - 1` is `(-2) ^ (2 ^ k)`. -/\ntheorem pow_sub_one_norm_two {k : ℕ} (hζ : is_primitive_root ζ (2 ^ (k + 1)))\n    [is_cyclotomic_extension {2 ^ (k + 1)} K L] (hirr : Irreducible (cyclotomic (2 ^ (k + 1)) K)) :\n    norm K (ζ ^ 2 ^ k - 1) = (-2) ^ 2 ^ k :=\n  by\n  have := hζ.pow_of_dvd (fun h => two_ne_zero (pow_eq_zero h)) (pow_dvd_pow 2 (le_succ k))\n  rw [Nat.pow_div (le_succ k) zero_lt_two, nat.succ_sub (le_refl k), nat.sub_self, pow_one] at this\n  have H : (-1 : L) - (1 : L) = algebra_map K L (-2) :=\n    by\n    simp only [_root_.map_neg, map_bit0, _root_.map_one]\n    ring\n  replace hirr : Irreducible (cyclotomic (2 ^ (k + 1) : «exprℕ+») K) := by simp [hirr]\n  rw [this.eq_neg_one_of_two_right, H, algebra.norm_algebra_map, is_cyclotomic_extension.finrank L hirr, pow_coe,\n    PNat.coe_bit0, one_coe, totient_prime_pow Nat.prime_two (zero_lt_succ k), succ_sub_succ_eq_sub, tsub_zero, mul_one]\n#align pow_sub_one_norm_two pow_sub_one_norm_two\n\n",
 "pow_sub_one_norm_prime_pow_of_one_le":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«exprℕ+» -/\n/-- If `irreducible (cyclotomic (p ^ (k + 1)) K)` (in particular for `K = ℚ`) and `p` is a prime,\nthen the norm of `ζ ^ (p ^ s) - 1` is `p ^ (p ^ s)` if `1 ≤ k`. -/\ntheorem pow_sub_one_norm_prime_pow_of_one_le {k s : ℕ} (hζ : is_primitive_root ζ ↑(p ^ (k + 1)))\n    [hpri : fact (p : ℕ).prime] [hcycl : is_cyclotomic_extension {p ^ (k + 1)} K L]\n    (hirr : Irreducible (cyclotomic (↑(p ^ (k + 1)) : ℕ) K)) (hs : s ≤ k) (hk : 1 ≤ k) :\n    norm K (ζ ^ (p : ℕ) ^ s - 1) = p ^ (p : ℕ) ^ s :=\n  by\n  by_cases htwo : p ^ (k - s + 1) = 2\n  · have hp : p = 2 :=\n      by\n      rw [← PNat.coe_inj, PNat.coe_bit0, PNat.one_coe, PNat.pow_coe, ← pow_one 2] at htwo\n      replace htwo := eq_of_prime_pow_eq (prime_iff.1 hpri.out) (prime_iff.1 Nat.prime_two) (succ_pos _) htwo\n      rwa [show 2 = ((2 : «exprℕ+») : ℕ) by simp, PNat.coe_inj] at htwo\n    replace hs : s = k\n    · rw [hp, ← PNat.coe_inj, PNat.pow_coe, PNat.coe_bit0, PNat.one_coe] at htwo\n      nth_rw 2 [← pow_one 2] at htwo\n      replace htwo := Nat.pow_right_injective rfl.le htwo\n      rw [add_left_eq_self, nat.sub_eq_zero_iff_le] at htwo\n      refine' le_antisymm hs htwo\n    simp only [hs, hp, PNat.coe_bit0, one_coe, coe_coe, cast_bit0, cast_one, pow_coe] at hζ hirr hcycl⊢\n    haveI := hcycl\n    obtain ⟨k₁, hk₁⟩ := nat.exists_eq_succ_of_ne_zero (one_le_iff_ne_zero.1 hk)\n    rw [hζ.pow_sub_one_norm_two hirr]\n    rw [hk₁, pow_succ, pow_mul, neg_eq_neg_one_mul, mul_pow, neg_one_sq, one_mul, ← pow_mul, ← pow_succ]\n  · exact hζ.pow_sub_one_norm_prime_pow_ne_two hirr hs htwo\n#align pow_sub_one_norm_prime_pow_of_one_le pow_sub_one_norm_prime_pow_of_one_le\n\n",
 "pow_sub_one_norm_prime_pow_ne_two":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⟮ ,⟯» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯» -/\n/-- If `irreducible (cyclotomic (p ^ (k + 1)) K)` (in particular for `K = ℚ`) and `p` is a prime,\nthen the norm of `ζ ^ (p ^ s) - 1` is `p ^ (p ^ s)` if `p ^ (k - s + 1) ≠ 2`. See the next lemmas\nfor similar results. -/\ntheorem pow_sub_one_norm_prime_pow_ne_two {k s : ℕ} (hζ : is_primitive_root ζ ↑(p ^ (k + 1)))\n    [hpri : fact (p : ℕ).prime] [is_cyclotomic_extension {p ^ (k + 1)} K L]\n    (hirr : Irreducible (cyclotomic (↑(p ^ (k + 1)) : ℕ) K)) (hs : s ≤ k) (htwo : p ^ (k - s + 1) ≠ 2) :\n    norm K (ζ ^ (p : ℕ) ^ s - 1) = p ^ (p : ℕ) ^ s :=\n  by\n  have hirr₁ : Irreducible (cyclotomic (p ^ (k - s + 1)) K) :=\n    cyclotomic_irreducible_pow_of_irreducible_pow hpri.1 (by linarith) hirr\n  rw [← PNat.pow_coe] at hirr₁\n  let η := ζ ^ (p : ℕ) ^ s - 1\n  let η₁ : «expr ⟮ ,⟯» K \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯»\" :=\n    intermediate_field.adjoin_simple.gen K η\n  have hη : is_primitive_root (η + 1) (p ^ (k + 1 - s)) :=\n    by\n    rw [sub_add_cancel]\n    refine' is_primitive_root.pow (p ^ (k + 1)).pos hζ _\n    rw [PNat.pow_coe, ← pow_add, add_comm s, nat.sub_add_cancel (le_trans hs (nat.le_succ k))]\n  have :\n    is_cyclotomic_extension {p ^ (k - s + 1)} K\n      («expr ⟮ ,⟯» K \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯»\") :=\n    by\n    suffices\n      is_cyclotomic_extension {p ^ (k - s + 1)} K\n        («expr ⟮ ,⟯» K\n            \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯»\").to_subalgebra\n      by\n      have H :\n        («expr ⟮ ,⟯» K\n              \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯»\").to_subalgebra =\n          («expr ⟮ ,⟯» K\n              \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯»\").to_subalgebra :=\n        by\n        simp only [intermediate_field.adjoin_simple_to_subalgebra_of_integral\n            (is_cyclotomic_extension.integral {p ^ (k + 1)} K L _)]\n        refine' subalgebra.ext fun x => ⟨fun hx => adjoin_le _ hx, fun hx => adjoin_le _ hx⟩\n        · simp only [Set.singleton_subset_iff, SetLike.mem_coe]\n          exact subalgebra.add_mem _ (subset_adjoin (mem_singleton η)) (subalgebra.one_mem _)\n        · simp only [Set.singleton_subset_iff, SetLike.mem_coe]\n          nth_rw 1 [← add_sub_cancel η 1]\n          refine' subalgebra.sub_mem _ (subset_adjoin (mem_singleton _)) (subalgebra.one_mem _)\n      rw [H] at this\n      exact this\n    rw [intermediate_field.adjoin_simple_to_subalgebra_of_integral\n        (is_cyclotomic_extension.integral {p ^ (k + 1)} K L _)]\n    have hη' : is_primitive_root (η + 1) ↑(p ^ (k + 1 - s)) := by simpa using hη\n    convert hη'.adjoin_is_cyclotomic_extension K\n    rw [nat.sub_add_comm hs]\n  replace hη : is_primitive_root (η₁ + 1) ↑(p ^ (k - s + 1))\n  · apply coe_submonoid_class_iff.1\n    convert hη\n    rw [nat.sub_add_comm hs, pow_coe]\n  rw [norm_eq_norm_adjoin K]\n  · have H := hη.sub_one_norm_is_prime_pow _ hirr₁ htwo\n    swap\n    · rw [PNat.pow_coe]\n      exact hpri.1.is_prime_pow.pow (nat.succ_ne_zero _)\n    rw [add_sub_cancel] at H\n    rw [H, coe_coe]\n    congr\n    · rw [PNat.pow_coe, Nat.pow_minFac, hpri.1.min_fac_eq]\n      exact nat.succ_ne_zero _\n    have :=\n      finite_dimensional.finrank_mul_finrank K\n        («expr ⟮ ,⟯» K \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯»\") L\n    rw [is_cyclotomic_extension.finrank L hirr,\n      is_cyclotomic_extension.finrank\n        («expr ⟮ ,⟯» K \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `«expr ⟮ ,⟯»\") hirr₁,\n      PNat.pow_coe, PNat.pow_coe, nat.totient_prime_pow hpri.out (k - s).succ_pos,\n      nat.totient_prime_pow hpri.out k.succ_pos, mul_comm _ (↑p - 1), mul_assoc, mul_comm (↑p ^ (k.succ - 1))] at this\n    replace this := mul_left_cancel₀ (tsub_pos_iff_lt.2 hpri.out.one_lt).ne' this\n    have Hex : k.succ - 1 = (k - s).succ - 1 + s :=\n      by\n      simp only [nat.succ_sub_succ_eq_sub, tsub_zero]\n      exact (nat.sub_add_cancel hs).symm\n    rw [Hex, pow_add] at this\n    exact mul_left_cancel₀ (pow_ne_zero _ hpri.out.ne_zero) this\n  all_goals infer_instance\n#align pow_sub_one_norm_prime_pow_ne_two pow_sub_one_norm_prime_pow_ne_two\n\n",
 "pow_sub_one_norm_prime_ne_two":
 "/-- If `irreducible (cyclotomic (p ^ (k + 1)) K)` (in particular for `K = ℚ`) and `p` is a prime,\nthen the norm of `ζ ^ (p ^ s) - 1` is `p ^ (p ^ s)` if `p ≠ 2`. -/\ntheorem pow_sub_one_norm_prime_ne_two {k : ℕ} (hζ : is_primitive_root ζ ↑(p ^ (k + 1))) [hpri : fact (p : ℕ).prime]\n    [is_cyclotomic_extension {p ^ (k + 1)} K L] (hirr : Irreducible (cyclotomic (↑(p ^ (k + 1)) : ℕ) K)) {s : ℕ}\n    (hs : s ≤ k) (hodd : p ≠ 2) : norm K (ζ ^ (p : ℕ) ^ s - 1) = p ^ (p : ℕ) ^ s :=\n  by\n  refine' hζ.pow_sub_one_norm_prime_pow_ne_two hirr hs fun h => _\n  rw [← PNat.coe_inj, PNat.coe_bit0, PNat.one_coe, PNat.pow_coe, ← pow_one 2] at h\n  replace h := eq_of_prime_pow_eq (prime_iff.1 hpri.out) (prime_iff.1 Nat.prime_two) (k - s).succ_pos h\n  rw [← PNat.one_coe, ← PNat.coe_bit0, PNat.coe_inj] at h\n  exact hodd h\n#align pow_sub_one_norm_prime_ne_two pow_sub_one_norm_prime_ne_two\n\n",
 "norm_zeta_eq_one":
 "/-- If `irreducible (cyclotomic n K)` (in particular for `K = ℚ`), the norm of `zeta n K L` is `1`\nif `n` is odd. -/\ntheorem norm_zeta_eq_one [is_cyclotomic_extension {n} K L] (hn : n ≠ 2) (hirr : Irreducible (cyclotomic n K)) :\n    norm K (zeta n K L) = 1 :=\n  (zeta_spec n K L).norm_eq_one hn hirr\n#align norm_zeta_eq_one norm_zeta_eq_one\n\n",
 "norm_of_cyclotomic_irreducible":
 "theorem norm_of_cyclotomic_irreducible [IsDomain L] [is_cyclotomic_extension {n} K L]\n    (hirr : Irreducible (cyclotomic n K)) : norm K ζ = ite (n = 2) (-1) 1 :=\n  by\n  split_ifs with hn\n  · subst hn\n    convert norm_eq_neg_one_pow hζ\n    erw [is_cyclotomic_extension.finrank _ hirr, totient_two, pow_one]\n    all_goals infer_instance\n  · exact hζ.norm_eq_one hn hirr\n#align norm_of_cyclotomic_irreducible norm_of_cyclotomic_irreducible\n\n",
 "norm_eq_one_of_linearly_ordered":
 "/-- If `K` is linearly ordered, the norm of a primitive root is `1` if `n` is odd. -/\ntheorem norm_eq_one_of_linearly_ordered {K : Type _} [LinearOrderedField K] [algebra K L] (hodd : Odd (n : ℕ)) :\n    norm K ζ = 1 := by\n  have hz := congr_arg (norm K) ((is_primitive_root.iff_def _ n).1 hζ).1\n  rw [← (algebra_map K L).map_one, algebra.norm_algebra_map, one_pow, map_pow, ← one_pow ↑n] at hz\n  exact StrictMono.injective hodd.strict_mono_pow hz\n#align norm_eq_one_of_linearly_ordered norm_eq_one_of_linearly_ordered\n\n",
 "norm_eq_one":
 "/-- If `irreducible (cyclotomic n K)` (in particular for `K = ℚ`), the norm of a primitive root is\n`1` if `n ≠ 2`. -/\ntheorem norm_eq_one [IsDomain L] [is_cyclotomic_extension {n} K L] (hn : n ≠ 2) (hirr : Irreducible (cyclotomic n K)) :\n    norm K ζ = 1 := by\n  haveI := is_cyclotomic_extension.ne_zero' n K L\n  by_cases h1 : n = 1\n  · rw [h1, one_coe, one_right_iff] at hζ\n    rw [hζ, show 1 = algebra_map K L 1 by simp, algebra.norm_algebra_map, one_pow]\n  · replace h1 : 2 ≤ n\n    · by_contra' h\n      exact h1 (PNat.eq_one_of_lt_two h)\n    rw [← hζ.power_basis_gen K, power_basis.norm_gen_eq_coeff_zero_minpoly, hζ.power_basis_gen K, ←\n      hζ.minpoly_eq_cyclotomic_of_irreducible hirr, cyclotomic_coeff_zero _ h1, mul_one, hζ.power_basis_dim K, ←\n      hζ.minpoly_eq_cyclotomic_of_irreducible hirr, nat_degree_cyclotomic]\n    exact (totient_even <| h1.lt_of_ne hn.symm).neg_one_pow\n#align norm_eq_one norm_eq_one\n\n",
 "norm_eq_neg_one_pow":
 "/-- This mathematically trivial result is complementary to `norm_eq_one` below. -/\ntheorem norm_eq_neg_one_pow (hζ : is_primitive_root ζ 2) [IsDomain L] : norm K ζ = (-1) ^ finrank K L := by\n  rw [hζ.eq_neg_one_of_two_right, show -1 = algebra_map K L (-1) by simp, algebra.norm_algebra_map]\n#align norm_eq_neg_one_pow norm_eq_neg_one_pow\n\n",
 "minpoly_sub_one_eq_cyclotomic_comp":
 "theorem minpoly_sub_one_eq_cyclotomic_comp [algebra K A] [IsDomain A] {ζ : A} [is_cyclotomic_extension {n} K A]\n    (hζ : is_primitive_root ζ n) (h : Irreducible (polynomial.cyclotomic n K)) :\n    minpoly K (ζ - 1) = (cyclotomic n K).comp (X + 1) :=\n  by\n  haveI := is_cyclotomic_extension.ne_zero' n K A\n  rw [show ζ - 1 = ζ + algebra_map K A (-1) by simp [sub_eq_add_neg],\n    minpoly.add_algebra_map (is_cyclotomic_extension.integral {n} K A ζ), hζ.minpoly_eq_cyclotomic_of_irreducible h]\n  simp\n#align minpoly_sub_one_eq_cyclotomic_comp minpoly_sub_one_eq_cyclotomic_comp\n\n",
 "is_prime_pow_norm_zeta_sub_one":
 "/-- If `is_prime_pow (n : ℕ)`, `n ≠ 2` and `irreducible (cyclotomic n K)` (in particular for\n`K = ℚ`), then the norm of `zeta n K L - 1` is `(n : ℕ).min_fac`. -/\ntheorem is_prime_pow_norm_zeta_sub_one (hn : is_prime_pow (n : ℕ)) [is_cyclotomic_extension {n} K L]\n    (hirr : Irreducible (cyclotomic (n : ℕ) K)) (h : n ≠ 2) : norm K (zeta n K L - 1) = (n : ℕ).min_fac :=\n  (zeta_spec n K L).sub_one_norm_is_prime_pow hn hirr h\n#align is_prime_pow_norm_zeta_sub_one is_prime_pow_norm_zeta_sub_one\n\n",
 "finrank":
 "/-- If `irreducible (cyclotomic n K)` (in particular for `K = ℚ`), then the `finrank` of a\ncyclotomic extension is `n.totient`. -/\ntheorem finrank (hirr : Irreducible (cyclotomic n K)) : finrank K L = (n : ℕ).totient :=\n  by\n  haveI := is_cyclotomic_extension.ne_zero' n K L\n  rw [((zeta_spec n K L).power_basis K).finrank, is_primitive_root.power_basis_dim, ←\n    (zeta_spec n K L).minpoly_eq_cyclotomic_of_irreducible hirr, nat_degree_cyclotomic]\n#align finrank finrank\n\n",
 "embeddings_equiv_primitive_roots_apply_coe":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →ₐ[ ] » -/\n-- We are not using @[simps] to avoid a timeout.\n@[simp]\ntheorem embeddings_equiv_primitive_roots_apply_coe (C : Type _) [CommRing C] [IsDomain C] [algebra K C]\n    (hirr : Irreducible (cyclotomic n K)) (φ : «expr →ₐ[ ] » L K C) :\n    (hζ.embeddings_equiv_primitive_roots C hirr φ : C) = φ ζ :=\n  rfl\n#align embeddings_equiv_primitive_roots_apply_coe embeddings_equiv_primitive_roots_apply_coe\n\n",
 "aeval_zeta":
 "theorem aeval_zeta [IsDomain B] [ne_zero ((n : ℕ) : B)] : aeval (zeta n A B) (cyclotomic n A) = 0 :=\n  by\n  rw [aeval_def, ← eval_map, ← is_root.def, map_cyclotomic, is_root_cyclotomic_iff]\n  exact zeta_spec n A B\n#align aeval_zeta aeval_zeta\n\n"}