{"zero_apply":
 "@[simp]\ntheorem zero_apply (x) : (0 : poly α) x = 0 :=\n  rfl\n#align zero_apply zero_apply\n\n",
 "xn_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector.list -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\ntheorem xn_dioph : dioph_pfun fun v : vector3 ℕ 2 => ⟨1 < v (fin2.of_nat' 0), fun h => xn h (v (fin2.of_nat' 1))⟩ :=\n  have :\n    dioph fun v : vector3 ℕ 3 =>\n      ∃ y,\n        ∃ h : 1 < v (fin2.of_nat' 1), xn h (v (fin2.of_nat' 2)) = v (fin2.of_nat' 0) ∧ yn h (v (fin2.of_nat' 2)) = y :=\n    let D_pell :=\n      pell_dioph.reindex_dioph (fin2 4)\n        (vector.list \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list\")\n    (dioph.vec_ex1_dioph) 3 D_pell\n  (dioph_pfun_vec _).2 <| dioph.ext this fun v => ⟨fun ⟨y, h, xe, ye⟩ => ⟨h, xe⟩, fun ⟨h, xe⟩ => ⟨_, h, xe, rfl⟩⟩\n#align xn_dioph xn_dioph\n\n",
 "vec_ex1_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\ntheorem vec_ex1_dioph (n) {S : set (vector3 ℕ (succ n))} (d : dioph S) :\n    dioph { v : fin2 n → ℕ | ∃ x, sym.cons' x v ∈ S } :=\n  ext (ex1_dioph <| reindex_dioph _ (sym.cons' none some) d) fun v =>\n    exists_congr fun x => by\n      dsimp\n      rw [show Option.elim' x v ∘ cons none some = sym.cons' x v from funext fun s => by cases' s with a b <;> rfl]\n#align vec_ex1_dioph vec_ex1_dioph\n\n",
 "union":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\ntheorem union : ∀ (d : dioph S) (d' : dioph S'), dioph (S ∪ S')\n  | ⟨β, p, pe⟩, ⟨γ, q, qe⟩ =>\n    ⟨Sum β γ, p.map («expr ⊗ » inl (inr ∘ inl)) * q.map («expr ⊗ » inl (inr ∘ inr)), fun v =>\n      by\n      refine'\n        iff.trans (or_congr ((pe v).trans _) ((qe v).trans _))\n          (exists_or_distrib.symm.trans\n            (exists_congr fun t =>\n              (@mul_eq_zero _ _ _ (p («expr ⊗ » v t ∘ «expr ⊗ » inl (inr ∘ inl)))\n                  (q («expr ⊗ » v t ∘ «expr ⊗ » inl (inr ∘ inr)))).symm))\n      exact inject_dummies_lem _ («expr ⊗ » some fun _ => none) (fun x => rfl) _ _\n      exact inject_dummies_lem _ («expr ⊗ » (fun _ => none) some) (fun x => rfl) _ _⟩\n#align union union\n\n",
 "sumsq_nonneg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\ntheorem sumsq_nonneg (x : α → ℕ) : ∀ l, 0 ≤ sumsq l x\n  | [] => le_refl 0\n  | sym.cons' p ps => by rw [sumsq] <;> simp [-add_comm] <;> exact add_nonneg (mul_self_nonneg _) (sumsq_nonneg ps)\n#align sumsq_nonneg sumsq_nonneg\n\n",
 "sumsq_eq_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\ntheorem sumsq_eq_zero (x) : ∀ l, sumsq l x = 0 ↔ l.all₂ fun a : poly α => a x = 0\n  | [] => eq_self_iff_true _\n  | sym.cons' p ps => by\n    rw [List.all₂_cons, ← sumsq_eq_zero ps] <;> rw [sumsq] <;> simp [-add_comm] <;>\n      exact\n        ⟨fun h : p x * p x + sumsq ps x = 0 =>\n          have : p x = 0 :=\n            eq_zero_of_mul_self_eq_zero <|\n              le_antisymm\n                (by rw [← h] <;> have t := add_le_add_left (sumsq_nonneg x ps) (p x * p x) <;> rwa [add_zero] at t)\n                (mul_self_nonneg _)\n          ⟨this, by simp [this] at h <;> exact h⟩,\n          fun ⟨h1, h2⟩ => by rw [h1, h2] <;> rfl⟩\n#align sumsq_eq_zero sumsq_eq_zero\n\n",
 "sub_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.union -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `le_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\ntheorem sub_dioph : dioph_fn fun v => f v - g v :=\n  dioph_fn_comp2 df dg <|\n    (dioph_fn_vec _).2 <|\n      ext\n          (dioph.union (eq_dioph (proj_dioph_of_nat 1) (add_dioph (proj_dioph_of_nat 0) (proj_dioph_of_nat 2)))\n            (dioph.inter (le_dioph (proj_dioph_of_nat 1) (proj_dioph_of_nat 2))\n              (eq_dioph (proj_dioph_of_nat 0) (const_dioph 0)))) <|\n        (vector_all_iff_forall _).1 fun x y z =>\n          show y = x + z ∨ y ≤ z ∧ x = 0 ↔ y - z = x from\n            ⟨fun o => by\n              rcases o with (ae | ⟨yz, x0⟩)\n              · rw [ae, add_tsub_cancel_right]\n              · rw [x0, tsub_eq_zero_iff_le.mpr yz], by\n              rintro rfl\n              cases' le_total y z with yz zy\n              · exact or.inr ⟨yz, tsub_eq_zero_iff_le.mpr yz⟩\n              · exact or.inl (tsub_add_cancel_of_le zy).symm⟩\n#align sub_dioph sub_dioph\n\n",
 "sub_apply":
 "@[simp]\ntheorem sub_apply (f g : poly α) (x : α → ℕ) : (f - g) x = f x - g x :=\n  rfl\n#align sub_apply sub_apply\n\n",
 "reindex_dioph_fn":
 "theorem reindex_dioph_fn {f : (α → ℕ) → ℕ} (g : α → β) (d : dioph_fn f) : dioph_fn fun v => f (v ∘ g) := by\n  convert reindex_dioph (option β) (option.map g) d\n#align reindex_dioph_fn reindex_dioph_fn\n\n",
 "reindex_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\ntheorem reindex_dioph (f : α → β) : ∀ d : dioph S, dioph { v | v ∘ f ∈ S }\n  | ⟨γ, p, pe⟩ =>\n    ⟨γ, p.map («expr ⊗ » (inl ∘ f) inr), fun v =>\n      (pe _).trans <|\n        exists_congr fun t =>\n          suffices «expr ⊗ » (v ∘ f) t = «expr ⊗ » v t ∘ «expr ⊗ » (inl ∘ f) inr by simp [this]\n          funext fun s => by cases' s with a b <;> rfl⟩\n#align reindex_dioph reindex_dioph\n\n",
 "proj_dioph_of_nat":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\ntheorem proj_dioph_of_nat {n : ℕ} (m : ℕ) [is_lt m n] : dioph_fn fun v : vector3 ℕ n => v (fin2.of_nat' m) :=\n  proj_dioph (fin2.of_nat' m)\n#align proj_dioph_of_nat proj_dioph_of_nat\n\n",
 "proj_dioph":
 "theorem proj_dioph (i : α) : dioph_fn fun v => v i :=\n  abs_poly_dioph (poly.proj i)\n#align proj_dioph proj_dioph\n\n",
 "proj_apply":
 "@[simp]\ntheorem proj_apply (i : α) (x) : proj i x = x i :=\n  rfl\n#align proj_apply proj_apply\n\n",
 "pow_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [MOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.union -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.union -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `modeq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sub_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `le_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `le_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sub_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sub_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector.list -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list -/\n/-- A version of **Matiyasevic's theorem** -/\ntheorem pow_dioph : dioph_fn fun v => f v ^ g v :=\n  have :\n    dioph\n      { v : vector3 ℕ 3 |\n        v (fin2.of_nat' 2) = 0 ∧ v (fin2.of_nat' 0) = 1 ∨\n          0 < v (fin2.of_nat' 2) ∧\n            (v (fin2.of_nat' 1) = 0 ∧ v (fin2.of_nat' 0) = 0 ∨\n              0 < v (fin2.of_nat' 1) ∧\n                ∃ w a t z x y : ℕ,\n                  (∃ a1 : 1 < a, xn a1 (v (fin2.of_nat' 2)) = x ∧ yn a1 (v (fin2.of_nat' 2)) = y) ∧\n                    «expr ≡ [MOD ]» x (y * (a - v (fin2.of_nat' 1)) + v (fin2.of_nat' 0)) t ∧\n                      2 * a * v (fin2.of_nat' 1) = t + (v (fin2.of_nat' 1) * v (fin2.of_nat' 1) + 1) ∧\n                        v (fin2.of_nat' 0) < t ∧\n                          v (fin2.of_nat' 1) ≤ w ∧\n                            v (fin2.of_nat' 2) ≤ w ∧ a * a - ((w + 1) * (w + 1) - 1) * (w * z) * (w * z) = 1) } :=\n    let D_pell :=\n      pell_dioph.reindex_dioph (fin2 9)\n        (vector.list \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list\")\n    dioph.union\n      (dioph.inter (eq_dioph (proj_dioph_of_nat 2) (const_dioph 0)) (eq_dioph (proj_dioph_of_nat 0) (const_dioph 1)))\n      (dioph.inter (lt_dioph (const_dioph 0) (proj_dioph_of_nat 2))\n        (dioph.union\n          (dioph.inter (eq_dioph (proj_dioph_of_nat 1) (const_dioph 0))\n            (eq_dioph (proj_dioph_of_nat 0) (const_dioph 0)))\n          (dioph.inter (lt_dioph (const_dioph 0) (proj_dioph_of_nat 1))\n            ((dioph.vec_ex1_dioph) 3 <|\n              (dioph.vec_ex1_dioph) 4 <|\n                (dioph.vec_ex1_dioph) 5 <|\n                  (dioph.vec_ex1_dioph) 6 <|\n                    (dioph.vec_ex1_dioph) 7 <|\n                      (dioph.vec_ex1_dioph) 8 <|\n                        dioph.inter D_pell\n                          (dioph.inter\n                            ((modeq_dioph) (proj_dioph_of_nat 1)\n                              (add_dioph\n                                (mul_dioph (proj_dioph_of_nat 0)\n                                  (sub_dioph (proj_dioph_of_nat 4) (proj_dioph_of_nat 7)))\n                                (proj_dioph_of_nat 6))\n                              (proj_dioph_of_nat 3))\n                            (dioph.inter\n                              (eq_dioph\n                                (mul_dioph (mul_dioph (const_dioph 2) (proj_dioph_of_nat 4)) (proj_dioph_of_nat 7))\n                                (add_dioph (proj_dioph_of_nat 3)\n                                  (add_dioph (mul_dioph (proj_dioph_of_nat 7) (proj_dioph_of_nat 7)) (const_dioph 1))))\n                              (dioph.inter (lt_dioph (proj_dioph_of_nat 6) (proj_dioph_of_nat 3))\n                                (dioph.inter (le_dioph (proj_dioph_of_nat 7) (proj_dioph_of_nat 5))\n                                  (dioph.inter (le_dioph (proj_dioph_of_nat 8) (proj_dioph_of_nat 5))\n                                    (eq_dioph\n                                      (sub_dioph (mul_dioph (proj_dioph_of_nat 4) (proj_dioph_of_nat 4))\n                                        (mul_dioph\n                                          (mul_dioph\n                                            (sub_dioph\n                                              (mul_dioph (add_dioph (proj_dioph_of_nat 5) (const_dioph 1))\n                                                (add_dioph (proj_dioph_of_nat 5) (const_dioph 1)))\n                                              (const_dioph 1))\n                                            (mul_dioph (proj_dioph_of_nat 5) (proj_dioph_of_nat 2)))\n                                          (mul_dioph (proj_dioph_of_nat 5) (proj_dioph_of_nat 2))))\n                                      (const_dioph 1)))))))))))\n  dioph_fn_comp2 df dg <|\n    (dioph_fn_vec _).2 <|\n      dioph.ext this fun v =>\n        iff.symm <|\n          eq_pow_of_pell.trans <|\n            or_congr iff.rfl <|\n              and_congr iff.rfl <|\n                or_congr iff.rfl <|\n                  and_congr iff.rfl <|\n                    ⟨fun ⟨w, a, t, z, a1, h⟩ => ⟨w, a, t, z, _, _, ⟨a1, rfl, rfl⟩, h⟩,\n                      fun ⟨w, a, t, z, _, _, ⟨a1, rfl, rfl⟩, h⟩ => ⟨w, a, t, z, a1, h⟩⟩\n#align pow_dioph pow_dioph\n\n",
 "pell_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [MOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [MOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [MOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [MOD ]» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `le_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.union -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sub_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sub_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sub_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sub_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sub_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sub_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `modeq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `modeq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dvd_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `modeq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `modeq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\ntheorem pell_dioph :\n    dioph fun v : vector3 ℕ 4 =>\n      ∃ h : 1 < v (fin2.of_nat' 0),\n        xn h (v (fin2.of_nat' 1)) = v (fin2.of_nat' 2) ∧ yn h (v (fin2.of_nat' 1)) = v (fin2.of_nat' 3) :=\n  have :\n    dioph\n      { v : vector3 ℕ 4 |\n        1 < v (fin2.of_nat' 0) ∧\n          v (fin2.of_nat' 1) ≤ v (fin2.of_nat' 3) ∧\n            (v (fin2.of_nat' 2) = 1 ∧ v (fin2.of_nat' 3) = 0 ∨\n              ∃ u w s t b : ℕ,\n                v (fin2.of_nat' 2) * v (fin2.of_nat' 2) -\n                      (v (fin2.of_nat' 0) * v (fin2.of_nat' 0) - 1) * v (fin2.of_nat' 3) * v (fin2.of_nat' 3) =\n                    1 ∧\n                  u * u - (v (fin2.of_nat' 0) * v (fin2.of_nat' 0) - 1) * w * w = 1 ∧\n                    s * s - (b * b - 1) * t * t = 1 ∧\n                      1 < b ∧\n                        «expr ≡ [MOD ]» b 1 (4 * v (fin2.of_nat' 3)) ∧\n                          «expr ≡ [MOD ]» b (v (fin2.of_nat' 0)) u ∧\n                            0 < w ∧\n                              v (fin2.of_nat' 3) * v (fin2.of_nat' 3) ∣ w ∧\n                                «expr ≡ [MOD ]» s (v (fin2.of_nat' 2)) u ∧\n                                  «expr ≡ [MOD ]» t (v (fin2.of_nat' 1)) (4 * v (fin2.of_nat' 3))) } :=\n    dioph.inter (lt_dioph (const_dioph 1) (proj_dioph_of_nat 0))\n      (dioph.inter (le_dioph (proj_dioph_of_nat 1) (proj_dioph_of_nat 3))\n        (dioph.union\n          (dioph.inter (eq_dioph (proj_dioph_of_nat 2) (const_dioph 1))\n            (eq_dioph (proj_dioph_of_nat 3) (const_dioph 0)))\n          ((dioph.vec_ex1_dioph) 4 <|\n            (dioph.vec_ex1_dioph) 5 <|\n              (dioph.vec_ex1_dioph) 6 <|\n                (dioph.vec_ex1_dioph) 7 <|\n                  (dioph.vec_ex1_dioph) 8 <|\n                    dioph.inter\n                      (eq_dioph\n                        (sub_dioph (mul_dioph (proj_dioph_of_nat 7) (proj_dioph_of_nat 7))\n                          (mul_dioph\n                            (mul_dioph\n                              (sub_dioph (mul_dioph (proj_dioph_of_nat 5) (proj_dioph_of_nat 5)) (const_dioph 1))\n                              (proj_dioph_of_nat 8))\n                            (proj_dioph_of_nat 8)))\n                        (const_dioph 1))\n                      (dioph.inter\n                        (eq_dioph\n                          (sub_dioph (mul_dioph (proj_dioph_of_nat 4) (proj_dioph_of_nat 4))\n                            (mul_dioph\n                              (mul_dioph\n                                (sub_dioph (mul_dioph (proj_dioph_of_nat 5) (proj_dioph_of_nat 5)) (const_dioph 1))\n                                (proj_dioph_of_nat 3))\n                              (proj_dioph_of_nat 3)))\n                          (const_dioph 1))\n                        (dioph.inter\n                          (eq_dioph\n                            (sub_dioph (mul_dioph (proj_dioph_of_nat 2) (proj_dioph_of_nat 2))\n                              (mul_dioph\n                                (mul_dioph\n                                  (sub_dioph (mul_dioph (proj_dioph_of_nat 0) (proj_dioph_of_nat 0)) (const_dioph 1))\n                                  (proj_dioph_of_nat 1))\n                                (proj_dioph_of_nat 1)))\n                            (const_dioph 1))\n                          (dioph.inter (lt_dioph (const_dioph 1) (proj_dioph_of_nat 0))\n                            (dioph.inter\n                              ((modeq_dioph) (proj_dioph_of_nat 0) (const_dioph 1)\n                                (mul_dioph (const_dioph 4) (proj_dioph_of_nat 8)))\n                              (dioph.inter\n                                ((modeq_dioph) (proj_dioph_of_nat 0) (proj_dioph_of_nat 5) (proj_dioph_of_nat 4))\n                                (dioph.inter (lt_dioph (const_dioph 0) (proj_dioph_of_nat 3))\n                                  (dioph.inter\n                                    (dvd_dioph (mul_dioph (proj_dioph_of_nat 8) (proj_dioph_of_nat 8))\n                                      (proj_dioph_of_nat 3))\n                                    (dioph.inter\n                                      ((modeq_dioph) (proj_dioph_of_nat 2) (proj_dioph_of_nat 7) (proj_dioph_of_nat 4))\n                                      ((modeq_dioph) (proj_dioph_of_nat 1) (proj_dioph_of_nat 6)\n                                        (mul_dioph (const_dioph 4) (proj_dioph_of_nat 8))))))))))))))\n  dioph.ext this fun v => matiyasevic.symm\n#align pell_dioph pell_dioph\n\n",
 "one_apply":
 "@[simp]\ntheorem one_apply (x) : (1 : poly α) x = 1 :=\n  rfl\n#align one_apply one_apply\n\n",
 "of_no_dummies":
 "theorem of_no_dummies (S : set (α → ℕ)) (p : poly α) (h : ∀ v, S v ↔ p v = 0) : dioph S :=\n  ⟨PEmpty, p.map inl, fun v => (h v).trans ⟨fun h => ⟨pempty.rec _, h⟩, fun ⟨t, ht⟩ => ht⟩⟩\n#align of_no_dummies of_no_dummies\n\n",
 "neg_apply":
 "@[simp]\ntheorem neg_apply (f : poly α) (x) : (-f) x = -f x :=\n  rfl\n#align neg_apply neg_apply\n\n",
 "neg":
 "/-\nCopyright (c) 2017 Mario Carneiro. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Mario Carneiro\n-/\ntheorem is_poly.neg {f : (α → ℕ) → ℤ} : is_poly f → is_poly (-f) :=\n  by\n  rw [← zero_sub]\n  exact (is_poly.const 0).sub\n#align is_poly.neg is_poly.neg\n\n",
 "ne_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.union -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\ntheorem ne_dioph : dioph { v | f v ≠ g v } :=\n  ext (dioph.union (lt_dioph df dg) (lt_dioph dg df)) fun v =>\n    by\n    dsimp\n    exact lt_or_lt_iff_ne\n#align ne_dioph ne_dioph\n\n",
 "mul_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\ntheorem mul_dioph : dioph_fn fun v => f v * g v :=\n  dioph_fn_comp2 df dg <| abs_poly_dioph (poly.proj (fin2.of_nat' 0) * poly.proj (fin2.of_nat' 1))\n#align mul_dioph mul_dioph\n\n",
 "mul_apply":
 "@[simp]\ntheorem mul_apply (f g : poly α) (x : α → ℕ) : (f * g) x = f x * g x :=\n  rfl\n#align mul_apply mul_apply\n\n",
 "modeq_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mod_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mod_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ≡ [MOD ]» -/\ntheorem modeq_dioph {h : (α → ℕ) → ℕ} (dh : dioph_fn h) : dioph fun v => «expr ≡ [MOD ]» (f v) (g v) (h v) :=\n  eq_dioph (mod_dioph df dh) (mod_dioph dg dh)\n#align modeq_dioph modeq_dioph\n\n",
 "mod_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.union -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\ntheorem mod_dioph : dioph_fn fun v => f v % g v :=\n  have :\n    dioph fun v : vector3 ℕ 3 =>\n      (v (fin2.of_nat' 2) = 0 ∨ v (fin2.of_nat' 0) < v (fin2.of_nat' 2)) ∧\n        ∃ x : ℕ, v (fin2.of_nat' 0) + v (fin2.of_nat' 2) * x = v (fin2.of_nat' 1) :=\n    dioph.inter\n      (dioph.union (eq_dioph (proj_dioph_of_nat 2) (const_dioph 0))\n        (lt_dioph (proj_dioph_of_nat 0) (proj_dioph_of_nat 2)))\n      ((dioph.vec_ex1_dioph) 3 <|\n        eq_dioph (add_dioph (proj_dioph_of_nat 1) (mul_dioph (proj_dioph_of_nat 3) (proj_dioph_of_nat 0)))\n          (proj_dioph_of_nat 2))\n  dioph_fn_comp2 df dg <|\n    (dioph_fn_vec _).2 <|\n      ext this <|\n        (vector_all_iff_forall _).1 fun z x y =>\n          show ((y = 0 ∨ z < y) ∧ ∃ c, z + y * c = x) ↔ x % y = z from\n            ⟨fun ⟨h, c, hc⟩ => by\n              rw [← hc] <;> simp <;> cases' h with x0 hl; rw [x0, mod_zero]\n              exact mod_eq_of_lt hl, fun e => by\n              rw [← e] <;>\n                exact ⟨or_iff_not_imp_left.2 fun h => mod_lt _ (nat.pos_of_ne_zero h), x / y, mod_add_div _ _⟩⟩\n#align mod_dioph mod_dioph\n\n",
 "map_apply":
 "@[simp]\ntheorem map_apply {α β} (f : α → β) (g : poly α) (v) : map f g v = g (v ∘ f) :=\n  rfl\n#align map_apply map_apply\n\n",
 "lt_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `le_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\ntheorem lt_dioph : dioph { v | f v < g v } :=\n  le_dioph (add_dioph df (const_dioph 1)) dg\n#align lt_dioph lt_dioph\n\n",
 "le_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\ntheorem le_dioph : dioph { v | f v ≤ g v } :=\n  dioph_comp2 df dg <|\n    ext\n      ((dioph.vec_ex1_dioph) 2 <|\n        eq_dioph (add_dioph (proj_dioph_of_nat 1) (proj_dioph_of_nat 0)) (proj_dioph_of_nat 2))\n      fun v => ⟨fun ⟨x, hx⟩ => le.intro hx, le.dest⟩\n#align le_dioph le_dioph\n\n",
 "is_poly":
 "/-- The underlying function of a `poly` is a polynomial -/\nprotected theorem is_poly (f : poly α) : is_poly f :=\n  f.2\n#align is_poly is_poly\n\n",
 "inter":
 "theorem inter (d : dioph S) (d' : dioph S') : dioph (S ∩ S') :=\n  dioph_list.all₂ [S, S'] ⟨d, d'⟩\n#align inter inter\n\n",
 "inject_dummies_lem":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\ntheorem inject_dummies_lem (f : β → γ) (g : γ → option β) (inv : ∀ x, g (f x) = some x) (p : poly (Sum α β))\n    (v : α → ℕ) : (∃ t, p («expr ⊗ » v t) = 0) ↔ ∃ t, p.map («expr ⊗ » inl (inr ∘ f)) («expr ⊗ » v t) = 0 :=\n  by\n  dsimp; refine' ⟨fun t => _, fun t => _⟩ <;> cases' t with t ht\n  · have : «expr ⊗ » v («expr ::ₒ » 0 t ∘ g) ∘ «expr ⊗ » inl (inr ∘ f) = «expr ⊗ » v t :=\n      funext fun s => by cases' s with a b <;> dsimp [(· ∘ ·)] <;> try rw [inv] <;> rfl\n    exact ⟨«expr ::ₒ » 0 t ∘ g, by rwa [this]⟩\n  · have : «expr ⊗ » v (t ∘ f) = «expr ⊗ » v t ∘ «expr ⊗ » inl (inr ∘ f) := funext fun s => by cases' s with a b <;> rfl\n    exact ⟨t ∘ f, by rwa [this]⟩\n#align inject_dummies_lem inject_dummies_lem\n\n",
 "inject_dummies":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\ntheorem inject_dummies (f : β → γ) (g : γ → option β) (inv : ∀ x, g (f x) = some x) (p : poly (Sum α β))\n    (h : ∀ v, S v ↔ ∃ t, p («expr ⊗ » v t) = 0) : ∃ q : poly (Sum α γ), ∀ v, S v ↔ ∃ t, q («expr ⊗ » v t) = 0 :=\n  ⟨p.map («expr ⊗ » inl (inr ∘ f)), fun v => (h v).trans <| inject_dummies_lem f g inv _ _⟩\n#align inject_dummies inject_dummies\n\n",
 "induction":
 "theorem induction {C : poly α → Prop} (H1 : ∀ i, C (proj i)) (H2 : ∀ n, C (const n)) (H3 : ∀ f g, C f → C g → C (f - g))\n    (H4 : ∀ f g, C f → C g → C (f * g)) (f : poly α) : C f :=\n  by\n  cases' f with f pf\n  induction' pf with i n f g pf pg ihf ihg f g pf pg ihf ihg\n  apply H1; apply H2; apply H3 _ _ ihf ihg; apply H4 _ _ ihf ihg\n#align induction induction\n\n",
 "ext":
 "theorem ext (d : dioph S) (H : ∀ v, v ∈ S ↔ v ∈ S') : dioph S' := by rwa [← Set.ext H]\n#align ext ext\n\n",
 "ex_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\ntheorem ex_dioph {S : set (Sum α β → ℕ)} : dioph S → dioph { v | ∃ x, «expr ⊗ » v x ∈ S }\n  | ⟨γ, p, pe⟩ =>\n    ⟨Sum β γ, p.map («expr ⊗ » («expr ⊗ » inl (inr ∘ inl)) (inr ∘ inr)), fun v =>\n      ⟨fun ⟨x, hx⟩ =>\n        let ⟨t, ht⟩ := (pe _).1 hx\n        ⟨«expr ⊗ » x t, by\n          simp <;>\n              rw [show\n                  «expr ⊗ » v («expr ⊗ » x t) ∘ «expr ⊗ » («expr ⊗ » inl (inr ∘ inl)) (inr ∘ inr) =\n                    «expr ⊗ » («expr ⊗ » v x) t\n                  from funext fun s => by cases' s with a b <;> try cases a <;> rfl] <;>\n            exact ht⟩,\n        fun ⟨t, ht⟩ =>\n        ⟨t ∘ inl,\n          (pe _).2\n            ⟨t ∘ inr, by\n              simp at ht <;>\n                rwa [show\n                    «expr ⊗ » v t ∘ «expr ⊗ » («expr ⊗ » inl (inr ∘ inl)) (inr ∘ inr) =\n                      «expr ⊗ » («expr ⊗ » v (t ∘ inl)) (t ∘ inr)\n                    from funext fun s => by cases' s with a b <;> try cases a <;> rfl] at\n                  ht⟩⟩⟩⟩\n#align ex_dioph ex_dioph\n\n",
 "ex1_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\ntheorem ex1_dioph {S : set (option α → ℕ)} : dioph S → dioph { v | ∃ x, «expr ::ₒ » x v ∈ S }\n  | ⟨β, p, pe⟩ =>\n    ⟨option β, p.map («expr ⊗ » («expr ::ₒ » (inr none) inl) (inr ∘ some)), fun v =>\n      ⟨fun ⟨x, hx⟩ =>\n        let ⟨t, ht⟩ := (pe _).1 hx\n        ⟨«expr ::ₒ » x t, by\n          simp <;>\n              rw [show\n                  «expr ⊗ » v («expr ::ₒ » x t) ∘ «expr ⊗ » («expr ::ₒ » (inr none) inl) (inr ∘ some) =\n                    «expr ⊗ » («expr ::ₒ » x v) t\n                  from funext fun s => by cases' s with a b <;> try cases a <;> rfl] <;>\n            exact ht⟩,\n        fun ⟨t, ht⟩ =>\n        ⟨t none,\n          (pe _).2\n            ⟨t ∘ some, by\n              simp at ht <;>\n                rwa [show\n                    «expr ⊗ » v t ∘ «expr ⊗ » («expr ::ₒ » (inr none) inl) (inr ∘ some) =\n                      «expr ⊗ » («expr ::ₒ » (t none) v) (t ∘ some)\n                    from funext fun s => by cases' s with a b <;> try cases a <;> rfl] at\n                  ht⟩⟩⟩⟩\n#align ex1_dioph ex1_dioph\n\n",
 "eq_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\ntheorem eq_dioph : dioph fun v => f v = g v :=\n  dioph_comp2 df dg <|\n    of_no_dummies _ (poly.proj (fin2.of_nat' 0) - poly.proj (fin2.of_nat' 1)) fun v =>\n      (Int.ofNat_inj _ _).symm.trans\n        ⟨@sub_eq_zero_of_eq ℤ _ (v (fin2.of_nat' 0)) (v (fin2.of_nat' 1)), eq_of_sub_eq_zero⟩\n#align eq_dioph eq_dioph\n\n",
 "dvd_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.vec_ex1_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector.list -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list -/\ntheorem dvd_dioph : dioph fun v => f v ∣ g v :=\n  dioph_comp\n    ((dioph.vec_ex1_dioph) 2 <| eq_dioph (proj_dioph_of_nat 2) (mul_dioph (proj_dioph_of_nat 1) (proj_dioph_of_nat 0)))\n    (vector.list \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list\") ⟨df, dg⟩\n#align dvd_dioph dvd_dioph\n\n",
 "dom_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →. » -/\ntheorem dom_dioph {f : «expr →. » (α → ℕ) ℕ} (d : dioph_pfun f) : dioph f.dom :=\n  cast (congr_arg dioph <| Set.ext fun v => (pfun.dom_iff_graph _ _).symm) (ex1_dioph d)\n#align dom_dioph dom_dioph\n\n",
 "div_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.union -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `eq_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `dioph.inter -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `le_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `lt_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `mul_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `add_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `const_dioph -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `proj_dioph_of_nat -/\ntheorem div_dioph : dioph_fn fun v => f v / g v :=\n  have :\n    dioph fun v : vector3 ℕ 3 =>\n      v (fin2.of_nat' 2) = 0 ∧ v (fin2.of_nat' 0) = 0 ∨\n        v (fin2.of_nat' 0) * v (fin2.of_nat' 2) ≤ v (fin2.of_nat' 1) ∧\n          v (fin2.of_nat' 1) < (v (fin2.of_nat' 0) + 1) * v (fin2.of_nat' 2) :=\n    dioph.union\n      (dioph.inter (eq_dioph (proj_dioph_of_nat 2) (const_dioph 0)) (eq_dioph (proj_dioph_of_nat 0) (const_dioph 0)))\n      (dioph.inter (le_dioph (mul_dioph (proj_dioph_of_nat 0) (proj_dioph_of_nat 2)) (proj_dioph_of_nat 1))\n        (lt_dioph (proj_dioph_of_nat 1)\n          (mul_dioph (add_dioph (proj_dioph_of_nat 0) (const_dioph 1)) (proj_dioph_of_nat 2))))\n  dioph_fn_comp2 df dg <|\n    (dioph_fn_vec _).2 <|\n      ext this <|\n        (vector_all_iff_forall _).1 fun z x y =>\n          show y = 0 ∧ z = 0 ∨ z * y ≤ x ∧ x < (z + 1) * y ↔ x / y = z by\n            refine' iff.trans _ eq_comm <;>\n              exact\n                y.eq_zero_or_pos.elim\n                  (fun y0 => by\n                    rw [y0, nat.div_zero] <;>\n                      exact\n                        ⟨fun o => (o.resolve_right fun ⟨_, h2⟩ => nat.not_lt_zero _ h2).right, fun z0 =>\n                          or.inl ⟨rfl, z0⟩⟩)\n                  fun ypos =>\n                  iff.trans ⟨fun o => o.resolve_left fun ⟨h1, _⟩ => ne_of_gt ypos h1, or.inr⟩\n                    (le_antisymm_iff.trans <|\n                        and_congr (nat.le_div_iff_mul_le ypos) <|\n                          iff.trans ⟨lt_succ_of_le, le_of_lt_succ⟩ (div_lt_iff_lt_mul ypos)).symm\n#align div_dioph div_dioph\n\n",
 "dioph_pfun_vec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr →. » -/\ntheorem dioph_pfun_vec (f : «expr →. » (vector3 ℕ n) ℕ) : dioph_pfun f ↔ dioph { v | f.graph (v ∘ fs, v fz) } :=\n  ⟨reindex_dioph _ («expr ::ₒ » fz fs), reindex_dioph _ (sym.cons' none some)⟩\n#align dioph_pfun_vec dioph_pfun_vec\n\n",
 "dioph_pfun_comp1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\ntheorem dioph_pfun_comp1 {S : set (option α → ℕ)} (d : dioph S) {f} (df : dioph_pfun f) :\n    dioph { v : α → ℕ | ∃ h : f.dom v, «expr ::ₒ » (f.fn v h) v ∈ S } :=\n  ext (ex1_dioph (d.inter df)) fun v =>\n    ⟨fun ⟨x, hS, (h : Exists _)⟩ => by\n      rw [show «expr ::ₒ » x v ∘ some = v from funext fun s => rfl] at h <;> cases' h with hf h <;> refine' ⟨hf, _⟩ <;>\n          rw [pfun.fn, h] <;>\n        exact hS,\n      fun ⟨x, hS⟩ =>\n      ⟨f.fn v x, hS,\n        show Exists _ by rw [show «expr ::ₒ » (f.fn v x) v ∘ some = v from funext fun s => rfl] <;> exact ⟨x, rfl⟩⟩⟩\n#align dioph_pfun_comp1 dioph_pfun_comp1\n\n",
 "dioph_fn_vec_comp1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\ntheorem dioph_fn_vec_comp1 {S : set (vector3 ℕ (succ n))} (d : dioph S) {f : vector3 ℕ n → ℕ} (df : dioph_fn f) :\n    dioph { v : vector3 ℕ n | sym.cons' (f v) v ∈ S } :=\n  ext (dioph_fn_comp1 (reindex_dioph _ (sym.cons' none some) d) df) fun v =>\n    by\n    dsimp\n    congr\n    ext x\n    cases x <;> rfl\n#align dioph_fn_vec_comp1 dioph_fn_vec_comp1\n\n",
 "dioph_fn_vec":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\ntheorem dioph_fn_vec (f : vector3 ℕ n → ℕ) : dioph_fn f ↔ dioph { v | f (v ∘ fs) = v fz } :=\n  ⟨reindex_dioph _ («expr ::ₒ » fz fs), reindex_dioph _ (sym.cons' none some)⟩\n#align dioph_fn_vec dioph_fn_vec\n\n",
 "dioph_fn_iff_pfun":
 "theorem dioph_fn_iff_pfun (f : (α → ℕ) → ℕ) : dioph_fn f = @dioph_pfun α f := by\n  refine' congr_arg dioph (Set.ext fun v => _) <;> exact pfun.lift_graph.symm\n#align dioph_fn_iff_pfun dioph_fn_iff_pfun\n\n",
 "dioph_fn_compn":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\ntheorem dioph_fn_compn :\n    ∀ {n} {S : set (Sum α (fin2 n) → ℕ)} (d : dioph S) {f : vector3 ((α → ℕ) → ℕ) n} (df : vector_allp dioph_fn f),\n      dioph { v : α → ℕ | («expr ⊗ » v fun i => f i v) ∈ S }\n  | 0, S, d, f => fun df =>\n    ext (reindex_dioph _ («expr ⊗ » id fin2.elim0) d) fun v =>\n      by\n      dsimp\n      congr\n      ext x\n      obtain _ | _ | _ := x\n      rfl\n  | succ n, S, d, f =>\n    f.cons_elim fun f fl => by\n      simp <;>\n        exact fun df dfl =>\n          have : dioph { v | «expr ⊗ » (v ∘ inl) (sym.cons' (f (v ∘ inl)) (v ∘ inr)) ∈ S } :=\n            ext\n              (dioph_fn_comp1 (reindex_dioph _ («expr ⊗ » (some ∘ inl) (sym.cons' none (some ∘ inr))) d) <|\n                reindex_dioph_fn inl df)\n              fun v => by\n              dsimp\n              congr\n              ext x\n              obtain _ | _ | _ := x <;> rfl\n          have : dioph { v | «expr ⊗ » v (sym.cons' (f v) fun i : fin2 n => fl i v) ∈ S } :=\n            @dioph_fn_compn n (fun v => S («expr ⊗ » (v ∘ inl) (sym.cons' (f (v ∘ inl)) (v ∘ inr)))) this _ dfl\n          ext this fun v => by\n            dsimp\n            congr\n            ext x\n            obtain _ | _ | _ := x <;> rfl\n#align dioph_fn_compn dioph_fn_compn\n\n",
 "dioph_fn_comp2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector.list -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\ntheorem dioph_fn_comp2 {h : ℕ → ℕ → ℕ}\n    (d : dioph_fn fun v : vector3 ℕ 2 => h (v (fin2.of_nat' 0)) (v (fin2.of_nat' 1))) :\n    dioph_fn fun v => h (f v) (g v) :=\n  dioph_fn_comp d (vector.list \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list\")\n    ⟨df, dg⟩\n#align dioph_fn_comp2 dioph_fn_comp2\n\n",
 "dioph_fn_comp1":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ::ₒ » -/\ntheorem dioph_fn_comp1 {S : set (option α → ℕ)} (d : dioph S) {f : (α → ℕ) → ℕ} (df : dioph_fn f) :\n    dioph { v | «expr ::ₒ » (f v) v ∈ S } :=\n  ext (dioph_pfun_comp1 d <| cast (dioph_fn_iff_pfun f) df) fun v => ⟨fun ⟨_, h⟩ => h, fun h => ⟨trivial, h⟩⟩\n#align dioph_fn_comp1 dioph_fn_comp1\n\n",
 "dioph_fn_comp":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\ntheorem dioph_fn_comp {f : vector3 ℕ n → ℕ} (df : dioph_fn f) (g : vector3 ((α → ℕ) → ℕ) n)\n    (dg : vector_allp dioph_fn g) : dioph_fn fun v => f fun i => g i v :=\n  dioph_comp ((dioph_fn_vec _).1 df) (sym.cons' (fun v => v none) fun i v => g i (v ∘ some)) <| by\n    simp <;>\n      exact\n        ⟨proj_dioph none,\n          (vector_allp_iff_forall _ _).2 fun i => reindex_dioph_fn _ <| (vector_allp_iff_forall _ _).1 dg _⟩\n#align dioph_fn_comp dioph_fn_comp\n\n",
 "dioph_comp2":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `vector.list -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\ntheorem dioph_comp2 {S : ℕ → ℕ → Prop} (d : dioph fun v : vector3 ℕ 2 => S (v (fin2.of_nat' 0)) (v (fin2.of_nat' 1))) :\n    dioph fun v => S (f v) (g v) :=\n  dioph_comp d (vector.list \"./././Mathport/Syntax/Translate/Expr.lean:210:13: unsupported notation `vector.list\")\n    ⟨df, dg⟩\n#align dioph_comp2 dioph_comp2\n\n",
 "dioph_comp":
 "theorem dioph_comp {S : set (vector3 ℕ n)} (d : dioph S) (f : vector3 ((α → ℕ) → ℕ) n) (df : vector_allp dioph_fn f) :\n    dioph { v | (fun i => f i v) ∈ S } :=\n  dioph_fn_compn (reindex_dioph _ inr d) df\n#align dioph_comp dioph_comp\n\n",
 "const_dioph":
 "theorem const_dioph (n : ℕ) : dioph_fn (const (α → ℕ) n) :=\n  abs_poly_dioph (poly.const n)\n#align const_dioph const_dioph\n\n",
 "const_apply":
 "@[simp]\ntheorem const_apply (n) (x : α → ℕ) : const n x = n :=\n  rfl\n#align const_apply const_apply\n\n",
 "coe_zero":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_zero : «expr⇑ » (0 : poly α) = const 0 :=\n  rfl\n#align coe_zero coe_zero\n\n",
 "coe_sub":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_sub (f g : poly α) : «expr⇑ » (f - g) = f - g :=\n  rfl\n#align coe_sub coe_sub\n\n",
 "coe_one":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_one : «expr⇑ » (1 : poly α) = const 1 :=\n  rfl\n#align coe_one coe_one\n\n",
 "coe_neg":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_neg (f : poly α) : «expr⇑ » (-f) = -f :=\n  rfl\n#align coe_neg coe_neg\n\n",
 "coe_mul":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_mul (f g : poly α) : «expr⇑ » (f * g) = f * g :=\n  rfl\n#align coe_mul coe_mul\n\n",
 "coe_add":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⇑ » -/\n@[simp]\ntheorem coe_add (f g : poly α) : «expr⇑ » (f + g) = f + g :=\n  rfl\n#align coe_add coe_add\n\n",
 "all₂":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:177:8: unsupported: ambiguous notation -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `sym.cons' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ⊗ » -/\ntheorem dioph_list.all₂ (l : list (set <| α → ℕ)) (d : l.all₂ dioph) :\n    dioph { v | l.all₂ fun S : set (α → ℕ) => v ∈ S } :=\n  by\n  suffices\n    ∃ (β : _)(pl : list (poly (Sum α β))),\n      ∀ v, List.All₂ (fun S : set _ => S v) l ↔ ∃ t, List.All₂ (fun p : poly (Sum α β) => p («expr ⊗ » v t) = 0) pl\n    from\n    let ⟨β, pl, h⟩ := this\n    ⟨β, poly.sumsq pl, fun v => (h v).trans <| exists_congr fun t => (poly.sumsq_eq_zero _ _).symm⟩\n  induction' l with S l IH\n  exact ⟨ULift empty, [], fun v => by simp <;> exact ⟨fun ⟨t⟩ => empty.rec _ t, trivial⟩⟩\n  simp at d\n  exact\n    let ⟨⟨β, p, pe⟩, dl⟩ := d\n    let ⟨γ, pl, ple⟩ := IH dl\n    ⟨Sum β γ, sym.cons' (p.map («expr ⊗ » inl (inr ∘ inl))) (pl.map fun q => q.map («expr ⊗ » inl (inr ∘ inr))),\n      fun v => by\n      simp <;>\n        exact\n          iff.trans (and_congr (pe v) (ple v))\n            ⟨fun ⟨⟨m, hm⟩, ⟨n, hn⟩⟩ =>\n              ⟨«expr ⊗ » m n, by\n                rw [show «expr ⊗ » v («expr ⊗ » m n) ∘ «expr ⊗ » inl (inr ∘ inl) = «expr ⊗ » v m from\n                      funext fun s => by cases' s with a b <;> rfl] <;>\n                  exact hm,\n                by\n                refine' List.All₂.imp (fun q hq => _) hn\n                dsimp [(· ∘ ·)]\n                rw [show\n                      (fun x : Sum α γ => («expr ⊗ » v («expr ⊗ » m n)) ((«expr ⊗ » inl fun x : γ => inr (inr x)) x)) =\n                        «expr ⊗ » v n\n                      from funext fun s => by cases' s with a b <;> rfl] <;>\n                  exact hq⟩,\n              fun ⟨t, hl, hr⟩ =>\n              ⟨⟨t ∘ inl, by\n                  rwa [show «expr ⊗ » v t ∘ «expr ⊗ » inl (inr ∘ inl) = «expr ⊗ » v (t ∘ inl) from\n                      funext fun s => by cases' s with a b <;> rfl] at\n                    hl⟩,\n                ⟨t ∘ inr, by\n                  refine' List.All₂.imp (fun q hq => _) hr\n                  dsimp [(· ∘ ·)] at hq\n                  rwa [show\n                      (fun x : Sum α γ => («expr ⊗ » v t) ((«expr ⊗ » inl fun x : γ => inr (inr x)) x)) =\n                        «expr ⊗ » v (t ∘ inr)\n                      from funext fun s => by cases' s with a b <;> rfl] at\n                    hq⟩⟩⟩⟩\n#align dioph_list.all₂ dioph_list.all₂\n\n",
 "add_dioph":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `fin2.of_nat' -/\ntheorem add_dioph : dioph_fn fun v => f v + g v :=\n  dioph_fn_comp2 df dg <| abs_poly_dioph (poly.proj (fin2.of_nat' 0) + poly.proj (fin2.of_nat' 1))\n#align add_dioph add_dioph\n\n",
 "add_apply":
 "@[simp]\ntheorem add_apply (f g : poly α) (x : α → ℕ) : (f + g) x = f x + g x :=\n  rfl\n#align add_apply add_apply\n\n",
 "add":
 "theorem is_poly.add {f g : (α → ℕ) → ℤ} (hf : is_poly f) (hg : is_poly g) : is_poly (f + g) :=\n  by\n  rw [← sub_neg_eq_add]\n  exact hf.sub hg.neg\n#align is_poly.add is_poly.add\n\n",
 "abs_poly_dioph":
 "theorem abs_poly_dioph (p : poly α) : dioph_fn fun v => (p v).nat_abs :=\n  of_no_dummies _ ((p.map some - poly.proj none) * (p.map some + poly.proj none)) fun v =>\n    by\n    dsimp\n    exact Int.eq_natAbs_iff_mul_eq_zero\n#align abs_poly_dioph abs_poly_dioph\n\n"}