{"zero_lt_one_add":
 "#print Nat.zero_lt_one_add /-\n-- TODO(Leo): move this lemma, or delete it after we add algebraic normalizer.\ntheorem Nat.zero_lt_one_add (a : nat) : 0 < 1 + a :=\n  suffices 0 < a + 1 by\n    simp [nat.add_comm]\n    assumption\n  nat.zero_lt_succ _\n#align nat.zero_lt_one_add Nat.zero_lt_one_add\n-/\n\n",
 "lt_add_right":
 "#print Nat.lt_add_right /-\n-- TODO(Leo): move this lemma, or delete it after we add algebraic normalizer.\ntheorem Nat.lt_add_right (a b c : nat) : a < b → a < b + c := fun h => lt_of_lt_of_le h (nat.le_add_right _ _)\n#align nat.lt_add_right Nat.lt_add_right\n-/\n\n",
 "lt_add_of_zero_lt_left":
 "#print Nat.lt_add_of_zero_lt_left /-\n/-\nCopyright (c) 2017 Microsoft Corporation. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Leonardo de Moura\n-/\n-- TODO(Leo): move this lemma, or delete it after we add algebraic normalizer. \n-- TODO(Leo): move this lemma, or delete it after we add algebraic normalizer.\ntheorem Nat.lt_add_of_zero_lt_left (a b : nat) (h : 0 < b) : a < a + b :=\n  show a + 0 < a + b by\n    apply nat.add_lt_add_left\n    assumption\n#align nat.lt_add_of_zero_lt_left Nat.lt_add_of_zero_lt_left\n-/\n\n",
 "lt_add_left":
 "#print Nat.lt_add_left /-\n-- TODO(Leo): move this lemma, or delete it after we add algebraic normalizer.\ntheorem Nat.lt_add_left (a b c : nat) : a < b → a < c + b := fun h => lt_of_lt_of_le h (nat.le_add_left _ _)\n#align nat.lt_add_left Nat.lt_add_left\n-/\n\n"}