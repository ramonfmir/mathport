{"if_true_right_eq_or":
 "#print if_true_right_eq_or /-\n/-\nCopyright (c) 2017 Microsoft Corporation. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Leonardo de Moura\n-/\n@[simp]\ntheorem if_true_right_eq_or (p : Prop) [h : Decidable p] (q : Prop) : (if p then q else True) = (¬p ∨ q) := by\n  by_cases p <;> simp [h]\n#align if_true_right_eq_or if_true_right_eq_or\n-/\n\n",
 "if_true_left_eq_or":
 "#print if_true_left_eq_or /-\n@[simp]\ntheorem if_true_left_eq_or (p : Prop) [h : Decidable p] (q : Prop) : (if p then True else q) = (p ∨ q) := by\n  by_cases p <;> simp [h]\n#align if_true_left_eq_or if_true_left_eq_or\n-/\n\n",
 "if_false_right_eq_and":
 "#print if_false_right_eq_and /-\n@[simp]\ntheorem if_false_right_eq_and (p : Prop) [h : Decidable p] (q : Prop) : (if p then q else False) = (p ∧ q) := by\n  by_cases p <;> simp [h]\n#align if_false_right_eq_and if_false_right_eq_and\n-/\n\n",
 "if_false_left_eq_and":
 "#print if_false_left_eq_and /-\n@[simp]\ntheorem if_false_left_eq_and (p : Prop) [h : Decidable p] (q : Prop) : (if p then False else q) = (¬p ∧ q) := by\n  by_cases p <;> simp [h]\n#align if_false_left_eq_and if_false_left_eq_and\n-/\n\n"}