{"monad_map_refl":
 "@[simp]\ntheorem monad_map_refl {m m' : Type u → Type v} (f : ∀ {α}, m α → m' α) {α} : (monad_map @f : m α → m' α) = f :=\n  rfl\n#align monad_map_refl monad_map_refl\n\n",
 "monad_lift_refl":
 "/-\nCopyright (c) 2016 Gabriel Ebner. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthors: Gabriel Ebner, Sebastian Ullrich\n\nClassy functions for lifting monadic actions of different shapes.\n\nThis theory is roughly modeled after the Haskell 'layers' package https://hackage.haskell.org/package/layers-0.1.\nPlease see https://hackage.haskell.org/package/layers-0.1/docs/Documentation-Layers-Overview.html for an exhaustive discussion of the different approaches to lift functions.\n-/\n@[simp]\ntheorem monad_lift_refl {m : Type u → Type v} {α} : (monad_lift : m α → m α) = id :=\n  rfl\n#align monad_lift_refl monad_lift_refl\n\n"}