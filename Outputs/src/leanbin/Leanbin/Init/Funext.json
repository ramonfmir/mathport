{"trans":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\nprotected theorem equiv.trans {f₁ f₂ f₃ : ∀ x : α, β x} : «expr ~ » f₁ f₂ → «expr ~ » f₂ f₃ → «expr ~ » f₁ f₃ :=\n  fun h₁ h₂ x => eq.trans (h₁ x) (h₂ x)\n#align equiv.trans equiv.trans\n\n",
 "symm":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\nprotected theorem equiv.symm {f₁ f₂ : ∀ x : α, β x} : «expr ~ » f₁ f₂ → «expr ~ » f₂ f₁ := fun h x => eq.symm (h x)\n#align equiv.symm equiv.symm\n\n",
 "refl":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr ~ » -/\n/-\nCopyright (c) 2015 Microsoft Corporation. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthor: Jeremy Avigad\n\nExtensional equality for functions, and a proof of function extensionality from quotients.\n-/\nprotected theorem equiv.refl (f : ∀ x : α, β x) : «expr ~ » f f := fun x => rfl\n#align equiv.refl equiv.refl\n\n",
 "is_equivalence":
 "protected theorem equiv.is_equivalence (α : Sort u) (β : α → Sort v) : equivalence (@function.equiv α β) :=\n  Equivalence.mk (@function.equiv α β) (@equiv.refl α β) (@equiv.symm α β) (@equiv.trans α β)\n#align equiv.is_equivalence equiv.is_equivalence\n\n",
 "funext":
 "/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟦ ⟧» -/\n/- ./././Mathport/Syntax/Translate/Expr.lean:207:4: warning: unsupported notation `«expr⟦ ⟧» -/\n#print funext /-\n/-- Function extensionality, proven using quotients. -/\ntheorem funext {f₁ f₂ : ∀ x : α, β x} (h : ∀ x, f₁ x = f₂ x) : f₁ = f₂ :=\n  show extfun_app («expr⟦ ⟧» f₁) = extfun_app («expr⟦ ⟧» f₂) from congr_arg extfun_app (sound h)\n#align funext funext\n-/\n\n"}